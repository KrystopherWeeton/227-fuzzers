; ModuleID = '../../third_party/blink/renderer/core/css/css_property_value_set.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_property_value_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.564" }
%"struct.std::__1::atomic.564" = type { %"struct.std::__1::__atomic_base.565" }
%"struct.std::__1::__atomic_base.565" = type { %"struct.std::__1::__atomic_base.566" }
%"struct.std::__1::__atomic_base.566" = type { %"struct.std::__1::__cxx_atomic_impl.567" }
%"struct.std::__1::__cxx_atomic_impl.567" = type { %"struct.std::__1::__cxx_atomic_base_impl.568" }
%"struct.std::__1::__cxx_atomic_base_impl.568" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.74", i32, [4 x i8], %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.251", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.190", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl.113" }
%"struct.std::__1::__cxx_atomic_impl.113" = type { %"struct.std::__1::__cxx_atomic_base_impl.114" }
%"struct.std::__1::__cxx_atomic_base_impl.114" = type { i64 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist.163"* }
%"class.blink::Worklist.163" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.170", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { i64 }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { float }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.193", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.202" }
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204" }
%"class.WTF::VectorBufferBase.204" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.232" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.121"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.135"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.149"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.255" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.250 }
%class.scoped_refptr.250 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl.253" }
%"struct.std::__1::__cxx_atomic_impl.253" = type { %"struct.std::__1::__cxx_atomic_base_impl.254" }
%"struct.std::__1::__cxx_atomic_base_impl.254" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.3", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.8" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.41", i32, i8, [3 x i8], %"class.blink::HeapVector.43", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.62", %"class.blink::Member.68", %"class.blink::Member.70", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.20" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.17" }
%"class.WTF::HashTable.17" = type <{ %"class.blink::WeakMember.19"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.19" = type opaque
%"class.blink::Supplementable.20" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.21" }
%"class.blink::HeapHashMap.21" = type { %"class.WTF::HashMap.24" }
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.27"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.27" = type { i8*, %"class.blink::Member.540" }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.542" }
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.28, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.blink::Member.36", i32, [4 x i8], %"class.WTF::HashSet.37", i32, i32 }
%class.scoped_refptr.28 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.7" }
%"class.WTF::HashSet.37" = type { %"class.WTF::HashTable.38" }
%"class.WTF::HashTable.38" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.43" = type { %"class.WTF::Vector.46" }
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"class.blink::Member.49"*, i32, i32 }
%"class.blink::Member.49" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.55", i32, i32 }
%"class.blink::HeapHashMap.55" = type { %"class.WTF::HashMap.58" }
%"class.WTF::HashMap.58" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair.61"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.61" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [96 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::StylePropertySerializer" = type { %"class.blink::StylePropertySerializer::CSSPropertyValueSetForSerializer" }
%"class.blink::StylePropertySerializer::CSSPropertyValueSetForSerializer" = type <{ %"class.blink::Member.528", i32, [4 x i8], %"class.std::__1::bitset", i8, [7 x i8] }>
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [10 x i64] }
%"class.blink::StylePropertyShorthand" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.555 }
%union.anon.555 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.262", %"class.WTF::String", %"class.blink::HeapVector.264", %"class.blink::HeapVector.271", %"class.blink::HeapVector.279", %"class.WTF::HashMap.287", %"class.WTF::AtomicString", %"class.blink::WeakMember.292", i8, [7 x i8], %"class.blink::Member.294", %"class.blink::HeapHashSet.318", %"class.blink::HeapHashSet.318", %"class.blink::Member.325", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.264" = type { %"class.WTF::Vector.267" }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"class.blink::Member.262"*, i32, i32 }
%"class.blink::HeapVector.271" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::Member.277"*, i32, i32 }
%"class.blink::Member.277" = type opaque
%"class.blink::HeapVector.279" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::Member.285"*, i32, i32 }
%"class.blink::Member.285" = type opaque
%"class.WTF::HashMap.287" = type { %"class.WTF::HashTable.288" }
%"class.WTF::HashTable.288" = type <{ %"struct.WTF::KeyValuePair.291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.291" = type opaque
%"class.blink::WeakMember.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.304, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.316", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.298" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::KURL"* }
%class.scoped_refptr.304 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.307" }
%"class.blink::HeapHashMap.307" = type { %"class.WTF::HashMap.310" }
%"class.WTF::HashMap.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ %"struct.WTF::KeyValuePair.313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.313" = type { %"class.blink::WeakMember.314", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::HeapHashSet.318" = type { %"class.WTF::HashSet.321" }
%"class.WTF::HashSet.321" = type { %"class.WTF::HashTable.322" }
%"class.WTF::HashTable.322" = type <{ %"class.blink::WeakMember.324"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.324" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.329", %"class.blink::HeapHashMap.329", %"class.blink::HeapHashMap.329", %"class.blink::HeapHashMap.329", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::HeapVector.336", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.407", %"class.blink::HeapVector.415", %"class.blink::HeapVector.423", %"class.blink::HeapVector.440", %"class.blink::HeapVector.448", %"class.blink::HeapVector.456", %"class.blink::HeapVector.464", %"class.WTF::Vector.471", i32, %"class.blink::Member.495" }
%"class.blink::HeapHashMap.329" = type { %"class.WTF::HashMap.332" }
%"class.WTF::HashMap.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"struct.WTF::KeyValuePair.335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.335" = type { %"class.WTF::AtomicString", %"class.blink::Member.550" }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::HeapVector.336"* }
%"class.blink::HeapVector.336" = type { %"class.WTF::Vector.339" }
%"class.WTF::Vector.339" = type { %"class.WTF::VectorBuffer.340" }
%"class.WTF::VectorBuffer.340" = type { %"class.WTF::VectorBufferBase.341" }
%"class.WTF::VectorBufferBase.341" = type { %"class.blink::Member.342"*, i32, i32 }
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.346", i64, [4 x i32] }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.373", %"class.blink::Member.375" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.380", %"class.WTF::HashMap.380", %"class.WTF::HashMap.380", %"class.WTF::HashMap.385", %class.scoped_refptr.390, %class.scoped_refptr.401, %class.scoped_refptr.400, %"class.WTF::Vector.402", %"class.WTF::Vector.402", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ %"struct.WTF::KeyValuePair.384"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.384" = type { %"class.WTF::AtomicString", %class.scoped_refptr.544 }
%class.scoped_refptr.544 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.391", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.397", %"union.blink::InvalidationSet::Backing.398", %"union.blink::InvalidationSet::Backing.399", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.391" = type { %"class.base::RefCounted.392" }
%"class.base::RefCounted.392" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.397" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.398" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.399" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"struct.WTF::KeyValuePair.389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.389" = type opaque
%class.scoped_refptr.390 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.400, %class.scoped_refptr.400 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.391", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.397", %"union.blink::InvalidationSet::Backing.398", %"union.blink::InvalidationSet::Backing.399", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.401 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.400 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::HeapVector.407" = type { %"class.WTF::Vector.410" }
%"class.WTF::Vector.410" = type { %"class.WTF::VectorBuffer.411" }
%"class.WTF::VectorBuffer.411" = type { %"class.WTF::VectorBufferBase.412" }
%"class.WTF::VectorBufferBase.412" = type { %"class.blink::Member.413"*, i32, i32 }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.373", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.415" = type { %"class.WTF::Vector.418" }
%"class.WTF::Vector.418" = type { %"class.WTF::VectorBuffer.419" }
%"class.WTF::VectorBuffer.419" = type { %"class.WTF::VectorBufferBase.420" }
%"class.WTF::VectorBufferBase.420" = type { %"class.blink::Member.421"*, i32, i32 }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.373" }
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::Member.429"*, i32, i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.431", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.437"*, i32, i32 }
%"class.blink::Member.437" = type opaque
%"class.blink::HeapVector.440" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::Member.446"*, i32, i32 }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.373" }
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.454"*, i32, i32 }
%"class.blink::Member.454" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::HeapVector.456" = type { %"class.WTF::Vector.459" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::Member.462"*, i32, i32 }
%"class.blink::Member.462" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::HeapVector.464" = type { %"class.WTF::Vector.467" }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.346", i32, i32 }
%"class.WTF::Vector.471" = type { %"class.WTF::VectorBuffer.472" }
%"class.WTF::VectorBuffer.472" = type { %"class.WTF::VectorBufferBase.473" }
%"class.WTF::VectorBufferBase.473" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.474, i8, [7 x i8] }>
%class.scoped_refptr.474 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.475", %"class.WTF::Vector.477" }
%"class.WTF::RefCounted.475" = type { %"class.base::RefCounted.476" }
%"class.base::RefCounted.476" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.std::__1::unique_ptr.480"*, i32, i32 }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.483", %"class.WTF::String" }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.499", %"class.blink::HeapHashMap.499", %"class.blink::HeapHashMap.499", %"class.blink::HeapHashMap.499" }
%"class.blink::HeapHashMap.499" = type { %"class.WTF::HashMap.502" }
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type opaque
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::HeapVector.521" = type { %"class.WTF::Vector.524" }
%"class.WTF::Vector.524" = type { %"class.WTF::VectorBuffer.525" }
%"class.WTF::VectorBuffer.525" = type { %"class.WTF::VectorBufferBase", [6144 x i8] }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { i32*, i32, i32 }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink28ImmutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_ = comdat any

$_ZNK5blink28ImmutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_ = comdat any

$_ZNK5blink28ImmutableCSSPropertyValueSet17FindPropertyIndexINS_18AtRuleDescriptorIDEEEiT_ = comdat any

$_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_ = comdat any

$_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_ = comdat any

$_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_18AtRuleDescriptorIDEEEN3WTF6StringET_ = comdat any

$_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_ = comdat any

$_ZNK5blink19CSSPropertyValueSet16GetPropertyValueIN3WTF12AtomicStringEEENS2_6StringET_ = comdat any

$_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_ = comdat any

$_ZNK5blink19CSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_ = comdat any

$_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE = comdat any

$_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_ = comdat any

$_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE = comdat any

$_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_ = comdat any

$_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_ = comdat any

$_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantIN3WTF12AtomicStringEEEbT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink21CSSLazyPropertyParserD2Ev = comdat any

$_ZN5blink21CSSLazyPropertyParserD0Ev = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF12VectorCopierILb0EN5blink16CSSPropertyValueENS1_13HeapAllocatorEE4CopyEPKS2_S6_PS2_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_30PropertySetCSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN3WTF8internal17DeferredTraceImplIN5blink13HeapAllocatorEPNS2_7VisitorENS2_16CSSPropertyValueELj4EEEvT0_PKv = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN5blink21CSSLazyPropertyParserE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSLazyPropertyParser"*)* @_ZN5blink21CSSLazyPropertyParserD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSLazyPropertyParser"*)* @_ZN5blink21CSSLazyPropertyParserD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)* @_ZNK5blink21CSSLazyPropertyParser5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyValueSet]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16CSSPropertyValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::CSSPropertyValue, WTF::VectorTraits<blink::CSSPropertyValue> >]\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyID]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink30PropertySetCSSStyleDeclarationE = external unnamed_addr constant { [33 x i8*], [3 x i8*] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8

@_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE = hidden unnamed_addr alias void (%"class.blink::MutableCSSPropertyValueSet"*, i8), void (%"class.blink::MutableCSSPropertyValueSet"*, i8)* @_ZN5blink26MutableCSSPropertyValueSetC2ENS_13CSSParserModeE
@_ZN5blink26MutableCSSPropertyValueSetC1EPKNS_16CSSPropertyValueEj = hidden unnamed_addr alias void (%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"*, i32), void (%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"*, i32)* @_ZN5blink26MutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEj
@_ZN5blink28ImmutableCSSPropertyValueSetC1EPKNS_16CSSPropertyValueEjNS_13CSSParserModeE = hidden unnamed_addr alias void (%"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"*, i32, i8), void (%"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"*, i32, i8)* @_ZN5blink28ImmutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEjNS_13CSSParserModeE
@_ZN5blink26MutableCSSPropertyValueSetC1ERKNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink26MutableCSSPropertyValueSetC2ERKNS_19CSSPropertyValueSetE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink28ImmutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::ImmutableCSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = trunc i32 %1 to i16
  %4 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 1
  %7 = and i32 %5, 268435455
  %8 = zext i32 %7 to i64
  br label %9

9:                                                ; preds = %13, %2
  %10 = phi i64 [ %11, %13 ], [ %8, %2 ]
  %11 = add nsw i64 %10, -1
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = load i32, i32* %4, align 8
  %15 = and i32 %14, 268435455
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %6, i64 %16
  %18 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %17 to %"struct.blink::CSSPropertyValueMetadata"*
  %19 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %18, i64 %11
  %20 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %19) #9
  %21 = trunc i32 %20 to i16
  %22 = icmp eq i16 %21, %3
  br i1 %22, label %23, label %9

23:                                               ; preds = %13
  %24 = trunc i64 %11 to i32
  br label %25

25:                                               ; preds = %9, %23
  %26 = phi i32 [ %24, %23 ], [ -1, %9 ]
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink28ImmutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::ImmutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 268435455
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 1
  %9 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %8 to %"class.blink::Member"*
  %10 = and i32 %4, 268435455
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %33, %7
  %13 = phi i32 [ %4, %7 ], [ %34, %33 ]
  %14 = phi i64 [ %11, %7 ], [ %15, %33 ]
  %15 = add nsw i64 %14, -1
  %16 = and i32 %13, 268435455
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %8, i64 %17
  %19 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %18 to %"struct.blink::CSSPropertyValueMetadata"*
  %20 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %19, i64 %15
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %15, i32 0, i32 0
  %22 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %21, align 8
  %23 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %20) #9
  %24 = trunc i32 %23 to i16
  %25 = icmp eq i16 %24, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %22, i64 2, i32 2
  %28 = bitcast i8* %27 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, %1
  br i1 %30, label %35, label %31

31:                                               ; preds = %26, %12
  %32 = icmp sgt i64 %15, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %31
  %34 = load i32, i32* %3, align 8
  br label %12

35:                                               ; preds = %26
  %36 = trunc i64 %15 to i32
  br label %37

37:                                               ; preds = %31, %35, %2
  %38 = phi i32 [ -1, %2 ], [ %36, %35 ], [ -1, %31 ]
  %39 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %53

53:                                               ; preds = %37, %49, %52
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink28ImmutableCSSPropertyValueSet17FindPropertyIndexINS_18AtRuleDescriptorIDEEEiT_(%"class.blink::ImmutableCSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #9
  %4 = trunc i32 %3 to i16
  %5 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 1
  %8 = and i32 %6, 268435455
  %9 = zext i32 %8 to i64
  br label %10

10:                                               ; preds = %14, %2
  %11 = phi i64 [ %12, %14 ], [ %9, %2 ]
  %12 = add nsw i64 %11, -1
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %10
  %15 = load i32, i32* %5, align 8
  %16 = and i32 %15, 268435455
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %7, i64 %17
  %19 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %18 to %"struct.blink::CSSPropertyValueMetadata"*
  %20 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %19, i64 %12
  %21 = tail call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #9
  %22 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %20) #9
  %23 = trunc i32 %22 to i16
  %24 = icmp eq i16 %23, %4
  br i1 %24, label %25, label %10

25:                                               ; preds = %14
  %26 = trunc i64 %12 to i32
  br label %27

27:                                               ; preds = %10, %25
  %28 = phi i32 [ %26, %25 ], [ -1, %10 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::StylePropertySerializer", align 8
  %4 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %1) #9
  %5 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::StylePropertySerializer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #9
  call void @_ZN5blink23StylePropertySerializerC1ERKNS_19CSSPropertyValueSetE(%"class.blink::StylePropertySerializer"* nonnull %3, %"class.blink::CSSPropertyValueSet"* dereferenceable(4) %0) #9
  %10 = call %"class.WTF::StringImpl"* @_ZNK5blink23StylePropertySerializer18SerializeShorthandENS_13CSSPropertyIDE(%"class.blink::StylePropertySerializer"* nonnull %3, i32 %1) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #9
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %13, label %60

13:                                               ; preds = %2, %8
  %14 = phi i64 [ %11, %8 ], [ 0, %2 ]
  %15 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %0, i32 %1)
  %16 = icmp eq %"class.blink::CSSValue"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %15) #9
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  br label %43

20:                                               ; preds = %13
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = ptrtoint %"class.WTF::StringImpl"* %23 to i64
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #9
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  call void @llvm.trap() #9
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %41, %26, %20, %17
  %44 = phi i64 [ %19, %17 ], [ %24, %20 ], [ %24, %26 ], [ %24, %41 ]
  %45 = inttoptr i64 %14 to %"class.WTF::StringImpl"*
  %46 = icmp eq i64 %14, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %60

60:                                               ; preds = %8, %43, %56, %59
  %61 = phi i64 [ %44, %43 ], [ %44, %56 ], [ %44, %59 ], [ %11, %8 ]
  %62 = inttoptr i64 %61 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %62
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = load i32, i32* null, align 536870912
  br label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %12 = bitcast %"class.blink::CSSPropertyValueSet"* %11 to %"class.blink::CSSPropertyValue"**
  %13 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 %16
  %18 = trunc i32 %1 to i16
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %10, %26
  %21 = phi %"class.blink::CSSPropertyValue"* [ %27, %26 ], [ %13, %10 ]
  %22 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 0, i32 0
  %23 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %22) #9
  %24 = trunc i32 %23 to i16
  %25 = icmp eq i16 %18, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 1
  %28 = icmp eq %"class.blink::CSSPropertyValue"* %27, %17
  br i1 %28, label %81, label %20

29:                                               ; preds = %20, %10
  %30 = phi %"class.blink::CSSPropertyValue"* [ %13, %10 ], [ %21, %20 ]
  %31 = icmp eq %"class.blink::CSSPropertyValue"* %30, %17
  br i1 %31, label %81, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.blink::CSSPropertyValue"* %30 to i64
  %34 = ptrtoint %"class.blink::CSSPropertyValue"* %13 to i64
  %35 = sub i64 %33, %34
  %36 = sdiv exact i64 %35, 24
  br label %59

37:                                               ; preds = %6, %4
  %38 = phi i32 [ %5, %4 ], [ %8, %6 ]
  %39 = trunc i32 %1 to i16
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %42 = bitcast %"class.blink::CSSPropertyValueSet"* %41 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %43 = and i32 %38, 268435455
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %49, %37
  %46 = phi i64 [ %47, %49 ], [ %44, %37 ]
  %47 = add nsw i64 %46, -1
  %48 = icmp sgt i64 %46, 0
  br i1 %48, label %49, label %81

49:                                               ; preds = %45
  %50 = load i32, i32* %40, align 8
  %51 = and i32 %50, 268435455
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %42, i64 %52
  %54 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %53 to %"struct.blink::CSSPropertyValueMetadata"*
  %55 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %54, i64 %47
  %56 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %55) #9
  %57 = trunc i32 %56 to i16
  %58 = icmp eq i16 %57, %39
  br i1 %58, label %59, label %45

59:                                               ; preds = %49, %32
  %60 = phi i64 [ %36, %32 ], [ %47, %49 ]
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %81, label %63

63:                                               ; preds = %59
  br i1 %3, label %73, label %64

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, -1
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %70 = bitcast %"class.blink::CSSPropertyValueSet"* %69 to %"class.WTF::Vector"*
  %71 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %70, i32 %61) #9
  %72 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %71, i64 0, i32 1, i32 0, i32 0
  br label %78

73:                                               ; preds = %64, %63
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %75 = bitcast %"class.blink::CSSPropertyValueSet"* %74 to %"class.blink::Member"*
  %76 = and i64 %60, 4294967295
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %75, i64 %76, i32 0, i32 0
  br label %78

78:                                               ; preds = %68, %73
  %79 = phi %"class.blink::CSSValue"** [ %77, %73 ], [ %72, %68 ]
  %80 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %79, align 8
  br label %81

81:                                               ; preds = %26, %45, %29, %59, %78
  %82 = phi %"class.blink::CSSValue"* [ %80, %78 ], [ null, %59 ], [ null, %29 ], [ null, %45 ], [ null, %26 ]
  ret %"class.blink::CSSValue"* %82
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_18AtRuleDescriptorIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %0, i32 %1)
  %4 = icmp eq %"class.blink::CSSValue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %3) #9
  %7 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  br label %31

8:                                                ; preds = %2
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %5, %8, %14, %29
  %32 = phi i64 [ %7, %5 ], [ %12, %8 ], [ %12, %14 ], [ %12, %29 ]
  %33 = inttoptr i64 %32 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %33
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %37, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %10 = bitcast %"class.blink::CSSPropertyValueSet"* %9 to %"class.blink::CSSPropertyValue"**
  %11 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %11, i64 %14
  %16 = tail call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #9
  %17 = trunc i32 %16 to i16
  %18 = icmp eq i32 %13, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %8, %26
  %20 = phi %"class.blink::CSSPropertyValue"* [ %27, %26 ], [ %11, %8 ]
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 0, i32 0
  %22 = tail call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #9
  %23 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %21) #9
  %24 = trunc i32 %23 to i16
  %25 = icmp eq i16 %17, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 1
  %28 = icmp eq %"class.blink::CSSPropertyValue"* %27, %15
  br i1 %28, label %83, label %19

29:                                               ; preds = %19, %8
  %30 = phi %"class.blink::CSSPropertyValue"* [ %11, %8 ], [ %20, %19 ]
  %31 = icmp eq %"class.blink::CSSPropertyValue"* %30, %15
  br i1 %31, label %83, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.blink::CSSPropertyValue"* %30 to i64
  %34 = ptrtoint %"class.blink::CSSPropertyValue"* %11 to i64
  %35 = sub i64 %33, %34
  %36 = sdiv exact i64 %35, 24
  br label %61

37:                                               ; preds = %4, %2
  %38 = tail call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #9
  %39 = trunc i32 %38 to i16
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %43 = bitcast %"class.blink::CSSPropertyValueSet"* %42 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %44 = and i32 %41, 268435455
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %50, %37
  %47 = phi i64 [ %48, %50 ], [ %45, %37 ]
  %48 = add nsw i64 %47, -1
  %49 = icmp sgt i64 %47, 0
  br i1 %49, label %50, label %83

50:                                               ; preds = %46
  %51 = load i32, i32* %40, align 8
  %52 = and i32 %51, 268435455
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %43, i64 %53
  %55 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %54 to %"struct.blink::CSSPropertyValueMetadata"*
  %56 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %55, i64 %48
  %57 = tail call i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32 %1) #9
  %58 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %56) #9
  %59 = trunc i32 %58 to i16
  %60 = icmp eq i16 %59, %39
  br i1 %60, label %61, label %46

61:                                               ; preds = %50, %32
  %62 = phi i64 [ %36, %32 ], [ %48, %50 ]
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %83, label %65

65:                                               ; preds = %61
  br i1 %3, label %75, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %72 = bitcast %"class.blink::CSSPropertyValueSet"* %71 to %"class.WTF::Vector"*
  %73 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %72, i32 %63) #9
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 0, i32 1, i32 0, i32 0
  br label %80

75:                                               ; preds = %66, %65
  %76 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %77 = bitcast %"class.blink::CSSPropertyValueSet"* %76 to %"class.blink::Member"*
  %78 = and i64 %62, 4294967295
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %77, i64 %78, i32 0, i32 0
  br label %80

80:                                               ; preds = %70, %75
  %81 = phi %"class.blink::CSSValue"** [ %79, %75 ], [ %74, %70 ]
  %82 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %81, align 8
  br label %83

83:                                               ; preds = %26, %46, %29, %61, %80
  %84 = phi %"class.blink::CSSValue"* [ %82, %80 ], [ null, %61 ], [ null, %29 ], [ null, %46 ], [ null, %26 ]
  ret %"class.blink::CSSValue"* %84
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueIN3WTF12AtomicStringEEENS2_6StringET_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i33
  %13 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %12, i33 1) #9
  %14 = extractvalue { i33, i1 } %13, 1
  %15 = extractvalue { i33, i1 } %13, 0
  %16 = icmp slt i33 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %9
  tail call void @llvm.trap() #9
  unreachable

19:                                               ; preds = %9
  %20 = trunc i33 %15 to i32
  store i32 %20, i32* %10, align 4
  br label %21

21:                                               ; preds = %2, %4, %19
  %22 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %1)
  %23 = icmp eq %"class.blink::CSSValue"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %22) #9
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  br label %50

27:                                               ; preds = %21
  %28 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #9
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #9
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %24, %27, %33, %48
  %51 = phi i64 [ %26, %24 ], [ %31, %27 ], [ %31, %33 ], [ %31, %48 ]
  br i1 %3, label %65, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %65

65:                                               ; preds = %50, %61, %64
  %66 = inttoptr i64 %51 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %66
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i33
  %13 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %12, i33 1) #9
  %14 = extractvalue { i33, i1 } %13, 1
  %15 = extractvalue { i33, i1 } %13, 0
  %16 = icmp slt i33 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %9
  tail call void @llvm.trap() #9
  unreachable

19:                                               ; preds = %9
  %20 = trunc i33 %15 to i32
  store i32 %20, i32* %10, align 4
  br label %21

21:                                               ; preds = %2, %4, %19
  %22 = tail call i32 @_ZNK5blink19CSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::CSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %1)
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %43, label %24

24:                                               ; preds = %21
  %25 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %32 = bitcast %"class.blink::CSSPropertyValueSet"* %31 to %"class.WTF::Vector"*
  %33 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %32, i32 %22) #9
  %34 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %33, i64 0, i32 1, i32 0, i32 0
  br label %40

35:                                               ; preds = %26, %24
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %37 = bitcast %"class.blink::CSSPropertyValueSet"* %36 to %"class.blink::Member"*
  %38 = zext i32 %22 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %37, i64 %38, i32 0, i32 0
  br label %40

40:                                               ; preds = %30, %35
  %41 = phi %"class.blink::CSSValue"** [ %39, %35 ], [ %34, %30 ]
  %42 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %41, align 8
  br label %43

43:                                               ; preds = %21, %40
  %44 = phi %"class.blink::CSSValue"* [ %42, %40 ], [ null, %21 ]
  br i1 %3, label %58, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %58

58:                                               ; preds = %43, %54, %57
  ret %"class.blink::CSSValue"* %44
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink19CSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  %8 = bitcast %"class.blink::CSSPropertyValueSet"* %0 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %7, label %28, label %9

9:                                                ; preds = %4
  %10 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %10, label %99, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %97

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %97

28:                                               ; preds = %4, %2
  %29 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %28, %30, %45
  %48 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 268435455
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %82, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %54 = bitcast %"class.blink::CSSPropertyValueSet"* %53 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %55 = bitcast %"class.blink::CSSPropertyValueSet"* %53 to %"class.blink::Member"*
  %56 = zext i32 %50 to i64
  br label %57

57:                                               ; preds = %78, %52
  %58 = phi i32 [ %49, %52 ], [ %79, %78 ]
  %59 = phi i64 [ %56, %52 ], [ %60, %78 ]
  %60 = add nsw i64 %59, -1
  %61 = and i32 %58, 268435455
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %54, i64 %62
  %64 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %63 to %"struct.blink::CSSPropertyValueMetadata"*
  %65 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %64, i64 %60
  %66 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %55, i64 %60, i32 0, i32 0
  %67 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %66, align 8
  %68 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %65) #9
  %69 = trunc i32 %68 to i16
  %70 = icmp eq i16 %69, 1
  br i1 %70, label %71, label %76

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %67, i64 2, i32 2
  %73 = bitcast i8* %72 to %"class.WTF::StringImpl"**
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, %1
  br i1 %75, label %80, label %76

76:                                               ; preds = %71, %57
  %77 = icmp sgt i64 %60, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %76
  %79 = load i32, i32* %48, align 8
  br label %57

80:                                               ; preds = %71
  %81 = trunc i64 %60 to i32
  br label %82

82:                                               ; preds = %76, %80, %47
  %83 = phi i32 [ -1, %47 ], [ %81, %80 ], [ -1, %76 ]
  br i1 %29, label %115, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %101

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %101

97:                                               ; preds = %11, %26
  %98 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* nonnull %8, %"class.WTF::StringImpl"* nonnull %1)
  br label %101

99:                                               ; preds = %9
  %100 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* nonnull %8, %"class.WTF::StringImpl"* null)
  br label %115

101:                                              ; preds = %93, %96, %97
  %102 = phi i32 [ %98, %97 ], [ %83, %96 ], [ %83, %93 ]
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %101
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %101
  %112 = phi i32 [ %110, %109 ], [ %108, %101 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %115

115:                                              ; preds = %82, %99, %111, %114
  %116 = phi i32 [ %100, %99 ], [ %102, %111 ], [ %102, %114 ], [ %83, %82 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %1) #9
  %6 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %54, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %5, i64 0, i32 0
  %11 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %10, align 8
  %12 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %11, i32 %7) #9
  br i1 %12, label %13, label %54

13:                                               ; preds = %9
  %14 = icmp eq %"class.WTF::String"* %2, null
  br i1 %14, label %84, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::String"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %20 = bitcast %"class.WTF::String"* %2 to i64*
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #9
  br label %37

37:                                               ; preds = %15, %33, %36
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %37, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %84

54:                                               ; preds = %3, %9
  %55 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %56, i64 %59
  %61 = trunc i32 %1 to i16
  %62 = icmp eq i32 %58, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %54, %69
  %64 = phi %"class.blink::CSSPropertyValue"* [ %70, %69 ], [ %56, %54 ]
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %64, i64 0, i32 0
  %66 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %65) #9
  %67 = trunc i32 %66 to i16
  %68 = icmp eq i16 %61, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %64, i64 1
  %71 = icmp eq %"class.blink::CSSPropertyValue"* %70, %60
  br i1 %71, label %81, label %63

72:                                               ; preds = %63, %54
  %73 = phi %"class.blink::CSSPropertyValue"* [ %56, %54 ], [ %64, %63 ]
  %74 = icmp eq %"class.blink::CSSPropertyValue"* %73, %60
  br i1 %74, label %81, label %75

75:                                               ; preds = %72
  %76 = ptrtoint %"class.blink::CSSPropertyValue"* %73 to i64
  %77 = ptrtoint %"class.blink::CSSPropertyValue"* %56 to i64
  %78 = sub i64 %76, %77
  %79 = sdiv exact i64 %78, 24
  %80 = trunc i64 %79 to i32
  br label %81

81:                                               ; preds = %69, %72, %75
  %82 = phi i32 [ %80, %75 ], [ -1, %72 ], [ -1, %69 ]
  %83 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertyAtIndexEiPN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %0, i32 %82, %"class.WTF::String"* %2)
  br label %84

84:                                               ; preds = %53, %13, %81
  %85 = phi i1 [ %83, %81 ], [ true, %13 ], [ true, %53 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet23RemoveShorthandPropertyENS_13CSSPropertyIDE(%"class.blink::MutableCSSPropertyValueSet"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %1) #9
  %4 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %3, i64 0, i32 0
  %9 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %8, align 8
  %10 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %9, i32 %5)
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i1 [ %10, %7 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::MutableCSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 %7
  %9 = trunc i32 %1 to i16
  %10 = icmp eq i32 %6, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2, %17
  %12 = phi %"class.blink::CSSPropertyValue"* [ %18, %17 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %12, i64 0, i32 0
  %14 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %13) #9
  %15 = trunc i32 %14 to i16
  %16 = icmp eq i16 %9, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %12, i64 1
  %19 = icmp eq %"class.blink::CSSPropertyValue"* %18, %8
  br i1 %19, label %29, label %11

20:                                               ; preds = %11, %2
  %21 = phi %"class.blink::CSSPropertyValue"* [ %4, %2 ], [ %12, %11 ]
  %22 = icmp eq %"class.blink::CSSPropertyValue"* %21, %8
  br i1 %22, label %29, label %23

23:                                               ; preds = %20
  %24 = ptrtoint %"class.blink::CSSPropertyValue"* %21 to i64
  %25 = ptrtoint %"class.blink::CSSPropertyValue"* %4 to i64
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 24
  %28 = trunc i64 %27 to i32
  br label %29

29:                                               ; preds = %17, %20, %23
  %30 = phi i32 [ %28, %23 ], [ -1, %20 ], [ -1, %17 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertyAtIndexEiPN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq i32 %1, -1
  %6 = icmp ne %"class.WTF::String"* %2, null
  br i1 %5, label %7, label %47

7:                                                ; preds = %3
  br i1 %6, label %8, label %89

8:                                                ; preds = %7
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #9
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::String"* %4 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %13 = bitcast %"class.WTF::String"* %2 to i64*
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %30

30:                                               ; preds = %8, %26, %29
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %30, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %89

47:                                               ; preds = %3
  br i1 %6, label %48, label %87

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0
  %50 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %0, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %49, i64 4
  %57 = bitcast %"class.blink::CSSPropertyValueSet"* %56 to %"class.WTF::Vector"*
  %58 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %57, i32 %1) #9
  %59 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %58, i64 0, i32 1, i32 0, i32 0
  br label %65

60:                                               ; preds = %51, %48
  %61 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %49, i64 2
  %62 = bitcast %"class.blink::CSSPropertyValueSet"* %61 to %"class.blink::Member"*
  %63 = zext i32 %1 to i64
  %64 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %63, i32 0, i32 0
  br label %65

65:                                               ; preds = %55, %60
  %66 = phi %"class.blink::CSSValue"** [ %64, %60 ], [ %59, %55 ]
  %67 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %66, align 8
  %68 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %67) #9
  %69 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %70 = bitcast %"class.WTF::String"* %2 to i64*
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %65, %83, %86, %47
  %88 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %88, i32 %1)
  br label %89

89:                                               ; preds = %7, %46, %87
  %90 = phi i1 [ true, %87 ], [ false, %46 ], [ false, %7 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #9
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %3
  %23 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %1)
  %24 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertyAtIndexEiPN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %0, i32 %23, %"class.WTF::String"* %2)
  br i1 %4, label %38, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %38

38:                                               ; preds = %22, %34, %37
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 %7
  %9 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = icmp eq i32 %6, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27, %42
  %30 = phi %"class.blink::CSSPropertyValue"* [ %43, %42 ], [ %4, %27 ]
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %32, align 8
  %34 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %31) #9
  %35 = trunc i32 %34 to i16
  %36 = icmp eq i16 %35, 1
  br i1 %36, label %37, label %42

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %33, i64 2, i32 2
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, %1
  br i1 %41, label %45, label %42

42:                                               ; preds = %37, %29
  %43 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 1
  %44 = icmp eq %"class.blink::CSSPropertyValue"* %43, %8
  br i1 %44, label %45, label %29

45:                                               ; preds = %42, %37, %27
  %46 = phi %"class.blink::CSSPropertyValue"* [ %4, %27 ], [ %30, %37 ], [ %8, %42 ]
  br i1 %9, label %60, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %60

60:                                               ; preds = %45, %56, %59
  %61 = icmp eq %"class.blink::CSSPropertyValue"* %46, %8
  br i1 %61, label %68, label %62

62:                                               ; preds = %60
  %63 = ptrtoint %"class.blink::CSSPropertyValue"* %46 to i64
  %64 = ptrtoint %"class.blink::CSSPropertyValue"* %4 to i64
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 24
  %67 = trunc i64 %66 to i32
  br label %68

68:                                               ; preds = %60, %62
  %69 = phi i32 [ %67, %62 ], [ -1, %60 ]
  br i1 %9, label %83, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %83

83:                                               ; preds = %68, %79, %82
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = load i32, i32* null, align 536870912
  br label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %12 = bitcast %"class.blink::CSSPropertyValueSet"* %11 to %"class.blink::CSSPropertyValue"**
  %13 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 %16
  %18 = trunc i32 %1 to i16
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %10, %26
  %21 = phi %"class.blink::CSSPropertyValue"* [ %27, %26 ], [ %13, %10 ]
  %22 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 0, i32 0
  %23 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %22) #9
  %24 = trunc i32 %23 to i16
  %25 = icmp eq i16 %18, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 1
  %28 = icmp eq %"class.blink::CSSPropertyValue"* %27, %17
  br i1 %28, label %91, label %20

29:                                               ; preds = %20, %10
  %30 = phi %"class.blink::CSSPropertyValue"* [ %13, %10 ], [ %21, %20 ]
  %31 = icmp eq %"class.blink::CSSPropertyValue"* %30, %17
  br i1 %31, label %91, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.blink::CSSPropertyValue"* %30 to i64
  %34 = ptrtoint %"class.blink::CSSPropertyValue"* %13 to i64
  %35 = sub i64 %33, %34
  %36 = sdiv exact i64 %35, 24
  br label %59

37:                                               ; preds = %6, %4
  %38 = phi i32 [ %5, %4 ], [ %8, %6 ]
  %39 = trunc i32 %1 to i16
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %42 = bitcast %"class.blink::CSSPropertyValueSet"* %41 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %43 = and i32 %38, 268435455
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %49, %37
  %46 = phi i64 [ %47, %49 ], [ %44, %37 ]
  %47 = add nsw i64 %46, -1
  %48 = icmp sgt i64 %46, 0
  br i1 %48, label %49, label %91

49:                                               ; preds = %45
  %50 = load i32, i32* %40, align 8
  %51 = and i32 %50, 268435455
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %42, i64 %52
  %54 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %53 to %"struct.blink::CSSPropertyValueMetadata"*
  %55 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %54, i64 %47
  %56 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %55) #9
  %57 = trunc i32 %56 to i16
  %58 = icmp eq i16 %57, %39
  br i1 %58, label %59, label %45

59:                                               ; preds = %49, %32
  %60 = phi i64 [ %36, %32 ], [ %47, %49 ]
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %91, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  br i1 %3, label %65, label %67

65:                                               ; preds = %63
  %66 = load i32, i32* %64, align 8
  br label %75

67:                                               ; preds = %63
  %68 = load i32, i32* %64, align 4
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %72 = bitcast %"class.blink::CSSPropertyValueSet"* %71 to %"class.WTF::Vector"*
  %73 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %72, i32 %61) #9
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 0, i32 0
  br label %85

75:                                               ; preds = %67, %65
  %76 = phi i32 [ %66, %65 ], [ %68, %67 ]
  %77 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %78 = bitcast %"class.blink::CSSPropertyValueSet"* %77 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %79 = and i32 %76, 268435455
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %78, i64 %80
  %82 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %81 to %"struct.blink::CSSPropertyValueMetadata"*
  %83 = and i64 %60, 4294967295
  %84 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %82, i64 %83
  br label %85

85:                                               ; preds = %70, %75
  %86 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %84, %75 ], [ %74, %70 ]
  %87 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %86, i64 0, i32 1
  %88 = load i16, i16* %87, align 8
  %89 = and i16 %88, 16384
  %90 = icmp ne i16 %89, 0
  br label %110

91:                                               ; preds = %26, %45, %29, %59
  %92 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %1) #9
  %93 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %92, i64 0, i32 0
  %94 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %93, align 8
  %95 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %92, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = zext i32 %96 to i64
  br label %102

100:                                              ; preds = %102
  %101 = icmp eq i64 %109, %99
  br i1 %101, label %110, label %102

102:                                              ; preds = %100, %98
  %103 = phi i64 [ 0, %98 ], [ %109, %100 ]
  %104 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %94, i64 %103
  %105 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %105, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %0, i32 %107) #9
  %109 = add nuw nsw i64 %103, 1
  br i1 %108, label %100, label %110

110:                                              ; preds = %102, %100, %91, %85
  %111 = phi i1 [ %90, %85 ], [ false, %91 ], [ false, %102 ], [ true, %100 ]
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet20ShorthandIsImportantENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %1) #9
  %4 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %3, i64 0, i32 0
  %5 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = zext i32 %7 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp eq i64 %20, %10
  br i1 %12, label %21, label %13

13:                                               ; preds = %11, %9
  %14 = phi i64 [ 0, %9 ], [ %20, %11 ]
  %15 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %5, i64 %14
  %16 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %0, i32 %18)
  %20 = add nuw nsw i64 %14, 1
  br i1 %19, label %11, label %21

21:                                               ; preds = %13, %11, %2
  %22 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %13 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantIN3WTF12AtomicStringEEEbT_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i33
  %13 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %12, i33 1) #9
  %14 = extractvalue { i33, i1 } %13, 1
  %15 = extractvalue { i33, i1 } %13, 0
  %16 = icmp slt i33 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %9
  tail call void @llvm.trap() #9
  unreachable

19:                                               ; preds = %9
  %20 = trunc i33 %15 to i32
  store i32 %20, i32* %10, align 4
  br label %21

21:                                               ; preds = %2, %4, %19
  %22 = tail call i32 @_ZNK5blink19CSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::CSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %1)
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %47, label %24

24:                                               ; preds = %21
  %25 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  br i1 %25, label %27, label %29

27:                                               ; preds = %24
  %28 = load i32, i32* %26, align 8
  br label %37

29:                                               ; preds = %24
  %30 = load i32, i32* %26, align 4
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %34 = bitcast %"class.blink::CSSPropertyValueSet"* %33 to %"class.WTF::Vector"*
  %35 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %34, i32 %22) #9
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %35, i64 0, i32 0
  br label %77

37:                                               ; preds = %29, %27
  %38 = phi i32 [ %28, %27 ], [ %30, %29 ]
  %39 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %40 = bitcast %"class.blink::CSSPropertyValueSet"* %39 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %41 = and i32 %38, 268435455
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %40, i64 %42
  %44 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %43 to %"struct.blink::CSSPropertyValueMetadata"*
  %45 = zext i32 %22 to i64
  %46 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %44, i64 %45
  br label %77

47:                                               ; preds = %21
  br i1 %3, label %97, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %65

55:                                               ; preds = %48
  %56 = zext i32 %54 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #9
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %55
  tail call void @llvm.trap() #9
  unreachable

63:                                               ; preds = %55
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %53, align 4
  br label %65

65:                                               ; preds = %48, %63
  %66 = phi i32 [ %64, %63 ], [ %54, %48 ]
  %67 = load atomic i32, i32* %49 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %72 = add i32 %66, -1
  store i32 %72, i32* %71, align 4
  br label %73

73:                                               ; preds = %70, %65
  %74 = phi i32 [ %72, %70 ], [ %66, %65 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %83

77:                                               ; preds = %37, %32
  %78 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %46, %37 ], [ %36, %32 ]
  %79 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %78, i64 0, i32 1
  %80 = load i16, i16* %79, align 8
  %81 = and i16 %80, 16384
  %82 = icmp ne i16 %81, 0
  br i1 %3, label %97, label %83

83:                                               ; preds = %73, %76, %77
  %84 = phi i1 [ %82, %77 ], [ false, %76 ], [ false, %73 ]
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %83
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %83
  %94 = phi i32 [ %92, %91 ], [ %90, %83 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %97

97:                                               ; preds = %47, %77, %93, %96
  %98 = phi i1 [ %82, %77 ], [ %84, %93 ], [ %84, %96 ], [ false, %47 ]
  ret i1 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet20ShorthandIsImportantEN3WTF12AtomicStringE(%"class.blink::CSSPropertyValueSet"* nocapture readnone, %"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  br i1 %8, label %11, label %13

11:                                               ; preds = %4
  %12 = add i32 %10, -1
  store i32 %12, i32* %9, align 4
  br label %13

13:                                               ; preds = %11, %4
  %14 = phi i32 [ %12, %11 ], [ %10, %4 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %17

17:                                               ; preds = %2, %13, %16
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink28ImmutableCSSPropertyValueSet6CreateEPKNS_16CSSPropertyValueEjNS_13CSSParserModeE(%"class.blink::CSSPropertyValue"*, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %1 to i64
  %5 = mul nuw nsw i64 %4, 24
  %6 = add nuw nsw i64 %5, 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 %6) #9
  %8 = bitcast i8* %7 to %"class.blink::ImmutableCSSPropertyValueSet"*
  tail call void @_ZN5blink28ImmutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEjNS_13CSSParserModeE(%"class.blink::ImmutableCSSPropertyValueSet"* %8, %"class.blink::CSSPropertyValue"* %0, i32 %1, i8 zeroext %2) #9
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  ret %"class.blink::ImmutableCSSPropertyValueSet"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImmutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet21ImmutableCopyIfNeededEv(%"class.blink::CSSPropertyValueSet"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = load i32, i32* null, align 536870912
  br label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  %9 = bitcast %"class.blink::CSSPropertyValueSet"* %0 to %"class.blink::ImmutableCSSPropertyValueSet"*
  br i1 %8, label %10, label %29

10:                                               ; preds = %3, %5
  %11 = phi i32 [ %4, %3 ], [ %7, %5 ]
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %13 = bitcast %"class.blink::CSSPropertyValueSet"* %12 to %"class.blink::CSSPropertyValue"**
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %11, 28
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 7
  %20 = zext i32 %16 to i64
  %21 = mul nuw nsw i64 %20, 24
  %22 = add nuw nsw i64 %21, 8
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 %22) #9
  %24 = bitcast i8* %23 to %"class.blink::ImmutableCSSPropertyValueSet"*
  tail call void @_ZN5blink28ImmutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEjNS_13CSSParserModeE(%"class.blink::ImmutableCSSPropertyValueSet"* %24, %"class.blink::CSSPropertyValue"* %14, i32 %16, i8 zeroext %19) #9
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  br label %29

29:                                               ; preds = %5, %10
  %30 = phi %"class.blink::ImmutableCSSPropertyValueSet"* [ %24, %10 ], [ %9, %5 ]
  ret %"class.blink::ImmutableCSSPropertyValueSet"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSetC2ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %4 = and i8 %1, 7
  %5 = zext i8 %4 to i32
  %6 = shl nuw nsw i32 %5, 28
  %7 = or i32 %6, -2147483648
  store i32 %7, i32* %3, align 4
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::PropertySetCSSStyleDeclaration"* null, %"class.blink::PropertySetCSSStyleDeclaration"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.blink::HeapVector"* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 101, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEj(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  store i32 -2147483648, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::PropertySetCSSStyleDeclaration"* null, %"class.blink::PropertySetCSSStyleDeclaration"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i64 0
  %8 = bitcast %"class.blink::HeapVector"* %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 4
  %12 = icmp ugt i32 %2, 4
  %13 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 101, i1 false)
  br i1 %12, label %14, label %27

14:                                               ; preds = %3
  %15 = zext i32 %2 to i64
  %16 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %15) #9
  %17 = udiv i64 %16, 24
  %18 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %17) #9
  %19 = ptrtoint %"class.blink::HeapVectorBacking"* %18 to i64
  %20 = bitcast %"class.blink::HeapVector"* %6 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = trunc i64 %17 to i32
  store i32 %21, i32* %9, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %18, i64 0, i32 0
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #9
  br label %29

27:                                               ; preds = %3
  %28 = icmp eq i32 %2, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24, %14, %27
  %30 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = zext i32 %2 to i64
  br label %33

32:                                               ; preds = %55, %27
  ret void

33:                                               ; preds = %55, %29
  %34 = phi i64 [ 0, %29 ], [ %56, %55 ]
  %35 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 %34
  %36 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %30, align 8
  %37 = load i32, i32* %10, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %36, i64 %38
  %40 = bitcast %"class.blink::CSSPropertyValue"* %39 to i8*
  %41 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %40, %"class.blink::CSSPropertyValue"* dereferenceable(24) %35) #9
  %42 = load i32, i32* %10, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %10, align 4
  %44 = load i8, i8* %11, align 8, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %35, i64 0, i32 0
  %48 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %47) #9
  %49 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %48) #9
  %50 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 532480
  %53 = icmp eq i32 %52, 532480
  %54 = zext i1 %53 to i8
  store i8 %54, i8* %11, align 8
  br label %55

55:                                               ; preds = %33, %46
  %56 = add nuw nsw i64 %34, 1
  %57 = icmp eq i64 %56, %31
  br i1 %57, label %32, label %33
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ImmutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEjNS_13CSSParserModeE(%"class.blink::ImmutableCSSPropertyValueSet"* nocapture, %"class.blink::CSSPropertyValue"* nocapture readonly, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %6 = icmp ult i32 %2, 268435455
  %7 = select i1 %6, i32 %2, i32 268435455
  %8 = and i8 %3, 7
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 28
  %11 = or i32 %10, %7
  store i32 %11, i32* %5, align 4
  %12 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 1
  %13 = zext i32 %7 to i64
  %14 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %12, i64 %13
  %15 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %14 to %"struct.blink::CSSPropertyValueMetadata"*
  %16 = icmp eq i32 %7, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %74, %4
  ret void

18:                                               ; preds = %4, %74
  %19 = phi i64 [ %75, %74 ], [ 0, %4 ]
  %20 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %15, i64 %19
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 %19, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %18
  %42 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %43 = bitcast %"struct.blink::CSSPropertyValueMetadata"* %20 to i64*
  %44 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %42, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %60

60:                                               ; preds = %41, %56, %59
  %61 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %15, i64 %19, i32 1
  %62 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 %19, i32 0, i32 1
  %63 = load i16, i16* %62, align 8
  store i16 %63, i16* %61, align 8
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 %19, i32 1, i32 0, i32 0
  %65 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %12, i64 %19
  %67 = ptrtoint %"class.blink::CSSValue"* %65 to i64
  %68 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %66 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %65, i64 0, i32 0
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #9
  br label %74

74:                                               ; preds = %60, %71
  %75 = add nuw nsw i64 %19, 1
  %76 = load i32, i32* %5, align 8
  %77 = and i32 %76, 268435455
  %78 = zext i32 %77 to i64
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %18, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28ImmutableCSSPropertyValueSet18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::ImmutableCSSPropertyValueSet"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 1
  %4 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 268435455
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %11

10:                                               ; preds = %25, %2
  ret void

11:                                               ; preds = %8, %25
  %12 = phi i32 [ %5, %8 ], [ %26, %25 ]
  %13 = phi i64 [ 0, %8 ], [ %27, %25 ]
  %14 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %3, i64 %13
  %15 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %11
  %19 = inttoptr i64 %16 to %"class.blink::CSSValue"*
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %19, i64 0, i32 0
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* %20, i8* %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  %24 = load i32, i32* %4, align 8
  br label %25

25:                                               ; preds = %11, %18
  %26 = phi i32 [ %12, %11 ], [ %24, %18 ]
  %27 = add nuw nsw i64 %13, 1
  %28 = and i32 %26, 268435455
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %11, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSetC2ERKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSPropertyValue", align 8
  %4 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 1879048192
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %8 = or i32 %6, -2147483648
  store i32 %8, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::PropertySetCSSStyleDeclaration"* null, %"class.blink::PropertySetCSSStyleDeclaration"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast %"class.blink::HeapVector"* %10 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 4
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 101, i1 false)
  %17 = load i32, i32* %4, align 4
  %18 = icmp sgt i32 %17, -1
  %19 = icmp eq %"class.blink::CSSPropertyValueSet"* %1, null
  %20 = or i1 %19, %18
  br i1 %20, label %29, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 4
  %23 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %10, i64 0, i32 0
  %24 = bitcast %"class.blink::CSSPropertyValueSet"* %22 to %"class.WTF::Vector"*
  %25 = tail call dereferenceable(112) %"class.WTF::Vector"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEEaSERKS4_(%"class.WTF::Vector"* %23, %"class.WTF::Vector"* dereferenceable(112) %24) #9
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 32
  %27 = bitcast %"class.blink::CSSPropertyValueSet"* %26 to i8*
  %28 = load i8, i8* %27, align 8, !range !3
  store i8 %28, i8* %15, align 8
  br label %224

29:                                               ; preds = %2
  br i1 %19, label %30, label %32

30:                                               ; preds = %29
  %31 = load i32, i32* null, align 536870912
  br label %36

32:                                               ; preds = %29
  br i1 %18, label %36, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 7, i32 0
  %35 = load i32, i32* %34, align 4
  br label %39

36:                                               ; preds = %32, %30
  %37 = phi i32 [ %31, %30 ], [ %17, %32 ]
  %38 = and i32 %37, 268435455
  br label %39

39:                                               ; preds = %33, %36
  %40 = phi i32 [ %38, %36 ], [ %35, %33 ]
  %41 = icmp ugt i32 %40, 4
  br i1 %41, label %42, label %55

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  %44 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %43) #9
  %45 = udiv i64 %44, 24
  %46 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %45) #9
  %47 = ptrtoint %"class.blink::HeapVectorBacking"* %46 to i64
  %48 = bitcast %"class.blink::HeapVector"* %10 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = trunc i64 %45 to i32
  store i32 %49, i32* %13, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %46, i64 0, i32 0
  %54 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %39, %42, %52
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 7, i32 0
  %57 = bitcast %"class.blink::CSSPropertyValue"* %3 to i8*
  %58 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 4
  %59 = bitcast %"class.blink::CSSPropertyValueSet"* %58 to %"class.WTF::Vector"*
  %60 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 2
  %61 = bitcast %"class.blink::CSSPropertyValueSet"* %60 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %62 = bitcast %"class.blink::CSSPropertyValueSet"* %60 to %"class.blink::Member"*
  %63 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %3, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %3, i64 0, i32 1, i32 0, i32 0
  %66 = bitcast %"class.blink::CSSValue"** %65 to i64*
  %67 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %68

68:                                               ; preds = %222, %55
  %69 = phi i64 [ %223, %222 ], [ 0, %55 ]
  br i1 %19, label %70, label %72

70:                                               ; preds = %68
  %71 = load i32, i32* null, align 536870912
  br label %77

72:                                               ; preds = %68
  %73 = load i32, i32* %4, align 4
  %74 = icmp sgt i32 %73, -1
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = load i32, i32* %56, align 4
  br label %80

77:                                               ; preds = %72, %70
  %78 = phi i32 [ %71, %70 ], [ %73, %72 ]
  %79 = and i32 %78, 268435455
  br label %80

80:                                               ; preds = %75, %77
  %81 = phi i32 [ %79, %77 ], [ %76, %75 ]
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %69, %82
  br i1 %83, label %84, label %224

84:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #9
  br i1 %19, label %85, label %87

85:                                               ; preds = %84
  %86 = load i32, i32* %4, align 8
  br label %94

87:                                               ; preds = %84
  %88 = load i32, i32* %4, align 4
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = trunc i64 %69 to i32
  %92 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %59, i32 %91) #9
  %93 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %92, i64 0, i32 0
  br label %101

94:                                               ; preds = %87, %85
  %95 = phi i32 [ %86, %85 ], [ %88, %87 ]
  %96 = and i32 %95, 268435455
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %61, i64 %97
  %99 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %98 to %"struct.blink::CSSPropertyValueMetadata"*
  %100 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %99, i64 %69
  br label %101

101:                                              ; preds = %90, %94
  %102 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %100, %94 ], [ %93, %90 ]
  %103 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #9
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %111
  call void @llvm.trap() #9
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %101, %106, %121
  %124 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %102, i64 0, i32 1
  %125 = load i16, i16* %124, align 8
  %126 = load i32, i32* %4, align 4
  %127 = icmp sgt i32 %126, -1
  %128 = or i1 %19, %127
  br i1 %128, label %133, label %129

129:                                              ; preds = %123
  %130 = trunc i64 %69 to i32
  %131 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %59, i32 %130) #9
  %132 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %131, i64 0, i32 1, i32 0, i32 0
  br label %135

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %69, i32 0, i32 0
  br label %135

135:                                              ; preds = %129, %133
  %136 = phi %"class.blink::CSSValue"** [ %134, %133 ], [ %132, %129 ]
  %137 = bitcast %"class.blink::CSSValue"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %63, align 8
  br i1 %105, label %156, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %157

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i33
  %148 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #9
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !2

153:                                              ; preds = %144
  call void @llvm.trap() #9
  unreachable

154:                                              ; preds = %144
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %145, align 4
  br label %157

156:                                              ; preds = %135
  store i16 %125, i16* %64, align 8
  store i64 %138, i64* %66, align 8
  br label %169

157:                                              ; preds = %154, %139
  store i16 %125, i16* %64, align 8
  store i64 %138, i64* %66, align 8
  %158 = load atomic i32, i32* %140 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %157
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %157
  %166 = phi i32 [ %164, %163 ], [ %162, %157 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %169

169:                                              ; preds = %156, %165, %168
  %170 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %67, align 8
  %171 = load i32, i32* %14, align 4
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %170, i64 %172
  %174 = bitcast %"class.blink::CSSPropertyValue"* %173 to i8*
  %175 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %174, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %3) #9
  %176 = load i32, i32* %14, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %14, align 4
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %169
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #9
  br label %193

193:                                              ; preds = %169, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #9
  %194 = load i8, i8* %15, align 8, !range !3
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %222

196:                                              ; preds = %193
  br i1 %19, label %197, label %199

197:                                              ; preds = %196
  %198 = load i32, i32* %4, align 8
  br label %206

199:                                              ; preds = %196
  %200 = load i32, i32* %4, align 4
  %201 = icmp sgt i32 %200, -1
  br i1 %201, label %206, label %202

202:                                              ; preds = %199
  %203 = trunc i64 %69 to i32
  %204 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %59, i32 %203) #9
  %205 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %204, i64 0, i32 0
  br label %213

206:                                              ; preds = %199, %197
  %207 = phi i32 [ %198, %197 ], [ %200, %199 ]
  %208 = and i32 %207, 268435455
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %61, i64 %209
  %211 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %210 to %"struct.blink::CSSPropertyValueMetadata"*
  %212 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %211, i64 %69
  br label %213

213:                                              ; preds = %202, %206
  %214 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %212, %206 ], [ %205, %202 ]
  %215 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %214) #9
  %216 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %215) #9
  %217 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %216, i64 0, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = and i32 %218, 532480
  %220 = icmp eq i32 %219, 532480
  %221 = zext i1 %220 to i8
  store i8 %221, i8* %15, align 8
  br label %222

222:                                              ; preds = %193, %213
  %223 = add nuw nsw i64 %69, 1
  br label %68

224:                                              ; preds = %80, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  br i1 %5, label %7, label %20

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::CSSPropertyValueSet"* %6 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = inttoptr i64 %9 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30PropertySetCSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %7, %11
  %18 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %19 = bitcast %"class.blink::CSSPropertyValueSet"* %18 to %"class.WTF::Vector"*
  tail call void @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector"* %19, %"class.blink::Visitor"* %1) #9
  br label %46

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::CSSPropertyValueSet"* %6 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %22 = and i32 %4, 268435455
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %26

26:                                               ; preds = %40, %24
  %27 = phi i32 [ %4, %24 ], [ %41, %40 ]
  %28 = phi i64 [ 0, %24 ], [ %42, %40 ]
  %29 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %21, i64 %28
  %30 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %1, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  %39 = load i32, i32* %3, align 8
  br label %40

40:                                               ; preds = %33, %26
  %41 = phi i32 [ %27, %26 ], [ %39, %33 ]
  %42 = add nuw nsw i64 %28, 1
  %43 = and i32 %41, 268435455
  %44 = zext i32 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %26, label %46

46:                                               ; preds = %40, %20, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26MutableCSSPropertyValueSet18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.3"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30PropertySetCSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector"* %14, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %51

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %7 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.blink::CSSPropertyValueSet"* %6 to %"class.blink::CSSPropertyValue"**
  br i1 %9, label %43, label %11, !prof !2

11:                                               ; preds = %5
  %12 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %10, align 8
  %13 = icmp ne %"class.blink::CSSPropertyValue"* %12, null
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 8
  %15 = bitcast %"class.blink::CSSPropertyValueSet"* %14 to %"class.blink::CSSPropertyValue"*
  %16 = icmp ne %"class.blink::CSSPropertyValue"* %12, %15
  %17 = and i1 %13, %16
  br i1 %17, label %43, label %18

18:                                               ; preds = %11
  %19 = zext i32 %8 to i64
  %20 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %12, i64 %19
  br label %21

21:                                               ; preds = %39, %18
  %22 = phi %"class.blink::CSSPropertyValue"* [ %40, %39 ], [ %12, %18 ]
  %23 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %39

39:                                               ; preds = %38, %35, %21
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 1
  %41 = icmp eq %"class.blink::CSSPropertyValue"* %40, %20
  br i1 %41, label %42, label %21

42:                                               ; preds = %39
  store i32 0, i32* %7, align 4
  br label %43

43:                                               ; preds = %5, %42, %11
  %44 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %10, align 8
  %45 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 8
  %46 = bitcast %"class.blink::CSSPropertyValueSet"* %45 to %"class.blink::CSSPropertyValue"*
  %47 = icmp eq %"class.blink::CSSPropertyValue"* %44, %46
  br i1 %47, label %50, label %48, !prof !4

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::CSSPropertyValueSet"* %6 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %49, %"class.blink::CSSPropertyValue"* %44) #9
  br label %50

50:                                               ; preds = %43, %48
  store %"class.blink::CSSPropertyValue"* null, %"class.blink::CSSPropertyValue"** %10, align 8
  br label %51

51:                                               ; preds = %1, %50
  ret void
}

declare dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* nocapture, %"class.blink::CSSProperty"** nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %135, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %10 = icmp eq i32 %2, 0
  %11 = zext i32 %2 to i64
  %12 = zext i32 %5 to i64
  br label %15

13:                                               ; preds = %88
  %14 = icmp eq i32 %89, %5
  br i1 %14, label %135, label %92

15:                                               ; preds = %88, %7
  %16 = phi i64 [ 0, %7 ], [ %90, %88 ]
  %17 = phi i32 [ 0, %7 ], [ %89, %88 ]
  %18 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %9, i64 %16
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %18, i64 0, i32 0
  %20 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %19) #9
  br i1 %10, label %31, label %23

21:                                               ; preds = %23
  %22 = icmp eq i64 %30, %11
  br i1 %22, label %31, label %23

23:                                               ; preds = %15, %21
  %24 = phi i64 [ %30, %21 ], [ 0, %15 ]
  %25 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %1, i64 %24
  %26 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %20
  %30 = add nuw nsw i64 %24, 1
  br i1 %29, label %88, label %21

31:                                               ; preds = %21, %15
  %32 = add i32 %17, 1
  %33 = zext i32 %17 to i64
  %34 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %9, i64 %33
  %35 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %31
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"class.blink::CSSPropertyValue"* %34 to i64*
  %58 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #9
  br label %74

74:                                               ; preds = %73, %70, %55
  %75 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %9, i64 %33, i32 0, i32 1
  %76 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %9, i64 %16, i32 0, i32 1
  %77 = load i16, i16* %76, align 8
  store i16 %77, i16* %75, align 8
  %78 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %9, i64 %33, i32 1
  %79 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %9, i64 %16, i32 1
  %80 = bitcast %"class.blink::Member"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.blink::Member"* %78 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %74
  %86 = inttoptr i64 %81 to i8*
  %87 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %86) #9
  br label %88

88:                                               ; preds = %23, %85, %74
  %89 = phi i32 [ %32, %74 ], [ %32, %85 ], [ %17, %23 ]
  %90 = add nuw nsw i64 %16, 1
  %91 = icmp eq i64 %90, %12
  br i1 %91, label %13, label %15

92:                                               ; preds = %13
  %93 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %94 = zext i32 %89 to i64
  %95 = load i32, i32* %4, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %93, i64 %96
  %98 = icmp eq i32 %95, %89
  br i1 %98, label %126, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %93, i64 %94
  br label %101

101:                                              ; preds = %119, %99
  %102 = phi %"class.blink::CSSPropertyValue"* [ %120, %119 ], [ %100, %99 ]
  %103 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %118, %115, %101
  %120 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %102, i64 1
  %121 = icmp eq %"class.blink::CSSPropertyValue"* %120, %97
  br i1 %121, label %122, label %101

122:                                              ; preds = %119
  %123 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %124 = load i32, i32* %4, align 4
  %125 = zext i32 %124 to i64
  br label %126

126:                                              ; preds = %92, %122
  %127 = phi i64 [ %125, %122 ], [ %94, %92 ]
  %128 = phi %"class.blink::CSSPropertyValue"* [ %123, %122 ], [ %93, %92 ]
  %129 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %128, i64 %94
  %130 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %128, i64 %127
  %131 = bitcast %"class.blink::CSSPropertyValue"* %129 to i8*
  %132 = ptrtoint %"class.blink::CSSPropertyValue"* %130 to i64
  %133 = ptrtoint %"class.blink::CSSPropertyValue"* %129 to i64
  %134 = sub i64 %132, %133
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %131, i64 %134) #9
  store i32 %89, i32* %4, align 4
  br label %135

135:                                              ; preds = %126, %13, %3
  %136 = phi i1 [ false, %3 ], [ true, %126 ], [ false, %13 ]
  ret i1 %136
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %22, %39, %42
  %44 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %26, i64 1
  %45 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %46 = load i32, i32* %8, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %45, i64 %47
  %49 = icmp ne %"class.blink::CSSPropertyValue"* %26, null
  %50 = icmp ne %"class.blink::CSSPropertyValue"* %44, null
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %81, !prof !4

52:                                               ; preds = %43
  %53 = icmp ult %"class.blink::CSSPropertyValue"* %44, %48
  br i1 %53, label %54, label %73

54:                                               ; preds = %52, %54
  %55 = phi %"class.blink::CSSPropertyValue"* [ %71, %54 ], [ %26, %52 ]
  %56 = phi %"class.blink::CSSPropertyValue"* [ %70, %54 ], [ %44, %52 ]
  %57 = bitcast %"class.blink::CSSPropertyValue"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.blink::CSSPropertyValue"* %55 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %55, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %56, i64 0, i32 0, i32 1
  %62 = bitcast i16* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i16* %60 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %55, i64 0, i32 1
  %66 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %56, i64 0, i32 1
  %67 = bitcast %"class.blink::Member"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::Member"* %65 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %56, i64 1
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %55, i64 1
  %72 = icmp ult %"class.blink::CSSPropertyValue"* %70, %48
  br i1 %72, label %54, label %73

73:                                               ; preds = %54, %52
  %74 = ptrtoint %"class.blink::CSSPropertyValue"* %48 to i64
  %75 = ptrtoint %"class.blink::CSSPropertyValue"* %44 to i64
  %76 = sub i64 %74, %75
  %77 = sdiv exact i64 %76, 24
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %26, i64 %77) #9
  %78 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %79 = load i32, i32* %8, align 4
  %80 = zext i32 %79 to i64
  br label %81

81:                                               ; preds = %43, %73
  %82 = phi i64 [ %47, %43 ], [ %80, %73 ]
  %83 = phi %"class.blink::CSSPropertyValue"* [ %45, %43 ], [ %78, %73 ]
  %84 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %83, i64 %82
  %85 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %84, i64 -1
  %86 = bitcast %"class.blink::CSSPropertyValue"* %85 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %86, i64 24) #9
  %87 = load i32, i32* %8, align 4
  %88 = add i32 %87, -1
  store i32 %88, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19CSSPropertyValueSet20GetPropertyShorthandENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = load i32, i32* null, align 536870912
  br label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %12 = bitcast %"class.blink::CSSPropertyValueSet"* %11 to %"class.blink::CSSPropertyValue"**
  %13 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 %16
  %18 = trunc i32 %1 to i16
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %10, %26
  %21 = phi %"class.blink::CSSPropertyValue"* [ %27, %26 ], [ %13, %10 ]
  %22 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 0, i32 0
  %23 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %22) #9
  %24 = trunc i32 %23 to i16
  %25 = icmp eq i16 %18, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 1
  %28 = icmp eq %"class.blink::CSSPropertyValue"* %27, %17
  br i1 %28, label %88, label %20

29:                                               ; preds = %20, %10
  %30 = phi %"class.blink::CSSPropertyValue"* [ %13, %10 ], [ %21, %20 ]
  %31 = icmp eq %"class.blink::CSSPropertyValue"* %30, %17
  br i1 %31, label %88, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.blink::CSSPropertyValue"* %30 to i64
  %34 = ptrtoint %"class.blink::CSSPropertyValue"* %13 to i64
  %35 = sub i64 %33, %34
  %36 = sdiv exact i64 %35, 24
  br label %59

37:                                               ; preds = %6, %4
  %38 = phi i32 [ %5, %4 ], [ %8, %6 ]
  %39 = trunc i32 %1 to i16
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %42 = bitcast %"class.blink::CSSPropertyValueSet"* %41 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %43 = and i32 %38, 268435455
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %49, %37
  %46 = phi i64 [ %47, %49 ], [ %44, %37 ]
  %47 = add nsw i64 %46, -1
  %48 = icmp sgt i64 %46, 0
  br i1 %48, label %49, label %88

49:                                               ; preds = %45
  %50 = load i32, i32* %40, align 8
  %51 = and i32 %50, 268435455
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %42, i64 %52
  %54 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %53 to %"struct.blink::CSSPropertyValueMetadata"*
  %55 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %54, i64 %47
  %56 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %55) #9
  %57 = trunc i32 %56 to i16
  %58 = icmp eq i16 %57, %39
  br i1 %58, label %59, label %45

59:                                               ; preds = %49, %32
  %60 = phi i64 [ %36, %32 ], [ %47, %49 ]
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %88, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  br i1 %3, label %65, label %67

65:                                               ; preds = %63
  %66 = load i32, i32* %64, align 8
  br label %75

67:                                               ; preds = %63
  %68 = load i32, i32* %64, align 4
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %72 = bitcast %"class.blink::CSSPropertyValueSet"* %71 to %"class.WTF::Vector"*
  %73 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %72, i32 %61) #9
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 0, i32 0
  br label %85

75:                                               ; preds = %67, %65
  %76 = phi i32 [ %66, %65 ], [ %68, %67 ]
  %77 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %78 = bitcast %"class.blink::CSSPropertyValueSet"* %77 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %79 = and i32 %76, 268435455
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %78, i64 %80
  %82 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %81 to %"struct.blink::CSSPropertyValueMetadata"*
  %83 = and i64 %60, 4294967295
  %84 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %82, i64 %83
  br label %85

85:                                               ; preds = %70, %75
  %86 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %84, %75 ], [ %74, %70 ]
  %87 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata11ShorthandIDEv(%"struct.blink::CSSPropertyValueMetadata"* %86) #9
  br label %88

88:                                               ; preds = %26, %45, %29, %59, %85
  %89 = phi i32 [ %87, %85 ], [ 0, %59 ], [ 0, %29 ], [ 0, %45 ], [ 0, %26 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet18IsPropertyImplicitENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = load i32, i32* null, align 536870912
  br label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %12 = bitcast %"class.blink::CSSPropertyValueSet"* %11 to %"class.blink::CSSPropertyValue"**
  %13 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 %16
  %18 = trunc i32 %1 to i16
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %10, %26
  %21 = phi %"class.blink::CSSPropertyValue"* [ %27, %26 ], [ %13, %10 ]
  %22 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 0, i32 0
  %23 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %22) #9
  %24 = trunc i32 %23 to i16
  %25 = icmp eq i16 %18, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %21, i64 1
  %28 = icmp eq %"class.blink::CSSPropertyValue"* %27, %17
  br i1 %28, label %90, label %20

29:                                               ; preds = %20, %10
  %30 = phi %"class.blink::CSSPropertyValue"* [ %13, %10 ], [ %21, %20 ]
  %31 = icmp eq %"class.blink::CSSPropertyValue"* %30, %17
  br i1 %31, label %90, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.blink::CSSPropertyValue"* %30 to i64
  %34 = ptrtoint %"class.blink::CSSPropertyValue"* %13 to i64
  %35 = sub i64 %33, %34
  %36 = sdiv exact i64 %35, 24
  br label %59

37:                                               ; preds = %6, %4
  %38 = phi i32 [ %5, %4 ], [ %8, %6 ]
  %39 = trunc i32 %1 to i16
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %42 = bitcast %"class.blink::CSSPropertyValueSet"* %41 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %43 = and i32 %38, 268435455
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %49, %37
  %46 = phi i64 [ %47, %49 ], [ %44, %37 ]
  %47 = add nsw i64 %46, -1
  %48 = icmp sgt i64 %46, 0
  br i1 %48, label %49, label %90

49:                                               ; preds = %45
  %50 = load i32, i32* %40, align 8
  %51 = and i32 %50, 268435455
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %42, i64 %52
  %54 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %53 to %"struct.blink::CSSPropertyValueMetadata"*
  %55 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %54, i64 %47
  %56 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %55) #9
  %57 = trunc i32 %56 to i16
  %58 = icmp eq i16 %57, %39
  br i1 %58, label %59, label %45

59:                                               ; preds = %49, %32
  %60 = phi i64 [ %36, %32 ], [ %47, %49 ]
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %90, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  br i1 %3, label %65, label %67

65:                                               ; preds = %63
  %66 = load i32, i32* %64, align 8
  br label %75

67:                                               ; preds = %63
  %68 = load i32, i32* %64, align 4
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %72 = bitcast %"class.blink::CSSPropertyValueSet"* %71 to %"class.WTF::Vector"*
  %73 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %72, i32 %61) #9
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 0, i32 0
  br label %85

75:                                               ; preds = %67, %65
  %76 = phi i32 [ %66, %65 ], [ %68, %67 ]
  %77 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %78 = bitcast %"class.blink::CSSPropertyValueSet"* %77 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %79 = and i32 %76, 268435455
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %78, i64 %80
  %82 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %81 to %"struct.blink::CSSPropertyValueMetadata"*
  %83 = and i64 %60, 4294967295
  %84 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %82, i64 %83
  br label %85

85:                                               ; preds = %70, %75
  %86 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %84, %75 ], [ %74, %70 ]
  %87 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %86, i64 0, i32 1
  %88 = load i16, i16* %87, align 8
  %89 = icmp slt i16 %88, 0
  br label %90

90:                                               ; preds = %26, %45, %29, %59, %85
  %91 = phi i1 [ %89, %85 ], [ false, %59 ], [ false, %29 ], [ false, %45 ], [ false, %26 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %54

14:                                               ; preds = %6, %10
  %15 = and i32 %1, 1023
  %16 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %15) #9
  %17 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %16, i64 0, i32 0
  %22 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %22, i32 %18) #9
  br i1 %23, label %58, label %24

24:                                               ; preds = %20, %14
  %25 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %26, i64 %29
  %31 = trunc i32 %15 to i16
  %32 = icmp eq i32 %28, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %24, %39
  %34 = phi %"class.blink::CSSPropertyValue"* [ %40, %39 ], [ %26, %24 ]
  %35 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %34, i64 0, i32 0
  %36 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %35) #9
  %37 = trunc i32 %36 to i16
  %38 = icmp eq i16 %31, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %34, i64 1
  %41 = icmp eq %"class.blink::CSSPropertyValue"* %40, %30
  br i1 %41, label %58, label %33

42:                                               ; preds = %33, %24
  %43 = phi %"class.blink::CSSPropertyValue"* [ %26, %24 ], [ %34, %33 ]
  %44 = icmp eq %"class.blink::CSSPropertyValue"* %43, %30
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = ptrtoint %"class.blink::CSSPropertyValue"* %43 to i64
  %47 = ptrtoint %"class.blink::CSSPropertyValue"* %26 to i64
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 24
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %53, i32 %50) #9
  br label %58

54:                                               ; preds = %10
  %55 = tail call i16 @_ZN5blink9CSSParser10ParseValueEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEPKNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"* %0, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3, i32 %4, %"class.blink::StyleSheetContents"* %5, %"class.blink::ExecutionContext"* null) #9
  %56 = and i16 %55, -256
  %57 = and i16 %55, 255
  br label %58

58:                                               ; preds = %39, %20, %45, %52, %42, %54
  %59 = phi i16 [ %57, %54 ], [ 1, %42 ], [ 1, %52 ], [ 1, %45 ], [ 1, %20 ], [ 1, %39 ]
  %60 = phi i16 [ %56, %54 ], [ 0, %42 ], [ 256, %52 ], [ 0, %45 ], [ 256, %20 ], [ 0, %39 ]
  %61 = or i16 %60, %59
  ret i16 %61
}

declare i16 @_ZN5blink9CSSParser10ParseValueEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEPKNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKN3WTF12AtomicStringERKNS1_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %72

15:                                               ; preds = %7, %11
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %52, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #9
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %19, %34
  %37 = load atomic i32, i32* %20 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %15, %50, %36
  %53 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %17) #9
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %56, i32 %53) #9
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i16 [ 256, %55 ], [ 0, %52 ]
  br i1 %18, label %76, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %76

72:                                               ; preds = %11
  %73 = tail call i16 @_ZN5blink9CSSParser27ParseValueForCustomPropertyEPNS_26MutableCSSPropertyValueSetERKN3WTF12AtomicStringERKNS3_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3, i32 %4, %"class.blink::StyleSheetContents"* %5, i1 zeroext %6) #9
  %74 = and i16 %73, -256
  %75 = and i16 %73, 255
  br label %76

76:                                               ; preds = %71, %68, %57, %72
  %77 = phi i16 [ %75, %72 ], [ 1, %57 ], [ 1, %68 ], [ 1, %71 ]
  %78 = phi i16 [ %74, %72 ], [ %58, %57 ], [ %58, %68 ], [ %58, %71 ]
  %79 = or i16 %78, %77
  ret i16 %79
}

declare i16 @_ZN5blink9CSSParser27ParseValueForCustomPropertyEPNS_26MutableCSSPropertyValueSetERKN3WTF12AtomicStringERKNS3_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = alloca %"class.blink::CSSPropertyValue", align 8
  %7 = alloca %"class.blink::CSSPropertyName", align 8
  %8 = alloca %"class.blink::CSSPropertyValue", align 8
  %9 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %1) #9
  %10 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %9, i64 0, i32 0
  %11 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %84

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = icmp eq i32 %1, 1
  br i1 %17, label %18, label %42

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %20 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  store i32 1, i32* %20, align 8
  %21 = bitcast i8* %19 to %"class.WTF::StringImpl"**
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %45

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #9
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  tail call void @llvm.trap() #9
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %45

42:                                               ; preds = %15
  %43 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  store i32 %1, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %44, align 8
  br label %45

45:                                               ; preds = %40, %25, %18, %42
  %46 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %47, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5, i1 zeroext false, i32 0, i1 zeroext %3, i1 zeroext false) #9
  %48 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSValue"* %2, %"class.blink::CSSValue"** %48, align 8
  %49 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %6, %"class.blink::CSSPropertyValue"* null)
  %50 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #9
  br label %66

66:                                               ; preds = %45, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #9
  %67 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %66, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %151

84:                                               ; preds = %4
  %85 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %11, i32 %13)
  %86 = bitcast %"class.blink::CSSPropertyName"* %7 to i8*
  %87 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %90 = bitcast %"class.blink::CSSPropertyValue"* %8 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %8, i64 0, i32 0
  %92 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %8, i64 0, i32 1, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %94 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %89, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = zext i32 %13 to i64
  br label %98

98:                                               ; preds = %148, %84
  %99 = phi i64 [ 0, %84 ], [ %149, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false)
  %100 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, i64 %99
  %101 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #9
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %91, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %7, i1 zeroext false, i32 0, i1 zeroext %3, i1 zeroext false) #9
  store %"class.blink::CSSValue"* %2, %"class.blink::CSSValue"** %92, align 8
  %104 = load i32, i32* %93, align 4
  %105 = load i32, i32* %94, align 8
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %115, label %107, !prof !2

107:                                              ; preds = %98
  %108 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %95, align 8
  %109 = zext i32 %104 to i64
  %110 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %108, i64 %109
  %111 = bitcast %"class.blink::CSSPropertyValue"* %110 to i8*
  %112 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %111, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %8) #9
  %113 = load i32, i32* %93, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %93, align 4
  br label %116

115:                                              ; preds = %98
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %89, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %8) #9
  br label %116

116:                                              ; preds = %107, %115
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #9
  br label %132

132:                                              ; preds = %116, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #9
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #9
  br label %148

148:                                              ; preds = %132, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #9
  %149 = add nuw nsw i64 %99, 1
  %150 = icmp eq i64 %149, %97
  br i1 %150, label %151, label %98

151:                                              ; preds = %148, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"* dereferenceable(24), %"class.blink::CSSPropertyValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = icmp eq %"class.blink::CSSPropertyValue"* %2, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %138, label %78

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0
  %13 = tail call { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"* %12) #9
  %14 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %15 = extractvalue { i32, %"class.WTF::StringImpl"* } %13, 0
  store i32 %15, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = extractvalue { i32, %"class.WTF::StringImpl"* } %13, 1
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq i32 %15, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %10
  %20 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* nonnull %4) #9
  %21 = call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %20) #9
  br label %49

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %27
  %29 = trunc i32 %15 to i16
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %22, %37
  %32 = phi %"class.blink::CSSPropertyValue"* [ %38, %37 ], [ %24, %22 ]
  %33 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %32, i64 0, i32 0
  %34 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %33) #9
  %35 = trunc i32 %34 to i16
  %36 = icmp eq i16 %29, %35
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %32, i64 1
  %39 = icmp eq %"class.blink::CSSPropertyValue"* %38, %28
  br i1 %39, label %55, label %31

40:                                               ; preds = %31, %22
  %41 = phi %"class.blink::CSSPropertyValue"* [ %24, %22 ], [ %32, %31 ]
  %42 = icmp eq %"class.blink::CSSPropertyValue"* %41, %28
  br i1 %42, label %55, label %43

43:                                               ; preds = %40
  %44 = ptrtoint %"class.blink::CSSPropertyValue"* %41 to i64
  %45 = ptrtoint %"class.blink::CSSPropertyValue"* %24 to i64
  %46 = sub i64 %44, %45
  %47 = sdiv exact i64 %46, 24
  %48 = trunc i64 %47 to i32
  br label %49

49:                                               ; preds = %43, %19
  %50 = phi i32 [ %21, %19 ], [ %48, %43 ]
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %54 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %53, i32 %50) #9
  br label %55

55:                                               ; preds = %37, %40, %49, %52
  %56 = phi %"class.blink::CSSPropertyValue"* [ null, %40 ], [ null, %49 ], [ %54, %52 ], [ null, %37 ]
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %71, %68, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %73 = icmp eq %"class.blink::CSSPropertyValue"* %56, null
  %74 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 4
  %75 = load i8, i8* %74, align 8, !range !3
  %76 = icmp ne i8 %75, 0
  br i1 %73, label %195, label %77

77:                                               ; preds = %72
  br i1 %76, label %78, label %138

78:                                               ; preds = %6, %77
  %79 = phi %"class.blink::CSSPropertyValue"* [ %2, %6 ], [ %56, %77 ]
  %80 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0
  %81 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %80) #9
  %82 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %81) #9
  %83 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %82, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 524288
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %138, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %89 = bitcast %"class.WTF::Vector"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = ptrtoint %"class.blink::CSSPropertyValue"* %79 to i64
  %92 = sub i64 %91, %90
  %93 = sdiv exact i64 %92, 24
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0
  %98 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %0, null
  %99 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %97, i64 4
  %101 = bitcast %"class.blink::CSSPropertyValueSet"* %100 to %"class.WTF::Vector"*
  %102 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %97, i64 2
  %103 = bitcast %"class.blink::CSSPropertyValueSet"* %102 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %104 = bitcast %"class.blink::CSSProperty"* %82 to i1 (%"class.blink::CSSProperty"*, i32)***
  br label %105

105:                                              ; preds = %126, %87
  %106 = phi i32 [ %96, %87 ], [ %107, %126 ]
  %107 = add i32 %106, -1
  %108 = icmp sgt i32 %107, %94
  br i1 %108, label %109, label %136

109:                                              ; preds = %105
  br i1 %98, label %110, label %112

110:                                              ; preds = %109
  %111 = load i32, i32* %99, align 8
  br label %118

112:                                              ; preds = %109
  %113 = load i32, i32* %99, align 4
  %114 = icmp sgt i32 %113, -1
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %101, i32 %107) #9
  %117 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %116, i64 0, i32 0
  br label %126

118:                                              ; preds = %112, %110
  %119 = phi i32 [ %111, %110 ], [ %113, %112 ]
  %120 = and i32 %119, 268435455
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %103, i64 %121
  %123 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %122 to %"struct.blink::CSSPropertyValueMetadata"*
  %124 = zext i32 %107 to i64
  %125 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %123, i64 %124
  br label %126

126:                                              ; preds = %115, %118
  %127 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %125, %118 ], [ %117, %115 ]
  %128 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %127) #9
  %129 = load i1 (%"class.blink::CSSProperty"*, i32)**, i1 (%"class.blink::CSSProperty"*, i32)*** %104, align 8
  %130 = getelementptr inbounds i1 (%"class.blink::CSSProperty"*, i32)*, i1 (%"class.blink::CSSProperty"*, i32)** %129, i64 12
  %131 = load i1 (%"class.blink::CSSProperty"*, i32)*, i1 (%"class.blink::CSSProperty"*, i32)** %130, align 8
  %132 = call zeroext i1 %131(%"class.blink::CSSProperty"* %82, i32 %128) #9
  br i1 %132, label %133, label %105

133:                                              ; preds = %126
  %134 = icmp eq i32 %94, -1
  br i1 %134, label %207, label %135

135:                                              ; preds = %133
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %88, i32 %94) #9
  br label %207

136:                                              ; preds = %105
  %137 = icmp eq %"class.blink::CSSPropertyValue"* %79, null
  br i1 %137, label %207, label %138

138:                                              ; preds = %78, %6, %77, %136
  %139 = phi %"class.blink::CSSPropertyValue"* [ %79, %136 ], [ %2, %6 ], [ %79, %78 ], [ %56, %77 ]
  %140 = call zeroext i1 @_ZNK5blink16CSSPropertyValueeqERKS0_(%"class.blink::CSSPropertyValue"* nonnull %139, %"class.blink::CSSPropertyValue"* dereferenceable(24) %1) #9
  br i1 %140, label %224, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %162, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #9
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !2

159:                                              ; preds = %150
  call void @llvm.trap() #9
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %162

162:                                              ; preds = %160, %145, %141
  %163 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  %164 = bitcast %"class.blink::CSSPropertyValue"* %139 to i64*
  %165 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  store i64 %163, i64* %164, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #9
  br label %181

181:                                              ; preds = %180, %177, %162
  %182 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %139, i64 0, i32 0, i32 1
  %183 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 1
  %184 = load i16, i16* %183, align 8
  store i16 %184, i16* %182, align 8
  %185 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %139, i64 0, i32 1
  %186 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 1
  %187 = bitcast %"class.blink::Member"* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.blink::Member"* %185 to i64*
  store atomic i64 %188, i64* %189 monotonic, align 8
  %190 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %224, label %192

192:                                              ; preds = %181
  %193 = inttoptr i64 %188 to i8*
  %194 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %193) #9
  br label %224

195:                                              ; preds = %72
  br i1 %76, label %207, label %196

196:                                              ; preds = %195
  %197 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %12) #9
  %198 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %197) #9
  %199 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %198, i64 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 524288
  %202 = icmp eq i32 %201, 0
  %203 = lshr i32 %200, 13
  %204 = trunc i32 %203 to i8
  %205 = and i8 %204, 1
  %206 = select i1 %202, i8 0, i8 %205
  store i8 %206, i8* %74, align 8
  br label %207

207:                                              ; preds = %135, %133, %136, %195, %196
  %208 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %209 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %210, %212
  br i1 %213, label %223, label %214, !prof !2

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %208, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %215, align 8
  %217 = zext i32 %210 to i64
  %218 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %216, i64 %217
  %219 = bitcast %"class.blink::CSSPropertyValue"* %218 to i8*
  %220 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %219, %"class.blink::CSSPropertyValue"* dereferenceable(24) %1) #9
  %221 = load i32, i32* %209, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %209, align 4
  br label %224

223:                                              ; preds = %207
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"* %208, %"class.blink::CSSPropertyValue"* dereferenceable(24) %1) #9
  br label %224

224:                                              ; preds = %223, %214, %192, %181, %138
  %225 = phi i1 [ false, %138 ], [ true, %181 ], [ true, %192 ], [ true, %214 ], [ true, %223 ]
  ret i1 %225
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSPropertyValue"* @_ZN5blink26MutableCSSPropertyValueSet23FindCSSPropertyWithNameERKNS_15CSSPropertyNameE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %1) #9
  %8 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %7)
  br label %36

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %11, i64 %14
  %16 = trunc i32 %4 to i16
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %9, %24
  %19 = phi %"class.blink::CSSPropertyValue"* [ %25, %24 ], [ %11, %9 ]
  %20 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %19, i64 0, i32 0
  %21 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %20) #9
  %22 = trunc i32 %21 to i16
  %23 = icmp eq i16 %16, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %19, i64 1
  %26 = icmp eq %"class.blink::CSSPropertyValue"* %25, %15
  br i1 %26, label %42, label %18

27:                                               ; preds = %18, %9
  %28 = phi %"class.blink::CSSPropertyValue"* [ %11, %9 ], [ %19, %18 ]
  %29 = icmp eq %"class.blink::CSSPropertyValue"* %28, %15
  br i1 %29, label %42, label %30

30:                                               ; preds = %27
  %31 = ptrtoint %"class.blink::CSSPropertyValue"* %28 to i64
  %32 = ptrtoint %"class.blink::CSSPropertyValue"* %11 to i64
  %33 = sub i64 %31, %32
  %34 = sdiv exact i64 %33, 24
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %30, %6
  %37 = phi i32 [ %8, %6 ], [ %35, %30 ]
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %41 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %40, i32 %37)
  br label %42

42:                                               ; preds = %24, %27, %36, %39
  %43 = phi %"class.blink::CSSPropertyValue"* [ %41, %39 ], [ null, %36 ], [ null, %27 ], [ null, %24 ]
  ret %"class.blink::CSSPropertyValue"* %43
}

declare zeroext i1 @_ZNK5blink16CSSPropertyValueeqERKS0_(%"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = alloca %"class.blink::CSSPropertyValue", align 8
  %7 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %"class.blink::CSSPropertyName"* %5 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = tail call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 %2) #9
  %13 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %14, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5, i1 zeroext false, i32 0, i1 zeroext %3, i1 zeroext false) #9
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSValue"* %13, %"class.blink::CSSValue"** %15, align 8
  %16 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %6, %"class.blink::CSSPropertyValue"* null)
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %4, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %33, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret i1 true
}

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSet20ParseDeclarationListERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"* %5)
  %6 = icmp eq %"class.blink::StyleSheetContents"* %3, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 10, i32 0, i32 0
  %9 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %8, align 8
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %11 = bitcast i8* %10 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_18StyleSheetContentsE(%"class.blink::CSSParserContext"* %11, %"class.blink::CSSParserContext"* %9, %"class.blink::StyleSheetContents"* nonnull %3) #9
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = lshr i32 %17, 28
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 7
  %21 = getelementptr inbounds i8, i8* %10, i64 121
  store i8 %20, i8* %21, align 1
  br label %34

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 28
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 7
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %29 = bitcast i8* %28 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"* %29, i8 zeroext %27, i32 %2, i8 zeroext 0, %"class.blink::Document"* null) #9
  %30 = getelementptr inbounds i8, i8* %28, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  br label %34

34:                                               ; preds = %22, %7
  %35 = phi %"class.blink::CSSParserContext"* [ %11, %7 ], [ %29, %22 ]
  %36 = tail call zeroext i1 @_ZN5blink9CSSParser20ParseDeclarationListEPKNS_16CSSParserContextEPNS_26MutableCSSPropertyValueSetERKN3WTF6StringE(%"class.blink::CSSParserContext"* %35, %"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::String"* dereferenceable(8) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %10, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %11, i64 %12
  br label %14

14:                                               ; preds = %32, %9
  %15 = phi %"class.blink::CSSPropertyValue"* [ %33, %32 ], [ %11, %9 ]
  %16 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %15, i64 1
  %34 = icmp eq %"class.blink::CSSPropertyValue"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  store i32 0, i32* %6, align 4
  br label %41

41:                                               ; preds = %5, %35
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  store i32 4, i32* %2, align 8
  %47 = bitcast i8* %44 to %"class.blink::CSSPropertyValue"*
  %48 = icmp eq %"class.blink::CSSPropertyValue"* %43, %47
  br i1 %48, label %51, label %49, !prof !4

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %50, %"class.blink::CSSPropertyValue"* %43) #9
  br label %51

51:                                               ; preds = %1, %41, %49
  ret void
}

declare zeroext i1 @_ZN5blink9CSSParser20ParseDeclarationListEPKNS_16CSSParserContextEPNS_26MutableCSSPropertyValueSetERKN3WTF6StringE(%"class.blink::CSSParserContext"*, %"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet19AddParsedPropertiesERKNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::HeapVector.521"* dereferenceable(6160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %5
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %3, i32 %9)
  %10 = load i32, i32* %7, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %14, %2
  %13 = phi i1 [ false, %2 ], [ %19, %14 ]
  ret i1 %13

14:                                               ; preds = %2, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %2 ]
  %16 = phi i1 [ %19, %14 ], [ false, %2 ]
  %17 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.524"* %6, i32 %15) #9
  %18 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSPropertyValue"* dereferenceable(24) %17, %"class.blink::CSSPropertyValue"* null)
  %19 = or i1 %16, %18
  %20 = add nuw i32 %15, 1
  %21 = load i32, i32* %7, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %14, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %14) #9
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::CSSPropertyValue"*
  %33 = icmp eq %"class.blink::CSSPropertyValue"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %37) #9
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %40 = icmp eq %"class.blink::CSSPropertyValue"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 96, %34 ]
  %43 = phi %"class.blink::CSSPropertyValue"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::CSSPropertyValue"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #9
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 24
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #9
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #9
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet20AddRespectingCascadeERKNS_16CSSPropertyValueE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0
  %5 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %4) #9
  %6 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %3, i32 %5)
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 1
  %9 = load i16, i16* %8, align 8
  %10 = and i16 %9, 16384
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %7, %2
  %13 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSPropertyValue"* dereferenceable(24) %1, %"class.blink::CSSPropertyValue"* null)
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i1 [ %13, %12 ], [ false, %7 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StylePropertySerializer", align 8
  %3 = bitcast %"class.blink::StylePropertySerializer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %3) #9
  call void @_ZN5blink23StylePropertySerializerC1ERKNS_19CSSPropertyValueSetE(%"class.blink::StylePropertySerializer"* nonnull %2, %"class.blink::CSSPropertyValueSet"* dereferenceable(4) %0) #9
  %4 = call %"class.WTF::StringImpl"* @_ZNK5blink23StylePropertySerializer6AsTextEv(%"class.blink::StylePropertySerializer"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %3) #9
  ret %"class.WTF::StringImpl"* %4
}

declare void @_ZN5blink23StylePropertySerializerC1ERKNS_19CSSPropertyValueSetE(%"class.blink::StylePropertySerializer"*, %"class.blink::CSSPropertyValueSet"* dereferenceable(4)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink23StylePropertySerializer6AsTextEv(%"class.blink::StylePropertySerializer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = alloca %"class.blink::CSSPropertyValue", align 8
  %5 = alloca %"class.blink::CSSPropertyValue", align 8
  %6 = icmp eq %"class.blink::CSSPropertyValueSet"* %1, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load i32, i32* null, align 536870912
  br label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 7, i32 0
  %15 = load i32, i32* %14, align 4
  br label %19

16:                                               ; preds = %9, %7
  %17 = phi i32 [ %8, %7 ], [ %11, %9 ]
  %18 = and i32 %17, 268435455
  br label %19

19:                                               ; preds = %13, %16
  %20 = phi i32 [ %18, %16 ], [ %15, %13 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %48, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 4
  %26 = bitcast %"class.blink::CSSPropertyValueSet"* %25 to %"class.WTF::Vector"*
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %1, i64 2
  %28 = bitcast %"class.blink::CSSPropertyValueSet"* %27 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %29 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %34 = bitcast %"class.blink::CSSPropertyValue"* %4 to i8*
  %35 = bitcast %"class.blink::CSSPropertyValueSet"* %27 to %"class.blink::Member"*
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %4, i64 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.blink::CSSValue"** %38 to i64*
  %40 = bitcast %"class.blink::CSSPropertyValue"* %5 to i8*
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.blink::CSSValue"** %43 to i64*
  %45 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = zext i32 %20 to i64
  br label %49

48:                                               ; preds = %341, %19
  ret void

49:                                               ; preds = %341, %22
  %50 = phi i64 [ 0, %22 ], [ %343, %341 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  br i1 %6, label %51, label %53

51:                                               ; preds = %49
  %52 = load i32, i32* %24, align 8
  br label %60

53:                                               ; preds = %49
  %54 = load i32, i32* %24, align 4
  %55 = icmp sgt i32 %54, -1
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = trunc i64 %50 to i32
  %58 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %26, i32 %57) #9
  %59 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %58, i64 0, i32 0
  br label %67

60:                                               ; preds = %53, %51
  %61 = phi i32 [ %52, %51 ], [ %54, %53 ]
  %62 = and i32 %61, 268435455
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %28, i64 %63
  %65 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %64 to %"struct.blink::CSSPropertyValueMetadata"*
  %66 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %65, i64 %50
  br label %67

67:                                               ; preds = %56, %60
  %68 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %66, %60 ], [ %59, %56 ]
  %69 = call { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"* %68) #9
  %70 = extractvalue { i32, %"class.WTF::StringImpl"* } %69, 0
  store i32 %70, i32* %29, align 8
  %71 = extractvalue { i32, %"class.WTF::StringImpl"* } %69, 1
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %30, align 8
  %72 = icmp eq i32 %70, 1
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* nonnull %3) #9
  %75 = call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.WTF::StringImpl"* %74) #9
  br label %101

76:                                               ; preds = %67
  %77 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %31, align 8
  %78 = load i32, i32* %32, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %77, i64 %79
  %81 = trunc i32 %70 to i16
  %82 = icmp eq i32 %78, 0
  br i1 %82, label %92, label %83

83:                                               ; preds = %76, %89
  %84 = phi %"class.blink::CSSPropertyValue"* [ %90, %89 ], [ %77, %76 ]
  %85 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %84, i64 0, i32 0
  %86 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %85) #9
  %87 = trunc i32 %86 to i16
  %88 = icmp eq i16 %81, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %84, i64 1
  %91 = icmp eq %"class.blink::CSSPropertyValue"* %90, %80
  br i1 %91, label %106, label %83

92:                                               ; preds = %83, %76
  %93 = phi %"class.blink::CSSPropertyValue"* [ %77, %76 ], [ %84, %83 ]
  %94 = icmp eq %"class.blink::CSSPropertyValue"* %93, %80
  br i1 %94, label %106, label %95

95:                                               ; preds = %92
  %96 = ptrtoint %"class.blink::CSSPropertyValue"* %93 to i64
  %97 = ptrtoint %"class.blink::CSSPropertyValue"* %77 to i64
  %98 = sub i64 %96, %97
  %99 = sdiv exact i64 %98, 24
  %100 = trunc i64 %99 to i32
  br label %101

101:                                              ; preds = %95, %73
  %102 = phi i32 [ %75, %73 ], [ %100, %95 ]
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %33, i32 %102) #9
  br label %106

106:                                              ; preds = %89, %92, %101, %104
  %107 = phi %"class.blink::CSSPropertyValue"* [ %105, %104 ], [ null, %101 ], [ null, %92 ], [ null, %89 ]
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %123

123:                                              ; preds = %106, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  %124 = icmp eq %"class.blink::CSSPropertyValue"* %107, null
  br i1 %124, label %227, label %125

125:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  br i1 %6, label %126, label %128

126:                                              ; preds = %125
  %127 = load i32, i32* %24, align 8
  br label %135

128:                                              ; preds = %125
  %129 = load i32, i32* %24, align 4
  %130 = icmp sgt i32 %129, -1
  br i1 %130, label %135, label %131

131:                                              ; preds = %128
  %132 = trunc i64 %50 to i32
  %133 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %26, i32 %132) #9
  %134 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %133, i64 0, i32 0
  br label %142

135:                                              ; preds = %128, %126
  %136 = phi i32 [ %127, %126 ], [ %129, %128 ]
  %137 = and i32 %136, 268435455
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %28, i64 %138
  %140 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %139 to %"struct.blink::CSSPropertyValueMetadata"*
  %141 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %140, i64 %50
  br label %142

142:                                              ; preds = %131, %135
  %143 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %141, %135 ], [ %134, %131 ]
  %144 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #9
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !2

161:                                              ; preds = %152
  call void @llvm.trap() #9
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %164

164:                                              ; preds = %142, %147, %162
  %165 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %143, i64 0, i32 1
  %166 = load i16, i16* %165, align 8
  br i1 %6, label %174, label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %24, align 4
  %169 = icmp sgt i32 %168, -1
  br i1 %169, label %174, label %170

170:                                              ; preds = %167
  %171 = trunc i64 %50 to i32
  %172 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %26, i32 %171) #9
  %173 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %172, i64 0, i32 1, i32 0, i32 0
  br label %176

174:                                              ; preds = %167, %164
  %175 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %50, i32 0, i32 0
  br label %176

176:                                              ; preds = %170, %174
  %177 = phi %"class.blink::CSSValue"** [ %175, %174 ], [ %173, %170 ]
  %178 = bitcast %"class.blink::CSSValue"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  store %"class.WTF::StringImpl"* %145, %"class.WTF::StringImpl"** %36, align 8
  br i1 %146, label %197, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %198

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #9
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !2

194:                                              ; preds = %185
  call void @llvm.trap() #9
  unreachable

195:                                              ; preds = %185
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %186, align 4
  br label %198

197:                                              ; preds = %176
  store i16 %166, i16* %37, align 8
  store i64 %179, i64* %39, align 8
  br label %210

198:                                              ; preds = %195, %180
  store i16 %166, i16* %37, align 8
  store i64 %179, i64* %39, align 8
  %199 = load atomic i32, i32* %181 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %198
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %198
  %207 = phi i32 [ %205, %204 ], [ %203, %198 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #9
  br label %210

210:                                              ; preds = %197, %206, %209
  %211 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %4, %"class.blink::CSSPropertyValue"* nonnull %107)
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %341, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %341

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #9
  br label %341

227:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #9
  br i1 %6, label %228, label %230

228:                                              ; preds = %227
  %229 = load i32, i32* %24, align 8
  br label %237

230:                                              ; preds = %227
  %231 = load i32, i32* %24, align 4
  %232 = icmp sgt i32 %231, -1
  br i1 %232, label %237, label %233

233:                                              ; preds = %230
  %234 = trunc i64 %50 to i32
  %235 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %26, i32 %234) #9
  %236 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %235, i64 0, i32 0
  br label %244

237:                                              ; preds = %230, %228
  %238 = phi i32 [ %229, %228 ], [ %231, %230 ]
  %239 = and i32 %238, 268435455
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %28, i64 %240
  %242 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %241 to %"struct.blink::CSSPropertyValueMetadata"*
  %243 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %242, i64 %50
  br label %244

244:                                              ; preds = %233, %237
  %245 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %243, %237 ], [ %236, %233 ]
  %246 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %245, i64 0, i32 0, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %266, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %266

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = zext i32 %256 to i33
  %258 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %257, i33 1) #9
  %259 = extractvalue { i33, i1 } %258, 1
  %260 = extractvalue { i33, i1 } %258, 0
  %261 = icmp slt i33 %260, 0
  %262 = or i1 %259, %261
  br i1 %262, label %263, label %264, !prof !2

263:                                              ; preds = %254
  call void @llvm.trap() #9
  unreachable

264:                                              ; preds = %254
  %265 = trunc i33 %260 to i32
  store i32 %265, i32* %255, align 4
  br label %266

266:                                              ; preds = %244, %249, %264
  %267 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %245, i64 0, i32 1
  %268 = load i16, i16* %267, align 8
  br i1 %6, label %276, label %269

269:                                              ; preds = %266
  %270 = load i32, i32* %24, align 4
  %271 = icmp sgt i32 %270, -1
  br i1 %271, label %276, label %272

272:                                              ; preds = %269
  %273 = trunc i64 %50 to i32
  %274 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %26, i32 %273) #9
  %275 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %274, i64 0, i32 1, i32 0, i32 0
  br label %278

276:                                              ; preds = %269, %266
  %277 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %50, i32 0, i32 0
  br label %278

278:                                              ; preds = %272, %276
  %279 = phi %"class.blink::CSSValue"** [ %277, %276 ], [ %275, %272 ]
  %280 = bitcast %"class.blink::CSSValue"** %279 to i64*
  %281 = load i64, i64* %280, align 8
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %41, align 8
  br i1 %248, label %299, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %300

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = zext i32 %289 to i33
  %291 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %290, i33 1) #9
  %292 = extractvalue { i33, i1 } %291, 1
  %293 = extractvalue { i33, i1 } %291, 0
  %294 = icmp slt i33 %293, 0
  %295 = or i1 %292, %294
  br i1 %295, label %296, label %297, !prof !2

296:                                              ; preds = %287
  call void @llvm.trap() #9
  unreachable

297:                                              ; preds = %287
  %298 = trunc i33 %293 to i32
  store i32 %298, i32* %288, align 4
  br label %300

299:                                              ; preds = %278
  store i16 %268, i16* %42, align 8
  store i64 %281, i64* %44, align 8
  br label %312

300:                                              ; preds = %297, %282
  store i16 %268, i16* %42, align 8
  store i64 %281, i64* %44, align 8
  %301 = load atomic i32, i32* %283 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %300
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %300
  %309 = phi i32 [ %307, %306 ], [ %305, %300 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #9
  br label %312

312:                                              ; preds = %299, %308, %311
  %313 = load i32, i32* %32, align 4
  %314 = load i32, i32* %45, align 8
  %315 = icmp eq i32 %313, %314
  br i1 %315, label %324, label %316, !prof !2

316:                                              ; preds = %312
  %317 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %46, align 8
  %318 = zext i32 %313 to i64
  %319 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %317, i64 %318
  %320 = bitcast %"class.blink::CSSPropertyValue"* %319 to i8*
  %321 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %320, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %5) #9
  %322 = load i32, i32* %32, align 4
  %323 = add i32 %322, 1
  store i32 %323, i32* %32, align 4
  br label %325

324:                                              ; preds = %312
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %33, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %5) #9
  br label %325

325:                                              ; preds = %316, %324
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %341, label %328

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #9
  br label %341

341:                                              ; preds = %340, %337, %325, %226, %223, %210
  %342 = phi i8* [ %34, %210 ], [ %34, %223 ], [ %34, %226 ], [ %40, %325 ], [ %40, %337 ], [ %40, %340 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %342) #9
  %343 = add nuw nsw i64 %50, 1
  %344 = icmp eq i64 %343, %47
  br i1 %344, label %48, label %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = load i32, i32* null, align 536870912
  br label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %11 = load i32, i32* %10, align 4
  br label %15

12:                                               ; preds = %5, %3
  %13 = phi i32 [ %4, %3 ], [ %7, %5 ]
  %14 = and i32 %13, 268435455
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi i32 [ %14, %12 ], [ %11, %9 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %21 = bitcast %"class.blink::CSSPropertyValueSet"* %20 to %"class.WTF::Vector"*
  %22 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %23 = bitcast %"class.blink::CSSPropertyValueSet"* %22 to %"class.blink::Member"*
  %24 = zext i32 %16 to i64
  br label %27

25:                                               ; preds = %38
  %26 = icmp eq i64 %42, %24
  br i1 %26, label %43, label %27

27:                                               ; preds = %25, %18
  %28 = phi i64 [ 0, %18 ], [ %42, %25 ]
  br i1 %2, label %36, label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %19, align 4
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = trunc i64 %28 to i32
  %34 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %33) #9
  %35 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %34, i64 0, i32 1, i32 0, i32 0
  br label %38

36:                                               ; preds = %29, %27
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %23, i64 %28, i32 0, i32 0
  br label %38

38:                                               ; preds = %32, %36
  %39 = phi %"class.blink::CSSValue"** [ %37, %36 ], [ %35, %32 ]
  %40 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %39, align 8
  %41 = tail call zeroext i1 @_ZNK5blink8CSSValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSValue"* %40) #9
  %42 = add nuw nsw i64 %28, 1
  br i1 %41, label %43, label %25

43:                                               ; preds = %38, %25, %15
  %44 = phi i1 [ false, %15 ], [ false, %25 ], [ true, %38 ]
  ret i1 %44
}

declare zeroext i1 @_ZNK5blink8CSSValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSet5ClearEv(%"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"* %2)
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19CSSPropertyValueSet15PropertyMatchesENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::CSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = load i32, i32* null, align 536870912
  br label %38

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %13 = bitcast %"class.blink::CSSPropertyValueSet"* %12 to %"class.blink::CSSPropertyValue"**
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 7, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %14, i64 %17
  %19 = trunc i32 %1 to i16
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %11, %27
  %22 = phi %"class.blink::CSSPropertyValue"* [ %28, %27 ], [ %14, %11 ]
  %23 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 0, i32 0
  %24 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %23) #9
  %25 = trunc i32 %24 to i16
  %26 = icmp eq i16 %19, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 1
  %29 = icmp eq %"class.blink::CSSPropertyValue"* %28, %18
  br i1 %29, label %83, label %21

30:                                               ; preds = %21, %11
  %31 = phi %"class.blink::CSSPropertyValue"* [ %14, %11 ], [ %22, %21 ]
  %32 = icmp eq %"class.blink::CSSPropertyValue"* %31, %18
  br i1 %32, label %83, label %33

33:                                               ; preds = %30
  %34 = ptrtoint %"class.blink::CSSPropertyValue"* %31 to i64
  %35 = ptrtoint %"class.blink::CSSPropertyValue"* %14 to i64
  %36 = sub i64 %34, %35
  %37 = sdiv exact i64 %36, 24
  br label %60

38:                                               ; preds = %7, %5
  %39 = phi i32 [ %6, %5 ], [ %9, %7 ]
  %40 = trunc i32 %1 to i16
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %43 = bitcast %"class.blink::CSSPropertyValueSet"* %42 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %44 = and i32 %39, 268435455
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %50, %38
  %47 = phi i64 [ %48, %50 ], [ %45, %38 ]
  %48 = add nsw i64 %47, -1
  %49 = icmp sgt i64 %47, 0
  br i1 %49, label %50, label %83

50:                                               ; preds = %46
  %51 = load i32, i32* %41, align 8
  %52 = and i32 %51, 268435455
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %43, i64 %53
  %55 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %54 to %"struct.blink::CSSPropertyValueMetadata"*
  %56 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %55, i64 %48
  %57 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %56) #9
  %58 = trunc i32 %57 to i16
  %59 = icmp eq i16 %58, %40
  br i1 %59, label %60, label %46

60:                                               ; preds = %50, %33
  %61 = phi i64 [ %37, %33 ], [ %48, %50 ]
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %83, label %64

64:                                               ; preds = %60
  br i1 %4, label %74, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, -1
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 4
  %71 = bitcast %"class.blink::CSSPropertyValueSet"* %70 to %"class.WTF::Vector"*
  %72 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %71, i32 %62) #9
  %73 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %72, i64 0, i32 1, i32 0, i32 0
  br label %79

74:                                               ; preds = %65, %64
  %75 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %0, i64 2
  %76 = bitcast %"class.blink::CSSPropertyValueSet"* %75 to %"class.blink::Member"*
  %77 = and i64 %61, 4294967295
  %78 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %76, i64 %77, i32 0, i32 0
  br label %79

79:                                               ; preds = %69, %74
  %80 = phi %"class.blink::CSSValue"** [ %78, %74 ], [ %73, %69 ]
  %81 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %80, align 8
  %82 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* %81, %"class.blink::CSSValue"* dereferenceable(3) %2) #9
  br label %83

83:                                               ; preds = %27, %46, %30, %60, %79
  %84 = phi i1 [ %82, %79 ], [ false, %60 ], [ false, %30 ], [ false, %46 ], [ false, %27 ]
  ret i1 %84
}

declare zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.530", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.WTF::Vector.530"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %99, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0
  %15 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %0, null
  %16 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %14, i64 4
  %18 = bitcast %"class.blink::CSSPropertyValueSet"* %17 to %"class.WTF::Vector"*
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %14, i64 2
  %20 = bitcast %"class.blink::CSSPropertyValueSet"* %19 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %21 = bitcast %"class.blink::CSSPropertyValueSet"* %19 to %"class.blink::Member"*
  %22 = bitcast i32* %4 to i8*
  %23 = zext i32 %11 to i64
  br label %29

24:                                               ; preds = %96
  %25 = load i32, i32* %8, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %99, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %109

29:                                               ; preds = %96, %13
  %30 = phi i64 [ 0, %13 ], [ %97, %96 ]
  br i1 %15, label %31, label %33

31:                                               ; preds = %29
  %32 = load i32, i32* %16, align 8
  br label %41

33:                                               ; preds = %29
  %34 = load i32, i32* %16, align 4
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = trunc i64 %30 to i32
  %38 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %37) #9
  %39 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %38, i64 0, i32 0
  %40 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %39) #9
  br label %49

41:                                               ; preds = %31, %33
  %42 = phi i32 [ %32, %31 ], [ %34, %33 ]
  %43 = and i32 %42, 268435455
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 %44
  %46 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %45 to %"struct.blink::CSSPropertyValueMetadata"*
  %47 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %46, i64 %30
  %48 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %47) #9
  br i1 %15, label %57, label %49

49:                                               ; preds = %36, %41
  %50 = phi i32 [ %40, %36 ], [ %48, %41 ]
  %51 = load i32, i32* %16, align 4
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = trunc i64 %30 to i32
  %55 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %54) #9
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %55, i64 0, i32 1, i32 0, i32 0
  br label %60

57:                                               ; preds = %49, %41
  %58 = phi i32 [ %50, %49 ], [ %48, %41 ]
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 %30, i32 0, i32 0
  br label %60

60:                                               ; preds = %53, %57
  %61 = phi i32 [ %58, %57 ], [ %50, %53 ]
  %62 = phi %"class.blink::CSSValue"** [ %59, %57 ], [ %56, %53 ]
  %63 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %62, align 8
  %64 = call zeroext i1 @_ZNK5blink19CSSPropertyValueSet15PropertyMatchesENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::CSSPropertyValueSet"* %1, i32 %61, %"class.blink::CSSValue"* dereferenceable(3) %63)
  br i1 %64, label %65, label %96

65:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #9
  br i1 %15, label %66, label %68

66:                                               ; preds = %65
  %67 = load i32, i32* %16, align 8
  br label %75

68:                                               ; preds = %65
  %69 = load i32, i32* %16, align 4
  %70 = icmp sgt i32 %69, -1
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = trunc i64 %30 to i32
  %73 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %72) #9
  %74 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %73, i64 0, i32 0
  br label %82

75:                                               ; preds = %68, %66
  %76 = phi i32 [ %67, %66 ], [ %69, %68 ]
  %77 = and i32 %76, 268435455
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 %78
  %80 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %79 to %"struct.blink::CSSPropertyValueMetadata"*
  %81 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %80, i64 %30
  br label %82

82:                                               ; preds = %71, %75
  %83 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %81, %75 ], [ %74, %71 ]
  %84 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %83) #9
  store i32 %84, i32* %4, align 4
  %85 = load i32, i32* %8, align 4
  %86 = load i32, i32* %7, align 8
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %94, label %88, !prof !2

88:                                               ; preds = %82
  %89 = load i32*, i32** %6, align 8
  %90 = zext i32 %85 to i64
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  store i32 %84, i32* %91, align 4
  %92 = load i32, i32* %8, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %8, align 4
  br label %95

94:                                               ; preds = %82
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.530"* nonnull %3, i32* nonnull dereferenceable(4) %4) #9
  br label %95

95:                                               ; preds = %88, %94
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #9
  br label %96

96:                                               ; preds = %95, %60
  %97 = add nuw nsw i64 %30, 1
  %98 = icmp eq i64 %97, %23
  br i1 %98, label %24, label %29

99:                                               ; preds = %148, %2, %24
  %100 = phi i32 [ 0, %24 ], [ 0, %2 ], [ %150, %148 ]
  %101 = load i32*, i32** %6, align 8
  %102 = icmp eq i32* %101, null
  %103 = bitcast i32* %101 to i8*
  br i1 %102, label %108, label %104, !prof !4

104:                                              ; preds = %99
  %105 = icmp eq i32 %100, 0
  br i1 %105, label %107, label %106, !prof !2

106:                                              ; preds = %104
  store i32 0, i32* %8, align 4
  br label %107

107:                                              ; preds = %106, %104
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #9
  store i32* null, i32** %6, align 8
  br label %108

108:                                              ; preds = %99, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void

109:                                              ; preds = %27, %148
  %110 = phi i32 [ 0, %27 ], [ %149, %148 ]
  %111 = call dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.530"* nonnull %3, i32 %110) #9
  %112 = load i32, i32* %111, align 4
  %113 = call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %112) #9
  %114 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %113, i64 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %113, i64 0, i32 0
  %119 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %118, align 8
  %120 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %119, i32 %115) #9
  br i1 %120, label %148, label %121

121:                                              ; preds = %117, %109
  %122 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %28, align 8
  %123 = load i32, i32* %10, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %122, i64 %124
  %126 = trunc i32 %112 to i16
  %127 = icmp eq i32 %123, 0
  br i1 %127, label %137, label %128

128:                                              ; preds = %121, %134
  %129 = phi %"class.blink::CSSPropertyValue"* [ %135, %134 ], [ %122, %121 ]
  %130 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %129, i64 0, i32 0
  %131 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %130) #9
  %132 = trunc i32 %131 to i16
  %133 = icmp eq i16 %126, %132
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %129, i64 1
  %136 = icmp eq %"class.blink::CSSPropertyValue"* %135, %125
  br i1 %136, label %148, label %128

137:                                              ; preds = %128, %121
  %138 = phi %"class.blink::CSSPropertyValue"* [ %122, %121 ], [ %129, %128 ]
  %139 = icmp eq %"class.blink::CSSPropertyValue"* %138, %125
  br i1 %139, label %148, label %140

140:                                              ; preds = %137
  %141 = ptrtoint %"class.blink::CSSPropertyValue"* %138 to i64
  %142 = ptrtoint %"class.blink::CSSPropertyValue"* %122 to i64
  %143 = sub i64 %141, %142
  %144 = sdiv exact i64 %143, 24
  %145 = trunc i64 %144 to i32
  %146 = icmp eq i32 %145, -1
  br i1 %146, label %148, label %147

147:                                              ; preds = %140
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %9, i32 %145) #9
  br label %148

148:                                              ; preds = %134, %137, %147, %140, %117
  %149 = add nuw i32 %110, 1
  %150 = load i32, i32* %8, align 4
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %109, label %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MutableCSSPropertyValueSet26RemoveEquivalentPropertiesEPKNS_19CSSStyleDeclarationE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSStyleDeclaration"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.530", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.WTF::Vector.530"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %103, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0
  %15 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %0, null
  %16 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %14, i64 4
  %18 = bitcast %"class.blink::CSSPropertyValueSet"* %17 to %"class.WTF::Vector"*
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %14, i64 2
  %20 = bitcast %"class.blink::CSSPropertyValueSet"* %19 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %21 = bitcast %"class.blink::CSSPropertyValueSet"* %19 to %"class.blink::Member"*
  %22 = bitcast %"class.blink::CSSStyleDeclaration"* %1 to i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)***
  %23 = bitcast i32* %4 to i8*
  %24 = zext i32 %11 to i64
  br label %30

25:                                               ; preds = %100
  %26 = load i32, i32* %8, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %103, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %113

30:                                               ; preds = %100, %13
  %31 = phi i64 [ 0, %13 ], [ %101, %100 ]
  br i1 %15, label %32, label %34

32:                                               ; preds = %30
  %33 = load i32, i32* %16, align 8
  br label %42

34:                                               ; preds = %30
  %35 = load i32, i32* %16, align 4
  %36 = icmp sgt i32 %35, -1
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = trunc i64 %31 to i32
  %39 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %38) #9
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %39, i64 0, i32 0
  %41 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %40) #9
  br label %50

42:                                               ; preds = %32, %34
  %43 = phi i32 [ %33, %32 ], [ %35, %34 ]
  %44 = and i32 %43, 268435455
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 %45
  %47 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %46 to %"struct.blink::CSSPropertyValueMetadata"*
  %48 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %47, i64 %31
  %49 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %48) #9
  br i1 %15, label %58, label %50

50:                                               ; preds = %37, %42
  %51 = phi i32 [ %41, %37 ], [ %49, %42 ]
  %52 = load i32, i32* %16, align 4
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = trunc i64 %31 to i32
  %56 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %55) #9
  %57 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %56, i64 0, i32 1, i32 0, i32 0
  br label %61

58:                                               ; preds = %50, %42
  %59 = phi i32 [ %51, %50 ], [ %49, %42 ]
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 %31, i32 0, i32 0
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi i32 [ %59, %58 ], [ %51, %54 ]
  %63 = phi %"class.blink::CSSValue"** [ %60, %58 ], [ %57, %54 ]
  %64 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %63, align 8
  %65 = load i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)**, i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)*** %22, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)*, i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)** %65, i64 24
  %67 = load i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)*, i1 (%"class.blink::CSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.blink::CSSStyleDeclaration"* %1, i32 %62, %"class.blink::CSSValue"* dereferenceable(3) %64) #9
  br i1 %68, label %69, label %100

69:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #9
  br i1 %15, label %70, label %72

70:                                               ; preds = %69
  %71 = load i32, i32* %16, align 8
  br label %79

72:                                               ; preds = %69
  %73 = load i32, i32* %16, align 4
  %74 = icmp sgt i32 %73, -1
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = trunc i64 %31 to i32
  %77 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %76) #9
  %78 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %77, i64 0, i32 0
  br label %86

79:                                               ; preds = %72, %70
  %80 = phi i32 [ %71, %70 ], [ %73, %72 ]
  %81 = and i32 %80, 268435455
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 %82
  %84 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %83 to %"struct.blink::CSSPropertyValueMetadata"*
  %85 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %84, i64 %31
  br label %86

86:                                               ; preds = %75, %79
  %87 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %85, %79 ], [ %78, %75 ]
  %88 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %87) #9
  store i32 %88, i32* %4, align 4
  %89 = load i32, i32* %8, align 4
  %90 = load i32, i32* %7, align 8
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %98, label %92, !prof !2

92:                                               ; preds = %86
  %93 = load i32*, i32** %6, align 8
  %94 = zext i32 %89 to i64
  %95 = getelementptr inbounds i32, i32* %93, i64 %94
  store i32 %88, i32* %95, align 4
  %96 = load i32, i32* %8, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %8, align 4
  br label %99

98:                                               ; preds = %86
  call void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.530"* nonnull %3, i32* nonnull dereferenceable(4) %4) #9
  br label %99

99:                                               ; preds = %92, %98
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #9
  br label %100

100:                                              ; preds = %99, %61
  %101 = add nuw nsw i64 %31, 1
  %102 = icmp eq i64 %101, %24
  br i1 %102, label %25, label %30

103:                                              ; preds = %152, %2, %25
  %104 = phi i32 [ 0, %25 ], [ 0, %2 ], [ %154, %152 ]
  %105 = load i32*, i32** %6, align 8
  %106 = icmp eq i32* %105, null
  %107 = bitcast i32* %105 to i8*
  br i1 %106, label %112, label %108, !prof !4

108:                                              ; preds = %103
  %109 = icmp eq i32 %104, 0
  br i1 %109, label %111, label %110, !prof !2

110:                                              ; preds = %108
  store i32 0, i32* %8, align 4
  br label %111

111:                                              ; preds = %110, %108
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %107) #9
  store i32* null, i32** %6, align 8
  br label %112

112:                                              ; preds = %103, %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void

113:                                              ; preds = %28, %152
  %114 = phi i32 [ 0, %28 ], [ %153, %152 ]
  %115 = call dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.530"* nonnull %3, i32 %114) #9
  %116 = load i32, i32* %115, align 4
  %117 = call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink20shorthandForPropertyENS_13CSSPropertyIDE(i32 %116) #9
  %118 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %117, i64 0, i32 0
  %123 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %122, align 8
  %124 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet21RemovePropertiesInSetEPKPKNS_11CSSPropertyEj(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::CSSProperty"** %123, i32 %119) #9
  br i1 %124, label %152, label %125

125:                                              ; preds = %121, %113
  %126 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %29, align 8
  %127 = load i32, i32* %10, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %126, i64 %128
  %130 = trunc i32 %116 to i16
  %131 = icmp eq i32 %127, 0
  br i1 %131, label %141, label %132

132:                                              ; preds = %125, %138
  %133 = phi %"class.blink::CSSPropertyValue"* [ %139, %138 ], [ %126, %125 ]
  %134 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %133, i64 0, i32 0
  %135 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %134) #9
  %136 = trunc i32 %135 to i16
  %137 = icmp eq i16 %130, %136
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %133, i64 1
  %140 = icmp eq %"class.blink::CSSPropertyValue"* %139, %129
  br i1 %140, label %152, label %132

141:                                              ; preds = %132, %125
  %142 = phi %"class.blink::CSSPropertyValue"* [ %126, %125 ], [ %133, %132 ]
  %143 = icmp eq %"class.blink::CSSPropertyValue"* %142, %129
  br i1 %143, label %152, label %144

144:                                              ; preds = %141
  %145 = ptrtoint %"class.blink::CSSPropertyValue"* %142 to i64
  %146 = ptrtoint %"class.blink::CSSPropertyValue"* %126 to i64
  %147 = sub i64 %145, %146
  %148 = sdiv exact i64 %147, 24
  %149 = trunc i64 %148 to i32
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %152, label %151

151:                                              ; preds = %144
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %9, i32 %149) #9
  br label %152

152:                                              ; preds = %138, %141, %151, %144, %121
  %153 = add nuw i32 %114, 1
  %154 = load i32, i32* %8, align 4
  %155 = icmp ult i32 %153, %154
  br i1 %155, label %113, label %103
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #9
  %3 = bitcast i8* %2 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC2ERKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %3, %"class.blink::CSSPropertyValueSet"* dereferenceable(4) %0) #9
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  ret %"class.blink::MutableCSSPropertyValueSet"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet19CopyPropertiesInSetERKN3WTF6VectorIPKNS_11CSSPropertyELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::Vector.535"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.521", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = alloca %"class.blink::CSSPropertyValue", align 8
  %6 = bitcast %"class.blink::HeapVector.521"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6160, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %8 = bitcast %"class.blink::HeapVector.521"* %3 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 6148, i1 false) #9
  %12 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::Vector.535", %"class.WTF::Vector.535"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, 256
  br i1 %15, label %16, label %31

16:                                               ; preds = %2
  %17 = zext i32 %14 to i64
  %18 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %17) #9
  %19 = udiv i64 %18, 24
  %20 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %19) #9
  %21 = ptrtoint %"class.blink::HeapVectorBacking"* %20 to i64
  %22 = bitcast %"class.blink::HeapVector.521"* %3 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = trunc i64 %19 to i32
  store i32 %23, i32* %9, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %20, i64 0, i32 0
  %28 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %26, %16
  %30 = load i32, i32* %13, align 4
  br label %31

31:                                               ; preds = %29, %2
  %32 = phi i32 [ %30, %29 ], [ %14, %2 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %36 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::CSSPropertyValue"* %5 to i8*
  %39 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %95

43:                                               ; preds = %149, %31
  %44 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %44, align 8
  %46 = load i32, i32* %10, align 4
  %47 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #9
  %48 = bitcast i8* %47 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC2EPKNS_16CSSPropertyValueEj(%"class.blink::MutableCSSPropertyValueSet"* %48, %"class.blink::CSSPropertyValue"* %45, i32 %46) #9
  %49 = getelementptr inbounds i8, i8* %47, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = load i32, i32* %10, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57, !prof !2

55:                                               ; preds = %43
  %56 = bitcast i8* %7 to %"class.blink::CSSPropertyValue"*
  br label %88

57:                                               ; preds = %43
  %58 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %44, align 8
  %59 = icmp ne %"class.blink::CSSPropertyValue"* %58, null
  %60 = bitcast i8* %7 to %"class.blink::CSSPropertyValue"*
  %61 = icmp ne %"class.blink::CSSPropertyValue"* %58, %60
  %62 = and i1 %59, %61
  br i1 %62, label %88, label %63

63:                                               ; preds = %57
  %64 = zext i32 %53 to i64
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %58, i64 %64
  br label %66

66:                                               ; preds = %84, %63
  %67 = phi %"class.blink::CSSPropertyValue"* [ %85, %84 ], [ %58, %63 ]
  %68 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #9
  br label %84

84:                                               ; preds = %83, %80, %66
  %85 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %67, i64 1
  %86 = icmp eq %"class.blink::CSSPropertyValue"* %85, %65
  br i1 %86, label %87, label %66

87:                                               ; preds = %84
  store i32 0, i32* %10, align 4
  br label %88

88:                                               ; preds = %55, %87, %57
  %89 = phi %"class.blink::CSSPropertyValue"* [ %56, %55 ], [ %60, %87 ], [ %60, %57 ]
  %90 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %44, align 8
  %91 = icmp eq %"class.blink::CSSPropertyValue"* %90, %89
  br i1 %91, label %94, label %92, !prof !4

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::HeapVector.521", %"class.blink::HeapVector.521"* %3, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.525"* nonnull %93, %"class.blink::CSSPropertyValue"* %90) #9
  br label %94

94:                                               ; preds = %88, %92
  call void @llvm.lifetime.end.p0i8(i64 6160, i8* nonnull %6) #9
  ret %"class.blink::MutableCSSPropertyValueSet"* %48

95:                                               ; preds = %34, %149
  %96 = phi i32 [ 0, %34 ], [ %150, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  %97 = call dereferenceable(8) %"class.blink::CSSProperty"** @_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.535"* %1, i32 %96) #9
  %98 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %98, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %101 = call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %0, i32 %100)
  %102 = icmp eq %"class.blink::CSSValue"* %101, null
  br i1 %102, label %133, label %103

103:                                              ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #9
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %39, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #9
  store %"class.blink::CSSValue"* %101, %"class.blink::CSSValue"** %40, align 8
  %104 = load i32, i32* %10, align 4
  %105 = load i32, i32* %9, align 8
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %115, label %107, !prof !2

107:                                              ; preds = %103
  %108 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %41, align 8
  %109 = zext i32 %104 to i64
  %110 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %108, i64 %109
  %111 = bitcast %"class.blink::CSSPropertyValue"* %110 to i8*
  %112 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %111, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %5) #9
  %113 = load i32, i32* %10, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %10, align 4
  br label %116

115:                                              ; preds = %103
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.524"* nonnull %12, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %5) #9
  br label %116

116:                                              ; preds = %107, %115
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #9
  br label %132

132:                                              ; preds = %116, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  br label %133

133:                                              ; preds = %95, %132
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %133, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  %150 = add nuw i32 %96, 1
  %151 = load i32, i32* %13, align 4
  %152 = icmp ult i32 %150, %151
  br i1 %152, label %95, label %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::PropertySetCSSStyleDeclaration"** %4, align 8
  %6 = icmp eq %"class.blink::PropertySetCSSStyleDeclaration"* %5, null
  br i1 %6, label %7, label %29

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #9
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64**
  store i64* null, i64** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to %"class.blink::ExecutionContextClient"*
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %13, %"class.blink::ExecutionContext"* %1) #9
  %14 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [3 x i8*] }, { [33 x i8*], [3 x i8*] }* @_ZTVN5blink30PropertySetCSSStyleDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [3 x i8*] }, { [33 x i8*], [3 x i8*] }* @_ZTVN5blink30PropertySetCSSStyleDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 32
  %16 = bitcast i8* %15 to %"class.blink::MutableCSSPropertyValueSet"**
  store %"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::MutableCSSPropertyValueSet"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.blink::Member.3"* %3 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %8 to %"class.blink::PropertySetCSSStyleDeclaration"*
  br i1 %24, label %29, label %26

26:                                               ; preds = %7
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #9
  %28 = load %"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::PropertySetCSSStyleDeclaration"** %4, align 8
  br label %29

29:                                               ; preds = %26, %7, %2
  %30 = phi %"class.blink::PropertySetCSSStyleDeclaration"* [ %5, %2 ], [ %25, %7 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.blink::PropertySetCSSStyleDeclaration", %"class.blink::PropertySetCSSStyleDeclaration"* %30, i64 0, i32 0, i32 0
  ret %"class.blink::CSSStyleDeclaration"* %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink19CSSPropertyValueSet18AverageSizeInBytesEv() local_unnamed_addr #4 align 2 {
  ret i32 104
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink21CSSLazyPropertyParser5TraceEPNS_7VisitorE(%"class.blink::CSSLazyPropertyParser"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21CSSLazyPropertyParserD2Ev(%"class.blink::CSSLazyPropertyParser"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21CSSLazyPropertyParserD0Ev(%"class.blink::CSSLazyPropertyParser"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

declare i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink23StylePropertySerializer18SerializeShorthandENS_13CSSPropertyIDE(%"class.blink::StylePropertySerializer"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::CSSPropertyValue"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink24CSSPropertyValueMetadata11ShorthandIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

declare void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i1 zeroext, i32, i1 zeroext, i1 zeroext) unnamed_addr #2

declare { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.525"*, %"class.blink::CSSPropertyValue"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  br i1 %5, label %7, label %20

7:                                                ; preds = %2
  %8 = bitcast i8* %6 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = inttoptr i64 %9 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30PropertySetCSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %11, %7
  %18 = getelementptr inbounds i8, i8* %1, i64 16
  %19 = bitcast i8* %18 to %"class.WTF::Vector"*
  tail call void @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector"* %19, %"class.blink::Visitor"* %0) #9
  br label %46

20:                                               ; preds = %2
  %21 = bitcast i8* %6 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %22 = and i32 %4, 268435455
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %46, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %26

26:                                               ; preds = %40, %24
  %27 = phi i32 [ %4, %24 ], [ %41, %40 ]
  %28 = phi i64 [ 0, %24 ], [ %42, %40 ]
  %29 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %21, i64 %28
  %30 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  %39 = load i32, i32* %3, align 8
  br label %40

40:                                               ; preds = %33, %26
  %41 = phi i32 [ %27, %26 ], [ %39, %33 ]
  %42 = add nuw nsw i64 %28, 1
  %43 = and i32 %41, 268435455
  %44 = zext i32 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %26, label %46

46:                                               ; preds = %40, %17, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32*
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %52

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 16
  %7 = getelementptr inbounds i8, i8* %0, i64 28
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = bitcast i8* %6 to %"class.blink::CSSPropertyValue"**
  br i1 %10, label %44, label %12, !prof !2

12:                                               ; preds = %5
  %13 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %11, align 8
  %14 = icmp ne %"class.blink::CSSPropertyValue"* %13, null
  %15 = getelementptr inbounds i8, i8* %0, i64 32
  %16 = bitcast i8* %15 to %"class.blink::CSSPropertyValue"*
  %17 = icmp ne %"class.blink::CSSPropertyValue"* %13, %16
  %18 = and i1 %14, %17
  br i1 %18, label %44, label %19

19:                                               ; preds = %12
  %20 = zext i32 %9 to i64
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 %20
  br label %22

22:                                               ; preds = %40, %19
  %23 = phi %"class.blink::CSSPropertyValue"* [ %41, %40 ], [ %13, %19 ]
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %40

40:                                               ; preds = %39, %36, %22
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 1
  %42 = icmp eq %"class.blink::CSSPropertyValue"* %41, %21
  br i1 %42, label %43, label %22

43:                                               ; preds = %40
  store i32 0, i32* %8, align 4
  br label %44

44:                                               ; preds = %5, %43, %12
  %45 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %11, align 8
  %46 = getelementptr inbounds i8, i8* %0, i64 32
  %47 = bitcast i8* %46 to %"class.blink::CSSPropertyValue"*
  %48 = icmp eq %"class.blink::CSSPropertyValue"* %45, %47
  br i1 %48, label %51, label %49, !prof !4

49:                                               ; preds = %44
  %50 = bitcast i8* %6 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %50, %"class.blink::CSSPropertyValue"* %45) #9
  br label %51

51:                                               ; preds = %49, %44
  store %"class.blink::CSSPropertyValue"* null, %"class.blink::CSSPropertyValue"** %11, align 8
  br label %52

52:                                               ; preds = %1, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16CSSPropertyValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %69, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::CSSPropertyValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi i64 [ 0, %52 ], [ %67, %66 ]
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to %"class.blink::CSSValue"*
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %61, i64 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %66

66:                                               ; preds = %60, %54
  %67 = add nuw nsw i64 %55, 1
  %68 = icmp ult i64 %67, %50
  br i1 %68, label %54, label %69

69:                                               ; preds = %66, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %47

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %4 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to i16*
  %28 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 1
  %29 = load i16, i16* %28, align 8
  store i16 %29, i16* %27, align 8
  %30 = getelementptr inbounds i8, i8* %0, i64 16
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 1
  %32 = bitcast %"class.blink::Member"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %25
  %38 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %39 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %38, i64 0, i32 1
  %40 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %39) #9
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %37
  %43 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %39, i8* %43) #9
  br label %44

44:                                               ; preds = %42, %37
  %45 = phi i8* [ %43, %42 ], [ %40, %37 ]
  %46 = bitcast i8* %45 to %"class.blink::ThreadState"**
  %47 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %47, i64 0, i32 9
  %49 = load i8, i8* %48, align 1, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %71, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %47, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  %55 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %47, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %56 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %55, align 8
  %57 = load atomic i64, i64* %34 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %56, i64 0, i32 0, i32 0
  %61 = inttoptr i64 %57 to %"class.blink::CSSValue"*
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %61, i64 0, i32 0
  %63 = bitcast %"class.blink::MarkingVisitor"* %56 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, i64 5
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, align 8
  tail call void %66(%"class.blink::Visitor"* %60, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  %67 = load i64, i64* %52, align 8
  br label %68

68:                                               ; preds = %59, %51
  %69 = phi i64 [ %54, %51 ], [ %67, %59 ]
  %70 = add i64 %69, -1
  store i64 %70, i64* %52, align 8
  br label %71

71:                                               ; preds = %25, %44, %68
  ret %"class.blink::CSSPropertyValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.WTF::Vector"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEEaSERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %86, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %48

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %12, i64 %14
  %16 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %12, i64 %13
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.blink::CSSPropertyValue"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %18, i64 1
  %37 = icmp eq %"class.blink::CSSPropertyValue"* %36, %15
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %11, align 8
  %40 = load i32, i32* %5, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %39, i64 %13
  %43 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %39, i64 %41
  %44 = bitcast %"class.blink::CSSPropertyValue"* %42 to i8*
  %45 = ptrtoint %"class.blink::CSSPropertyValue"* %43 to i64
  %46 = ptrtoint %"class.blink::CSSPropertyValue"* %42 to i64
  %47 = sub i64 %45, %46
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %44, i64 %47) #9
  store i32 %8, i32* %5, align 4
  br label %55

48:                                               ; preds = %4
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp ugt i32 %8, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"* %0)
  %53 = load i32, i32* %7, align 4
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %53)
  %54 = load i32, i32* %5, align 4
  br label %55

55:                                               ; preds = %48, %52, %38
  %56 = phi i32 [ %6, %48 ], [ %54, %52 ], [ %8, %38 ]
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %57, align 8
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %58, i64 %59
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %61, align 8
  tail call void @_ZN3WTF12VectorCopierILb0EN5blink16CSSPropertyValueENS1_13HeapAllocatorEE4CopyEPKS2_S6_PS2_(%"class.blink::CSSPropertyValue"* %58, %"class.blink::CSSPropertyValue"* %60, %"class.blink::CSSPropertyValue"* %62) #9
  %63 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %57, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = load i32, i32* %7, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %63, i64 %67
  %69 = icmp eq i32 %64, %66
  br i1 %69, label %84, label %70

70:                                               ; preds = %55
  %71 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %61, align 8
  %72 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %71, i64 %65
  %73 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %63, i64 %65
  br label %74

74:                                               ; preds = %70, %74
  %75 = phi %"class.blink::CSSPropertyValue"* [ %79, %74 ], [ %72, %70 ]
  %76 = phi %"class.blink::CSSPropertyValue"* [ %80, %74 ], [ %73, %70 ]
  %77 = bitcast %"class.blink::CSSPropertyValue"* %75 to i8*
  %78 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %77, %"class.blink::CSSPropertyValue"* dereferenceable(24) %76) #9
  %79 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %75, i64 1
  %80 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %76, i64 1
  %81 = icmp eq %"class.blink::CSSPropertyValue"* %80, %68
  br i1 %81, label %82, label %74

82:                                               ; preds = %74
  %83 = load i32, i32* %7, align 4
  br label %84

84:                                               ; preds = %82, %55
  %85 = phi i32 [ %83, %82 ], [ %64, %55 ]
  store i32 %85, i32* %5, align 4
  br label %86

86:                                               ; preds = %2, %84
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorCopierILb0EN5blink16CSSPropertyValueENS1_13HeapAllocatorEE4CopyEPKS2_S6_PS2_(%"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.blink::CSSPropertyValue"* %0, %1
  br i1 %4, label %65, label %5

5:                                                ; preds = %3, %61
  %6 = phi %"class.blink::CSSPropertyValue"* [ %63, %61 ], [ %2, %3 ]
  %7 = phi %"class.blink::CSSPropertyValue"* [ %62, %61 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %5
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.blink::CSSPropertyValue"* %6 to i64*
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #9
  br label %47

47:                                               ; preds = %46, %43, %28
  %48 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 0, i32 1
  %50 = load i16, i16* %49, align 8
  store i16 %50, i16* %48, align 8
  %51 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 1
  %52 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::Member"* %51 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %47
  %59 = inttoptr i64 %54 to i8*
  %60 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #9
  br label %61

61:                                               ; preds = %58, %47
  %62 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 1
  %63 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 1
  %64 = icmp eq %"class.blink::CSSPropertyValue"* %62, %1
  br i1 %64, label %65, label %5

65:                                               ; preds = %61, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %4 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::CSSPropertyValue"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = bitcast i8* %8 to i16*
  %10 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 1
  %11 = load i16, i16* %10, align 8
  store i16 %11, i16* %9, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 16
  %13 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 1
  %14 = bitcast %"class.blink::Member"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %53, label %19

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #9
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #9
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 9
  %31 = load i8, i8* %30, align 1, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %53, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %37, align 8
  %39 = load atomic i64, i64* %16 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %38, i64 0, i32 0, i32 0
  %43 = inttoptr i64 %39 to %"class.blink::CSSValue"*
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 0, i32 0
  %45 = bitcast %"class.blink::MarkingVisitor"* %38 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %42, i8* %44, i8* %44, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  %49 = load i64, i64* %34, align 8
  br label %50

50:                                               ; preds = %41, %33
  %51 = phi i64 [ %36, %33 ], [ %49, %41 ]
  %52 = add i64 %51, -1
  store i64 %52, i64* %34, align 8
  br label %53

53:                                               ; preds = %2, %26, %50
  ret %"class.blink::CSSPropertyValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %52, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %44, %25
  %28 = phi i8* [ %3, %25 ], [ %45, %44 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %44 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to %"class.blink::CSSValue"*
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %38, i64 0, i32 0
  %40 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %37, i8* %39, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %44

44:                                               ; preds = %27, %36
  %45 = getelementptr inbounds i8, i8* %28, i64 24
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %47, label %27

47:                                               ; preds = %44
  %48 = load i64, i64* %21, align 8
  br label %49

49:                                               ; preds = %47, %20
  %50 = phi i64 [ %48, %47 ], [ %23, %20 ]
  %51 = add i64 %50, -1
  store i64 %51, i64* %21, align 8
  br label %52

52:                                               ; preds = %2, %13, %49
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSPropertyValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertyValue"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSPropertyValue"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSPropertyValue"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %20 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSPropertyValue"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSPropertyValue"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSPropertyValue"* %27 to i8*
  %29 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %28, %"class.blink::CSSPropertyValue"* dereferenceable(24) %24)
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %27)
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSPropertyValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertyValue"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSPropertyValue"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSPropertyValue"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #9
  %20 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSPropertyValue"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSPropertyValue"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSPropertyValue"* %27 to i8*
  %29 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %28, %"class.blink::CSSPropertyValue"* dereferenceable(24) %24)
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSPropertyValue"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSPropertyValue"*
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %73

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  %26 = mul nuw nsw i64 %19, 24
  br i1 %24, label %28, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #9
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %9, i64 %19) #9
  br label %28

28:                                               ; preds = %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #9
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %20, %"class.blink::CSSPropertyValue"* nonnull %6) #9
  br label %73

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %30) #9
  %32 = udiv i64 %31, 24
  %33 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %32) #9
  %34 = bitcast %"class.blink::HeapVectorBacking"* %33 to %"class.blink::CSSPropertyValue"*
  %35 = ptrtoint %"class.blink::HeapVectorBacking"* %33 to i64
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %39 = icmp ne %"class.blink::HeapVectorBacking"* %33, null
  %40 = icmp ne %"class.blink::CSSPropertyValue"* %37, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %52, !prof !4

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = bitcast i8* %43 to %"class.blink::CSSPropertyValue"*
  %45 = icmp eq %"class.blink::CSSPropertyValue"* %37, %44
  %46 = load i32, i32* %38, align 4
  %47 = zext i32 %46 to i64
  %48 = bitcast %"class.blink::CSSPropertyValue"* %37 to i8*
  %49 = mul nuw nsw i64 %47, 24
  %50 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %50, i8* nonnull %48, i64 %49) #9
  br i1 %45, label %51, label %52

51:                                               ; preds = %42
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %34, i64 %47) #9
  br label %52

52:                                               ; preds = %29, %42, %51
  %53 = bitcast %"class.WTF::Vector"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %38, align 4
  %56 = zext i32 %55 to i64
  %57 = mul nuw nsw i64 %56, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %54, i64 %57) #9
  %58 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %"class.blink::CSSPropertyValue"*
  %61 = icmp eq %"class.blink::CSSPropertyValue"* %58, %60
  br i1 %61, label %64, label %62, !prof !4

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %63, %"class.blink::CSSPropertyValue"* %58) #9
  br label %64

64:                                               ; preds = %52, %62
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %65 monotonic, align 8
  %66 = trunc i64 %32 to i32
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %66, i32* %67, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #9
  br label %73

73:                                               ; preds = %70, %64, %28, %12
  ret void
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_18StyleSheetContentsE(%"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #9
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #9
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"*, i8 zeroext, i32, i8 zeroext, %"class.blink::Document"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.524"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.530"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.530"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.530"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.530"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13CSSPropertyIDEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.530"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.530"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.530"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13CSSPropertyIDEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIN5blink13CSSPropertyIDELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.530"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.530", %"class.WTF::Vector.530"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::CSSProperty"** @_ZNK3WTF6VectorIPKN5blink11CSSPropertyELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.535"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.535", %"class.WTF::Vector.535"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.535", %"class.WTF::Vector.535"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %24, i64 %25
  ret %"class.blink::CSSProperty"** %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.524"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSPropertyValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertyValue"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.524"* %0, i32 %5) #9
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSPropertyValue"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSPropertyValue"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.524"* %0, i32 %5) #9
  %20 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSPropertyValue"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSPropertyValue"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSPropertyValue"* %27 to i8*
  %29 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %28, %"class.blink::CSSPropertyValue"* dereferenceable(24) %24)
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.524"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.524"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.524"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 256
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %14) #9
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.524"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #9
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.524"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 256, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::CSSPropertyValue"*
  %33 = icmp eq %"class.blink::CSSPropertyValue"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 257
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %37) #9
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %40 = icmp eq %"class.blink::CSSPropertyValue"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 6144, %34 ]
  %43 = phi %"class.blink::CSSPropertyValue"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::CSSPropertyValue"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #9
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 24
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #9
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #9
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.524"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.524"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 257
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSPropertyValue"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSPropertyValue"*
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.524"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %15, align 8
  br label %73

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.524"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  %26 = mul nuw nsw i64 %19, 24
  br i1 %24, label %28, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #9
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %9, i64 %19) #9
  br label %28

28:                                               ; preds = %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #9
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.525"* %20, %"class.blink::CSSPropertyValue"* nonnull %6) #9
  br label %73

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %30) #9
  %32 = udiv i64 %31, 24
  %33 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %32) #9
  %34 = bitcast %"class.blink::HeapVectorBacking"* %33 to %"class.blink::CSSPropertyValue"*
  %35 = ptrtoint %"class.blink::HeapVectorBacking"* %33 to i64
  %36 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 2
  %39 = icmp ne %"class.blink::HeapVectorBacking"* %33, null
  %40 = icmp ne %"class.blink::CSSPropertyValue"* %37, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %52, !prof !4

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = bitcast i8* %43 to %"class.blink::CSSPropertyValue"*
  %45 = icmp eq %"class.blink::CSSPropertyValue"* %37, %44
  %46 = load i32, i32* %38, align 4
  %47 = zext i32 %46 to i64
  %48 = bitcast %"class.blink::CSSPropertyValue"* %37 to i8*
  %49 = mul nuw nsw i64 %47, 24
  %50 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %50, i8* nonnull %48, i64 %49) #9
  br i1 %45, label %51, label %52

51:                                               ; preds = %42
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %34, i64 %47) #9
  br label %52

52:                                               ; preds = %29, %42, %51
  %53 = bitcast %"class.WTF::Vector.524"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %38, align 4
  %56 = zext i32 %55 to i64
  %57 = mul nuw nsw i64 %56, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %54, i64 %57) #9
  %58 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %"class.blink::CSSPropertyValue"*
  %61 = icmp eq %"class.blink::CSSPropertyValue"* %58, %60
  br i1 %61, label %64, label %62, !prof !4

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.525"* %63, %"class.blink::CSSPropertyValue"* %58) #9
  br label %64

64:                                               ; preds = %52, %62
  %65 = bitcast %"class.WTF::Vector.524"* %0 to i64*
  store atomic i64 %35, i64* %65 monotonic, align 8
  %66 = trunc i64 %32 to i32
  %67 = getelementptr inbounds %"class.WTF::Vector.524", %"class.WTF::Vector.524"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %66, i32* %67, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #9
  br label %73

73:                                               ; preds = %70, %64, %28, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_30PropertySetCSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PropertySetCSSStyleDeclaration"*
  %4 = bitcast i8* %1 to void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)**, void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)*, void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)*, void (%"class.blink::PropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PropertySetCSSStyleDeclaration"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES3_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %"class.WTF::Vector"* %0 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  br label %51

12:                                               ; preds = %2
  %13 = inttoptr i64 %4 to %"class.blink::CSSPropertyValue"*
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %15 = bitcast i8* %14 to %"class.blink::CSSPropertyValue"*
  %16 = icmp eq %"class.blink::CSSPropertyValue"* %15, %13
  %17 = bitcast %"class.WTF::Vector"* %0 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #9
  %22 = inttoptr i64 %4 to i8*
  br i1 %16, label %28, label %23

23:                                               ; preds = %12
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %22, i8* nonnull %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %51

28:                                               ; preds = %12
  %29 = bitcast %"class.blink::Visitor"* %1 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %30 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %30, i64 4
  %32 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::Visitor"* %1, i8* %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN3WTF8internal17DeferredTraceImplIN5blink13HeapAllocatorEPNS2_7VisitorENS2_16CSSPropertyValueELj4EEEvT0_PKv, i64 96) #9
  br i1 %33, label %51, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 0, i32 1
  %37 = bitcast %"class.blink::Member"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = inttoptr i64 %38 to %"class.blink::CSSValue"*
  %42 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %41, i64 0, i32 0
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* %42, i8* %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %46

46:                                               ; preds = %40, %34
  %47 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 1, i32 1
  %48 = bitcast %"class.blink::Member"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %58, label %52

51:                                               ; preds = %69, %74, %23, %28, %6
  ret void

52:                                               ; preds = %46
  %53 = inttoptr i64 %49 to %"class.blink::CSSValue"*
  %54 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %53, i64 0, i32 0
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, i64 5
  %57 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %1, i8* %54, i8* %54, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %58

58:                                               ; preds = %52, %46
  %59 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 2, i32 1
  %60 = bitcast %"class.blink::Member"* %59 to i64*
  %61 = load atomic i64, i64* %60 monotonic, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = inttoptr i64 %61 to %"class.blink::CSSValue"*
  %65 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %64, i64 0, i32 0
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 5
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %1, i8* %65, i8* %65, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %69

69:                                               ; preds = %63, %58
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %13, i64 3, i32 1
  %71 = bitcast %"class.blink::Member"* %70 to i64*
  %72 = load atomic i64, i64* %71 monotonic, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %51, label %74

74:                                               ; preds = %69
  %75 = inttoptr i64 %72 to %"class.blink::CSSValue"*
  %76 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %75, i64 0, i32 0
  %77 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %78 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %77, i64 5
  %79 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %78, align 8
  tail call void %79(%"class.blink::Visitor"* %1, i8* %76, i8* %76, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8internal17DeferredTraceImplIN5blink13HeapAllocatorEPNS2_7VisitorENS2_16CSSPropertyValueELj4EEEvT0_PKv(%"class.blink::Visitor"*, i8*) #0 comdat {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to %"class.blink::CSSValue"*
  %10 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %9, i64 0, i32 0
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %0, i8* %10, i8* %10, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i8, i8* %1, i64 40
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSValue"*
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 0
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %0, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds i8, i8* %1, i64 64
  %27 = bitcast i8* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to %"class.blink::CSSValue"*
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 0, i32 0
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %0, i8* %32, i8* %32, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %36

36:                                               ; preds = %30, %25
  %37 = getelementptr inbounds i8, i8* %1, i64 88
  %38 = bitcast i8* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to %"class.blink::CSSValue"*
  %43 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 0, i32 0
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %3, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %0, i8* %43, i8* %43, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %47

47:                                               ; preds = %41, %36
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
