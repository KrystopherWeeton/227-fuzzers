; ModuleID = '../../third_party/icu/source/i18n/dtrule.cpp'
source_filename = "../../third_party/icu/source/i18n/dtrule.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::DateTimeRule" = type <{ %"class.icu_69::UObject", i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.std::type_info" = type { i32 (...)**, i8* }

@_ZZN6icu_6912DateTimeRule16getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZTVN6icu_6912DateTimeRuleE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6912DateTimeRuleE to i8*), i8* bitcast (void (%"class.icu_69::DateTimeRule"*)* @_ZN6icu_6912DateTimeRuleD2Ev to i8*), i8* bitcast (void (%"class.icu_69::DateTimeRule"*)* @_ZN6icu_6912DateTimeRuleD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::DateTimeRule"*)* @_ZNK6icu_6912DateTimeRule17getDynamicClassIDEv to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6912DateTimeRuleE = hidden constant [24 x i8] c"N6icu_6912DateTimeRuleE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6912DateTimeRuleE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN6icu_6912DateTimeRuleE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8

@_ZN6icu_6912DateTimeRuleC1EiiiNS0_12TimeRuleTypeE = hidden unnamed_addr alias void (%"class.icu_69::DateTimeRule"*, i32, i32, i32, i32), void (%"class.icu_69::DateTimeRule"*, i32, i32, i32, i32)* @_ZN6icu_6912DateTimeRuleC2EiiiNS0_12TimeRuleTypeE
@_ZN6icu_6912DateTimeRuleC1EiiiiNS0_12TimeRuleTypeE = hidden unnamed_addr alias void (%"class.icu_69::DateTimeRule"*, i32, i32, i32, i32, i32), void (%"class.icu_69::DateTimeRule"*, i32, i32, i32, i32, i32)* @_ZN6icu_6912DateTimeRuleC2EiiiiNS0_12TimeRuleTypeE
@_ZN6icu_6912DateTimeRuleC1EiiiaiNS0_12TimeRuleTypeE = hidden unnamed_addr alias void (%"class.icu_69::DateTimeRule"*, i32, i32, i32, i8, i32, i32), void (%"class.icu_69::DateTimeRule"*, i32, i32, i32, i8, i32, i32)* @_ZN6icu_6912DateTimeRuleC2EiiiaiNS0_12TimeRuleTypeE
@_ZN6icu_6912DateTimeRuleC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::DateTimeRule"*, %"class.icu_69::DateTimeRule"*), void (%"class.icu_69::DateTimeRule"*, %"class.icu_69::DateTimeRule"*)* @_ZN6icu_6912DateTimeRuleC2ERKS0_
@_ZN6icu_6912DateTimeRuleD1Ev = hidden unnamed_addr alias void (%"class.icu_69::DateTimeRule"*), void (%"class.icu_69::DateTimeRule"*)* @_ZN6icu_6912DateTimeRuleD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_6912DateTimeRule16getStaticClassIDEv() local_unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_6912DateTimeRule16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_6912DateTimeRule17getDynamicClassIDEv(%"class.icu_69::DateTimeRule"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_6912DateTimeRule16getStaticClassIDEvE7classID
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6912DateTimeRuleC2EiiiNS0_12TimeRuleTypeE(%"class.icu_69::DateTimeRule"* nocapture, i32, i32, i32, i32) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6912DateTimeRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  store i32 %4, i32* %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6912DateTimeRuleC2EiiiiNS0_12TimeRuleTypeE(%"class.icu_69::DateTimeRule"* nocapture, i32, i32, i32, i32, i32) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6912DateTimeRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  store i32 %3, i32* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  store i32 %5, i32* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6912DateTimeRuleC2EiiiaiNS0_12TimeRuleTypeE(%"class.icu_69::DateTimeRule"* nocapture, i32, i32, i32, i8 signext, i32, i32) unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6912DateTimeRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  store i32 %5, i32* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  store i32 %6, i32* %14, align 8
  %15 = icmp eq i8 %4, 0
  %16 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  %17 = select i1 %15, i32 3, i32 2
  store i32 %17, i32* %16, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6912DateTimeRuleC2ERKS0_(%"class.icu_69::DateTimeRule"* nocapture, %"class.icu_69::DateTimeRule"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6912DateTimeRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  %20 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 6
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  %23 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912DateTimeRuleD2Ev(%"class.icu_69::DateTimeRule"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6912DateTimeRuleD0Ev(%"class.icu_69::DateTimeRule"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #6
  %3 = bitcast %"class.icu_69::DateTimeRule"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::DateTimeRule"* @_ZNK6icu_6912DateTimeRule5cloneEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 40) #6
  %3 = icmp eq i8* %2, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %"class.icu_69::DateTimeRule"*
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6912DateTimeRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 20
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds i8, i8* %2, i64 24
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 28
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds i8, i8* %2, i64 32
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  br label %35

35:                                               ; preds = %4, %1
  %36 = phi %"class.icu_69::DateTimeRule"* [ %5, %4 ], [ null, %1 ]
  ret %"class.icu_69::DateTimeRule"* %36
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(40) %"class.icu_69::DateTimeRule"* @_ZN6icu_6912DateTimeRuleaSERKS0_(%"class.icu_69::DateTimeRule"* returned, %"class.icu_69::DateTimeRule"* readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %"class.icu_69::DateTimeRule"* %0, %1
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 6
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  store i32 %24, i32* %25, align 8
  br label %26

26:                                               ; preds = %2, %4
  ret %"class.icu_69::DateTimeRule"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6912DateTimeRuleeqERKS0_(%"class.icu_69::DateTimeRule"* readonly, %"class.icu_69::DateTimeRule"* readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.icu_69::DateTimeRule"* %0, %1
  br i1 %3, label %64, label %4

4:                                                ; preds = %2
  %5 = icmp eq %"class.icu_69::DateTimeRule"* %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @__cxa_bad_typeid() #7
  unreachable

7:                                                ; preds = %4
  %8 = bitcast %"class.icu_69::DateTimeRule"* %0 to %"class.std::type_info"***
  %9 = load %"class.std::type_info"**, %"class.std::type_info"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %9, i64 -1
  %11 = load %"class.std::type_info"*, %"class.std::type_info"** %10, align 8
  %12 = bitcast %"class.icu_69::DateTimeRule"* %1 to %"class.std::type_info"***
  %13 = load %"class.std::type_info"**, %"class.std::type_info"*** %12, align 8
  %14 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %13, i64 -1
  %15 = load %"class.std::type_info"*, %"class.std::type_info"** %14, align 8
  %16 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %11, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %15, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %17, %19
  br i1 %20, label %21, label %64

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %64

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %39, label %64

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %64

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 5
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %64

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 7
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  %63 = zext i1 %62 to i8
  br label %64

64:                                               ; preds = %7, %21, %27, %33, %39, %45, %51, %57, %2
  %65 = phi i8 [ 1, %2 ], [ 0, %51 ], [ 0, %45 ], [ 0, %39 ], [ 0, %33 ], [ 0, %27 ], [ 0, %21 ], [ 0, %7 ], [ %63, %57 ]
  ret i8 %65
}

declare void @__cxa_bad_typeid() local_unnamed_addr

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6912DateTimeRuleneERKS0_(%"class.icu_69::DateTimeRule"* readonly, %"class.icu_69::DateTimeRule"* readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.icu_69::DateTimeRule"* %0, %1
  br i1 %3, label %64, label %4

4:                                                ; preds = %2
  %5 = icmp eq %"class.icu_69::DateTimeRule"* %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @__cxa_bad_typeid() #7
  unreachable

7:                                                ; preds = %4
  %8 = bitcast %"class.icu_69::DateTimeRule"* %0 to %"class.std::type_info"***
  %9 = load %"class.std::type_info"**, %"class.std::type_info"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %9, i64 -1
  %11 = load %"class.std::type_info"*, %"class.std::type_info"** %10, align 8
  %12 = bitcast %"class.icu_69::DateTimeRule"* %1 to %"class.std::type_info"***
  %13 = load %"class.std::type_info"**, %"class.std::type_info"*** %12, align 8
  %14 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %13, i64 -1
  %15 = load %"class.std::type_info"*, %"class.std::type_info"** %14, align 8
  %16 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %11, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %15, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %17, %19
  br i1 %20, label %21, label %64

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %64

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %39, label %64

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %64

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 5
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %64

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %1, i64 0, i32 7
  %61 = load i32, i32* %60, align 8
  %62 = icmp ne i32 %59, %61
  %63 = zext i1 %62 to i8
  br label %64

64:                                               ; preds = %2, %7, %21, %27, %33, %39, %45, %51, %57
  %65 = phi i8 [ 0, %2 ], [ 1, %51 ], [ 1, %45 ], [ 1, %39 ], [ 1, %33 ], [ 1, %27 ], [ 1, %21 ], [ 1, %7 ], [ %63, %57 ]
  ret i8 %65
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule15getDateRuleTypeEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule15getTimeRuleTypeEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule12getRuleMonthEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule17getRuleDayOfMonthEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule16getRuleDayOfWeekEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule18getRuleWeekInMonthEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6912DateTimeRule18getRuleMillisInDayEv(%"class.icu_69::DateTimeRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DateTimeRule", %"class.icu_69::DateTimeRule"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
