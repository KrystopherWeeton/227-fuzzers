; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_create_script_callback.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_create_script_callback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.187" }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i32 }
%"class.blink::V8CreateScriptCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.177", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.181" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.179" }
%"class.blink::Persistent.179" = type { %"class.blink::PersistentBase.180" }
%"class.blink::PersistentBase.180" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.WTF::StringImpl"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.194" }
%"class.WTF::Vector.194" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.197", %class.scoped_refptr.200 }
%"class.blink::TraceWrapperV8Reference.197" = type { %"class.v8::TracedReference.198" }
%"class.v8::TracedReference.198" = type { %"class.v8::BasicTracedReference.199" }
%"class.v8::BasicTracedReference.199" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.200 = type { %"class.blink::DOMWrapperWorld"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.197" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::bindings::CallbackInvokeHelper" = type { %"class.blink::CallbackFunctionBase"*, i8*, i8*, %"class.v8::Local.204", %"class.v8::Local", %"class.v8::Local", i8, %"class.blink::ScriptState::Scope", %"class.v8::Context::BackupIncumbentScope" }
%"class.v8::Local.204" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.202" }
%"class.v8::Local.202" = type { %"class.v8::Context"* }
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.202", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.207", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.207" = type { %"class.v8::String"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.208" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { i8* }
%"class.blink::bindings::CallbackInvokeHelper.205" = type { %"class.blink::CallbackFunctionBase"*, i8*, i8*, %"class.v8::Local.204", %"class.v8::Local", %"class.v8::Local", i8, %"class.blink::ScriptState::Scope", %"class.v8::Context::BackupIncumbentScope" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.232", %"class.WTF::HashMap.232", %"class.WTF::HashMap.237", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.289", %"class.blink::Persistent.179", i8, i8, i8, %"class.WTF::Vector.295", %"class.std::__1::unique_ptr.300", %"class.blink::Persistent.306", %"class.blink::Persistent.310", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.214", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", i32, i32 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ %"struct.WTF::KeyValuePair.236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.236" = type opaque
%"class.WTF::HashMap.237" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"struct.WTF::KeyValuePair.241"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.241" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.250", %class.scoped_refptr.186 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.245", i8* }
%"class.WTF::HashMap.245" = type { %"class.WTF::HashTable.246" }
%"class.WTF::HashTable.246" = type <{ %"struct.WTF::KeyValuePair.249"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.249" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.250" = type { %"class.v8::PersistentValueMapBase.251" }
%"class.v8::PersistentValueMapBase.251" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.252", i8* }
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.256"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.256" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.257", %"class.WTF::String", %"class.std::__1::unique_ptr.259" }
%"class.WTF::RefCounted.257" = type { %"class.base::RefCounted.258" }
%"class.base::RefCounted.258" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.273", %"class.WTF::Vector.279", i8, i32 }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.WTF::Vector.265"* }
%"class.WTF::Vector.265" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.267", [32 x i8] }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.WTF::Vector.295" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.314", i64 }
%"class.blink::HeapVector.314" = type { %"class.WTF::Vector.317" }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %"struct.std::__1::pair.320"*, i32, i32 }
%"struct.std::__1::pair.320" = type { %"class.blink::UntracedMember", %"class.blink::Member.322" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv = comdat any

$_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv = comdat any

$_ZN5blink20CallbackFunctionBaseD2Ev = comdat any

$_ZN5blink22V8CreateScriptCallbackD0Ev = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZNK3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [23 x i8] c"V8CreateScriptCallback\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"CreateScriptCallback\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"invoke\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"The provided callback is no longer runnable.\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"construct\00", align 1
@_ZTVN5blink22V8CreateScriptCallbackE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::V8CreateScriptCallback"*)* @_ZNK5blink22V8CreateScriptCallback18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CallbackFunctionBase"*)* @_ZN5blink20CallbackFunctionBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::V8CreateScriptCallback"*)* @_ZN5blink22V8CreateScriptCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)* @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink22V8CreateScriptCallback18NameInHeapSnapshotEv(%"class.blink::V8CreateScriptCallback"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %"class.WTF::StringImpl"* } @_ZN5blink22V8CreateScriptCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::V8CreateScriptCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.v8::HandleScope", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::bindings::CallbackInvokeHelper", align 8
  %11 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0
  %12 = tail call %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase43CallbackRelevantScriptStateOrThrowExceptionEPKcS2_(%"class.blink::CallbackFunctionBase"* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #5
  %13 = icmp eq %"class.blink::ScriptState"* %12, null
  br i1 %13, label %191, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %16, i64 0, i32 0
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %19 = tail call zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"* nonnull %12, %"class.blink::ScriptState"* %16) #5
  br i1 %19, label %96, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #5
  %22 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %7, %"class.v8::Isolate"* %18) #5
  %23 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0, i32 1
  %24 = bitcast %"class.blink::TraceWrapperV8Reference"* %23 to %"class.v8::Object"**
  %25 = load %"class.v8::Object"*, %"class.v8::Object"** %24, align 8
  %26 = icmp eq %"class.v8::Object"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.blink::ScriptState"** %15 to %"class.v8::internal::Isolate"***
  %29 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %28, align 8
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %29, align 8
  %31 = bitcast %"class.v8::Object"* %25 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %30, i64 %32) #5
  %34 = bitcast i64* %33 to %"class.v8::Object"*
  br label %35

35:                                               ; preds = %20, %27
  %36 = phi %"class.v8::Object"* [ %34, %27 ], [ null, %20 ]
  %37 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %36) #5
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %37) #5
  %38 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %38) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 56, i1 false)
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %41, align 2
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %43 = bitcast i8** %42 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %48 = bitcast %"class.WTF::StringImpl"** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #5
  %49 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44) #5
  call void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, i32 1000, %"class.WTF::String"* nonnull dereferenceable(8) %9) #5
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #5
  br label %66

66:                                               ; preds = %35, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %66
  %71 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %45, align 8
  %72 = bitcast %"class.v8::Isolate"* %71 to %"class.v8::internal::Isolate"*
  %73 = load i64, i64* %68, align 8
  %74 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %72, i64 %73) #5
  %75 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %71) #5
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = bitcast i64* %74 to %"class.v8::Value"*
  %78 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %71, %"class.v8::Value"* %77) #5
  br label %79

79:                                               ; preds = %76, %70, %66
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #5
  br label %95

95:                                               ; preds = %79, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %38) #5
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %37) #5
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #5
  br label %191

96:                                               ; preds = %14
  %97 = bitcast %"class.blink::bindings::CallbackInvokeHelper"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %97) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 112, i1 false)
  call void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10, %"class.blink::CallbackFunctionBase"* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %98 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10, %"class.v8::Value"* %1, %"class.blink::ScriptWrappable"* %2) #5
  br i1 %98, label %107, label %99, !prof !2

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 5, i32 0
  %101 = load %"class.v8::Value"*, %"class.v8::Value"** %100, align 8
  %102 = icmp eq %"class.v8::Value"* %101, null
  br i1 %102, label %184, label %103

103:                                              ; preds = %99
  %104 = call { i8, %"class.WTF::StringImpl"* } @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10)
  %105 = extractvalue { i8, %"class.WTF::StringImpl"* } %104, 0
  %106 = extractvalue { i8, %"class.WTF::StringImpl"* } %104, 1
  br label %184

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0
  %109 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  %112 = zext i32 %111 to i64
  %113 = call i8* @llvm.stacksave()
  %114 = alloca %"class.v8::Local", i64 %112, align 16
  %115 = bitcast %"class.v8::Local"* %114 to i8*
  %116 = icmp eq i32 %111, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = shl nuw nsw i64 %112, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %115, i8 -86, i64 %118, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %115, i8 0, i64 %118, i1 false)
  br label %119

119:                                              ; preds = %117, %107
  %120 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %121 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %121, i64 0, i32 0
  %123 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %122, align 8
  %124 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #5
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %129, align 8
  %130 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %131 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %130, i64* %131, align 8
  br label %139

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 1
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %138 = bitcast i8** %137 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %138, align 8
  br label %139

139:                                              ; preds = %128, %132
  %140 = phi i32 [ %135, %132 ], [ 0, %128 ]
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %140, i32* %141, align 8
  %142 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %123, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #5
  %143 = icmp eq %"class.v8::String"* %142, null
  br i1 %143, label %181, label %144

144:                                              ; preds = %139
  %145 = ptrtoint %"class.v8::String"* %142 to i64
  %146 = bitcast %"class.v8::Local"* %114 to i64*
  store i64 %145, i64* %146, align 16
  %147 = load i32, i32* %109, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %175, label %149

149:                                              ; preds = %144
  %150 = bitcast %"class.blink::ScriptState"* %121 to i64*
  br label %151

151:                                              ; preds = %149, %167
  %152 = phi i64 [ 0, %149 ], [ %169, %167 ]
  %153 = trunc i64 %152 to i32
  %154 = call dereferenceable(24) %"class.blink::ScriptValue"* @_ZNK3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.194"* %108, i32 %153) #5
  %155 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %154, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i64*, i64** %155, align 8
  %157 = icmp eq i64* %156, null
  br i1 %157, label %158, label %162

158:                                              ; preds = %151
  %159 = load i64, i64* %150, align 8
  %160 = add i64 %159, 160
  %161 = inttoptr i64 %160 to %"class.v8::Value"*
  br label %164

162:                                              ; preds = %151
  %163 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %154) #5
  br label %164

164:                                              ; preds = %158, %162
  %165 = phi %"class.v8::Value"* [ %161, %158 ], [ %163, %162 ]
  %166 = icmp eq %"class.v8::Value"* %165, null
  br i1 %166, label %181, label %167

167:                                              ; preds = %164
  %168 = ptrtoint %"class.v8::Value"* %165 to i64
  %169 = add nuw nsw i64 %152, 1
  %170 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %114, i64 %169
  %171 = bitcast %"class.v8::Local"* %170 to i64*
  store i64 %168, i64* %171, align 8
  %172 = load i32, i32* %109, align 4
  %173 = zext i32 %172 to i64
  %174 = icmp ult i64 %169, %173
  br i1 %174, label %151, label %175

175:                                              ; preds = %167, %144
  %176 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10, i32 %111, %"class.v8::Local"* nonnull %114) #5
  br i1 %176, label %177, label %181

177:                                              ; preds = %175
  %178 = call { i8, %"class.WTF::StringImpl"* } @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10)
  %179 = extractvalue { i8, %"class.WTF::StringImpl"* } %178, 0
  %180 = extractvalue { i8, %"class.WTF::StringImpl"* } %178, 1
  br label %181

181:                                              ; preds = %164, %139, %175, %177
  %182 = phi i8 [ %179, %177 ], [ 0, %139 ], [ 0, %175 ], [ 0, %164 ]
  %183 = phi %"class.WTF::StringImpl"* [ %180, %177 ], [ null, %139 ], [ null, %175 ], [ null, %164 ]
  call void @llvm.stackrestore(i8* %113)
  br label %184

184:                                              ; preds = %99, %181, %103
  %185 = phi i8 [ %105, %103 ], [ %182, %181 ], [ 0, %99 ]
  %186 = phi %"class.WTF::StringImpl"* [ %106, %103 ], [ %183, %181 ], [ null, %99 ]
  %187 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 8
  call void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"* %187) #5
  %188 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 7, i32 1, i32 0
  %189 = load %"class.v8::Context"*, %"class.v8::Context"** %188, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %189) #5
  %190 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 7, i32 0
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %190) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %97) #5
  br label %191

191:                                              ; preds = %5, %95, %184
  %192 = phi i8 [ %185, %184 ], [ 0, %95 ], [ 0, %5 ]
  %193 = phi %"class.WTF::StringImpl"* [ %186, %184 ], [ null, %95 ], [ null, %5 ]
  %194 = insertvalue { i8, %"class.WTF::StringImpl"* } undef, i8 %192, 0
  %195 = insertvalue { i8, %"class.WTF::StringImpl"* } %194, %"class.WTF::StringImpl"* %193, 1
  ret { i8, %"class.WTF::StringImpl"* } %195
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase43CallbackRelevantScriptStateOrThrowExceptionEPKcS2_(%"class.blink::CallbackFunctionBase"*, i8*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"*, %"class.blink::ScriptState"*) local_unnamed_addr #3

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper"*, %"class.blink::CallbackFunctionBase"*, i8*, i8*) unnamed_addr #1 align 2

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, %"class.WTF::StringImpl"* } @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv(%"class.blink::bindings::CallbackInvokeHelper"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 72, i1 false)
  %5 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %0, i64 0, i32 0
  %6 = load %"class.blink::CallbackFunctionBase"*, %"class.blink::CallbackFunctionBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CallbackFunctionBase", %"class.blink::CallbackFunctionBase"* %6, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.blink::ScriptState"** %7 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %0, i64 0, i32 1
  %12 = bitcast i8** %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %18 = bitcast i8** %17 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %21 = bitcast %"class.v8::Isolate"** %20 to i64*
  store i64 %10, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #5
  %25 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %25) #5
  %26 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 0
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %0, i64 0, i32 5, i32 0
  %30 = load %"class.v8::Value"*, %"class.v8::Value"** %29, align 8
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %28, %"class.v8::Value"* %30, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #5
  %31 = load i32, i32* %22, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %91

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %35 = load %"class.v8::String"*, %"class.v8::String"** %34, align 8
  %36 = icmp eq %"class.v8::String"* %35, null
  br i1 %36, label %37, label %58, !prof !3

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %91, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %61

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #5
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #5
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %61

58:                                               ; preds = %33
  %59 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %35, i32 0) #5
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %91, label %61

61:                                               ; preds = %56, %41, %58
  %62 = phi %"class.WTF::StringImpl"* [ %59, %58 ], [ %39, %41 ], [ %39, %56 ]
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %61
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #5
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %69
  call void @llvm.trap() #5
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %61, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %61 ]
  %81 = load atomic i32, i32* %63 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %86 = add i32 %80, -1
  store i32 %86, i32* %85, align 4
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi i32 [ %86, %84 ], [ %80, %79 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #5
  br label %91

91:                                               ; preds = %37, %58, %1, %90, %87
  %92 = phi i8 [ 0, %1 ], [ 1, %87 ], [ 1, %90 ], [ 1, %58 ], [ 1, %37 ]
  %93 = phi %"class.WTF::StringImpl"* [ null, %1 ], [ %62, %87 ], [ %62, %90 ], [ null, %58 ], [ null, %37 ]
  %94 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  store i8* null, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %91
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %95) #5
  br label %98

98:                                               ; preds = %97, %91
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #5
  br label %115

115:                                              ; preds = %98, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %25) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %116 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %117, null
  br i1 %118, label %128, label %119

119:                                              ; preds = %115
  %120 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %121 = bitcast %"class.v8::Isolate"* %120 to %"class.v8::internal::Isolate"*
  %122 = load i64, i64* %117, align 8
  %123 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %121, i64 %122) #5
  %124 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %120) #5
  br i1 %124, label %128, label %125

125:                                              ; preds = %119
  %126 = bitcast i64* %123 to %"class.v8::Value"*
  %127 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %120, %"class.v8::Value"* %126) #5
  br label %128

128:                                              ; preds = %125, %119, %115
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #5
  br label %144

144:                                              ; preds = %128, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #5
  %145 = insertvalue { i8, %"class.WTF::StringImpl"* } undef, i8 %92, 0
  %146 = insertvalue { i8, %"class.WTF::StringImpl"* } %145, %"class.WTF::StringImpl"* %93, 1
  ret { i8, %"class.WTF::StringImpl"* } %146
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper"*, i32, %"class.v8::Local"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %"class.WTF::StringImpl"* } @_ZN5blink22V8CreateScriptCallback9ConstructERKN3WTF6StringERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::V8CreateScriptCallback"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::bindings::CallbackInvokeHelper.205", align 8
  %9 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0
  %10 = tail call %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase43CallbackRelevantScriptStateOrThrowExceptionEPKcS2_(%"class.blink::CallbackFunctionBase"* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #5
  %11 = icmp eq %"class.blink::ScriptState"* %10, null
  br i1 %11, label %189, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %14, i64 0, i32 0
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"* nonnull %10, %"class.blink::ScriptState"* %14) #5
  br i1 %17, label %94, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #5
  %20 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %16) #5
  %21 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.blink::TraceWrapperV8Reference"* %21 to %"class.v8::Object"**
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::ScriptState"** %13 to %"class.v8::internal::Isolate"***
  %27 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %26, align 8
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %29 = bitcast %"class.v8::Object"* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %28, i64 %30) #5
  %32 = bitcast i64* %31 to %"class.v8::Object"*
  br label %33

33:                                               ; preds = %18, %25
  %34 = phi %"class.v8::Object"* [ %32, %25 ], [ null, %18 ]
  %35 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %34) #5
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %35) #5
  %36 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 56, i1 false)
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %16, %"class.v8::Isolate"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #5
  %47 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44) #5
  call void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, i32 1000, %"class.WTF::String"* nonnull dereferenceable(8) %7) #5
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %33
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #5
  br label %64

64:                                               ; preds = %33, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %43, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #5
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #5
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #5
  br label %77

77:                                               ; preds = %74, %68, %64
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #5
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #5
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %35) #5
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #5
  br label %189

94:                                               ; preds = %12
  %95 = bitcast %"class.blink::bindings::CallbackInvokeHelper.205"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %95) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 112, i1 false)
  call void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper.205"* nonnull %8, %"class.blink::CallbackFunctionBase"* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %96 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper.205"* nonnull %8, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* null) #5
  br i1 %96, label %105, label %97, !prof !2

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %8, i64 0, i32 5, i32 0
  %99 = load %"class.v8::Value"*, %"class.v8::Value"** %98, align 8
  %100 = icmp eq %"class.v8::Value"* %99, null
  br i1 %100, label %182, label %101

101:                                              ; preds = %97
  %102 = call { i8, %"class.WTF::StringImpl"* } @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv(%"class.blink::bindings::CallbackInvokeHelper.205"* nonnull %8)
  %103 = extractvalue { i8, %"class.WTF::StringImpl"* } %102, 0
  %104 = extractvalue { i8, %"class.WTF::StringImpl"* } %102, 1
  br label %182

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  %107 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  %110 = zext i32 %109 to i64
  %111 = call i8* @llvm.stacksave()
  %112 = alloca %"class.v8::Local", i64 %110, align 16
  %113 = bitcast %"class.v8::Local"* %112 to i8*
  %114 = icmp eq i32 %109, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = shl nuw nsw i64 %110, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %113, i8 -86, i64 %116, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %113, i8 0, i64 %116, i1 false)
  br label %117

117:                                              ; preds = %115, %105
  %118 = getelementptr inbounds %"class.blink::V8CreateScriptCallback", %"class.blink::V8CreateScriptCallback"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %119 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %119, i64 0, i32 0
  %121 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %120, align 8
  %122 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #5
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %126, label %130

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %127, align 8
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %128, i64* %129, align 8
  br label %137

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 1
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %136 = bitcast i8** %135 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %136, align 8
  br label %137

137:                                              ; preds = %126, %130
  %138 = phi i32 [ %133, %130 ], [ 0, %126 ]
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %138, i32* %139, align 8
  %140 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %121, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #5
  %141 = icmp eq %"class.v8::String"* %140, null
  br i1 %141, label %179, label %142

142:                                              ; preds = %137
  %143 = ptrtoint %"class.v8::String"* %140 to i64
  %144 = bitcast %"class.v8::Local"* %112 to i64*
  store i64 %143, i64* %144, align 16
  %145 = load i32, i32* %107, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %173, label %147

147:                                              ; preds = %142
  %148 = bitcast %"class.blink::ScriptState"* %119 to i64*
  br label %149

149:                                              ; preds = %147, %165
  %150 = phi i64 [ 0, %147 ], [ %167, %165 ]
  %151 = trunc i64 %150 to i32
  %152 = call dereferenceable(24) %"class.blink::ScriptValue"* @_ZNK3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.194"* %106, i32 %151) #5
  %153 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %152, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = icmp eq i64* %154, null
  br i1 %155, label %156, label %160

156:                                              ; preds = %149
  %157 = load i64, i64* %148, align 8
  %158 = add i64 %157, 160
  %159 = inttoptr i64 %158 to %"class.v8::Value"*
  br label %162

160:                                              ; preds = %149
  %161 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %152) #5
  br label %162

162:                                              ; preds = %156, %160
  %163 = phi %"class.v8::Value"* [ %159, %156 ], [ %161, %160 ]
  %164 = icmp eq %"class.v8::Value"* %163, null
  br i1 %164, label %179, label %165

165:                                              ; preds = %162
  %166 = ptrtoint %"class.v8::Value"* %163 to i64
  %167 = add nuw nsw i64 %150, 1
  %168 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %112, i64 %167
  %169 = bitcast %"class.v8::Local"* %168 to i64*
  store i64 %166, i64* %169, align 8
  %170 = load i32, i32* %107, align 4
  %171 = zext i32 %170 to i64
  %172 = icmp ult i64 %167, %171
  br i1 %172, label %149, label %173

173:                                              ; preds = %165, %142
  %174 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper.205"* nonnull %8, i32 %109, %"class.v8::Local"* nonnull %112) #5
  br i1 %174, label %175, label %179

175:                                              ; preds = %173
  %176 = call { i8, %"class.WTF::StringImpl"* } @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv(%"class.blink::bindings::CallbackInvokeHelper.205"* nonnull %8)
  %177 = extractvalue { i8, %"class.WTF::StringImpl"* } %176, 0
  %178 = extractvalue { i8, %"class.WTF::StringImpl"* } %176, 1
  br label %179

179:                                              ; preds = %162, %137, %173, %175
  %180 = phi i8 [ %177, %175 ], [ 0, %137 ], [ 0, %173 ], [ 0, %162 ]
  %181 = phi %"class.WTF::StringImpl"* [ %178, %175 ], [ null, %137 ], [ null, %173 ], [ null, %162 ]
  call void @llvm.stackrestore(i8* %111)
  br label %182

182:                                              ; preds = %97, %179, %101
  %183 = phi i8 [ %103, %101 ], [ %180, %179 ], [ 0, %97 ]
  %184 = phi %"class.WTF::StringImpl"* [ %104, %101 ], [ %181, %179 ], [ null, %97 ]
  %185 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %8, i64 0, i32 8
  call void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"* %185) #5
  %186 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %8, i64 0, i32 7, i32 1, i32 0
  %187 = load %"class.v8::Context"*, %"class.v8::Context"** %186, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %187) #5
  %188 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %8, i64 0, i32 7, i32 0
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %188) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %95) #5
  br label %189

189:                                              ; preds = %3, %93, %182
  %190 = phi i8 [ %183, %182 ], [ 0, %93 ], [ 0, %3 ]
  %191 = phi %"class.WTF::StringImpl"* [ %184, %182 ], [ null, %93 ], [ null, %3 ]
  %192 = insertvalue { i8, %"class.WTF::StringImpl"* } undef, i8 %190, 0
  %193 = insertvalue { i8, %"class.WTF::StringImpl"* } %192, %"class.WTF::StringImpl"* %191, 1
  ret { i8, %"class.WTF::StringImpl"* } %193
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper.205"*, %"class.blink::CallbackFunctionBase"*, i8*, i8*) unnamed_addr #1 align 2

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper.205"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, %"class.WTF::StringImpl"* } @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE6ResultINS_11IDLNullableINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6StringEEEN2v85MaybeIT0_EEv(%"class.blink::bindings::CallbackInvokeHelper.205"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 72, i1 false)
  %5 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %0, i64 0, i32 0
  %6 = load %"class.blink::CallbackFunctionBase"*, %"class.blink::CallbackFunctionBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CallbackFunctionBase", %"class.blink::CallbackFunctionBase"* %6, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.blink::ScriptState"** %7 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %0, i64 0, i32 1
  %12 = bitcast i8** %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %18 = bitcast i8** %17 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %21 = bitcast %"class.v8::Isolate"** %20 to i64*
  store i64 %10, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #5
  %25 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %25) #5
  %26 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 0
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.205", %"class.blink::bindings::CallbackInvokeHelper.205"* %0, i64 0, i32 5, i32 0
  %30 = load %"class.v8::Value"*, %"class.v8::Value"** %29, align 8
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %28, %"class.v8::Value"* %30, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #5
  %31 = load i32, i32* %22, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %91

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %35 = load %"class.v8::String"*, %"class.v8::String"** %34, align 8
  %36 = icmp eq %"class.v8::String"* %35, null
  br i1 %36, label %37, label %58, !prof !3

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %91, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %61

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #5
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #5
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %61

58:                                               ; preds = %33
  %59 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %35, i32 0) #5
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %91, label %61

61:                                               ; preds = %56, %41, %58
  %62 = phi %"class.WTF::StringImpl"* [ %59, %58 ], [ %39, %41 ], [ %39, %56 ]
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %61
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #5
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %69
  call void @llvm.trap() #5
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %61, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %61 ]
  %81 = load atomic i32, i32* %63 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %86 = add i32 %80, -1
  store i32 %86, i32* %85, align 4
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi i32 [ %86, %84 ], [ %80, %79 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #5
  br label %91

91:                                               ; preds = %37, %58, %1, %90, %87
  %92 = phi i8 [ 0, %1 ], [ 1, %87 ], [ 1, %90 ], [ 1, %58 ], [ 1, %37 ]
  %93 = phi %"class.WTF::StringImpl"* [ null, %1 ], [ %62, %87 ], [ %62, %90 ], [ null, %58 ], [ null, %37 ]
  %94 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  store i8* null, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %91
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %95) #5
  br label %98

98:                                               ; preds = %97, %91
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #5
  br label %115

115:                                              ; preds = %98, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %25) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %116 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %117, null
  br i1 %118, label %128, label %119

119:                                              ; preds = %115
  %120 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %121 = bitcast %"class.v8::Isolate"* %120 to %"class.v8::internal::Isolate"*
  %122 = load i64, i64* %117, align 8
  %123 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %121, i64 %122) #5
  %124 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %120) #5
  br i1 %124, label %128, label %125

125:                                              ; preds = %119
  %126 = bitcast i64* %123 to %"class.v8::Value"*
  %127 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %120, %"class.v8::Value"* %126) #5
  br label %128

128:                                              ; preds = %125, %119, %115
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #5
  br label %144

144:                                              ; preds = %128, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #5
  %145 = insertvalue { i8, %"class.WTF::StringImpl"* } undef, i8 %92, 0
  %146 = insertvalue { i8, %"class.WTF::StringImpl"* } %145, %"class.WTF::StringImpl"* %93, 1
  ret { i8, %"class.WTF::StringImpl"* } %146
}

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper.205"*, i32, %"class.v8::Local"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CallbackFunctionBaseD2Ev(%"class.blink::CallbackFunctionBase"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22V8CreateScriptCallbackD0Ev(%"class.blink::V8CreateScriptCallback"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*) unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.208"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %76

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #5
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #5
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #5
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.208"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %76

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %58

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = ashr i32 %54, 1
  switch i32 %55, label %58 [
    i32 5, label %56
    i32 3, label %56
  ]

56:                                               ; preds = %51, %51
  %57 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 152, i1 false)
  br label %76

58:                                               ; preds = %51, %40, %36
  %59 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #5
  %60 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #5
  %61 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %60) #5
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #5
  %65 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %66 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, i64 5
  %68 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %67, align 8
  call void %68(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %64) #5
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 152, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %61, %"class.v8::String"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.208"* %73 to i64*
  store i64 0, i64* %74, align 8
  br label %75

75:                                               ; preds = %70, %63
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #5
  br label %76

76:                                               ; preds = %75, %56, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #3

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #5
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #5
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #5
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #5
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #5
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #5
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::ScriptValue"* @_ZNK3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.194"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.194", %"class.WTF::Vector.194"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %24, i64 %25
  ret %"class.blink::ScriptValue"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
