; ModuleID = '../../cc/layers/nine_patch_generator.cc'
source_filename = "../../cc/layers/nine_patch_generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::NinePatchGenerator::Patch" = type { %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::NinePatchGenerator" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Size", i8, i8, %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::NinePatchGenerator::Patch"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1177", %"class.std::__1::unique_ptr.1197", i8, [7 x i8] }>
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.982", %class.scoped_refptr.983, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.989, %"class.std::__1::vector.993", %"class.std::__1::unordered_map.1006", %"class.base::internal::flat_tree.1030", %"class.std::__1::unordered_map.1038", %"class.std::__1::unordered_map.1062", %"class.std::__1::unordered_map.1086", %"class.std::__1::unordered_map.1086", %"class.base::flat_map.1110", %"class.std::__1::vector.1120", %"class.base::internal::flat_tree.1127", %"class.base::internal::flat_tree.605", %"class.std::__1::vector.1128", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.121", %"class.std::__1::vector.121", %"class.std::__1::vector.1135", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1142, %class.scoped_refptr.1142, %"class.std::__1::unique_ptr.1147", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.640", %"class.std::__1::vector.763", %"class.std::__1::unique_ptr.1153", %"class.std::__1::vector.1159" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.109", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115", %"class.gfx::Vector2dF", %"class.std::__1::vector.121", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.413", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.470", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.std::__1::set.488", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.498", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.539", %"class.base::RepeatingCallback.335", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.545", i8, i8, i8, i32, %"class.std::__1::unique_ptr.555", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.561", %"class.std::__1::vector.567", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.599", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.605", %"class.absl::optional.618", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.89", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.693", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.771", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.814", %"class.base::WeakPtrFactory.821" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.16" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.49, %class.scoped_refptr.50, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.51", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.49 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.50 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.58", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.59" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.89", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.97" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.79"*, i64 }
%"class.std::__1::unique_ptr.79" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.97" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.104" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.104" = type { %"class.base::internal::VectorBuffer.105", i64, i64 }
%"class.base::internal::VectorBuffer.105" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.129", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.135", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.362", %"class.std::__1::vector.217", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.400", %"class.base::WeakPtrFactory.400" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.135" = type { %"class.std::__1::__hash_table.136" }
%"class.std::__1::__hash_table.136" = type <{ %"class.std::__1::unique_ptr.137", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157", [4 x i8] }>
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139", %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base.140"** }
%"struct.std::__1::__hash_node_base.140" = type { %"struct.std::__1::__hash_node_base.140"* }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::__bucket_list_deallocator.142" }
%"class.std::__1::__bucket_list_deallocator.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::__hash_node_base.140" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.162, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.164", %"class.base::flat_map.194", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.204", %"class.std::__1::map.204", i8, %"class.std::__1::vector.213", %"class.base::WeakPtrFactory.229" }
%class.scoped_refptr.162 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.163 }
%class.scoped_refptr.163 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.189" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.184", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.167, %"class.gfx::Rect", i32, %class.sk_sp.172, %class.sk_sp.180, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.181 }
%class.sk_sp.167 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.168", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { i8* }
%class.sk_sp.172 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.173" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.166, i32, i32 }
%class.sk_sp.166 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.59" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.175" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.180 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.181 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.182", [4 x i8] }>
%"class.base::RefCountedThreadSafe.182" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.183 }
%union.anon.183 = type { i64 }
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.194" = type { %"class.base::internal::flat_tree.195" }
%"class.base::internal::flat_tree.195" = type { %"class.std::__1::vector.196" }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.std::__1::pair.198"*, %"struct.std::__1::pair.198"*, %"class.std::__1::__compressed_pair.199" }
%"struct.std::__1::pair.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::pair.198"* }
%"class.std::__1::map.204" = type { %"class.std::__1::__tree.205" }
%"class.std::__1::__tree.205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.224" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.215, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.93", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.93" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.215 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.217", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.216", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.216" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.229" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.230", i8, %class.scoped_refptr.162, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.240" }
%"class.base::flat_map.230" = type { %"class.base::internal::flat_tree.231" }
%"class.base::internal::flat_tree.231" = type { %"class.std::__1::vector.232" }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"struct.std::__1::pair.234"*, %"struct.std::__1::pair.234"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair.234" = type { i32, %"class.std::__1::unique_ptr.1328" }
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair.234"* }
%"class.base::WeakPtrFactory.240" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.241", %"class.base::internal::flat_tree.241", %"class.std::__1::vector.249", i32, %"class.absl::optional.256", %"class.std::__1::unordered_map.261", %"class.std::__1::unordered_map.285", %"class.base::flat_map.309", %"class.base::WeakPtrFactory.319" }
%"class.base::internal::flat_tree.241" = type { %"class.std::__1::vector.242" }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { i32*, i32*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { i32* }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.251" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.256" = type { %"class.absl::optional_internal::optional_data.257" }
%"class.absl::optional_internal::optional_data.257" = type { %"class.absl::optional_internal::optional_data_base.258" }
%"class.absl::optional_internal::optional_data_base.258" = type { %"class.absl::optional_internal::optional_data_dtor_base.259" }
%"class.absl::optional_internal::optional_data_dtor_base.259" = type { i8, %union.anon.260 }
%union.anon.260 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.261" = type { %"class.std::__1::__hash_table.262" }
%"class.std::__1::__hash_table.262" = type <{ %"class.std::__1::unique_ptr.263", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.281", [4 x i8] }>
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265", %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::__hash_node_base.266"** }
%"struct.std::__1::__hash_node_base.266" = type { %"struct.std::__1::__hash_node_base.266"* }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.std::__1::__bucket_list_deallocator.268" }
%"class.std::__1::__bucket_list_deallocator.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.std::__1::__hash_node_base.266" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.290" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.base::flat_map.309" = type { %"class.base::internal::flat_tree.310" }
%"class.base::internal::flat_tree.310" = type { %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"struct.std::__1::pair.313"*, %"struct.std::__1::pair.313"*, %"class.std::__1::__compressed_pair.314" }
%"struct.std::__1::pair.313" = type { i32, i32 }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.std::__1::pair.313"* }
%"class.base::WeakPtrFactory.319" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.320", %"class.std::__1::vector.328" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.323" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.322, i16, i16, i32 }
%class.scoped_refptr.322 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.330" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.335", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.336" }
%"class.base::WeakPtrFactory.336" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.337" }
%"class.std::__1::__hash_table.337" = type <{ %"class.std::__1::unique_ptr.338", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.357", [4 x i8] }>
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340", %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::__hash_node_base.341"** }
%"struct.std::__1::__hash_node_base.341" = type { %"struct.std::__1::__hash_node_base.341"* }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.std::__1::__bucket_list_deallocator.343" }
%"class.std::__1::__bucket_list_deallocator.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base.341" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_map.362" = type { %"class.std::__1::__hash_table.363" }
%"class.std::__1::__hash_table.363" = type <{ %"class.std::__1::unique_ptr.364", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.382", [4 x i8] }>
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366", %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::__hash_node_base.367"** }
%"struct.std::__1::__hash_node_base.367" = type { %"struct.std::__1::__hash_node_base.367"* }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::__bucket_list_deallocator.369" }
%"class.std::__1::__bucket_list_deallocator.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.367" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %class.scoped_refptr.215*, %class.scoped_refptr.215*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %class.scoped_refptr.215* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.386" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.392", %"class.base::WeakPtrFactory.393" }
%"class.base::OnceCallback.392" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.394, i8, [7 x i8] }>
%class.scoped_refptr.394 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.395", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.395" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.396" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.base::WeakPtrFactory.400" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.404", %"class.absl::optional.404", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"struct.std::__1::pair.409" }
%"struct.std::__1::pair.409" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.429", %"class.absl::optional.429", %"class.absl::optional.429", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.448, %"class.absl::optional.449", %"class.std::__1::map.454" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.425" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.419"**, %"struct.std::__1::pair.419"**, %"struct.std::__1::pair.419"**, %"class.std::__1::__compressed_pair.420" }
%"struct.std::__1::pair.419" = type opaque
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::pair.419"** }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.429" = type { %"class.absl::optional_internal::optional_data.430" }
%"class.absl::optional_internal::optional_data.430" = type { %"class.absl::optional_internal::optional_data_base.431" }
%"class.absl::optional_internal::optional_data_base.431" = type { %"class.absl::optional_internal::optional_data_dtor_base.432" }
%"class.absl::optional_internal::optional_data_dtor_base.432" = type { i8, %union.anon.433 }
%union.anon.433 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.434", %"class.base::circular_deque.435", %"class.std::__1::map.437", %"class.absl::optional" }
%"class.base::RepeatingCallback.434" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.435" = type { %"class.base::internal::VectorBuffer.436", i64, i64 }
%"class.base::internal::VectorBuffer.436" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.437" = type { %"class.std::__1::__tree.438" }
%"class.std::__1::__tree.438" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.439", %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%struct.anon.448 = type { double, double }
%"class.absl::optional.449" = type { %"class.absl::optional_internal::optional_data.450" }
%"class.absl::optional_internal::optional_data.450" = type { %"class.absl::optional_internal::optional_data_base.451" }
%"class.absl::optional_internal::optional_data_base.451" = type { %"class.absl::optional_internal::optional_data_dtor_base.452" }
%"class.absl::optional_internal::optional_data_dtor_base.452" = type { i8, %union.anon.453 }
%union.anon.453 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.454" = type { %"class.std::__1::__tree.455" }
%"class.std::__1::__tree.455" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.466" }
%"class.base::RingBuffer.466" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.488" = type { %"class.std::__1::__tree.489" }
%"class.std::__1::__tree.489" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.498" = type { %"class.std::__1::__hash_table.499" }
%"class.std::__1::__hash_table.499" = type <{ %"class.std::__1::unique_ptr.500", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.518", [4 x i8] }>
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502", %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.std::__1::__hash_node_base.503"** }
%"struct.std::__1::__hash_node_base.503" = type { %"struct.std::__1::__hash_node_base.503"* }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.std::__1::__bucket_list_deallocator.505" }
%"class.std::__1::__bucket_list_deallocator.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.503" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.524" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.531" }
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { %"class.std::__1::unique_ptr.533"*, %"class.std::__1::unique_ptr.533"*, %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::unique_ptr.533" = type opaque
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.std::__1::unique_ptr.533"* }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.335" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.567" = type { %"class.std::__1::__vector_base.568" }
%"class.std::__1::__vector_base.568" = type { %"struct.std::__1::pair.569"*, %"struct.std::__1::pair.569"*, %"class.std::__1::__compressed_pair.570" }
%"struct.std::__1::pair.569" = type opaque
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::pair.569"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.575", %"class.base::internal::flat_tree.241", %"class.base::internal::flat_tree.241", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.575" = type { %"class.base::internal::flat_tree.576" }
%"class.base::internal::flat_tree.576" = type { %"class.std::__1::vector.577" }
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"struct.std::__1::pair.579"*, %"struct.std::__1::pair.579"*, %"class.std::__1::__compressed_pair.580" }
%"struct.std::__1::pair.579" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.173", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1334", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1334" = type { %"class.std::__1::vector.1335" }
%"class.std::__1::vector.1335" = type { %"class.std::__1::__vector_base.1336" }
%"class.std::__1::__vector_base.1336" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1337" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::pair.579"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.585", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.586" }
%"class.base::RepeatingCallback.585" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.586" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.590" }
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.618" = type { %"class.absl::optional_internal::optional_data.619" }
%"class.absl::optional_internal::optional_data.619" = type { %"class.absl::optional_internal::optional_data_base.620" }
%"class.absl::optional_internal::optional_data_base.620" = type { %"class.absl::optional_internal::optional_data_dtor_base.621" }
%"class.absl::optional_internal::optional_data_dtor_base.621" = type { i8, [7 x i8], %union.anon.622 }
%union.anon.622 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.623", %"struct.viz::Selection", i8, %"class.absl::optional.628", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.633", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.623" = type { %"class.absl::optional_internal::optional_data.624" }
%"class.absl::optional_internal::optional_data.624" = type { %"class.absl::optional_internal::optional_data_base.625" }
%"class.absl::optional_internal::optional_data_base.625" = type { %"class.absl::optional_internal::optional_data_dtor_base.626" }
%"class.absl::optional_internal::optional_data_dtor_base.626" = type { i8, %union.anon.627 }
%union.anon.627 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.628" = type { %"class.absl::optional_internal::optional_data.629" }
%"class.absl::optional_internal::optional_data.629" = type { %"class.absl::optional_internal::optional_data_base.630" }
%"class.absl::optional_internal::optional_data_base.630" = type { %"class.absl::optional_internal::optional_data_dtor_base.631" }
%"class.absl::optional_internal::optional_data_dtor_base.631" = type { i8, %union.anon.632 }
%union.anon.632 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.633" = type { %"class.absl::optional_internal::optional_data.634" }
%"class.absl::optional_internal::optional_data.634" = type { %"class.absl::optional_internal::optional_data_base.635" }
%"class.absl::optional_internal::optional_data_base.635" = type { %"class.absl::optional_internal::optional_data_dtor_base.636" }
%"class.absl::optional_internal::optional_data_dtor_base.636" = type { i8, %union.anon.637 }
%union.anon.637 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.638" }
%"class.base::circular_deque.638" = type { %"class.base::internal::VectorBuffer.639", i64, i64 }
%"class.base::internal::VectorBuffer.639" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.640", %"class.std::__1::vector.640" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.648", %"class.base::flat_map.654", %"class.base::flat_map.664", %"class.base::RepeatingCallback.674", %"class.std::__1::vector.675", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.683", i64, i64 }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.654" = type { %"class.base::internal::flat_tree.655" }
%"class.base::internal::flat_tree.655" = type { %"class.std::__1::vector.656" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"struct.std::__1::pair.658"*, %"struct.std::__1::pair.658"*, %"class.std::__1::__compressed_pair.659" }
%"struct.std::__1::pair.658" = type opaque
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"struct.std::__1::pair.658"* }
%"class.base::flat_map.664" = type { %"class.base::internal::flat_tree.665" }
%"class.base::internal::flat_tree.665" = type { %"class.std::__1::vector.666" }
%"class.std::__1::vector.666" = type { %"class.std::__1::__vector_base.667" }
%"class.std::__1::__vector_base.667" = type { %"struct.std::__1::pair.668"*, %"struct.std::__1::pair.668"*, %"class.std::__1::__compressed_pair.669" }
%"struct.std::__1::pair.668" = type opaque
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"struct.std::__1::pair.668"* }
%"class.base::RepeatingCallback.674" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.675" = type { %"class.std::__1::__vector_base.676" }
%"class.std::__1::__vector_base.676" = type { %"class.std::__1::unique_ptr.677"*, %"class.std::__1::unique_ptr.677"*, %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::unique_ptr.677" = type opaque
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.std::__1::unique_ptr.677"* }
%"class.base::flat_map.683" = type { %"class.base::internal::flat_tree.684" }
%"class.base::internal::flat_tree.684" = type { %"class.std::__1::vector.685" }
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"struct.std::__1::pair.687"*, %"struct.std::__1::pair.687"*, %"class.std::__1::__compressed_pair.688" }
%"struct.std::__1::pair.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"struct.std::__1::pair.687"* }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.699", %"class.base::internal::flat_tree.709" }
%"class.base::flat_map.699" = type { %"class.base::internal::flat_tree.700" }
%"class.base::internal::flat_tree.700" = type { %"class.std::__1::vector.701" }
%"class.std::__1::vector.701" = type { %"class.std::__1::__vector_base.702" }
%"class.std::__1::__vector_base.702" = type { %"struct.std::__1::pair.703"*, %"struct.std::__1::pair.703"*, %"class.std::__1::__compressed_pair.704" }
%"struct.std::__1::pair.703" = type opaque
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.std::__1::pair.703"* }
%"class.base::internal::flat_tree.709" = type { %"class.std::__1::vector.710" }
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.722" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.712", %"class.absl::optional.717", %"struct.cc::ElementId" }
%"class.absl::optional.712" = type { %"class.absl::optional_internal::optional_data.713" }
%"class.absl::optional_internal::optional_data.713" = type { %"class.absl::optional_internal::optional_data_base.714" }
%"class.absl::optional_internal::optional_data_base.714" = type { %"class.absl::optional_internal::optional_data_dtor_base.715" }
%"class.absl::optional_internal::optional_data_dtor_base.715" = type { i8, %union.anon.716 }
%union.anon.716 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.717" = type { %"class.absl::optional_internal::optional_data.718" }
%"class.absl::optional_internal::optional_data.718" = type { %"class.absl::optional_internal::optional_data_base.719" }
%"class.absl::optional_internal::optional_data_base.719" = type { %"class.absl::optional_internal::optional_data_dtor_base.720" }
%"class.absl::optional_internal::optional_data_dtor_base.720" = type { i8, %union.anon.721 }
%union.anon.721 = type { i32 }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.739" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.727", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.727" = type { %"class.std::__1::__deque_base.728" }
%"class.std::__1::__deque_base.728" = type { %"struct.std::__1::__split_buffer.729", i64, %"class.std::__1::__compressed_pair.735" }
%"struct.std::__1::__split_buffer.729" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.730" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.base::circular_deque.739" = type { %"class.base::internal::VectorBuffer.740", i64, i64 }
%"class.base::internal::VectorBuffer.740" = type { %"struct.std::__1::pair.741"*, i64 }
%"struct.std::__1::pair.741" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.742", %"class.std::__1::map.747", %"class.std::__1::map.747" }
%"class.absl::optional.742" = type { %"class.absl::optional_internal::optional_data.743" }
%"class.absl::optional_internal::optional_data.743" = type { %"class.absl::optional_internal::optional_data_base.744" }
%"class.absl::optional_internal::optional_data_base.744" = type { %"class.absl::optional_internal::optional_data_dtor_base.745" }
%"class.absl::optional_internal::optional_data_dtor_base.745" = type { i8, [3 x i8], %union.anon.746 }
%union.anon.746 = type { %"class.gfx::Transform" }
%"class.std::__1::map.747" = type { %"class.std::__1::__tree.748" }
%"class.std::__1::__tree.748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.749", %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.756", %"class.std::__1::vector.763" }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.758" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.335", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.777" }
%"class.base::WeakPtrFactory.777" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.778", %"class.std::__1::map.785", i64 }
%"class.std::__1::list.778" = type { %"class.std::__1::__list_imp.779" }
%"class.std::__1::__list_imp.779" = type { %"struct.std::__1::__list_node_base.780", %"class.std::__1::__compressed_pair.781" }
%"struct.std::__1::__list_node_base.780" = type { %"struct.std::__1::__list_node_base.780"*, %"struct.std::__1::__list_node_base.780"* }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::map.785" = type { %"class.std::__1::__tree.786" }
%"class.std::__1::__tree.786" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.787", %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.796", %"class.base::internal::flat_tree.806", %"class.base::internal::flat_tree.806" }
%"class.base::flat_map.796" = type { %"class.base::internal::flat_tree.797" }
%"class.base::internal::flat_tree.797" = type { %"class.std::__1::vector.798" }
%"class.std::__1::vector.798" = type { %"class.std::__1::__vector_base.799" }
%"class.std::__1::__vector_base.799" = type { %"struct.std::__1::pair.800"*, %"struct.std::__1::pair.800"*, %"class.std::__1::__compressed_pair.801" }
%"struct.std::__1::pair.800" = type opaque
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"struct.std::__1::pair.800"* }
%"class.base::internal::flat_tree.806" = type { %"class.std::__1::vector.807" }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.809" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { i32*, i32*, %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { i32* }
%"class.base::WeakPtrFactory.821" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.822", %"class.base::flat_map.822", %"class.base::flat_map.822", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.822" = type { %"class.base::internal::flat_tree.823" }
%"class.base::internal::flat_tree.823" = type { %"class.std::__1::vector.824" }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.std::__1::pair.826"*, %"struct.std::__1::pair.826"*, %"class.std::__1::__compressed_pair.827" }
%"struct.std::__1::pair.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::pair.826"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.242", %"class.std::__1::vector.839", %"class.std::__1::vector.846" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.832", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.834" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.841" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.846" = type { %"class.std::__1::__vector_base.847" }
%"class.std::__1::__vector_base.847" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.848" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.853", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.911" }
%"class.cc::PropertyTree.853" = type { i32 (...)**, %"class.std::__1::vector.854", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.854" = type { %"class.std::__1::__vector_base.855" }
%"class.std::__1::__vector_base.855" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.883" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.877", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.856" }
%"class.std::__1::vector.856" = type { %"class.std::__1::__vector_base.857" }
%"class.std::__1::__vector_base.857" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.872" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.858, [20 x float], i32, [4 x i8], %"class.std::__1::vector.865", i32, [4 x i8] }>
%class.sk_sp.858 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.859, i32, %"class.absl::optional.860", i8, i32 }
%class.sk_sp.859 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.860" = type { %"class.absl::optional_internal::optional_data.861" }
%"class.absl::optional_internal::optional_data.861" = type { %"class.absl::optional_internal::optional_data_base.862" }
%"class.absl::optional_internal::optional_data_base.862" = type { %"class.absl::optional_internal::optional_data_dtor_base.863" }
%"class.absl::optional_internal::optional_data_dtor_base.863" = type { i8, %union.anon.864 }
%union.anon.864 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, %union.anon.881 }
%union.anon.881 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.882" }
%"class.base::internal::flat_tree.882" = type { %"class.std::__1::vector.814" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.888" }
%"class.std::__1::__hash_table.888" = type <{ %"class.std::__1::unique_ptr.889", %"class.std::__1::__compressed_pair.899", %"class.std::__1::__compressed_pair.904", %"class.std::__1::__compressed_pair.907", [4 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891", %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.std::__1::__hash_node_base.892"** }
%"struct.std::__1::__hash_node_base.892" = type { %"struct.std::__1::__hash_node_base.892"* }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::__bucket_list_deallocator.894" }
%"class.std::__1::__bucket_list_deallocator.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"struct.std::__1::__hash_node_base.892" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::vector.911" = type { %"class.std::__1::__vector_base.912" }
%"class.std::__1::__vector_base.912" = type { %"class.std::__1::unique_ptr.913"*, %"class.std::__1::unique_ptr.913"*, %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.916" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.std::__1::unique_ptr.913"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.930" }
%"class.cc::PropertyTree.930" = type { i32 (...)**, %"class.std::__1::vector.931", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.931" = type { %"class.std::__1::__vector_base.932" }
%"class.std::__1::__vector_base.932" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.933" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.938", i32, %"class.base::flat_map.946", %"class.base::flat_map.956", %"class.base::WeakPtr.966" }
%"class.cc::PropertyTree.938" = type { i32 (...)**, %"class.std::__1::vector.939", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.941" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.946" = type { %"class.base::internal::flat_tree.947" }
%"class.base::internal::flat_tree.947" = type { %"class.std::__1::vector.948" }
%"class.std::__1::vector.948" = type { %"class.std::__1::__vector_base.949" }
%"class.std::__1::__vector_base.949" = type { %"struct.std::__1::pair.950"*, %"struct.std::__1::pair.950"*, %"class.std::__1::__compressed_pair.951" }
%"struct.std::__1::pair.950" = type opaque
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::pair.950"* }
%"class.base::flat_map.956" = type { %"class.base::internal::flat_tree.957" }
%"class.base::internal::flat_tree.957" = type { %"class.std::__1::vector.958" }
%"class.std::__1::vector.958" = type { %"class.std::__1::__vector_base.959" }
%"class.std::__1::__vector_base.959" = type { %"struct.std::__1::pair.960"*, %"struct.std::__1::pair.960"*, %"class.std::__1::__compressed_pair.961" }
%"struct.std::__1::pair.960" = type opaque
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.std::__1::pair.960"* }
%"class.base::WeakPtr.966" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.967", %"class.std::__1::vector.974" }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.969" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.974" = type { %"class.std::__1::__vector_base.975" }
%"class.std::__1::__vector_base.975" = type { %"class.std::__1::vector.976"*, %"class.std::__1::vector.976"*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::vector.976" = type opaque
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.std::__1::vector.976"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.982" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.983 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.984" }
%"class.absl::optional.984" = type { %"class.absl::optional_internal::optional_data.985" }
%"class.absl::optional_internal::optional_data.985" = type { %"class.absl::optional_internal::optional_data_base.986" }
%"class.absl::optional_internal::optional_data_base.986" = type { %"class.absl::optional_internal::optional_data_dtor_base.987" }
%"class.absl::optional_internal::optional_data_dtor_base.987" = type { i8, %union.anon.988 }
%union.anon.988 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.989 = type { %"class.cc::SyncedProperty.990"* }
%"class.cc::SyncedProperty.990" = type <{ %"class.base::RefCounted.991", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.991" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.993" = type { %"class.std::__1::__vector_base.994" }
%"class.std::__1::__vector_base.994" = type { %"class.std::__1::unique_ptr.995"*, %"class.std::__1::unique_ptr.995"*, %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.cc::LayerImpl"* }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.std::__1::unique_ptr.995"* }
%"class.std::__1::unordered_map.1006" = type { %"class.std::__1::__hash_table.1007" }
%"class.std::__1::__hash_table.1007" = type <{ %"class.std::__1::unique_ptr.1008", %"class.std::__1::__compressed_pair.1018", %"class.std::__1::__compressed_pair.1023", %"class.std::__1::__compressed_pair.1026", [4 x i8] }>
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010", %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.std::__1::__hash_node_base.1011"** }
%"struct.std::__1::__hash_node_base.1011" = type { %"struct.std::__1::__hash_node_base.1011"* }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.std::__1::__bucket_list_deallocator.1013" }
%"class.std::__1::__bucket_list_deallocator.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1011" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.base::internal::flat_tree.1030" = type { %"class.std::__1::vector.1031" }
%"class.std::__1::vector.1031" = type { %"class.std::__1::__vector_base.1032" }
%"class.std::__1::__vector_base.1032" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1038" = type { %"class.std::__1::__hash_table.1039" }
%"class.std::__1::__hash_table.1039" = type <{ %"class.std::__1::unique_ptr.1040", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1058", [4 x i8] }>
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042", %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1043"** }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::__bucket_list_deallocator.1045" }
%"class.std::__1::__bucket_list_deallocator.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1043" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_map.1062" = type { %"class.std::__1::__hash_table.1063" }
%"class.std::__1::__hash_table.1063" = type <{ %"class.std::__1::unique_ptr.1064", %"class.std::__1::__compressed_pair.1074", %"class.std::__1::__compressed_pair.1079", %"class.std::__1::__compressed_pair.1082", [4 x i8] }>
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066", %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"struct.std::__1::__hash_node_base.1067"** }
%"struct.std::__1::__hash_node_base.1067" = type { %"struct.std::__1::__hash_node_base.1067"* }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.std::__1::__bucket_list_deallocator.1069" }
%"class.std::__1::__bucket_list_deallocator.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::__hash_node_base.1067" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_map.1086" = type { %"class.std::__1::__hash_table.1087" }
%"class.std::__1::__hash_table.1087" = type <{ %"class.std::__1::unique_ptr.1088", %"class.std::__1::__compressed_pair.1098", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1106", [4 x i8] }>
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090", %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.std::__1::__hash_node_base.1091"** }
%"struct.std::__1::__hash_node_base.1091" = type { %"struct.std::__1::__hash_node_base.1091"* }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.std::__1::__bucket_list_deallocator.1093" }
%"class.std::__1::__bucket_list_deallocator.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1091" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.base::flat_map.1110" = type { %"class.base::internal::flat_tree.1111" }
%"class.base::internal::flat_tree.1111" = type { %"class.std::__1::vector.1112" }
%"class.std::__1::vector.1112" = type { %"class.std::__1::__vector_base.1113" }
%"class.std::__1::__vector_base.1113" = type { %"struct.std::__1::pair.1114"*, %"struct.std::__1::pair.1114"*, %"class.std::__1::__compressed_pair.1115" }
%"struct.std::__1::pair.1114" = type opaque
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::pair.1114"* }
%"class.std::__1::vector.1120" = type { %"class.std::__1::__vector_base.1121" }
%"class.std::__1::__vector_base.1121" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1122" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1203", %class.scoped_refptr.1211, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1263", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1268", %"class.base::flat_map.1275", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1177", %"class.std::__1::unique_ptr.1197", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1206", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1248", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1211, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1206" = type { %"class.std::__1::__vector_base.1207" }
%"class.std::__1::__vector_base.1207" = type { %"class.std::__1::unique_ptr.1208"*, %"class.std::__1::unique_ptr.1208"*, %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1211, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1214", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1214" = type { %"class.std::__1::__hash_table.1215" }
%"class.std::__1::__hash_table.1215" = type <{ %"class.std::__1::unique_ptr.1216", %"class.std::__1::__compressed_pair.1226", %"class.std::__1::__compressed_pair.1231", %"class.std::__1::__compressed_pair.1234", [4 x i8] }>
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218", %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"struct.std::__1::__hash_node_base.1219"** }
%"struct.std::__1::__hash_node_base.1219" = type { %"struct.std::__1::__hash_node_base.1219"* }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.std::__1::__bucket_list_deallocator.1221" }
%"class.std::__1::__bucket_list_deallocator.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.std::__1::__hash_node_base.1219" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.std::__1::unique_ptr.1208"* }
%"class.std::__1::deque.1248" = type { %"class.std::__1::__deque_base.1249" }
%"class.std::__1::__deque_base.1249" = type { %"struct.std::__1::__split_buffer.1250", i64, %"class.std::__1::__compressed_pair.1256" }
%"struct.std::__1::__split_buffer.1250" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1251" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1211 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1212", [4 x i8], i64, %class.scoped_refptr.1213, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1212" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1213 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1263" = type { %"class.absl::optional_internal::optional_data.1264" }
%"class.absl::optional_internal::optional_data.1264" = type { %"class.absl::optional_internal::optional_data_base.1265" }
%"class.absl::optional_internal::optional_data_base.1265" = type { %"class.absl::optional_internal::optional_data_dtor_base.1266" }
%"class.absl::optional_internal::optional_data_dtor_base.1266" = type { i8, %union.anon.1267 }
%union.anon.1267 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1268" = type { %"class.std::__1::__vector_base.1269" }
%"class.std::__1::__vector_base.1269" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1275" = type { %"class.base::internal::flat_tree.1276" }
%"class.base::internal::flat_tree.1276" = type { %"class.std::__1::vector.1277" }
%"class.std::__1::vector.1277" = type { %"class.std::__1::__vector_base.1278" }
%"class.std::__1::__vector_base.1278" = type { %"struct.std::__1::pair.1279"*, %"struct.std::__1::pair.1279"*, %"class.std::__1::__compressed_pair.1280" }
%"struct.std::__1::pair.1279" = type opaque
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"struct.std::__1::pair.1279"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1127" = type { %"class.std::__1::vector.1120" }
%"class.base::internal::flat_tree.605" = type { %"class.std::__1::vector.606" }
%"class.std::__1::vector.606" = type { %"class.std::__1::__vector_base.607" }
%"class.std::__1::__vector_base.607" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.613" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.608", %"class.viz::SurfaceId" }
%"class.absl::optional.608" = type { %"class.absl::optional_internal::optional_data.609" }
%"class.absl::optional_internal::optional_data.609" = type { %"class.absl::optional_internal::optional_data_base.610" }
%"class.absl::optional_internal::optional_data_base.610" = type { %"class.absl::optional_internal::optional_data_dtor_base.611" }
%"class.absl::optional_internal::optional_data_dtor_base.611" = type { i8, %union.anon.612 }
%union.anon.612 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.std::__1::unique_ptr.123"*, %"class.std::__1::unique_ptr.123"*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::unique_ptr.123"* }
%"class.std::__1::vector.1135" = type { %"class.std::__1::__vector_base.1136" }
%"class.std::__1::__vector_base.1136" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1137" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1142 = type { %"class.cc::SyncedProperty.1143"* }
%"class.cc::SyncedProperty.1143" = type <{ %"class.base::RefCounted.1144", %"class.cc::AdditionGroup.1145", %"class.cc::AdditionGroup.1145", %"class.cc::AdditionGroup.1145", %"class.cc::AdditionGroup.1145", %"class.cc::AdditionGroup.1145", i8, [3 x i8] }>
%"class.base::RefCounted.1144" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1145" = type { float }
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.640" = type { %"class.std::__1::__vector_base.641" }
%"class.std::__1::__vector_base.641" = type { %"class.base::OnceCallback.642"*, %"class.base::OnceCallback.642"*, %"class.std::__1::__compressed_pair.643" }
%"class.base::OnceCallback.642" = type opaque
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.base::OnceCallback.642"* }
%"class.std::__1::vector.763" = type { %"class.std::__1::__vector_base.764" }
%"class.std::__1::__vector_base.764" = type { %"class.std::__1::unique_ptr.765"*, %"class.std::__1::unique_ptr.765"*, %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1315", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1315" = type { %"class.absl::optional_internal::optional_data.1316" }
%"class.absl::optional_internal::optional_data.1316" = type { %"class.absl::optional_internal::optional_data_base.1317" }
%"class.absl::optional_internal::optional_data_base.1317" = type { %"class.absl::optional_internal::optional_data_dtor_base.1318" }
%"class.absl::optional_internal::optional_data_dtor_base.1318" = type { i8, %union.anon.1319 }
%union.anon.1319 = type { i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.std::__1::unique_ptr.765"* }
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1159" = type { %"class.std::__1::__vector_base.1160" }
%"class.std::__1::__vector_base.1160" = type { %"class.std::__1::unique_ptr.1161"*, %"class.std::__1::unique_ptr.1161"*, %"class.std::__1::__compressed_pair.1162" }
%"class.std::__1::unique_ptr.1161" = type opaque
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.std::__1::unique_ptr.1161"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1167" }
%"class.base::flat_map.1167" = type { %"class.base::internal::flat_tree.1168" }
%"class.base::internal::flat_tree.1168" = type { %"class.std::__1::vector.1169" }
%"class.std::__1::vector.1169" = type { %"class.std::__1::__vector_base.1170" }
%"class.std::__1::__vector_base.1170" = type { %"struct.std::__1::pair.1171"*, %"struct.std::__1::pair.1171"*, %"class.std::__1::__compressed_pair.1172" }
%"struct.std::__1::pair.1171" = type opaque
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"struct.std::__1::pair.1171"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1180", %"class.std::__1::vector.1180", %"class.std::__1::vector.1187" }
%"class.std::__1::vector.1180" = type { %"class.std::__1::__vector_base.1181" }
%"class.std::__1::__vector_base.1181" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { i8** }
%"class.std::__1::vector.1187" = type { %"class.std::__1::__vector_base.1188" }
%"class.std::__1::__vector_base.1188" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1189" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.cc::Region"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.877", i8, i8, i8, i8, %"class.std::__1::vector.1285", %"class.viz::QuadList", %"class.cc::ListContainer.1299" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"class.std::__1::unique_ptr.1287"*, %"class.std::__1::unique_ptr.1287"*, %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::unique_ptr.1287" = type opaque
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.std::__1::unique_ptr.1287"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.1293" }
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.1299" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.1300", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional", float, i8, [3 x i8] }>
%"class.absl::optional.1300" = type { %"class.absl::optional_internal::optional_data.1301" }
%"class.absl::optional_internal::optional_data.1301" = type { %"class.absl::optional_internal::optional_data_base.1302" }
%"class.absl::optional_internal::optional_data_base.1302" = type { %"class.absl::optional_internal::optional_data_dtor_base.1303" }
%"class.absl::optional_internal::optional_data_dtor_base.1303" = type { i8, %union.anon.1304 }
%union.anon.1304 = type { %"class.gfx::Rect" }
%"class.viz::TextureDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x float], i8, i32, %"struct.viz::TextureDrawQuad::OverlayResources" }
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.1305"] }
%"class.util::IdType.1305" = type { %"class.base::StrongAlias.1306" }
%"class.base::StrongAlias.1306" = type { i32 }
%"struct.viz::TextureDrawQuad::OverlayResources" = type { %"class.gfx::Size" }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.1307" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@_ZZN2cc18NinePatchGenerator11AppendQuadsEPNS_9LayerImplEiPN3viz20CompositorRenderPassEPNS3_15SharedQuadStateERKNSt3__16vectorINS0_5PatchENS8_9allocatorISA_EEEEE14vertex_opacity = internal constant [4 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@.str = private unnamed_addr constant [14 x i8] c"ImageAperture\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"ImageBounds\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Border\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"FillCenter\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"OutputOcclusion\00", align 1

@_ZN2cc18NinePatchGenerator5PatchC1ERKN3gfx5RectFERKNS2_4SizeES5_ = hidden unnamed_addr alias void (%"class.cc::NinePatchGenerator::Patch"*, %"class.gfx::RectF"*, %"class.gfx::Size"*, %"class.gfx::RectF"*), void (%"class.cc::NinePatchGenerator::Patch"*, %"class.gfx::RectF"*, %"class.gfx::Size"*, %"class.gfx::RectF"*)* @_ZN2cc18NinePatchGenerator5PatchC2ERKN3gfx5RectFERKNS2_4SizeES5_
@_ZN2cc18NinePatchGeneratorC1Ev = hidden unnamed_addr alias void (%"class.cc::NinePatchGenerator"*), void (%"class.cc::NinePatchGenerator"*)* @_ZN2cc18NinePatchGeneratorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18NinePatchGenerator5PatchC2ERKN3gfx5RectFERKNS2_4SizeES5_(%"class.cc::NinePatchGenerator::Patch"* nocapture, %"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.cc::NinePatchGenerator::Patch"* %0 to i8*
  %6 = bitcast %"class.gfx::RectF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fdiv float %15, %10
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fdiv float %18, %13
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %21 = load float, float* %20, align 4
  %22 = fdiv float %21, %10
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = fdiv float %24, %13
  %26 = insertelement <2 x float> undef, float %16, i32 0
  %27 = insertelement <2 x float> %26, float %19, i32 1
  %28 = fcmp ogt float %22, 0x3EB0000000000000
  %29 = select i1 %28, float %22, float 0.000000e+00
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = fcmp ogt float %25, 0x3EB0000000000000
  %32 = select i1 %31, float %25, float 0.000000e+00
  %33 = insertelement <2 x float> %30, float %32, i32 1
  %34 = bitcast %"class.gfx::RectF"* %7 to <2 x float>*
  store <2 x float> %27, <2 x float>* %34, align 4
  %35 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %0, i64 0, i32 1, i32 1
  %36 = bitcast %"class.gfx::SizeF"* %35 to <2 x float>*
  store <2 x float> %33, <2 x float>* %36, align 4
  %37 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %0, i64 0, i32 2
  %38 = bitcast %"class.gfx::RectF"* %37 to i8*
  %39 = bitcast %"class.gfx::RectF"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18NinePatchGeneratorC2Ev(%"class.cc::NinePatchGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6
  %3 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 16, i1 false) #8
  %4 = bitcast %"class.cc::NinePatchGenerator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 50, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc18NinePatchGenerator9SetLayoutERKN3gfx4SizeES4_RKNS1_4RectES7_S7_bb(%"class.cc::NinePatchGenerator"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = zext i1 %6 to i8
  %10 = zext i1 %7 to i8
  %11 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %119

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 2, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %119

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 3, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %119

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 3, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %119

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %119

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %119

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %53, label %119

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 0, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %59, label %119

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %65, label %119

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 1, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %119

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 1, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %119

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 1, i32 1, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %83, label %119

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 4
  %85 = load i8, i8* %84, align 4, !range !2
  %86 = zext i8 %85 to i32
  %87 = zext i1 %6 to i32
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %89, label %119

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %91, %93
  br i1 %94, label %95, label %119

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %101, label %119

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6, i32 1, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %103, %105
  br i1 %106, label %107, label %119

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6, i32 1, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %109, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 5
  %115 = load i8, i8* %114, align 1, !range !2
  %116 = zext i8 %115 to i32
  %117 = zext i1 %7 to i32
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %137, label %119

119:                                              ; preds = %89, %101, %95, %59, %71, %65, %35, %47, %41, %23, %8, %113, %107, %83, %77, %53, %29, %17
  %120 = bitcast %"class.gfx::Size"* %1 to i64*
  %121 = bitcast %"class.gfx::Size"* %11 to i64*
  %122 = load i64, i64* %120, align 4
  store i64 %122, i64* %121, align 4
  %123 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 3
  %124 = bitcast %"class.gfx::Size"* %2 to i64*
  %125 = bitcast %"class.gfx::Size"* %123 to i64*
  %126 = load i64, i64* %124, align 4
  store i64 %126, i64* %125, align 4
  %127 = bitcast %"class.cc::NinePatchGenerator"* %0 to i8*
  %128 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 16, i1 false)
  %129 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 1
  %130 = bitcast %"class.gfx::Rect"* %129 to i8*
  %131 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 16, i1 false)
  %132 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 4
  store i8 %9, i8* %132, align 4
  %133 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6
  %134 = bitcast %"class.gfx::Rect"* %133 to i8*
  %135 = bitcast %"class.gfx::Rect"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %135, i64 16, i1 false)
  %136 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 5
  store i8 %10, i8* %136, align 1
  br label %137

137:                                              ; preds = %113, %119
  %138 = phi i1 [ true, %119 ], [ false, %113 ]
  ret i1 %138
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden void @_ZN2cc18NinePatchGenerator24CheckGeometryLimitationsEv(%"class.cc::NinePatchGenerator"* nocapture) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc18NinePatchGenerator28ComputeQuadsWithoutOcclusionEv(%"class.std::__1::vector"* noalias sret, %"class.cc::NinePatchGenerator"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  %6 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 2, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to float
  %9 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  %24 = fsub float %11, %23
  %25 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sitofp i32 %26 to float
  %28 = fsub float %14, %27
  %29 = fcmp ogt float %24, 0x3EB0000000000000
  %30 = select i1 %29, float %24, float 0.000000e+00
  %31 = fcmp ogt float %28, 0x3EB0000000000000
  %32 = select i1 %31, float %28, float 0.000000e+00
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.cc::NinePatchGenerator::Patch"** %34 to i64*
  %36 = bitcast %"class.std::__1::vector"* %0 to i64*
  %37 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %38 = tail call i8* @_Znwm(i64 432) #9
  %39 = ptrtoint i8* %38 to i64
  %40 = getelementptr inbounds i8, i8* %38, i64 432
  %41 = ptrtoint i8* %40 to i64
  store i64 %39, i64* %36, align 8
  store i64 %39, i64* %37, align 8
  store i64 %41, i64* %35, align 8
  %42 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %43, 0
  %47 = select i1 %46, i32 %43, i32 0
  %48 = sitofp i32 %47 to float
  %49 = icmp sgt i32 %45, 0
  %50 = select i1 %49, i32 %45, i32 0
  %51 = sitofp i32 %50 to float
  %52 = fptosi float %17 to i32
  %53 = fptosi float %20 to i32
  %54 = icmp sgt i32 %52, 0
  %55 = select i1 %54, i32 %52, i32 0
  %56 = sitofp i32 %55 to float
  %57 = insertelement <2 x float> undef, float %56, i32 0
  %58 = icmp sgt i32 %53, 0
  %59 = select i1 %58, i32 %53, i32 0
  %60 = sitofp i32 %59 to float
  %61 = fdiv float %48, %5
  %62 = fdiv float %51, %8
  %63 = fcmp ogt float %61, 0x3EB0000000000000
  %64 = select i1 %63, float %61, float 0.000000e+00
  %65 = insertelement <2 x float> undef, float %64, i32 0
  %66 = fcmp ogt float %62, 0x3EB0000000000000
  %67 = select i1 %66, float %62, float 0.000000e+00
  %68 = insertelement <2 x float> %65, float %67, i32 1
  %69 = fdiv float 0.000000e+00, %5
  %70 = insertelement <2 x float> undef, float %69, i32 0
  %71 = fdiv float 0.000000e+00, %8
  %72 = insertelement <2 x float> %70, float %71, i32 1
  %73 = insertelement <2 x float> %57, float %60, i32 1
  %74 = insertelement <2 x float> undef, float %48, i32 0
  %75 = insertelement <2 x float> %74, float %51, i32 1
  %76 = bitcast i8* %38 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %76, align 4
  %77 = getelementptr inbounds i8, i8* %38, i64 8
  %78 = bitcast i8* %77 to <2 x float>*
  store <2 x float> %75, <2 x float>* %78, align 4
  %79 = getelementptr inbounds i8, i8* %38, i64 16
  %80 = bitcast i8* %79 to <2 x float>*
  store <2 x float> %72, <2 x float>* %80, align 4
  %81 = getelementptr inbounds i8, i8* %38, i64 24
  %82 = bitcast i8* %81 to <2 x float>*
  store <2 x float> %68, <2 x float>* %82, align 4
  %83 = getelementptr inbounds i8, i8* %38, i64 32
  %84 = bitcast i8* %83 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %84, align 4
  %85 = getelementptr inbounds i8, i8* %38, i64 40
  %86 = bitcast i8* %85 to <2 x float>*
  store <2 x float> %73, <2 x float>* %86, align 4
  %87 = getelementptr inbounds i8, i8* %38, i64 48
  %88 = ptrtoint i8* %87 to i64
  %89 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %88, i64* %89, align 8
  %90 = load i32, i32* %42, align 4
  %91 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, %90
  %94 = fptosi float %5 to i32
  %95 = load i32, i32* %44, align 4
  %96 = sitofp i32 %93 to float
  %97 = sub nsw i32 %94, %93
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  %100 = sitofp i32 %99 to float
  %101 = icmp sgt i32 %95, 0
  %102 = select i1 %101, i32 %95, i32 0
  %103 = sitofp i32 %102 to float
  %104 = fadd float %30, %17
  %105 = fptosi float %104 to i32
  %106 = fptosi float %11 to i32
  %107 = sitofp i32 %105 to float
  %108 = sub nsw i32 %106, %105
  %109 = insertelement <2 x float> undef, float %107, i32 0
  %110 = icmp sgt i32 %108, 0
  %111 = select i1 %110, i32 %108, i32 0
  %112 = sitofp i32 %111 to float
  %113 = insertelement <2 x float> undef, float %112, i32 0
  %114 = load i32, i32* %3, align 4
  %115 = sitofp i32 %114 to float
  %116 = load i32, i32* %6, align 4
  %117 = sitofp i32 %116 to float
  %118 = fdiv float %100, %115
  %119 = fdiv float %103, %117
  %120 = fcmp ogt float %118, 0x3EB0000000000000
  %121 = select i1 %120, float %118, float 0.000000e+00
  %122 = insertelement <2 x float> undef, float %121, i32 0
  %123 = fcmp ogt float %119, 0x3EB0000000000000
  %124 = select i1 %123, float %119, float 0.000000e+00
  %125 = insertelement <2 x float> %122, float %124, i32 1
  %126 = fdiv float %96, %115
  %127 = insertelement <2 x float> undef, float %126, i32 0
  %128 = fdiv float 0.000000e+00, %117
  %129 = insertelement <2 x float> %127, float %128, i32 1
  %130 = insertelement <2 x float> %113, float %60, i32 1
  %131 = insertelement <2 x float> %109, float 0.000000e+00, i32 1
  %132 = insertelement <2 x float> undef, float %100, i32 0
  %133 = insertelement <2 x float> %132, float %103, i32 1
  %134 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %96, i32 0
  %135 = bitcast i8* %87 to <2 x float>*
  store <2 x float> %134, <2 x float>* %135, align 4
  %136 = getelementptr inbounds i8, i8* %38, i64 56
  %137 = bitcast i8* %136 to <2 x float>*
  store <2 x float> %133, <2 x float>* %137, align 4
  %138 = getelementptr inbounds i8, i8* %38, i64 64
  %139 = bitcast i8* %138 to <2 x float>*
  store <2 x float> %129, <2 x float>* %139, align 4
  %140 = getelementptr inbounds i8, i8* %38, i64 72
  %141 = bitcast i8* %140 to <2 x float>*
  store <2 x float> %125, <2 x float>* %141, align 4
  %142 = getelementptr inbounds i8, i8* %38, i64 80
  %143 = bitcast i8* %142 to <2 x float>*
  store <2 x float> %131, <2 x float>* %143, align 4
  %144 = getelementptr inbounds i8, i8* %38, i64 88
  %145 = bitcast i8* %144 to <2 x float>*
  store <2 x float> %130, <2 x float>* %145, align 4
  %146 = getelementptr inbounds i8, i8* %38, i64 96
  %147 = bitcast i8* %146 to %"class.cc::NinePatchGenerator::Patch"*
  %148 = ptrtoint i8* %146 to i64
  %149 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %148, i64* %149, align 8
  %150 = load i32, i32* %44, align 4
  %151 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 1, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = add nsw i32 %152, %150
  %154 = load i32, i32* %42, align 4
  %155 = fptosi float %8 to i32
  %156 = sitofp i32 %153 to float
  %157 = sub nsw i32 %155, %153
  %158 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %156, i32 1
  %159 = icmp sgt i32 %154, 0
  %160 = select i1 %159, i32 %154, i32 0
  %161 = sitofp i32 %160 to float
  %162 = insertelement <2 x float> undef, float %161, i32 0
  %163 = icmp sgt i32 %157, 0
  %164 = select i1 %163, i32 %157, i32 0
  %165 = sitofp i32 %164 to float
  %166 = insertelement <2 x float> %162, float %165, i32 1
  %167 = fadd float %32, %20
  %168 = fptosi float %167 to i32
  %169 = fptosi float %14 to i32
  %170 = sitofp i32 %168 to float
  %171 = sub nsw i32 %169, %168
  %172 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %170, i32 1
  %173 = icmp sgt i32 %171, 0
  %174 = select i1 %173, i32 %171, i32 0
  %175 = sitofp i32 %174 to float
  %176 = insertelement <2 x float> %57, float %175, i32 1
  %177 = load i32, i32* %3, align 4
  %178 = sitofp i32 %177 to float
  %179 = load i32, i32* %6, align 4
  %180 = sitofp i32 %179 to float
  %181 = fdiv float 0.000000e+00, %178
  %182 = fdiv float %156, %180
  %183 = fdiv float %161, %178
  %184 = fdiv float %165, %180
  %185 = insertelement <2 x float> undef, float %181, i32 0
  %186 = insertelement <2 x float> %185, float %182, i32 1
  %187 = fcmp ogt float %183, 0x3EB0000000000000
  %188 = select i1 %187, float %183, float 0.000000e+00
  %189 = insertelement <2 x float> undef, float %188, i32 0
  %190 = fcmp ogt float %184, 0x3EB0000000000000
  %191 = select i1 %190, float %184, float 0.000000e+00
  %192 = insertelement <2 x float> %189, float %191, i32 1
  %193 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %194 = icmp ugt %"class.cc::NinePatchGenerator::Patch"* %193, %147
  %195 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %193 to i64
  br i1 %194, label %196, label %212

196:                                              ; preds = %2
  %197 = bitcast i8* %146 to <2 x float>*
  store <2 x float> %158, <2 x float>* %197, align 4
  %198 = getelementptr inbounds i8, i8* %38, i64 104
  %199 = bitcast i8* %198 to <2 x float>*
  store <2 x float> %166, <2 x float>* %199, align 4
  %200 = getelementptr inbounds i8, i8* %38, i64 112
  %201 = bitcast i8* %200 to <2 x float>*
  store <2 x float> %186, <2 x float>* %201, align 4
  %202 = getelementptr inbounds i8, i8* %38, i64 120
  %203 = bitcast i8* %202 to <2 x float>*
  store <2 x float> %192, <2 x float>* %203, align 4
  %204 = getelementptr inbounds i8, i8* %38, i64 128
  %205 = bitcast i8* %204 to <2 x float>*
  store <2 x float> %172, <2 x float>* %205, align 4
  %206 = getelementptr inbounds i8, i8* %38, i64 136
  %207 = bitcast i8* %206 to <2 x float>*
  store <2 x float> %176, <2 x float>* %207, align 4
  %208 = getelementptr inbounds i8, i8* %38, i64 144
  %209 = bitcast i8* %208 to %"class.cc::NinePatchGenerator::Patch"*
  %210 = ptrtoint i8* %208 to i64
  %211 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %210, i64* %211, align 8
  br label %269

212:                                              ; preds = %2
  %213 = ptrtoint i8* %146 to i64
  %214 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %215 = load i64, i64* %36, align 8
  %216 = sub i64 %213, %215
  %217 = sdiv exact i64 %216, 48
  %218 = add nsw i64 %217, 1
  %219 = icmp ugt i64 %218, 384307168202282325
  br i1 %219, label %220, label %222

220:                                              ; preds = %212
  %221 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %221) #10
  unreachable

222:                                              ; preds = %212
  %223 = sub i64 %195, %215
  %224 = sdiv exact i64 %223, 48
  %225 = icmp ult i64 %224, 192153584101141162
  br i1 %225, label %226, label %231

226:                                              ; preds = %222
  %227 = shl nsw i64 %224, 1
  %228 = icmp ult i64 %227, %218
  %229 = select i1 %228, i64 %218, i64 %227
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %226, %222
  %232 = phi i64 [ %229, %226 ], [ 384307168202282325, %222 ]
  %233 = mul i64 %232, 48
  %234 = tail call i8* @_Znwm(i64 %233) #9
  %235 = bitcast i8* %234 to %"class.cc::NinePatchGenerator::Patch"*
  br label %236

236:                                              ; preds = %231, %226
  %237 = phi i64 [ %232, %231 ], [ 0, %226 ]
  %238 = phi %"class.cc::NinePatchGenerator::Patch"* [ %235, %231 ], [ null, %226 ]
  %239 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %217
  %240 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %237
  %241 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %240 to i64
  %242 = bitcast %"class.cc::NinePatchGenerator::Patch"* %239 to <2 x float>*
  store <2 x float> %158, <2 x float>* %242, align 4
  %243 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %217, i32 0, i32 1
  %244 = bitcast %"class.gfx::SizeF"* %243 to <2 x float>*
  store <2 x float> %166, <2 x float>* %244, align 4
  %245 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %217, i32 1
  %246 = bitcast %"class.gfx::RectF"* %245 to <2 x float>*
  store <2 x float> %186, <2 x float>* %246, align 4
  %247 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %217, i32 1, i32 1
  %248 = bitcast %"class.gfx::SizeF"* %247 to <2 x float>*
  store <2 x float> %192, <2 x float>* %248, align 4
  %249 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %217, i32 2
  %250 = bitcast %"class.gfx::RectF"* %249 to <2 x float>*
  store <2 x float> %172, <2 x float>* %250, align 4
  %251 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %238, i64 %217, i32 2, i32 1
  %252 = bitcast %"class.gfx::SizeF"* %251 to <2 x float>*
  store <2 x float> %176, <2 x float>* %252, align 4
  %253 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %239, i64 1
  %254 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %253 to i64
  %255 = sub i64 %148, %215
  %256 = sdiv exact i64 %255, -48
  %257 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %239, i64 %256
  %258 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %257 to i64
  %259 = icmp sgt i64 %255, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %236
  %261 = bitcast %"class.cc::NinePatchGenerator::Patch"* %257 to i8*
  %262 = inttoptr i64 %215 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %261, i8* align 4 %262, i64 %255, i1 false) #8
  br label %263

263:                                              ; preds = %260, %236
  store i64 %258, i64* %36, align 8
  store i64 %254, i64* %214, align 8
  store i64 %241, i64* %35, align 8
  %264 = icmp eq i64 %215, 0
  br i1 %264, label %269, label %265

265:                                              ; preds = %263
  %266 = inttoptr i64 %215 to i8*
  tail call void @_ZdlPv(i8* %266) #9
  %267 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %33, align 8
  %268 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %267 to i64
  br label %269

269:                                              ; preds = %196, %263, %265
  %270 = phi i64 [ %210, %196 ], [ %254, %263 ], [ %268, %265 ]
  %271 = phi %"class.cc::NinePatchGenerator::Patch"* [ %209, %196 ], [ %253, %263 ], [ %267, %265 ]
  %272 = load i32, i32* %42, align 4
  %273 = load i32, i32* %91, align 4
  %274 = add nsw i32 %273, %272
  %275 = load i32, i32* %44, align 4
  %276 = load i32, i32* %151, align 4
  %277 = add nsw i32 %276, %275
  %278 = sitofp i32 %274 to float
  %279 = sitofp i32 %277 to float
  %280 = sub nsw i32 %94, %274
  %281 = sub nsw i32 %155, %277
  %282 = insertelement <2 x float> undef, float %278, i32 0
  %283 = insertelement <2 x float> %282, float %279, i32 1
  %284 = icmp sgt i32 %280, 0
  %285 = select i1 %284, i32 %280, i32 0
  %286 = sitofp i32 %285 to float
  %287 = insertelement <2 x float> undef, float %286, i32 0
  %288 = icmp sgt i32 %281, 0
  %289 = select i1 %288, i32 %281, i32 0
  %290 = sitofp i32 %289 to float
  %291 = insertelement <2 x float> %287, float %290, i32 1
  %292 = insertelement <2 x float> %109, float %170, i32 1
  %293 = insertelement <2 x float> %113, float %175, i32 1
  %294 = load i32, i32* %3, align 4
  %295 = sitofp i32 %294 to float
  %296 = load i32, i32* %6, align 4
  %297 = sitofp i32 %296 to float
  %298 = fdiv float %278, %295
  %299 = fdiv float %279, %297
  %300 = fdiv float %286, %295
  %301 = fdiv float %290, %297
  %302 = insertelement <2 x float> undef, float %298, i32 0
  %303 = insertelement <2 x float> %302, float %299, i32 1
  %304 = fcmp ogt float %300, 0x3EB0000000000000
  %305 = select i1 %304, float %300, float 0.000000e+00
  %306 = insertelement <2 x float> undef, float %305, i32 0
  %307 = fcmp ogt float %301, 0x3EB0000000000000
  %308 = select i1 %307, float %301, float 0.000000e+00
  %309 = insertelement <2 x float> %306, float %308, i32 1
  %310 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %311 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %271, %310
  %312 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %310 to i64
  br i1 %311, label %313, label %328

313:                                              ; preds = %269
  %314 = bitcast %"class.cc::NinePatchGenerator::Patch"* %271 to <2 x float>*
  store <2 x float> %283, <2 x float>* %314, align 4
  %315 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %271, i64 0, i32 0, i32 1
  %316 = bitcast %"class.gfx::SizeF"* %315 to <2 x float>*
  store <2 x float> %291, <2 x float>* %316, align 4
  %317 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %271, i64 0, i32 1
  %318 = bitcast %"class.gfx::RectF"* %317 to <2 x float>*
  store <2 x float> %303, <2 x float>* %318, align 4
  %319 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %271, i64 0, i32 1, i32 1
  %320 = bitcast %"class.gfx::SizeF"* %319 to <2 x float>*
  store <2 x float> %309, <2 x float>* %320, align 4
  %321 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %271, i64 0, i32 2
  %322 = bitcast %"class.gfx::RectF"* %321 to <2 x float>*
  store <2 x float> %292, <2 x float>* %322, align 4
  %323 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %271, i64 0, i32 2, i32 1
  %324 = bitcast %"class.gfx::SizeF"* %323 to <2 x float>*
  store <2 x float> %293, <2 x float>* %324, align 4
  %325 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %271, i64 1
  %326 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %325 to i64
  %327 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %326, i64* %327, align 8
  br label %385

328:                                              ; preds = %269
  %329 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %271 to i64
  %330 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %331 = load i64, i64* %36, align 8
  %332 = sub i64 %329, %331
  %333 = sdiv exact i64 %332, 48
  %334 = add nsw i64 %333, 1
  %335 = icmp ugt i64 %334, 384307168202282325
  br i1 %335, label %336, label %338

336:                                              ; preds = %328
  %337 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %337) #10
  unreachable

338:                                              ; preds = %328
  %339 = sub i64 %312, %331
  %340 = sdiv exact i64 %339, 48
  %341 = icmp ult i64 %340, 192153584101141162
  br i1 %341, label %342, label %347

342:                                              ; preds = %338
  %343 = shl nsw i64 %340, 1
  %344 = icmp ult i64 %343, %334
  %345 = select i1 %344, i64 %334, i64 %343
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %352, label %347

347:                                              ; preds = %342, %338
  %348 = phi i64 [ %345, %342 ], [ 384307168202282325, %338 ]
  %349 = mul i64 %348, 48
  %350 = tail call i8* @_Znwm(i64 %349) #9
  %351 = bitcast i8* %350 to %"class.cc::NinePatchGenerator::Patch"*
  br label %352

352:                                              ; preds = %347, %342
  %353 = phi i64 [ %348, %347 ], [ 0, %342 ]
  %354 = phi %"class.cc::NinePatchGenerator::Patch"* [ %351, %347 ], [ null, %342 ]
  %355 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %333
  %356 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %353
  %357 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %356 to i64
  %358 = bitcast %"class.cc::NinePatchGenerator::Patch"* %355 to <2 x float>*
  store <2 x float> %283, <2 x float>* %358, align 4
  %359 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %333, i32 0, i32 1
  %360 = bitcast %"class.gfx::SizeF"* %359 to <2 x float>*
  store <2 x float> %291, <2 x float>* %360, align 4
  %361 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %333, i32 1
  %362 = bitcast %"class.gfx::RectF"* %361 to <2 x float>*
  store <2 x float> %303, <2 x float>* %362, align 4
  %363 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %333, i32 1, i32 1
  %364 = bitcast %"class.gfx::SizeF"* %363 to <2 x float>*
  store <2 x float> %309, <2 x float>* %364, align 4
  %365 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %333, i32 2
  %366 = bitcast %"class.gfx::RectF"* %365 to <2 x float>*
  store <2 x float> %292, <2 x float>* %366, align 4
  %367 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %354, i64 %333, i32 2, i32 1
  %368 = bitcast %"class.gfx::SizeF"* %367 to <2 x float>*
  store <2 x float> %293, <2 x float>* %368, align 4
  %369 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %355, i64 1
  %370 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %369 to i64
  %371 = sub i64 %270, %331
  %372 = sdiv exact i64 %371, -48
  %373 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %355, i64 %372
  %374 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %373 to i64
  %375 = icmp sgt i64 %371, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %352
  %377 = bitcast %"class.cc::NinePatchGenerator::Patch"* %373 to i8*
  %378 = inttoptr i64 %331 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %378, i64 %371, i1 false) #8
  br label %379

379:                                              ; preds = %376, %352
  store i64 %374, i64* %36, align 8
  store i64 %370, i64* %330, align 8
  store i64 %357, i64* %35, align 8
  %380 = icmp eq i64 %331, 0
  br i1 %380, label %385, label %381

381:                                              ; preds = %379
  %382 = inttoptr i64 %331 to i8*
  tail call void @_ZdlPv(i8* %382) #9
  %383 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %33, align 8
  %384 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %383 to i64
  br label %385

385:                                              ; preds = %313, %379, %381
  %386 = phi i64 [ %326, %313 ], [ %370, %379 ], [ %384, %381 ]
  %387 = phi %"class.cc::NinePatchGenerator::Patch"* [ %325, %313 ], [ %369, %379 ], [ %383, %381 ]
  %388 = load i32, i32* %42, align 4
  %389 = load i32, i32* %91, align 4
  %390 = load i32, i32* %44, align 4
  %391 = sitofp i32 %388 to float
  %392 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %391, i32 0
  %393 = icmp sgt i32 %389, 0
  %394 = select i1 %393, i32 %389, i32 0
  %395 = sitofp i32 %394 to float
  %396 = insertelement <2 x float> undef, float %395, i32 0
  %397 = icmp sgt i32 %390, 0
  %398 = select i1 %397, i32 %390, i32 0
  %399 = sitofp i32 %398 to float
  %400 = insertelement <2 x float> %396, float %399, i32 1
  %401 = sitofp i32 %52 to float
  %402 = sub nsw i32 %105, %52
  %403 = insertelement <2 x float> undef, float %401, i32 0
  %404 = insertelement <2 x float> %403, float 0.000000e+00, i32 1
  %405 = icmp sgt i32 %402, 0
  %406 = select i1 %405, i32 %402, i32 0
  %407 = sitofp i32 %406 to float
  %408 = insertelement <2 x float> undef, float %407, i32 0
  %409 = insertelement <2 x float> %408, float %60, i32 1
  %410 = load i32, i32* %3, align 4
  %411 = sitofp i32 %410 to float
  %412 = load i32, i32* %6, align 4
  %413 = sitofp i32 %412 to float
  %414 = fdiv float %391, %411
  %415 = fdiv float 0.000000e+00, %413
  %416 = fdiv float %395, %411
  %417 = fdiv float %399, %413
  %418 = insertelement <2 x float> undef, float %414, i32 0
  %419 = insertelement <2 x float> %418, float %415, i32 1
  %420 = fcmp ogt float %416, 0x3EB0000000000000
  %421 = select i1 %420, float %416, float 0.000000e+00
  %422 = insertelement <2 x float> undef, float %421, i32 0
  %423 = fcmp ogt float %417, 0x3EB0000000000000
  %424 = select i1 %423, float %417, float 0.000000e+00
  %425 = insertelement <2 x float> %422, float %424, i32 1
  %426 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %427 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %387, %426
  %428 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %426 to i64
  br i1 %427, label %429, label %444

429:                                              ; preds = %385
  %430 = bitcast %"class.cc::NinePatchGenerator::Patch"* %387 to <2 x float>*
  store <2 x float> %392, <2 x float>* %430, align 4
  %431 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %387, i64 0, i32 0, i32 1
  %432 = bitcast %"class.gfx::SizeF"* %431 to <2 x float>*
  store <2 x float> %400, <2 x float>* %432, align 4
  %433 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %387, i64 0, i32 1
  %434 = bitcast %"class.gfx::RectF"* %433 to <2 x float>*
  store <2 x float> %419, <2 x float>* %434, align 4
  %435 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %387, i64 0, i32 1, i32 1
  %436 = bitcast %"class.gfx::SizeF"* %435 to <2 x float>*
  store <2 x float> %425, <2 x float>* %436, align 4
  %437 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %387, i64 0, i32 2
  %438 = bitcast %"class.gfx::RectF"* %437 to <2 x float>*
  store <2 x float> %404, <2 x float>* %438, align 4
  %439 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %387, i64 0, i32 2, i32 1
  %440 = bitcast %"class.gfx::SizeF"* %439 to <2 x float>*
  store <2 x float> %409, <2 x float>* %440, align 4
  %441 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %387, i64 1
  %442 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %441 to i64
  %443 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %442, i64* %443, align 8
  br label %501

444:                                              ; preds = %385
  %445 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %387 to i64
  %446 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %447 = load i64, i64* %36, align 8
  %448 = sub i64 %445, %447
  %449 = sdiv exact i64 %448, 48
  %450 = add nsw i64 %449, 1
  %451 = icmp ugt i64 %450, 384307168202282325
  br i1 %451, label %452, label %454

452:                                              ; preds = %444
  %453 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %453) #10
  unreachable

454:                                              ; preds = %444
  %455 = sub i64 %428, %447
  %456 = sdiv exact i64 %455, 48
  %457 = icmp ult i64 %456, 192153584101141162
  br i1 %457, label %458, label %463

458:                                              ; preds = %454
  %459 = shl nsw i64 %456, 1
  %460 = icmp ult i64 %459, %450
  %461 = select i1 %460, i64 %450, i64 %459
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %468, label %463

463:                                              ; preds = %458, %454
  %464 = phi i64 [ %461, %458 ], [ 384307168202282325, %454 ]
  %465 = mul i64 %464, 48
  %466 = tail call i8* @_Znwm(i64 %465) #9
  %467 = bitcast i8* %466 to %"class.cc::NinePatchGenerator::Patch"*
  br label %468

468:                                              ; preds = %463, %458
  %469 = phi i64 [ %464, %463 ], [ 0, %458 ]
  %470 = phi %"class.cc::NinePatchGenerator::Patch"* [ %467, %463 ], [ null, %458 ]
  %471 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %449
  %472 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %469
  %473 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %472 to i64
  %474 = bitcast %"class.cc::NinePatchGenerator::Patch"* %471 to <2 x float>*
  store <2 x float> %392, <2 x float>* %474, align 4
  %475 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %449, i32 0, i32 1
  %476 = bitcast %"class.gfx::SizeF"* %475 to <2 x float>*
  store <2 x float> %400, <2 x float>* %476, align 4
  %477 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %449, i32 1
  %478 = bitcast %"class.gfx::RectF"* %477 to <2 x float>*
  store <2 x float> %419, <2 x float>* %478, align 4
  %479 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %449, i32 1, i32 1
  %480 = bitcast %"class.gfx::SizeF"* %479 to <2 x float>*
  store <2 x float> %425, <2 x float>* %480, align 4
  %481 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %449, i32 2
  %482 = bitcast %"class.gfx::RectF"* %481 to <2 x float>*
  store <2 x float> %404, <2 x float>* %482, align 4
  %483 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %470, i64 %449, i32 2, i32 1
  %484 = bitcast %"class.gfx::SizeF"* %483 to <2 x float>*
  store <2 x float> %409, <2 x float>* %484, align 4
  %485 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %471, i64 1
  %486 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %485 to i64
  %487 = sub i64 %386, %447
  %488 = sdiv exact i64 %487, -48
  %489 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %471, i64 %488
  %490 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %489 to i64
  %491 = icmp sgt i64 %487, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %468
  %493 = bitcast %"class.cc::NinePatchGenerator::Patch"* %489 to i8*
  %494 = inttoptr i64 %447 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %493, i8* align 4 %494, i64 %487, i1 false) #8
  br label %495

495:                                              ; preds = %492, %468
  store i64 %490, i64* %36, align 8
  store i64 %486, i64* %446, align 8
  store i64 %473, i64* %35, align 8
  %496 = icmp eq i64 %447, 0
  br i1 %496, label %501, label %497

497:                                              ; preds = %495
  %498 = inttoptr i64 %447 to i8*
  tail call void @_ZdlPv(i8* %498) #9
  %499 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %33, align 8
  %500 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %499 to i64
  br label %501

501:                                              ; preds = %429, %495, %497
  %502 = phi i64 [ %442, %429 ], [ %486, %495 ], [ %500, %497 ]
  %503 = phi %"class.cc::NinePatchGenerator::Patch"* [ %441, %429 ], [ %485, %495 ], [ %499, %497 ]
  %504 = load i32, i32* %44, align 4
  %505 = load i32, i32* %42, align 4
  %506 = load i32, i32* %151, align 4
  %507 = sitofp i32 %504 to float
  %508 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %507, i32 1
  %509 = icmp sgt i32 %505, 0
  %510 = select i1 %509, i32 %505, i32 0
  %511 = sitofp i32 %510 to float
  %512 = insertelement <2 x float> undef, float %511, i32 0
  %513 = icmp sgt i32 %506, 0
  %514 = select i1 %513, i32 %506, i32 0
  %515 = sitofp i32 %514 to float
  %516 = insertelement <2 x float> %512, float %515, i32 1
  %517 = sitofp i32 %53 to float
  %518 = sub nsw i32 %168, %53
  %519 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %517, i32 1
  %520 = icmp sgt i32 %518, 0
  %521 = select i1 %520, i32 %518, i32 0
  %522 = sitofp i32 %521 to float
  %523 = insertelement <2 x float> %57, float %522, i32 1
  %524 = load i32, i32* %3, align 4
  %525 = sitofp i32 %524 to float
  %526 = load i32, i32* %6, align 4
  %527 = sitofp i32 %526 to float
  %528 = fdiv float 0.000000e+00, %525
  %529 = fdiv float %507, %527
  %530 = fdiv float %511, %525
  %531 = fdiv float %515, %527
  %532 = insertelement <2 x float> undef, float %528, i32 0
  %533 = insertelement <2 x float> %532, float %529, i32 1
  %534 = fcmp ogt float %530, 0x3EB0000000000000
  %535 = select i1 %534, float %530, float 0.000000e+00
  %536 = insertelement <2 x float> undef, float %535, i32 0
  %537 = fcmp ogt float %531, 0x3EB0000000000000
  %538 = select i1 %537, float %531, float 0.000000e+00
  %539 = insertelement <2 x float> %536, float %538, i32 1
  %540 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %541 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %503, %540
  %542 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %540 to i64
  br i1 %541, label %543, label %558

543:                                              ; preds = %501
  %544 = bitcast %"class.cc::NinePatchGenerator::Patch"* %503 to <2 x float>*
  store <2 x float> %508, <2 x float>* %544, align 4
  %545 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %503, i64 0, i32 0, i32 1
  %546 = bitcast %"class.gfx::SizeF"* %545 to <2 x float>*
  store <2 x float> %516, <2 x float>* %546, align 4
  %547 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %503, i64 0, i32 1
  %548 = bitcast %"class.gfx::RectF"* %547 to <2 x float>*
  store <2 x float> %533, <2 x float>* %548, align 4
  %549 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %503, i64 0, i32 1, i32 1
  %550 = bitcast %"class.gfx::SizeF"* %549 to <2 x float>*
  store <2 x float> %539, <2 x float>* %550, align 4
  %551 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %503, i64 0, i32 2
  %552 = bitcast %"class.gfx::RectF"* %551 to <2 x float>*
  store <2 x float> %519, <2 x float>* %552, align 4
  %553 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %503, i64 0, i32 2, i32 1
  %554 = bitcast %"class.gfx::SizeF"* %553 to <2 x float>*
  store <2 x float> %523, <2 x float>* %554, align 4
  %555 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %503, i64 1
  %556 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %555 to i64
  %557 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %556, i64* %557, align 8
  br label %615

558:                                              ; preds = %501
  %559 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %503 to i64
  %560 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %561 = load i64, i64* %36, align 8
  %562 = sub i64 %559, %561
  %563 = sdiv exact i64 %562, 48
  %564 = add nsw i64 %563, 1
  %565 = icmp ugt i64 %564, 384307168202282325
  br i1 %565, label %566, label %568

566:                                              ; preds = %558
  %567 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %567) #10
  unreachable

568:                                              ; preds = %558
  %569 = sub i64 %542, %561
  %570 = sdiv exact i64 %569, 48
  %571 = icmp ult i64 %570, 192153584101141162
  br i1 %571, label %572, label %577

572:                                              ; preds = %568
  %573 = shl nsw i64 %570, 1
  %574 = icmp ult i64 %573, %564
  %575 = select i1 %574, i64 %564, i64 %573
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %582, label %577

577:                                              ; preds = %572, %568
  %578 = phi i64 [ %575, %572 ], [ 384307168202282325, %568 ]
  %579 = mul i64 %578, 48
  %580 = tail call i8* @_Znwm(i64 %579) #9
  %581 = bitcast i8* %580 to %"class.cc::NinePatchGenerator::Patch"*
  br label %582

582:                                              ; preds = %577, %572
  %583 = phi i64 [ %578, %577 ], [ 0, %572 ]
  %584 = phi %"class.cc::NinePatchGenerator::Patch"* [ %581, %577 ], [ null, %572 ]
  %585 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %563
  %586 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %583
  %587 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %586 to i64
  %588 = bitcast %"class.cc::NinePatchGenerator::Patch"* %585 to <2 x float>*
  store <2 x float> %508, <2 x float>* %588, align 4
  %589 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %563, i32 0, i32 1
  %590 = bitcast %"class.gfx::SizeF"* %589 to <2 x float>*
  store <2 x float> %516, <2 x float>* %590, align 4
  %591 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %563, i32 1
  %592 = bitcast %"class.gfx::RectF"* %591 to <2 x float>*
  store <2 x float> %533, <2 x float>* %592, align 4
  %593 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %563, i32 1, i32 1
  %594 = bitcast %"class.gfx::SizeF"* %593 to <2 x float>*
  store <2 x float> %539, <2 x float>* %594, align 4
  %595 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %563, i32 2
  %596 = bitcast %"class.gfx::RectF"* %595 to <2 x float>*
  store <2 x float> %519, <2 x float>* %596, align 4
  %597 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %584, i64 %563, i32 2, i32 1
  %598 = bitcast %"class.gfx::SizeF"* %597 to <2 x float>*
  store <2 x float> %523, <2 x float>* %598, align 4
  %599 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %585, i64 1
  %600 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %599 to i64
  %601 = sub i64 %502, %561
  %602 = sdiv exact i64 %601, -48
  %603 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %585, i64 %602
  %604 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %603 to i64
  %605 = icmp sgt i64 %601, 0
  br i1 %605, label %606, label %609

606:                                              ; preds = %582
  %607 = bitcast %"class.cc::NinePatchGenerator::Patch"* %603 to i8*
  %608 = inttoptr i64 %561 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %607, i8* align 4 %608, i64 %601, i1 false) #8
  br label %609

609:                                              ; preds = %606, %582
  store i64 %604, i64* %36, align 8
  store i64 %600, i64* %560, align 8
  store i64 %587, i64* %35, align 8
  %610 = icmp eq i64 %561, 0
  br i1 %610, label %615, label %611

611:                                              ; preds = %609
  %612 = inttoptr i64 %561 to i8*
  tail call void @_ZdlPv(i8* %612) #9
  %613 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %33, align 8
  %614 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %613 to i64
  br label %615

615:                                              ; preds = %543, %609, %611
  %616 = phi i64 [ %556, %543 ], [ %600, %609 ], [ %614, %611 ]
  %617 = phi %"class.cc::NinePatchGenerator::Patch"* [ %555, %543 ], [ %599, %609 ], [ %613, %611 ]
  %618 = load i32, i32* %42, align 4
  %619 = load i32, i32* %91, align 4
  %620 = add nsw i32 %619, %618
  %621 = load i32, i32* %44, align 4
  %622 = load i32, i32* %151, align 4
  %623 = sitofp i32 %620 to float
  %624 = sitofp i32 %621 to float
  %625 = sub nsw i32 %94, %620
  %626 = insertelement <2 x float> undef, float %623, i32 0
  %627 = insertelement <2 x float> %626, float %624, i32 1
  %628 = icmp sgt i32 %625, 0
  %629 = select i1 %628, i32 %625, i32 0
  %630 = sitofp i32 %629 to float
  %631 = insertelement <2 x float> undef, float %630, i32 0
  %632 = icmp sgt i32 %622, 0
  %633 = select i1 %632, i32 %622, i32 0
  %634 = sitofp i32 %633 to float
  %635 = insertelement <2 x float> %631, float %634, i32 1
  %636 = insertelement <2 x float> %109, float %517, i32 1
  %637 = insertelement <2 x float> %113, float %522, i32 1
  %638 = load i32, i32* %3, align 4
  %639 = sitofp i32 %638 to float
  %640 = load i32, i32* %6, align 4
  %641 = sitofp i32 %640 to float
  %642 = fdiv float %623, %639
  %643 = fdiv float %624, %641
  %644 = fdiv float %630, %639
  %645 = fdiv float %634, %641
  %646 = insertelement <2 x float> undef, float %642, i32 0
  %647 = insertelement <2 x float> %646, float %643, i32 1
  %648 = fcmp ogt float %644, 0x3EB0000000000000
  %649 = select i1 %648, float %644, float 0.000000e+00
  %650 = insertelement <2 x float> undef, float %649, i32 0
  %651 = fcmp ogt float %645, 0x3EB0000000000000
  %652 = select i1 %651, float %645, float 0.000000e+00
  %653 = insertelement <2 x float> %650, float %652, i32 1
  %654 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %655 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %617, %654
  %656 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %654 to i64
  br i1 %655, label %657, label %672

657:                                              ; preds = %615
  %658 = bitcast %"class.cc::NinePatchGenerator::Patch"* %617 to <2 x float>*
  store <2 x float> %627, <2 x float>* %658, align 4
  %659 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %617, i64 0, i32 0, i32 1
  %660 = bitcast %"class.gfx::SizeF"* %659 to <2 x float>*
  store <2 x float> %635, <2 x float>* %660, align 4
  %661 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %617, i64 0, i32 1
  %662 = bitcast %"class.gfx::RectF"* %661 to <2 x float>*
  store <2 x float> %647, <2 x float>* %662, align 4
  %663 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %617, i64 0, i32 1, i32 1
  %664 = bitcast %"class.gfx::SizeF"* %663 to <2 x float>*
  store <2 x float> %653, <2 x float>* %664, align 4
  %665 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %617, i64 0, i32 2
  %666 = bitcast %"class.gfx::RectF"* %665 to <2 x float>*
  store <2 x float> %636, <2 x float>* %666, align 4
  %667 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %617, i64 0, i32 2, i32 1
  %668 = bitcast %"class.gfx::SizeF"* %667 to <2 x float>*
  store <2 x float> %637, <2 x float>* %668, align 4
  %669 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %617, i64 1
  %670 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %669 to i64
  %671 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %670, i64* %671, align 8
  br label %729

672:                                              ; preds = %615
  %673 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %617 to i64
  %674 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %675 = load i64, i64* %36, align 8
  %676 = sub i64 %673, %675
  %677 = sdiv exact i64 %676, 48
  %678 = add nsw i64 %677, 1
  %679 = icmp ugt i64 %678, 384307168202282325
  br i1 %679, label %680, label %682

680:                                              ; preds = %672
  %681 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %681) #10
  unreachable

682:                                              ; preds = %672
  %683 = sub i64 %656, %675
  %684 = sdiv exact i64 %683, 48
  %685 = icmp ult i64 %684, 192153584101141162
  br i1 %685, label %686, label %691

686:                                              ; preds = %682
  %687 = shl nsw i64 %684, 1
  %688 = icmp ult i64 %687, %678
  %689 = select i1 %688, i64 %678, i64 %687
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %696, label %691

691:                                              ; preds = %686, %682
  %692 = phi i64 [ %689, %686 ], [ 384307168202282325, %682 ]
  %693 = mul i64 %692, 48
  %694 = tail call i8* @_Znwm(i64 %693) #9
  %695 = bitcast i8* %694 to %"class.cc::NinePatchGenerator::Patch"*
  br label %696

696:                                              ; preds = %691, %686
  %697 = phi i64 [ %692, %691 ], [ 0, %686 ]
  %698 = phi %"class.cc::NinePatchGenerator::Patch"* [ %695, %691 ], [ null, %686 ]
  %699 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %677
  %700 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %697
  %701 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %700 to i64
  %702 = bitcast %"class.cc::NinePatchGenerator::Patch"* %699 to <2 x float>*
  store <2 x float> %627, <2 x float>* %702, align 4
  %703 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %677, i32 0, i32 1
  %704 = bitcast %"class.gfx::SizeF"* %703 to <2 x float>*
  store <2 x float> %635, <2 x float>* %704, align 4
  %705 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %677, i32 1
  %706 = bitcast %"class.gfx::RectF"* %705 to <2 x float>*
  store <2 x float> %647, <2 x float>* %706, align 4
  %707 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %677, i32 1, i32 1
  %708 = bitcast %"class.gfx::SizeF"* %707 to <2 x float>*
  store <2 x float> %653, <2 x float>* %708, align 4
  %709 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %677, i32 2
  %710 = bitcast %"class.gfx::RectF"* %709 to <2 x float>*
  store <2 x float> %636, <2 x float>* %710, align 4
  %711 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %698, i64 %677, i32 2, i32 1
  %712 = bitcast %"class.gfx::SizeF"* %711 to <2 x float>*
  store <2 x float> %637, <2 x float>* %712, align 4
  %713 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %699, i64 1
  %714 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %713 to i64
  %715 = sub i64 %616, %675
  %716 = sdiv exact i64 %715, -48
  %717 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %699, i64 %716
  %718 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %717 to i64
  %719 = icmp sgt i64 %715, 0
  br i1 %719, label %720, label %723

720:                                              ; preds = %696
  %721 = bitcast %"class.cc::NinePatchGenerator::Patch"* %717 to i8*
  %722 = inttoptr i64 %675 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %721, i8* align 4 %722, i64 %715, i1 false) #8
  br label %723

723:                                              ; preds = %720, %696
  store i64 %718, i64* %36, align 8
  store i64 %714, i64* %674, align 8
  store i64 %701, i64* %35, align 8
  %724 = icmp eq i64 %675, 0
  br i1 %724, label %729, label %725

725:                                              ; preds = %723
  %726 = inttoptr i64 %675 to i8*
  tail call void @_ZdlPv(i8* %726) #9
  %727 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %33, align 8
  %728 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %727 to i64
  br label %729

729:                                              ; preds = %657, %723, %725
  %730 = phi i64 [ %670, %657 ], [ %714, %723 ], [ %728, %725 ]
  %731 = phi %"class.cc::NinePatchGenerator::Patch"* [ %669, %657 ], [ %713, %723 ], [ %727, %725 ]
  %732 = load i32, i32* %42, align 4
  %733 = load i32, i32* %44, align 4
  %734 = load i32, i32* %151, align 4
  %735 = add nsw i32 %734, %733
  %736 = load i32, i32* %91, align 4
  %737 = sitofp i32 %732 to float
  %738 = sitofp i32 %735 to float
  %739 = sub nsw i32 %155, %735
  %740 = insertelement <2 x float> undef, float %737, i32 0
  %741 = insertelement <2 x float> %740, float %738, i32 1
  %742 = icmp sgt i32 %736, 0
  %743 = select i1 %742, i32 %736, i32 0
  %744 = sitofp i32 %743 to float
  %745 = insertelement <2 x float> undef, float %744, i32 0
  %746 = icmp sgt i32 %739, 0
  %747 = select i1 %746, i32 %739, i32 0
  %748 = sitofp i32 %747 to float
  %749 = insertelement <2 x float> %745, float %748, i32 1
  %750 = insertelement <2 x float> %403, float %170, i32 1
  %751 = insertelement <2 x float> %408, float %175, i32 1
  %752 = load i32, i32* %3, align 4
  %753 = sitofp i32 %752 to float
  %754 = load i32, i32* %6, align 4
  %755 = sitofp i32 %754 to float
  %756 = fdiv float %737, %753
  %757 = fdiv float %738, %755
  %758 = fdiv float %744, %753
  %759 = fdiv float %748, %755
  %760 = insertelement <2 x float> undef, float %756, i32 0
  %761 = insertelement <2 x float> %760, float %757, i32 1
  %762 = fcmp ogt float %758, 0x3EB0000000000000
  %763 = select i1 %762, float %758, float 0.000000e+00
  %764 = insertelement <2 x float> undef, float %763, i32 0
  %765 = fcmp ogt float %759, 0x3EB0000000000000
  %766 = select i1 %765, float %759, float 0.000000e+00
  %767 = insertelement <2 x float> %764, float %766, i32 1
  %768 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %769 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %731, %768
  %770 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %768 to i64
  br i1 %769, label %771, label %786

771:                                              ; preds = %729
  %772 = bitcast %"class.cc::NinePatchGenerator::Patch"* %731 to <2 x float>*
  store <2 x float> %741, <2 x float>* %772, align 4
  %773 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %731, i64 0, i32 0, i32 1
  %774 = bitcast %"class.gfx::SizeF"* %773 to <2 x float>*
  store <2 x float> %749, <2 x float>* %774, align 4
  %775 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %731, i64 0, i32 1
  %776 = bitcast %"class.gfx::RectF"* %775 to <2 x float>*
  store <2 x float> %761, <2 x float>* %776, align 4
  %777 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %731, i64 0, i32 1, i32 1
  %778 = bitcast %"class.gfx::SizeF"* %777 to <2 x float>*
  store <2 x float> %767, <2 x float>* %778, align 4
  %779 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %731, i64 0, i32 2
  %780 = bitcast %"class.gfx::RectF"* %779 to <2 x float>*
  store <2 x float> %750, <2 x float>* %780, align 4
  %781 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %731, i64 0, i32 2, i32 1
  %782 = bitcast %"class.gfx::SizeF"* %781 to <2 x float>*
  store <2 x float> %751, <2 x float>* %782, align 4
  %783 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %731, i64 1
  %784 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %783 to i64
  %785 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %784, i64* %785, align 8
  br label %841

786:                                              ; preds = %729
  %787 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %731 to i64
  %788 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %789 = load i64, i64* %36, align 8
  %790 = sub i64 %787, %789
  %791 = sdiv exact i64 %790, 48
  %792 = add nsw i64 %791, 1
  %793 = icmp ugt i64 %792, 384307168202282325
  br i1 %793, label %794, label %796

794:                                              ; preds = %786
  %795 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %795) #10
  unreachable

796:                                              ; preds = %786
  %797 = sub i64 %770, %789
  %798 = sdiv exact i64 %797, 48
  %799 = icmp ult i64 %798, 192153584101141162
  br i1 %799, label %800, label %805

800:                                              ; preds = %796
  %801 = shl nsw i64 %798, 1
  %802 = icmp ult i64 %801, %792
  %803 = select i1 %802, i64 %792, i64 %801
  %804 = icmp eq i64 %803, 0
  br i1 %804, label %810, label %805

805:                                              ; preds = %800, %796
  %806 = phi i64 [ %803, %800 ], [ 384307168202282325, %796 ]
  %807 = mul i64 %806, 48
  %808 = tail call i8* @_Znwm(i64 %807) #9
  %809 = bitcast i8* %808 to %"class.cc::NinePatchGenerator::Patch"*
  br label %810

810:                                              ; preds = %805, %800
  %811 = phi i64 [ %806, %805 ], [ 0, %800 ]
  %812 = phi %"class.cc::NinePatchGenerator::Patch"* [ %809, %805 ], [ null, %800 ]
  %813 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %791
  %814 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %811
  %815 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %814 to i64
  %816 = bitcast %"class.cc::NinePatchGenerator::Patch"* %813 to <2 x float>*
  store <2 x float> %741, <2 x float>* %816, align 4
  %817 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %791, i32 0, i32 1
  %818 = bitcast %"class.gfx::SizeF"* %817 to <2 x float>*
  store <2 x float> %749, <2 x float>* %818, align 4
  %819 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %791, i32 1
  %820 = bitcast %"class.gfx::RectF"* %819 to <2 x float>*
  store <2 x float> %761, <2 x float>* %820, align 4
  %821 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %791, i32 1, i32 1
  %822 = bitcast %"class.gfx::SizeF"* %821 to <2 x float>*
  store <2 x float> %767, <2 x float>* %822, align 4
  %823 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %791, i32 2
  %824 = bitcast %"class.gfx::RectF"* %823 to <2 x float>*
  store <2 x float> %750, <2 x float>* %824, align 4
  %825 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %812, i64 %791, i32 2, i32 1
  %826 = bitcast %"class.gfx::SizeF"* %825 to <2 x float>*
  store <2 x float> %751, <2 x float>* %826, align 4
  %827 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %813, i64 1
  %828 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %827 to i64
  %829 = sub i64 %730, %789
  %830 = sdiv exact i64 %829, -48
  %831 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %813, i64 %830
  %832 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %831 to i64
  %833 = icmp sgt i64 %829, 0
  br i1 %833, label %834, label %837

834:                                              ; preds = %810
  %835 = bitcast %"class.cc::NinePatchGenerator::Patch"* %831 to i8*
  %836 = inttoptr i64 %789 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %835, i8* align 4 %836, i64 %829, i1 false) #8
  br label %837

837:                                              ; preds = %834, %810
  store i64 %832, i64* %36, align 8
  store i64 %828, i64* %788, align 8
  store i64 %815, i64* %35, align 8
  %838 = icmp eq i64 %789, 0
  br i1 %838, label %841, label %839

839:                                              ; preds = %837
  %840 = inttoptr i64 %789 to i8*
  tail call void @_ZdlPv(i8* %840) #9
  br label %841

841:                                              ; preds = %771, %837, %839
  %842 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 4
  %843 = load i8, i8* %842, align 4, !range !2
  %844 = icmp eq i8 %843, 0
  br i1 %844, label %953, label %845

845:                                              ; preds = %841
  %846 = load i32, i32* %42, align 4
  %847 = load i32, i32* %44, align 4
  %848 = load i32, i32* %91, align 4
  %849 = load i32, i32* %151, align 4
  %850 = sitofp i32 %846 to float
  %851 = sitofp i32 %847 to float
  %852 = insertelement <2 x float> undef, float %850, i32 0
  %853 = insertelement <2 x float> %852, float %851, i32 1
  %854 = icmp sgt i32 %848, 0
  %855 = select i1 %854, i32 %848, i32 0
  %856 = sitofp i32 %855 to float
  %857 = insertelement <2 x float> undef, float %856, i32 0
  %858 = icmp sgt i32 %849, 0
  %859 = select i1 %858, i32 %849, i32 0
  %860 = sitofp i32 %859 to float
  %861 = insertelement <2 x float> %857, float %860, i32 1
  %862 = insertelement <2 x float> %403, float %517, i32 1
  %863 = insertelement <2 x float> %408, float %522, i32 1
  %864 = load i32, i32* %3, align 4
  %865 = sitofp i32 %864 to float
  %866 = load i32, i32* %6, align 4
  %867 = sitofp i32 %866 to float
  %868 = fdiv float %850, %865
  %869 = fdiv float %851, %867
  %870 = fdiv float %856, %865
  %871 = fdiv float %860, %867
  %872 = insertelement <2 x float> undef, float %868, i32 0
  %873 = insertelement <2 x float> %872, float %869, i32 1
  %874 = fcmp ogt float %870, 0x3EB0000000000000
  %875 = select i1 %874, float %870, float 0.000000e+00
  %876 = insertelement <2 x float> undef, float %875, i32 0
  %877 = fcmp ogt float %871, 0x3EB0000000000000
  %878 = select i1 %877, float %871, float 0.000000e+00
  %879 = insertelement <2 x float> %876, float %878, i32 1
  %880 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %33, align 8
  %881 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %34, align 8
  %882 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %880, %881
  %883 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %881 to i64
  br i1 %882, label %884, label %899

884:                                              ; preds = %845
  %885 = bitcast %"class.cc::NinePatchGenerator::Patch"* %880 to <2 x float>*
  store <2 x float> %853, <2 x float>* %885, align 4
  %886 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %880, i64 0, i32 0, i32 1
  %887 = bitcast %"class.gfx::SizeF"* %886 to <2 x float>*
  store <2 x float> %861, <2 x float>* %887, align 4
  %888 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %880, i64 0, i32 1
  %889 = bitcast %"class.gfx::RectF"* %888 to <2 x float>*
  store <2 x float> %873, <2 x float>* %889, align 4
  %890 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %880, i64 0, i32 1, i32 1
  %891 = bitcast %"class.gfx::SizeF"* %890 to <2 x float>*
  store <2 x float> %879, <2 x float>* %891, align 4
  %892 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %880, i64 0, i32 2
  %893 = bitcast %"class.gfx::RectF"* %892 to <2 x float>*
  store <2 x float> %862, <2 x float>* %893, align 4
  %894 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %880, i64 0, i32 2, i32 1
  %895 = bitcast %"class.gfx::SizeF"* %894 to <2 x float>*
  store <2 x float> %863, <2 x float>* %895, align 4
  %896 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %880, i64 1
  %897 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %896 to i64
  %898 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  store i64 %897, i64* %898, align 8
  br label %953

899:                                              ; preds = %845
  %900 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %880 to i64
  %901 = bitcast %"class.cc::NinePatchGenerator::Patch"** %33 to i64*
  %902 = load i64, i64* %36, align 8
  %903 = sub i64 %900, %902
  %904 = sdiv exact i64 %903, 48
  %905 = add nsw i64 %904, 1
  %906 = icmp ugt i64 %905, 384307168202282325
  br i1 %906, label %907, label %909

907:                                              ; preds = %899
  %908 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %908) #10
  unreachable

909:                                              ; preds = %899
  %910 = sub i64 %883, %902
  %911 = sdiv exact i64 %910, 48
  %912 = icmp ult i64 %911, 192153584101141162
  br i1 %912, label %913, label %918

913:                                              ; preds = %909
  %914 = shl nsw i64 %911, 1
  %915 = icmp ult i64 %914, %905
  %916 = select i1 %915, i64 %905, i64 %914
  %917 = icmp eq i64 %916, 0
  br i1 %917, label %923, label %918

918:                                              ; preds = %913, %909
  %919 = phi i64 [ %916, %913 ], [ 384307168202282325, %909 ]
  %920 = mul i64 %919, 48
  %921 = tail call i8* @_Znwm(i64 %920) #9
  %922 = bitcast i8* %921 to %"class.cc::NinePatchGenerator::Patch"*
  br label %923

923:                                              ; preds = %918, %913
  %924 = phi i64 [ %919, %918 ], [ 0, %913 ]
  %925 = phi %"class.cc::NinePatchGenerator::Patch"* [ %922, %918 ], [ null, %913 ]
  %926 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %904
  %927 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %924
  %928 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %927 to i64
  %929 = bitcast %"class.cc::NinePatchGenerator::Patch"* %926 to <2 x float>*
  store <2 x float> %853, <2 x float>* %929, align 4
  %930 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %904, i32 0, i32 1
  %931 = bitcast %"class.gfx::SizeF"* %930 to <2 x float>*
  store <2 x float> %861, <2 x float>* %931, align 4
  %932 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %904, i32 1
  %933 = bitcast %"class.gfx::RectF"* %932 to <2 x float>*
  store <2 x float> %873, <2 x float>* %933, align 4
  %934 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %904, i32 1, i32 1
  %935 = bitcast %"class.gfx::SizeF"* %934 to <2 x float>*
  store <2 x float> %879, <2 x float>* %935, align 4
  %936 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %904, i32 2
  %937 = bitcast %"class.gfx::RectF"* %936 to <2 x float>*
  store <2 x float> %862, <2 x float>* %937, align 4
  %938 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %925, i64 %904, i32 2, i32 1
  %939 = bitcast %"class.gfx::SizeF"* %938 to <2 x float>*
  store <2 x float> %863, <2 x float>* %939, align 4
  %940 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %926, i64 1
  %941 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %940 to i64
  %942 = sdiv exact i64 %903, -48
  %943 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %926, i64 %942
  %944 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %943 to i64
  %945 = icmp sgt i64 %903, 0
  br i1 %945, label %946, label %949

946:                                              ; preds = %923
  %947 = bitcast %"class.cc::NinePatchGenerator::Patch"* %943 to i8*
  %948 = inttoptr i64 %902 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %947, i8* align 4 %948, i64 %903, i1 false) #8
  br label %949

949:                                              ; preds = %946, %923
  store i64 %944, i64* %36, align 8
  store i64 %941, i64* %901, align 8
  store i64 %928, i64* %35, align 8
  %950 = icmp eq i64 %902, 0
  br i1 %950, label %953, label %951

951:                                              ; preds = %949
  %952 = inttoptr i64 %902 to i8*
  tail call void @_ZdlPv(i8* %952) #9
  br label %953

953:                                              ; preds = %951, %949, %884, %841
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc18NinePatchGenerator25ComputeQuadsWithOcclusionEv(%"class.std::__1::vector"* noalias sret, %"class.cc::NinePatchGenerator"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 2, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  %6 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 2, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to float
  %9 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 %16, %18
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %22, %24
  %26 = sitofp i32 %25 to float
  %27 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %28
  %32 = sitofp i32 %31 to float
  %33 = fsub float %5, %32
  %34 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 0, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %35
  %39 = sitofp i32 %38 to float
  %40 = fsub float %8, %39
  %41 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 6, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 6, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, %42
  %46 = sitofp i32 %45 to float
  %47 = fsub float %11, %46
  %48 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 6, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 6, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, %49
  %53 = sitofp i32 %52 to float
  %54 = fsub float %14, %53
  %55 = icmp eq i32 %18, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %2
  %57 = mul nsw i32 %42, %28
  %58 = sdiv i32 %57, %18
  br label %59

59:                                               ; preds = %2, %56
  %60 = phi i32 [ %58, %56 ], [ 0, %2 ]
  %61 = icmp eq i32 %24, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = mul nsw i32 %49, %35
  %64 = sdiv i32 %63, %24
  br label %65

65:                                               ; preds = %59, %62
  %66 = phi i32 [ %64, %62 ], [ 0, %59 ]
  %67 = icmp eq i32 %19, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = fmul float %33, %47
  %70 = fdiv float %69, %20
  br label %71

71:                                               ; preds = %65, %68
  %72 = phi float [ %70, %68 ], [ 0.000000e+00, %65 ]
  %73 = fsub float %5, %72
  %74 = fptosi float %73 to i32
  %75 = icmp eq i32 %25, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = fmul float %40, %54
  %78 = fdiv float %77, %26
  br label %79

79:                                               ; preds = %76, %71
  %80 = phi float [ %78, %76 ], [ 0.000000e+00, %71 ]
  %81 = fsub float %8, %80
  %82 = fptosi float %81 to i32
  %83 = sitofp i32 %60 to float
  %84 = sitofp i32 %66 to float
  %85 = sub nsw i32 %74, %60
  %86 = sub nsw i32 %82, %66
  %87 = icmp sgt i32 %85, 0
  %88 = select i1 %87, i32 %85, i32 0
  %89 = sitofp i32 %88 to float
  %90 = icmp sgt i32 %86, 0
  %91 = select i1 %90, i32 %86, i32 0
  %92 = sitofp i32 %91 to float
  %93 = sitofp i32 %18 to float
  %94 = sitofp i32 %24 to float
  %95 = sitofp i32 %16 to float
  %96 = fsub float %11, %95
  %97 = sitofp i32 %22 to float
  %98 = fsub float %14, %97
  %99 = fcmp ogt float %96, 0x3EB0000000000000
  %100 = select i1 %99, float %96, float 0.000000e+00
  %101 = fcmp ogt float %98, 0x3EB0000000000000
  %102 = select i1 %101, float %98, float 0.000000e+00
  %103 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"class.cc::NinePatchGenerator::Patch"** %104 to i64*
  %106 = bitcast %"class.std::__1::vector"* %0 to i64*
  %107 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %108 = tail call i8* @_Znwm(i64 576) #9
  %109 = ptrtoint i8* %108 to i64
  %110 = getelementptr inbounds i8, i8* %108, i64 576
  %111 = ptrtoint i8* %110 to i64
  store i64 %109, i64* %106, align 8
  store i64 %109, i64* %107, align 8
  store i64 %111, i64* %105, align 8
  %112 = fptosi float %83 to i32
  %113 = icmp sgt i32 %112, 0
  %114 = select i1 %113, i32 %112, i32 0
  %115 = sitofp i32 %114 to float
  %116 = insertelement <2 x float> undef, float %115, i32 0
  %117 = icmp sgt i32 %35, 0
  %118 = select i1 %117, i32 %35, i32 0
  %119 = sitofp i32 %118 to float
  %120 = fptosi float %94 to i32
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = sitofp i32 %122 to float
  %124 = fdiv float %115, %5
  %125 = fdiv float %119, %8
  %126 = fcmp ogt float %124, 0x3EB0000000000000
  %127 = select i1 %126, float %124, float 0.000000e+00
  %128 = insertelement <2 x float> undef, float %127, i32 0
  %129 = fcmp ogt float %125, 0x3EB0000000000000
  %130 = select i1 %129, float %125, float 0.000000e+00
  %131 = insertelement <2 x float> %128, float %130, i32 1
  %132 = fdiv float 0.000000e+00, %5
  %133 = insertelement <2 x float> undef, float %132, i32 0
  %134 = fdiv float 0.000000e+00, %8
  %135 = insertelement <2 x float> %133, float %134, i32 1
  %136 = icmp sgt i32 %42, 0
  %137 = select i1 %136, i32 %42, i32 0
  %138 = sitofp i32 %137 to float
  %139 = insertelement <2 x float> undef, float %138, i32 0
  %140 = insertelement <2 x float> %139, float %123, i32 1
  %141 = insertelement <2 x float> %116, float %119, i32 1
  %142 = bitcast i8* %108 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %142, align 4
  %143 = getelementptr inbounds i8, i8* %108, i64 8
  %144 = bitcast i8* %143 to <2 x float>*
  store <2 x float> %141, <2 x float>* %144, align 4
  %145 = getelementptr inbounds i8, i8* %108, i64 16
  %146 = bitcast i8* %145 to <2 x float>*
  store <2 x float> %135, <2 x float>* %146, align 4
  %147 = getelementptr inbounds i8, i8* %108, i64 24
  %148 = bitcast i8* %147 to <2 x float>*
  store <2 x float> %131, <2 x float>* %148, align 4
  %149 = getelementptr inbounds i8, i8* %108, i64 32
  %150 = bitcast i8* %149 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %150, align 4
  %151 = getelementptr inbounds i8, i8* %108, i64 40
  %152 = bitcast i8* %151 to <2 x float>*
  store <2 x float> %140, <2 x float>* %152, align 4
  %153 = getelementptr inbounds i8, i8* %108, i64 48
  %154 = ptrtoint i8* %153 to i64
  %155 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load i32, i32* %27, align 4
  %157 = fptosi float %84 to i32
  %158 = sitofp i32 %112 to float
  %159 = sub nsw i32 %156, %112
  %160 = insertelement <2 x float> undef, float %158, i32 0
  %161 = icmp sgt i32 %159, 0
  %162 = select i1 %161, i32 %159, i32 0
  %163 = sitofp i32 %162 to float
  %164 = icmp sgt i32 %157, 0
  %165 = select i1 %164, i32 %157, i32 0
  %166 = sitofp i32 %165 to float
  %167 = load i32, i32* %41, align 4
  %168 = fptosi float %93 to i32
  %169 = load i32, i32* %48, align 4
  %170 = sub nsw i32 %168, %167
  %171 = load i32, i32* %3, align 4
  %172 = sitofp i32 %171 to float
  %173 = load i32, i32* %6, align 4
  %174 = sitofp i32 %173 to float
  %175 = fdiv float %163, %172
  %176 = fdiv float %166, %174
  %177 = fcmp ogt float %175, 0x3EB0000000000000
  %178 = select i1 %177, float %175, float 0.000000e+00
  %179 = insertelement <2 x float> undef, float %178, i32 0
  %180 = fcmp ogt float %176, 0x3EB0000000000000
  %181 = select i1 %180, float %176, float 0.000000e+00
  %182 = insertelement <2 x float> %179, float %181, i32 1
  %183 = fdiv float %158, %172
  %184 = insertelement <2 x float> undef, float %183, i32 0
  %185 = fdiv float 0.000000e+00, %174
  %186 = insertelement <2 x float> %184, float %185, i32 1
  %187 = icmp sgt i32 %170, 0
  %188 = select i1 %187, i32 %170, i32 0
  %189 = sitofp i32 %188 to float
  %190 = insertelement <2 x float> undef, float %189, i32 0
  %191 = icmp sgt i32 %169, 0
  %192 = select i1 %191, i32 %169, i32 0
  %193 = sitofp i32 %192 to float
  %194 = insertelement <2 x float> %190, float %193, i32 1
  %195 = sitofp i32 %167 to float
  %196 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %195, i32 0
  %197 = insertelement <2 x float> undef, float %163, i32 0
  %198 = insertelement <2 x float> %197, float %166, i32 1
  %199 = insertelement <2 x float> %160, float 0.000000e+00, i32 1
  %200 = bitcast i8* %153 to <2 x float>*
  store <2 x float> %199, <2 x float>* %200, align 4
  %201 = getelementptr inbounds i8, i8* %108, i64 56
  %202 = bitcast i8* %201 to <2 x float>*
  store <2 x float> %198, <2 x float>* %202, align 4
  %203 = getelementptr inbounds i8, i8* %108, i64 64
  %204 = bitcast i8* %203 to <2 x float>*
  store <2 x float> %186, <2 x float>* %204, align 4
  %205 = getelementptr inbounds i8, i8* %108, i64 72
  %206 = bitcast i8* %205 to <2 x float>*
  store <2 x float> %182, <2 x float>* %206, align 4
  %207 = getelementptr inbounds i8, i8* %108, i64 80
  %208 = bitcast i8* %207 to <2 x float>*
  store <2 x float> %196, <2 x float>* %208, align 4
  %209 = getelementptr inbounds i8, i8* %108, i64 88
  %210 = bitcast i8* %209 to <2 x float>*
  store <2 x float> %194, <2 x float>* %210, align 4
  %211 = getelementptr inbounds i8, i8* %108, i64 96
  %212 = bitcast i8* %211 to %"class.cc::NinePatchGenerator::Patch"*
  %213 = ptrtoint i8* %211 to i64
  %214 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %213, i64* %214, align 8
  %215 = load i32, i32* %27, align 4
  %216 = load i32, i32* %29, align 4
  %217 = sitofp i32 %215 to float
  %218 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %217, i32 0
  %219 = icmp sgt i32 %216, 0
  %220 = select i1 %219, i32 %216, i32 0
  %221 = sitofp i32 %220 to float
  %222 = insertelement <2 x float> undef, float %221, i32 0
  %223 = insertelement <2 x float> %222, float %166, i32 1
  %224 = fadd float %100, %93
  %225 = fptosi float %224 to i32
  %226 = load i32, i32* %48, align 4
  %227 = sitofp i32 %168 to float
  %228 = sub nsw i32 %225, %168
  %229 = insertelement <2 x float> undef, float %227, i32 0
  %230 = insertelement <2 x float> %229, float 0.000000e+00, i32 1
  %231 = icmp sgt i32 %228, 0
  %232 = select i1 %231, i32 %228, i32 0
  %233 = sitofp i32 %232 to float
  %234 = insertelement <2 x float> undef, float %233, i32 0
  %235 = icmp sgt i32 %226, 0
  %236 = select i1 %235, i32 %226, i32 0
  %237 = sitofp i32 %236 to float
  %238 = insertelement <2 x float> %234, float %237, i32 1
  %239 = load i32, i32* %3, align 4
  %240 = sitofp i32 %239 to float
  %241 = load i32, i32* %6, align 4
  %242 = sitofp i32 %241 to float
  %243 = fdiv float %217, %240
  %244 = fdiv float 0.000000e+00, %242
  %245 = fdiv float %221, %240
  %246 = fdiv float %166, %242
  %247 = insertelement <2 x float> undef, float %243, i32 0
  %248 = insertelement <2 x float> %247, float %244, i32 1
  %249 = fcmp ogt float %245, 0x3EB0000000000000
  %250 = select i1 %249, float %245, float 0.000000e+00
  %251 = insertelement <2 x float> undef, float %250, i32 0
  %252 = fcmp ogt float %246, 0x3EB0000000000000
  %253 = select i1 %252, float %246, float 0.000000e+00
  %254 = insertelement <2 x float> %251, float %253, i32 1
  %255 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %256 = icmp ugt %"class.cc::NinePatchGenerator::Patch"* %255, %212
  %257 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %255 to i64
  br i1 %256, label %258, label %274

258:                                              ; preds = %79
  %259 = bitcast i8* %211 to <2 x float>*
  store <2 x float> %218, <2 x float>* %259, align 4
  %260 = getelementptr inbounds i8, i8* %108, i64 104
  %261 = bitcast i8* %260 to <2 x float>*
  store <2 x float> %223, <2 x float>* %261, align 4
  %262 = getelementptr inbounds i8, i8* %108, i64 112
  %263 = bitcast i8* %262 to <2 x float>*
  store <2 x float> %248, <2 x float>* %263, align 4
  %264 = getelementptr inbounds i8, i8* %108, i64 120
  %265 = bitcast i8* %264 to <2 x float>*
  store <2 x float> %254, <2 x float>* %265, align 4
  %266 = getelementptr inbounds i8, i8* %108, i64 128
  %267 = bitcast i8* %266 to <2 x float>*
  store <2 x float> %230, <2 x float>* %267, align 4
  %268 = getelementptr inbounds i8, i8* %108, i64 136
  %269 = bitcast i8* %268 to <2 x float>*
  store <2 x float> %238, <2 x float>* %269, align 4
  %270 = getelementptr inbounds i8, i8* %108, i64 144
  %271 = bitcast i8* %270 to %"class.cc::NinePatchGenerator::Patch"*
  %272 = ptrtoint i8* %270 to i64
  %273 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %272, i64* %273, align 8
  br label %331

274:                                              ; preds = %79
  %275 = ptrtoint i8* %211 to i64
  %276 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %277 = load i64, i64* %106, align 8
  %278 = sub i64 %275, %277
  %279 = sdiv exact i64 %278, 48
  %280 = add nsw i64 %279, 1
  %281 = icmp ugt i64 %280, 384307168202282325
  br i1 %281, label %282, label %284

282:                                              ; preds = %274
  %283 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %283) #10
  unreachable

284:                                              ; preds = %274
  %285 = sub i64 %257, %277
  %286 = sdiv exact i64 %285, 48
  %287 = icmp ult i64 %286, 192153584101141162
  br i1 %287, label %288, label %293

288:                                              ; preds = %284
  %289 = shl nsw i64 %286, 1
  %290 = icmp ult i64 %289, %280
  %291 = select i1 %290, i64 %280, i64 %289
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %298, label %293

293:                                              ; preds = %288, %284
  %294 = phi i64 [ %291, %288 ], [ 384307168202282325, %284 ]
  %295 = mul i64 %294, 48
  %296 = tail call i8* @_Znwm(i64 %295) #9
  %297 = bitcast i8* %296 to %"class.cc::NinePatchGenerator::Patch"*
  br label %298

298:                                              ; preds = %293, %288
  %299 = phi i64 [ %294, %293 ], [ 0, %288 ]
  %300 = phi %"class.cc::NinePatchGenerator::Patch"* [ %297, %293 ], [ null, %288 ]
  %301 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %279
  %302 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %299
  %303 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %302 to i64
  %304 = bitcast %"class.cc::NinePatchGenerator::Patch"* %301 to <2 x float>*
  store <2 x float> %218, <2 x float>* %304, align 4
  %305 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %279, i32 0, i32 1
  %306 = bitcast %"class.gfx::SizeF"* %305 to <2 x float>*
  store <2 x float> %223, <2 x float>* %306, align 4
  %307 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %279, i32 1
  %308 = bitcast %"class.gfx::RectF"* %307 to <2 x float>*
  store <2 x float> %248, <2 x float>* %308, align 4
  %309 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %279, i32 1, i32 1
  %310 = bitcast %"class.gfx::SizeF"* %309 to <2 x float>*
  store <2 x float> %254, <2 x float>* %310, align 4
  %311 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %279, i32 2
  %312 = bitcast %"class.gfx::RectF"* %311 to <2 x float>*
  store <2 x float> %230, <2 x float>* %312, align 4
  %313 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %300, i64 %279, i32 2, i32 1
  %314 = bitcast %"class.gfx::SizeF"* %313 to <2 x float>*
  store <2 x float> %238, <2 x float>* %314, align 4
  %315 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %301, i64 1
  %316 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %315 to i64
  %317 = sub i64 %213, %277
  %318 = sdiv exact i64 %317, -48
  %319 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %301, i64 %318
  %320 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %319 to i64
  %321 = icmp sgt i64 %317, 0
  br i1 %321, label %322, label %325

322:                                              ; preds = %298
  %323 = bitcast %"class.cc::NinePatchGenerator::Patch"* %319 to i8*
  %324 = inttoptr i64 %277 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %323, i8* align 4 %324, i64 %317, i1 false) #8
  br label %325

325:                                              ; preds = %322, %298
  store i64 %320, i64* %106, align 8
  store i64 %316, i64* %276, align 8
  store i64 %303, i64* %105, align 8
  %326 = icmp eq i64 %277, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %325
  %328 = inttoptr i64 %277 to i8*
  tail call void @_ZdlPv(i8* %328) #9
  %329 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %330 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %329 to i64
  br label %331

331:                                              ; preds = %258, %325, %327
  %332 = phi i64 [ %272, %258 ], [ %316, %325 ], [ %330, %327 ]
  %333 = phi %"class.cc::NinePatchGenerator::Patch"* [ %271, %258 ], [ %315, %325 ], [ %329, %327 ]
  %334 = load i32, i32* %27, align 4
  %335 = load i32, i32* %29, align 4
  %336 = add nsw i32 %335, %334
  %337 = fadd float %83, %89
  %338 = fptosi float %337 to i32
  %339 = sitofp i32 %336 to float
  %340 = sub nsw i32 %338, %336
  %341 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %339, i32 0
  %342 = icmp sgt i32 %340, 0
  %343 = select i1 %342, i32 %340, i32 0
  %344 = sitofp i32 %343 to float
  %345 = insertelement <2 x float> undef, float %344, i32 0
  %346 = insertelement <2 x float> %345, float %166, i32 1
  %347 = load i32, i32* %41, align 4
  %348 = load i32, i32* %43, align 4
  %349 = load i32, i32* %48, align 4
  %350 = sitofp i32 %225 to float
  %351 = sub i32 %347, %225
  %352 = add i32 %351, %348
  %353 = insertelement <2 x float> undef, float %350, i32 0
  %354 = insertelement <2 x float> %353, float 0.000000e+00, i32 1
  %355 = icmp sgt i32 %352, 0
  %356 = select i1 %355, i32 %352, i32 0
  %357 = sitofp i32 %356 to float
  %358 = insertelement <2 x float> undef, float %357, i32 0
  %359 = icmp sgt i32 %349, 0
  %360 = select i1 %359, i32 %349, i32 0
  %361 = sitofp i32 %360 to float
  %362 = insertelement <2 x float> %358, float %361, i32 1
  %363 = load i32, i32* %3, align 4
  %364 = sitofp i32 %363 to float
  %365 = load i32, i32* %6, align 4
  %366 = sitofp i32 %365 to float
  %367 = fdiv float %339, %364
  %368 = fdiv float 0.000000e+00, %366
  %369 = fdiv float %344, %364
  %370 = fdiv float %166, %366
  %371 = insertelement <2 x float> undef, float %367, i32 0
  %372 = insertelement <2 x float> %371, float %368, i32 1
  %373 = fcmp ogt float %369, 0x3EB0000000000000
  %374 = select i1 %373, float %369, float 0.000000e+00
  %375 = insertelement <2 x float> undef, float %374, i32 0
  %376 = fcmp ogt float %370, 0x3EB0000000000000
  %377 = select i1 %376, float %370, float 0.000000e+00
  %378 = insertelement <2 x float> %375, float %377, i32 1
  %379 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %380 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %333, %379
  %381 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %379 to i64
  br i1 %380, label %382, label %397

382:                                              ; preds = %331
  %383 = bitcast %"class.cc::NinePatchGenerator::Patch"* %333 to <2 x float>*
  store <2 x float> %341, <2 x float>* %383, align 4
  %384 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %333, i64 0, i32 0, i32 1
  %385 = bitcast %"class.gfx::SizeF"* %384 to <2 x float>*
  store <2 x float> %346, <2 x float>* %385, align 4
  %386 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %333, i64 0, i32 1
  %387 = bitcast %"class.gfx::RectF"* %386 to <2 x float>*
  store <2 x float> %372, <2 x float>* %387, align 4
  %388 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %333, i64 0, i32 1, i32 1
  %389 = bitcast %"class.gfx::SizeF"* %388 to <2 x float>*
  store <2 x float> %378, <2 x float>* %389, align 4
  %390 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %333, i64 0, i32 2
  %391 = bitcast %"class.gfx::RectF"* %390 to <2 x float>*
  store <2 x float> %354, <2 x float>* %391, align 4
  %392 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %333, i64 0, i32 2, i32 1
  %393 = bitcast %"class.gfx::SizeF"* %392 to <2 x float>*
  store <2 x float> %362, <2 x float>* %393, align 4
  %394 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %333, i64 1
  %395 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %394 to i64
  %396 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %395, i64* %396, align 8
  br label %454

397:                                              ; preds = %331
  %398 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %333 to i64
  %399 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %400 = load i64, i64* %106, align 8
  %401 = sub i64 %398, %400
  %402 = sdiv exact i64 %401, 48
  %403 = add nsw i64 %402, 1
  %404 = icmp ugt i64 %403, 384307168202282325
  br i1 %404, label %405, label %407

405:                                              ; preds = %397
  %406 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %406) #10
  unreachable

407:                                              ; preds = %397
  %408 = sub i64 %381, %400
  %409 = sdiv exact i64 %408, 48
  %410 = icmp ult i64 %409, 192153584101141162
  br i1 %410, label %411, label %416

411:                                              ; preds = %407
  %412 = shl nsw i64 %409, 1
  %413 = icmp ult i64 %412, %403
  %414 = select i1 %413, i64 %403, i64 %412
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %421, label %416

416:                                              ; preds = %411, %407
  %417 = phi i64 [ %414, %411 ], [ 384307168202282325, %407 ]
  %418 = mul i64 %417, 48
  %419 = tail call i8* @_Znwm(i64 %418) #9
  %420 = bitcast i8* %419 to %"class.cc::NinePatchGenerator::Patch"*
  br label %421

421:                                              ; preds = %416, %411
  %422 = phi i64 [ %417, %416 ], [ 0, %411 ]
  %423 = phi %"class.cc::NinePatchGenerator::Patch"* [ %420, %416 ], [ null, %411 ]
  %424 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %402
  %425 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %422
  %426 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %425 to i64
  %427 = bitcast %"class.cc::NinePatchGenerator::Patch"* %424 to <2 x float>*
  store <2 x float> %341, <2 x float>* %427, align 4
  %428 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %402, i32 0, i32 1
  %429 = bitcast %"class.gfx::SizeF"* %428 to <2 x float>*
  store <2 x float> %346, <2 x float>* %429, align 4
  %430 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %402, i32 1
  %431 = bitcast %"class.gfx::RectF"* %430 to <2 x float>*
  store <2 x float> %372, <2 x float>* %431, align 4
  %432 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %402, i32 1, i32 1
  %433 = bitcast %"class.gfx::SizeF"* %432 to <2 x float>*
  store <2 x float> %378, <2 x float>* %433, align 4
  %434 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %402, i32 2
  %435 = bitcast %"class.gfx::RectF"* %434 to <2 x float>*
  store <2 x float> %354, <2 x float>* %435, align 4
  %436 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %423, i64 %402, i32 2, i32 1
  %437 = bitcast %"class.gfx::SizeF"* %436 to <2 x float>*
  store <2 x float> %362, <2 x float>* %437, align 4
  %438 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %424, i64 1
  %439 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %438 to i64
  %440 = sub i64 %332, %400
  %441 = sdiv exact i64 %440, -48
  %442 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %424, i64 %441
  %443 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %442 to i64
  %444 = icmp sgt i64 %440, 0
  br i1 %444, label %445, label %448

445:                                              ; preds = %421
  %446 = bitcast %"class.cc::NinePatchGenerator::Patch"* %442 to i8*
  %447 = inttoptr i64 %400 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %446, i8* align 4 %447, i64 %440, i1 false) #8
  br label %448

448:                                              ; preds = %445, %421
  store i64 %443, i64* %106, align 8
  store i64 %439, i64* %399, align 8
  store i64 %426, i64* %105, align 8
  %449 = icmp eq i64 %400, 0
  br i1 %449, label %454, label %450

450:                                              ; preds = %448
  %451 = inttoptr i64 %400 to i8*
  tail call void @_ZdlPv(i8* %451) #9
  %452 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %453 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %452 to i64
  br label %454

454:                                              ; preds = %382, %448, %450
  %455 = phi i64 [ %395, %382 ], [ %439, %448 ], [ %453, %450 ]
  %456 = phi %"class.cc::NinePatchGenerator::Patch"* [ %394, %382 ], [ %438, %448 ], [ %452, %450 ]
  %457 = fptosi float %5 to i32
  %458 = load i32, i32* %34, align 4
  %459 = sitofp i32 %338 to float
  %460 = sub nsw i32 %457, %338
  %461 = insertelement <2 x float> undef, float %459, i32 0
  %462 = insertelement <2 x float> %461, float 0.000000e+00, i32 1
  %463 = icmp sgt i32 %460, 0
  %464 = select i1 %463, i32 %460, i32 0
  %465 = sitofp i32 %464 to float
  %466 = insertelement <2 x float> undef, float %465, i32 0
  %467 = icmp sgt i32 %458, 0
  %468 = select i1 %467, i32 %458, i32 0
  %469 = sitofp i32 %468 to float
  %470 = insertelement <2 x float> %466, float %469, i32 1
  %471 = load i32, i32* %41, align 4
  %472 = load i32, i32* %43, align 4
  %473 = add nsw i32 %472, %471
  %474 = fptosi float %11 to i32
  %475 = sitofp i32 %473 to float
  %476 = sub nsw i32 %474, %473
  %477 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %475, i32 0
  %478 = icmp sgt i32 %476, 0
  %479 = select i1 %478, i32 %476, i32 0
  %480 = sitofp i32 %479 to float
  %481 = insertelement <2 x float> undef, float %480, i32 0
  %482 = insertelement <2 x float> %481, float %123, i32 1
  %483 = load i32, i32* %3, align 4
  %484 = sitofp i32 %483 to float
  %485 = load i32, i32* %6, align 4
  %486 = sitofp i32 %485 to float
  %487 = fdiv float %459, %484
  %488 = fdiv float 0.000000e+00, %486
  %489 = fdiv float %465, %484
  %490 = fdiv float %469, %486
  %491 = insertelement <2 x float> undef, float %487, i32 0
  %492 = insertelement <2 x float> %491, float %488, i32 1
  %493 = fcmp ogt float %489, 0x3EB0000000000000
  %494 = select i1 %493, float %489, float 0.000000e+00
  %495 = insertelement <2 x float> undef, float %494, i32 0
  %496 = fcmp ogt float %490, 0x3EB0000000000000
  %497 = select i1 %496, float %490, float 0.000000e+00
  %498 = insertelement <2 x float> %495, float %497, i32 1
  %499 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %500 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %456, %499
  %501 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %499 to i64
  br i1 %500, label %502, label %517

502:                                              ; preds = %454
  %503 = bitcast %"class.cc::NinePatchGenerator::Patch"* %456 to <2 x float>*
  store <2 x float> %462, <2 x float>* %503, align 4
  %504 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %456, i64 0, i32 0, i32 1
  %505 = bitcast %"class.gfx::SizeF"* %504 to <2 x float>*
  store <2 x float> %470, <2 x float>* %505, align 4
  %506 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %456, i64 0, i32 1
  %507 = bitcast %"class.gfx::RectF"* %506 to <2 x float>*
  store <2 x float> %492, <2 x float>* %507, align 4
  %508 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %456, i64 0, i32 1, i32 1
  %509 = bitcast %"class.gfx::SizeF"* %508 to <2 x float>*
  store <2 x float> %498, <2 x float>* %509, align 4
  %510 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %456, i64 0, i32 2
  %511 = bitcast %"class.gfx::RectF"* %510 to <2 x float>*
  store <2 x float> %477, <2 x float>* %511, align 4
  %512 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %456, i64 0, i32 2, i32 1
  %513 = bitcast %"class.gfx::SizeF"* %512 to <2 x float>*
  store <2 x float> %482, <2 x float>* %513, align 4
  %514 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %456, i64 1
  %515 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %514 to i64
  %516 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %515, i64* %516, align 8
  br label %574

517:                                              ; preds = %454
  %518 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %456 to i64
  %519 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %520 = load i64, i64* %106, align 8
  %521 = sub i64 %518, %520
  %522 = sdiv exact i64 %521, 48
  %523 = add nsw i64 %522, 1
  %524 = icmp ugt i64 %523, 384307168202282325
  br i1 %524, label %525, label %527

525:                                              ; preds = %517
  %526 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %526) #10
  unreachable

527:                                              ; preds = %517
  %528 = sub i64 %501, %520
  %529 = sdiv exact i64 %528, 48
  %530 = icmp ult i64 %529, 192153584101141162
  br i1 %530, label %531, label %536

531:                                              ; preds = %527
  %532 = shl nsw i64 %529, 1
  %533 = icmp ult i64 %532, %523
  %534 = select i1 %533, i64 %523, i64 %532
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %541, label %536

536:                                              ; preds = %531, %527
  %537 = phi i64 [ %534, %531 ], [ 384307168202282325, %527 ]
  %538 = mul i64 %537, 48
  %539 = tail call i8* @_Znwm(i64 %538) #9
  %540 = bitcast i8* %539 to %"class.cc::NinePatchGenerator::Patch"*
  br label %541

541:                                              ; preds = %536, %531
  %542 = phi i64 [ %537, %536 ], [ 0, %531 ]
  %543 = phi %"class.cc::NinePatchGenerator::Patch"* [ %540, %536 ], [ null, %531 ]
  %544 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %522
  %545 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %542
  %546 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %545 to i64
  %547 = bitcast %"class.cc::NinePatchGenerator::Patch"* %544 to <2 x float>*
  store <2 x float> %462, <2 x float>* %547, align 4
  %548 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %522, i32 0, i32 1
  %549 = bitcast %"class.gfx::SizeF"* %548 to <2 x float>*
  store <2 x float> %470, <2 x float>* %549, align 4
  %550 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %522, i32 1
  %551 = bitcast %"class.gfx::RectF"* %550 to <2 x float>*
  store <2 x float> %492, <2 x float>* %551, align 4
  %552 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %522, i32 1, i32 1
  %553 = bitcast %"class.gfx::SizeF"* %552 to <2 x float>*
  store <2 x float> %498, <2 x float>* %553, align 4
  %554 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %522, i32 2
  %555 = bitcast %"class.gfx::RectF"* %554 to <2 x float>*
  store <2 x float> %477, <2 x float>* %555, align 4
  %556 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %543, i64 %522, i32 2, i32 1
  %557 = bitcast %"class.gfx::SizeF"* %556 to <2 x float>*
  store <2 x float> %482, <2 x float>* %557, align 4
  %558 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %544, i64 1
  %559 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %558 to i64
  %560 = sub i64 %455, %520
  %561 = sdiv exact i64 %560, -48
  %562 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %544, i64 %561
  %563 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %562 to i64
  %564 = icmp sgt i64 %560, 0
  br i1 %564, label %565, label %568

565:                                              ; preds = %541
  %566 = bitcast %"class.cc::NinePatchGenerator::Patch"* %562 to i8*
  %567 = inttoptr i64 %520 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %566, i8* align 4 %567, i64 %560, i1 false) #8
  br label %568

568:                                              ; preds = %565, %541
  store i64 %563, i64* %106, align 8
  store i64 %559, i64* %519, align 8
  store i64 %546, i64* %105, align 8
  %569 = icmp eq i64 %520, 0
  br i1 %569, label %574, label %570

570:                                              ; preds = %568
  %571 = inttoptr i64 %520 to i8*
  tail call void @_ZdlPv(i8* %571) #9
  %572 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %573 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %572 to i64
  br label %574

574:                                              ; preds = %502, %568, %570
  %575 = phi i64 [ %515, %502 ], [ %559, %568 ], [ %573, %570 ]
  %576 = phi %"class.cc::NinePatchGenerator::Patch"* [ %514, %502 ], [ %558, %568 ], [ %572, %570 ]
  %577 = load i32, i32* %34, align 4
  %578 = load i32, i32* %36, align 4
  %579 = sitofp i32 %577 to float
  %580 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %579, i32 1
  %581 = icmp sgt i32 %578, 0
  %582 = select i1 %581, i32 %578, i32 0
  %583 = sitofp i32 %582 to float
  %584 = insertelement <2 x float> %116, float %583, i32 1
  %585 = load i32, i32* %41, align 4
  %586 = fadd float %102, %94
  %587 = fptosi float %586 to i32
  %588 = sitofp i32 %120 to float
  %589 = sub nsw i32 %587, %120
  %590 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %588, i32 1
  %591 = icmp sgt i32 %585, 0
  %592 = select i1 %591, i32 %585, i32 0
  %593 = sitofp i32 %592 to float
  %594 = insertelement <2 x float> undef, float %593, i32 0
  %595 = icmp sgt i32 %589, 0
  %596 = select i1 %595, i32 %589, i32 0
  %597 = sitofp i32 %596 to float
  %598 = insertelement <2 x float> %594, float %597, i32 1
  %599 = load i32, i32* %3, align 4
  %600 = sitofp i32 %599 to float
  %601 = load i32, i32* %6, align 4
  %602 = sitofp i32 %601 to float
  %603 = fdiv float 0.000000e+00, %600
  %604 = fdiv float %579, %602
  %605 = fdiv float %115, %600
  %606 = fdiv float %583, %602
  %607 = insertelement <2 x float> undef, float %603, i32 0
  %608 = insertelement <2 x float> %607, float %604, i32 1
  %609 = fcmp ogt float %605, 0x3EB0000000000000
  %610 = select i1 %609, float %605, float 0.000000e+00
  %611 = insertelement <2 x float> undef, float %610, i32 0
  %612 = fcmp ogt float %606, 0x3EB0000000000000
  %613 = select i1 %612, float %606, float 0.000000e+00
  %614 = insertelement <2 x float> %611, float %613, i32 1
  %615 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %616 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %576, %615
  %617 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %615 to i64
  br i1 %616, label %618, label %633

618:                                              ; preds = %574
  %619 = bitcast %"class.cc::NinePatchGenerator::Patch"* %576 to <2 x float>*
  store <2 x float> %580, <2 x float>* %619, align 4
  %620 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %576, i64 0, i32 0, i32 1
  %621 = bitcast %"class.gfx::SizeF"* %620 to <2 x float>*
  store <2 x float> %584, <2 x float>* %621, align 4
  %622 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %576, i64 0, i32 1
  %623 = bitcast %"class.gfx::RectF"* %622 to <2 x float>*
  store <2 x float> %608, <2 x float>* %623, align 4
  %624 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %576, i64 0, i32 1, i32 1
  %625 = bitcast %"class.gfx::SizeF"* %624 to <2 x float>*
  store <2 x float> %614, <2 x float>* %625, align 4
  %626 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %576, i64 0, i32 2
  %627 = bitcast %"class.gfx::RectF"* %626 to <2 x float>*
  store <2 x float> %590, <2 x float>* %627, align 4
  %628 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %576, i64 0, i32 2, i32 1
  %629 = bitcast %"class.gfx::SizeF"* %628 to <2 x float>*
  store <2 x float> %598, <2 x float>* %629, align 4
  %630 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %576, i64 1
  %631 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %630 to i64
  %632 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %631, i64* %632, align 8
  br label %690

633:                                              ; preds = %574
  %634 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %576 to i64
  %635 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %636 = load i64, i64* %106, align 8
  %637 = sub i64 %634, %636
  %638 = sdiv exact i64 %637, 48
  %639 = add nsw i64 %638, 1
  %640 = icmp ugt i64 %639, 384307168202282325
  br i1 %640, label %641, label %643

641:                                              ; preds = %633
  %642 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %642) #10
  unreachable

643:                                              ; preds = %633
  %644 = sub i64 %617, %636
  %645 = sdiv exact i64 %644, 48
  %646 = icmp ult i64 %645, 192153584101141162
  br i1 %646, label %647, label %652

647:                                              ; preds = %643
  %648 = shl nsw i64 %645, 1
  %649 = icmp ult i64 %648, %639
  %650 = select i1 %649, i64 %639, i64 %648
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %657, label %652

652:                                              ; preds = %647, %643
  %653 = phi i64 [ %650, %647 ], [ 384307168202282325, %643 ]
  %654 = mul i64 %653, 48
  %655 = tail call i8* @_Znwm(i64 %654) #9
  %656 = bitcast i8* %655 to %"class.cc::NinePatchGenerator::Patch"*
  br label %657

657:                                              ; preds = %652, %647
  %658 = phi i64 [ %653, %652 ], [ 0, %647 ]
  %659 = phi %"class.cc::NinePatchGenerator::Patch"* [ %656, %652 ], [ null, %647 ]
  %660 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %638
  %661 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %658
  %662 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %661 to i64
  %663 = bitcast %"class.cc::NinePatchGenerator::Patch"* %660 to <2 x float>*
  store <2 x float> %580, <2 x float>* %663, align 4
  %664 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %638, i32 0, i32 1
  %665 = bitcast %"class.gfx::SizeF"* %664 to <2 x float>*
  store <2 x float> %584, <2 x float>* %665, align 4
  %666 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %638, i32 1
  %667 = bitcast %"class.gfx::RectF"* %666 to <2 x float>*
  store <2 x float> %608, <2 x float>* %667, align 4
  %668 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %638, i32 1, i32 1
  %669 = bitcast %"class.gfx::SizeF"* %668 to <2 x float>*
  store <2 x float> %614, <2 x float>* %669, align 4
  %670 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %638, i32 2
  %671 = bitcast %"class.gfx::RectF"* %670 to <2 x float>*
  store <2 x float> %590, <2 x float>* %671, align 4
  %672 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %659, i64 %638, i32 2, i32 1
  %673 = bitcast %"class.gfx::SizeF"* %672 to <2 x float>*
  store <2 x float> %598, <2 x float>* %673, align 4
  %674 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %660, i64 1
  %675 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %674 to i64
  %676 = sub i64 %575, %636
  %677 = sdiv exact i64 %676, -48
  %678 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %660, i64 %677
  %679 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %678 to i64
  %680 = icmp sgt i64 %676, 0
  br i1 %680, label %681, label %684

681:                                              ; preds = %657
  %682 = bitcast %"class.cc::NinePatchGenerator::Patch"* %678 to i8*
  %683 = inttoptr i64 %636 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %682, i8* align 4 %683, i64 %676, i1 false) #8
  br label %684

684:                                              ; preds = %681, %657
  store i64 %679, i64* %106, align 8
  store i64 %675, i64* %635, align 8
  store i64 %662, i64* %105, align 8
  %685 = icmp eq i64 %636, 0
  br i1 %685, label %690, label %686

686:                                              ; preds = %684
  %687 = inttoptr i64 %636 to i8*
  tail call void @_ZdlPv(i8* %687) #9
  %688 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %689 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %688 to i64
  br label %690

690:                                              ; preds = %618, %684, %686
  %691 = phi i64 [ %631, %618 ], [ %675, %684 ], [ %689, %686 ]
  %692 = phi %"class.cc::NinePatchGenerator::Patch"* [ %630, %618 ], [ %674, %684 ], [ %688, %686 ]
  %693 = load i32, i32* %34, align 4
  %694 = load i32, i32* %36, align 4
  %695 = sitofp i32 %693 to float
  %696 = insertelement <2 x float> %461, float %695, i32 1
  %697 = icmp sgt i32 %694, 0
  %698 = select i1 %697, i32 %694, i32 0
  %699 = sitofp i32 %698 to float
  %700 = insertelement <2 x float> %466, float %699, i32 1
  %701 = load i32, i32* %41, align 4
  %702 = load i32, i32* %43, align 4
  %703 = add nsw i32 %702, %701
  %704 = sitofp i32 %703 to float
  %705 = sub nsw i32 %474, %703
  %706 = insertelement <2 x float> undef, float %704, i32 0
  %707 = insertelement <2 x float> %706, float %588, i32 1
  %708 = icmp sgt i32 %705, 0
  %709 = select i1 %708, i32 %705, i32 0
  %710 = sitofp i32 %709 to float
  %711 = insertelement <2 x float> undef, float %710, i32 0
  %712 = insertelement <2 x float> %711, float %597, i32 1
  %713 = load i32, i32* %3, align 4
  %714 = sitofp i32 %713 to float
  %715 = load i32, i32* %6, align 4
  %716 = sitofp i32 %715 to float
  %717 = fdiv float %459, %714
  %718 = fdiv float %695, %716
  %719 = fdiv float %465, %714
  %720 = fdiv float %699, %716
  %721 = insertelement <2 x float> undef, float %717, i32 0
  %722 = insertelement <2 x float> %721, float %718, i32 1
  %723 = fcmp ogt float %719, 0x3EB0000000000000
  %724 = select i1 %723, float %719, float 0.000000e+00
  %725 = insertelement <2 x float> undef, float %724, i32 0
  %726 = fcmp ogt float %720, 0x3EB0000000000000
  %727 = select i1 %726, float %720, float 0.000000e+00
  %728 = insertelement <2 x float> %725, float %727, i32 1
  %729 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %730 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %692, %729
  %731 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %729 to i64
  br i1 %730, label %732, label %747

732:                                              ; preds = %690
  %733 = bitcast %"class.cc::NinePatchGenerator::Patch"* %692 to <2 x float>*
  store <2 x float> %696, <2 x float>* %733, align 4
  %734 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %692, i64 0, i32 0, i32 1
  %735 = bitcast %"class.gfx::SizeF"* %734 to <2 x float>*
  store <2 x float> %700, <2 x float>* %735, align 4
  %736 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %692, i64 0, i32 1
  %737 = bitcast %"class.gfx::RectF"* %736 to <2 x float>*
  store <2 x float> %722, <2 x float>* %737, align 4
  %738 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %692, i64 0, i32 1, i32 1
  %739 = bitcast %"class.gfx::SizeF"* %738 to <2 x float>*
  store <2 x float> %728, <2 x float>* %739, align 4
  %740 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %692, i64 0, i32 2
  %741 = bitcast %"class.gfx::RectF"* %740 to <2 x float>*
  store <2 x float> %707, <2 x float>* %741, align 4
  %742 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %692, i64 0, i32 2, i32 1
  %743 = bitcast %"class.gfx::SizeF"* %742 to <2 x float>*
  store <2 x float> %712, <2 x float>* %743, align 4
  %744 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %692, i64 1
  %745 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %744 to i64
  %746 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %745, i64* %746, align 8
  br label %804

747:                                              ; preds = %690
  %748 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %692 to i64
  %749 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %750 = load i64, i64* %106, align 8
  %751 = sub i64 %748, %750
  %752 = sdiv exact i64 %751, 48
  %753 = add nsw i64 %752, 1
  %754 = icmp ugt i64 %753, 384307168202282325
  br i1 %754, label %755, label %757

755:                                              ; preds = %747
  %756 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %756) #10
  unreachable

757:                                              ; preds = %747
  %758 = sub i64 %731, %750
  %759 = sdiv exact i64 %758, 48
  %760 = icmp ult i64 %759, 192153584101141162
  br i1 %760, label %761, label %766

761:                                              ; preds = %757
  %762 = shl nsw i64 %759, 1
  %763 = icmp ult i64 %762, %753
  %764 = select i1 %763, i64 %753, i64 %762
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %771, label %766

766:                                              ; preds = %761, %757
  %767 = phi i64 [ %764, %761 ], [ 384307168202282325, %757 ]
  %768 = mul i64 %767, 48
  %769 = tail call i8* @_Znwm(i64 %768) #9
  %770 = bitcast i8* %769 to %"class.cc::NinePatchGenerator::Patch"*
  br label %771

771:                                              ; preds = %766, %761
  %772 = phi i64 [ %767, %766 ], [ 0, %761 ]
  %773 = phi %"class.cc::NinePatchGenerator::Patch"* [ %770, %766 ], [ null, %761 ]
  %774 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %752
  %775 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %772
  %776 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %775 to i64
  %777 = bitcast %"class.cc::NinePatchGenerator::Patch"* %774 to <2 x float>*
  store <2 x float> %696, <2 x float>* %777, align 4
  %778 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %752, i32 0, i32 1
  %779 = bitcast %"class.gfx::SizeF"* %778 to <2 x float>*
  store <2 x float> %700, <2 x float>* %779, align 4
  %780 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %752, i32 1
  %781 = bitcast %"class.gfx::RectF"* %780 to <2 x float>*
  store <2 x float> %722, <2 x float>* %781, align 4
  %782 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %752, i32 1, i32 1
  %783 = bitcast %"class.gfx::SizeF"* %782 to <2 x float>*
  store <2 x float> %728, <2 x float>* %783, align 4
  %784 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %752, i32 2
  %785 = bitcast %"class.gfx::RectF"* %784 to <2 x float>*
  store <2 x float> %707, <2 x float>* %785, align 4
  %786 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %773, i64 %752, i32 2, i32 1
  %787 = bitcast %"class.gfx::SizeF"* %786 to <2 x float>*
  store <2 x float> %712, <2 x float>* %787, align 4
  %788 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %774, i64 1
  %789 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %788 to i64
  %790 = sub i64 %691, %750
  %791 = sdiv exact i64 %790, -48
  %792 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %774, i64 %791
  %793 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %792 to i64
  %794 = icmp sgt i64 %790, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %771
  %796 = bitcast %"class.cc::NinePatchGenerator::Patch"* %792 to i8*
  %797 = inttoptr i64 %750 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %796, i8* align 4 %797, i64 %790, i1 false) #8
  br label %798

798:                                              ; preds = %795, %771
  store i64 %793, i64* %106, align 8
  store i64 %789, i64* %749, align 8
  store i64 %776, i64* %105, align 8
  %799 = icmp eq i64 %750, 0
  br i1 %799, label %804, label %800

800:                                              ; preds = %798
  %801 = inttoptr i64 %750 to i8*
  tail call void @_ZdlPv(i8* %801) #9
  %802 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %803 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %802 to i64
  br label %804

804:                                              ; preds = %732, %798, %800
  %805 = phi i64 [ %745, %732 ], [ %789, %798 ], [ %803, %800 ]
  %806 = phi %"class.cc::NinePatchGenerator::Patch"* [ %744, %732 ], [ %788, %798 ], [ %802, %800 ]
  %807 = load i32, i32* %34, align 4
  %808 = load i32, i32* %36, align 4
  %809 = add nsw i32 %808, %807
  %810 = fptosi float %8 to i32
  %811 = sitofp i32 %809 to float
  %812 = sub nsw i32 %810, %809
  %813 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %811, i32 1
  %814 = icmp sgt i32 %812, 0
  %815 = select i1 %814, i32 %812, i32 0
  %816 = sitofp i32 %815 to float
  %817 = insertelement <2 x float> %116, float %816, i32 1
  %818 = load i32, i32* %41, align 4
  %819 = fptosi float %14 to i32
  %820 = sitofp i32 %587 to float
  %821 = sub nsw i32 %819, %587
  %822 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %820, i32 1
  %823 = icmp sgt i32 %818, 0
  %824 = select i1 %823, i32 %818, i32 0
  %825 = sitofp i32 %824 to float
  %826 = insertelement <2 x float> undef, float %825, i32 0
  %827 = icmp sgt i32 %821, 0
  %828 = select i1 %827, i32 %821, i32 0
  %829 = sitofp i32 %828 to float
  %830 = insertelement <2 x float> %826, float %829, i32 1
  %831 = load i32, i32* %3, align 4
  %832 = sitofp i32 %831 to float
  %833 = load i32, i32* %6, align 4
  %834 = sitofp i32 %833 to float
  %835 = fdiv float 0.000000e+00, %832
  %836 = fdiv float %811, %834
  %837 = fdiv float %115, %832
  %838 = fdiv float %816, %834
  %839 = insertelement <2 x float> undef, float %835, i32 0
  %840 = insertelement <2 x float> %839, float %836, i32 1
  %841 = fcmp ogt float %837, 0x3EB0000000000000
  %842 = select i1 %841, float %837, float 0.000000e+00
  %843 = insertelement <2 x float> undef, float %842, i32 0
  %844 = fcmp ogt float %838, 0x3EB0000000000000
  %845 = select i1 %844, float %838, float 0.000000e+00
  %846 = insertelement <2 x float> %843, float %845, i32 1
  %847 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %848 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %806, %847
  %849 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %847 to i64
  br i1 %848, label %850, label %865

850:                                              ; preds = %804
  %851 = bitcast %"class.cc::NinePatchGenerator::Patch"* %806 to <2 x float>*
  store <2 x float> %813, <2 x float>* %851, align 4
  %852 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %806, i64 0, i32 0, i32 1
  %853 = bitcast %"class.gfx::SizeF"* %852 to <2 x float>*
  store <2 x float> %817, <2 x float>* %853, align 4
  %854 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %806, i64 0, i32 1
  %855 = bitcast %"class.gfx::RectF"* %854 to <2 x float>*
  store <2 x float> %840, <2 x float>* %855, align 4
  %856 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %806, i64 0, i32 1, i32 1
  %857 = bitcast %"class.gfx::SizeF"* %856 to <2 x float>*
  store <2 x float> %846, <2 x float>* %857, align 4
  %858 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %806, i64 0, i32 2
  %859 = bitcast %"class.gfx::RectF"* %858 to <2 x float>*
  store <2 x float> %822, <2 x float>* %859, align 4
  %860 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %806, i64 0, i32 2, i32 1
  %861 = bitcast %"class.gfx::SizeF"* %860 to <2 x float>*
  store <2 x float> %830, <2 x float>* %861, align 4
  %862 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %806, i64 1
  %863 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %862 to i64
  %864 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %863, i64* %864, align 8
  br label %922

865:                                              ; preds = %804
  %866 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %806 to i64
  %867 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %868 = load i64, i64* %106, align 8
  %869 = sub i64 %866, %868
  %870 = sdiv exact i64 %869, 48
  %871 = add nsw i64 %870, 1
  %872 = icmp ugt i64 %871, 384307168202282325
  br i1 %872, label %873, label %875

873:                                              ; preds = %865
  %874 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %874) #10
  unreachable

875:                                              ; preds = %865
  %876 = sub i64 %849, %868
  %877 = sdiv exact i64 %876, 48
  %878 = icmp ult i64 %877, 192153584101141162
  br i1 %878, label %879, label %884

879:                                              ; preds = %875
  %880 = shl nsw i64 %877, 1
  %881 = icmp ult i64 %880, %871
  %882 = select i1 %881, i64 %871, i64 %880
  %883 = icmp eq i64 %882, 0
  br i1 %883, label %889, label %884

884:                                              ; preds = %879, %875
  %885 = phi i64 [ %882, %879 ], [ 384307168202282325, %875 ]
  %886 = mul i64 %885, 48
  %887 = tail call i8* @_Znwm(i64 %886) #9
  %888 = bitcast i8* %887 to %"class.cc::NinePatchGenerator::Patch"*
  br label %889

889:                                              ; preds = %884, %879
  %890 = phi i64 [ %885, %884 ], [ 0, %879 ]
  %891 = phi %"class.cc::NinePatchGenerator::Patch"* [ %888, %884 ], [ null, %879 ]
  %892 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %870
  %893 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %890
  %894 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %893 to i64
  %895 = bitcast %"class.cc::NinePatchGenerator::Patch"* %892 to <2 x float>*
  store <2 x float> %813, <2 x float>* %895, align 4
  %896 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %870, i32 0, i32 1
  %897 = bitcast %"class.gfx::SizeF"* %896 to <2 x float>*
  store <2 x float> %817, <2 x float>* %897, align 4
  %898 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %870, i32 1
  %899 = bitcast %"class.gfx::RectF"* %898 to <2 x float>*
  store <2 x float> %840, <2 x float>* %899, align 4
  %900 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %870, i32 1, i32 1
  %901 = bitcast %"class.gfx::SizeF"* %900 to <2 x float>*
  store <2 x float> %846, <2 x float>* %901, align 4
  %902 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %870, i32 2
  %903 = bitcast %"class.gfx::RectF"* %902 to <2 x float>*
  store <2 x float> %822, <2 x float>* %903, align 4
  %904 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %891, i64 %870, i32 2, i32 1
  %905 = bitcast %"class.gfx::SizeF"* %904 to <2 x float>*
  store <2 x float> %830, <2 x float>* %905, align 4
  %906 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %892, i64 1
  %907 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %906 to i64
  %908 = sub i64 %805, %868
  %909 = sdiv exact i64 %908, -48
  %910 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %892, i64 %909
  %911 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %910 to i64
  %912 = icmp sgt i64 %908, 0
  br i1 %912, label %913, label %916

913:                                              ; preds = %889
  %914 = bitcast %"class.cc::NinePatchGenerator::Patch"* %910 to i8*
  %915 = inttoptr i64 %868 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %914, i8* align 4 %915, i64 %908, i1 false) #8
  br label %916

916:                                              ; preds = %913, %889
  store i64 %911, i64* %106, align 8
  store i64 %907, i64* %867, align 8
  store i64 %894, i64* %105, align 8
  %917 = icmp eq i64 %868, 0
  br i1 %917, label %922, label %918

918:                                              ; preds = %916
  %919 = inttoptr i64 %868 to i8*
  tail call void @_ZdlPv(i8* %919) #9
  %920 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %921 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %920 to i64
  br label %922

922:                                              ; preds = %850, %916, %918
  %923 = phi i64 [ %863, %850 ], [ %907, %916 ], [ %921, %918 ]
  %924 = phi %"class.cc::NinePatchGenerator::Patch"* [ %862, %850 ], [ %906, %916 ], [ %920, %918 ]
  %925 = fadd float %84, %92
  %926 = fptosi float %925 to i32
  %927 = load i32, i32* %27, align 4
  %928 = sitofp i32 %926 to float
  %929 = sub nsw i32 %927, %112
  %930 = sub nsw i32 %810, %926
  %931 = insertelement <2 x float> %160, float %928, i32 1
  %932 = icmp sgt i32 %929, 0
  %933 = select i1 %932, i32 %929, i32 0
  %934 = sitofp i32 %933 to float
  %935 = insertelement <2 x float> undef, float %934, i32 0
  %936 = icmp sgt i32 %930, 0
  %937 = select i1 %936, i32 %930, i32 0
  %938 = sitofp i32 %937 to float
  %939 = insertelement <2 x float> %935, float %938, i32 1
  %940 = load i32, i32* %41, align 4
  %941 = load i32, i32* %48, align 4
  %942 = load i32, i32* %50, align 4
  %943 = add nsw i32 %942, %941
  %944 = sitofp i32 %940 to float
  %945 = sitofp i32 %943 to float
  %946 = sub nsw i32 %168, %940
  %947 = sub nsw i32 %819, %943
  %948 = insertelement <2 x float> undef, float %944, i32 0
  %949 = insertelement <2 x float> %948, float %945, i32 1
  %950 = icmp sgt i32 %946, 0
  %951 = select i1 %950, i32 %946, i32 0
  %952 = sitofp i32 %951 to float
  %953 = insertelement <2 x float> undef, float %952, i32 0
  %954 = icmp sgt i32 %947, 0
  %955 = select i1 %954, i32 %947, i32 0
  %956 = sitofp i32 %955 to float
  %957 = insertelement <2 x float> %953, float %956, i32 1
  %958 = load i32, i32* %3, align 4
  %959 = sitofp i32 %958 to float
  %960 = load i32, i32* %6, align 4
  %961 = sitofp i32 %960 to float
  %962 = fdiv float %158, %959
  %963 = fdiv float %928, %961
  %964 = fdiv float %934, %959
  %965 = fdiv float %938, %961
  %966 = insertelement <2 x float> undef, float %962, i32 0
  %967 = insertelement <2 x float> %966, float %963, i32 1
  %968 = fcmp ogt float %964, 0x3EB0000000000000
  %969 = select i1 %968, float %964, float 0.000000e+00
  %970 = insertelement <2 x float> undef, float %969, i32 0
  %971 = fcmp ogt float %965, 0x3EB0000000000000
  %972 = select i1 %971, float %965, float 0.000000e+00
  %973 = insertelement <2 x float> %970, float %972, i32 1
  %974 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %975 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %924, %974
  %976 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %974 to i64
  br i1 %975, label %977, label %992

977:                                              ; preds = %922
  %978 = bitcast %"class.cc::NinePatchGenerator::Patch"* %924 to <2 x float>*
  store <2 x float> %931, <2 x float>* %978, align 4
  %979 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %924, i64 0, i32 0, i32 1
  %980 = bitcast %"class.gfx::SizeF"* %979 to <2 x float>*
  store <2 x float> %939, <2 x float>* %980, align 4
  %981 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %924, i64 0, i32 1
  %982 = bitcast %"class.gfx::RectF"* %981 to <2 x float>*
  store <2 x float> %967, <2 x float>* %982, align 4
  %983 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %924, i64 0, i32 1, i32 1
  %984 = bitcast %"class.gfx::SizeF"* %983 to <2 x float>*
  store <2 x float> %973, <2 x float>* %984, align 4
  %985 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %924, i64 0, i32 2
  %986 = bitcast %"class.gfx::RectF"* %985 to <2 x float>*
  store <2 x float> %949, <2 x float>* %986, align 4
  %987 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %924, i64 0, i32 2, i32 1
  %988 = bitcast %"class.gfx::SizeF"* %987 to <2 x float>*
  store <2 x float> %957, <2 x float>* %988, align 4
  %989 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %924, i64 1
  %990 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %989 to i64
  %991 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %990, i64* %991, align 8
  br label %1049

992:                                              ; preds = %922
  %993 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %924 to i64
  %994 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %995 = load i64, i64* %106, align 8
  %996 = sub i64 %993, %995
  %997 = sdiv exact i64 %996, 48
  %998 = add nsw i64 %997, 1
  %999 = icmp ugt i64 %998, 384307168202282325
  br i1 %999, label %1000, label %1002

1000:                                             ; preds = %992
  %1001 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1001) #10
  unreachable

1002:                                             ; preds = %992
  %1003 = sub i64 %976, %995
  %1004 = sdiv exact i64 %1003, 48
  %1005 = icmp ult i64 %1004, 192153584101141162
  br i1 %1005, label %1006, label %1011

1006:                                             ; preds = %1002
  %1007 = shl nsw i64 %1004, 1
  %1008 = icmp ult i64 %1007, %998
  %1009 = select i1 %1008, i64 %998, i64 %1007
  %1010 = icmp eq i64 %1009, 0
  br i1 %1010, label %1016, label %1011

1011:                                             ; preds = %1006, %1002
  %1012 = phi i64 [ %1009, %1006 ], [ 384307168202282325, %1002 ]
  %1013 = mul i64 %1012, 48
  %1014 = tail call i8* @_Znwm(i64 %1013) #9
  %1015 = bitcast i8* %1014 to %"class.cc::NinePatchGenerator::Patch"*
  br label %1016

1016:                                             ; preds = %1011, %1006
  %1017 = phi i64 [ %1012, %1011 ], [ 0, %1006 ]
  %1018 = phi %"class.cc::NinePatchGenerator::Patch"* [ %1015, %1011 ], [ null, %1006 ]
  %1019 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %997
  %1020 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %1017
  %1021 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1020 to i64
  %1022 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1019 to <2 x float>*
  store <2 x float> %931, <2 x float>* %1022, align 4
  %1023 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %997, i32 0, i32 1
  %1024 = bitcast %"class.gfx::SizeF"* %1023 to <2 x float>*
  store <2 x float> %939, <2 x float>* %1024, align 4
  %1025 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %997, i32 1
  %1026 = bitcast %"class.gfx::RectF"* %1025 to <2 x float>*
  store <2 x float> %967, <2 x float>* %1026, align 4
  %1027 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %997, i32 1, i32 1
  %1028 = bitcast %"class.gfx::SizeF"* %1027 to <2 x float>*
  store <2 x float> %973, <2 x float>* %1028, align 4
  %1029 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %997, i32 2
  %1030 = bitcast %"class.gfx::RectF"* %1029 to <2 x float>*
  store <2 x float> %949, <2 x float>* %1030, align 4
  %1031 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1018, i64 %997, i32 2, i32 1
  %1032 = bitcast %"class.gfx::SizeF"* %1031 to <2 x float>*
  store <2 x float> %957, <2 x float>* %1032, align 4
  %1033 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1019, i64 1
  %1034 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1033 to i64
  %1035 = sub i64 %923, %995
  %1036 = sdiv exact i64 %1035, -48
  %1037 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1019, i64 %1036
  %1038 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1037 to i64
  %1039 = icmp sgt i64 %1035, 0
  br i1 %1039, label %1040, label %1043

1040:                                             ; preds = %1016
  %1041 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1037 to i8*
  %1042 = inttoptr i64 %995 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1041, i8* align 4 %1042, i64 %1035, i1 false) #8
  br label %1043

1043:                                             ; preds = %1040, %1016
  store i64 %1038, i64* %106, align 8
  store i64 %1034, i64* %994, align 8
  store i64 %1021, i64* %105, align 8
  %1044 = icmp eq i64 %995, 0
  br i1 %1044, label %1049, label %1045

1045:                                             ; preds = %1043
  %1046 = inttoptr i64 %995 to i8*
  tail call void @_ZdlPv(i8* %1046) #9
  %1047 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %1048 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1047 to i64
  br label %1049

1049:                                             ; preds = %977, %1043, %1045
  %1050 = phi i64 [ %990, %977 ], [ %1034, %1043 ], [ %1048, %1045 ]
  %1051 = phi %"class.cc::NinePatchGenerator::Patch"* [ %989, %977 ], [ %1033, %1043 ], [ %1047, %1045 ]
  %1052 = load i32, i32* %27, align 4
  %1053 = load i32, i32* %29, align 4
  %1054 = sitofp i32 %1052 to float
  %1055 = insertelement <2 x float> undef, float %1054, i32 0
  %1056 = insertelement <2 x float> %1055, float %928, i32 1
  %1057 = icmp sgt i32 %1053, 0
  %1058 = select i1 %1057, i32 %1053, i32 0
  %1059 = sitofp i32 %1058 to float
  %1060 = insertelement <2 x float> undef, float %1059, i32 0
  %1061 = insertelement <2 x float> %1060, float %938, i32 1
  %1062 = load i32, i32* %48, align 4
  %1063 = load i32, i32* %50, align 4
  %1064 = add nsw i32 %1063, %1062
  %1065 = sitofp i32 %1064 to float
  %1066 = sub nsw i32 %819, %1064
  %1067 = insertelement <2 x float> %229, float %1065, i32 1
  %1068 = icmp sgt i32 %1066, 0
  %1069 = select i1 %1068, i32 %1066, i32 0
  %1070 = sitofp i32 %1069 to float
  %1071 = insertelement <2 x float> %234, float %1070, i32 1
  %1072 = load i32, i32* %3, align 4
  %1073 = sitofp i32 %1072 to float
  %1074 = load i32, i32* %6, align 4
  %1075 = sitofp i32 %1074 to float
  %1076 = fdiv float %1054, %1073
  %1077 = fdiv float %928, %1075
  %1078 = fdiv float %1059, %1073
  %1079 = fdiv float %938, %1075
  %1080 = insertelement <2 x float> undef, float %1076, i32 0
  %1081 = insertelement <2 x float> %1080, float %1077, i32 1
  %1082 = fcmp ogt float %1078, 0x3EB0000000000000
  %1083 = select i1 %1082, float %1078, float 0.000000e+00
  %1084 = insertelement <2 x float> undef, float %1083, i32 0
  %1085 = fcmp ogt float %1079, 0x3EB0000000000000
  %1086 = select i1 %1085, float %1079, float 0.000000e+00
  %1087 = insertelement <2 x float> %1084, float %1086, i32 1
  %1088 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %1089 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %1051, %1088
  %1090 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1088 to i64
  br i1 %1089, label %1091, label %1106

1091:                                             ; preds = %1049
  %1092 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1051 to <2 x float>*
  store <2 x float> %1056, <2 x float>* %1092, align 4
  %1093 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1051, i64 0, i32 0, i32 1
  %1094 = bitcast %"class.gfx::SizeF"* %1093 to <2 x float>*
  store <2 x float> %1061, <2 x float>* %1094, align 4
  %1095 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1051, i64 0, i32 1
  %1096 = bitcast %"class.gfx::RectF"* %1095 to <2 x float>*
  store <2 x float> %1081, <2 x float>* %1096, align 4
  %1097 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1051, i64 0, i32 1, i32 1
  %1098 = bitcast %"class.gfx::SizeF"* %1097 to <2 x float>*
  store <2 x float> %1087, <2 x float>* %1098, align 4
  %1099 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1051, i64 0, i32 2
  %1100 = bitcast %"class.gfx::RectF"* %1099 to <2 x float>*
  store <2 x float> %1067, <2 x float>* %1100, align 4
  %1101 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1051, i64 0, i32 2, i32 1
  %1102 = bitcast %"class.gfx::SizeF"* %1101 to <2 x float>*
  store <2 x float> %1071, <2 x float>* %1102, align 4
  %1103 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1051, i64 1
  %1104 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1103 to i64
  %1105 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %1104, i64* %1105, align 8
  br label %1163

1106:                                             ; preds = %1049
  %1107 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1051 to i64
  %1108 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %1109 = load i64, i64* %106, align 8
  %1110 = sub i64 %1107, %1109
  %1111 = sdiv exact i64 %1110, 48
  %1112 = add nsw i64 %1111, 1
  %1113 = icmp ugt i64 %1112, 384307168202282325
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1106
  %1115 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1115) #10
  unreachable

1116:                                             ; preds = %1106
  %1117 = sub i64 %1090, %1109
  %1118 = sdiv exact i64 %1117, 48
  %1119 = icmp ult i64 %1118, 192153584101141162
  br i1 %1119, label %1120, label %1125

1120:                                             ; preds = %1116
  %1121 = shl nsw i64 %1118, 1
  %1122 = icmp ult i64 %1121, %1112
  %1123 = select i1 %1122, i64 %1112, i64 %1121
  %1124 = icmp eq i64 %1123, 0
  br i1 %1124, label %1130, label %1125

1125:                                             ; preds = %1120, %1116
  %1126 = phi i64 [ %1123, %1120 ], [ 384307168202282325, %1116 ]
  %1127 = mul i64 %1126, 48
  %1128 = tail call i8* @_Znwm(i64 %1127) #9
  %1129 = bitcast i8* %1128 to %"class.cc::NinePatchGenerator::Patch"*
  br label %1130

1130:                                             ; preds = %1125, %1120
  %1131 = phi i64 [ %1126, %1125 ], [ 0, %1120 ]
  %1132 = phi %"class.cc::NinePatchGenerator::Patch"* [ %1129, %1125 ], [ null, %1120 ]
  %1133 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1111
  %1134 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1131
  %1135 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1134 to i64
  %1136 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1133 to <2 x float>*
  store <2 x float> %1056, <2 x float>* %1136, align 4
  %1137 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1111, i32 0, i32 1
  %1138 = bitcast %"class.gfx::SizeF"* %1137 to <2 x float>*
  store <2 x float> %1061, <2 x float>* %1138, align 4
  %1139 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1111, i32 1
  %1140 = bitcast %"class.gfx::RectF"* %1139 to <2 x float>*
  store <2 x float> %1081, <2 x float>* %1140, align 4
  %1141 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1111, i32 1, i32 1
  %1142 = bitcast %"class.gfx::SizeF"* %1141 to <2 x float>*
  store <2 x float> %1087, <2 x float>* %1142, align 4
  %1143 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1111, i32 2
  %1144 = bitcast %"class.gfx::RectF"* %1143 to <2 x float>*
  store <2 x float> %1067, <2 x float>* %1144, align 4
  %1145 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1132, i64 %1111, i32 2, i32 1
  %1146 = bitcast %"class.gfx::SizeF"* %1145 to <2 x float>*
  store <2 x float> %1071, <2 x float>* %1146, align 4
  %1147 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1133, i64 1
  %1148 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1147 to i64
  %1149 = sub i64 %1050, %1109
  %1150 = sdiv exact i64 %1149, -48
  %1151 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1133, i64 %1150
  %1152 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1151 to i64
  %1153 = icmp sgt i64 %1149, 0
  br i1 %1153, label %1154, label %1157

1154:                                             ; preds = %1130
  %1155 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1151 to i8*
  %1156 = inttoptr i64 %1109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1155, i8* align 4 %1156, i64 %1149, i1 false) #8
  br label %1157

1157:                                             ; preds = %1154, %1130
  store i64 %1152, i64* %106, align 8
  store i64 %1148, i64* %1108, align 8
  store i64 %1135, i64* %105, align 8
  %1158 = icmp eq i64 %1109, 0
  br i1 %1158, label %1163, label %1159

1159:                                             ; preds = %1157
  %1160 = inttoptr i64 %1109 to i8*
  tail call void @_ZdlPv(i8* %1160) #9
  %1161 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %1162 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1161 to i64
  br label %1163

1163:                                             ; preds = %1091, %1157, %1159
  %1164 = phi i64 [ %1104, %1091 ], [ %1148, %1157 ], [ %1162, %1159 ]
  %1165 = phi %"class.cc::NinePatchGenerator::Patch"* [ %1103, %1091 ], [ %1147, %1157 ], [ %1161, %1159 ]
  %1166 = load i32, i32* %27, align 4
  %1167 = load i32, i32* %29, align 4
  %1168 = add nsw i32 %1167, %1166
  %1169 = sitofp i32 %1168 to float
  %1170 = sub nsw i32 %338, %1168
  %1171 = insertelement <2 x float> undef, float %1169, i32 0
  %1172 = insertelement <2 x float> %1171, float %928, i32 1
  %1173 = icmp sgt i32 %1170, 0
  %1174 = select i1 %1173, i32 %1170, i32 0
  %1175 = sitofp i32 %1174 to float
  %1176 = insertelement <2 x float> undef, float %1175, i32 0
  %1177 = insertelement <2 x float> %1176, float %938, i32 1
  %1178 = load i32, i32* %48, align 4
  %1179 = load i32, i32* %50, align 4
  %1180 = add nsw i32 %1179, %1178
  %1181 = load i32, i32* %41, align 4
  %1182 = load i32, i32* %43, align 4
  %1183 = sitofp i32 %1180 to float
  %1184 = sub i32 %1181, %225
  %1185 = add i32 %1184, %1182
  %1186 = sub nsw i32 %819, %1180
  %1187 = insertelement <2 x float> %353, float %1183, i32 1
  %1188 = icmp sgt i32 %1185, 0
  %1189 = select i1 %1188, i32 %1185, i32 0
  %1190 = sitofp i32 %1189 to float
  %1191 = insertelement <2 x float> undef, float %1190, i32 0
  %1192 = icmp sgt i32 %1186, 0
  %1193 = select i1 %1192, i32 %1186, i32 0
  %1194 = sitofp i32 %1193 to float
  %1195 = insertelement <2 x float> %1191, float %1194, i32 1
  %1196 = load i32, i32* %3, align 4
  %1197 = sitofp i32 %1196 to float
  %1198 = load i32, i32* %6, align 4
  %1199 = sitofp i32 %1198 to float
  %1200 = fdiv float %1169, %1197
  %1201 = fdiv float %928, %1199
  %1202 = fdiv float %1175, %1197
  %1203 = fdiv float %938, %1199
  %1204 = insertelement <2 x float> undef, float %1200, i32 0
  %1205 = insertelement <2 x float> %1204, float %1201, i32 1
  %1206 = fcmp ogt float %1202, 0x3EB0000000000000
  %1207 = select i1 %1206, float %1202, float 0.000000e+00
  %1208 = insertelement <2 x float> undef, float %1207, i32 0
  %1209 = fcmp ogt float %1203, 0x3EB0000000000000
  %1210 = select i1 %1209, float %1203, float 0.000000e+00
  %1211 = insertelement <2 x float> %1208, float %1210, i32 1
  %1212 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %1213 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %1165, %1212
  %1214 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1212 to i64
  br i1 %1213, label %1215, label %1230

1215:                                             ; preds = %1163
  %1216 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1165 to <2 x float>*
  store <2 x float> %1172, <2 x float>* %1216, align 4
  %1217 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1165, i64 0, i32 0, i32 1
  %1218 = bitcast %"class.gfx::SizeF"* %1217 to <2 x float>*
  store <2 x float> %1177, <2 x float>* %1218, align 4
  %1219 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1165, i64 0, i32 1
  %1220 = bitcast %"class.gfx::RectF"* %1219 to <2 x float>*
  store <2 x float> %1205, <2 x float>* %1220, align 4
  %1221 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1165, i64 0, i32 1, i32 1
  %1222 = bitcast %"class.gfx::SizeF"* %1221 to <2 x float>*
  store <2 x float> %1211, <2 x float>* %1222, align 4
  %1223 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1165, i64 0, i32 2
  %1224 = bitcast %"class.gfx::RectF"* %1223 to <2 x float>*
  store <2 x float> %1187, <2 x float>* %1224, align 4
  %1225 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1165, i64 0, i32 2, i32 1
  %1226 = bitcast %"class.gfx::SizeF"* %1225 to <2 x float>*
  store <2 x float> %1195, <2 x float>* %1226, align 4
  %1227 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1165, i64 1
  %1228 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1227 to i64
  %1229 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %1228, i64* %1229, align 8
  br label %1287

1230:                                             ; preds = %1163
  %1231 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1165 to i64
  %1232 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %1233 = load i64, i64* %106, align 8
  %1234 = sub i64 %1231, %1233
  %1235 = sdiv exact i64 %1234, 48
  %1236 = add nsw i64 %1235, 1
  %1237 = icmp ugt i64 %1236, 384307168202282325
  br i1 %1237, label %1238, label %1240

1238:                                             ; preds = %1230
  %1239 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1239) #10
  unreachable

1240:                                             ; preds = %1230
  %1241 = sub i64 %1214, %1233
  %1242 = sdiv exact i64 %1241, 48
  %1243 = icmp ult i64 %1242, 192153584101141162
  br i1 %1243, label %1244, label %1249

1244:                                             ; preds = %1240
  %1245 = shl nsw i64 %1242, 1
  %1246 = icmp ult i64 %1245, %1236
  %1247 = select i1 %1246, i64 %1236, i64 %1245
  %1248 = icmp eq i64 %1247, 0
  br i1 %1248, label %1254, label %1249

1249:                                             ; preds = %1244, %1240
  %1250 = phi i64 [ %1247, %1244 ], [ 384307168202282325, %1240 ]
  %1251 = mul i64 %1250, 48
  %1252 = tail call i8* @_Znwm(i64 %1251) #9
  %1253 = bitcast i8* %1252 to %"class.cc::NinePatchGenerator::Patch"*
  br label %1254

1254:                                             ; preds = %1249, %1244
  %1255 = phi i64 [ %1250, %1249 ], [ 0, %1244 ]
  %1256 = phi %"class.cc::NinePatchGenerator::Patch"* [ %1253, %1249 ], [ null, %1244 ]
  %1257 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1235
  %1258 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1255
  %1259 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1258 to i64
  %1260 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1257 to <2 x float>*
  store <2 x float> %1172, <2 x float>* %1260, align 4
  %1261 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1235, i32 0, i32 1
  %1262 = bitcast %"class.gfx::SizeF"* %1261 to <2 x float>*
  store <2 x float> %1177, <2 x float>* %1262, align 4
  %1263 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1235, i32 1
  %1264 = bitcast %"class.gfx::RectF"* %1263 to <2 x float>*
  store <2 x float> %1205, <2 x float>* %1264, align 4
  %1265 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1235, i32 1, i32 1
  %1266 = bitcast %"class.gfx::SizeF"* %1265 to <2 x float>*
  store <2 x float> %1211, <2 x float>* %1266, align 4
  %1267 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1235, i32 2
  %1268 = bitcast %"class.gfx::RectF"* %1267 to <2 x float>*
  store <2 x float> %1187, <2 x float>* %1268, align 4
  %1269 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1256, i64 %1235, i32 2, i32 1
  %1270 = bitcast %"class.gfx::SizeF"* %1269 to <2 x float>*
  store <2 x float> %1195, <2 x float>* %1270, align 4
  %1271 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1257, i64 1
  %1272 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1271 to i64
  %1273 = sub i64 %1164, %1233
  %1274 = sdiv exact i64 %1273, -48
  %1275 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1257, i64 %1274
  %1276 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1275 to i64
  %1277 = icmp sgt i64 %1273, 0
  br i1 %1277, label %1278, label %1281

1278:                                             ; preds = %1254
  %1279 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1275 to i8*
  %1280 = inttoptr i64 %1233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1279, i8* align 4 %1280, i64 %1273, i1 false) #8
  br label %1281

1281:                                             ; preds = %1278, %1254
  store i64 %1276, i64* %106, align 8
  store i64 %1272, i64* %1232, align 8
  store i64 %1259, i64* %105, align 8
  %1282 = icmp eq i64 %1233, 0
  br i1 %1282, label %1287, label %1283

1283:                                             ; preds = %1281
  %1284 = inttoptr i64 %1233 to i8*
  tail call void @_ZdlPv(i8* %1284) #9
  %1285 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %103, align 8
  %1286 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1285 to i64
  br label %1287

1287:                                             ; preds = %1215, %1281, %1283
  %1288 = phi i64 [ %1228, %1215 ], [ %1272, %1281 ], [ %1286, %1283 ]
  %1289 = phi %"class.cc::NinePatchGenerator::Patch"* [ %1227, %1215 ], [ %1271, %1281 ], [ %1285, %1283 ]
  %1290 = load i32, i32* %34, align 4
  %1291 = load i32, i32* %36, align 4
  %1292 = add nsw i32 %1291, %1290
  %1293 = sitofp i32 %1292 to float
  %1294 = sub nsw i32 %810, %1292
  %1295 = insertelement <2 x float> %461, float %1293, i32 1
  %1296 = icmp sgt i32 %1294, 0
  %1297 = select i1 %1296, i32 %1294, i32 0
  %1298 = sitofp i32 %1297 to float
  %1299 = insertelement <2 x float> %466, float %1298, i32 1
  %1300 = load i32, i32* %41, align 4
  %1301 = load i32, i32* %43, align 4
  %1302 = add nsw i32 %1301, %1300
  %1303 = sitofp i32 %1302 to float
  %1304 = sub nsw i32 %474, %1302
  %1305 = insertelement <2 x float> undef, float %1303, i32 0
  %1306 = insertelement <2 x float> %1305, float %820, i32 1
  %1307 = icmp sgt i32 %1304, 0
  %1308 = select i1 %1307, i32 %1304, i32 0
  %1309 = sitofp i32 %1308 to float
  %1310 = insertelement <2 x float> undef, float %1309, i32 0
  %1311 = insertelement <2 x float> %1310, float %829, i32 1
  %1312 = load i32, i32* %3, align 4
  %1313 = sitofp i32 %1312 to float
  %1314 = load i32, i32* %6, align 4
  %1315 = sitofp i32 %1314 to float
  %1316 = fdiv float %459, %1313
  %1317 = fdiv float %1293, %1315
  %1318 = fdiv float %465, %1313
  %1319 = fdiv float %1298, %1315
  %1320 = insertelement <2 x float> undef, float %1316, i32 0
  %1321 = insertelement <2 x float> %1320, float %1317, i32 1
  %1322 = fcmp ogt float %1318, 0x3EB0000000000000
  %1323 = select i1 %1322, float %1318, float 0.000000e+00
  %1324 = insertelement <2 x float> undef, float %1323, i32 0
  %1325 = fcmp ogt float %1319, 0x3EB0000000000000
  %1326 = select i1 %1325, float %1319, float 0.000000e+00
  %1327 = insertelement <2 x float> %1324, float %1326, i32 1
  %1328 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %104, align 8
  %1329 = icmp ult %"class.cc::NinePatchGenerator::Patch"* %1289, %1328
  %1330 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1328 to i64
  br i1 %1329, label %1331, label %1346

1331:                                             ; preds = %1287
  %1332 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1289 to <2 x float>*
  store <2 x float> %1295, <2 x float>* %1332, align 4
  %1333 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1289, i64 0, i32 0, i32 1
  %1334 = bitcast %"class.gfx::SizeF"* %1333 to <2 x float>*
  store <2 x float> %1299, <2 x float>* %1334, align 4
  %1335 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1289, i64 0, i32 1
  %1336 = bitcast %"class.gfx::RectF"* %1335 to <2 x float>*
  store <2 x float> %1321, <2 x float>* %1336, align 4
  %1337 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1289, i64 0, i32 1, i32 1
  %1338 = bitcast %"class.gfx::SizeF"* %1337 to <2 x float>*
  store <2 x float> %1327, <2 x float>* %1338, align 4
  %1339 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1289, i64 0, i32 2
  %1340 = bitcast %"class.gfx::RectF"* %1339 to <2 x float>*
  store <2 x float> %1306, <2 x float>* %1340, align 4
  %1341 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1289, i64 0, i32 2, i32 1
  %1342 = bitcast %"class.gfx::SizeF"* %1341 to <2 x float>*
  store <2 x float> %1311, <2 x float>* %1342, align 4
  %1343 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1289, i64 1
  %1344 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1343 to i64
  %1345 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  store i64 %1344, i64* %1345, align 8
  br label %1401

1346:                                             ; preds = %1287
  %1347 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1289 to i64
  %1348 = bitcast %"class.cc::NinePatchGenerator::Patch"** %103 to i64*
  %1349 = load i64, i64* %106, align 8
  %1350 = sub i64 %1347, %1349
  %1351 = sdiv exact i64 %1350, 48
  %1352 = add nsw i64 %1351, 1
  %1353 = icmp ugt i64 %1352, 384307168202282325
  br i1 %1353, label %1354, label %1356

1354:                                             ; preds = %1346
  %1355 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1355) #10
  unreachable

1356:                                             ; preds = %1346
  %1357 = sub i64 %1330, %1349
  %1358 = sdiv exact i64 %1357, 48
  %1359 = icmp ult i64 %1358, 192153584101141162
  br i1 %1359, label %1360, label %1365

1360:                                             ; preds = %1356
  %1361 = shl nsw i64 %1358, 1
  %1362 = icmp ult i64 %1361, %1352
  %1363 = select i1 %1362, i64 %1352, i64 %1361
  %1364 = icmp eq i64 %1363, 0
  br i1 %1364, label %1370, label %1365

1365:                                             ; preds = %1360, %1356
  %1366 = phi i64 [ %1363, %1360 ], [ 384307168202282325, %1356 ]
  %1367 = mul i64 %1366, 48
  %1368 = tail call i8* @_Znwm(i64 %1367) #9
  %1369 = bitcast i8* %1368 to %"class.cc::NinePatchGenerator::Patch"*
  br label %1370

1370:                                             ; preds = %1365, %1360
  %1371 = phi i64 [ %1366, %1365 ], [ 0, %1360 ]
  %1372 = phi %"class.cc::NinePatchGenerator::Patch"* [ %1369, %1365 ], [ null, %1360 ]
  %1373 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1351
  %1374 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1371
  %1375 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1374 to i64
  %1376 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1373 to <2 x float>*
  store <2 x float> %1295, <2 x float>* %1376, align 4
  %1377 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1351, i32 0, i32 1
  %1378 = bitcast %"class.gfx::SizeF"* %1377 to <2 x float>*
  store <2 x float> %1299, <2 x float>* %1378, align 4
  %1379 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1351, i32 1
  %1380 = bitcast %"class.gfx::RectF"* %1379 to <2 x float>*
  store <2 x float> %1321, <2 x float>* %1380, align 4
  %1381 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1351, i32 1, i32 1
  %1382 = bitcast %"class.gfx::SizeF"* %1381 to <2 x float>*
  store <2 x float> %1327, <2 x float>* %1382, align 4
  %1383 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1351, i32 2
  %1384 = bitcast %"class.gfx::RectF"* %1383 to <2 x float>*
  store <2 x float> %1306, <2 x float>* %1384, align 4
  %1385 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1372, i64 %1351, i32 2, i32 1
  %1386 = bitcast %"class.gfx::SizeF"* %1385 to <2 x float>*
  store <2 x float> %1311, <2 x float>* %1386, align 4
  %1387 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1373, i64 1
  %1388 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1387 to i64
  %1389 = sub i64 %1288, %1349
  %1390 = sdiv exact i64 %1389, -48
  %1391 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %1373, i64 %1390
  %1392 = ptrtoint %"class.cc::NinePatchGenerator::Patch"* %1391 to i64
  %1393 = icmp sgt i64 %1389, 0
  br i1 %1393, label %1394, label %1397

1394:                                             ; preds = %1370
  %1395 = bitcast %"class.cc::NinePatchGenerator::Patch"* %1391 to i8*
  %1396 = inttoptr i64 %1349 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1395, i8* align 4 %1396, i64 %1389, i1 false) #8
  br label %1397

1397:                                             ; preds = %1394, %1370
  store i64 %1392, i64* %106, align 8
  store i64 %1388, i64* %1348, align 8
  store i64 %1375, i64* %105, align 8
  %1398 = icmp eq i64 %1349, 0
  br i1 %1398, label %1401, label %1399

1399:                                             ; preds = %1397
  %1400 = inttoptr i64 %1349 to i8*
  tail call void @_ZdlPv(i8* %1400) #9
  br label %1401

1401:                                             ; preds = %1331, %1397, %1399
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc18NinePatchGenerator15GeneratePatchesEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.cc::NinePatchGenerator"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 6, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 6, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %10, %14, %2
  %19 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  call void @_ZNK2cc18NinePatchGenerator28ComputeQuadsWithoutOcclusionEv(%"class.std::__1::vector"* nonnull sret %3, %"class.cc::NinePatchGenerator"* %1)
  br label %22

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  call void @_ZNK2cc18NinePatchGenerator25ComputeQuadsWithOcclusionEv(%"class.std::__1::vector"* nonnull sret %4, %"class.cc::NinePatchGenerator"* %1)
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi %"class.std::__1::vector"* [ %3, %18 ], [ %4, %20 ]
  %24 = phi i8* [ %19, %18 ], [ %21, %20 ]
  %25 = bitcast %"class.std::__1::vector"* %23 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.cc::NinePatchGenerator::Patch"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %30, align 8
  %31 = bitcast %"class.cc::NinePatchGenerator::Patch"** %5 to i64*
  store i64 %29, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18NinePatchGenerator11AppendQuadsEPNS_9LayerImplEiPN3viz20CompositorRenderPassEPNS3_15SharedQuadStateERKNSt3__16vectorINS0_5PatchENS8_9allocatorISA_EEEE(%"class.cc::NinePatchGenerator"* nocapture readonly, %"class.cc::LayerImpl"*, i32, %"class.viz::CompositorRenderPass"*, %"class.viz::SharedQuadState"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = alloca %"class.gfx::RectF", align 8
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %"class.gfx::PointF"*
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %73, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %17 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %16, align 8
  %18 = tail call i32 @_ZNK2cc13LayerTreeImpl23ResourceIdForUIResourceEi(%"class.cc::LayerTreeImpl"* %17, i32 %2) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %73, label %20

20:                                               ; preds = %15
  %21 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %16, align 8
  %22 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl18IsUIResourceOpaqueEi(%"class.cc::LayerTreeImpl"* %21, i32 %2) #8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %24 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %26 = load %"class.cc::NinePatchGenerator::Patch"*, %"class.cc::NinePatchGenerator::Patch"** %25, align 8
  %27 = icmp eq %"class.cc::NinePatchGenerator::Patch"* %24, %26
  br i1 %27, label %73, label %28

28:                                               ; preds = %20
  %29 = bitcast { i64, i64 }* %7 to i8*
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %32 = bitcast { i64, i64 }* %9 to i8*
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %34 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 2
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %36 = xor i1 %22, true
  %37 = bitcast %"class.gfx::RectF"* %11 to i8*
  %38 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %3, i64 0, i32 0, i32 11, i32 0, i32 0
  %40 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0
  %41 = bitcast <2 x float>* %12 to i8*
  %42 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 5
  %43 = bitcast { i64, i64 }* %7 to i8*
  %44 = bitcast { i64, i64 }* %9 to i8*
  %45 = bitcast %"class.gfx::RectF"* %11 to <2 x float>*
  %46 = bitcast float* %38 to <2 x float>*
  br label %47

47:                                               ; preds = %28, %70
  %48 = phi %"class.cc::NinePatchGenerator::Patch"* [ %24, %28 ], [ %71, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %49 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %48, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  %50 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %49) #8
  %51 = extractvalue { i64, i64 } %50, 0
  store i64 %51, i64* %31, align 8
  %52 = extractvalue { i64, i64 } %50, 1
  store i64 %52, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  %53 = call { i64, i64 } @_ZNK2cc9Occlusion24GetUnoccludedContentRectERKN3gfx4RectE(%"class.cc::Occlusion"* %34, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #8
  %54 = extractvalue { i64, i64 } %53, 0
  store i64 %54, i64* %35, align 8
  %55 = extractvalue { i64, i64 } %53, 1
  store i64 %55, i64* %33, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  %58 = icmp ult i64 %55, 4294967296
  %59 = or i1 %57, %58
  br i1 %59, label %70, label %60

60:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  %61 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %48, i64 0, i32 1
  %62 = bitcast %"class.gfx::RectF"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 4 %62, i64 16, i1 false)
  %63 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %39, i64 8, i64 128) #8
  %64 = bitcast i8* %63 to %"class.viz::TextureDrawQuad"*
  call void @_ZN3viz15TextureDrawQuadC1Ev(%"class.viz::TextureDrawQuad"* %64) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  %65 = load <2 x float>, <2 x float>* %45, align 8
  %66 = load <2 x float>, <2 x float>* %46, align 8
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, <2 x float>* %12, align 8
  %68 = load i8, i8* %42, align 1, !range !2
  %69 = icmp ne i8 %68, 0
  call void @_ZN3viz15TextureDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_bN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEEbRKNS4_6PointFESE_jPKfbbbNS4_18ProtectedVideoTypeE(%"class.viz::TextureDrawQuad"* %64, %"class.viz::SharedQuadState"* %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, i1 zeroext %36, i32 %18, i1 zeroext true, %"class.gfx::PointF"* nonnull dereferenceable(8) %40, %"class.gfx::PointF"* nonnull dereferenceable(8) %13, i32 0, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZZN2cc18NinePatchGenerator11AppendQuadsEPNS_9LayerImplEiPN3viz20CompositorRenderPassEPNS3_15SharedQuadStateERKNSt3__16vectorINS0_5PatchENS8_9allocatorISA_EEEEE14vertex_opacity, i64 0, i64 0), i1 zeroext false, i1 zeroext %69, i1 zeroext false, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  br label %70

70:                                               ; preds = %47, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  %71 = getelementptr inbounds %"class.cc::NinePatchGenerator::Patch", %"class.cc::NinePatchGenerator::Patch"* %48, i64 1
  %72 = icmp eq %"class.cc::NinePatchGenerator::Patch"* %71, %26
  br i1 %72, label %73, label %47

73:                                               ; preds = %70, %20, %15, %6
  ret void
}

declare i32 @_ZNK2cc13LayerTreeImpl23ResourceIdForUIResourceEi(%"class.cc::LayerTreeImpl"*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK2cc13LayerTreeImpl18IsUIResourceOpaqueEi(%"class.cc::LayerTreeImpl"*, i32) local_unnamed_addr #4

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #4

declare { i64, i64 } @_ZNK2cc9Occlusion24GetUnoccludedContentRectERKN3gfx4RectE(%"class.cc::Occlusion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN3viz15TextureDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_bN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEEbRKNS4_6PointFESE_jPKfbbbNS4_18ProtectedVideoTypeE(%"class.viz::TextureDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext, i32, i1 zeroext, %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8), i32, float*, i1 zeroext, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc18NinePatchGenerator11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::NinePatchGenerator"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 0
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %3, %"class.base::trace_event::TracedValue"* %1) #8
  %4 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 2
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), %"class.gfx::Size"* dereferenceable(8) %4, %"class.base::trace_event::TracedValue"* %1) #8
  %5 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 1
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %5, %"class.base::trace_event::TracedValue"* %1) #8
  %6 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i1 zeroext %8) #8
  %9 = getelementptr inbounds %"class.cc::NinePatchGenerator", %"class.cc::NinePatchGenerator"* %0, i64 0, i32 6
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %9, %"class.base::trace_event::TracedValue"* %1) #8
  ret void
}

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Size"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"*, i64, i64) local_unnamed_addr #4

declare void @_ZN3viz15TextureDrawQuadC1Ev(%"class.viz::TextureDrawQuad"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
