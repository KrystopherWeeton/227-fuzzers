; ModuleID = '../../third_party/nasm/asm/strfunc.c'
source_filename = "../../third_party/nasm/asm/strfunc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@string_transform.str_transforms = internal unnamed_addr constant [6 x i64 (i8*, i64, i8*)*] [i64 (i8*, i64, i8*)* @utf8_to_16le, i64 (i8*, i64, i8*)* @utf8_to_16le, i64 (i8*, i64, i8*)* @utf8_to_16be, i64 (i8*, i64, i8*)* @utf8_to_32le, i64 (i8*, i64, i8*)* @utf8_to_32le, i64 (i8*, i64, i8*)* @utf8_to_32be], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i64 @string_transform(i8*, i64, i8** nocapture, i32) local_unnamed_addr #0 {
  %5 = zext i32 %3 to i64
  %6 = getelementptr inbounds [6 x i64 (i8*, i64, i8*)*], [6 x i64 (i8*, i64, i8*)*]* @string_transform.str_transforms, i64 0, i64 %5
  %7 = load i64 (i8*, i64, i8*)*, i64 (i8*, i64, i8*)** %6, align 8
  %8 = tail call i64 %7(i8* %0, i64 %1, i8* null) #3
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = add nuw i64 %8, 1
  %12 = tail call noalias i8* @nasm_malloc(i64 %11) #4
  store i8* %12, i8** %2, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %8
  store i8 0, i8* %13, align 1
  %14 = tail call i64 %7(i8* %0, i64 %1, i8* %12) #3
  br label %15

15:                                               ; preds = %4, %10
  %16 = phi i64 [ %14, %10 ], [ -1, %4 ]
  ret i64 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @utf8_to_16le(i8* nocapture readonly, i64, i8*) #1 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %121, label %5

5:                                                ; preds = %3, %109
  %6 = phi i64 [ %20, %109 ], [ %1, %3 ]
  %7 = phi i8* [ %21, %109 ], [ %0, %3 ]
  %8 = phi i8* [ %114, %109 ], [ %2, %3 ]
  %9 = phi i32 [ %113, %109 ], [ 0, %3 ]
  %10 = phi i32 [ %112, %109 ], [ 0, %3 ]
  %11 = phi i32 [ %111, %109 ], [ 0, %3 ]
  %12 = phi i64 [ %110, %109 ], [ 0, %3 ]
  br label %13

13:                                               ; preds = %5, %71
  %14 = phi i64 [ %6, %5 ], [ %20, %71 ]
  %15 = phi i8* [ %7, %5 ], [ %21, %71 ]
  %16 = phi i8* [ %8, %5 ], [ %74, %71 ]
  %17 = phi i32 [ %10, %5 ], [ %73, %71 ]
  %18 = phi i32 [ %11, %5 ], [ %32, %71 ]
  %19 = phi i64 [ %12, %5 ], [ %72, %71 ]
  %20 = add i64 %14, -1
  %21 = getelementptr inbounds i8, i8* %15, i64 1
  %22 = load i8, i8* %15, align 1
  %23 = icmp eq i32 %18, 0
  %24 = zext i8 %22 to i32
  br i1 %23, label %76, label %25

25:                                               ; preds = %13
  %26 = and i32 %24, 192
  %27 = icmp eq i32 %26, 128
  br i1 %27, label %28, label %123

28:                                               ; preds = %25
  %29 = shl i32 %17, 6
  %30 = and i32 %24, 63
  %31 = or i32 %30, %29
  %32 = add nsw i32 %18, -1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %71

34:                                               ; preds = %28
  %35 = icmp ult i32 %31, %9
  %36 = icmp ugt i32 %31, 1114111
  %37 = or i1 %35, %36
  %38 = and i32 %17, 67108832
  %39 = icmp eq i32 %38, 864
  %40 = or i1 %39, %37
  br i1 %40, label %123, label %41

41:                                               ; preds = %34
  %42 = icmp ugt i32 %31, 65535
  br i1 %42, label %43, label %62

43:                                               ; preds = %41
  %44 = add nsw i32 %31, -65536
  %45 = icmp eq i8* %16, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %16 to i16*
  %48 = lshr i32 %44, 10
  %49 = trunc i32 %48 to i16
  %50 = or i16 %49, -10240
  %51 = getelementptr inbounds i8, i8* %16, i64 2
  store i16 %50, i16* %47, align 2
  %52 = icmp eq i8* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = bitcast i8* %51 to i16*
  %55 = trunc i32 %44 to i16
  %56 = and i16 %55, 1023
  %57 = or i16 %56, -9216
  %58 = getelementptr inbounds i8, i8* %16, i64 4
  store i16 %57, i16* %54, align 2
  br label %59

59:                                               ; preds = %43, %46, %53
  %60 = phi i8* [ %58, %53 ], [ null, %46 ], [ null, %43 ]
  %61 = add i64 %19, 2
  br label %71

62:                                               ; preds = %41
  %63 = icmp eq i8* %16, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = bitcast i8* %16 to i16*
  %66 = trunc i32 %31 to i16
  %67 = getelementptr inbounds i8, i8* %16, i64 2
  store i16 %66, i16* %65, align 2
  br label %68

68:                                               ; preds = %62, %64
  %69 = phi i8* [ %67, %64 ], [ null, %62 ]
  %70 = add i64 %19, 1
  br label %71

71:                                               ; preds = %28, %68, %59
  %72 = phi i64 [ %19, %28 ], [ %61, %59 ], [ %70, %68 ]
  %73 = phi i32 [ %31, %28 ], [ %44, %59 ], [ %31, %68 ]
  %74 = phi i8* [ %16, %28 ], [ %60, %59 ], [ %69, %68 ]
  %75 = icmp eq i64 %20, 0
  br i1 %75, label %116, label %13

76:                                               ; preds = %13
  %77 = zext i8 %22 to i32
  %78 = icmp sgt i8 %22, -1
  br i1 %78, label %79, label %88

79:                                               ; preds = %76
  %80 = icmp eq i8* %16, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %79
  %82 = bitcast i8* %16 to i16*
  %83 = zext i8 %22 to i16
  %84 = getelementptr inbounds i8, i8* %16, i64 2
  store i16 %83, i16* %82, align 2
  br label %85

85:                                               ; preds = %79, %81
  %86 = phi i8* [ %84, %81 ], [ null, %79 ]
  %87 = add i64 %19, 1
  br label %109

88:                                               ; preds = %76
  %89 = add nsw i8 %22, 64
  %90 = icmp ugt i8 %89, 61
  br i1 %90, label %123, label %91

91:                                               ; preds = %88
  %92 = icmp ult i8 %22, -32
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = and i32 %77, 31
  br label %109

95:                                               ; preds = %91
  %96 = icmp ult i8 %22, -16
  br i1 %96, label %97, label %99

97:                                               ; preds = %95
  %98 = and i32 %77, 15
  br label %109

99:                                               ; preds = %95
  %100 = icmp ult i8 %22, -8
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = and i32 %77, 7
  br label %109

103:                                              ; preds = %99
  %104 = icmp ult i8 %22, -4
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = and i32 %77, 3
  br label %109

107:                                              ; preds = %103
  %108 = and i32 %77, 1
  br label %109

109:                                              ; preds = %97, %105, %107, %101, %93, %85
  %110 = phi i64 [ %87, %85 ], [ %19, %93 ], [ %19, %97 ], [ %19, %101 ], [ %19, %105 ], [ %19, %107 ]
  %111 = phi i32 [ 0, %85 ], [ 1, %93 ], [ 2, %97 ], [ 3, %101 ], [ 4, %105 ], [ 5, %107 ]
  %112 = phi i32 [ %17, %85 ], [ %94, %93 ], [ %98, %97 ], [ %102, %101 ], [ %106, %105 ], [ %108, %107 ]
  %113 = phi i32 [ %9, %85 ], [ 128, %93 ], [ 2048, %97 ], [ 65536, %101 ], [ 2097152, %105 ], [ 67108864, %107 ]
  %114 = phi i8* [ %86, %85 ], [ %16, %93 ], [ %16, %97 ], [ %16, %101 ], [ %16, %105 ], [ %16, %107 ]
  %115 = icmp eq i64 %20, 0
  br i1 %115, label %116, label %5

116:                                              ; preds = %109, %71
  %117 = phi i64 [ %72, %71 ], [ %110, %109 ]
  %118 = phi i32 [ %32, %71 ], [ %111, %109 ]
  %119 = icmp eq i32 %118, 0
  %120 = shl i64 %117, 1
  br i1 %119, label %121, label %123

121:                                              ; preds = %3, %116
  %122 = phi i64 [ %120, %116 ], [ 0, %3 ]
  br label %123

123:                                              ; preds = %88, %34, %25, %121, %116
  %124 = phi i64 [ %122, %121 ], [ -1, %116 ], [ -1, %25 ], [ -1, %34 ], [ -1, %88 ]
  ret i64 %124
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @utf8_to_16be(i8* nocapture readonly, i64, i8*) #1 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %127, label %5

5:                                                ; preds = %3, %115
  %6 = phi i64 [ %20, %115 ], [ %1, %3 ]
  %7 = phi i8* [ %21, %115 ], [ %0, %3 ]
  %8 = phi i8* [ %120, %115 ], [ %2, %3 ]
  %9 = phi i64 [ %119, %115 ], [ 0, %3 ]
  %10 = phi i32 [ %118, %115 ], [ 0, %3 ]
  %11 = phi i32 [ %117, %115 ], [ 0, %3 ]
  %12 = phi i32 [ %116, %115 ], [ 0, %3 ]
  br label %13

13:                                               ; preds = %5, %78
  %14 = phi i64 [ %6, %5 ], [ %20, %78 ]
  %15 = phi i8* [ %7, %5 ], [ %21, %78 ]
  %16 = phi i8* [ %8, %5 ], [ %81, %78 ]
  %17 = phi i64 [ %9, %5 ], [ %80, %78 ]
  %18 = phi i32 [ %10, %5 ], [ %32, %78 ]
  %19 = phi i32 [ %11, %5 ], [ %79, %78 ]
  %20 = add i64 %14, -1
  %21 = getelementptr inbounds i8, i8* %15, i64 1
  %22 = load i8, i8* %15, align 1
  %23 = icmp eq i32 %18, 0
  %24 = zext i8 %22 to i32
  br i1 %23, label %83, label %25

25:                                               ; preds = %13
  %26 = and i32 %24, 192
  %27 = icmp eq i32 %26, 128
  br i1 %27, label %28, label %129

28:                                               ; preds = %25
  %29 = shl i32 %19, 6
  %30 = and i32 %24, 63
  %31 = or i32 %30, %29
  %32 = add nsw i32 %18, -1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %78

34:                                               ; preds = %28
  %35 = icmp ult i32 %31, %12
  %36 = icmp ugt i32 %31, 1114111
  %37 = or i1 %35, %36
  %38 = and i32 %19, 67108832
  %39 = icmp eq i32 %38, 864
  %40 = or i1 %39, %37
  br i1 %40, label %129, label %41

41:                                               ; preds = %34
  %42 = icmp ugt i32 %31, 65535
  br i1 %42, label %43, label %67

43:                                               ; preds = %41
  %44 = add nsw i32 %31, -65536
  %45 = icmp eq i8* %16, null
  br i1 %45, label %64, label %46

46:                                               ; preds = %43
  %47 = trunc i32 %44 to i16
  %48 = lshr i16 %47, 8
  %49 = trunc i16 %48 to i8
  %50 = and i8 %49, 3
  %51 = or i8 %50, -36
  %52 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %51, i8* %16, align 1
  %53 = trunc i32 %44 to i8
  %54 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %53, i8* %52, align 1
  %55 = icmp eq i8* %54, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %46
  %57 = lshr i32 %44, 10
  %58 = lshr i32 %44, 18
  %59 = trunc i32 %58 to i8
  %60 = or i8 %59, -40
  %61 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %60, i8* %54, align 1
  %62 = trunc i32 %57 to i8
  %63 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 %62, i8* %61, align 1
  br label %64

64:                                               ; preds = %43, %46, %56
  %65 = phi i8* [ %63, %56 ], [ null, %46 ], [ null, %43 ]
  %66 = add i64 %17, 2
  br label %78

67:                                               ; preds = %41
  %68 = icmp eq i8* %16, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  %70 = lshr i32 %19, 2
  %71 = trunc i32 %70 to i8
  %72 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %71, i8* %16, align 1
  %73 = trunc i32 %31 to i8
  %74 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %73, i8* %72, align 1
  br label %75

75:                                               ; preds = %67, %69
  %76 = phi i8* [ %74, %69 ], [ null, %67 ]
  %77 = add i64 %17, 1
  br label %78

78:                                               ; preds = %28, %75, %64
  %79 = phi i32 [ %31, %28 ], [ %44, %64 ], [ %31, %75 ]
  %80 = phi i64 [ %17, %28 ], [ %66, %64 ], [ %77, %75 ]
  %81 = phi i8* [ %16, %28 ], [ %65, %64 ], [ %76, %75 ]
  %82 = icmp eq i64 %20, 0
  br i1 %82, label %122, label %13

83:                                               ; preds = %13
  %84 = zext i8 %22 to i32
  %85 = icmp sgt i8 %22, -1
  br i1 %85, label %86, label %94

86:                                               ; preds = %83
  %87 = icmp eq i8* %16, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 0, i8* %16, align 1
  %90 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %22, i8* %89, align 1
  br label %91

91:                                               ; preds = %86, %88
  %92 = phi i8* [ %90, %88 ], [ null, %86 ]
  %93 = add i64 %17, 1
  br label %115

94:                                               ; preds = %83
  %95 = add nsw i8 %22, 64
  %96 = icmp ugt i8 %95, 61
  br i1 %96, label %129, label %97

97:                                               ; preds = %94
  %98 = icmp ult i8 %22, -32
  br i1 %98, label %99, label %101

99:                                               ; preds = %97
  %100 = and i32 %84, 31
  br label %115

101:                                              ; preds = %97
  %102 = icmp ult i8 %22, -16
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = and i32 %84, 15
  br label %115

105:                                              ; preds = %101
  %106 = icmp ult i8 %22, -8
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = and i32 %84, 7
  br label %115

109:                                              ; preds = %105
  %110 = icmp ult i8 %22, -4
  br i1 %110, label %111, label %113

111:                                              ; preds = %109
  %112 = and i32 %84, 3
  br label %115

113:                                              ; preds = %109
  %114 = and i32 %84, 1
  br label %115

115:                                              ; preds = %103, %111, %113, %107, %99, %91
  %116 = phi i32 [ %12, %91 ], [ 128, %99 ], [ 2048, %103 ], [ 65536, %107 ], [ 2097152, %111 ], [ 67108864, %113 ]
  %117 = phi i32 [ %19, %91 ], [ %100, %99 ], [ %104, %103 ], [ %108, %107 ], [ %112, %111 ], [ %114, %113 ]
  %118 = phi i32 [ 0, %91 ], [ 1, %99 ], [ 2, %103 ], [ 3, %107 ], [ 4, %111 ], [ 5, %113 ]
  %119 = phi i64 [ %93, %91 ], [ %17, %99 ], [ %17, %103 ], [ %17, %107 ], [ %17, %111 ], [ %17, %113 ]
  %120 = phi i8* [ %92, %91 ], [ %16, %99 ], [ %16, %103 ], [ %16, %107 ], [ %16, %111 ], [ %16, %113 ]
  %121 = icmp eq i64 %20, 0
  br i1 %121, label %122, label %5

122:                                              ; preds = %115, %78
  %123 = phi i32 [ %32, %78 ], [ %118, %115 ]
  %124 = phi i64 [ %80, %78 ], [ %119, %115 ]
  %125 = icmp eq i32 %123, 0
  %126 = shl i64 %124, 1
  br i1 %125, label %127, label %129

127:                                              ; preds = %3, %122
  %128 = phi i64 [ %126, %122 ], [ 0, %3 ]
  br label %129

129:                                              ; preds = %94, %34, %25, %127, %122
  %130 = phi i64 [ %128, %127 ], [ -1, %122 ], [ -1, %25 ], [ -1, %34 ], [ -1, %94 ]
  ret i64 %130
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @utf8_to_32le(i8* nocapture readonly, i64, i8*) #1 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %94, label %5

5:                                                ; preds = %3, %82
  %6 = phi i64 [ %48, %82 ], [ %1, %3 ]
  %7 = phi i8* [ %49, %82 ], [ %0, %3 ]
  %8 = phi i32 [ %87, %82 ], [ 0, %3 ]
  %9 = phi i32 [ %86, %82 ], [ 0, %3 ]
  %10 = phi i32 [ %85, %82 ], [ 0, %3 ]
  %11 = phi i64 [ %84, %82 ], [ 0, %3 ]
  %12 = phi i8* [ %83, %82 ], [ %2, %3 ]
  %13 = add i64 %6, -1
  %14 = getelementptr inbounds i8, i8* %7, i64 1
  %15 = load i8, i8* %7, align 1
  %16 = icmp eq i32 %10, 0
  %17 = zext i8 %15 to i32
  br i1 %16, label %44, label %18

18:                                               ; preds = %5
  %19 = and i32 %17, 192
  %20 = icmp eq i32 %19, 128
  br i1 %20, label %21, label %96

21:                                               ; preds = %18
  %22 = shl i32 %9, 6
  %23 = and i32 %17, 63
  %24 = or i32 %23, %22
  %25 = add nsw i32 %10, -1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %40

27:                                               ; preds = %21
  %28 = icmp ult i32 %24, %8
  %29 = and i32 %9, 67108832
  %30 = icmp eq i32 %29, 864
  %31 = or i1 %30, %28
  br i1 %31, label %96, label %32

32:                                               ; preds = %27
  %33 = icmp eq i8* %12, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = bitcast i8* %12 to i32*
  %36 = getelementptr inbounds i8, i8* %12, i64 4
  store i32 %24, i32* %35, align 4
  br label %37

37:                                               ; preds = %32, %34
  %38 = phi i8* [ %36, %34 ], [ null, %32 ]
  %39 = add i64 %11, 1
  br label %40

40:                                               ; preds = %21, %37
  %41 = phi i8* [ %12, %21 ], [ %38, %37 ]
  %42 = phi i64 [ %11, %21 ], [ %39, %37 ]
  %43 = icmp eq i64 %13, 0
  br i1 %43, label %89, label %98

44:                                               ; preds = %226, %194, %162, %130, %98, %5
  %45 = phi i32 [ %9, %5 ], [ %24, %98 ], [ %110, %130 ], [ %142, %162 ], [ %174, %194 ], [ %206, %226 ]
  %46 = phi i64 [ %11, %5 ], [ %42, %98 ], [ %128, %130 ], [ %160, %162 ], [ %192, %194 ], [ %224, %226 ]
  %47 = phi i8* [ %12, %5 ], [ %41, %98 ], [ %127, %130 ], [ %159, %162 ], [ %191, %194 ], [ %223, %226 ]
  %48 = phi i64 [ %13, %5 ], [ %99, %98 ], [ %131, %130 ], [ %163, %162 ], [ %195, %194 ], [ %227, %226 ]
  %49 = phi i8* [ %14, %5 ], [ %100, %98 ], [ %132, %130 ], [ %164, %162 ], [ %196, %194 ], [ %228, %226 ]
  %50 = phi i8 [ %15, %5 ], [ %101, %98 ], [ %133, %130 ], [ %165, %162 ], [ %197, %194 ], [ %229, %226 ]
  %51 = zext i8 %50 to i32
  %52 = icmp sgt i8 %50, -1
  br i1 %52, label %53, label %61

53:                                               ; preds = %44
  %54 = icmp eq i8* %47, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = bitcast i8* %47 to i32*
  %57 = getelementptr inbounds i8, i8* %47, i64 4
  store i32 %51, i32* %56, align 4
  br label %58

58:                                               ; preds = %53, %55
  %59 = phi i8* [ %57, %55 ], [ null, %53 ]
  %60 = add i64 %46, 1
  br label %82

61:                                               ; preds = %44
  %62 = add nsw i8 %50, 64
  %63 = icmp ugt i8 %62, 61
  br i1 %63, label %96, label %64

64:                                               ; preds = %61
  %65 = icmp ult i8 %50, -32
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = and i32 %51, 31
  br label %82

68:                                               ; preds = %64
  %69 = icmp ult i8 %50, -16
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = and i32 %51, 15
  br label %82

72:                                               ; preds = %68
  %73 = icmp ult i8 %50, -8
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = and i32 %51, 7
  br label %82

76:                                               ; preds = %72
  %77 = icmp ult i8 %50, -4
  br i1 %77, label %78, label %80

78:                                               ; preds = %76
  %79 = and i32 %51, 3
  br label %82

80:                                               ; preds = %76
  %81 = and i32 %51, 1
  br label %82

82:                                               ; preds = %70, %78, %80, %74, %66, %58
  %83 = phi i8* [ %59, %58 ], [ %47, %66 ], [ %47, %70 ], [ %47, %74 ], [ %47, %78 ], [ %47, %80 ]
  %84 = phi i64 [ %60, %58 ], [ %46, %66 ], [ %46, %70 ], [ %46, %74 ], [ %46, %78 ], [ %46, %80 ]
  %85 = phi i32 [ 0, %58 ], [ 1, %66 ], [ 2, %70 ], [ 3, %74 ], [ 4, %78 ], [ 5, %80 ]
  %86 = phi i32 [ %45, %58 ], [ %67, %66 ], [ %71, %70 ], [ %75, %74 ], [ %79, %78 ], [ %81, %80 ]
  %87 = phi i32 [ %8, %58 ], [ 128, %66 ], [ 2048, %70 ], [ 65536, %74 ], [ 2097152, %78 ], [ 67108864, %80 ]
  %88 = icmp eq i64 %48, 0
  br i1 %88, label %89, label %5

89:                                               ; preds = %235, %250, %82, %40, %126, %158, %190, %222
  %90 = phi i64 [ %224, %222 ], [ %192, %190 ], [ %160, %158 ], [ %128, %126 ], [ %42, %40 ], [ %84, %82 ], [ %224, %235 ], [ %251, %250 ]
  %91 = phi i32 [ %207, %222 ], [ %175, %190 ], [ %143, %158 ], [ %111, %126 ], [ %25, %40 ], [ %85, %82 ], [ %239, %250 ], [ %239, %235 ]
  %92 = icmp eq i32 %91, 0
  %93 = shl i64 %90, 2
  br i1 %92, label %94, label %96

94:                                               ; preds = %3, %89
  %95 = phi i64 [ %93, %89 ], [ 0, %3 ]
  br label %96

96:                                               ; preds = %61, %231, %241, %27, %18, %104, %113, %136, %145, %168, %177, %200, %209, %94, %89
  %97 = phi i64 [ %95, %94 ], [ -1, %89 ], [ -1, %209 ], [ -1, %200 ], [ -1, %177 ], [ -1, %168 ], [ -1, %145 ], [ -1, %136 ], [ -1, %113 ], [ -1, %104 ], [ -1, %18 ], [ -1, %27 ], [ -1, %241 ], [ -1, %231 ], [ -1, %61 ]
  ret i64 %97

98:                                               ; preds = %40
  %99 = add i64 %6, -2
  %100 = getelementptr inbounds i8, i8* %7, i64 2
  %101 = load i8, i8* %14, align 1
  %102 = icmp eq i32 %25, 0
  %103 = zext i8 %101 to i32
  br i1 %102, label %44, label %104

104:                                              ; preds = %98
  %105 = and i32 %103, 192
  %106 = icmp eq i32 %105, 128
  br i1 %106, label %107, label %96

107:                                              ; preds = %104
  %108 = shl i32 %24, 6
  %109 = and i32 %103, 63
  %110 = or i32 %109, %108
  %111 = add nsw i32 %10, -2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %126

113:                                              ; preds = %107
  %114 = icmp ult i32 %110, %8
  %115 = and i32 %24, 67108832
  %116 = icmp eq i32 %115, 864
  %117 = or i1 %116, %114
  br i1 %117, label %96, label %118

118:                                              ; preds = %113
  %119 = icmp eq i8* %41, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %118
  %121 = bitcast i8* %41 to i32*
  %122 = getelementptr inbounds i8, i8* %41, i64 4
  store i32 %110, i32* %121, align 4
  br label %123

123:                                              ; preds = %120, %118
  %124 = phi i8* [ %122, %120 ], [ null, %118 ]
  %125 = add i64 %42, 1
  br label %126

126:                                              ; preds = %123, %107
  %127 = phi i8* [ %41, %107 ], [ %124, %123 ]
  %128 = phi i64 [ %42, %107 ], [ %125, %123 ]
  %129 = icmp eq i64 %99, 0
  br i1 %129, label %89, label %130

130:                                              ; preds = %126
  %131 = add i64 %6, -3
  %132 = getelementptr inbounds i8, i8* %7, i64 3
  %133 = load i8, i8* %100, align 1
  %134 = icmp eq i32 %111, 0
  %135 = zext i8 %133 to i32
  br i1 %134, label %44, label %136

136:                                              ; preds = %130
  %137 = and i32 %135, 192
  %138 = icmp eq i32 %137, 128
  br i1 %138, label %139, label %96

139:                                              ; preds = %136
  %140 = shl i32 %110, 6
  %141 = and i32 %135, 63
  %142 = or i32 %141, %140
  %143 = add nsw i32 %10, -3
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %158

145:                                              ; preds = %139
  %146 = icmp ult i32 %142, %8
  %147 = and i32 %110, 67108832
  %148 = icmp eq i32 %147, 864
  %149 = or i1 %148, %146
  br i1 %149, label %96, label %150

150:                                              ; preds = %145
  %151 = icmp eq i8* %127, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %150
  %153 = bitcast i8* %127 to i32*
  %154 = getelementptr inbounds i8, i8* %127, i64 4
  store i32 %142, i32* %153, align 4
  br label %155

155:                                              ; preds = %152, %150
  %156 = phi i8* [ %154, %152 ], [ null, %150 ]
  %157 = add i64 %128, 1
  br label %158

158:                                              ; preds = %155, %139
  %159 = phi i8* [ %127, %139 ], [ %156, %155 ]
  %160 = phi i64 [ %128, %139 ], [ %157, %155 ]
  %161 = icmp eq i64 %131, 0
  br i1 %161, label %89, label %162

162:                                              ; preds = %158
  %163 = add i64 %6, -4
  %164 = getelementptr inbounds i8, i8* %7, i64 4
  %165 = load i8, i8* %132, align 1
  %166 = icmp eq i32 %143, 0
  %167 = zext i8 %165 to i32
  br i1 %166, label %44, label %168

168:                                              ; preds = %162
  %169 = and i32 %167, 192
  %170 = icmp eq i32 %169, 128
  br i1 %170, label %171, label %96

171:                                              ; preds = %168
  %172 = shl i32 %142, 6
  %173 = and i32 %167, 63
  %174 = or i32 %173, %172
  %175 = add nsw i32 %10, -4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %190

177:                                              ; preds = %171
  %178 = icmp ult i32 %174, %8
  %179 = and i32 %142, 67108832
  %180 = icmp eq i32 %179, 864
  %181 = or i1 %180, %178
  br i1 %181, label %96, label %182

182:                                              ; preds = %177
  %183 = icmp eq i8* %159, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %182
  %185 = bitcast i8* %159 to i32*
  %186 = getelementptr inbounds i8, i8* %159, i64 4
  store i32 %174, i32* %185, align 4
  br label %187

187:                                              ; preds = %184, %182
  %188 = phi i8* [ %186, %184 ], [ null, %182 ]
  %189 = add i64 %160, 1
  br label %190

190:                                              ; preds = %187, %171
  %191 = phi i8* [ %159, %171 ], [ %188, %187 ]
  %192 = phi i64 [ %160, %171 ], [ %189, %187 ]
  %193 = icmp eq i64 %163, 0
  br i1 %193, label %89, label %194

194:                                              ; preds = %190
  %195 = add i64 %6, -5
  %196 = getelementptr inbounds i8, i8* %7, i64 5
  %197 = load i8, i8* %164, align 1
  %198 = icmp eq i32 %175, 0
  %199 = zext i8 %197 to i32
  br i1 %198, label %44, label %200

200:                                              ; preds = %194
  %201 = and i32 %199, 192
  %202 = icmp eq i32 %201, 128
  br i1 %202, label %203, label %96

203:                                              ; preds = %200
  %204 = shl i32 %174, 6
  %205 = and i32 %199, 63
  %206 = or i32 %205, %204
  %207 = add nsw i32 %10, -5
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %222

209:                                              ; preds = %203
  %210 = icmp ult i32 %206, %8
  %211 = and i32 %174, 67108832
  %212 = icmp eq i32 %211, 864
  %213 = or i1 %212, %210
  br i1 %213, label %96, label %214

214:                                              ; preds = %209
  %215 = icmp eq i8* %191, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %214
  %217 = bitcast i8* %191 to i32*
  %218 = getelementptr inbounds i8, i8* %191, i64 4
  store i32 %206, i32* %217, align 4
  br label %219

219:                                              ; preds = %216, %214
  %220 = phi i8* [ %218, %216 ], [ null, %214 ]
  %221 = add i64 %192, 1
  br label %222

222:                                              ; preds = %219, %203
  %223 = phi i8* [ %191, %203 ], [ %220, %219 ]
  %224 = phi i64 [ %192, %203 ], [ %221, %219 ]
  %225 = icmp eq i64 %195, 0
  br i1 %225, label %89, label %226

226:                                              ; preds = %222
  %227 = add i64 %6, -6
  %228 = getelementptr inbounds i8, i8* %7, i64 6
  %229 = load i8, i8* %196, align 1
  %230 = icmp eq i32 %207, 0
  br i1 %230, label %44, label %231

231:                                              ; preds = %226
  %232 = zext i8 %229 to i32
  %233 = and i32 %232, 192
  %234 = icmp eq i32 %233, 128
  br i1 %234, label %235, label %96

235:                                              ; preds = %231
  %236 = shl i32 %206, 6
  %237 = and i32 %232, 63
  %238 = or i32 %237, %236
  %239 = add nsw i32 %10, -6
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %89

241:                                              ; preds = %235
  %242 = icmp ult i32 %238, %8
  %243 = and i32 %206, 67108832
  %244 = icmp eq i32 %243, 864
  %245 = or i1 %244, %242
  br i1 %245, label %96, label %246

246:                                              ; preds = %241
  %247 = icmp eq i8* %223, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast i8* %223 to i32*
  store i32 %238, i32* %249, align 4
  br label %250

250:                                              ; preds = %248, %246
  %251 = add i64 %224, 1
  br label %89
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @utf8_to_32be(i8* nocapture readonly, i64, i8*) #1 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %106, label %5

5:                                                ; preds = %3, %94
  %6 = phi i64 [ %20, %94 ], [ %1, %3 ]
  %7 = phi i8* [ %21, %94 ], [ %0, %3 ]
  %8 = phi i8* [ %99, %94 ], [ %2, %3 ]
  %9 = phi i64 [ %98, %94 ], [ 0, %3 ]
  %10 = phi i32 [ %97, %94 ], [ 0, %3 ]
  %11 = phi i32 [ %96, %94 ], [ 0, %3 ]
  %12 = phi i32 [ %95, %94 ], [ 0, %3 ]
  br label %13

13:                                               ; preds = %5, %56
  %14 = phi i64 [ %6, %5 ], [ %20, %56 ]
  %15 = phi i8* [ %7, %5 ], [ %21, %56 ]
  %16 = phi i8* [ %8, %5 ], [ %58, %56 ]
  %17 = phi i64 [ %9, %5 ], [ %57, %56 ]
  %18 = phi i32 [ %10, %5 ], [ %32, %56 ]
  %19 = phi i32 [ %11, %5 ], [ %31, %56 ]
  %20 = add i64 %14, -1
  %21 = getelementptr inbounds i8, i8* %15, i64 1
  %22 = load i8, i8* %15, align 1
  %23 = icmp eq i32 %18, 0
  %24 = zext i8 %22 to i32
  br i1 %23, label %60, label %25

25:                                               ; preds = %13
  %26 = and i32 %24, 192
  %27 = icmp eq i32 %26, 128
  br i1 %27, label %28, label %108

28:                                               ; preds = %25
  %29 = shl i32 %19, 6
  %30 = and i32 %24, 63
  %31 = or i32 %30, %29
  %32 = add nsw i32 %18, -1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %56

34:                                               ; preds = %28
  %35 = icmp ult i32 %31, %12
  %36 = and i32 %19, 67108832
  %37 = icmp eq i32 %36, 864
  %38 = or i1 %37, %35
  br i1 %38, label %108, label %39

39:                                               ; preds = %34
  %40 = icmp eq i8* %16, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = lshr i32 %19, 18
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %43, i8* %16, align 1
  %45 = lshr i32 %19, 10
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %46, i8* %44, align 1
  %48 = lshr i32 %19, 2
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %49, i8* %47, align 1
  %51 = trunc i32 %31 to i8
  %52 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 %51, i8* %50, align 1
  br label %53

53:                                               ; preds = %39, %41
  %54 = phi i8* [ %52, %41 ], [ null, %39 ]
  %55 = add i64 %17, 1
  br label %56

56:                                               ; preds = %28, %53
  %57 = phi i64 [ %17, %28 ], [ %55, %53 ]
  %58 = phi i8* [ %16, %28 ], [ %54, %53 ]
  %59 = icmp eq i64 %20, 0
  br i1 %59, label %101, label %13

60:                                               ; preds = %13
  %61 = zext i8 %22 to i32
  %62 = icmp sgt i8 %22, -1
  br i1 %62, label %63, label %73

63:                                               ; preds = %60
  %64 = icmp eq i8* %16, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 0, i8* %16, align 1
  %67 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 0, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 0, i8* %67, align 1
  %69 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 %22, i8* %68, align 1
  br label %70

70:                                               ; preds = %63, %65
  %71 = phi i8* [ %69, %65 ], [ null, %63 ]
  %72 = add i64 %17, 1
  br label %94

73:                                               ; preds = %60
  %74 = add nsw i8 %22, 64
  %75 = icmp ugt i8 %74, 61
  br i1 %75, label %108, label %76

76:                                               ; preds = %73
  %77 = icmp ult i8 %22, -32
  br i1 %77, label %78, label %80

78:                                               ; preds = %76
  %79 = and i32 %61, 31
  br label %94

80:                                               ; preds = %76
  %81 = icmp ult i8 %22, -16
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = and i32 %61, 15
  br label %94

84:                                               ; preds = %80
  %85 = icmp ult i8 %22, -8
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = and i32 %61, 7
  br label %94

88:                                               ; preds = %84
  %89 = icmp ult i8 %22, -4
  br i1 %89, label %90, label %92

90:                                               ; preds = %88
  %91 = and i32 %61, 3
  br label %94

92:                                               ; preds = %88
  %93 = and i32 %61, 1
  br label %94

94:                                               ; preds = %82, %90, %92, %86, %78, %70
  %95 = phi i32 [ %12, %70 ], [ 128, %78 ], [ 2048, %82 ], [ 65536, %86 ], [ 2097152, %90 ], [ 67108864, %92 ]
  %96 = phi i32 [ %19, %70 ], [ %79, %78 ], [ %83, %82 ], [ %87, %86 ], [ %91, %90 ], [ %93, %92 ]
  %97 = phi i32 [ 0, %70 ], [ 1, %78 ], [ 2, %82 ], [ 3, %86 ], [ 4, %90 ], [ 5, %92 ]
  %98 = phi i64 [ %72, %70 ], [ %17, %78 ], [ %17, %82 ], [ %17, %86 ], [ %17, %90 ], [ %17, %92 ]
  %99 = phi i8* [ %71, %70 ], [ %16, %78 ], [ %16, %82 ], [ %16, %86 ], [ %16, %90 ], [ %16, %92 ]
  %100 = icmp eq i64 %20, 0
  br i1 %100, label %101, label %5

101:                                              ; preds = %94, %56
  %102 = phi i32 [ %32, %56 ], [ %97, %94 ]
  %103 = phi i64 [ %57, %56 ], [ %98, %94 ]
  %104 = icmp eq i32 %102, 0
  %105 = shl i64 %103, 2
  br i1 %104, label %106, label %108

106:                                              ; preds = %3, %101
  %107 = phi i64 [ %105, %101 ], [ 0, %3 ]
  br label %108

108:                                              ; preds = %73, %34, %25, %106, %101
  %109 = phi i64 [ %107, %106 ], [ -1, %101 ], [ -1, %25 ], [ -1, %34 ], [ -1, %73 ]
  ret i64 %109
}

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
