; ModuleID = '../../third_party/blink/renderer/core/exported/web_form_element.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_form_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebFormElement" = type { %"class.blink::WebElement" }
%"class.blink::WebElement" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.19", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.38", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::Member.0", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.71", %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.77", %"class.blink::HeapVector.79" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.95", %"class.WTF::Vector.95", i8, i32, %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.116", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.119", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.125", %"class.blink::Member.127", %"class.blink::Member.85", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.130", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.64", %"class.blink::Member.62", %"class.blink::Member.328", %"class.blink::Member.62", %"class.blink::Member.62", %"class.blink::Member.62", %"class.blink::UserActionElementSet", %"class.blink::Member.337", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.344", i16, i8, %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::Member.355", %"class.blink::Member.357", %"class.blink::TextLinkColors", %"class.blink::Member.359", i8, [7 x i8], %"class.blink::HeapHashMap.361", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.62", %"class.WTF::Vector.368", %"class.blink::Member.373", %"class.blink::Member.375", i8, %"class.blink::Member.62", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.377", %"class.blink::HeapVector.379", %"class.std::__1::unique_ptr.387", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.393", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.406", %"class.WTF::Vector.408", i8, i8, %"class.std::__1::unique_ptr.413", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.64", %"class.blink::HeapVector.419", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.427", i8, i32, %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.435", %"class.WTF::HashMap.437", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.450", i8, i32, %"class.blink::Member.457", %"class.blink::Member.459", i32, %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.std::__1::unique_ptr.467", i64, %"class.std::__1::unique_ptr.473", i32, i32, %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.483", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.485", %"class.WTF::Vector.487", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.492", %"class.blink::Member.499", %"class.std::__1::unique_ptr.501", %"class.blink::Member.507", i8, i8, %"class.WTF::String", %"class.blink::Member.509", i8, [7 x i8], %"class.blink::HeapHashMap.511", %"class.blink::HeapObserverSet", %"class.blink::Member.525", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.527", i32, i8, i8, %"class.blink::WeakMember.529", %"class.blink::Member.530" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.88" }
%"class.blink::HeapHashMap.88" = type { %"class.WTF::HashMap.91" }
%"class.WTF::HashMap.91" = type { %"class.WTF::HashTable.92" }
%"class.WTF::HashTable.92" = type <{ %"struct.WTF::KeyValuePair.94"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.94" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.99" }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i32 }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.133 }
%class.scoped_refptr.133 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.134", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.134" = type { %"class.base::RefCounted.135" }
%"class.base::RefCounted.135" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.136", i32, [4 x i8], %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.288", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.313", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.252", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i64 }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist.218"* }
%"class.blink::Worklist.218" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::Worklist.225"* }
%"class.blink::Worklist.225" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.172" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.246", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { i64 }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { float }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.255", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.264" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.294" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.204"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.211"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.543" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.312 }
%class.scoped_refptr.312 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__cxx_atomic_impl.315" }
%"struct.std::__1::__cxx_atomic_impl.315" = type { %"struct.std::__1::__cxx_atomic_base_impl.316" }
%"struct.std::__1::__cxx_atomic_base_impl.316" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.330" }
%"class.blink::HeapHashMap.330" = type { %"class.WTF::HashMap.333" }
%"class.WTF::HashMap.333" = type { %"class.WTF::HashTable.334" }
%"class.WTF::HashTable.334" = type <{ %"struct.WTF::KeyValuePair.336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.336" = type opaque
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.341" }
%"class.WTF::HashTable.341" = type <{ %"class.blink::WeakMember.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.343" = type opaque
%"class.blink::HeapHashSet.344" = type { %"class.WTF::HashSet.347" }
%"class.WTF::HashSet.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ %"class.blink::WeakMember.350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.350" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.361" = type { %"class.WTF::HashMap.364" }
%"class.WTF::HashMap.364" = type { %"class.WTF::HashTable.365" }
%"class.WTF::HashTable.365" = type <{ %"struct.WTF::KeyValuePair.367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.367" = type opaque
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.379" = type { %"class.WTF::Vector.382" }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::Member.385"*, i32, i32 }
%"class.blink::Member.385" = type opaque
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.393" = type { %"class.WTF::HashSet.396" }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"class.blink::WeakMember.399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.399" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.400", i32, [4 x i8] }>
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"struct.std::__1::pair.403"*, i32, i32 }
%"struct.std::__1::pair.403" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.64" = type { %"class.WTF::Vector.67" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::HeapVector.419" = type { %"class.WTF::Vector.422" }
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424" }
%"class.WTF::VectorBufferBase.424" = type { %"class.blink::Member.425"*, i32, i32 }
%"class.blink::Member.425" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.48" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.437" = type { %"class.WTF::HashTable.438" }
%"class.WTF::HashTable.438" = type <{ %"struct.WTF::KeyValuePair.441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.441" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.319, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.319 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.320" }>
%"class.base::RefCountedThreadSafe.320" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.322", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.323" }
%"struct.std::__1::atomic.323" = type { %"struct.std::__1::__atomic_base.324" }
%"struct.std::__1::__atomic_base.324" = type { %"struct.std::__1::__atomic_base.325" }
%"struct.std::__1::__atomic_base.325" = type { %"struct.std::__1::__cxx_atomic_impl.326" }
%"struct.std::__1::__cxx_atomic_impl.326" = type { %"struct.std::__1::__cxx_atomic_base_impl.327" }
%"struct.std::__1::__cxx_atomic_base_impl.327" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.49" }
%"class.blink::HeapHashSet.450" = type { %"class.WTF::HashSet.453" }
%"class.WTF::HashSet.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"class.blink::Member.456"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.456" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.492" = type { %"class.WTF::HashMap.495" }
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.498" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.511" = type { %"class.WTF::HashMap.514" }
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.518" }
%"class.blink::HeapHashSet.518" = type { %"class.WTF::HashSet.521" }
%"class.WTF::HashSet.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"class.blink::WeakMember.524"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.524" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.48", %"class.blink::HeapHashSet.534", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.541", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.534" = type { %"class.WTF::HashSet.537" }
%"class.WTF::HashSet.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"class.blink::Member.540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.540" = type opaque
%"class.blink::HeapTaskRunnerTimer.541" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.542", { i64, i64 } }
%"class.blink::WeakMember.542" = type { %"class.blink::MemberBase.528" }
%"class.blink::WeakMember.529" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.54" }
%"class.blink::HeapHashMap.54" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.58" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.62", i32, %"class.blink::HeapVector.64" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.79" = type { %"class.WTF::Vector.82" }
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.blink::Member.85"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.21" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::HeapHashMap.23"* }
%"class.blink::HeapHashMap.23" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.26" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::Persistent.576" = type { %"class.blink::PersistentBase.577" }
%"class.blink::PersistentBase.577" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.578" }
%"class.blink::PersistentNodePtr.578" = type { %"class.blink::PersistentNode"* }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.560" }
%"class.WTF::Vector.560" = type { %"class.WTF::VectorBuffer.561" }
%"class.WTF::VectorBuffer.561" = type { %"class.WTF::VectorBufferBase.562", [64 x i8] }
%"class.WTF::VectorBufferBase.562" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.548" }
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"*, %"class.std::__1::__compressed_pair.550" }
%"class.blink::WebFormControlElement" = type { %"class.blink::WebElement" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.blink::WebFormControlElement"* }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { %"class.blink::WebFormControlElement"*, i32, i32 }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::PtrStorageImpl" = type { %"class.blink::Persistent.576"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }

$_ZN5blink14WebFormElementD2Ev = comdat any

$_ZN5blink14WebFormElementD0Ev = comdat any

$_ZN3WTF6VectorIN5blink21WebFormControlElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS1_22HTMLFormControlElementEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink21WebFormControlElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21WebFormControlElementEEEmm = comdat any

$_ZN5blink21WebFormControlElementD0Ev = comdat any

$_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink14WebFormElementE = comdat any

$_ZTVN5blink21WebFormControlElementE = comdat any

@_ZN5blink10html_names11kActionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink14WebFormElementE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebFormElement"*)* @_ZN5blink14WebFormElementD2Ev to i8*), i8* bitcast (void (%"class.blink::WebFormElement"*)* @_ZN5blink14WebFormElementD0Ev to i8*)] }, comdat, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21WebFormControlElementEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WebFormControlElement]\00", align 1
@_ZTVN5blink21WebFormControlElementE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::WebFormControlElement"*)* @_ZN5blink21WebFormControlElementD0Ev to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1

@_ZN5blink14WebFormElementC1EPNS_15HTMLFormElementE = hidden unnamed_addr alias void (%"class.blink::WebFormElement"*, %"class.blink::HTMLFormElement"*), void (%"class.blink::WebFormElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink14WebFormElementC2EPNS_15HTMLFormElementE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14WebFormElement12AutoCompleteEv(%"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.576"**
  %4 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.576"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Persistent.576"* %4 to %"class.blink::HTMLFormElement"**
  %8 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::HTMLFormElement"* [ %8, %6 ], [ null, %1 ]
  %11 = tail call zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"* %10) #10
  ret i1 %11
}

declare zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebFormElement6ActionEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::Persistent.576"**
  %5 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent.576"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::Persistent.576"* %5 to %"class.blink::HTMLFormElement"**
  %9 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::HTMLFormElement"* [ %9, %7 ], [ null, %2 ]
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kActionAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %11, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %13, align 8
  %15 = icmp eq %"class.blink::ElementData"* %14, null
  br i1 %15, label %66, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::ElementData"* %14 to %"class.blink::UniqueElementData"*
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1, i32 1
  %24 = bitcast %"class.blink::Member.14"* %23 to %"class.blink::Attribute"**
  %25 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %22, i64 0, i32 2, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %33

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1
  %30 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::Attribute"*
  %31 = lshr i32 %18, 1
  %32 = and i32 %31, 268435455
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi %"class.blink::Attribute"* [ %30, %28 ], [ %25, %21 ]
  %35 = phi i32 [ %32, %28 ], [ %27, %21 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %59, %39
  %45 = phi %"class.blink::Attribute"* [ %34, %39 ], [ %60, %59 ]
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %47, %41
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %62, label %59

59:                                               ; preds = %54, %49
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 1
  %61 = icmp eq %"class.blink::Attribute"* %60, %37
  br i1 %61, label %66, label %44

62:                                               ; preds = %54, %44
  %63 = icmp eq %"class.blink::Attribute"* %45, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 1
  br label %68

66:                                               ; preds = %59, %62, %33, %10
  %67 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %68

68:                                               ; preds = %64, %66
  %69 = phi %"class.WTF::AtomicString"* [ %67, %66 ], [ %65, %64 ]
  tail call void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %69) #10
  ret void
}

declare void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebFormElement7GetNameEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::WebPrivatePtr"* %5 to %"class.blink::Persistent.576"**
  %7 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.576"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::Persistent.576"* %7 to %"class.blink::HTMLFormElement"**
  %11 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.blink::HTMLFormElement"* [ %11, %9 ], [ null, %2 ]
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLFormElement7GetNameEv(%"class.blink::HTMLFormElement"* %13) #10
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %12, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15HTMLFormElement7GetNameEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebFormElement6MethodEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::WebPrivatePtr"* %5 to %"class.blink::Persistent.576"**
  %7 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.576"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::Persistent.576"* %7 to %"class.blink::HTMLFormElement"**
  %11 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.blink::HTMLFormElement"* [ %11, %9 ], [ null, %2 ]
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLFormElement6methodEv(%"class.blink::HTMLFormElement"* %13) #10
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %12, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15HTMLFormElement6methodEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14WebFormElement20UniqueRendererFormIdEv(%"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.576"**
  %4 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.576"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Persistent.576"* %4 to %"class.blink::HTMLFormElement"**
  %8 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::HTMLFormElement"* [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %10, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebFormElement22GetFormControlElementsEv(%"class.blink::WebVector"* noalias nocapture sret, %"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.555", align 8
  %4 = alloca %"class.blink::HTMLFormControlElement"*, align 8
  %5 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::WebPrivatePtr"* %5 to %"class.blink::Persistent.576"**
  %7 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %6, align 8
  %8 = icmp eq %"class.blink::Persistent.576"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::Persistent.576"* %7 to %"class.blink::HTMLFormElement"**
  %11 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi %"class.blink::HTMLFormElement"* [ %11, %9 ], [ null, %2 ]
  %14 = bitcast %"class.WTF::Vector.555"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %3, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #10
  %18 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"* %13) #10
  %19 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.29"*, %"class.blink::Member.29"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %12
  %27 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  br label %82

28:                                               ; preds = %12
  %29 = bitcast %"class.blink::HTMLFormControlElement"** %4 to i8*
  %30 = bitcast %"class.blink::HTMLFormControlElement"** %4 to %"class.blink::Member.33"**
  br label %83

31:                                               ; preds = %110
  %32 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %15, align 8
  %33 = load i32, i32* %17, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %32, i64 %34
  %36 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = shl nuw nsw i64 %34, 4
  %40 = call i8* @_Znwm(i64 %39) #11
  %41 = bitcast i8* %40 to %"class.blink::WebFormControlElement"*
  %42 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.blink::WebFormControlElement"** %42 to i8**
  store i8* %40, i8** %43, align 8
  %44 = bitcast %"class.blink::WebVector"* %0 to i8**
  store i8* %40, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %41, i64 %34
  %46 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebFormControlElement"* %45, %"class.blink::WebFormControlElement"** %46, align 8
  br label %47

47:                                               ; preds = %47, %38
  %48 = phi %"class.blink::WebFormControlElement"* [ %54, %47 ], [ %41, %38 ]
  %49 = phi %"class.blink::WebFormControlElement"* [ %53, %47 ], [ %32, %38 ]
  %50 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %48, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %49, i64 0, i32 0, i32 0
  call void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"* %50, %"class.blink::WebNode"* dereferenceable(16) %51) #10
  %52 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %48, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink21WebFormControlElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %49, i64 1
  %54 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %48, i64 1
  %55 = icmp eq %"class.blink::WebFormControlElement"* %53, %35
  br i1 %55, label %56, label %47

56:                                               ; preds = %47
  %57 = bitcast %"class.blink::WebFormControlElement"** %42 to i64*
  %58 = ptrtoint %"class.blink::WebFormControlElement"* %54 to i64
  store i64 %58, i64* %57, align 8
  %59 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %15, align 8
  br label %60

60:                                               ; preds = %31, %56
  %61 = phi %"class.blink::WebFormControlElement"* [ %32, %31 ], [ %59, %56 ]
  %62 = icmp eq %"class.blink::WebFormControlElement"* %61, null
  br i1 %62, label %82, label %63, !prof !2

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::WebFormControlElement"* %61 to i8*
  %65 = load i32, i32* %17, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %80, label %67, !prof !3

67:                                               ; preds = %63
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %61, i64 %68
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi %"class.blink::WebFormControlElement"* [ %75, %70 ], [ %61, %67 ]
  %72 = bitcast %"class.blink::WebFormControlElement"* %71 to void (%"class.blink::WebFormControlElement"*)***
  %73 = load void (%"class.blink::WebFormControlElement"*)**, void (%"class.blink::WebFormControlElement"*)*** %72, align 8
  %74 = load void (%"class.blink::WebFormControlElement"*)*, void (%"class.blink::WebFormControlElement"*)** %73, align 8
  call void %74(%"class.blink::WebFormControlElement"* %71) #10
  %75 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %71, i64 1
  %76 = icmp eq %"class.blink::WebFormControlElement"* %75, %69
  br i1 %76, label %77, label %70

77:                                               ; preds = %70
  store i32 0, i32* %17, align 4
  %78 = bitcast %"class.WTF::Vector.555"* %3 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %63
  %81 = phi i8* [ %79, %77 ], [ %64, %63 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %81) #10
  store %"class.blink::WebFormControlElement"* null, %"class.blink::WebFormControlElement"** %15, align 8
  br label %82

82:                                               ; preds = %26, %60, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  ret void

83:                                               ; preds = %28, %110
  %84 = phi %"class.blink::Member.29"* [ %20, %28 ], [ %111, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  store %"class.blink::HTMLFormControlElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLFormControlElement"*), %"class.blink::HTMLFormControlElement"** %4, align 8
  %85 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %85, align 8
  %87 = icmp eq %"class.blink::ListedElement"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %83
  %89 = bitcast %"class.blink::ListedElement"* %86 to i1 (%"class.blink::ListedElement"*)***
  %90 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %90, i64 3
  %92 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %91, align 8
  %93 = call zeroext i1 %92(%"class.blink::ListedElement"* nonnull %86) #10
  br i1 %93, label %95, label %94

94:                                               ; preds = %88, %83
  store %"class.blink::HTMLFormControlElement"* null, %"class.blink::HTMLFormControlElement"** %4, align 8
  br label %110

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %86, i64 -2, i32 4
  %97 = bitcast %"class.blink::Member.33"* %96 to %"class.blink::HTMLFormControlElement"*
  store %"class.blink::Member.33"* %96, %"class.blink::Member.33"** %30, align 8
  %98 = icmp eq %"class.blink::Member.33"* %96, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = load i32, i32* %17, align 4
  %101 = load i32, i32* %16, align 8
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %109, label %103, !prof !3

103:                                              ; preds = %99
  %104 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %15, align 8
  %105 = zext i32 %100 to i64
  %106 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %104, i64 %105
  call void @_ZN5blink21WebFormControlElementC1EPNS_22HTMLFormControlElementE(%"class.blink::WebFormControlElement"* %106, %"class.blink::HTMLFormControlElement"* nonnull %97) #10
  %107 = load i32, i32* %17, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %17, align 4
  br label %110

109:                                              ; preds = %99
  call void @_ZN3WTF6VectorIN5blink21WebFormControlElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS1_22HTMLFormControlElementEEEvOT_(%"class.WTF::Vector.555"* nonnull %3, %"class.blink::HTMLFormControlElement"** nonnull dereferenceable(8) %4) #10
  br label %110

110:                                              ; preds = %109, %103, %94, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %111 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %84, i64 1
  %112 = icmp eq %"class.blink::Member.29"* %111, %24
  br i1 %112, label %31, label %83
}

declare dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebFormElementC2EPNS_15HTMLFormElementE(%"class.blink::WebFormElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink10WebElementC2EPNS_7ElementE(%"class.blink::WebElement"* %3, %"class.blink::Element"* %4) #10
  %5 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN5blink10WebElementC2EPNS_7ElementE(%"class.blink::WebElement"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7WebNode2ToINS_14WebFormElementEEET_v(%"class.blink::WebFormElement"* noalias sret, %"class.blink::WebNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::WebFormElement"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"* %4) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"* %4, %"class.blink::WebNode"* dereferenceable(16) %1) #10
  ret void
}

declare void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"*, %"class.blink::WebNode"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14WebFormElementD2Ev(%"class.blink::WebFormElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"* %3) #10
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7WebNode7ToConstINS_14WebFormElementEEEKT_v(%"class.blink::WebFormElement"* noalias sret, %"class.blink::WebNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::WebFormElement"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"* %4) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"* %4, %"class.blink::WebNode"* dereferenceable(16) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::WebFormElement"* @_ZN5blink14WebFormElementaSEPNS_15HTMLFormElementE(%"class.blink::WebFormElement"* returned, %"class.blink::HTMLFormElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr"* %3 to %"class.blink::PtrStorageImpl"*
  %5 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %4, %"class.blink::Node"* %5) #10
  ret %"class.blink::WebFormElement"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZNK5blink14WebFormElementcvPNS_15HTMLFormElementEEv(%"class.blink::WebFormElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr"* %2 to %"class.blink::Persistent.576"**
  %4 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %3, align 8
  %5 = icmp eq %"class.blink::Persistent.576"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Persistent.576"* %4 to %"class.blink::HTMLFormElement"**
  %8 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %"class.blink::HTMLFormElement"* [ %8, %6 ], [ null, %1 ]
  ret %"class.blink::HTMLFormElement"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14WebFormElementD0Ev(%"class.blink::WebFormElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"* %3) #10
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %3) #10
  %4 = bitcast %"class.blink::WebFormElement"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21WebFormControlElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPNS1_22HTMLFormControlElementEEEvOT_(%"class.WTF::Vector.555"*, %"class.blink::HTMLFormControlElement"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  br i1 %15, label %16, label %29, !prof !2

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %17, align 8
  %19 = icmp eq %"class.blink::WebFormControlElement"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = zext i32 %14 to i64
  %22 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21WebFormControlElementEEEmm(i64 %21) #10
  %23 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %22, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21WebFormControlElementEEEPKcv, i64 0, i64 0)) #10
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector.555"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = lshr i64 %22, 4
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %6, align 8
  br label %29

28:                                               ; preds = %16
  tail call void @_ZN3WTF6VectorIN5blink21WebFormControlElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.555"* %0, i32 %14) #10
  br label %29

29:                                               ; preds = %2, %20, %28
  %30 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %30, align 8
  %32 = load i32, i32* %3, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %31, i64 %33
  %35 = load %"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormControlElement"** %1, align 8
  tail call void @_ZN5blink21WebFormControlElementC1EPNS_22HTMLFormControlElementE(%"class.blink::WebFormControlElement"* %34, %"class.blink::HTMLFormControlElement"* %35) #10
  %36 = load i32, i32* %3, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %3, align 4
  ret void
}

declare void @_ZN5blink21WebFormControlElementC1EPNS_22HTMLFormControlElementE(%"class.blink::WebFormControlElement"*, %"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21WebFormControlElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.555"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.555"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::WebFormControlElement"* [ %24, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::WebFormControlElement"* [ %23, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %15, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"* %17, %"class.blink::WebNode"* dereferenceable(16) %18) #10
  %19 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %16, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink21WebFormControlElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = bitcast %"class.blink::WebFormControlElement"* %15 to void (%"class.blink::WebFormControlElement"*)***
  %21 = load void (%"class.blink::WebFormControlElement"*)**, void (%"class.blink::WebFormControlElement"*)*** %20, align 8
  %22 = load void (%"class.blink::WebFormControlElement"*)*, void (%"class.blink::WebFormControlElement"*)** %21, align 8
  tail call void %22(%"class.blink::WebFormControlElement"* %15) #10
  %23 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %16, i64 1
  %24 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %15, i64 1
  %25 = icmp eq %"class.blink::WebFormControlElement"* %24, %10
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %4
  %27 = bitcast %"class.blink::WebFormControlElement"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #10
  br label %65

28:                                               ; preds = %2
  %29 = zext i32 %1 to i64
  %30 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21WebFormControlElementEEEmm(i64 %29) #10
  %31 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21WebFormControlElementEEEPKcv, i64 0, i64 0)) #10
  %32 = lshr i64 %30, 4
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %35, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = bitcast %"class.blink::WebFormControlElement"* %35 to i8*
  br label %60

43:                                               ; preds = %28
  %44 = bitcast i8* %31 to %"class.blink::WebFormControlElement"*
  br label %45

45:                                               ; preds = %43, %45
  %46 = phi %"class.blink::WebFormControlElement"* [ %55, %45 ], [ %35, %43 ]
  %47 = phi %"class.blink::WebFormControlElement"* [ %54, %45 ], [ %44, %43 ]
  %48 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %47, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %46, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"* %48, %"class.blink::WebNode"* dereferenceable(16) %49) #10
  %50 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %47, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink21WebFormControlElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = bitcast %"class.blink::WebFormControlElement"* %46 to void (%"class.blink::WebFormControlElement"*)***
  %52 = load void (%"class.blink::WebFormControlElement"*)**, void (%"class.blink::WebFormControlElement"*)*** %51, align 8
  %53 = load void (%"class.blink::WebFormControlElement"*)*, void (%"class.blink::WebFormControlElement"*)** %52, align 8
  tail call void %53(%"class.blink::WebFormControlElement"* %46) #10
  %54 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %47, i64 1
  %55 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %46, i64 1
  %56 = icmp eq %"class.blink::WebFormControlElement"* %55, %39
  br i1 %56, label %57, label %45

57:                                               ; preds = %45
  %58 = bitcast %"class.WTF::Vector.555"* %0 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %41, %57
  %61 = phi i8* [ %59, %57 ], [ %42, %41 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #10
  %62 = bitcast %"class.WTF::Vector.555"* %0 to i64*
  store atomic i64 %33, i64* %62 monotonic, align 8
  %63 = trunc i64 %32 to i32
  %64 = getelementptr inbounds %"class.WTF::Vector.555", %"class.WTF::Vector.555"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %63, i32* %64, align 8
  br label %65

65:                                               ; preds = %60, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21WebFormControlElementEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21WebFormControlElementD0Ev(%"class.blink::WebFormControlElement"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %2) #10
  %3 = bitcast %"class.blink::WebFormControlElement"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"*, %"class.blink::WebNode"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_4NodeELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = icmp eq %"class.blink::Node"* %1, null
  %5 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %6 = load %"class.blink::Persistent.576"*, %"class.blink::Persistent.576"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent.576"* %6, null
  br i1 %4, label %8, label %23

8:                                                ; preds = %2
  br i1 %7, label %22, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::Persistent.576", %"class.blink::Persistent.576"* %6, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %15 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::PersistentRegion"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::PersistentNode"* %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %13, %9
  %21 = bitcast %"class.blink::Persistent.576"* %6 to i8*
  tail call void @free(i8* %21) #10
  br label %22

22:                                               ; preds = %8, %20
  store %"class.blink::Persistent.576"* null, %"class.blink::Persistent.576"** %5, align 8
  br label %65

23:                                               ; preds = %2
  br i1 %7, label %24, label %30

24:                                               ; preds = %23
  %25 = tail call noalias i8* @malloc(i64 16) #10
  %26 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 32, i1 false) #10
  %27 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  %28 = bitcast %"class.blink::PtrStorageImpl"* %0 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast i8* %25 to %"class.blink::Persistent.576"*
  br label %30

30:                                               ; preds = %23, %24
  %31 = phi %"class.blink::Persistent.576"* [ %6, %23 ], [ %29, %24 ]
  %32 = getelementptr inbounds %"class.blink::Persistent.576", %"class.blink::Persistent.576"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::Persistent.576", %"class.blink::Persistent.576"* %31, i64 0, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %33, align 8
  %34 = ptrtoint %"class.blink::Node"* %1 to i64
  switch i64 %34, label %35 [
    i64 0, label %54
    i64 -1, label %54
  ]

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::Persistent.576", %"class.blink::Persistent.576"* %31, i64 0, i32 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %39, label %65

39:                                               ; preds = %35
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %41 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %41, align 8
  %43 = icmp eq %"class.blink::PersistentNode"* %42, null
  br i1 %43, label %44, label %47, !prof !3

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %45) #10
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %41, align 8
  br label %47

47:                                               ; preds = %44, %39
  %48 = phi %"class.blink::PersistentNode"* [ %46, %44 ], [ %42, %39 ]
  %49 = bitcast %"class.blink::PersistentNode"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  store i64 %50, i64* %51, align 8
  %52 = bitcast %"class.blink::PersistentNode"* %48 to %"class.blink::PersistentBase.577"**
  store %"class.blink::PersistentBase.577"* %32, %"class.blink::PersistentBase.577"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %48, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %53, align 8
  store %"class.blink::PersistentNode"* %48, %"class.blink::PersistentNode"** %36, align 8
  br label %65

54:                                               ; preds = %30, %30
  %55 = getelementptr inbounds %"class.blink::Persistent.576", %"class.blink::Persistent.576"* %31, i64 0, i32 0, i32 1, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %55, align 8
  br label %65

65:                                               ; preds = %58, %54, %47, %35, %22
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::Node"**
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::Node"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Node"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
