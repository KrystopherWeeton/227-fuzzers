; ModuleID = '../../third_party/blink/renderer/platform/fonts/script_run_iterator.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/script_run_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::ICUScriptData>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::ICUScriptData>::InstanceStorage" = type { [8 x i8] }
%"class.blink::ScriptData" = type { i32 (...)** }
%"class.blink::ScriptRunIterator" = type { i16*, i32, %"class.WTF::Deque", i32, %"class.WTF::Vector", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", i32, i32, i32, %"class.blink::ScriptData"* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::ScriptRunIterator::BracketRec, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::ScriptRunIterator::BracketRec, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { %"struct.blink::ScriptRunIterator::BracketRec"*, i32, i32 }
%"struct.blink::ScriptRunIterator::BracketRec" = type { i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector"* }
%"class.blink::ICUScriptData" = type { %"class.blink::ScriptData" }
%"class.blink::ICUError" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque"*, i32 }>

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZNK3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink13ICUScriptDataD0Ev = comdat any

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI11UScriptCodeEEmm = comdat any

$_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_ = comdat any

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE6insertIRS1_EEvjOT_ = comdat any

$_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17ScriptRunIterator10BracketRecEEEmm = comdat any

$_ZNK3WTF13DequeIteratorIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEEdeEv = comdat any

@_ZN5blink17ScriptRunIterator15kMaxScriptCountE = hidden local_unnamed_addr constant i32 32, align 4
@_ZN5blink10ScriptData15kMaxScriptCountE = hidden local_unnamed_addr constant i32 32, align 4
@_ZZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance = internal global i64 0, align 8
@_ZTVN5blink10ScriptDataE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ScriptData"*)* @_ZN5blink10ScriptDataD2Ev to i8*), i8* bitcast (void (%"class.blink::ScriptData"*)* @_ZN5blink10ScriptDataD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink13ICUScriptDataE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ScriptData"*)* @_ZN5blink10ScriptDataD2Ev to i8*), i8* bitcast (void (%"class.blink::ICUScriptData"*)* @_ZN5blink13ICUScriptDataD0Ev to i8*), i8* bitcast (void (%"class.blink::ICUScriptData"*, i32, %"class.WTF::Vector"*)* @_ZNK5blink13ICUScriptData10GetScriptsEiRN3WTF6VectorI11UScriptCodeLj32ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::ICUScriptData"*, i32)* @_ZNK5blink13ICUScriptData16GetPairedBracketEi to i8*), i8* bitcast (i32 (%"class.blink::ICUScriptData"*, i32)* @_ZNK5blink13ICUScriptData20GetPairedBracketTypeEi to i8*)] }, align 8
@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI11UScriptCodeEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = UScriptCode]\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<UScriptCode, 32, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17ScriptRunIterator10BracketRecEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptRunIterator::BracketRec]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

@_ZN5blink10ScriptDataD1Ev = hidden unnamed_addr alias void (%"class.blink::ScriptData"*), void (%"class.blink::ScriptData"*)* @_ZN5blink10ScriptDataD2Ev
@_ZN5blink17ScriptRunIteratorC1EPKDsjPKNS_10ScriptDataE = hidden unnamed_addr alias void (%"class.blink::ScriptRunIterator"*, i16*, i32, %"class.blink::ScriptData"*), void (%"class.blink::ScriptRunIterator"*, i16*, i32, %"class.blink::ScriptData"*)* @_ZN5blink17ScriptRunIteratorC2EPKDsjPKNS_10ScriptDataE
@_ZN5blink17ScriptRunIteratorC1EPKDsj = hidden unnamed_addr alias void (%"class.blink::ScriptRunIterator"*, i16*, i32), void (%"class.blink::ScriptRunIterator"*, i16*, i32)* @_ZN5blink17ScriptRunIteratorC2EPKDsj

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink10ScriptDataD0Ev(%"class.blink::ScriptData"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13ICUScriptData10GetScriptsEiRN3WTF6VectorI11UScriptCodeLj32ENS1_18PartitionAllocatorEEE(%"class.blink::ICUScriptData"* nocapture readnone, i32, %"class.WTF::Vector"* dereferenceable(144)) unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::ICUError", align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.blink::ICUError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::ICUError", %"class.blink::ICUError"* %4, i64 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, 31
  br i1 %10, label %11, label %26

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, 31
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %2, i32 31) #12
  %16 = load i32, i32* %8, align 4
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi i32 [ %16, %15 ], [ %9, %11 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds i32, i32* %20, i64 %21
  %23 = bitcast i32* %22 to i8*
  %24 = shl nuw nsw i64 %21, 2
  %25 = sub nsw i64 124, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 %25, i1 false) #12
  br label %26

26:                                               ; preds = %3, %17
  store i32 31, i32* %8, align 4
  %27 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0) #12
  %28 = load i32, i32* %8, align 4
  %29 = call i32 @uscript_getScriptExtensions_69(i32 %1, i32* %27, i32 %28, i32* nonnull %7) #12
  %30 = load i32, i32* %7, align 4
  %31 = icmp eq i32 %30, 15
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = load i32, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %34

34:                                               ; preds = %32, %26
  %35 = phi i32 [ %33, %32 ], [ %29, %26 ]
  %36 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #12
  store i32 -1431655766, i32* %5, align 4
  %37 = call i32 @uscript_getScript_69(i32 %1, i32* nonnull %7) #12
  %38 = load i32, i32* %7, align 4
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %58, label %40, !prof !2

40:                                               ; preds = %34
  store i32 %37, i32* %5, align 4
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %186, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %8, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  store i32 0, i32* %8, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 1, i64 0
  %52 = ptrtoint i8* %51 to i64
  %53 = bitcast %"class.WTF::Vector"* %2 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  store i32 32, i32* %41, align 8
  %54 = bitcast i8* %51 to i32*
  %55 = icmp eq i32* %50, %54
  br i1 %55, label %186, label %56, !prof !2

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %57, i32* %50) #12
  br label %186

58:                                               ; preds = %34
  %59 = or i32 %37, 32
  %60 = icmp eq i32 %59, 54
  %61 = select i1 %60, i32 20, i32 %37, !prof !3
  store i32 %61, i32* %5, align 4
  %62 = load i32, i32* %8, align 4
  %63 = icmp ult i32 %62, %35
  br i1 %63, label %64, label %83

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ult i32 %66, %35
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %2, i32 %35) #12
  %69 = load i32, i32* %8, align 4
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %69, %68 ], [ %62, %64 ]
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  %76 = zext i32 %35 to i64
  %77 = getelementptr inbounds i32, i32* %73, i64 %76
  %78 = bitcast i32* %75 to i8*
  %79 = ptrtoint i32* %77 to i64
  %80 = ptrtoint i32* %75 to i64
  %81 = sub i64 %79, %80
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 %81, i1 false) #12
  %82 = load i32, i32* %5, align 4
  br label %83

83:                                               ; preds = %58, %70
  %84 = phi i32 [ %61, %58 ], [ %82, %70 ]
  store i32 %35, i32* %8, align 4
  %85 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %186, label %88

88:                                               ; preds = %83
  switch i32 %84, label %89 [
    i32 0, label %120
    i32 1, label %146
    i32 -1, label %146
  ]

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 1
  %93 = load i32, i32* %8, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %91, i64 %94
  %96 = icmp eq i32 %93, 1
  br i1 %96, label %104, label %97

97:                                               ; preds = %89, %101
  %98 = phi i32* [ %102, %101 ], [ %92, %89 ]
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %84
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds i32, i32* %98, i64 1
  %103 = icmp eq i32* %102, %95
  br i1 %103, label %107, label %97

104:                                              ; preds = %97, %89
  %105 = phi i32* [ %92, %89 ], [ %98, %97 ]
  %106 = icmp eq i32* %105, %95
  br i1 %106, label %107, label %115

107:                                              ; preds = %101, %104
  %108 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %93, %109
  br i1 %110, label %114, label %111, !prof !3

111:                                              ; preds = %107
  store i32 %84, i32* %95, align 4
  %112 = load i32, i32* %8, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %8, align 4
  br label %115

114:                                              ; preds = %107
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector"* %2, i32* nonnull dereferenceable(4) %5) #12
  br label %115

115:                                              ; preds = %114, %111, %104
  %116 = phi i32* [ %105, %104 ], [ %95, %111 ], [ %95, %114 ]
  %117 = load i32*, i32** %90, align 8
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %116, align 4
  store i32 %119, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  br label %186

120:                                              ; preds = %88
  %121 = icmp eq i32 %35, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %120
  %123 = load i32, i32* %8, align 4
  %124 = icmp ugt i32 %123, 1
  br i1 %124, label %126, label %186

125:                                              ; preds = %120
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE6insertIRS1_EEvjOT_(%"class.WTF::Vector"* %2, i32 0, i32* nonnull dereferenceable(4) %5) #12
  br label %186

126:                                              ; preds = %122, %142
  %127 = phi i32 [ %143, %142 ], [ 1, %122 ]
  %128 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 25
  br i1 %130, label %137, label %131

131:                                              ; preds = %126
  %132 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %127)
  %133 = load i32, i32* %132, align 4
  %134 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %133, %135
  br i1 %136, label %137, label %142

137:                                              ; preds = %131, %126
  %138 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  %139 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %127)
  %140 = load i32, i32* %138, align 4
  %141 = load i32, i32* %139, align 4
  store i32 %141, i32* %138, align 4
  store i32 %140, i32* %139, align 4
  br label %142

142:                                              ; preds = %131, %137
  %143 = add nuw i32 %127, 1
  %144 = load i32, i32* %8, align 4
  %145 = icmp ult i32 %143, %144
  br i1 %145, label %126, label %186

146:                                              ; preds = %88, %88
  %147 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  %148 = load i32, i32* %8, align 4
  %149 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %148, %150
  br i1 %151, label %160, label %152, !prof !3

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = zext i32 %148 to i64
  %156 = getelementptr inbounds i32, i32* %154, i64 %155
  %157 = load i32, i32* %147, align 4
  store i32 %157, i32* %156, align 4
  %158 = load i32, i32* %8, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %8, align 4
  br label %161

160:                                              ; preds = %146
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector"* %2, i32* dereferenceable(4) %147) #12
  br label %161

161:                                              ; preds = %152, %160
  %162 = load i32, i32* %5, align 4
  %163 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  store i32 %162, i32* %163, align 4
  %164 = load i32, i32* %8, align 4
  %165 = icmp ugt i32 %164, 2
  br i1 %165, label %166, label %186

166:                                              ; preds = %161, %182
  %167 = phi i32 [ %183, %182 ], [ 2, %161 ]
  %168 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 1)
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 25
  br i1 %170, label %177, label %171

171:                                              ; preds = %166
  %172 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %167)
  %173 = load i32, i32* %172, align 4
  %174 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 1)
  %175 = load i32, i32* %174, align 4
  %176 = icmp slt i32 %173, %175
  br i1 %176, label %177, label %182

177:                                              ; preds = %171, %166
  %178 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 1)
  %179 = call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %167)
  %180 = load i32, i32* %178, align 4
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %178, align 4
  store i32 %180, i32* %179, align 4
  br label %182

182:                                              ; preds = %171, %177
  %183 = add nuw i32 %167, 1
  %184 = load i32, i32* %8, align 4
  %185 = icmp ult i32 %183, %184
  br i1 %185, label %166, label %186

186:                                              ; preds = %182, %142, %161, %122, %56, %48, %40, %83, %125, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #12
  %187 = load i32, i32* %7, align 4
  %188 = icmp slt i32 %187, 1
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  call void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"* nonnull %4) #12
  br label %190

190:                                              ; preds = %186, %189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @uscript_getScriptExtensions_69(i32, i32*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13ICUScriptData16GetPairedBracketEi(%"class.blink::ICUScriptData"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %3 = tail call i32 @u_getBidiPairedBracket_69(i32 %1) #12
  ret i32 %3
}

declare i32 @u_getBidiPairedBracket_69(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13ICUScriptData20GetPairedBracketTypeEi(%"class.blink::ICUScriptData"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %3 = tail call i32 @u_getIntPropertyValue_69(i32 %1, i32 4117) #12
  ret i32 %3
}

declare i32 @u_getIntPropertyValue_69(i32, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.blink::ICUScriptData"* @_ZN5blink13ICUScriptData8InstanceEv() local_unnamed_addr #5 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink13ICUScriptDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance) #12
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.blink::ICUScriptData"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance to %"class.blink::ICUScriptData"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ScriptRunIteratorC2EPKDsjPKNS_10ScriptDataE(%"class.blink::ScriptRunIterator"*, i16*, i32, %"class.blink::ScriptData"*) unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 0
  store i16* %1, i16** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %11 = bitcast %"class.WTF::Vector"* %9 to i8**
  %12 = bitcast %"class.WTF::Deque"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 28, i1 false)
  store i8* %10, i8** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 32, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 144, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %15 to i8**
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 32, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::Vector"** %22 to i8**
  store i8* %15, i8** %23, align 8
  %24 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 144, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %25 = getelementptr inbounds i8, i8* %24, i64 16
  %26 = bitcast i8* %24 to i8**
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 32, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::Vector"** %31 to i8**
  store i8* %24, i8** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 7
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 8
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 9
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 10
  store %"class.blink::ScriptData"* %3, %"class.blink::ScriptData"** %36, align 8
  %37 = load i32, i32* %7, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %102, label %39

39:                                               ; preds = %4
  %40 = load i32, i32* %13, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %14, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  store i32 0, i32* %14, align 4
  br label %46

46:                                               ; preds = %45, %42
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = ptrtoint i8* %10 to i64
  %50 = bitcast %"class.WTF::Vector"* %9 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  store i32 32, i32* %13, align 8
  %51 = bitcast i8* %10 to i32*
  %52 = icmp eq i32* %48, %51
  br i1 %52, label %56, label %53, !prof !2

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %54, i32* %48) #12
  %55 = load i32, i32* %13, align 8
  br label %56

56:                                               ; preds = %39, %46, %53
  %57 = phi i32 [ 0, %39 ], [ 32, %46 ], [ %55, %53 ]
  %58 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #12
  store i32 0, i32* %5, align 4
  %59 = load i32, i32* %14, align 4
  %60 = icmp eq i32 %59, %57
  br i1 %60, label %68, label %61, !prof !3

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds i32, i32* %63, i64 %64
  store i32 0, i32* %65, align 4
  %66 = load i32, i32* %14, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %14, align 4
  br label %69

68:                                               ; preds = %56
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* %9, i32* nonnull dereferenceable(4) %5) #12
  br label %69

69:                                               ; preds = %61, %68
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #12
  %70 = load i16*, i16** %6, align 8
  %71 = load i32, i32* %34, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %34, align 4
  %73 = zext i32 %71 to i64
  %74 = getelementptr inbounds i16, i16* %70, i64 %73
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  store i32 %76, i32* %33, align 8
  %77 = and i32 %76, 64512
  %78 = icmp eq i32 %77, 55296
  br i1 %78, label %79, label %94

79:                                               ; preds = %69
  %80 = load i32, i32* %7, align 8
  %81 = icmp eq i32 %72, %80
  br i1 %81, label %94, label %82

82:                                               ; preds = %79
  %83 = zext i32 %72 to i64
  %84 = getelementptr inbounds i16, i16* %70, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = and i32 %86, 64512
  %88 = icmp eq i32 %87, 56320
  br i1 %88, label %89, label %94

89:                                               ; preds = %82
  %90 = add i32 %71, 2
  store i32 %90, i32* %34, align 4
  %91 = shl nuw nsw i32 %76, 10
  %92 = add nsw i32 %91, -56613888
  %93 = add nsw i32 %92, %86
  store i32 %93, i32* %33, align 8
  br label %94

94:                                               ; preds = %82, %89, %79, %69
  %95 = phi i32 [ %76, %82 ], [ %93, %89 ], [ %76, %79 ], [ %76, %69 ]
  %96 = load %"class.blink::ScriptData"*, %"class.blink::ScriptData"** %36, align 8
  %97 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %31, align 8
  %98 = bitcast %"class.blink::ScriptData"* %96 to void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)***
  %99 = load void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)**, void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)*, void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)** %99, i64 2
  %101 = load void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)*, void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)** %100, align 8
  call void %101(%"class.blink::ScriptData"* %96, i32 %95, %"class.WTF::Vector"* dereferenceable(144) %97) #12
  br label %102

102:                                              ; preds = %4, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ScriptRunIteratorC2EPKDsj(%"class.blink::ScriptRunIterator"*, i16*, i32) unnamed_addr #2 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !4

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink13ICUScriptDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance) #12
  br label %10

10:                                               ; preds = %3, %6, %9
  tail call void @_ZN5blink17ScriptRunIteratorC2EPKDsjPKNS_10ScriptDataE(%"class.blink::ScriptRunIterator"* %0, i16* %1, i32 %2, %"class.blink::ScriptData"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink13ICUScriptData8InstanceEvE26s_icu_script_data_instance to %"class.blink::ScriptData"*))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ScriptRunIterator7ConsumeEPjP11UScriptCode(%"class.blink::ScriptRunIterator"*, i32* nocapture, i32* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %126, label %10

10:                                               ; preds = %3
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  store i32 -1431655766, i32* %4, align 4
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #12
  store i32 -1431655766, i32* %5, align 4
  %13 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 10
  %14 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 1
  %16 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 2
  %17 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %81, %10
  %21 = call zeroext i1 @_ZN5blink17ScriptRunIterator5FetchEPjPi(%"class.blink::ScriptRunIterator"* %0, i32* nonnull %4, i32* nonnull %5)
  br i1 %21, label %22, label %97

22:                                               ; preds = %20
  %23 = load %"class.blink::ScriptData"*, %"class.blink::ScriptData"** %13, align 8
  %24 = load i32, i32* %5, align 4
  %25 = bitcast %"class.blink::ScriptData"* %23 to i32 (%"class.blink::ScriptData"*, i32)***
  %26 = load i32 (%"class.blink::ScriptData"*, i32)**, i32 (%"class.blink::ScriptData"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.blink::ScriptData"*, i32)*, i32 (%"class.blink::ScriptData"*, i32)** %26, i64 4
  %28 = load i32 (%"class.blink::ScriptData"*, i32)*, i32 (%"class.blink::ScriptData"*, i32)** %27, align 8
  %29 = tail call i32 %28(%"class.blink::ScriptData"* %23, i32 %24) #12
  switch i32 %29, label %81 [
    i32 1, label %30
    i32 2, label %80
  ]

30:                                               ; preds = %22
  %31 = load i32, i32* %15, align 8
  %32 = load i32, i32* %16, align 4
  %33 = icmp ult i32 %32, %31
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = load i32, i32* %17, align 8
  %36 = add i32 %35, %32
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i32 [ %36, %34 ], [ %32, %30 ]
  %39 = sub i32 %38, %31
  %40 = icmp eq i32 %39, 32
  br i1 %40, label %41, label %50

41:                                               ; preds = %37
  %42 = add i32 %31, 1
  %43 = load i32, i32* %17, align 8
  %44 = add i32 %43, -1
  %45 = icmp eq i32 %31, %44
  %46 = select i1 %45, i32 0, i32 %42
  store i32 %46, i32* %15, align 8
  %47 = load i32, i32* %18, align 8
  %48 = icmp eq i32 %47, 32
  br i1 %48, label %49, label %50

49:                                               ; preds = %41
  store i32 31, i32* %18, align 8
  br label %50

50:                                               ; preds = %49, %41, %37
  %51 = phi i32 [ %46, %41 ], [ %31, %37 ], [ %46, %49 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = add i32 %32, 1
  %55 = icmp eq i32 %54, %51
  br i1 %55, label %64, label %66

56:                                               ; preds = %50
  %57 = icmp eq i32 %32, 0
  %58 = load i32, i32* %17, align 8
  br i1 %57, label %62, label %59

59:                                               ; preds = %56
  %60 = add i32 %58, -1
  %61 = icmp eq i32 %32, %60
  br i1 %61, label %64, label %66

62:                                               ; preds = %56
  %63 = icmp eq i32 %58, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %62, %59, %53
  tail call void @_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #12
  %65 = load i32, i32* %16, align 4
  br label %66

66:                                               ; preds = %53, %59, %62, %64
  %67 = phi i32 [ %32, %53 ], [ %32, %59 ], [ 0, %62 ], [ %65, %64 ]
  %68 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %19, align 8
  %69 = zext i32 %67 to i64
  %70 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %68, i64 %69
  %71 = load i32, i32* %17, align 8
  %72 = add i32 %71, -1
  %73 = icmp eq i32 %67, %72
  %74 = add i32 %67, 1
  %75 = select i1 %73, i32 0, i32 %74
  store i32 %75, i32* %16, align 4
  %76 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %70 to i64*
  %77 = zext i32 %24 to i64
  store i64 %77, i64* %76, align 4
  %78 = load i32, i32* %18, align 8
  %79 = add i32 %78, 1
  store i32 %79, i32* %18, align 8
  br label %81

80:                                               ; preds = %22
  tail call void @_ZN5blink17ScriptRunIterator12CloseBracketEi(%"class.blink::ScriptRunIterator"* %0, i32 %24)
  br label %81

81:                                               ; preds = %22, %80, %66
  %82 = tail call zeroext i1 @_ZN5blink17ScriptRunIterator9MergeSetsEv(%"class.blink::ScriptRunIterator"* %0)
  br i1 %82, label %20, label %83

83:                                               ; preds = %81
  %84 = load i32, i32* %4, align 4
  store i32 %84, i32* %1, align 4
  %85 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 9
  %90 = load i32, i32* %89, align 8
  br label %91

91:                                               ; preds = %83, %88
  %92 = phi i32 [ %90, %88 ], [ %86, %83 ]
  store i32 %92, i32* %2, align 4
  %93 = icmp eq i32 %29, 1
  tail call void @_ZN5blink17ScriptRunIterator10FixupStackE11UScriptCodeb(%"class.blink::ScriptRunIterator"* %0, i32 %92, i1 zeroext %93)
  %94 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %94, align 8
  %96 = tail call dereferenceable(144) %"class.WTF::Vector"* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %6, %"class.WTF::Vector"* dereferenceable(144) %95)
  br label %125

97:                                               ; preds = %20
  %98 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %1, align 4
  %100 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 9
  %105 = load i32, i32* %104, align 8
  br label %106

106:                                              ; preds = %97, %103
  %107 = phi i32 [ %105, %103 ], [ %101, %97 ]
  store i32 %107, i32* %2, align 4
  %108 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %106
  %112 = load i32, i32* %7, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  store i32 0, i32* %7, align 4
  br label %115

115:                                              ; preds = %114, %111
  %116 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %119 = ptrtoint i8* %118 to i64
  %120 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  store i32 32, i32* %108, align 8
  %121 = bitcast i8* %118 to i32*
  %122 = icmp eq i32* %117, %121
  br i1 %122, label %125, label %123, !prof !2

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %124, i32* %117) #12
  br label %125

125:                                              ; preds = %123, %115, %106, %91
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  br label %126

126:                                              ; preds = %3, %125
  %127 = phi i1 [ true, %125 ], [ false, %3 ]
  ret i1 %127
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ScriptRunIterator5FetchEPjPi(%"class.blink::ScriptRunIterator"* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %8, %10
  br i1 %11, label %159, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 65535
  %16 = select i1 %15, i32 2, i32 1
  %17 = sub i32 %8, %16
  store i32 %17, i32* %1, align 4
  %18 = load i32, i32* %13, align 8
  store i32 %18, i32* %2, align 4
  %19 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 6
  %21 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %9, align 8
  %27 = icmp eq i32 %25, %26
  %28 = inttoptr i64 %22 to %"class.WTF::Vector"*
  br i1 %27, label %29, label %31

29:                                               ; preds = %12
  %30 = add i32 %25, 1
  store i32 %30, i32* %7, align 4
  br label %159

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = add i32 %25, 1
  store i32 %34, i32* %7, align 4
  %35 = zext i32 %25 to i64
  %36 = getelementptr inbounds i16, i16* %33, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  store i32 %38, i32* %13, align 8
  %39 = and i32 %38, 64512
  %40 = icmp ne i32 %39, 55296
  %41 = icmp eq i32 %34, %26
  %42 = or i1 %41, %40
  br i1 %42, label %55, label %43

43:                                               ; preds = %31
  %44 = zext i32 %34 to i64
  %45 = getelementptr inbounds i16, i16* %33, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = and i32 %47, 64512
  %49 = icmp eq i32 %48, 56320
  br i1 %49, label %50, label %55

50:                                               ; preds = %43
  %51 = add i32 %25, 2
  store i32 %51, i32* %7, align 4
  %52 = shl nuw nsw i32 %38, 10
  %53 = add nsw i32 %52, -56613888
  %54 = add nsw i32 %53, %47
  store i32 %54, i32* %13, align 8
  br label %55

55:                                               ; preds = %31, %43, %50
  %56 = phi i32 [ %38, %31 ], [ %38, %43 ], [ %54, %50 ]
  %57 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 10
  %58 = load %"class.blink::ScriptData"*, %"class.blink::ScriptData"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.blink::ScriptData"* %58 to void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)***
  %61 = load void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)**, void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)*, void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)** %61, i64 2
  %63 = load void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)*, void (%"class.blink::ScriptData"*, i32, %"class.WTF::Vector"*)** %62, align 8
  tail call void %63(%"class.blink::ScriptData"* %58, i32 %56, %"class.WTF::Vector"* dereferenceable(144) %28) #12
  %64 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %59, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %64, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %159, label %68

68:                                               ; preds = %55
  %69 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %64, i32 0) #12
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %159

72:                                               ; preds = %68
  %73 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %59, align 8
  %74 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %73, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp ugt i32 %75, 1
  br i1 %76, label %77, label %159

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %78, align 8
  %80 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %79, i32 0) #12
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  %83 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %59, align 8
  br i1 %82, label %84, label %139

84:                                               ; preds = %77
  %85 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %78, align 8
  %86 = tail call dereferenceable(144) %"class.WTF::Vector"* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %85, %"class.WTF::Vector"* dereferenceable(144) %83)
  %87 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %78, align 8
  %88 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %87, i64 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  %93 = icmp eq i32 %91, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  store i8* null, i8** %89, align 8
  br label %104

95:                                               ; preds = %84
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %96, i8* %97) #12
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  store i8* %99, i8** %89, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %5) #12
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12
  br label %104

104:                                              ; preds = %101, %95, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %87, i64 0, i32 0, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %116, label %108, !prof !3

108:                                              ; preds = %104
  %109 = getelementptr inbounds i32, i32* %106, i64 1
  %110 = load i32, i32* %90, align 4
  %111 = zext i32 %110 to i64
  %112 = bitcast i32* %106 to i8*
  %113 = bitcast i32* %109 to i8*
  %114 = shl nuw nsw i64 %111, 2
  %115 = add nsw i64 %114, -4
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %112, i8* nonnull align 4 %113, i64 %115, i1 false) #12
  br label %116

116:                                              ; preds = %104, %108
  %117 = load i32, i32* %90, align 4
  %118 = add i32 %117, -1
  store i32 %118, i32* %90, align 4
  %119 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %59, align 8
  %120 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %119, i64 0, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %138

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %119, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %123
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %119, i32 1) #12
  %128 = load i32, i32* %120, align 4
  %129 = zext i32 %128 to i64
  br label %130

130:                                              ; preds = %127, %123
  %131 = phi i64 [ %129, %127 ], [ 0, %123 ]
  %132 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %119, i64 0, i32 0, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %131
  %135 = bitcast i32* %134 to i8*
  %136 = shl nuw nsw i64 %131, 2
  %137 = sub nsw i64 4, %136
  call void @llvm.memset.p0i8.i64(i8* align 4 %135, i8 0, i64 %137, i1 false) #12
  br label %138

138:                                              ; preds = %116, %130
  store i32 1, i32* %120, align 4
  br label %159

139:                                              ; preds = %77
  %140 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %83, i64 0, i32 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %158

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %83, i64 0, i32 0, i32 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %143
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %83, i32 1) #12
  %148 = load i32, i32* %140, align 4
  %149 = zext i32 %148 to i64
  br label %150

150:                                              ; preds = %147, %143
  %151 = phi i64 [ %149, %147 ], [ 0, %143 ]
  %152 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %83, i64 0, i32 0, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 %151
  %155 = bitcast i32* %154 to i8*
  %156 = shl nuw nsw i64 %151, 2
  %157 = sub nsw i64 4, %156
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %155, i8 0, i64 %157, i1 false) #12
  br label %158

158:                                              ; preds = %139, %150
  store i32 1, i32* %140, align 4
  br label %159

159:                                              ; preds = %68, %72, %158, %138, %55, %3, %29
  %160 = phi i1 [ true, %29 ], [ false, %3 ], [ false, %55 ], [ true, %138 ], [ true, %158 ], [ true, %72 ], [ true, %68 ]
  ret i1 %160
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ScriptRunIterator11OpenBracketEi(%"class.blink::ScriptRunIterator"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, %7
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i32 [ %12, %9 ], [ %7, %2 ]
  %15 = sub i32 %14, %5
  %16 = icmp eq i32 %15, 32
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = add i32 %5, 1
  %19 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -1
  %22 = icmp eq i32 %5, %21
  %23 = select i1 %22, i32 0, i32 %18
  store i32 %23, i32* %4, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 32
  br i1 %26, label %27, label %28

27:                                               ; preds = %17
  store i32 31, i32* %24, align 8
  br label %28

28:                                               ; preds = %27, %13, %17
  %29 = phi i32 [ %23, %17 ], [ %5, %13 ], [ %23, %27 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i32 %7, 1
  %33 = icmp eq i32 %32, %29
  br i1 %33, label %43, label %45

34:                                               ; preds = %28
  %35 = icmp eq i32 %7, 0
  %36 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  br i1 %35, label %41, label %38

38:                                               ; preds = %34
  %39 = add i32 %37, -1
  %40 = icmp eq i32 %7, %39
  br i1 %40, label %43, label %45

41:                                               ; preds = %34
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %41, %38, %31
  tail call void @_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %3) #12
  %44 = load i32, i32* %6, align 4
  br label %45

45:                                               ; preds = %31, %38, %41, %43
  %46 = phi i32 [ %7, %31 ], [ %7, %38 ], [ 0, %41 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %47, align 8
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %48, i64 %49
  %51 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = add i32 %52, -1
  %54 = icmp eq i32 %46, %53
  %55 = add i32 %46, 1
  %56 = select i1 %54, i32 0, i32 %55
  store i32 %56, i32* %6, align 4
  %57 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %50 to i64*
  %58 = zext i32 %1 to i64
  store i64 %58, i64* %57, align 4
  %59 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ScriptRunIterator12CloseBracketEi(%"class.blink::ScriptRunIterator"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::DequeIterator", align 8
  %4 = alloca %"class.WTF::DequeIterator", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %157, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 10
  %14 = load %"class.blink::ScriptData"*, %"class.blink::ScriptData"** %13, align 8
  %15 = bitcast %"class.blink::ScriptData"* %14 to i32 (%"class.blink::ScriptData"*, i32)***
  %16 = load i32 (%"class.blink::ScriptData"*, i32)**, i32 (%"class.blink::ScriptData"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::ScriptData"*, i32)*, i32 (%"class.blink::ScriptData"*, i32)** %16, i64 3
  %18 = load i32 (%"class.blink::ScriptData"*, i32)*, i32 (%"class.blink::ScriptData"*, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::ScriptData"* %14, i32 %1) #12
  %20 = load i32, i32* %8, align 4, !noalias !5
  %21 = ptrtoint %"class.WTF::Deque"* %12 to i64
  %22 = load i32, i32* %6, align 8, !noalias !10
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %157, label %24

24:                                               ; preds = %11
  %25 = bitcast %"class.WTF::DequeIterator"* %3 to i8*
  %26 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 1
  %27 = bitcast %"class.WTF::DequeIterator"* %3 to i64*
  %28 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  br label %29

29:                                               ; preds = %24, %152
  %30 = phi i32 [ %20, %24 ], [ %154, %152 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false) #12
  store i64 %21, i64* %27, align 8
  store i32 %30, i32* %26, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = load i32, i32* %28, align 8
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi i32 [ %33, %32 ], [ %30, %29 ]
  %36 = add i32 %35, -1
  store i32 %36, i32* %26, align 8
  %37 = call dereferenceable(8) %"struct.blink::ScriptRunIterator::BracketRec"* @_ZNK3WTF13DequeIteratorIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  %38 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, %19
  br i1 %40, label %41, label %149

41:                                               ; preds = %34
  %42 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #12
  store i32 -1431655766, i32* %5, align 4
  %43 = bitcast %"class.WTF::DequeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #12
  %45 = bitcast %"class.WTF::DequeIterator"* %4 to i64*
  store i64 %21, i64* %45, align 8
  store i32 %30, i32* %44, align 8
  br i1 %31, label %46, label %48

46:                                               ; preds = %41
  %47 = load i32, i32* %28, align 8
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi i32 [ %47, %46 ], [ %30, %41 ]
  %50 = add i32 %49, -1
  store i32 %50, i32* %44, align 8
  %51 = call dereferenceable(8) %"struct.blink::ScriptRunIterator::BracketRec"* @_ZNK3WTF13DequeIteratorIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  %52 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %5, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %92, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %56, align 8
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 1, i64 0
  %70 = ptrtoint i8* %69 to i64
  %71 = bitcast %"class.WTF::Vector"* %57 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  store i32 32, i32* %58, align 8
  %72 = bitcast i8* %69 to i32*
  %73 = icmp eq i32* %68, %72
  br i1 %73, label %76, label %74, !prof !2

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %75, i32* %68) #12
  br label %76

76:                                               ; preds = %55, %66, %74
  %77 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %56, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %77, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %77, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %91, label %83, !prof !3

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %77, i64 0, i32 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = zext i32 %79 to i64
  %87 = getelementptr inbounds i32, i32* %85, i64 %86
  %88 = load i32, i32* %5, align 4
  store i32 %88, i32* %87, align 4
  %89 = load i32, i32* %78, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %78, align 4
  br label %92

91:                                               ; preds = %76
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector"* %77, i32* nonnull dereferenceable(4) %5) #12
  br label %92

92:                                               ; preds = %91, %83, %48
  %93 = load i32, i32* %8, align 4, !noalias !15
  %94 = icmp eq i32 %93, %30
  br i1 %94, label %132, label %95

95:                                               ; preds = %92, %102
  %96 = phi i32 [ %104, %102 ], [ %93, %92 ]
  %97 = phi i64 [ %98, %102 ], [ 0, %92 ]
  %98 = add nuw nsw i64 %97, 1
  %99 = icmp eq i32 %96, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = load i32, i32* %28, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i32 [ %101, %100 ], [ %96, %95 ]
  %104 = add i32 %103, -1
  %105 = icmp eq i32 %104, %30
  br i1 %105, label %106, label %95

106:                                              ; preds = %102
  %107 = trunc i64 %98 to i32
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %132

109:                                              ; preds = %106
  %110 = add i32 %107, -1
  %111 = and i32 %107, 3
  %112 = icmp ult i32 %110, 3
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = sub i32 %107, %111
  br label %139

115:                                              ; preds = %172, %109
  %116 = phi i32 [ undef, %109 ], [ %174, %172 ]
  %117 = phi i32 [ %93, %109 ], [ %174, %172 ]
  %118 = icmp eq i32 %111, 0
  br i1 %118, label %130, label %119

119:                                              ; preds = %115, %125
  %120 = phi i32 [ %127, %125 ], [ %117, %115 ]
  %121 = phi i32 [ %128, %125 ], [ %111, %115 ]
  %122 = icmp eq i32 %120, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = load i32, i32* %28, align 8
  br label %125

125:                                              ; preds = %123, %119
  %126 = phi i32 [ %124, %123 ], [ %120, %119 ]
  %127 = add i32 %126, -1
  %128 = add i32 %121, -1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %119, !llvm.loop !20

130:                                              ; preds = %125, %115
  %131 = phi i32 [ %116, %115 ], [ %127, %125 ]
  store i32 %131, i32* %8, align 4
  br label %132

132:                                              ; preds = %92, %130, %106
  %133 = phi i32 [ %107, %130 ], [ %107, %106 ], [ 0, %92 ]
  %134 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = sub nsw i32 %135, %133
  %137 = icmp sgt i32 %136, 0
  %138 = select i1 %137, i32 %136, i32 0
  store i32 %138, i32* %134, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #12
  br label %157

139:                                              ; preds = %172, %113
  %140 = phi i32 [ %93, %113 ], [ %174, %172 ]
  %141 = phi i32 [ %114, %113 ], [ %175, %172 ]
  %142 = icmp eq i32 %140, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  %144 = load i32, i32* %28, align 8
  br label %145

145:                                              ; preds = %139, %143
  %146 = phi i32 [ %144, %143 ], [ %140, %139 ]
  %147 = add i32 %146, -1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %158, label %160

149:                                              ; preds = %34
  br i1 %31, label %150, label %152

150:                                              ; preds = %149
  %151 = load i32, i32* %28, align 8
  br label %152

152:                                              ; preds = %149, %150
  %153 = phi i32 [ %151, %150 ], [ %30, %149 ]
  %154 = add i32 %153, -1
  %155 = load i32, i32* %6, align 8, !noalias !10
  %156 = icmp eq i32 %154, %155
  br i1 %156, label %157, label %29

157:                                              ; preds = %152, %11, %132, %2
  ret void

158:                                              ; preds = %145
  %159 = load i32, i32* %28, align 8
  br label %160

160:                                              ; preds = %158, %145
  %161 = phi i32 [ %159, %158 ], [ %147, %145 ]
  %162 = add i32 %161, -1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  %165 = load i32, i32* %28, align 8
  br label %166

166:                                              ; preds = %164, %160
  %167 = phi i32 [ %165, %164 ], [ %162, %160 ]
  %168 = add i32 %167, -1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  %171 = load i32, i32* %28, align 8
  br label %172

172:                                              ; preds = %170, %166
  %173 = phi i32 [ %171, %170 ], [ %168, %166 ]
  %174 = add i32 %173, -1
  %175 = add i32 %141, -4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %115, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ScriptRunIterator9MergeSetsEv(%"class.blink::ScriptRunIterator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %163, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %163, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds i32, i32* %14, i64 %15
  %17 = getelementptr inbounds i32, i32* %14, i64 1
  %18 = load i32, i32* %14, align 4
  %19 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0)
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 2
  br i1 %21, label %22, label %36

22:                                               ; preds = %12
  %23 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %23, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 2
  %27 = icmp slt i32 %18, 2
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %163

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %163

33:                                               ; preds = %29
  %34 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %23, i32 1)
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %30, align 8
  br label %163

36:                                               ; preds = %12
  %37 = icmp slt i32 %18, 2
  %38 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  br i1 %37, label %39, label %41

39:                                               ; preds = %36
  %40 = tail call dereferenceable(144) %"class.WTF::Vector"* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %8, %"class.WTF::Vector"* dereferenceable(144) %38)
  br label %163

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %43, i64 %46
  %48 = icmp eq i32 %10, 1
  %49 = icmp eq i32 %45, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %41, %54
  %51 = phi i32* [ %55, %54 ], [ %43, %41 ]
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %18
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i32, i32* %51, i64 1
  %56 = icmp eq i32* %55, %47
  br i1 %56, label %57, label %50

57:                                               ; preds = %50, %54, %41
  %58 = phi i32* [ %43, %41 ], [ %51, %50 ], [ %47, %54 ]
  %59 = icmp ne i32* %58, %47
  br i1 %48, label %163, label %60

60:                                               ; preds = %57
  br i1 %59, label %61, label %63

61:                                               ; preds = %60
  %62 = load i32*, i32** %13, align 8
  br label %78

63:                                               ; preds = %60
  %64 = getelementptr inbounds i32, i32* %43, i64 1
  %65 = load i32, i32* %43, align 4
  br label %66

66:                                               ; preds = %70, %63
  %67 = phi i32* [ %17, %63 ], [ %71, %70 ]
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %65
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i32, i32* %67, i64 1
  %72 = icmp eq i32* %71, %16
  br i1 %72, label %73, label %66

73:                                               ; preds = %70
  %74 = load i32*, i32** %13, align 8
  br label %83

75:                                               ; preds = %66
  %76 = icmp eq i32* %67, %16
  %77 = load i32*, i32** %13, align 8
  br i1 %76, label %83, label %78

78:                                               ; preds = %75, %61
  %79 = phi i32* [ %62, %61 ], [ %77, %75 ]
  %80 = phi i32* [ %43, %61 ], [ %64, %75 ]
  %81 = phi i32 [ %18, %61 ], [ %65, %75 ]
  %82 = getelementptr inbounds i32, i32* %79, i64 1
  store i32 %81, i32* %79, align 4
  br label %83

83:                                               ; preds = %75, %73, %78
  %84 = phi i32* [ %80, %78 ], [ %64, %75 ], [ %64, %73 ]
  %85 = phi i32* [ %82, %78 ], [ %77, %75 ], [ %74, %73 ]
  %86 = icmp eq i32* %84, %47
  br i1 %86, label %131, label %87

87:                                               ; preds = %83
  %88 = shl nuw nsw i64 %15, 2
  %89 = add nsw i64 %88, -8
  %90 = and i64 %89, 4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %106

92:                                               ; preds = %87
  %93 = getelementptr inbounds i32, i32* %14, i64 2
  %94 = load i32, i32* %17, align 4
  br label %95

95:                                               ; preds = %99, %92
  %96 = phi i32* [ %100, %99 ], [ %84, %92 ]
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %94
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds i32, i32* %96, i64 1
  %101 = icmp eq i32* %100, %47
  br i1 %101, label %106, label %95

102:                                              ; preds = %95
  %103 = icmp eq i32* %96, %47
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds i32, i32* %85, i64 1
  store i32 %94, i32* %85, align 4
  br label %106

106:                                              ; preds = %102, %104, %99, %87
  %107 = phi i32* [ undef, %87 ], [ %105, %104 ], [ %85, %102 ], [ %85, %99 ]
  %108 = phi i32* [ %85, %87 ], [ %105, %104 ], [ %85, %102 ], [ %85, %99 ]
  %109 = phi i32* [ %17, %87 ], [ %93, %99 ], [ %93, %104 ], [ %93, %102 ]
  %110 = icmp eq i64 %89, 0
  br i1 %110, label %131, label %111

111:                                              ; preds = %106, %176
  %112 = phi i32* [ %177, %176 ], [ %108, %106 ]
  %113 = phi i32* [ %129, %176 ], [ %109, %106 ]
  %114 = getelementptr inbounds i32, i32* %113, i64 1
  %115 = load i32, i32* %113, align 4
  br label %116

116:                                              ; preds = %111, %120
  %117 = phi i32* [ %121, %120 ], [ %84, %111 ]
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, %115
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds i32, i32* %117, i64 1
  %122 = icmp eq i32* %121, %47
  br i1 %122, label %127, label %116

123:                                              ; preds = %116
  %124 = icmp eq i32* %117, %47
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds i32, i32* %112, i64 1
  store i32 %115, i32* %112, align 4
  br label %127

127:                                              ; preds = %120, %123, %125
  %128 = phi i32* [ %126, %125 ], [ %112, %123 ], [ %112, %120 ]
  %129 = getelementptr inbounds i32, i32* %113, i64 2
  %130 = load i32, i32* %114, align 4
  br label %165

131:                                              ; preds = %106, %176, %83
  %132 = phi i32* [ %85, %83 ], [ %107, %106 ], [ %177, %176 ]
  %133 = bitcast %"class.WTF::Vector"* %8 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = ptrtoint i32* %132 to i64
  %136 = sub i64 %135, %134
  %137 = lshr exact i64 %136, 2
  %138 = trunc i64 %137 to i32
  %139 = icmp sgt i32 %138, 0
  %140 = inttoptr i64 %134 to i32*
  br i1 %139, label %141, label %163

141:                                              ; preds = %131
  %142 = load i32, i32* %9, align 4
  %143 = icmp ult i32 %142, %138
  br i1 %143, label %144, label %162

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = icmp ult i32 %146, %138
  br i1 %147, label %148, label %151

148:                                              ; preds = %144
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %8, i32 %138) #12
  %149 = load i32, i32* %9, align 4
  %150 = load i32*, i32** %13, align 8
  br label %151

151:                                              ; preds = %148, %144
  %152 = phi i32* [ %150, %148 ], [ %140, %144 ]
  %153 = phi i32 [ %149, %148 ], [ %142, %144 ]
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %152, i64 %154
  %156 = and i64 %137, 4294967295
  %157 = getelementptr inbounds i32, i32* %152, i64 %156
  %158 = bitcast i32* %155 to i8*
  %159 = ptrtoint i32* %157 to i64
  %160 = ptrtoint i32* %155 to i64
  %161 = sub i64 %159, %160
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %158, i8 0, i64 %161, i1 false) #12
  br label %162

162:                                              ; preds = %141, %151
  store i32 %138, i32* %9, align 4
  br label %163

163:                                              ; preds = %39, %33, %29, %22, %162, %131, %57, %1, %7
  %164 = phi i1 [ false, %7 ], [ false, %1 ], [ true, %39 ], [ true, %33 ], [ true, %29 ], [ true, %22 ], [ %59, %57 ], [ true, %162 ], [ false, %131 ]
  ret i1 %164

165:                                              ; preds = %169, %127
  %166 = phi i32* [ %170, %169 ], [ %84, %127 ]
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, %130
  br i1 %168, label %172, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds i32, i32* %166, i64 1
  %171 = icmp eq i32* %170, %47
  br i1 %171, label %176, label %165

172:                                              ; preds = %165
  %173 = icmp eq i32* %166, %47
  br i1 %173, label %176, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds i32, i32* %128, i64 1
  store i32 %130, i32* %128, align 4
  br label %176

176:                                              ; preds = %169, %174, %172
  %177 = phi i32* [ %175, %174 ], [ %128, %172 ], [ %128, %169 ]
  %178 = icmp eq i32* %129, %16
  br i1 %178, label %131, label %111
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17ScriptRunIterator20ResolveCurrentScriptEv(%"class.blink::ScriptRunIterator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4
  %3 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 0)
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ScriptRunIterator10FixupStackE11UScriptCodeb(%"class.blink::ScriptRunIterator"*, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.WTF::DequeIterator", align 8
  %5 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %13, %11
  br i1 %14, label %15, label %19

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, %13
  br label %19

19:                                               ; preds = %8, %15
  %20 = phi i32 [ %18, %15 ], [ %13, %8 ]
  %21 = sub i32 %20, %11
  %22 = icmp ugt i32 %6, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  br i1 %14, label %24, label %28

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, %13
  br label %28

28:                                               ; preds = %23, %24
  %29 = phi i32 [ %27, %24 ], [ %13, %23 ]
  %30 = sub i32 %29, %11
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi i32 [ %30, %28 ], [ %6, %19 ]
  %33 = ptrtoint %"class.WTF::Deque"* %9 to i64
  br i1 %2, label %34, label %43

34:                                               ; preds = %31
  %35 = icmp eq i32 %13, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %34, %36
  %40 = phi i32 [ %38, %36 ], [ %13, %34 ]
  %41 = add i32 %40, -1
  %42 = add i32 %32, -1
  br label %43

43:                                               ; preds = %31, %39
  %44 = phi i32 [ %41, %39 ], [ %13, %31 ]
  %45 = phi i32 [ 1, %39 ], [ 0, %31 ]
  %46 = phi i32 [ %42, %39 ], [ %32, %31 ]
  store i32 %45, i32* %5, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %72, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.WTF::DequeIterator"* %4 to i8*
  %50 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %4, i64 0, i32 0, i32 1
  %51 = bitcast %"class.WTF::DequeIterator"* %4 to i64*
  %52 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  br label %53

53:                                               ; preds = %48, %68
  %54 = phi i32 [ %46, %48 ], [ %70, %68 ]
  %55 = phi i32 [ %44, %48 ], [ %69, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false) #12
  store i64 %33, i64* %51, align 8
  store i32 %55, i32* %50, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = load i32, i32* %52, align 8
  %59 = add i32 %58, -1
  store i32 %59, i32* %50, align 8
  %60 = call dereferenceable(8) %"struct.blink::ScriptRunIterator::BracketRec"* @_ZNK3WTF13DequeIteratorIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  %61 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %60, i64 0, i32 1
  store i32 %1, i32* %61, align 4
  %62 = load i32, i32* %52, align 8
  %63 = add i32 %62, -1
  br label %68

64:                                               ; preds = %53
  %65 = add i32 %55, -1
  store i32 %65, i32* %50, align 8
  %66 = call dereferenceable(8) %"struct.blink::ScriptRunIterator::BracketRec"* @_ZNK3WTF13DequeIteratorIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #12
  %67 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %66, i64 0, i32 1
  store i32 %1, i32* %67, align 4
  br label %68

68:                                               ; preds = %64, %57
  %69 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %70 = add i32 %54, -1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %53

72:                                               ; preds = %68, %43, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"class.WTF::Vector"* @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(144)) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %86, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %56

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %56

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  store i32 32, i32* %12, align 8
  %26 = bitcast i8* %23 to i32*
  %27 = icmp eq i32* %22, %26
  br i1 %27, label %31, label %28, !prof !2

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %29, i32* %22) #12
  %30 = load i32, i32* %12, align 8
  br label %31

31:                                               ; preds = %15, %20, %28
  %32 = phi i32 [ 0, %15 ], [ 32, %20 ], [ %30, %28 ]
  %33 = load i32, i32* %7, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %56, !prof !2

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = icmp ugt i32 %33, 32
  br i1 %40, label %41, label %49

41:                                               ; preds = %39
  %42 = zext i32 %33 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI11UScriptCodeEEmm(i64 %42) #12
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI11UScriptCodeEEPKcv, i64 0, i64 0)) #12
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %43, 2
  %48 = trunc i64 %47 to i32
  br label %53

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  br label %53

53:                                               ; preds = %49, %41
  %54 = phi i32 [ 32, %49 ], [ %48, %41 ]
  store i32 %54, i32* %12, align 8
  br label %56

55:                                               ; preds = %35
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %33) #12
  br label %56

56:                                               ; preds = %55, %53, %31, %11, %10
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::Vector"* %1 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %5, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::Vector"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = shl nuw nsw i64 %61, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %59, i64 %65, i1 false) #12
  %66 = load i32*, i32** %57, align 8
  %67 = load i32, i32* %5, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32*, i32** %62, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %68
  %72 = icmp ne i32* %71, null
  %73 = icmp ne i32* %69, null
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %84, !prof !2

75:                                               ; preds = %56
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %66, i64 %77
  %79 = bitcast i32* %71 to i8*
  %80 = bitcast i32* %69 to i8*
  %81 = ptrtoint i32* %78 to i64
  %82 = ptrtoint i32* %69 to i64
  %83 = sub i64 %81, %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 4 %80, i64 %83, i1 false) #12
  br label %84

84:                                               ; preds = %56, %75
  %85 = load i32, i32* %7, align 4
  store i32 %85, i32* %5, align 4
  br label %86

86:                                               ; preds = %2, %84
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink10ScriptDataD2Ev(%"class.blink::ScriptData"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ICUScriptDataD0Ev(%"class.blink::ICUScriptData"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::ICUScriptData"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

declare i32 @uscript_getScript_69(i32, i32*) local_unnamed_addr #4

declare void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI11UScriptCodeEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI11UScriptCodeEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %19, i32* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI11UScriptCodeEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI11UScriptCodeEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #12
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"* %53, i32* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI11UScriptCodeEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer"*, i32*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %14 = load i32*, i32** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i32* %1 to i64
  %17 = ptrtoint i32* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i32* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i32* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  %28 = load i32, i32* %24, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE6insertIRS1_EEvjOT_(%"class.WTF::Vector"*, i32, i32* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp ugt i32* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds i32, i32* %31, i64 %34
  %36 = icmp ugt i32* %35, %2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %29) #12
  br label %45

38:                                               ; preds = %33
  %39 = ptrtoint i32* %2 to i64
  %40 = ptrtoint i32* %31 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 2
  call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %29) #12
  %43 = load i32*, i32** %30, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %42
  br label %45

45:                                               ; preds = %38, %37, %23
  %46 = phi i32* [ %2, %23 ], [ %2, %37 ], [ %44, %38 ]
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %49
  %51 = getelementptr inbounds i32, i32* %50, i64 1
  %52 = icmp ne i32* %51, null
  %53 = icmp ne i32* %50, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %64, !prof !2

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %48, i64 %57
  %59 = bitcast i32* %51 to i8*
  %60 = bitcast i32* %50 to i8*
  %61 = ptrtoint i32* %58 to i64
  %62 = ptrtoint i32* %50 to i64
  %63 = sub i64 %61, %62
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* nonnull align 4 %60, i64 %63, i1 false) #12
  br label %64

64:                                               ; preds = %45, %55
  %65 = load i32, i32* %46, align 4
  store i32 %65, i32* %50, align 4
  %66 = load i32, i32* %9, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %9, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %14 = load i32*, i32** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i32* %1 to i64
  %17 = ptrtoint i32* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorI11UScriptCodeLj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i32* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i32* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  %28 = load i32, i32* %24, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17ScriptRunIterator10BracketRecEEEmm(i64 %11) #12
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17ScriptRunIterator10BracketRecEEEmm(i64 %11) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17ScriptRunIterator10BracketRecEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.blink::ScriptRunIterator::BracketRec"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %24, i64 %26
  %29 = icmp ne %"struct.blink::ScriptRunIterator::BracketRec"* %28, null
  %30 = icmp ne %"struct.blink::ScriptRunIterator::BracketRec"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !2

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %5, i64 %33
  %35 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %27 to i8*
  %36 = ptrtoint %"struct.blink::ScriptRunIterator::BracketRec"* %34 to i64
  %37 = ptrtoint %"struct.blink::ScriptRunIterator::BracketRec"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* nonnull align 4 %35, i64 %38, i1 false) #12
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.blink::ScriptRunIterator::BracketRec"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !2

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* nonnull align 4 %46, i64 %47, i1 false) #12
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.blink::ScriptRunIterator::BracketRec"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %52, i64 %59
  %61 = icmp ne %"struct.blink::ScriptRunIterator::BracketRec"* %60, null
  %62 = icmp ne %"struct.blink::ScriptRunIterator::BracketRec"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !2

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %5, i64 %65
  %67 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %58 to i8*
  %68 = ptrtoint %"struct.blink::ScriptRunIterator::BracketRec"* %66 to i64
  %69 = ptrtoint %"struct.blink::ScriptRunIterator::BracketRec"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* nonnull align 4 %67, i64 %70, i1 false) #12
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17ScriptRunIterator10BracketRecEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.blink::ScriptRunIterator::BracketRec"* @_ZNK3WTF13DequeIteratorIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %17, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.blink::ScriptRunIterator::BracketRec", %"struct.blink::ScriptRunIterator::BracketRec"* %28, i64 %30
  ret %"struct.blink::ScriptRunIterator::BracketRec"* %31
}

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE3endEv"}
!8 = distinct !{!8, !9, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE6rbeginEv: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE6rbeginEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE5beginEv"}
!13 = distinct !{!13, !14, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE4rendEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE4rendEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE3endEv"}
!18 = distinct !{!18, !19, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE6rbeginEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF5DequeIN5blink17ScriptRunIterator10BracketRecELj0ENS_18PartitionAllocatorEE6rbeginEv"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
