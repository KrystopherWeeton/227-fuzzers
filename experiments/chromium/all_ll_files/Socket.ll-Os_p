; ModuleID = '../../third_party/swiftshader/src/Common/Socket.cpp'
source_filename = "../../third_party/swiftshader/src/Common/Socket.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.sw::Socket" = type { i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.fd_set = type { [16 x i64] }
%struct.timeval = type { i64, i64 }

@_ZN2sw6SocketC1Ei = hidden unnamed_addr alias void (%"class.sw::Socket"*, i32), void (%"class.sw::Socket"*, i32)* @_ZN2sw6SocketC2Ei
@_ZN2sw6SocketC1EPKcS2_ = hidden unnamed_addr alias void (%"class.sw::Socket"*, i8*, i8*), void (%"class.sw::Socket"*, i8*, i8*)* @_ZN2sw6SocketC2EPKcS2_
@_ZN2sw6SocketD1Ev = hidden unnamed_addr alias void (%"class.sw::Socket"*), void (%"class.sw::Socket"*)* @_ZN2sw6SocketD2Ev

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw6SocketC2Ei(%"class.sw::Socket"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6SocketC2EPKcS2_(%"class.sw::Socket"* nocapture, i8*, i8*) unnamed_addr #1 align 2 {
  %4 = alloca %struct.addrinfo, align 16
  %5 = alloca %struct.addrinfo*, align 8
  %6 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  store i32 -1, i32* %6, align 4
  %7 = bitcast %struct.addrinfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  %8 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %4, i64 0, i32 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 32, i1 false)
  %10 = bitcast %struct.addrinfo* %4 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 1, i32 6>, <4 x i32>* %10, align 16
  %11 = bitcast %struct.addrinfo** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  store %struct.addrinfo* null, %struct.addrinfo** %5, align 8
  %12 = call i32 @getaddrinfo(i8* %1, i8* %2, %struct.addrinfo* nonnull %4, %struct.addrinfo** nonnull %5) #8
  %13 = load %struct.addrinfo*, %struct.addrinfo** %5, align 8
  %14 = icmp eq %struct.addrinfo* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %13, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %13, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = call i32 @socket(i32 %17, i32 %19, i32 %21) #8
  store i32 %22, i32* %6, align 4
  %23 = load %struct.addrinfo*, %struct.addrinfo** %5, align 8
  %24 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %23, i64 0, i32 5
  %25 = load %struct.sockaddr*, %struct.sockaddr** %24, align 8
  %26 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %23, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = call i32 @bind(i32 %22, %struct.sockaddr* %25, i32 %27) #8
  br label %29

29:                                               ; preds = %3, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: optsize
declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) local_unnamed_addr #3

; Function Attrs: nounwind optsize
declare i32 @socket(i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare i32 @bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6SocketD2Ev(%"class.sw::Socket"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @close(i32 %3) #8
  ret void
}

; Function Attrs: optsize
declare i32 @close(i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Socket6listenEi(%"class.sw::Socket"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = tail call i32 @listen(i32 %4, i32 %1) #8
  ret void
}

; Function Attrs: nounwind optsize
declare i32 @listen(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2sw6Socket6selectEi(%"class.sw::Socket"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.fd_set, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = bitcast %struct.fd_set* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 128, i1 false)
  %6 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %3, i64 0, i32 0, i64 0
  %7 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* nonnull %6) #7, !srcloc !2
  %8 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = srem i32 %9, 64
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  %13 = sdiv i32 %9, 64
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %3, i64 0, i32 0, i64 %14
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %12, %16
  store i64 %17, i64* %15, align 8
  %18 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  %21 = sdiv i32 %1, 1000000
  %22 = sext i32 %21 to i64
  store i64 %22, i64* %19, align 8
  %23 = srem i32 %1, 1000000
  %24 = sext i32 %23 to i64
  store i64 %24, i64* %20, align 8
  %25 = call i32 @select(i32 1024, %struct.fd_set* nonnull %3, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* nonnull %4) #8
  %26 = icmp sgt i32 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i1 %26
}

; Function Attrs: optsize
declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden noalias nonnull %"class.sw::Socket"* @_ZN2sw6Socket6acceptEv(%"class.sw::Socket"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 4) #9
  %3 = bitcast i8* %2 to %"class.sw::Socket"*
  %4 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 @accept(i32 %5, %struct.sockaddr* null, i32* null) #8
  %7 = bitcast i8* %2 to i32*
  store i32 %6, i32* %7, align 4
  ret %"class.sw::Socket"* %3
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw6Socket7receiveEPci(%"class.sw::Socket"* nocapture readonly, i8*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %2 to i64
  %7 = tail call i64 @recv(i32 %5, i8* %1, i64 %6, i32 0) #8
  %8 = trunc i64 %7 to i32
  ret i32 %8
}

; Function Attrs: optsize
declare i64 @recv(i32, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Socket4sendEPKci(%"class.sw::Socket"* nocapture readonly, i8*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.sw::Socket", %"class.sw::Socket"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %2 to i64
  %7 = tail call i64 @send(i32 %5, i8* %1, i64 %6, i32 0) #8
  ret void
}

; Function Attrs: optsize
declare i64 @send(i32, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2sw6Socket7startupEv() local_unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2sw6Socket7cleanupEv() local_unnamed_addr #6 align 2 {
  ret void
}

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind optsize }
attributes #9 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2147138479}
