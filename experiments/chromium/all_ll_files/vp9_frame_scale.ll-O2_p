; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_frame_scale.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_frame_scale.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@vp9_filter_kernels = external local_unnamed_addr global [5 x [8 x i16]*], align 16
@vpx_scaled_2d = external local_unnamed_addr global void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_scale_and_extend_frame_c(%struct.yv12_buffer_config* nocapture readonly, %struct.yv12_buffer_config*, i8 zeroext, i32) local_unnamed_addr #0 {
  %5 = alloca [3 x i8*], align 16
  %6 = alloca [3 x i32], align 4
  %7 = alloca [3 x i8*], align 16
  %8 = alloca [3 x i32], align 4
  %9 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = bitcast [3 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #3
  %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 1
  %15 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 2
  %16 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 13
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast [3 x i8*]* %5 to i64*
  store i64 %18, i64* %19, align 16
  %20 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 14
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8** %14 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 15
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %15 to i64*
  store i64 %26, i64* %27, align 16
  %28 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %28) #3
  %29 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  %30 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %31 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  %32 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %29, align 4
  %34 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %0, i64 0, i32 9
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %30, align 4
  store i32 %35, i32* %31, align 4
  %36 = bitcast [3 x i8*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #3
  %37 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 1
  %38 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 2
  %39 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 13
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast [3 x i8*]* %7 to i64*
  store i64 %41, i64* %42, align 16
  %43 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 14
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast i8** %37 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 15
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i8** %38 to i64*
  store i64 %49, i64* %50, align 16
  %51 = bitcast [3 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %51) #3
  %52 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 0
  %53 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 1
  %54 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  %55 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %52, align 4
  %57 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %53, align 4
  store i32 %58, i32* %54, align 4
  %59 = zext i8 %2 to i64
  %60 = getelementptr inbounds [5 x [8 x i16]*], [5 x [8 x i16]*]* @vp9_filter_kernels, i64 0, i64 %59
  %61 = load [8 x i16]*, [8 x i16]** %60, align 8
  %62 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = shl nsw i32 %63, 2
  %65 = mul nsw i32 %10, 3
  %66 = icmp eq i32 %64, %65
  %67 = inttoptr i64 %18 to i8*
  %68 = inttoptr i64 %41 to i8*
  %69 = inttoptr i64 %22 to i8*
  %70 = inttoptr i64 %45 to i8*
  %71 = inttoptr i64 %26 to i8*
  %72 = inttoptr i64 %49 to i8*
  %73 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 3
  %74 = load i32, i32* %73, align 4
  br i1 %66, label %75, label %117

75:                                               ; preds = %4
  %76 = shl nsw i32 %74, 2
  %77 = mul nsw i32 %12, 3
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %79, label %117

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 7
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 8
  %83 = load i32, i32* %82, align 8
  %84 = icmp sgt i32 %74, 0
  br i1 %84, label %85, label %115

85:                                               ; preds = %79
  %86 = icmp sgt i32 %63, 0
  %87 = sext i32 %33 to i64
  %88 = sext i32 %56 to i64
  %89 = sext i32 %74 to i64
  br label %90

90:                                               ; preds = %85, %112
  %91 = phi i64 [ 0, %85 ], [ %113, %112 ]
  br i1 %86, label %92, label %112

92:                                               ; preds = %90
  %93 = trunc i64 %91 to i32
  %94 = shl nsw i32 %93, 2
  %95 = udiv i32 %94, 3
  %96 = mul nsw i32 %95, %33
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %67, i64 %97
  %99 = mul nsw i64 %91, %88
  %100 = getelementptr inbounds i8, i8* %68, i64 %99
  br label %101

101:                                              ; preds = %92, %101
  %102 = phi i64 [ 0, %92 ], [ %109, %101 ]
  %103 = trunc i64 %102 to i32
  %104 = shl nsw i32 %103, 2
  %105 = udiv i32 %104, 3
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %98, i64 %106
  %108 = getelementptr inbounds i8, i8* %100, i64 %102
  tail call void @vpx_scaled_2d_c(i8* %107, i64 %87, i8* %108, i64 %88, [8 x i16]* %61, i32 %3, i32 21, i32 %3, i32 21, i32 3, i32 3) #3
  %109 = add nuw i64 %102, 3
  %110 = trunc i64 %109 to i32
  %111 = icmp sgt i32 %63, %110
  br i1 %111, label %101, label %112

112:                                              ; preds = %101, %90
  %113 = add nuw i64 %91, 3
  %114 = icmp slt i64 %113, %89
  br i1 %114, label %90, label %115

115:                                              ; preds = %112, %79
  %116 = icmp sgt i32 %83, 0
  br i1 %116, label %185, label %184

117:                                              ; preds = %4, %75
  %118 = icmp sgt i32 %74, 0
  %119 = icmp sgt i32 %63, 0
  %120 = shl nsw i32 %10, 4
  %121 = shl nsw i32 %12, 4
  br label %122

122:                                              ; preds = %179, %117
  %123 = phi i32 [ %56, %117 ], [ %183, %179 ]
  %124 = phi i32 [ %33, %117 ], [ %181, %179 ]
  %125 = phi i64 [ 0, %117 ], [ %177, %179 ]
  %126 = icmp eq i64 %125, 0
  br i1 %118, label %127, label %176

127:                                              ; preds = %122
  %128 = select i1 %126, i32 16, i32 8
  %129 = mul i32 %128, %12
  %130 = mul i32 %128, %10
  %131 = getelementptr inbounds [3 x i8*], [3 x i8*]* %5, i64 0, i64 %125
  %132 = xor i1 %126, true
  %133 = zext i1 %132 to i32
  %134 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 %125
  %135 = sext i32 %124 to i64
  %136 = sext i32 %123 to i64
  br label %137

137:                                              ; preds = %127, %173
  %138 = phi i32 [ 0, %127 ], [ %174, %173 ]
  br i1 %119, label %139, label %173

139:                                              ; preds = %137
  %140 = mul i32 %129, %138
  %141 = sdiv i32 %140, %74
  %142 = add nsw i32 %141, %3
  %143 = load i8*, i8** %131, align 8
  %144 = lshr i32 %138, %133
  %145 = mul nsw i32 %144, %12
  %146 = sdiv i32 %145, %74
  %147 = mul nsw i32 %146, %124
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %143, i64 %148
  %150 = load i8*, i8** %134, align 8
  %151 = mul nsw i32 %144, %123
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %150, i64 %152
  %154 = sdiv i32 %120, %63
  %155 = and i32 %142, 15
  %156 = sdiv i32 %121, %74
  br label %157

157:                                              ; preds = %139, %157
  %158 = phi i32 [ 0, %139 ], [ %171, %157 ]
  %159 = mul i32 %130, %158
  %160 = sdiv i32 %159, %63
  %161 = add nsw i32 %160, %3
  %162 = lshr i32 %158, %133
  %163 = mul nsw i32 %162, %10
  %164 = sdiv i32 %163, %63
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %149, i64 %165
  %167 = zext i32 %162 to i64
  %168 = getelementptr inbounds i8, i8* %153, i64 %167
  %169 = load void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)** @vpx_scaled_2d, align 8
  %170 = and i32 %161, 15
  tail call void %169(i8* %166, i64 %135, i8* %168, i64 %136, [8 x i16]* %61, i32 %170, i32 %154, i32 %155, i32 %156, i32 %128, i32 %128) #3
  %171 = add nuw nsw i32 %158, 16
  %172 = icmp slt i32 %171, %63
  br i1 %172, label %157, label %173

173:                                              ; preds = %157, %137
  %174 = add nuw nsw i32 %138, 16
  %175 = icmp slt i32 %174, %74
  br i1 %175, label %137, label %176

176:                                              ; preds = %173, %122
  %177 = add nuw nsw i64 %125, 1
  %178 = icmp eq i64 %177, 3
  br i1 %178, label %184, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 %177
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 %177
  %183 = load i32, i32* %182, align 4
  br label %122

184:                                              ; preds = %176, %243, %115, %215
  tail call void @vpx_extend_frame_borders_c(%struct.yv12_buffer_config* %1) #3
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %51) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #3
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %28) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #3
  ret void

185:                                              ; preds = %115
  %186 = icmp sgt i32 %81, 0
  %187 = sext i32 %35 to i64
  %188 = sext i32 %58 to i64
  %189 = sext i32 %83 to i64
  br label %190

190:                                              ; preds = %212, %185
  %191 = phi i64 [ 0, %185 ], [ %213, %212 ]
  br i1 %186, label %192, label %212

192:                                              ; preds = %190
  %193 = trunc i64 %191 to i32
  %194 = shl nsw i32 %193, 2
  %195 = udiv i32 %194, 3
  %196 = mul nsw i32 %195, %35
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %69, i64 %197
  %199 = mul nsw i64 %191, %188
  %200 = getelementptr inbounds i8, i8* %70, i64 %199
  br label %201

201:                                              ; preds = %201, %192
  %202 = phi i64 [ 0, %192 ], [ %209, %201 ]
  %203 = trunc i64 %202 to i32
  %204 = shl nsw i32 %203, 2
  %205 = udiv i32 %204, 3
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %198, i64 %206
  %208 = getelementptr inbounds i8, i8* %200, i64 %202
  tail call void @vpx_scaled_2d_c(i8* %207, i64 %187, i8* %208, i64 %188, [8 x i16]* %61, i32 %3, i32 21, i32 %3, i32 21, i32 3, i32 3) #3
  %209 = add nuw i64 %202, 3
  %210 = trunc i64 %209 to i32
  %211 = icmp sgt i32 %81, %210
  br i1 %211, label %201, label %212

212:                                              ; preds = %201, %190
  %213 = add nuw i64 %191, 3
  %214 = icmp slt i64 %213, %189
  br i1 %214, label %190, label %215

215:                                              ; preds = %212
  br i1 %116, label %216, label %184

216:                                              ; preds = %215
  %217 = icmp sgt i32 %81, 0
  %218 = sext i32 %35 to i64
  %219 = sext i32 %58 to i64
  %220 = sext i32 %83 to i64
  br label %221

221:                                              ; preds = %243, %216
  %222 = phi i64 [ 0, %216 ], [ %244, %243 ]
  br i1 %217, label %223, label %243

223:                                              ; preds = %221
  %224 = trunc i64 %222 to i32
  %225 = shl nsw i32 %224, 2
  %226 = udiv i32 %225, 3
  %227 = mul nsw i32 %226, %35
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, i8* %71, i64 %228
  %230 = mul nsw i64 %222, %219
  %231 = getelementptr inbounds i8, i8* %72, i64 %230
  br label %232

232:                                              ; preds = %232, %223
  %233 = phi i64 [ 0, %223 ], [ %240, %232 ]
  %234 = trunc i64 %233 to i32
  %235 = shl nsw i32 %234, 2
  %236 = udiv i32 %235, 3
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i8, i8* %229, i64 %237
  %239 = getelementptr inbounds i8, i8* %231, i64 %233
  tail call void @vpx_scaled_2d_c(i8* %238, i64 %218, i8* %239, i64 %219, [8 x i16]* %61, i32 %3, i32 21, i32 %3, i32 21, i32 3, i32 3) #3
  %240 = add nuw i64 %233, 3
  %241 = trunc i64 %240 to i32
  %242 = icmp sgt i32 %81, %241
  br i1 %242, label %232, label %243

243:                                              ; preds = %232, %221
  %244 = add nuw i64 %222, 3
  %245 = icmp slt i64 %244, %220
  br i1 %245, label %221, label %184
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @vpx_scaled_2d_c(i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @vpx_extend_frame_borders_c(%struct.yv12_buffer_config*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
