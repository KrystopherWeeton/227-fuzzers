; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_feature_policy.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_feature_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.208" }
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.WTF::StringImpl"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.256", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.265", %"class.blink::Member.267", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.blink::Member.282", %"class.blink::Member.284", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.181" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.193" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"class.blink::WeakMember.192"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.192" = type opaque
%"class.blink::Supplementable.193" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.194" }
%"class.blink::HeapHashMap.194" = type { %"class.WTF::HashMap.197" }
%"class.WTF::HashMap.197" = type { %"class.WTF::HashTable.198" }
%"class.WTF::HashTable.198" = type <{ %"struct.WTF::KeyValuePair.200"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.200" = type { i8*, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.202" }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.204, %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.244", %"class.blink::Member.250", i32, [4 x i8], %"class.WTF::HashSet.252", i32, i32 }
%class.scoped_refptr.204 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.205", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.213 }
%"class.WTF::RefCounted.205" = type { %"class.base::RefCounted.206" }
%"class.base::RefCounted.206" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.213 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.231", %"class.std::__1::map.240"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.219 }
%union.anon.219 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.231" = type { %"class.std::__1::__tree.232" }
%"class.std::__1::__tree.232" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.240" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.260" }
%"class.WTF::Vector.260" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { %"class.blink::Member.263"*, i32, i32 }
%"class.blink::Member.263" = type opaque
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.269", i32, i32 }
%"class.blink::HeapHashMap.269" = type { %"class.WTF::HashMap.272" }
%"class.WTF::HashMap.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"struct.WTF::KeyValuePair.275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.275" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.289, %"class.blink::Member.290", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.289 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.292" }
%"class.blink::Persistent.292" = type { %"class.blink::PersistentBase.293" }
%"class.blink::PersistentBase.293" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMFeaturePolicy" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.250" }
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.421" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.421" = type { %"class.v8::TracedReference.422" }
%"class.v8::TracedReference.422" = type { %"class.v8::BasicTracedReference.423" }
%"class.v8::BasicTracedReference.423" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.300", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.300" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.424" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { i8* }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Array" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.319", %"class.WTF::HashMap.319", %"class.WTF::HashMap.324", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.376", %"class.blink::Persistent.292", i8, i8, i8, %"class.WTF::Vector.390", %"class.std::__1::unique_ptr.395", %"class.blink::Persistent.401", %"class.blink::Persistent.405", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.301", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.313", i32, i32 }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type opaque
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.328" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.337", %class.scoped_refptr.207 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.332", i8* }
%"class.WTF::HashMap.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"struct.WTF::KeyValuePair.336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.336" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.337" = type { %"class.v8::PersistentValueMapBase.338" }
%"class.v8::PersistentValueMapBase.338" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.339", i8* }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.343" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.344", %"class.WTF::String", %"class.std::__1::unique_ptr.346" }
%"class.WTF::RefCounted.344" = type { %"class.base::RefCounted.345" }
%"class.base::RefCounted.345" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.360", %"class.WTF::Vector.366", i8, i32 }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.WTF::Vector.352"* }
%"class.WTF::Vector.352" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.354", [32 x i8] }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.379", %"class.WTF::HashMap.382" }
%"class.blink::ScopedPersistent.379" = type { %"class.v8::Persistent.380" }
%"class.v8::Persistent.380" = type { %"class.v8::PersistentBase.381" }
%"class.v8::PersistentBase.381" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.WTF::Vector.390" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.401" = type { %"class.blink::PersistentBase.402" }
%"class.blink::PersistentBase.402" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.405" = type { %"class.blink::PersistentBase.406" }
%"class.blink::PersistentBase.406" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.409", i64 }
%"class.blink::HeapVector.409" = type { %"class.WTF::Vector.412" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"struct.std::__1::pair.415"*, i32, i32 }
%"struct.std::__1::pair.415" = type { %"class.blink::UntracedMember", %"class.blink::Member.417" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

@.str = private unnamed_addr constant [14 x i8] c"FeaturePolicy\00", align 1
@_ZN5blink15V8FeaturePolicy18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink15V8FeaturePolicy24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink16DOMFeaturePolicy18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink15V8FeaturePolicy18wrapper_type_info_E, align 8
@_ZZN5blink15V8FeaturePolicy30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_feature_policy32AllowedFeaturesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_feature_policy30AllowsFeatureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_feature_policy25FeaturesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_feature_policy39GetAllowlistForFeatureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [16 x i8] c"allowedFeatures\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"allowsFeature\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"features\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"getAllowlistForFeature\00", align 1
@.str.5 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8FeaturePolicy24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #7
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #7
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink15V8FeaturePolicy18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* null) #7
  %8 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #7
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink15V8FeaturePolicy30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2, %"class.v8::Signature"* %11, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8FeaturePolicy30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #7
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink15V8FeaturePolicy30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_feature_policy32AllowedFeaturesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::Vector.294", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #7
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #7
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 2511) #7
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  %24 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %23) #7
  %25 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %24)
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i64 %26, -4294967296
  %31 = zext i32 %29 to i64
  %32 = or i64 %30, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load i16, i16* %34, align 2
  switch i16 %35, label %40 [
    i16 1057, label %36
    i16 1056, label %36
    i16 1040, label %36
  ]

36:                                               ; preds = %19, %19, %19
  %37 = add i64 %26, 19
  %38 = inttoptr i64 %37 to i8**
  %39 = load i8*, i8** %38, align 1
  br label %42

40:                                               ; preds = %19
  %41 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #7
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i8* [ %39, %36 ], [ %41, %40 ]
  %44 = bitcast i8* %43 to %"class.blink::DOMFeaturePolicy"*
  %45 = bitcast %"class.WTF::Vector.294"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #7
  call void @_ZNK5blink16DOMFeaturePolicy15allowedFeaturesEPNS_11ScriptStateE(%"class.WTF::Vector.294"* nonnull sret %2, %"class.blink::DOMFeaturePolicy"* %44, %"class.blink::ScriptState"* %25) #7
  %46 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %25, %"class.WTF::Vector.294"* nonnull dereferenceable(16) %2) #7
  %47 = icmp eq %"class.v8::Value"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = load i64*, i64** %3, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 3
  %51 = bitcast %"class.v8::Value"* %46 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %50, align 8
  br label %53

53:                                               ; preds = %42, %48
  %54 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %2, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::String"*, %"class.WTF::String"** %54, align 8
  %56 = icmp eq %"class.WTF::String"* %55, null
  br i1 %56, label %91, label %57, !prof !2

57:                                               ; preds = %53
  %58 = bitcast %"class.WTF::String"* %55 to i8*
  %59 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %2, i64 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %89, label %62, !prof !3

62:                                               ; preds = %57
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 %63
  br label %65

65:                                               ; preds = %83, %62
  %66 = phi %"class.WTF::String"* [ %84, %83 ], [ %55, %62 ]
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #7
  br label %83

83:                                               ; preds = %82, %79, %65
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 1
  %85 = icmp eq %"class.WTF::String"* %84, %64
  br i1 %85, label %86, label %65

86:                                               ; preds = %83
  store i32 0, i32* %59, align 4
  %87 = bitcast %"class.WTF::Vector.294"* %2 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %57
  %90 = phi i8* [ %88, %86 ], [ %58, %57 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %54, align 8
  br label %91

91:                                               ; preds = %53, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_feature_policy30AllowsFeatureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::ExceptionState", align 8
  %8 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = bitcast i64* %13 to %"class.v8::Isolate"**
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %15) #7
  %17 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %16) #7
  %18 = icmp eq %"class.blink::ExecutionContext"* %17, null
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %17, i64 0, i32 3
  %20 = icmp eq %"class.blink::UseCounter"* %19, null
  %21 = or i1 %18, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %1
  %23 = bitcast %"class.blink::UseCounter"* %19 to void (%"class.blink::UseCounter"*, i32)***
  %24 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %24, i64 3
  %26 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %25, align 8
  tail call void %26(%"class.blink::UseCounter"* nonnull %19, i32 2511) #7
  br label %27

27:                                               ; preds = %1, %22
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %31, label %91, !prof !3

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %32) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 56, i1 false)
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %37 = bitcast i8** %36 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %15, %"class.v8::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #7
  %43 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #7
  %44 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %29) #7
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #7
  br label %61

61:                                               ; preds = %31, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %63, null
  br i1 %64, label %74, label %65

65:                                               ; preds = %61
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %67 = bitcast %"class.v8::Isolate"* %66 to %"class.v8::internal::Isolate"*
  %68 = load i64, i64* %63, align 8
  %69 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %67, i64 %68) #7
  %70 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %66) #7
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = bitcast i64* %69 to %"class.v8::Value"*
  %73 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %66, %"class.v8::Value"* %72) #7
  br label %74

74:                                               ; preds = %71, %65, %61
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #7
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %32) #7
  br label %581

91:                                               ; preds = %27
  %92 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %93 = sext i32 %29 to i64
  br label %94

94:                                               ; preds = %127, %91
  %95 = phi i64 [ %96, %127 ], [ %93, %91 ]
  %96 = add nsw i64 %95, -1
  %97 = icmp sgt i64 %95, 0
  br i1 %97, label %98, label %139

98:                                               ; preds = %94
  %99 = icmp sgt i64 %95, %93
  br i1 %99, label %100, label %106

100:                                              ; preds = %98
  %101 = load i64*, i64** %11, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %98
  %107 = load i64*, i64** %92, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %96
  %109 = bitcast i64* %108 to %"class.v8::Value"*
  br label %110

110:                                              ; preds = %106, %100
  %111 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  %112 = bitcast %"class.v8::Value"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 3
  %115 = icmp eq i64 %114, 1
  br i1 %115, label %116, label %135

116:                                              ; preds = %110
  %117 = add i64 %113, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i64 %113, -4294967296
  %121 = zext i32 %119 to i64
  %122 = or i64 %120, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load i16, i16* %124, align 2
  %126 = icmp eq i16 %125, 67
  br i1 %126, label %127, label %133

127:                                              ; preds = %116
  %128 = add i64 %113, 23
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, -2
  %132 = icmp eq i32 %131, 10
  br i1 %132, label %94, label %137

133:                                              ; preds = %116
  %134 = trunc i64 %95 to i32
  br label %139

135:                                              ; preds = %110
  %136 = trunc i64 %95 to i32
  br label %139

137:                                              ; preds = %127
  %138 = trunc i64 %95 to i32
  br label %139

139:                                              ; preds = %94, %133, %135, %137
  %140 = phi i32 [ %134, %133 ], [ %136, %135 ], [ %138, %137 ], [ 0, %94 ]
  %141 = load i64*, i64** %92, align 8
  %142 = getelementptr inbounds i64, i64* %141, i64 -1
  %143 = bitcast i64* %142 to %"class.v8::Object"*
  %144 = load i64, i64* %142, align 8
  %145 = add i64 %144, -1
  %146 = inttoptr i64 %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = and i64 %144, -4294967296
  %149 = zext i32 %147 to i64
  %150 = or i64 %148, %149
  %151 = add i64 %150, 7
  %152 = inttoptr i64 %151 to i16*
  %153 = load i16, i16* %152, align 2
  switch i16 %153, label %158 [
    i16 1057, label %154
    i16 1056, label %154
    i16 1040, label %154
  ]

154:                                              ; preds = %139, %139, %139
  %155 = add i64 %144, 19
  %156 = inttoptr i64 %155 to i8**
  %157 = load i8*, i8** %156, align 1
  br label %160

158:                                              ; preds = %139
  %159 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %143, i32 1) #7
  br label %160

160:                                              ; preds = %154, %158
  %161 = phi i8* [ %157, %154 ], [ %159, %158 ]
  %162 = bitcast i8* %161 to %"class.blink::DOMFeaturePolicy"*
  %163 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %143) #7
  %164 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %163)
  %165 = load i32, i32* %28, align 8
  %166 = icmp sgt i32 %165, 0
  br i1 %166, label %173, label %167

167:                                              ; preds = %160
  %168 = load i64*, i64** %11, align 8
  %169 = getelementptr inbounds i64, i64* %168, i64 1
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %170, 160
  %172 = inttoptr i64 %171 to %"class.v8::Value"*
  br label %176

173:                                              ; preds = %160
  %174 = bitcast i64** %92 to %"class.v8::Value"**
  %175 = load %"class.v8::Value"*, %"class.v8::Value"** %174, align 8
  br label %176

176:                                              ; preds = %167, %173
  %177 = phi %"class.v8::Value"* [ %172, %167 ], [ %175, %173 ]
  %178 = bitcast %"class.v8::Value"* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = and i64 %179, 3
  %181 = icmp eq i64 %180, 1
  br i1 %181, label %182, label %206, !prof !4

182:                                              ; preds = %176
  %183 = add i64 %179, -1
  %184 = inttoptr i64 %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = and i64 %179, -4294967296
  %187 = zext i32 %185 to i64
  %188 = or i64 %186, %187
  %189 = add i64 %188, 7
  %190 = inttoptr i64 %189 to i16*
  %191 = load i16, i16* %190, align 2
  %192 = icmp ult i16 %191, 64
  br i1 %192, label %193, label %206, !prof !2

193:                                              ; preds = %182
  br i1 %166, label %200, label %194

194:                                              ; preds = %193
  %195 = load i64*, i64** %11, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 1
  %197 = load i64, i64* %196, align 8
  %198 = add i64 %197, 160
  %199 = inttoptr i64 %198 to %"class.v8::Value"*
  br label %203

200:                                              ; preds = %193
  %201 = bitcast i64** %92 to %"class.v8::Value"**
  %202 = load %"class.v8::Value"*, %"class.v8::Value"** %201, align 8
  br label %203

203:                                              ; preds = %194, %200
  %204 = phi %"class.v8::Value"* [ %199, %194 ], [ %202, %200 ]
  %205 = ptrtoint %"class.v8::Value"* %204 to i64
  br label %270

206:                                              ; preds = %176, %182
  %207 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %207) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 -86, i64 56, i1 false)
  %208 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %208, align 8
  %209 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %209, align 8
  %210 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %210, align 2
  %211 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %212 = bitcast i8** %211 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %212, align 8
  %213 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %213, align 8
  %214 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %15, %"class.v8::Isolate"** %214, align 8
  %215 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %215, align 8
  %216 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %217 = bitcast %"class.WTF::StringImpl"** %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 16, i1 false) #7
  %218 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %218) #7
  br i1 %166, label %225, label %219

219:                                              ; preds = %206
  %220 = load i64*, i64** %11, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 1
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, 160
  %224 = inttoptr i64 %223 to %"class.v8::Value"*
  br label %228

225:                                              ; preds = %206
  %226 = bitcast i64** %92 to %"class.v8::Value"**
  %227 = load %"class.v8::Value"*, %"class.v8::Value"** %226, align 8
  br label %228

228:                                              ; preds = %219, %225
  %229 = phi %"class.v8::Value"* [ %224, %219 ], [ %227, %225 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %15, %"class.v8::Value"* %229, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #7
  %230 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %232, i64 0, i32 0, i32 0
  %234 = bitcast %"class.WTF::String"* %232 to i64*
  %235 = load i64, i64* %234, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %233, align 8
  %236 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %237 = bitcast %"class.std::__1::unique_ptr.424"* %236 to i64*
  %238 = load i64, i64* %237, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %218) #7
  %239 = load i32, i32* %215, align 8
  %240 = icmp eq i32 %239, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %208, align 8
  %241 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %242 = load i64*, i64** %241, align 8
  %243 = icmp eq i64* %242, null
  br i1 %243, label %253, label %244

244:                                              ; preds = %228
  %245 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %214, align 8
  %246 = bitcast %"class.v8::Isolate"* %245 to %"class.v8::internal::Isolate"*
  %247 = load i64, i64* %242, align 8
  %248 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %246, i64 %247) #7
  %249 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %245) #7
  br i1 %249, label %253, label %250

250:                                              ; preds = %244
  %251 = bitcast i64* %248 to %"class.v8::Value"*
  %252 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %245, %"class.v8::Value"* %251) #7
  br label %253

253:                                              ; preds = %250, %244, %228
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #7
  br label %269

269:                                              ; preds = %253, %265, %268
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %207) #7
  br i1 %240, label %270, label %547

270:                                              ; preds = %269, %203
  %271 = phi i64 [ 0, %203 ], [ %238, %269 ]
  %272 = phi i64 [ 0, %203 ], [ %235, %269 ]
  %273 = phi i64 [ %205, %203 ], [ %231, %269 ]
  %274 = icmp slt i32 %140, 2
  br i1 %274, label %275, label %321

275:                                              ; preds = %270
  %276 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #7
  %277 = icmp eq i64 %273, 0
  br i1 %277, label %281, label %278, !prof !3

278:                                              ; preds = %275
  %279 = inttoptr i64 %273 to %"class.v8::String"*
  %280 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %279, i32 0) #7
  br label %301

281:                                              ; preds = %275
  %282 = inttoptr i64 %272 to %"class.WTF::StringImpl"*
  %283 = icmp eq i64 %272, 0
  br i1 %283, label %301, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %301

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i33
  %293 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %292, i33 1) #7
  %294 = extractvalue { i33, i1 } %293, 1
  %295 = extractvalue { i33, i1 } %293, 0
  %296 = icmp slt i33 %295, 0
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299, !prof !3

298:                                              ; preds = %289
  call void @llvm.trap() #7
  unreachable

299:                                              ; preds = %289
  %300 = trunc i33 %295 to i32
  store i32 %300, i32* %290, align 4
  br label %301

301:                                              ; preds = %278, %281, %284, %299
  %302 = phi %"class.WTF::StringImpl"* [ %280, %278 ], [ null, %281 ], [ %282, %284 ], [ %282, %299 ]
  %303 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %302, %"class.WTF::StringImpl"** %303, align 8
  %304 = call zeroext i1 @_ZNK5blink16DOMFeaturePolicy13allowsFeatureEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::DOMFeaturePolicy"* %162, %"class.blink::ScriptState"* %164, %"class.WTF::String"* nonnull dereferenceable(8) %6) #7
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %320, label %307

307:                                              ; preds = %301
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  br i1 %311, label %314, label %316

314:                                              ; preds = %307
  %315 = add i32 %313, -1
  store i32 %315, i32* %312, align 4
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i32 [ %315, %314 ], [ %313, %307 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %305) #7
  br label %320

320:                                              ; preds = %301, %316, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #7
  br label %547

321:                                              ; preds = %270
  %322 = load i32, i32* %28, align 8
  %323 = icmp sgt i32 %322, 1
  br i1 %323, label %330, label %324

324:                                              ; preds = %321
  %325 = load i64*, i64** %11, align 8
  %326 = getelementptr inbounds i64, i64* %325, i64 1
  %327 = load i64, i64* %326, align 8
  %328 = add i64 %327, 160
  %329 = inttoptr i64 %328 to %"class.v8::Value"*
  br label %334

330:                                              ; preds = %321
  %331 = load i64*, i64** %92, align 8
  %332 = getelementptr inbounds i64, i64* %331, i64 1
  %333 = bitcast i64* %332 to %"class.v8::Value"*
  br label %334

334:                                              ; preds = %324, %330
  %335 = phi %"class.v8::Value"* [ %329, %324 ], [ %333, %330 ]
  %336 = bitcast %"class.v8::Value"* %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 3
  %339 = icmp eq i64 %338, 1
  br i1 %339, label %340, label %365, !prof !4

340:                                              ; preds = %334
  %341 = add i64 %337, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = and i64 %337, -4294967296
  %345 = zext i32 %343 to i64
  %346 = or i64 %344, %345
  %347 = add i64 %346, 7
  %348 = inttoptr i64 %347 to i16*
  %349 = load i16, i16* %348, align 2
  %350 = icmp ult i16 %349, 64
  br i1 %350, label %351, label %365, !prof !2

351:                                              ; preds = %340
  br i1 %323, label %358, label %352

352:                                              ; preds = %351
  %353 = load i64*, i64** %11, align 8
  %354 = getelementptr inbounds i64, i64* %353, i64 1
  %355 = load i64, i64* %354, align 8
  %356 = add i64 %355, 160
  %357 = inttoptr i64 %356 to %"class.v8::Value"*
  br label %362

358:                                              ; preds = %351
  %359 = load i64*, i64** %92, align 8
  %360 = getelementptr inbounds i64, i64* %359, i64 1
  %361 = bitcast i64* %360 to %"class.v8::Value"*
  br label %362

362:                                              ; preds = %352, %358
  %363 = phi %"class.v8::Value"* [ %357, %352 ], [ %361, %358 ]
  %364 = ptrtoint %"class.v8::Value"* %363 to i64
  br label %430

365:                                              ; preds = %334, %340
  %366 = bitcast %"class.blink::ExceptionState"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %366) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 -86, i64 56, i1 false)
  %367 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %367, align 8
  %368 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 0
  store i16 6, i16* %368, align 8
  %369 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 1
  store i16 0, i16* %369, align 2
  %370 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 1, i32 2
  %371 = bitcast i8** %370 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %371, align 8
  %372 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %372, align 8
  %373 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 3
  store %"class.v8::Isolate"* %15, %"class.v8::Isolate"** %373, align 8
  %374 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 4
  store i32 0, i32* %374, align 8
  %375 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 5, i32 0, i32 0
  %376 = bitcast %"class.WTF::StringImpl"** %375 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %376, i8 0, i64 16, i1 false) #7
  %377 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %377) #7
  br i1 %323, label %384, label %378

378:                                              ; preds = %365
  %379 = load i64*, i64** %11, align 8
  %380 = getelementptr inbounds i64, i64* %379, i64 1
  %381 = load i64, i64* %380, align 8
  %382 = add i64 %381, 160
  %383 = inttoptr i64 %382 to %"class.v8::Value"*
  br label %388

384:                                              ; preds = %365
  %385 = load i64*, i64** %92, align 8
  %386 = getelementptr inbounds i64, i64* %385, i64 1
  %387 = bitcast i64* %386 to %"class.v8::Value"*
  br label %388

388:                                              ; preds = %378, %384
  %389 = phi %"class.v8::Value"* [ %383, %378 ], [ %387, %384 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %8, %"class.v8::Isolate"* %15, %"class.v8::Value"* %389, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %7) #7
  %390 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1
  %393 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %392, i64 0, i32 0, i32 0
  %394 = bitcast %"class.WTF::String"* %392 to i64*
  %395 = load i64, i64* %394, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %393, align 8
  %396 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 2, i32 1
  %397 = bitcast %"class.std::__1::unique_ptr.424"* %396 to i64*
  %398 = load i64, i64* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %377) #7
  %399 = load i32, i32* %374, align 8
  %400 = icmp eq i32 %399, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %367, align 8
  %401 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %7, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %402 = load i64*, i64** %401, align 8
  %403 = icmp eq i64* %402, null
  br i1 %403, label %413, label %404

404:                                              ; preds = %388
  %405 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %373, align 8
  %406 = bitcast %"class.v8::Isolate"* %405 to %"class.v8::internal::Isolate"*
  %407 = load i64, i64* %402, align 8
  %408 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %406, i64 %407) #7
  %409 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %405) #7
  br i1 %409, label %413, label %410

410:                                              ; preds = %404
  %411 = bitcast i64* %408 to %"class.v8::Value"*
  %412 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %405, %"class.v8::Value"* %411) #7
  br label %413

413:                                              ; preds = %410, %404, %388
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %429, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %422 = load i32, i32* %421, align 4
  br i1 %420, label %423, label %425

423:                                              ; preds = %416
  %424 = add i32 %422, -1
  store i32 %424, i32* %421, align 4
  br label %425

425:                                              ; preds = %423, %416
  %426 = phi i32 [ %424, %423 ], [ %422, %416 ]
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %425
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %414) #7
  br label %429

429:                                              ; preds = %413, %425, %428
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %366) #7
  br i1 %400, label %430, label %523

430:                                              ; preds = %429, %362
  %431 = phi i64 [ %364, %362 ], [ %391, %429 ]
  %432 = phi i64 [ 0, %362 ], [ %395, %429 ]
  %433 = phi i64 [ 0, %362 ], [ %398, %429 ]
  %434 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %434) #7
  %435 = icmp eq i64 %273, 0
  br i1 %435, label %439, label %436, !prof !3

436:                                              ; preds = %430
  %437 = inttoptr i64 %273 to %"class.v8::String"*
  %438 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %437, i32 0) #7
  br label %459

439:                                              ; preds = %430
  %440 = inttoptr i64 %272 to %"class.WTF::StringImpl"*
  %441 = icmp eq i64 %272, 0
  br i1 %441, label %459, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %459

447:                                              ; preds = %442
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 0
  %449 = load i32, i32* %448, align 4
  %450 = zext i32 %449 to i33
  %451 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %450, i33 1) #7
  %452 = extractvalue { i33, i1 } %451, 1
  %453 = extractvalue { i33, i1 } %451, 0
  %454 = icmp slt i33 %453, 0
  %455 = or i1 %452, %454
  br i1 %455, label %456, label %457, !prof !3

456:                                              ; preds = %447
  call void @llvm.trap() #7
  unreachable

457:                                              ; preds = %447
  %458 = trunc i33 %453 to i32
  store i32 %458, i32* %448, align 4
  br label %459

459:                                              ; preds = %436, %439, %442, %457
  %460 = phi %"class.WTF::StringImpl"* [ %438, %436 ], [ null, %439 ], [ %440, %442 ], [ %440, %457 ]
  %461 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %460, %"class.WTF::StringImpl"** %461, align 8
  %462 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %462) #7
  %463 = icmp eq i64 %431, 0
  br i1 %463, label %467, label %464, !prof !3

464:                                              ; preds = %459
  %465 = inttoptr i64 %431 to %"class.v8::String"*
  %466 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %465, i32 0) #7
  br label %487

467:                                              ; preds = %459
  %468 = inttoptr i64 %432 to %"class.WTF::StringImpl"*
  %469 = icmp eq i64 %432, 0
  br i1 %469, label %487, label %470

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = and i32 %472, 2
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %487

475:                                              ; preds = %470
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %477 = load i32, i32* %476, align 4
  %478 = zext i32 %477 to i33
  %479 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %478, i33 1) #7
  %480 = extractvalue { i33, i1 } %479, 1
  %481 = extractvalue { i33, i1 } %479, 0
  %482 = icmp slt i33 %481, 0
  %483 = or i1 %480, %482
  br i1 %483, label %484, label %485, !prof !3

484:                                              ; preds = %475
  call void @llvm.trap() #7
  unreachable

485:                                              ; preds = %475
  %486 = trunc i33 %481 to i32
  store i32 %486, i32* %476, align 4
  br label %487

487:                                              ; preds = %464, %467, %470, %485
  %488 = phi %"class.WTF::StringImpl"* [ %466, %464 ], [ null, %467 ], [ %468, %470 ], [ %468, %485 ]
  %489 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %488, %"class.WTF::StringImpl"** %489, align 8
  %490 = call zeroext i1 @_ZNK5blink16DOMFeaturePolicy13allowsFeatureEPNS_11ScriptStateERKN3WTF6StringES6_(%"class.blink::DOMFeaturePolicy"* %162, %"class.blink::ScriptState"* %164, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #7
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %492 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %492, label %506, label %493

493:                                              ; preds = %487
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 0
  %499 = load i32, i32* %498, align 4
  br i1 %497, label %500, label %502

500:                                              ; preds = %493
  %501 = add i32 %499, -1
  store i32 %501, i32* %498, align 4
  br label %502

502:                                              ; preds = %500, %493
  %503 = phi i32 [ %501, %500 ], [ %499, %493 ]
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %506

505:                                              ; preds = %502
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %491) #7
  br label %506

506:                                              ; preds = %487, %502, %505
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %462) #7
  %507 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %461, align 8
  %508 = icmp eq %"class.WTF::StringImpl"* %507, null
  br i1 %508, label %522, label %509

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %507, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = load atomic i32, i32* %510 monotonic, align 4
  %512 = and i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %507, i64 0, i32 0
  %515 = load i32, i32* %514, align 4
  br i1 %513, label %516, label %518

516:                                              ; preds = %509
  %517 = add i32 %515, -1
  store i32 %517, i32* %514, align 4
  br label %518

518:                                              ; preds = %516, %509
  %519 = phi i32 [ %517, %516 ], [ %515, %509 ]
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %522

521:                                              ; preds = %518
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %507) #7
  br label %522

522:                                              ; preds = %506, %518, %521
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #7
  br label %523

523:                                              ; preds = %429, %522
  %524 = phi i64 [ %432, %522 ], [ %395, %429 ]
  %525 = phi i64 [ %433, %522 ], [ %398, %429 ]
  %526 = phi i1 [ %490, %522 ], [ false, %429 ]
  %527 = phi i32 [ 0, %522 ], [ 1, %429 ]
  %528 = icmp eq i64 %525, 0
  br i1 %528, label %531, label %529

529:                                              ; preds = %523
  %530 = inttoptr i64 %525 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %530) #7
  br label %531

531:                                              ; preds = %529, %523
  %532 = inttoptr i64 %524 to %"class.WTF::StringImpl"*
  %533 = icmp eq i64 %524, 0
  br i1 %533, label %547, label %534

534:                                              ; preds = %531
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 0
  %540 = load i32, i32* %539, align 4
  br i1 %538, label %541, label %543

541:                                              ; preds = %534
  %542 = add i32 %540, -1
  store i32 %542, i32* %539, align 4
  br label %543

543:                                              ; preds = %541, %534
  %544 = phi i32 [ %542, %541 ], [ %540, %534 ]
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %547

546:                                              ; preds = %543
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %532) #7
  br label %547

547:                                              ; preds = %546, %543, %531, %269, %320
  %548 = phi i64 [ %271, %320 ], [ %238, %269 ], [ %271, %531 ], [ %271, %543 ], [ %271, %546 ]
  %549 = phi i64 [ %272, %320 ], [ %235, %269 ], [ %272, %531 ], [ %272, %543 ], [ %272, %546 ]
  %550 = phi i1 [ %304, %320 ], [ false, %269 ], [ %526, %531 ], [ %526, %543 ], [ %526, %546 ]
  %551 = phi i32 [ 6, %320 ], [ 1, %269 ], [ %527, %531 ], [ %527, %543 ], [ %527, %546 ]
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %555, label %553

553:                                              ; preds = %547
  %554 = inttoptr i64 %548 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %554) #7
  br label %555

555:                                              ; preds = %553, %547
  %556 = inttoptr i64 %549 to %"class.WTF::StringImpl"*
  %557 = icmp eq i64 %549, 0
  br i1 %557, label %571, label %558

558:                                              ; preds = %555
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %556, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %560 = load atomic i32, i32* %559 monotonic, align 4
  %561 = and i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %556, i64 0, i32 0
  %564 = load i32, i32* %563, align 4
  br i1 %562, label %565, label %567

565:                                              ; preds = %558
  %566 = add i32 %564, -1
  store i32 %566, i32* %563, align 4
  br label %567

567:                                              ; preds = %565, %558
  %568 = phi i32 [ %566, %565 ], [ %564, %558 ]
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %571

570:                                              ; preds = %567
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %556) #7
  br label %571

571:                                              ; preds = %555, %567, %570
  switch i32 %551, label %581 [
    i32 0, label %572
    i32 6, label %572
  ]

572:                                              ; preds = %571, %571
  %573 = load i64*, i64** %11, align 8
  %574 = getelementptr inbounds i64, i64* %573, i64 3
  %575 = getelementptr inbounds i64, i64* %573, i64 1
  %576 = load i64, i64* %575, align 8
  %577 = select i1 %550, i64 184, i64 192
  %578 = add i64 %576, %577
  %579 = inttoptr i64 %578 to i64*
  %580 = load i64, i64* %579, align 8
  store i64 %580, i64* %574, align 8
  br label %581

581:                                              ; preds = %571, %572, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_feature_policy25FeaturesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::Vector.294", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #7
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #7
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 2511) #7
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  %24 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %23) #7
  %25 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %24)
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i64 %26, -4294967296
  %31 = zext i32 %29 to i64
  %32 = or i64 %30, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load i16, i16* %34, align 2
  switch i16 %35, label %40 [
    i16 1057, label %36
    i16 1056, label %36
    i16 1040, label %36
  ]

36:                                               ; preds = %19, %19, %19
  %37 = add i64 %26, 19
  %38 = inttoptr i64 %37 to i8**
  %39 = load i8*, i8** %38, align 1
  br label %42

40:                                               ; preds = %19
  %41 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #7
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i8* [ %39, %36 ], [ %41, %40 ]
  %44 = bitcast i8* %43 to %"class.blink::DOMFeaturePolicy"*
  %45 = bitcast %"class.WTF::Vector.294"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #7
  call void @_ZNK5blink16DOMFeaturePolicy8featuresEPNS_11ScriptStateE(%"class.WTF::Vector.294"* nonnull sret %2, %"class.blink::DOMFeaturePolicy"* %44, %"class.blink::ScriptState"* %25) #7
  %46 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %25, %"class.WTF::Vector.294"* nonnull dereferenceable(16) %2) #7
  %47 = icmp eq %"class.v8::Value"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = load i64*, i64** %3, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 3
  %51 = bitcast %"class.v8::Value"* %46 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %50, align 8
  call void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %9, i32 2511, %"class.WTF::Vector.294"* nonnull dereferenceable(16) %2) #7
  br label %53

53:                                               ; preds = %42, %48
  %54 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %2, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::String"*, %"class.WTF::String"** %54, align 8
  %56 = icmp eq %"class.WTF::String"* %55, null
  br i1 %56, label %91, label %57, !prof !2

57:                                               ; preds = %53
  %58 = bitcast %"class.WTF::String"* %55 to i8*
  %59 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %2, i64 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %89, label %62, !prof !3

62:                                               ; preds = %57
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 %63
  br label %65

65:                                               ; preds = %83, %62
  %66 = phi %"class.WTF::String"* [ %84, %83 ], [ %55, %62 ]
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #7
  br label %83

83:                                               ; preds = %82, %79, %65
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 1
  %85 = icmp eq %"class.WTF::String"* %84, %64
  br i1 %85, label %86, label %65

86:                                               ; preds = %83
  store i32 0, i32* %59, align 4
  %87 = bitcast %"class.WTF::Vector.294"* %2 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %57
  %90 = phi i8* [ %88, %86 ], [ %58, %57 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %54, align 8
  br label %91

91:                                               ; preds = %53, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_feature_policy39GetAllowlistForFeatureOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::Vector.294", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #7
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #7
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2511) #7
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %88, !prof !3

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #7
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #7
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #7
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #7
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #7
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #7
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #7
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #7
  br label %336

88:                                               ; preds = %24
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 -1
  %92 = bitcast i64* %91 to %"class.v8::Object"*
  %93 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %92) #7
  %94 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %93)
  %95 = load i64, i64* %91, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %109 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %88, %88, %88
  %106 = add i64 %95, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %111

109:                                              ; preds = %88
  %110 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %92, i32 1) #7
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi i8* [ %108, %105 ], [ %110, %109 ]
  %113 = bitcast i8* %112 to %"class.blink::DOMFeaturePolicy"*
  %114 = load i32, i32* %25, align 8
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %122, label %116

116:                                              ; preds = %111
  %117 = load i64*, i64** %8, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %125

122:                                              ; preds = %111
  %123 = bitcast i64** %89 to %"class.v8::Value"**
  %124 = load %"class.v8::Value"*, %"class.v8::Value"** %123, align 8
  br label %125

125:                                              ; preds = %116, %122
  %126 = phi %"class.v8::Value"* [ %121, %116 ], [ %124, %122 ]
  %127 = bitcast %"class.v8::Value"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 3
  %130 = icmp eq i64 %129, 1
  br i1 %130, label %131, label %155, !prof !4

131:                                              ; preds = %125
  %132 = add i64 %128, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = and i64 %128, -4294967296
  %136 = zext i32 %134 to i64
  %137 = or i64 %135, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load i16, i16* %139, align 2
  %141 = icmp ult i16 %140, 64
  br i1 %141, label %142, label %155, !prof !2

142:                                              ; preds = %131
  br i1 %115, label %149, label %143

143:                                              ; preds = %142
  %144 = load i64*, i64** %8, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %152

149:                                              ; preds = %142
  %150 = bitcast i64** %89 to %"class.v8::Value"**
  %151 = load %"class.v8::Value"*, %"class.v8::Value"** %150, align 8
  br label %152

152:                                              ; preds = %143, %149
  %153 = phi %"class.v8::Value"* [ %148, %143 ], [ %151, %149 ]
  %154 = ptrtoint %"class.v8::Value"* %153 to i64
  br label %219

155:                                              ; preds = %125, %131
  %156 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %156) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 56, i1 false)
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %157, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %158, align 8
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %159, align 2
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %161 = bitcast i8** %160 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %166 = bitcast %"class.WTF::StringImpl"** %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false) #7
  %167 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %167) #7
  br i1 %115, label %174, label %168

168:                                              ; preds = %155
  %169 = load i64*, i64** %8, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 1
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, 160
  %173 = inttoptr i64 %172 to %"class.v8::Value"*
  br label %177

174:                                              ; preds = %155
  %175 = bitcast i64** %89 to %"class.v8::Value"**
  %176 = load %"class.v8::Value"*, %"class.v8::Value"** %175, align 8
  br label %177

177:                                              ; preds = %168, %174
  %178 = phi %"class.v8::Value"* [ %173, %168 ], [ %176, %174 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %178, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #7
  %179 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %181, i64 0, i32 0, i32 0
  %183 = bitcast %"class.WTF::String"* %181 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %182, align 8
  %185 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %186 = bitcast %"class.std::__1::unique_ptr.424"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %167) #7
  %188 = load i32, i32* %164, align 8
  %189 = icmp eq i32 %188, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %157, align 8
  %190 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = icmp eq i64* %191, null
  br i1 %192, label %202, label %193

193:                                              ; preds = %177
  %194 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %163, align 8
  %195 = bitcast %"class.v8::Isolate"* %194 to %"class.v8::internal::Isolate"*
  %196 = load i64, i64* %191, align 8
  %197 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %195, i64 %196) #7
  %198 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %194) #7
  br i1 %198, label %202, label %199

199:                                              ; preds = %193
  %200 = bitcast i64* %197 to %"class.v8::Value"*
  %201 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %194, %"class.v8::Value"* %200) #7
  br label %202

202:                                              ; preds = %199, %193, %177
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #7
  br label %218

218:                                              ; preds = %202, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %156) #7
  br i1 %189, label %219, label %314

219:                                              ; preds = %218, %152
  %220 = phi i64 [ 0, %152 ], [ %187, %218 ]
  %221 = phi i64 [ 0, %152 ], [ %184, %218 ]
  %222 = phi i64 [ %154, %152 ], [ %180, %218 ]
  %223 = bitcast %"class.WTF::Vector.294"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %223) #7
  %224 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #7
  %225 = icmp eq i64 %222, 0
  br i1 %225, label %229, label %226, !prof !3

226:                                              ; preds = %219
  %227 = inttoptr i64 %222 to %"class.v8::String"*
  %228 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %227, i32 0) #7
  br label %249

229:                                              ; preds = %219
  %230 = inttoptr i64 %221 to %"class.WTF::StringImpl"*
  %231 = icmp eq i64 %221, 0
  br i1 %231, label %249, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %249

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = zext i32 %239 to i33
  %241 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %240, i33 1) #7
  %242 = extractvalue { i33, i1 } %241, 1
  %243 = extractvalue { i33, i1 } %241, 0
  %244 = icmp slt i33 %243, 0
  %245 = or i1 %242, %244
  br i1 %245, label %246, label %247, !prof !3

246:                                              ; preds = %237
  call void @llvm.trap() #7
  unreachable

247:                                              ; preds = %237
  %248 = trunc i33 %243 to i32
  store i32 %248, i32* %238, align 4
  br label %249

249:                                              ; preds = %226, %229, %232, %247
  %250 = phi %"class.WTF::StringImpl"* [ %228, %226 ], [ null, %229 ], [ %230, %232 ], [ %230, %247 ]
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %251, align 8
  call void @_ZNK5blink16DOMFeaturePolicy22getAllowlistForFeatureEPNS_11ScriptStateERKN3WTF6StringE(%"class.WTF::Vector.294"* nonnull sret %6, %"class.blink::DOMFeaturePolicy"* %113, %"class.blink::ScriptState"* %94, %"class.WTF::String"* nonnull dereferenceable(8) %7) #7
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %253, label %267, label %254

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  br i1 %258, label %261, label %263

261:                                              ; preds = %254
  %262 = add i32 %260, -1
  store i32 %262, i32* %259, align 4
  br label %263

263:                                              ; preds = %261, %254
  %264 = phi i32 [ %262, %261 ], [ %260, %254 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #7
  br label %267

267:                                              ; preds = %249, %263, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #7
  %268 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %94, %"class.WTF::Vector.294"* nonnull dereferenceable(16) %6) #7
  %269 = icmp eq %"class.v8::Value"* %268, null
  br i1 %269, label %275, label %270

270:                                              ; preds = %267
  %271 = load i64*, i64** %8, align 8
  %272 = getelementptr inbounds i64, i64* %271, i64 3
  %273 = bitcast %"class.v8::Value"* %268 to i64*
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %272, align 8
  br label %275

275:                                              ; preds = %267, %270
  %276 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %6, i64 0, i32 0, i32 0, i32 0
  %277 = load %"class.WTF::String"*, %"class.WTF::String"** %276, align 8
  %278 = icmp eq %"class.WTF::String"* %277, null
  br i1 %278, label %313, label %279, !prof !2

279:                                              ; preds = %275
  %280 = bitcast %"class.WTF::String"* %277 to i8*
  %281 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %6, i64 0, i32 0, i32 0, i32 2
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %311, label %284, !prof !3

284:                                              ; preds = %279
  %285 = zext i32 %282 to i64
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %277, i64 %285
  br label %287

287:                                              ; preds = %305, %284
  %288 = phi %"class.WTF::String"* [ %306, %305 ], [ %277, %284 ]
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %288, i64 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #7
  br label %305

305:                                              ; preds = %304, %301, %287
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %288, i64 1
  %307 = icmp eq %"class.WTF::String"* %306, %286
  br i1 %307, label %308, label %287

308:                                              ; preds = %305
  store i32 0, i32* %281, align 4
  %309 = bitcast %"class.WTF::Vector.294"* %6 to i8**
  %310 = load i8*, i8** %309, align 8
  br label %311

311:                                              ; preds = %308, %279
  %312 = phi i8* [ %310, %308 ], [ %280, %279 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %312) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %276, align 8
  br label %313

313:                                              ; preds = %275, %311
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %223) #7
  br label %314

314:                                              ; preds = %218, %313
  %315 = phi i64 [ %220, %313 ], [ %187, %218 ]
  %316 = phi i64 [ %221, %313 ], [ %184, %218 ]
  %317 = icmp eq i64 %315, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %314
  %319 = inttoptr i64 %315 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %319) #7
  br label %320

320:                                              ; preds = %318, %314
  %321 = inttoptr i64 %316 to %"class.WTF::StringImpl"*
  %322 = icmp eq i64 %316, 0
  br i1 %322, label %336, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #7
  br label %336

336:                                              ; preds = %335, %332, %320, %87
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZNK5blink16DOMFeaturePolicy15allowedFeaturesEPNS_11ScriptStateE(%"class.WTF::Vector.294"* sret, %"class.blink::DOMFeaturePolicy"*, %"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15IDLStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector.294"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #7
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #7
  %17 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %15
  tail call void @llvm.trap() #7
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #7
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #7
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #7
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.WTF::Vector.294", %"class.WTF::Vector.294"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %76, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.WTF::StringView"* %3 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = bitcast %"class.WTF::StringView"* %3 to i64*
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %47 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %48

48:                                               ; preds = %40, %72
  %49 = phi i32 [ 0, %40 ], [ %73, %72 ]
  %50 = phi %"class.WTF::String"* [ %35, %40 ], [ %74, %72 ]
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #7
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  store i8* null, i8** %43, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %56, i64* %45, align 8
  br label %61

57:                                               ; preds = %48
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %42, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %44, align 8
  br label %61

61:                                               ; preds = %55, %57
  %62 = phi i32 [ %59, %57 ], [ 0, %55 ]
  store i32 %62, i32* %46, align 8
  %63 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %51, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.v8::String"* %63 to %"class.v8::Value"*
  %67 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %47, %"class.v8::Context"* %33, i32 %49, %"class.v8::Value"* nonnull %66) #7
  %68 = trunc i16 %67 to i8
  %69 = icmp eq i8 %68, 0
  %70 = icmp ult i16 %67, 256
  %71 = or i1 %70, %69
  br i1 %71, label %78, label %72, !prof !5

72:                                               ; preds = %65
  %73 = add i32 %49, 1
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 1
  %75 = icmp eq %"class.WTF::String"* %74, %38
  br i1 %75, label %76, label %48

76:                                               ; preds = %72, %32
  %77 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %78

78:                                               ; preds = %61, %65, %76
  %79 = phi %"class.v8::Value"* [ %77, %76 ], [ null, %65 ], [ null, %61 ]
  ret %"class.v8::Value"* %79
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16DOMFeaturePolicy13allowsFeatureEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::DOMFeaturePolicy"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16DOMFeaturePolicy13allowsFeatureEPNS_11ScriptStateERKN3WTF6StringES6_(%"class.blink::DOMFeaturePolicy"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.424"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #7
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #7
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #7
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.424"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #7
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #7
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #7
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.424"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #7
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare void @_ZNK5blink16DOMFeaturePolicy8featuresEPNS_11ScriptStateE(%"class.WTF::Vector.294"* sret, %"class.blink::DOMFeaturePolicy"*, %"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN5blink13Dactyloscoper19RecordDirectSurfaceEPNS_16ExecutionContextENS_5mojom10WebFeatureERKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"*, i32, %"class.WTF::Vector.294"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink16DOMFeaturePolicy22getAllowlistForFeatureEPNS_11ScriptStateERKN3WTF6StringE(%"class.WTF::Vector.294"* sret, %"class.blink::DOMFeaturePolicy"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2002, i32 2000}
