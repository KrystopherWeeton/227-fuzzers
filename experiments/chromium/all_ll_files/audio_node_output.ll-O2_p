; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_node_output.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_node_output.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.335, %class.scoped_refptr.335, i8, [7 x i8], %"class.WTF::HashSet.349", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.358" }
%class.scoped_refptr.335 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.336", i32, %"class.WTF::Vector.338", i32, float }
%"class.WTF::ThreadSafeRefCounted.336" = type { %"class.base::RefCountedThreadSafe.337" }
%"class.base::RefCountedThreadSafe.337" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340", [64 x i8] }
%"class.WTF::VectorBufferBase.340" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.341", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashSet.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type { %"class.blink::AudioSummingJunction.base", %"class.blink::AudioHandler"*, %"class.WTF::HashSet.290", %class.scoped_refptr.335 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.353", i8 }>
%class.scoped_refptr.262 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.263", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.272", %"class.WTF::Vector.277", i8, [3 x i8], i32, %"class.WTF::HashSet.282", %"class.WTF::HashSet.282", %"class.WTF::HashSet.286", %"class.WTF::HashSet.290", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", i8, [7 x i8], %"class.WTF::HashSet.272", %"class.WTF::Vector.277", %class.scoped_refptr.258, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.263" = type { %"class.base::RefCountedThreadSafe.264" }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.266", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i8 }
%"class.WTF::HashSet.282" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.353", i8, [7 x i8] }>
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %class.scoped_refptr.276*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.276 = type { %"class.blink::AudioHandler"* }
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %class.scoped_refptr.276*, i32, i32 }
%class.scoped_refptr.258 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259" }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.WTF::HashSet.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.362", i32, %"class.WTF::String", %"struct.std::__1::atomic.364", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.302, %class.scoped_refptr.335 }
%"class.WTF::ThreadSafeRefCounted.362" = type { %"class.base::RefCountedThreadSafe.363" }
%"class.base::RefCountedThreadSafe.363" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.368", %"class.WTF::HashSet.379", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.std::__1::unique_ptr.371"*, i32, i32 }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.383", double, float, [4 x i8], %"class.std::__1::unique_ptr.371", i8, [7 x i8] }>
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { float*, i32, i32 }
%"class.WTF::HashSet.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.302 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.323", %"class.WTF::Vector.329", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.321" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.262, %class.scoped_refptr.276, %"class.blink::HeapVector.305", %"class.blink::HeapVector.313" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.408", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.410", %"class.blink::Member.414", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::Member.426", %"class.blink::HeapObserverSet.428", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.487", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.501", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.395" }
%"class.blink::HeapHashMap.395" = type { %"class.WTF::HashMap.398" }
%"class.WTF::HashMap.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.402" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.428" = type { i32, [4 x i8], %"class.blink::HeapHashSet.429" }
%"class.blink::HeapHashSet.429" = type { %"class.WTF::HashSet.432" }
%"class.WTF::HashSet.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"class.blink::WeakMember.435"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.435" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.458" }
%"class.WTF::Deque.458" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"class.std::__1::unique_ptr.463"*, i32, i32 }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.469", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.469" = type { %"class.std::__1::__bitset.470" }
%"class.std::__1::__bitset.470" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.471", i64, %"class.absl::optional.476", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.471" = type { %"class.absl::optional_internal::optional_data.472" }
%"class.absl::optional_internal::optional_data.472" = type { %"class.absl::optional_internal::optional_data_base.473" }
%"class.absl::optional_internal::optional_data_base.473" = type { %"class.absl::optional_internal::optional_data_dtor_base.474" }
%"class.absl::optional_internal::optional_data_dtor_base.474" = type { i8, %union.anon.475 }
%union.anon.475 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.476" = type { %"class.absl::optional_internal::optional_data.477" }
%"class.absl::optional_internal::optional_data.477" = type { %"class.absl::optional_internal::optional_data_base.478" }
%"class.absl::optional_internal::optional_data_base.478" = type { %"class.absl::optional_internal::optional_data_dtor_base.479" }
%"class.absl::optional_internal::optional_data_dtor_base.479" = type { i8, %union.anon.480 }
%union.anon.480 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.487" = type { %"class.WTF::HashSet.490" }
%"class.WTF::HashSet.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"class.blink::WeakMember.493"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.493" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.258, i8, %"class.blink::Member.260", i8, %class.scoped_refptr.262, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.294", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::Member.300", %class.scoped_refptr.302, %"class.blink::Member.303", %"class.blink::WorkerThread"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.250", %"class.blink::SelfKeepAlive.254" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.388" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.250", %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.250" = type { %"class.v8::TracedReference.251" }
%"class.v8::TracedReference.251" = type { %"class.v8::BasicTracedReference.252" }
%"class.v8::BasicTracedReference.252" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.254" = type { %"class.blink::Persistent.255" }
%"class.blink::Persistent.255" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.294" = type { %"class.WTF::HashSet.297" }
%"class.WTF::HashSet.297" = type { %"class.WTF::HashTable.298" }
%"class.WTF::HashTable.298" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapVector.305" = type { %"class.WTF::Vector.308" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"class.blink::Member.311"*, i32, i32 }
%"class.blink::Member.311" = type opaque
%"class.blink::HeapVector.313" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %"class.blink::Member.319"*, i32, i32 }
%"class.blink::Member.319" = type opaque
%"class.blink::PersistentNodePtr.321" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::BaseAudioContext"* }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %"class.std::__1::unique_ptr.326"*, i32, i32 }
%"class.std::__1::unique_ptr.326" = type opaque
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { %"class.std::__1::unique_ptr.332"*, i32, i32 }
%"class.std::__1::unique_ptr.332" = type opaque
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.323", %"class.WTF::Vector.329", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.519 }
%union.anon.519 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509", [32 x i8] }
%"class.WTF::VectorBufferBase.509" = type { %"class.blink::AudioNodeInput"**, i32, i32 }
%"class.WTF::Vector.512" = type { %"class.WTF::VectorBuffer.513" }
%"class.WTF::VectorBuffer.513" = type { %"class.WTF::VectorBufferBase.514", [32 x i8] }
%"class.WTF::VectorBufferBase.514" = type { %"class.blink::AudioParamHandler"**, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF12VectorBufferIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14AudioNodeInputEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17AudioParamHandlerEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioNodeInput *]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17AudioParamHandlerEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioParamHandler *]\00", align 1

@_ZN5blink15AudioNodeOutputC1EPNS_12AudioHandlerEj = hidden unnamed_addr alias void (%"class.blink::AudioNodeOutput"*, %"class.blink::AudioHandler"*, i32), void (%"class.blink::AudioNodeOutput"*, %"class.blink::AudioHandler"*, i32)* @_ZN5blink15AudioNodeOutputC2EPNS_12AudioHandlerEj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutputC2EPNS_12AudioHandlerEj(%"class.blink::AudioNodeOutput"* nocapture, %"class.blink::AudioHandler"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 0
  store %"class.blink::AudioHandler"* %1, %"class.blink::AudioHandler"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %class.scoped_refptr.335, %class.scoped_refptr.335* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7
  %10 = bitcast %"class.WTF::HashSet.349"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #6
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 8
  %12 = bitcast %class.scoped_refptr.335* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 17, i1 false)
  store i8 1, i8* %11, align 8
  %13 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 9
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 10
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 11
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13
  %17 = bitcast %"class.WTF::HashSet.358"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #6
  %18 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %1, i64 0, i32 10, i32 0
  %19 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %19, i64 0, i32 7
  %21 = load i32, i32* %20, align 4
  %22 = tail call %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32 %2, i32 %21, i1 zeroext true) #6
  %23 = ptrtoint %"class.blink::AudioBus"* %22 to i64
  %24 = bitcast %class.scoped_refptr.335* %7 to i64*
  %25 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %8, align 8
  store i64 %23, i64* %24, align 8
  %26 = icmp eq %"class.blink::AudioBus"* %25, null
  br i1 %26, label %64, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %25, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %64

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %28, i64 2
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %28, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.base::RefCountedThreadSafe.337"* %33 to %"class.blink::AudioChannel"**
  br i1 %36, label %55, label %38, !prof !2

38:                                               ; preds = %32
  %39 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %37, align 8
  %40 = zext i32 %35 to i64
  %41 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %39, i64 %40
  br label %42

42:                                               ; preds = %51, %38
  %43 = phi %"class.blink::AudioChannel"* [ %52, %51 ], [ %39, %38 ]
  %44 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %43, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %44, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %44, align 8
  %46 = icmp eq %"class.blink::AudioArray"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::AudioArray"* %45 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %49) #6
  %50 = bitcast %"class.blink::AudioArray"* %45 to i8*
  tail call void @free(i8* %50) #6
  br label %51

51:                                               ; preds = %47, %42
  %52 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %43, i64 1
  %53 = icmp eq %"class.blink::AudioChannel"* %52, %41
  br i1 %53, label %54, label %42

54:                                               ; preds = %51
  store i32 0, i32* %34, align 4
  br label %55

55:                                               ; preds = %54, %32
  %56 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %37, align 8
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %28, i64 6
  %58 = bitcast %"class.base::RefCountedThreadSafe.337"* %57 to %"class.blink::AudioChannel"*
  %59 = icmp eq %"class.blink::AudioChannel"* %56, %58
  br i1 %59, label %62, label %60, !prof !3

60:                                               ; preds = %55
  %61 = bitcast %"class.base::RefCountedThreadSafe.337"* %33 to %"class.WTF::VectorBuffer.339"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.339"* %61, %"class.blink::AudioChannel"* %56) #6
  br label %62

62:                                               ; preds = %60, %55
  %63 = bitcast %"class.blink::AudioBus"* %25 to i8*
  tail call void @free(i8* %63) #6
  br label %64

64:                                               ; preds = %3, %27, %62
  ret void
}

declare %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput7DisposeEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 9
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 0
  %4 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 0, i32 10, i32 0
  %6 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %5, align 8
  tail call void @_ZN5blink19DeferredTaskHandler27RemoveMarkedAudioNodeOutputEPNS_15AudioNodeOutputE(%"class.blink::DeferredTaskHandler"* %6, %"class.blink::AudioNodeOutput"* %0) #6
  tail call void @_ZN5blink15AudioNodeOutput19DisconnectAllInputsEv(%"class.blink::AudioNodeOutput"* %0) #6
  tail call void @_ZN5blink15AudioNodeOutput19DisconnectAllParamsEv(%"class.blink::AudioNodeOutput"* %0) #6
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler27RemoveMarkedAudioNodeOutputEPNS_15AudioNodeOutputE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput13DisconnectAllEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15AudioNodeOutput19DisconnectAllInputsEv(%"class.blink::AudioNodeOutput"* %0)
  tail call void @_ZN5blink15AudioNodeOutput19DisconnectAllParamsEv(%"class.blink::AudioNodeOutput"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput19SetNumberOfChannelsEj(%"class.blink::AudioNodeOutput"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 0
  %4 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 0, i32 10, i32 0
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 2
  store i32 %1, i32* %6, align 4
  %7 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %5, align 8
  %8 = tail call i32 @_ZN3WTF13CurrentThreadEv() #6
  %9 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %7, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %65

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = load i32, i32* %6, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %69, label %17

17:                                               ; preds = %12
  store i32 %15, i32* %13, align 8
  tail call void @_ZN5blink15AudioNodeOutput17UpdateInternalBusEv(%"class.blink::AudioNodeOutput"* %0) #6
  %18 = load i32, i32* %13, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %69, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %25 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %25, i64 %28
  br i1 %23, label %69, label %30

30:                                               ; preds = %20
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"class.blink::AudioNodeInput"** [ %37, %36 ], [ %25, %30 ]
  %34 = bitcast %"class.blink::AudioNodeInput"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %33, i64 1
  %38 = icmp eq %"class.blink::AudioNodeInput"** %37, %29
  br i1 %38, label %69, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"class.blink::AudioNodeInput"** [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"class.blink::AudioNodeInput"** %40, %29
  br i1 %41, label %69, label %42

42:                                               ; preds = %39
  %43 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %40, align 8
  br label %44

44:                                               ; preds = %62, %42
  %45 = phi %"class.blink::AudioNodeInput"* [ %63, %62 ], [ %43, %42 ]
  %46 = phi %"class.blink::AudioNodeInput"** [ %56, %62 ], [ %40, %42 ]
  %47 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %45, i64 0, i32 1
  %48 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %47, align 8
  %49 = bitcast %"class.blink::AudioHandler"* %48 to void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)***
  %50 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)**, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %50, i64 10
  %52 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %51, align 8
  tail call void %52(%"class.blink::AudioHandler"* %48, %"class.blink::AudioNodeInput"* %45) #6
  %53 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %46, i64 1
  %54 = icmp eq %"class.blink::AudioNodeInput"** %53, %29
  br i1 %54, label %69, label %55

55:                                               ; preds = %44, %59
  %56 = phi %"class.blink::AudioNodeInput"** [ %60, %59 ], [ %53, %44 ]
  %57 = bitcast %"class.blink::AudioNodeInput"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %62 [
    i64 -1, label %59
    i64 0, label %59
  ]

59:                                               ; preds = %55, %55
  %60 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %56, i64 1
  %61 = icmp eq %"class.blink::AudioNodeInput"** %60, %29
  br i1 %61, label %69, label %55

62:                                               ; preds = %55
  %63 = inttoptr i64 %58 to %"class.blink::AudioNodeInput"*
  %64 = icmp eq %"class.blink::AudioNodeInput"** %56, %29
  br i1 %64, label %69, label %44

65:                                               ; preds = %2
  %66 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %3, align 8
  %67 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %66, i64 0, i32 10, i32 0
  %68 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %67, align 8
  tail call void @_ZN5blink19DeferredTaskHandler24MarkAudioNodeOutputDirtyEPNS_15AudioNodeOutputE(%"class.blink::DeferredTaskHandler"* %68, %"class.blink::AudioNodeOutput"* %0) #6
  br label %69

69:                                               ; preds = %36, %62, %44, %59, %39, %20, %17, %12, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput22UpdateNumberOfChannelsEv(%"class.blink::AudioNodeOutput"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %55, label %7

7:                                                ; preds = %1
  store i32 %5, i32* %2, align 8
  tail call void @_ZN5blink15AudioNodeOutput17UpdateInternalBusEv(%"class.blink::AudioNodeOutput"* %0)
  %8 = load i32, i32* %2, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %55, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %15 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %15, i64 %18
  br i1 %13, label %55, label %20

20:                                               ; preds = %10
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.blink::AudioNodeInput"** [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"class.blink::AudioNodeInput"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %23, i64 1
  %28 = icmp eq %"class.blink::AudioNodeInput"** %27, %19
  br i1 %28, label %55, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"class.blink::AudioNodeInput"** [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"class.blink::AudioNodeInput"** %30, %19
  br i1 %31, label %55, label %32

32:                                               ; preds = %29
  %33 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %30, align 8
  br label %34

34:                                               ; preds = %32, %52
  %35 = phi %"class.blink::AudioNodeInput"* [ %53, %52 ], [ %33, %32 ]
  %36 = phi %"class.blink::AudioNodeInput"** [ %46, %52 ], [ %30, %32 ]
  %37 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %35, i64 0, i32 1
  %38 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %37, align 8
  %39 = bitcast %"class.blink::AudioHandler"* %38 to void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)***
  %40 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)**, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %40, i64 10
  %42 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %41, align 8
  tail call void %42(%"class.blink::AudioHandler"* %38, %"class.blink::AudioNodeInput"* %35) #6
  %43 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %36, i64 1
  %44 = icmp eq %"class.blink::AudioNodeInput"** %43, %19
  br i1 %44, label %55, label %45

45:                                               ; preds = %34, %49
  %46 = phi %"class.blink::AudioNodeInput"** [ %50, %49 ], [ %43, %34 ]
  %47 = bitcast %"class.blink::AudioNodeInput"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %46, i64 1
  %51 = icmp eq %"class.blink::AudioNodeInput"** %50, %19
  br i1 %51, label %55, label %45

52:                                               ; preds = %45
  %53 = inttoptr i64 %48 to %"class.blink::AudioNodeInput"*
  %54 = icmp eq %"class.blink::AudioNodeInput"** %46, %19
  br i1 %54, label %55, label %34

55:                                               ; preds = %26, %52, %34, %49, %29, %10, %7, %1
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler24MarkAudioNodeOutputDirtyEPNS_15AudioNodeOutputE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioNodeOutput"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput17UpdateInternalBusEv(%"class.blink::AudioNodeOutput"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.scoped_refptr.335, %class.scoped_refptr.335* %4, i64 0, i32 0
  %6 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %6, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %3, %8
  br i1 %9, label %59, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 0
  %12 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %12, i64 0, i32 10, i32 0
  %14 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %14, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = tail call %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32 %3, i32 %16, i1 zeroext true) #6
  %18 = ptrtoint %"class.blink::AudioBus"* %17 to i64
  %19 = bitcast %class.scoped_refptr.335* %4 to i64*
  %20 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %5, align 8
  store i64 %18, i64* %19, align 8
  %21 = icmp eq %"class.blink::AudioBus"* %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %20, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %59

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %23, i64 2
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %23, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  %32 = bitcast %"class.base::RefCountedThreadSafe.337"* %28 to %"class.blink::AudioChannel"**
  br i1 %31, label %50, label %33, !prof !2

33:                                               ; preds = %27
  %34 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %32, align 8
  %35 = zext i32 %30 to i64
  %36 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %34, i64 %35
  br label %37

37:                                               ; preds = %46, %33
  %38 = phi %"class.blink::AudioChannel"* [ %47, %46 ], [ %34, %33 ]
  %39 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %39, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %39, align 8
  %41 = icmp eq %"class.blink::AudioArray"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::AudioArray"* %40 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %44) #6
  %45 = bitcast %"class.blink::AudioArray"* %40 to i8*
  tail call void @free(i8* %45) #6
  br label %46

46:                                               ; preds = %42, %37
  %47 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %38, i64 1
  %48 = icmp eq %"class.blink::AudioChannel"* %47, %36
  br i1 %48, label %49, label %37

49:                                               ; preds = %46
  store i32 0, i32* %29, align 4
  br label %50

50:                                               ; preds = %49, %27
  %51 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %32, align 8
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %23, i64 6
  %53 = bitcast %"class.base::RefCountedThreadSafe.337"* %52 to %"class.blink::AudioChannel"*
  %54 = icmp eq %"class.blink::AudioChannel"* %51, %53
  br i1 %54, label %57, label %55, !prof !3

55:                                               ; preds = %50
  %56 = bitcast %"class.base::RefCountedThreadSafe.337"* %28 to %"class.WTF::VectorBuffer.339"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.339"* %56, %"class.blink::AudioChannel"* %51) #6
  br label %57

57:                                               ; preds = %55, %50
  %58 = bitcast %"class.blink::AudioBus"* %20 to i8*
  tail call void @free(i8* %58) #6
  br label %59

59:                                               ; preds = %57, %22, %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput20UpdateRenderingStateEv(%"class.blink::AudioNodeOutput"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %55, label %7

7:                                                ; preds = %1
  store i32 %5, i32* %2, align 8
  tail call void @_ZN5blink15AudioNodeOutput17UpdateInternalBusEv(%"class.blink::AudioNodeOutput"* %0) #6
  %8 = load i32, i32* %2, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %55, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %15 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %15, i64 %18
  br i1 %13, label %55, label %20

20:                                               ; preds = %10
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.blink::AudioNodeInput"** [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"class.blink::AudioNodeInput"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %23, i64 1
  %28 = icmp eq %"class.blink::AudioNodeInput"** %27, %19
  br i1 %28, label %55, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"class.blink::AudioNodeInput"** [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"class.blink::AudioNodeInput"** %30, %19
  br i1 %31, label %55, label %32

32:                                               ; preds = %29
  %33 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %30, align 8
  br label %34

34:                                               ; preds = %52, %32
  %35 = phi %"class.blink::AudioNodeInput"* [ %53, %52 ], [ %33, %32 ]
  %36 = phi %"class.blink::AudioNodeInput"** [ %46, %52 ], [ %30, %32 ]
  %37 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %35, i64 0, i32 1
  %38 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %37, align 8
  %39 = bitcast %"class.blink::AudioHandler"* %38 to void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)***
  %40 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)**, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %40, i64 10
  %42 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %41, align 8
  tail call void %42(%"class.blink::AudioHandler"* %38, %"class.blink::AudioNodeInput"* %35) #6
  %43 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %36, i64 1
  %44 = icmp eq %"class.blink::AudioNodeInput"** %43, %19
  br i1 %44, label %55, label %45

45:                                               ; preds = %34, %49
  %46 = phi %"class.blink::AudioNodeInput"** [ %50, %49 ], [ %43, %34 ]
  %47 = bitcast %"class.blink::AudioNodeInput"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %46, i64 1
  %51 = icmp eq %"class.blink::AudioNodeInput"** %50, %19
  br i1 %51, label %55, label %45

52:                                               ; preds = %45
  %53 = inttoptr i64 %48 to %"class.blink::AudioNodeInput"*
  %54 = icmp eq %"class.blink::AudioNodeInput"** %46, %19
  br i1 %54, label %55, label %34

55:                                               ; preds = %26, %34, %52, %49, %1, %7, %10, %29
  %56 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 10
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 11
  store i32 %60, i32* %61, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink15AudioNodeOutput11FanOutCountEv(%"class.blink::AudioNodeOutput"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink15AudioNodeOutput16ParamFanOutCountEv(%"class.blink::AudioNodeOutput"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput21PropagateChannelCountEv(%"class.blink::AudioNodeOutput"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %10, i64 %13
  br i1 %8, label %47, label %15

15:                                               ; preds = %5
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"class.blink::AudioNodeInput"** [ %22, %21 ], [ %10, %15 ]
  %19 = bitcast %"class.blink::AudioNodeInput"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %18, i64 1
  %23 = icmp eq %"class.blink::AudioNodeInput"** %22, %14
  br i1 %23, label %47, label %17

24:                                               ; preds = %17, %15
  %25 = phi %"class.blink::AudioNodeInput"** [ %10, %15 ], [ %18, %17 ]
  %26 = icmp eq %"class.blink::AudioNodeInput"** %25, %14
  br i1 %26, label %47, label %27

27:                                               ; preds = %24, %45
  %28 = phi %"class.blink::AudioNodeInput"** [ %39, %45 ], [ %25, %24 ]
  %29 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::AudioNodeInput", %"class.blink::AudioNodeInput"* %29, i64 0, i32 1
  %31 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %30, align 8
  %32 = bitcast %"class.blink::AudioHandler"* %31 to void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)***
  %33 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)**, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %33, i64 10
  %35 = load void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)** %34, align 8
  tail call void %35(%"class.blink::AudioHandler"* %31, %"class.blink::AudioNodeInput"* %29) #6
  %36 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %28, i64 1
  %37 = icmp eq %"class.blink::AudioNodeInput"** %36, %14
  br i1 %37, label %47, label %38

38:                                               ; preds = %27, %42
  %39 = phi %"class.blink::AudioNodeInput"** [ %43, %42 ], [ %36, %27 ]
  %40 = bitcast %"class.blink::AudioNodeInput"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %39, i64 1
  %44 = icmp eq %"class.blink::AudioNodeInput"** %43, %14
  br i1 %44, label %47, label %38

45:                                               ; preds = %38
  %46 = icmp eq %"class.blink::AudioNodeInput"** %39, %14
  br i1 %46, label %47, label %27

47:                                               ; preds = %21, %27, %45, %42, %5, %24, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioBus"* @_ZN5blink15AudioNodeOutput4PullEPNS_8AudioBusEj(%"class.blink::AudioNodeOutput"* nocapture, %"class.blink::AudioBus"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.blink::AudioBus"* %1, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %6, %3
  %13 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 5
  store i8 0, i8* %13, align 8
  br label %23

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 10
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, %16
  %20 = icmp eq i32 %19, 1
  %21 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 5
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 8
  br i1 %20, label %26, label %23

23:                                               ; preds = %14, %12
  %24 = phi i8* [ %13, %12 ], [ %21, %14 ]
  %25 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 4
  br label %34

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %23, %26, %31
  %35 = phi %class.scoped_refptr.335* [ %25, %23 ], [ %27, %26 ], [ %27, %31 ]
  %36 = phi %"class.blink::AudioBus"* [ null, %23 ], [ %1, %26 ], [ %1, %31 ]
  %37 = phi i8* [ %24, %23 ], [ %21, %26 ], [ %21, %31 ]
  %38 = ptrtoint %"class.blink::AudioBus"* %36 to i64
  %39 = bitcast %class.scoped_refptr.335* %35 to i64*
  %40 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 4, i32 0
  %41 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.blink::AudioBus"* %41, null
  br i1 %42, label %80, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %41, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %80

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %44, i64 2
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %44, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = bitcast %"class.base::RefCountedThreadSafe.337"* %49 to %"class.blink::AudioChannel"**
  br i1 %52, label %71, label %54, !prof !2

54:                                               ; preds = %48
  %55 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %53, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %55, i64 %56
  br label %58

58:                                               ; preds = %67, %54
  %59 = phi %"class.blink::AudioChannel"* [ %68, %67 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %59, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %60, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %60, align 8
  %62 = icmp eq %"class.blink::AudioArray"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.blink::AudioArray"* %61 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %65) #6
  %66 = bitcast %"class.blink::AudioArray"* %61 to i8*
  call void @free(i8* %66) #6
  br label %67

67:                                               ; preds = %63, %58
  %68 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %59, i64 1
  %69 = icmp eq %"class.blink::AudioChannel"* %68, %57
  br i1 %69, label %70, label %58

70:                                               ; preds = %67
  store i32 0, i32* %50, align 4
  br label %71

71:                                               ; preds = %70, %48
  %72 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %53, align 8
  %73 = getelementptr inbounds %"class.base::RefCountedThreadSafe.337", %"class.base::RefCountedThreadSafe.337"* %44, i64 6
  %74 = bitcast %"class.base::RefCountedThreadSafe.337"* %73 to %"class.blink::AudioChannel"*
  %75 = icmp eq %"class.blink::AudioChannel"* %72, %74
  br i1 %75, label %78, label %76, !prof !3

76:                                               ; preds = %71
  %77 = bitcast %"class.base::RefCountedThreadSafe.337"* %49 to %"class.WTF::VectorBuffer.339"*
  call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.339"* %77, %"class.blink::AudioChannel"* %72) #6
  br label %78

78:                                               ; preds = %76, %71
  %79 = bitcast %"class.blink::AudioBus"* %41 to i8*
  call void @free(i8* %79) #6
  br label %80

80:                                               ; preds = %34, %43, %78
  %81 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 0
  %82 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %81, align 8
  %83 = bitcast %"class.blink::AudioHandler"* %82 to void (%"class.blink::AudioHandler"*, i32)***
  %84 = load void (%"class.blink::AudioHandler"*, i32)**, void (%"class.blink::AudioHandler"*, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %84, i64 9
  %86 = load void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %85, align 8
  call void %86(%"class.blink::AudioHandler"* %82, i32 %2) #6
  %87 = load i8, i8* %37, align 8, !range !4
  %88 = icmp eq i8 %87, 0
  %89 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 3, i32 0
  %90 = select i1 %88, %"class.blink::AudioBus"** %89, %"class.blink::AudioBus"** %40
  %91 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %90, align 8
  ret %"class.blink::AudioBus"* %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 4, i32 0
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 3, i32 0
  %7 = select i1 %4, %"class.blink::AudioBus"** %6, %"class.blink::AudioBus"** %5
  %8 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %7, align 8
  ret %"class.blink::AudioBus"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15AudioNodeOutput20RenderingFanOutCountEv(%"class.blink::AudioNodeOutput"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput19DisconnectAllInputsEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.507", align 8
  %3 = bitcast %"class.WTF::Vector.507"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0, i32 1, i64 0
  %6 = bitcast %"class.WTF::Vector.507"* %2 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast i8* %5 to %"class.blink::AudioNodeInput"**
  br i1 %11, label %32, label %13

13:                                               ; preds = %1
  %14 = icmp ugt i32 %10, 4
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  call void @_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.507"* nonnull %2, i32 %10) #6
  %16 = load i32, i32* %8, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %18, align 8
  br label %20

20:                                               ; preds = %15, %13
  %21 = phi %"class.blink::AudioNodeInput"** [ %19, %15 ], [ %12, %13 ]
  %22 = phi i64 [ %17, %15 ], [ 0, %13 ]
  %23 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %21, i64 %22
  %24 = zext i32 %10 to i64
  %25 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %21, i64 %24
  %26 = bitcast %"class.blink::AudioNodeInput"** %23 to i8*
  %27 = ptrtoint %"class.blink::AudioNodeInput"** %25 to i64
  %28 = ptrtoint %"class.blink::AudioNodeInput"** %23 to i64
  %29 = sub i64 %27, %28
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 %29, i1 false) #6
  %30 = load i32, i32* %9, align 4
  %31 = icmp eq i32 %30, 0
  br label %32

32:                                               ; preds = %1, %20
  %33 = phi i1 [ %31, %20 ], [ true, %1 ]
  store i32 %10, i32* %8, align 4
  %34 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %35 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %35, i64 %38
  br i1 %33, label %73, label %40

40:                                               ; preds = %32
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %40, %46
  %43 = phi %"class.blink::AudioNodeInput"** [ %47, %46 ], [ %35, %40 ]
  %44 = bitcast %"class.blink::AudioNodeInput"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %43, i64 1
  %48 = icmp eq %"class.blink::AudioNodeInput"** %47, %39
  br i1 %48, label %73, label %42

49:                                               ; preds = %42, %40
  %50 = phi %"class.blink::AudioNodeInput"** [ %35, %40 ], [ %43, %42 ]
  %51 = icmp eq %"class.blink::AudioNodeInput"** %50, %39
  br i1 %51, label %73, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::AudioNodeInput"** %50 to i64*
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %52, %70
  %56 = phi i64 [ %66, %70 ], [ %54, %52 ]
  %57 = phi i32 [ %71, %70 ], [ 0, %52 ]
  %58 = phi %"class.blink::AudioNodeInput"** [ %64, %70 ], [ %50, %52 ]
  %59 = call dereferenceable(8) %"class.blink::AudioNodeInput"** @_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.507"* nonnull %2, i32 %57) #6
  %60 = bitcast %"class.blink::AudioNodeInput"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %58, i64 1
  %62 = icmp eq %"class.blink::AudioNodeInput"** %61, %39
  br i1 %62, label %73, label %63

63:                                               ; preds = %55, %67
  %64 = phi %"class.blink::AudioNodeInput"** [ %68, %67 ], [ %61, %55 ]
  %65 = bitcast %"class.blink::AudioNodeInput"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  switch i64 %66, label %70 [
    i64 -1, label %67
    i64 0, label %67
  ]

67:                                               ; preds = %63, %63
  %68 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %64, i64 1
  %69 = icmp eq %"class.blink::AudioNodeInput"** %68, %39
  br i1 %69, label %73, label %63

70:                                               ; preds = %63
  %71 = add i32 %57, 1
  %72 = icmp eq %"class.blink::AudioNodeInput"** %64, %39
  br i1 %72, label %73, label %55

73:                                               ; preds = %46, %55, %70, %67, %32, %49
  %74 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %74, align 8
  %76 = load i32, i32* %8, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %75, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %84, label %90, !prof !5

80:                                               ; preds = %90
  %81 = load i32, i32* %8, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %80
  store i32 0, i32* %8, align 4
  br label %84

84:                                               ; preds = %73, %83, %80
  %85 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %74, align 8
  %86 = icmp eq %"class.blink::AudioNodeInput"** %85, %12
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %2, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.508"* nonnull %88, %"class.blink::AudioNodeInput"** %85) #6
  br label %89

89:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #6
  ret void

90:                                               ; preds = %73, %90
  %91 = phi %"class.blink::AudioNodeInput"** [ %93, %90 ], [ %75, %73 ]
  %92 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %91, align 8
  call void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %0, %"class.blink::AudioNodeInput"* dereferenceable(104) %92) #6
  %93 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %91, i64 1
  %94 = icmp eq %"class.blink::AudioNodeInput"** %93, %78
  br i1 %94, label %80, label %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput19DisconnectAllParamsEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.512", align 8
  %3 = bitcast %"class.WTF::Vector.512"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0, i32 1, i64 0
  %6 = bitcast %"class.WTF::Vector.512"* %2 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast i8* %5 to %"class.blink::AudioParamHandler"**
  br i1 %11, label %32, label %13

13:                                               ; preds = %1
  %14 = icmp ugt i32 %10, 4
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  call void @_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.512"* nonnull %2, i32 %10) #6
  %16 = load i32, i32* %8, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %18, align 8
  br label %20

20:                                               ; preds = %15, %13
  %21 = phi %"class.blink::AudioParamHandler"** [ %19, %15 ], [ %12, %13 ]
  %22 = phi i64 [ %17, %15 ], [ 0, %13 ]
  %23 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %21, i64 %22
  %24 = zext i32 %10 to i64
  %25 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %21, i64 %24
  %26 = bitcast %"class.blink::AudioParamHandler"** %23 to i8*
  %27 = ptrtoint %"class.blink::AudioParamHandler"** %25 to i64
  %28 = ptrtoint %"class.blink::AudioParamHandler"** %23 to i64
  %29 = sub i64 %27, %28
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 %29, i1 false) #6
  %30 = load i32, i32* %9, align 4
  %31 = icmp eq i32 %30, 0
  br label %32

32:                                               ; preds = %1, %20
  %33 = phi i1 [ %31, %20 ], [ true, %1 ]
  store i32 %10, i32* %8, align 4
  %34 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 0
  %35 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 13, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %35, i64 %38
  br i1 %33, label %73, label %40

40:                                               ; preds = %32
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %40, %46
  %43 = phi %"class.blink::AudioParamHandler"** [ %47, %46 ], [ %35, %40 ]
  %44 = bitcast %"class.blink::AudioParamHandler"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %43, i64 1
  %48 = icmp eq %"class.blink::AudioParamHandler"** %47, %39
  br i1 %48, label %73, label %42

49:                                               ; preds = %42, %40
  %50 = phi %"class.blink::AudioParamHandler"** [ %35, %40 ], [ %43, %42 ]
  %51 = icmp eq %"class.blink::AudioParamHandler"** %50, %39
  br i1 %51, label %73, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::AudioParamHandler"** %50 to i64*
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %52, %70
  %56 = phi i64 [ %66, %70 ], [ %54, %52 ]
  %57 = phi i32 [ %71, %70 ], [ 0, %52 ]
  %58 = phi %"class.blink::AudioParamHandler"** [ %64, %70 ], [ %50, %52 ]
  %59 = call dereferenceable(8) %"class.blink::AudioParamHandler"** @_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.512"* nonnull %2, i32 %57) #6
  %60 = bitcast %"class.blink::AudioParamHandler"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %58, i64 1
  %62 = icmp eq %"class.blink::AudioParamHandler"** %61, %39
  br i1 %62, label %73, label %63

63:                                               ; preds = %55, %67
  %64 = phi %"class.blink::AudioParamHandler"** [ %68, %67 ], [ %61, %55 ]
  %65 = bitcast %"class.blink::AudioParamHandler"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  switch i64 %66, label %70 [
    i64 -1, label %67
    i64 0, label %67
  ]

67:                                               ; preds = %63, %63
  %68 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %64, i64 1
  %69 = icmp eq %"class.blink::AudioParamHandler"** %68, %39
  br i1 %69, label %73, label %63

70:                                               ; preds = %63
  %71 = add i32 %57, 1
  %72 = icmp eq %"class.blink::AudioParamHandler"** %64, %39
  br i1 %72, label %73, label %55

73:                                               ; preds = %46, %55, %70, %67, %32, %49
  %74 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %74, align 8
  %76 = load i32, i32* %8, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %75, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %84, label %90, !prof !5

80:                                               ; preds = %90
  %81 = load i32, i32* %8, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %80
  store i32 0, i32* %8, align 4
  br label %84

84:                                               ; preds = %73, %83, %80
  %85 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %74, align 8
  %86 = icmp eq %"class.blink::AudioParamHandler"** %85, %12
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %2, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.513"* nonnull %88, %"class.blink::AudioParamHandler"** %85) #6
  br label %89

89:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #6
  ret void

90:                                               ; preds = %73, %90
  %91 = phi %"class.blink::AudioParamHandler"** [ %93, %90 ], [ %75, %73 ]
  %92 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %91, align 8
  call void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %0, %"class.blink::AudioParamHandler"* dereferenceable(208) %92) #6
  %93 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %91, i64 1
  %94 = icmp eq %"class.blink::AudioParamHandler"** %93, %78
  br i1 %94, label %80, label %90
}

declare void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput7DisableEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 8
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %10, i64 %13
  br i1 %8, label %41, label %15

15:                                               ; preds = %5
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"class.blink::AudioNodeInput"** [ %22, %21 ], [ %10, %15 ]
  %19 = bitcast %"class.blink::AudioNodeInput"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %18, i64 1
  %23 = icmp eq %"class.blink::AudioNodeInput"** %22, %14
  br i1 %23, label %41, label %17

24:                                               ; preds = %17, %15
  %25 = phi %"class.blink::AudioNodeInput"** [ %10, %15 ], [ %18, %17 ]
  %26 = icmp eq %"class.blink::AudioNodeInput"** %25, %14
  br i1 %26, label %41, label %27

27:                                               ; preds = %24, %39
  %28 = phi %"class.blink::AudioNodeInput"** [ %33, %39 ], [ %25, %24 ]
  %29 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %28, align 8
  tail call void @_ZN5blink15AudioNodeWiring7DisableERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %0, %"class.blink::AudioNodeInput"* dereferenceable(104) %29) #6
  %30 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %28, i64 1
  %31 = icmp eq %"class.blink::AudioNodeInput"** %30, %14
  br i1 %31, label %41, label %32

32:                                               ; preds = %27, %36
  %33 = phi %"class.blink::AudioNodeInput"** [ %37, %36 ], [ %30, %27 ]
  %34 = bitcast %"class.blink::AudioNodeInput"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %33, i64 1
  %38 = icmp eq %"class.blink::AudioNodeInput"** %37, %14
  br i1 %38, label %41, label %32

39:                                               ; preds = %32
  %40 = icmp eq %"class.blink::AudioNodeInput"** %33, %14
  br i1 %40, label %41, label %27

41:                                               ; preds = %21, %27, %39, %36, %5, %24, %1
  ret void
}

declare void @_ZN5blink15AudioNodeWiring7DisableERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AudioNodeOutput6EnableEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %41

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %10, i64 %13
  br i1 %8, label %41, label %15

15:                                               ; preds = %5
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"class.blink::AudioNodeInput"** [ %22, %21 ], [ %10, %15 ]
  %19 = bitcast %"class.blink::AudioNodeInput"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %18, i64 1
  %23 = icmp eq %"class.blink::AudioNodeInput"** %22, %14
  br i1 %23, label %41, label %17

24:                                               ; preds = %17, %15
  %25 = phi %"class.blink::AudioNodeInput"** [ %10, %15 ], [ %18, %17 ]
  %26 = icmp eq %"class.blink::AudioNodeInput"** %25, %14
  br i1 %26, label %41, label %27

27:                                               ; preds = %24, %39
  %28 = phi %"class.blink::AudioNodeInput"** [ %33, %39 ], [ %25, %24 ]
  %29 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %28, align 8
  tail call void @_ZN5blink15AudioNodeWiring6EnableERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %0, %"class.blink::AudioNodeInput"* dereferenceable(104) %29) #6
  %30 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %28, i64 1
  %31 = icmp eq %"class.blink::AudioNodeInput"** %30, %14
  br i1 %31, label %41, label %32

32:                                               ; preds = %27, %36
  %33 = phi %"class.blink::AudioNodeInput"** [ %37, %36 ], [ %30, %27 ]
  %34 = bitcast %"class.blink::AudioNodeInput"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %33, i64 1
  %38 = icmp eq %"class.blink::AudioNodeInput"** %37, %14
  br i1 %38, label %41, label %32

39:                                               ; preds = %32
  %40 = icmp eq %"class.blink::AudioNodeInput"** %33, %14
  br i1 %40, label %41, label %27

41:                                               ; preds = %21, %27, %39, %36, %5, %24, %1
  ret void
}

declare void @_ZN5blink15AudioNodeWiring6EnableERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #1

declare i32 @_ZN3WTF13CurrentThreadEv() local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.508"*, %"class.blink::AudioNodeInput"**) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::AudioNodeInput"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.513"*, %"class.blink::AudioParamHandler"**) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::AudioParamHandler"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.339"*, %"class.blink::AudioChannel"*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::AudioChannel"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.507"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #6
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %31, align 8
  %33 = icmp eq %"class.blink::AudioNodeInput"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14AudioNodeInputEEEmm(i64 %37) #6
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv, i64 0, i64 0)) #6
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.507"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.507"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.507"* %0, i32 %27) #6
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.507"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %5, align 8
  %7 = icmp eq %"class.blink::AudioNodeInput"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::AudioNodeInput"**
  %10 = icmp eq %"class.blink::AudioNodeInput"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.507"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.507"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::AudioNodeInput"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #6
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.508"* %19, %"class.blink::AudioNodeInput"** nonnull %6) #6
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14AudioNodeInputEEEmm(i64 %30) #6
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14AudioNodeInputEEEPKcv, i64 0, i64 0)) #6
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::AudioNodeInput"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::AudioNodeInput"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #6
  %46 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::AudioNodeInput"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::AudioNodeInput"**
  %51 = icmp eq %"class.blink::AudioNodeInput"** %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.508"* %53, %"class.blink::AudioNodeInput"** %48) #6
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.507"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14AudioNodeInputEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::AudioNodeInput"** @_ZN3WTF6VectorIPN5blink14AudioNodeInputELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.507"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.507", %"class.WTF::Vector.507"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %24, i64 %25
  ret %"class.blink::AudioNodeInput"** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.512"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #6
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %31, align 8
  %33 = icmp eq %"class.blink::AudioParamHandler"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17AudioParamHandlerEEEmm(i64 %37) #6
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17AudioParamHandlerEEEPKcv, i64 0, i64 0)) #6
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.512"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.512"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.512"* %0, i32 %27) #6
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.512"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %5, align 8
  %7 = icmp eq %"class.blink::AudioParamHandler"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::AudioParamHandler"**
  %10 = icmp eq %"class.blink::AudioParamHandler"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.512"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.512"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::AudioParamHandler"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #6
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.513"* %19, %"class.blink::AudioParamHandler"** nonnull %6) #6
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17AudioParamHandlerEEEmm(i64 %30) #6
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17AudioParamHandlerEEEPKcv, i64 0, i64 0)) #6
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::AudioParamHandler"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::AudioParamHandler"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #6
  %46 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::AudioParamHandler"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::AudioParamHandler"**
  %51 = icmp eq %"class.blink::AudioParamHandler"** %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.513"* %53, %"class.blink::AudioParamHandler"** %48) #6
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.512"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17AudioParamHandlerEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::AudioParamHandler"** @_ZN3WTF6VectorIPN5blink17AudioParamHandlerELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.512"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.512", %"class.WTF::Vector.512"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %24, i64 %25
  ret %"class.blink::AudioParamHandler"** %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1073205, i32 2146410443}
