; ModuleID = '../../third_party/blink/renderer/core/dom/child_node_list.cc'
source_filename = "../../third_party/blink/renderer/core/dom/child_node_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.255" }
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__cxx_atomic_impl.258" }
%"struct.std::__1::__cxx_atomic_impl.258" = type { %"struct.std::__1::__cxx_atomic_base_impl.259" }
%"struct.std::__1::__cxx_atomic_base_impl.259" = type { i32 }
%"class.blink::ChildNodeList" = type { %"class.blink::NodeList", %"class.blink::Member", %"class.blink::CollectionIndexCache" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContainerNode"* }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.0", i32, i32 }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.0", %"class.blink::Member.2", %"class.blink::Member.0", %"class.blink::Member.0", %"class.blink::Member.4" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member", %"class.blink::Member.8", %"class.blink::Member.2", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.0", %"class.blink::Member.0" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.59" = type opaque
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.61", %"class.WTF::String"* }
%"class.blink::HeapVector.61" = type { %"class.WTF::Vector.64" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::Member.0"*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.240", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.221" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.244" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__cxx_atomic_impl.242" }
%"struct.std::__1::__cxx_atomic_impl.242" = type { %"struct.std::__1::__cxx_atomic_base_impl.243" }
%"struct.std::__1::__cxx_atomic_base_impl.243" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type opaque

$_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE6NodeAtERKS1_j = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink8NodeList18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink13ChildNodeList6lengthEv = comdat any

$_ZNK5blink8NodeList15IsEmptyNodeListEv = comdat any

$_ZNK5blink13ChildNodeList15IsChildNodeListEv = comdat any

$_ZNK5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE19NodeAfterCachedNodeERKS1_j = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEEE = comdat any

@_ZTVN5blink13ChildNodeListE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ChildNodeList"*)* @_ZN5blink13ChildNodeListD2Ev to i8*), i8* bitcast (void (%"class.blink::ChildNodeList"*)* @_ZN5blink13ChildNodeListD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ChildNodeList"*, %"class.blink::Visitor"*)* @_ZNK5blink13ChildNodeList5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::ChildNodeList"*)* @_ZNK5blink13ChildNodeList6lengthEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::ChildNodeList"*, i32)* @_ZNK5blink13ChildNodeList4itemEj to i8*), i8* bitcast (i1 (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList15IsEmptyNodeListEv to i8*), i8* bitcast (i1 (%"class.blink::ChildNodeList"*)* @_ZNK5blink13ChildNodeList15IsChildNodeListEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::ChildNodeList"*)* @_ZNK5blink13ChildNodeList16VirtualOwnerNodeEv to i8*)] }, align 8
@_ZN5blink8NodeList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEEE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CollectionIndexCache"*, %"class.blink::Visitor"*)* @_ZNK5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink13ChildNodeListC1ERNS_13ContainerNodeE = hidden unnamed_addr alias void (%"class.blink::ChildNodeList"*, %"class.blink::ContainerNode"*), void (%"class.blink::ChildNodeList"*, %"class.blink::ContainerNode"*)* @_ZN5blink13ChildNodeListC2ERNS_13ContainerNodeE
@_ZN5blink13ChildNodeListD1Ev = hidden unnamed_addr alias void (%"class.blink::ChildNodeList"*), void (%"class.blink::ChildNodeList"*)* @_ZN5blink13ChildNodeListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ChildNodeListC2ERNS_13ContainerNodeE(%"class.blink::ChildNodeList"* nocapture, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink13ChildNodeListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Node"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink13ChildNodeList16VirtualOwnerNodeEv(%"class.blink::ChildNodeList"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  ret %"class.blink::Node"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink13ChildNodeListD2Ev(%"class.blink::ChildNodeList"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink13ChildNodeListD0Ev(%"class.blink::ChildNodeList"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink13ChildNodeList4itemEj(%"class.blink::ChildNodeList"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2
  %4 = tail call %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"* %3, %"class.blink::ChildNodeList"* dereferenceable(48) %0, i32 %1)
  ret %"class.blink::Node"* %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"*, %"class.blink::ChildNodeList"* dereferenceable(48), i32) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, %2
  br i1 %10, label %11, label %95

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %70, label %15

15:                                               ; preds = %11
  %16 = and i32 %5, 2147483647
  %17 = icmp ult i32 %16, %2
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = tail call %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::ChildNodeList"* dereferenceable(48) %1, i32 %2)
  br label %95

20:                                               ; preds = %15
  %21 = icmp ugt i32 %16, %2
  br i1 %21, label %22, label %95

22:                                               ; preds = %20
  %23 = sub i32 %16, %2
  %24 = icmp ugt i32 %23, %2
  br i1 %24, label %25, label %45

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %1, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %31 = ptrtoint %"class.blink::Node"* %29 to i64
  %32 = bitcast %"class.blink::Member.0"* %30 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = bitcast %"class.blink::Node"* %29 to i8*
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #7
  %38 = load i32, i32* %4, align 4
  br label %39

39:                                               ; preds = %35, %25
  %40 = phi i32 [ %5, %25 ], [ %38, %35 ]
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %4, align 4
  %42 = icmp eq i32 %2, 0
  br i1 %42, label %95, label %43

43:                                               ; preds = %39
  %44 = tail call %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::ChildNodeList"* dereferenceable(48) %1, i32 %2) #7
  br label %95

45:                                               ; preds = %22, %51
  %46 = phi i32 [ %52, %51 ], [ %16, %22 ]
  %47 = phi %"class.blink::Node"* [ %49, %51 ], [ %13, %22 ]
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 4, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = add i32 %46, -1
  %53 = icmp eq i32 %52, %2
  br i1 %53, label %54, label %45

54:                                               ; preds = %51, %45
  %55 = phi i32 [ %2, %51 ], [ %46, %45 ]
  %56 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %57 = ptrtoint %"class.blink::Node"* %49 to i64
  %58 = bitcast %"class.blink::Member.0"* %56 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::Node"* %49 to i8*
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #7
  %64 = load i32, i32* %4, align 4
  br label %65

65:                                               ; preds = %61, %54
  %66 = phi i32 [ %5, %54 ], [ %64, %61 ]
  %67 = and i32 %55, 2147483647
  %68 = and i32 %66, -2147483648
  %69 = or i32 %68, %67
  store i32 %69, i32* %4, align 4
  br label %95

70:                                               ; preds = %11
  %71 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %1, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %72, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  store i32 0, i32* %77, align 8
  %78 = or i32 %5, -2147483648
  store i32 %78, i32* %4, align 4
  br label %95

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %81 = ptrtoint %"class.blink::Node"* %74 to i64
  %82 = bitcast %"class.blink::Member.0"* %80 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.blink::Node"* %74 to i8*
  %87 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %86) #7
  %88 = load i32, i32* %4, align 4
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi i32 [ %5, %79 ], [ %88, %85 ]
  %91 = and i32 %90, -2147483648
  store i32 %91, i32* %4, align 4
  %92 = icmp eq i32 %2, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = tail call %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"* %0, %"class.blink::ChildNodeList"* dereferenceable(48) %1, i32 %2)
  br label %95

95:                                               ; preds = %20, %65, %43, %39, %76, %89, %93, %7, %18
  %96 = phi %"class.blink::Node"* [ %19, %18 ], [ null, %7 ], [ null, %76 ], [ %94, %93 ], [ %74, %89 ], [ %49, %65 ], [ %44, %43 ], [ %29, %39 ], [ %13, %20 ]
  ret %"class.blink::Node"* %96
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13ChildNodeList15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::ChildNodeList"* nocapture, %"struct.blink::ContainerNode::ChildrenChange"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp ult i8 %4, 2
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 1
  %11 = bitcast %"class.blink::Member.0"* %10 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  br label %27

12:                                               ; preds = %2
  %13 = or i8 %4, 1
  %14 = icmp eq i8 %13, 3
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 1
  %20 = bitcast %"class.blink::Member.0"* %19 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  br label %27

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 1
  %23 = bitcast %"class.blink::Member.0"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 2147483647
  store i32 %26, i32* %24, align 4
  br label %27

27:                                               ; preds = %15, %21, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink13ChildNodeList23TraverseForwardToOffsetEjRNS_4NodeERj(%"class.blink::ChildNodeList"* nocapture readnone, i32, %"class.blink::Node"* nocapture readonly dereferenceable(64), i32* nocapture dereferenceable(4)) local_unnamed_addr #4 align 2 {
  br label %5

5:                                                ; preds = %10, %4
  %6 = phi %"class.blink::Node"* [ %2, %4 ], [ %8, %10 ]
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = load i32, i32* %3, align 4
  %12 = add i32 %11, 1
  store i32 %12, i32* %3, align 4
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %10
  ret %"class.blink::Node"* %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink13ChildNodeList24TraverseBackwardToOffsetEjRNS_4NodeERj(%"class.blink::ChildNodeList"* nocapture readnone, i32, %"class.blink::Node"* nocapture readonly dereferenceable(64), i32* nocapture dereferenceable(4)) local_unnamed_addr #4 align 2 {
  br label %5

5:                                                ; preds = %10, %4
  %6 = phi %"class.blink::Node"* [ %2, %4 ], [ %8, %10 ]
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = load i32, i32* %3, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %3, align 4
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %10
  ret %"class.blink::Node"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13ChildNodeList5TraceEPNS_7VisitorE(%"class.blink::ChildNodeList"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::CollectionIndexCache"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to void (%"class.blink::CollectionIndexCache"*, %"class.blink::Visitor"*)**
  %20 = load void (%"class.blink::CollectionIndexCache"*, %"class.blink::Visitor"*)*, void (%"class.blink::CollectionIndexCache"*, %"class.blink::Visitor"*)** %19, align 8
  tail call void %20(%"class.blink::CollectionIndexCache"* %14, %"class.blink::Visitor"* %1) #7
  br label %21

21:                                               ; preds = %13, %18
  %22 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %22, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #5

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8NodeList18GetWrapperTypeInfoEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8NodeList18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #5

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink13ChildNodeList6lengthEv(%"class.blink::ChildNodeList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2
  %7 = tail call %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE6NodeAtERKS1_j(%"class.blink::CollectionIndexCache"* %6, %"class.blink::ChildNodeList"* dereferenceable(48) %0, i32 -1) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %0, i64 0, i32 2, i32 2
  %10 = load i32, i32* %9, align 8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8NodeList15IsEmptyNodeListEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ChildNodeList15IsChildNodeListEv(%"class.blink::ChildNodeList"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE5TraceEPNS_7VisitorE(%"class.blink::CollectionIndexCache"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.0"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZN5blink20CollectionIndexCacheINS_13ChildNodeListENS_4NodeEE19NodeAfterCachedNodeERKS1_j(%"class.blink::CollectionIndexCache"*, %"class.blink::ChildNodeList"* dereferenceable(48), i32) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::ChildNodeList", %"class.blink::ChildNodeList"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::Member.0"* %7 to i64*
  %9 = icmp eq i32 %2, 0
  %10 = load i32, i32* %4, align 4
  br label %11

11:                                               ; preds = %58, %3
  %12 = phi i32 [ %60, %58 ], [ %10, %3 ]
  %13 = and i32 %12, 2147483647
  %14 = icmp slt i32 %12, 0
  br i1 %14, label %15, label %84

15:                                               ; preds = %11
  %16 = load i32, i32* %5, align 8
  %17 = sub i32 %16, %2
  %18 = sub i32 %2, %13
  %19 = icmp ult i32 %17, %18
  br i1 %19, label %20, label %84

20:                                               ; preds = %15
  %21 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %6, align 8
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = add i32 %16, 2147483647
  %25 = ptrtoint %"class.blink::Node"* %23 to i64
  store atomic i64 %25, i64* %8 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::Node"* %23 to i8*
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #7
  %31 = load i32, i32* %4, align 4
  %32 = load i32, i32* %5, align 8
  br label %33

33:                                               ; preds = %20, %28
  %34 = phi i32 [ %16, %20 ], [ %32, %28 ]
  %35 = phi i32 [ %12, %20 ], [ %31, %28 ]
  %36 = and i32 %24, 2147483647
  %37 = and i32 %35, -2147483648
  %38 = or i32 %37, %36
  store i32 %38, i32* %4, align 4
  %39 = add i32 %34, -1
  %40 = icmp ugt i32 %39, %2
  br i1 %40, label %41, label %111

41:                                               ; preds = %33
  %42 = sub i32 %36, %2
  %43 = icmp ugt i32 %42, %2
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  br label %61

47:                                               ; preds = %41
  %48 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %6, align 8
  %49 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = ptrtoint %"class.blink::Node"* %50 to i64
  store atomic i64 %51, i64* %8 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.blink::Node"* %50 to i8*
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #7
  %57 = load i32, i32* %4, align 4
  br label %58

58:                                               ; preds = %54, %47
  %59 = phi i32 [ %57, %54 ], [ %38, %47 ]
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %4, align 4
  br i1 %9, label %111, label %11

61:                                               ; preds = %67, %44
  %62 = phi i32 [ %36, %44 ], [ %68, %67 ]
  %63 = phi %"class.blink::Node"* [ %46, %44 ], [ %65, %67 ]
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 4, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = add i32 %62, -1
  %69 = icmp eq i32 %68, %2
  br i1 %69, label %70, label %61

70:                                               ; preds = %67, %61
  %71 = phi i32 [ %2, %67 ], [ %62, %61 ]
  %72 = ptrtoint %"class.blink::Node"* %65 to i64
  store atomic i64 %72, i64* %8 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.blink::Node"* %65 to i8*
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #7
  %78 = load i32, i32* %4, align 4
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i32 [ %78, %75 ], [ %38, %70 ]
  %81 = and i32 %71, 2147483647
  %82 = and i32 %80, -2147483648
  %83 = or i32 %82, %81
  store i32 %83, i32* %4, align 4
  br label %111

84:                                               ; preds = %11, %15
  %85 = getelementptr inbounds %"class.blink::CollectionIndexCache", %"class.blink::CollectionIndexCache"* %0, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %85, align 8
  br label %87

87:                                               ; preds = %94, %84
  %88 = phi i32 [ %13, %84 ], [ %93, %94 ]
  %89 = phi %"class.blink::Node"* [ %86, %84 ], [ %91, %94 ]
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %89, i64 0, i32 5, i32 0, i32 0
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  %93 = add i32 %88, 1
  br i1 %92, label %96, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %93, %2
  br i1 %95, label %98, label %87

96:                                               ; preds = %87
  store i32 %93, i32* %5, align 8
  %97 = or i32 %12, -2147483648
  store i32 %97, i32* %4, align 4
  br label %111

98:                                               ; preds = %94
  %99 = ptrtoint %"class.blink::Node"* %91 to i64
  store atomic i64 %99, i64* %8 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.blink::Node"* %91 to i8*
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %103) #7
  %105 = load i32, i32* %4, align 4
  br label %106

106:                                              ; preds = %98, %102
  %107 = phi i32 [ %12, %98 ], [ %105, %102 ]
  %108 = and i32 %2, 2147483647
  %109 = and i32 %107, -2147483648
  %110 = or i32 %109, %108
  store i32 %110, i32* %4, align 4
  br label %111

111:                                              ; preds = %58, %33, %79, %96, %106
  %112 = phi %"class.blink::Node"* [ %91, %106 ], [ null, %96 ], [ %65, %79 ], [ %50, %58 ], [ %23, %33 ]
  ret %"class.blink::Node"* %112
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
