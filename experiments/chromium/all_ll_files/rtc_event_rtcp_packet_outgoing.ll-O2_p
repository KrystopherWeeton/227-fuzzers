; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_rtcp_packet_outgoing.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_rtcp_packet_outgoing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::RtcEventRtcpPacketOutgoing" = type { %"class.webrtc::RtcEvent", %"class.rtc::BufferT" }
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

$_ZNK6webrtc26RtcEventRtcpPacketOutgoing7GetTypeEv = comdat any

$_ZNK6webrtc26RtcEventRtcpPacketOutgoing13IsConfigEventEv = comdat any

@_ZTVN6webrtc26RtcEventRtcpPacketOutgoingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*)* @_ZN6webrtc26RtcEventRtcpPacketOutgoingD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*)* @_ZN6webrtc26RtcEventRtcpPacketOutgoingD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::RtcEventRtcpPacketOutgoing"*)* @_ZNK6webrtc26RtcEventRtcpPacketOutgoing7GetTypeEv to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventRtcpPacketOutgoing"*)* @_ZNK6webrtc26RtcEventRtcpPacketOutgoing13IsConfigEventEv to i8*)] }, align 8

@_ZN6webrtc26RtcEventRtcpPacketOutgoingC1EN3rtc9ArrayViewIKhLln4711EEE = hidden unnamed_addr alias void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*, i8*, i64), void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*, i8*, i64)* @_ZN6webrtc26RtcEventRtcpPacketOutgoingC2EN3rtc9ArrayViewIKhLln4711EEE
@_ZN6webrtc26RtcEventRtcpPacketOutgoingC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*, %"class.webrtc::RtcEventRtcpPacketOutgoing"*), void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*, %"class.webrtc::RtcEventRtcpPacketOutgoing"*)* @_ZN6webrtc26RtcEventRtcpPacketOutgoingC2ERKS0_
@_ZN6webrtc26RtcEventRtcpPacketOutgoingD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*), void (%"class.webrtc::RtcEventRtcpPacketOutgoing"*)* @_ZN6webrtc26RtcEventRtcpPacketOutgoingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26RtcEventRtcpPacketOutgoingC2EN3rtc9ArrayViewIKhLln4711EEE(%"class.webrtc::RtcEventRtcpPacketOutgoing"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"* %4) #5
  %5 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc26RtcEventRtcpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 2
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call i8* @_Znam(i64 %2) #6
  %12 = ptrtoint i8* %11 to i64
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i64 [ %12, %10 ], [ 0, %3 ]
  %15 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = inttoptr i64 %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %1, i64 %2, i1 false) #5
  ret void
}

declare void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26RtcEventRtcpPacketOutgoingC2ERKS0_(%"class.webrtc::RtcEventRtcpPacketOutgoing"* nocapture, %"class.webrtc::RtcEventRtcpPacketOutgoing"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc26RtcEventRtcpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %1, i64 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 1
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 2
  %14 = icmp eq i64 %10, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = tail call i8* @_Znam(i64 %10) #6
  %17 = ptrtoint i8* %16 to i64
  br label %18

18:                                               ; preds = %2, %15
  %19 = phi i64 [ %17, %15 ], [ 0, %2 ]
  %20 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %8, i64 %10, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26RtcEventRtcpPacketOutgoingD2Ev(%"class.webrtc::RtcEventRtcpPacketOutgoing"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc26RtcEventRtcpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #6
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26RtcEventRtcpPacketOutgoingD0Ev(%"class.webrtc::RtcEventRtcpPacketOutgoing"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc26RtcEventRtcpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #6
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::RtcEventRtcpPacketOutgoing"* @_ZNK6webrtc26RtcEventRtcpPacketOutgoing4CopyEv(%"class.webrtc::RtcEventRtcpPacketOutgoing"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #6
  %3 = bitcast i8* %2 to %"class.webrtc::RtcEventRtcpPacketOutgoing"*
  %4 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 0, i32 1
  %5 = bitcast i8* %2 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc26RtcEventRtcpPacketOutgoingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventRtcpPacketOutgoing", %"class.webrtc::RtcEventRtcpPacketOutgoing"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i64* %4 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = extractelement <2 x i64> %10, i32 1
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = tail call i8* @_Znam(i64 %14) #6
  %19 = ptrtoint i8* %18 to i64
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i64 [ %19, %17 ], [ 0, %1 ]
  %22 = bitcast i8* %15 to i64*
  store i64 %21, i64* %22, align 8
  %23 = inttoptr i64 %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %8, i64 %14, i1 false) #5
  ret %"class.webrtc::RtcEventRtcpPacketOutgoing"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc26RtcEventRtcpPacketOutgoing7GetTypeEv(%"class.webrtc::RtcEventRtcpPacketOutgoing"*) unnamed_addr #0 comdat align 2 {
  ret i32 17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc26RtcEventRtcpPacketOutgoing13IsConfigEventEv(%"class.webrtc::RtcEventRtcpPacketOutgoing"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
