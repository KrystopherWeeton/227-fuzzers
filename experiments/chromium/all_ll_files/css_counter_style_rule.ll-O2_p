; ModuleID = '../../third_party/blink/renderer/core/css/css_counter_style_rule.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_counter_style_rule.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.167", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.167" = type { %"class.base::RefCounted.168" }
%"class.base::RefCounted.168" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.171" }
%"class.blink::HeapHashMap.171" = type { %"class.WTF::HashMap.174" }
%"class.WTF::HashMap.174" = type { %"class.WTF::HashTable.175" }
%"class.WTF::HashTable.175" = type <{ %"struct.WTF::KeyValuePair.177"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.177" = type { %"class.blink::WeakMember.178", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.180", i32, [4 x i8], %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.332", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.350", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.357", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.296", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__cxx_atomic_impl.219" }
%"struct.std::__1::__cxx_atomic_impl.219" = type { %"struct.std::__1::__cxx_atomic_base_impl.220" }
%"struct.std::__1::__cxx_atomic_base_impl.220" = type { i64 }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::Worklist.248"* }
%"class.blink::Worklist.248" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::Worklist.255"* }
%"class.blink::Worklist.255" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::Worklist.262"* }
%"class.blink::Worklist.262" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::Worklist.269"* }
%"class.blink::Worklist.269" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.216" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.276", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.290", [4 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { i64 }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { float }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.299", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.308" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.338" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.234"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.241"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.248"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.255"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.933" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.356 }
%class.scoped_refptr.356 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.357" = type { %"struct.std::__1::__atomic_base.358" }
%"struct.std::__1::__atomic_base.358" = type { %"struct.std::__1::__cxx_atomic_impl.359" }
%"struct.std::__1::__cxx_atomic_impl.359" = type { %"struct.std::__1::__cxx_atomic_base_impl.360" }
%"struct.std::__1::__cxx_atomic_base_impl.360" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.127" }
%"struct.std::__1::atomic.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__cxx_atomic_impl.130" }
%"struct.std::__1::__cxx_atomic_impl.130" = type { %"struct.std::__1::__cxx_atomic_base_impl.131" }
%"struct.std::__1::__cxx_atomic_base_impl.131" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSCounterStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.0" }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.9", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.11, %"class.WTF::Vector.18", %"class.WTF::Vector.18", %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::HeapHashSet", %"class.blink::Member.30", %"class.WTF::HashSet.32", %"class.WTF::TextPosition", %"class.blink::Member.36", %"class.blink::HeapVector", %"class.blink::Member.46" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.11 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.12", %"class.WTF::String" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.23", %"class.blink::Member.48", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::Member.50" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.54", %"class.blink::Member.30", %"class.blink::Member.48", %"class.blink::Member.56", %"class.blink::Member.56", %"class.blink::Member.98", %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.107", %"class.blink::HeapVector.109" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.23", %"class.blink::Member.23" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.64" }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.68", i32, %"class.blink::HeapVector.91" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.73" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.71", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.71" = type { %"class.base::RefCounted.72" }
%"class.base::RefCounted.72" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.77", %"class.blink::Member.79", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.77" = type { %"class.WTF::SingleThreadedBitField.78" }
%"class.WTF::SingleThreadedBitField.78" = type { i32 }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.84", %"class.WTF::AtomicString", %"class.WTF::Vector.86" }
%"class.WTF::RefCounted.84" = type { %"class.base::RefCounted.85" }
%"class.base::RefCounted.85" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88", [32 x i8] }
%"class.WTF::VectorBufferBase.88" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.91" = type { %"class.WTF::Vector.94" }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.blink::Member.68"*, i32, i32 }
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.104" }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::HeapHashMap.106"* }
%"class.blink::HeapHashMap.106" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.109" = type { %"class.WTF::Vector.112" }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114" }
%"class.WTF::VectorBufferBase.114" = type { %"class.blink::Member.38"*, i32, i32 }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::CSSRule"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.49" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.123", %"class.WTF::Vector.123", i8, i32, %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.152", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.158", %"class.blink::Member.160", %"class.blink::Member.38", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.163", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.91", %"class.blink::Member.68", %"class.blink::Member.373", %"class.blink::Member.68", %"class.blink::Member.68", %"class.blink::Member.68", %"class.blink::UserActionElementSet", %"class.blink::Member.382", double, double, i64, i64, %"class.blink::HeapHashSet.384", %"class.blink::HeapHashSet.391", i16, i8, %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::Member.732", %"class.blink::Member.734", %"class.blink::TextLinkColors", %"class.blink::Member.736", i8, [7 x i8], %"class.blink::HeapHashMap.738", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.68", %"class.WTF::Vector.745", %"class.blink::Member.750", %"class.blink::Member.752", i8, %"class.blink::Member.68", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.754", %"class.blink::HeapVector.756", %"class.std::__1::unique_ptr.764", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.770", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.783", %"class.WTF::Vector.785", i8, i8, %"class.std::__1::unique_ptr.790", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.91", %"class.blink::HeapVector.796", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.804", i8, i32, %"class.blink::Member.806", %"class.blink::Member.808", %"class.blink::Member.810", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.812", %"class.WTF::HashMap.814", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.30", %"class.blink::Member.30", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.827", i8, i32, %"class.blink::Member.834", %"class.blink::Member.836", i32, %"class.blink::Member.838", %"class.blink::Member.840", %"class.blink::Member.842", %"class.std::__1::unique_ptr.844", i64, %"class.std::__1::unique_ptr.850", i32, i32, %"class.blink::Member.856", %"class.blink::Member.858", %"class.blink::Member.860", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.862", %"class.WTF::Vector.864", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.869", %"class.blink::Member.876", %"class.std::__1::unique_ptr.878", %"class.blink::Member.884", i8, i8, %"class.WTF::String", %"class.blink::Member.886", i8, [7 x i8], %"class.blink::HeapHashMap.888", %"class.blink::HeapObserverSet", %"class.blink::Member.902", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.904", i32, i8, i8, %"class.blink::WeakMember.906", %"class.blink::Member.907" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.116" }
%"class.blink::HeapHashMap.116" = type { %"class.WTF::HashMap.119" }
%"class.WTF::HashMap.119" = type { %"class.WTF::HashTable.120" }
%"class.WTF::HashTable.120" = type <{ %"struct.WTF::KeyValuePair.122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.122" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.126 }
%class.scoped_refptr.126 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.127" }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.938", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.979", i32, i8, [3 x i8], %"class.blink::HeapVector.981", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.989", %"class.blink::Member.991", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1000", %"class.blink::Member.1006", %"class.blink::Member.1008", i8, [7 x i8] }>
%"class.blink::Supplementable.938" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.939" }
%"class.blink::HeapHashMap.939" = type { %"class.WTF::HashMap.942" }
%"class.WTF::HashMap.942" = type { %"class.WTF::HashTable.943" }
%"class.WTF::HashTable.943" = type <{ %"struct.WTF::KeyValuePair.945"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.945" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.954" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.946" }
%"class.blink::HeapObserverSet.946" = type { i32, [4 x i8], %"class.blink::HeapHashSet.947" }
%"class.blink::HeapHashSet.947" = type { %"class.WTF::HashSet.950" }
%"class.WTF::HashSet.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"class.blink::WeakMember.953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.953" = type opaque
%"class.blink::Supplementable.954" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.955" }
%"class.blink::HeapHashMap.955" = type { %"class.WTF::HashMap.958" }
%"class.WTF::HashMap.958" = type { %"class.WTF::HashTable.959" }
%"class.WTF::HashTable.959" = type <{ %"struct.WTF::KeyValuePair.961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.961" = type { i8*, %"class.blink::Member.1051" }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1053" }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.962, %"class.std::__1::unique_ptr.963", %"class.std::__1::unique_ptr.963", %"class.std::__1::unique_ptr.969", %"class.std::__1::unique_ptr.969", %"class.blink::Member.136", i32, [4 x i8], %"class.WTF::HashSet.975", i32, i32 }
%class.scoped_refptr.962 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.975" = type { %"class.WTF::HashTable.976" }
%"class.WTF::HashTable.976" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.981" = type { %"class.WTF::Vector.984" }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %"class.blink::Member.987"*, i32, i32 }
%"class.blink::Member.987" = type opaque
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.993", i32, i32 }
%"class.blink::HeapHashMap.993" = type { %"class.WTF::HashMap.996" }
%"class.WTF::HashMap.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ %"struct.WTF::KeyValuePair.999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.999" = type opaque
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.146" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::KURL"* }
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.163" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.375" }
%"class.blink::HeapHashMap.375" = type { %"class.WTF::HashMap.378" }
%"class.WTF::HashMap.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"struct.WTF::KeyValuePair.381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.381" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.384" = type { %"class.WTF::HashSet.387" }
%"class.WTF::HashSet.387" = type { %"class.WTF::HashTable.388" }
%"class.WTF::HashTable.388" = type <{ %"class.blink::WeakMember.390"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.390" = type opaque
%"class.blink::HeapHashSet.391" = type { %"class.WTF::HashSet.394" }
%"class.WTF::HashSet.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"class.blink::WeakMember.397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.397" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.30", i32, i32, i32, %"class.blink::Member.38", %"class.blink::Member.404", %"class.blink::Member.431", %"class.blink::HeapHashMap.433", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.440", %"class.blink::HeapHashSet.440", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.446", %"class.blink::Member.469", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.507", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.664", %"class.blink::Member.670", %"class.blink::HeapHashMap.672", %"class.blink::HeapHashMap.679", %"class.std::__1::unique_ptr.686", i32, %"class.blink::HeapVector.692", %"class.blink::HeapVector.692", %"class.blink::HeapVector.416", %"class.blink::HeapHashSet.700", %"class.blink::HeapHashMap.707", %"class.blink::Member.714", %"class.blink::HeapHashMap.716", %class.scoped_refptr.723, %class.scoped_refptr.724, %"class.blink::Member.5", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.725", %"class.blink::Member.68" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.48", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.408", %"class.blink::HeapVector.416", i8 }>
%"class.blink::HeapVector.408" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::Member.414"*, i32, i32 }
%"class.blink::Member.414" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.427", %"class.blink::Member.429", %"class.blink::Member.429", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.427" = type <{ %"class.blink::Member.429"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.23", %"class.blink::Member.429", %"class.blink::Member.429" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.433" = type { %"class.WTF::HashMap.436" }
%"class.WTF::HashMap.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.blink::HeapHashSet.440" = type { %"class.WTF::HashSet.443" }
%"class.WTF::HashSet.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"class.blink::Member.48"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.450", %"class.blink::Member.461" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.68", %"class.blink::HeapHashMap.454" }
%"class.blink::HeapHashMap.454" = type { %"class.WTF::HashMap.457" }
%"class.WTF::HashMap.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.465", %"class.blink::Member.467" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.922", %"class.blink::Member.461", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.922" = type { %"class.WTF::Vector.925" }
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.926" }
%"class.WTF::VectorBuffer.926" = type { %"class.WTF::VectorBufferBase.927" }
%"class.WTF::VectorBufferBase.927" = type { %"class.blink::Member.467"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.929, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.127" }>
%class.sk_sp.929 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.930 }
%union.anon.930 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.30", %class.scoped_refptr.480, %"class.blink::SelectorFilter", %"class.blink::Member.431", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.473" }
%"class.blink::HeapHashMap.473" = type { %"class.WTF::HashMap.476" }
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.479" = type opaque
%class.scoped_refptr.480 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.481", %"class.std::__1::unique_ptr.493" }
%"class.blink::HeapVector.481" = type { %"class.WTF::Vector.484" }
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.68", %"class.WTF::Vector.487" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489", [16 x i8] }
%"class.WTF::VectorBufferBase.489" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.505", i8, [7 x i8] }>
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.529", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.511", %"class.WTF::HashMap.511", %"class.WTF::HashMap.511", %"class.WTF::HashMap.516", %class.scoped_refptr.521, %class.scoped_refptr.528, %class.scoped_refptr.527, %"class.WTF::Vector.18", %"class.WTF::Vector.18", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1055 }
%class.scoped_refptr.1055 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.522", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.524", %"union.blink::InvalidationSet::Backing.525", %"union.blink::InvalidationSet::Backing.526", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.522" = type { %"class.base::RefCounted.523" }
%"class.base::RefCounted.523" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.524" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.525" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.526" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.516" = type { %"class.WTF::HashTable.517" }
%"class.WTF::HashTable.517" = type <{ %"struct.WTF::KeyValuePair.520"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.520" = type opaque
%class.scoped_refptr.521 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.527, %class.scoped_refptr.527 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.522", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.524", %"union.blink::InvalidationSet::Backing.525", %"union.blink::InvalidationSet::Backing.526", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.528 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.527 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.533", %"class.blink::HeapHashMap.533", %"class.blink::HeapHashMap.533", %"class.blink::HeapHashMap.533", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::HeapVector.540", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.576", %"class.blink::HeapVector.584", %"class.blink::HeapVector.592", %"class.blink::HeapVector.609", %"class.blink::HeapVector.617", %"class.blink::HeapVector.624", %"class.blink::HeapVector.633", %"class.WTF::Vector.640", i32, %"class.blink::Member.646" }
%"class.blink::HeapHashMap.533" = type { %"class.WTF::HashMap.536" }
%"class.WTF::HashMap.536" = type { %"class.WTF::HashTable.537" }
%"class.WTF::HashTable.537" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type { %"class.WTF::AtomicString", %"class.blink::Member.1064" }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::HeapVector.540"* }
%"class.blink::HeapVector.540" = type { %"class.WTF::Vector.543" }
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { %"class.blink::Member.546"*, i32, i32 }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.550", i64, [4 x i32] }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.79", %"class.blink::Member.571" }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.576" = type { %"class.WTF::Vector.579" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::Member.582"*, i32, i32 }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.79", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.584" = type { %"class.WTF::Vector.587" }
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589" }
%"class.WTF::VectorBufferBase.589" = type { %"class.blink::Member.590"*, i32, i32 }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.79" }
%"class.blink::HeapVector.592" = type { %"class.WTF::Vector.595" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { %"class.blink::Member.598"*, i32, i32 }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.600", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.600" = type { %"class.WTF::Vector.603" }
%"class.WTF::Vector.603" = type { %"class.WTF::VectorBuffer.604" }
%"class.WTF::VectorBuffer.604" = type { %"class.WTF::VectorBufferBase.605" }
%"class.WTF::VectorBufferBase.605" = type { %"class.blink::Member.606"*, i32, i32 }
%"class.blink::Member.606" = type opaque
%"class.blink::HeapVector.609" = type { %"class.WTF::Vector.612" }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"class.blink::Member.615"*, i32, i32 }
%"class.blink::Member.615" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.79" }
%"class.blink::HeapVector.617" = type { %"class.WTF::Vector.620" }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::Member.0"*, i32, i32 }
%"class.blink::HeapVector.624" = type { %"class.WTF::Vector.627" }
%"class.WTF::Vector.627" = type { %"class.WTF::VectorBuffer.628" }
%"class.WTF::VectorBuffer.628" = type { %"class.WTF::VectorBufferBase.629" }
%"class.WTF::VectorBufferBase.629" = type { %"class.blink::Member.630"*, i32, i32 }
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::HeapVector.633" = type { %"class.WTF::Vector.636" }
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.550", i32, i32 }
%"class.WTF::Vector.640" = type { %"class.WTF::VectorBuffer.641" }
%"class.WTF::VectorBuffer.641" = type { %"class.WTF::VectorBufferBase.642" }
%"class.WTF::VectorBufferBase.642" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.643, i8, [7 x i8] }>
%class.scoped_refptr.643 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.650", %"class.blink::HeapHashMap.650", %"class.blink::HeapHashMap.650", %"class.blink::HeapHashMap.650" }
%"class.blink::HeapHashMap.650" = type { %"class.WTF::HashMap.653" }
%"class.WTF::HashMap.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"struct.WTF::KeyValuePair.656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.656" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.657" }
%"class.blink::HeapHashMap.657" = type { %"class.WTF::HashMap.660" }
%"class.WTF::HashMap.660" = type { %"class.WTF::HashTable.661" }
%"class.WTF::HashTable.661" = type <{ %"struct.WTF::KeyValuePair.663"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.663" = type { %"class.blink::Member.54", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1056", %"class.WTF::Vector.1056" }
%"class.WTF::Vector.1056" = type { %"class.WTF::VectorBuffer.1057" }
%"class.WTF::VectorBuffer.1057" = type { %"class.WTF::VectorBufferBase.1058" }
%"class.WTF::VectorBufferBase.1058" = type { %class.scoped_refptr.1055*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.23", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.664" = type { %"class.WTF::HashSet.667" }
%"class.WTF::HashSet.667" = type { %"class.WTF::HashTable.668" }
%"class.WTF::HashTable.668" = type <{ %"class.blink::Member.68"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.672" = type { %"class.WTF::HashMap.675" }
%"class.WTF::HashMap.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"struct.WTF::KeyValuePair.678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.678" = type opaque
%"class.blink::HeapHashMap.679" = type { %"class.WTF::HashMap.682" }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.685" = type opaque
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.692" = type { %"class.WTF::Vector.695" }
%"class.WTF::Vector.695" = type { %"class.WTF::VectorBuffer.696" }
%"class.WTF::VectorBuffer.696" = type { %"class.WTF::VectorBufferBase.697" }
%"class.WTF::VectorBufferBase.697" = type { %"struct.std::__1::pair.698"*, i32, i32 }
%"struct.std::__1::pair.698" = type opaque
%"class.blink::HeapVector.416" = type { %"class.WTF::Vector.419" }
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.std::__1::pair.422"*, i32, i32 }
%"struct.std::__1::pair.422" = type opaque
%"class.blink::HeapHashSet.700" = type { %"class.WTF::HashSet.703" }
%"class.WTF::HashSet.703" = type { %"class.WTF::HashTable.704" }
%"class.WTF::HashTable.704" = type <{ %"class.blink::WeakMember.706"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.706" = type { %"class.blink::MemberBase.39" }
%"class.blink::HeapHashMap.707" = type { %"class.WTF::HashMap.710" }
%"class.WTF::HashMap.710" = type { %"class.WTF::HashTable.711" }
%"class.WTF::HashTable.711" = type <{ %"struct.WTF::KeyValuePair.713"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.713" = type { %"class.WTF::AtomicString", %"class.blink::Member.598" }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.716" = type { %"class.WTF::HashMap.719" }
%"class.WTF::HashMap.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"struct.WTF::KeyValuePair.722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.722" = type opaque
%class.scoped_refptr.723 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.724 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.725" = type { %"class.WTF::HashSet.728" }
%"class.WTF::HashSet.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"class.blink::Member.731"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.731" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.738" = type { %"class.WTF::HashMap.741" }
%"class.WTF::HashMap.741" = type { %"class.WTF::HashTable.742" }
%"class.WTF::HashTable.742" = type <{ %"struct.WTF::KeyValuePair.744"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.744" = type opaque
%"class.WTF::Vector.745" = type { %"class.WTF::VectorBuffer.746" }
%"class.WTF::VectorBuffer.746" = type { %"class.WTF::VectorBufferBase.747" }
%"class.WTF::VectorBufferBase.747" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.756" = type { %"class.WTF::Vector.759" }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.blink::Member.762"*, i32, i32 }
%"class.blink::Member.762" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.770" = type { %"class.WTF::HashSet.773" }
%"class.WTF::HashSet.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"class.blink::WeakMember.776"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.776" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.777", i32, [4 x i8] }>
%"class.WTF::Vector.777" = type { %"class.WTF::VectorBuffer.778" }
%"class.WTF::VectorBuffer.778" = type { %"class.WTF::VectorBufferBase.779" }
%"class.WTF::VectorBufferBase.779" = type { %"struct.std::__1::pair.780"*, i32, i32 }
%"struct.std::__1::pair.780" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787" }
%"class.WTF::VectorBufferBase.787" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.796" = type { %"class.WTF::Vector.799" }
%"class.WTF::Vector.799" = type { %"class.WTF::VectorBuffer.800" }
%"class.WTF::VectorBuffer.800" = type { %"class.WTF::VectorBufferBase.801" }
%"class.WTF::VectorBufferBase.801" = type { %"class.blink::Member.802"*, i32, i32 }
%"class.blink::Member.802" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.30" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.814" = type { %"class.WTF::HashTable.815" }
%"class.WTF::HashTable.815" = type <{ %"struct.WTF::KeyValuePair.818"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.818" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.372", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.363, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.363 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.364" }>
%"class.base::RefCountedThreadSafe.364" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.366", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.366" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.367" }
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i8 }
%"class.blink::WeakMember.372" = type { %"class.blink::MemberBase.31" }
%"class.blink::HeapHashSet.827" = type { %"class.WTF::HashSet.830" }
%"class.WTF::HashSet.830" = type { %"class.WTF::HashTable.831" }
%"class.WTF::HashTable.831" = type <{ %"class.blink::Member.833"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.833" = type opaque
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.850" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.869" = type { %"class.WTF::HashMap.872" }
%"class.WTF::HashMap.872" = type { %"class.WTF::HashTable.873" }
%"class.WTF::HashTable.873" = type <{ %"struct.WTF::KeyValuePair.875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.875" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.888" = type { %"class.WTF::HashMap.891" }
%"class.WTF::HashMap.891" = type { %"class.WTF::HashTable.892" }
%"class.WTF::HashTable.892" = type <{ %"struct.WTF::KeyValuePair.894"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.894" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.895" }
%"class.blink::HeapHashSet.895" = type { %"class.WTF::HashSet.898" }
%"class.WTF::HashSet.898" = type { %"class.WTF::HashTable.899" }
%"class.WTF::HashTable.899" = type <{ %"class.blink::WeakMember.901"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.901" = type opaque
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.30", %"class.blink::HeapHashSet.911", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.918", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.911" = type { %"class.WTF::HashSet.914" }
%"class.WTF::HashSet.914" = type { %"class.WTF::HashTable.915" }
%"class.WTF::HashTable.915" = type <{ %"class.blink::Member.917"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.917" = type opaque
%"class.blink::HeapTaskRunnerTimer.918" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.919", { i64, i64 } }
%"class.blink::WeakMember.919" = type { %"class.blink::MemberBase.905" }
%"class.blink::WeakMember.906" = type { %"class.blink::MemberBase.24" }
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashSet.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.11, %"class.blink::Member.38", %"class.blink::Member.25" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1010, i32, i8, i8, [2 x i8] }>
%union.anon.1010 = type { %"class.WTF::Vector.1011" }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013", [16 x i8] }
%"class.WTF::VectorBufferBase.1013" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.1025", %"class.WTF::Vector.1030", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027", [32 x i8] }
%"class.WTF::VectorBufferBase.1027" = type { i32*, i32, i32 }
%"class.WTF::Vector.1030" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032" }
%"class.WTF::VectorBufferBase.1032" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037", [768 x i8] }
%"class.WTF::VectorBufferBase.1037" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1038 }
%union.anon.1038 = type { double }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.166, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.1023", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::Document"* }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1046, %"class.blink::Member.1047", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1046 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1049" }
%"class.blink::Persistent.1049" = type { %"class.blink::PersistentBase.1050" }
%"class.blink::PersistentBase.1050" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1087 }
%union.anon.1087 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink19CSSCounterStyleRule18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink19CSSCounterStyleRule7GetTypeEv = comdat any

$_ZNK5blink7CSSRule8cssRulesEv = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10TraceTraitINS_21StyleRuleCounterStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink19CSSCounterStyleRuleE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSCounterStyleRule"*)* @_ZN5blink19CSSCounterStyleRuleD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSCounterStyleRule"*)* @_ZN5blink19CSSCounterStyleRuleD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSCounterStyleRule"*, %"class.blink::Visitor"*)* @_ZNK5blink19CSSCounterStyleRule5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSCounterStyleRule"*)* @_ZNK5blink19CSSCounterStyleRule18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::CSSCounterStyleRule"*)* @_ZNK5blink19CSSCounterStyleRule7GetTypeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSCounterStyleRule"*)* @_ZNK5blink19CSSCounterStyleRule7cssTextEv to i8*), i8* bitcast (void (%"class.blink::CSSCounterStyleRule"*, %"class.blink::StyleRuleBase"*)* @_ZN5blink19CSSCounterStyleRule8ReattachEPNS_13StyleRuleBaseE to i8*), i8* bitcast (%"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)* @_ZNK5blink7CSSRule8cssRulesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [16 x i8] c"@counter-style \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c" {\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c" system: \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c" symbols: \00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c" additive-symbols: \00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c" negative: \00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c" prefix: \00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c" suffix: \00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c" pad: \00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c" range: \00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c" fallback: \00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c" speak-as: \00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink19CSSCounterStyleRule18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink19CSSCounterStyleRuleC1EPNS_21StyleRuleCounterStyleEPNS_13CSSStyleSheetE = hidden unnamed_addr alias void (%"class.blink::CSSCounterStyleRule"*, %"class.blink::StyleRuleCounterStyle"*, %"class.blink::CSSStyleSheet"*), void (%"class.blink::CSSCounterStyleRule"*, %"class.blink::StyleRuleCounterStyle"*, %"class.blink::CSSStyleSheet"*)* @_ZN5blink19CSSCounterStyleRuleC2EPNS_21StyleRuleCounterStyleEPNS_13CSSStyleSheetE
@_ZN5blink19CSSCounterStyleRuleD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSCounterStyleRule"*), void (%"class.blink::CSSCounterStyleRule"*)* @_ZN5blink19CSSCounterStyleRuleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRuleC2EPNS_21StyleRuleCounterStyleEPNS_13CSSStyleSheetE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::StyleRuleCounterStyle"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0
  tail call void @_ZN5blink7CSSRuleC2EPNS_13CSSStyleSheetE(%"class.blink::CSSRule"* %4, %"class.blink::CSSStyleSheet"* %2) #9
  %5 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink19CSSCounterStyleRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::StyleRuleCounterStyle"* %1, %"class.blink::StyleRuleCounterStyle"** %6, align 8
  ret void
}

declare void @_ZN5blink7CSSRuleC2EPNS_13CSSStyleSheetE(%"class.blink::CSSRule"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRuleD2Ev(%"class.blink::CSSCounterStyleRule"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRuleD0Ev(%"class.blink::CSSCounterStyleRule"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule7cssTextEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.WTF::StringView", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::StringView", align 8
  %35 = alloca %"class.WTF::StringView", align 8
  %36 = alloca %"class.WTF::StringView", align 8
  %37 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %40 = bitcast %union.anon.1010* %39 to i8*
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %42, align 4
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %43, align 1
  %44 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #9
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 15, i32* %48, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #9
  %49 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %51 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %51, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %99, label %55

55:                                               ; preds = %1
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %72

62:                                               ; preds = %55
  %63 = zext i32 %61 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #9
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !2

69:                                               ; preds = %62
  call void @llvm.trap() #9
  unreachable

70:                                               ; preds = %62
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %60, align 4
  br label %72

72:                                               ; preds = %55, %70
  %73 = phi i32 [ %71, %70 ], [ %61, %55 ]
  %74 = load atomic i32, i32* %56 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  br i1 %76, label %78, label %88

78:                                               ; preds = %72
  %79 = zext i32 %73 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #9
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %78
  call void @llvm.trap() #9
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %72
  %89 = phi i32 [ %87, %86 ], [ %73, %72 ]
  %90 = load atomic i32, i32* %56 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = add i32 %89, -1
  store i32 %94, i32* %77, align 4
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi i32 [ %94, %93 ], [ %89, %88 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #9
  br label %104

99:                                               ; preds = %1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %100, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %102 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %103, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %122

104:                                              ; preds = %95, %98
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %110 = bitcast i8** %109 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %107, i32* %111, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %112 = load atomic i32, i32* %56 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = load i32, i32* %77, align 4
  br i1 %114, label %116, label %118

116:                                              ; preds = %104
  %117 = add i32 %115, -1
  store i32 %117, i32* %77, align 4
  br label %118

118:                                              ; preds = %116, %104
  %119 = phi i32 [ %117, %116 ], [ %115, %104 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #9
  br label %122

122:                                              ; preds = %99, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  %123 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #9
  %124 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %125 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %127, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #9
  %128 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %129 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %128, i64 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %129, align 8
  %131 = icmp eq %"class.blink::CSSValue"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %122
  %133 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %130) #9
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %157, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %157, label %139

139:                                              ; preds = %135
  %140 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #9
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %142 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 9, i32* %144, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #9
  %145 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #9
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %133, %"class.WTF::StringImpl"** %146, align 8
  %147 = load i32, i32* %136, align 4
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 1
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %150 = bitcast i8** %149 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %147, i32* %151, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #9
  %152 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #9
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 1, i32* %156, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #9
  br label %157

157:                                              ; preds = %122, %132, %135, %139
  %158 = phi %"class.WTF::StringImpl"* [ %133, %135 ], [ %133, %139 ], [ null, %132 ], [ null, %122 ]
  %159 = phi i1 [ false, %135 ], [ false, %139 ], [ true, %132 ], [ true, %122 ]
  %160 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %161 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %160, i64 0, i32 10, i32 0, i32 0
  %162 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %161, align 8
  %163 = icmp eq %"class.blink::CSSValue"* %162, null
  br i1 %163, label %189, label %164

164:                                              ; preds = %157
  %165 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %162) #9
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %189, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %189, label %171

171:                                              ; preds = %167
  %172 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #9
  %173 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %174 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 10, i32* %176, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #9
  %177 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #9
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %165, %"class.WTF::StringImpl"** %178, align 8
  %179 = load i32, i32* %168, align 4
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 1
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %182 = bitcast i8** %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %179, i32* %183, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #9
  %184 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #9
  %185 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %186 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 1, i32* %188, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #9
  br label %189

189:                                              ; preds = %157, %164, %167, %171
  %190 = phi %"class.WTF::StringImpl"* [ %165, %167 ], [ %165, %171 ], [ null, %164 ], [ null, %157 ]
  %191 = phi i1 [ false, %167 ], [ false, %171 ], [ true, %164 ], [ true, %157 ]
  %192 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %193 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %192, i64 0, i32 11, i32 0, i32 0
  %194 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %193, align 8
  %195 = icmp eq %"class.blink::CSSValue"* %194, null
  br i1 %195, label %221, label %196

196:                                              ; preds = %189
  %197 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %194) #9
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %221, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %221, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #9
  %205 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %206 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8** %207, align 8
  %208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 19, i32* %208, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #9
  %209 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %209) #9
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %210, align 8
  %211 = load i32, i32* %200, align 4
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 1
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %214 = bitcast i8** %213 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %211, i32* %215, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %209) #9
  %216 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #9
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 1, i32* %220, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #9
  br label %221

221:                                              ; preds = %189, %196, %199, %203
  %222 = phi %"class.WTF::StringImpl"* [ %197, %199 ], [ %197, %203 ], [ null, %196 ], [ null, %189 ]
  %223 = phi i1 [ false, %199 ], [ false, %203 ], [ true, %196 ], [ true, %189 ]
  %224 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %225 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %224, i64 0, i32 4, i32 0, i32 0
  %226 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %225, align 8
  %227 = icmp eq %"class.blink::CSSValue"* %226, null
  br i1 %227, label %253, label %228

228:                                              ; preds = %221
  %229 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %226) #9
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %253, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %253, label %235

235:                                              ; preds = %231
  %236 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #9
  %237 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %238 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 11, i32* %240, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #9
  %241 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #9
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %229, %"class.WTF::StringImpl"** %242, align 8
  %243 = load i32, i32* %232, align 4
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 1
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %246 = bitcast i8** %245 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %246, align 8
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %243, i32* %247, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #9
  %248 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #9
  %249 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %250 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 1, i32* %252, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #9
  br label %253

253:                                              ; preds = %221, %228, %231, %235
  %254 = phi %"class.WTF::StringImpl"* [ %229, %231 ], [ %229, %235 ], [ null, %228 ], [ null, %221 ]
  %255 = phi i1 [ false, %231 ], [ false, %235 ], [ true, %228 ], [ true, %221 ]
  %256 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %257 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %256, i64 0, i32 5, i32 0, i32 0
  %258 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %257, align 8
  %259 = icmp eq %"class.blink::CSSValue"* %258, null
  br i1 %259, label %285, label %260

260:                                              ; preds = %253
  %261 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %258) #9
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %285, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %285, label %267

267:                                              ; preds = %263
  %268 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #9
  %269 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %270 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %271, align 8
  %272 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 9, i32* %272, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #9
  %273 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #9
  %274 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %274, align 8
  %275 = load i32, i32* %264, align 4
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 1
  %277 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %278 = bitcast i8** %277 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %276, %"class.WTF::StringImpl"** %278, align 8
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %275, i32* %279, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #9
  %280 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #9
  %281 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %282 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %283, align 8
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 1, i32* %284, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %20)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #9
  br label %285

285:                                              ; preds = %253, %260, %263, %267
  %286 = phi %"class.WTF::StringImpl"* [ %261, %263 ], [ %261, %267 ], [ null, %260 ], [ null, %253 ]
  %287 = phi i1 [ false, %263 ], [ false, %267 ], [ true, %260 ], [ true, %253 ]
  %288 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %289 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %288, i64 0, i32 6, i32 0, i32 0
  %290 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %289, align 8
  %291 = icmp eq %"class.blink::CSSValue"* %290, null
  br i1 %291, label %317, label %292

292:                                              ; preds = %285
  %293 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %290) #9
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %317, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %317, label %299

299:                                              ; preds = %295
  %300 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %300) #9
  %301 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %302 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8** %303, align 8
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 9, i32* %304, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %21)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %300) #9
  %305 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %305) #9
  %306 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  store %"class.WTF::StringImpl"* %293, %"class.WTF::StringImpl"** %306, align 8
  %307 = load i32, i32* %296, align 4
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 1
  %309 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %310 = bitcast i8** %309 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"** %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 %307, i32* %311, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %22)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #9
  %312 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #9
  %313 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %314 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %315, align 8
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 1, i32* %316, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %23)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #9
  br label %317

317:                                              ; preds = %285, %292, %295, %299
  %318 = phi %"class.WTF::StringImpl"* [ %293, %295 ], [ %293, %299 ], [ null, %292 ], [ null, %285 ]
  %319 = phi i1 [ false, %295 ], [ false, %299 ], [ true, %292 ], [ true, %285 ]
  %320 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %321 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %320, i64 0, i32 8, i32 0, i32 0
  %322 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %321, align 8
  %323 = icmp eq %"class.blink::CSSValue"* %322, null
  br i1 %323, label %349, label %324

324:                                              ; preds = %317
  %325 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %322) #9
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %349, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %349, label %331

331:                                              ; preds = %327
  %332 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #9
  %333 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %334 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8** %335, align 8
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 6, i32* %336, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %24)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #9
  %337 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #9
  %338 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 0
  store %"class.WTF::StringImpl"* %325, %"class.WTF::StringImpl"** %338, align 8
  %339 = load i32, i32* %328, align 4
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 1
  %341 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  %342 = bitcast i8** %341 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %342, align 8
  %343 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 %339, i32* %343, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %25)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #9
  %344 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %344) #9
  %345 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %346 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %345, i64* %346, align 8
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %348 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 1, i32* %348, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %344) #9
  br label %349

349:                                              ; preds = %317, %324, %327, %331
  %350 = phi %"class.WTF::StringImpl"* [ %325, %327 ], [ %325, %331 ], [ null, %324 ], [ null, %317 ]
  %351 = phi i1 [ false, %327 ], [ false, %331 ], [ true, %324 ], [ true, %317 ]
  %352 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %353 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %352, i64 0, i32 7, i32 0, i32 0
  %354 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %353, align 8
  %355 = icmp eq %"class.blink::CSSValue"* %354, null
  br i1 %355, label %381, label %356

356:                                              ; preds = %349
  %357 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %354) #9
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %381, label %359

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %381, label %363

363:                                              ; preds = %359
  %364 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #9
  %365 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %366 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %365, i64* %366, align 8
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %367, align 8
  %368 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 8, i32* %368, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %27)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #9
  %369 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #9
  %370 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  store %"class.WTF::StringImpl"* %357, %"class.WTF::StringImpl"** %370, align 8
  %371 = load i32, i32* %360, align 4
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 1
  %373 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %374 = bitcast i8** %373 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %372, %"class.WTF::StringImpl"** %374, align 8
  %375 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 %371, i32* %375, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %28)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #9
  %376 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %376) #9
  %377 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %378 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %379, align 8
  %380 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 1, i32* %380, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %29)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %376) #9
  br label %381

381:                                              ; preds = %349, %356, %359, %363
  %382 = phi %"class.WTF::StringImpl"* [ %357, %359 ], [ %357, %363 ], [ null, %356 ], [ null, %349 ]
  %383 = phi i1 [ false, %359 ], [ false, %363 ], [ true, %356 ], [ true, %349 ]
  %384 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %385 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %384, i64 0, i32 9, i32 0, i32 0
  %386 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %385, align 8
  %387 = icmp eq %"class.blink::CSSValue"* %386, null
  br i1 %387, label %413, label %388

388:                                              ; preds = %381
  %389 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %386) #9
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %413, label %391

391:                                              ; preds = %388
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %413, label %395

395:                                              ; preds = %391
  %396 = bitcast %"class.WTF::StringView"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %396) #9
  %397 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %398 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %397, i64* %398, align 8
  %399 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8** %399, align 8
  %400 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 11, i32* %400, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %30)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %396) #9
  %401 = bitcast %"class.WTF::StringView"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %401) #9
  %402 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 0
  store %"class.WTF::StringImpl"* %389, %"class.WTF::StringImpl"** %402, align 8
  %403 = load i32, i32* %392, align 4
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 1
  %405 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  %406 = bitcast i8** %405 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %404, %"class.WTF::StringImpl"** %406, align 8
  %407 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 %403, i32* %407, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %31)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %401) #9
  %408 = bitcast %"class.WTF::StringView"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %408) #9
  %409 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %410 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %411, align 8
  %412 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 1, i32* %412, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %408) #9
  br label %413

413:                                              ; preds = %381, %388, %391, %395
  %414 = phi %"class.WTF::StringImpl"* [ %389, %391 ], [ %389, %395 ], [ null, %388 ], [ null, %381 ]
  %415 = phi i1 [ false, %391 ], [ false, %395 ], [ true, %388 ], [ true, %381 ]
  %416 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %50, align 8
  %417 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %416, i64 0, i32 12, i32 0, i32 0
  %418 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %417, align 8
  %419 = icmp eq %"class.blink::CSSValue"* %418, null
  br i1 %419, label %445, label %420

420:                                              ; preds = %413
  %421 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %418) #9
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %445, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 1
  %425 = load i32, i32* %424, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %445, label %427

427:                                              ; preds = %423
  %428 = bitcast %"class.WTF::StringView"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %428) #9
  %429 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %430 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %429, i64* %430, align 8
  %431 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8** %431, align 8
  %432 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  store i32 11, i32* %432, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %428) #9
  %433 = bitcast %"class.WTF::StringView"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %433) #9
  %434 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 0
  store %"class.WTF::StringImpl"* %421, %"class.WTF::StringImpl"** %434, align 8
  %435 = load i32, i32* %424, align 4
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 1
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  %438 = bitcast i8** %437 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %436, %"class.WTF::StringImpl"** %438, align 8
  %439 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  store i32 %435, i32* %439, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %34)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %433) #9
  %440 = bitcast %"class.WTF::StringView"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %440) #9
  %441 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %442 = bitcast %"class.WTF::StringView"* %35 to i64*
  store i64 %441, i64* %442, align 8
  %443 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8** %443, align 8
  %444 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  store i32 1, i32* %444, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %35)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %440) #9
  br label %445

445:                                              ; preds = %413, %420, %423, %427
  %446 = phi %"class.WTF::StringImpl"* [ %421, %423 ], [ %421, %427 ], [ null, %420 ], [ null, %413 ]
  %447 = phi i1 [ false, %423 ], [ false, %427 ], [ true, %420 ], [ true, %413 ]
  %448 = bitcast %"class.WTF::StringView"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %448) #9
  %449 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %450 = bitcast %"class.WTF::StringView"* %36 to i64*
  store i64 %449, i64* %450, align 8
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8** %451, align 8
  %452 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  store i32 2, i32* %452, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %36)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %448) #9
  %453 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  br i1 %447, label %467, label %454

454:                                              ; preds = %445
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %446, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %446) #9
  br label %467

467:                                              ; preds = %445, %463, %466
  br i1 %415, label %481, label %468

468:                                              ; preds = %467
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load atomic i32, i32* %469 monotonic, align 4
  %471 = and i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %474 = load i32, i32* %473, align 4
  br i1 %472, label %475, label %477

475:                                              ; preds = %468
  %476 = add i32 %474, -1
  store i32 %476, i32* %473, align 4
  br label %477

477:                                              ; preds = %475, %468
  %478 = phi i32 [ %476, %475 ], [ %474, %468 ]
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %481

480:                                              ; preds = %477
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %414) #9
  br label %481

481:                                              ; preds = %467, %477, %480
  br i1 %383, label %495, label %482

482:                                              ; preds = %481
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %482
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %488, %482 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #9
  br label %495

495:                                              ; preds = %481, %491, %494
  br i1 %351, label %509, label %496

496:                                              ; preds = %495
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = load atomic i32, i32* %497 monotonic, align 4
  %499 = and i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 0
  %502 = load i32, i32* %501, align 4
  br i1 %500, label %503, label %505

503:                                              ; preds = %496
  %504 = add i32 %502, -1
  store i32 %504, i32* %501, align 4
  br label %505

505:                                              ; preds = %503, %496
  %506 = phi i32 [ %504, %503 ], [ %502, %496 ]
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %509

508:                                              ; preds = %505
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %350) #9
  br label %509

509:                                              ; preds = %495, %505, %508
  br i1 %319, label %523, label %510

510:                                              ; preds = %509
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %512 = load atomic i32, i32* %511 monotonic, align 4
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %516 = load i32, i32* %515, align 4
  br i1 %514, label %517, label %519

517:                                              ; preds = %510
  %518 = add i32 %516, -1
  store i32 %518, i32* %515, align 4
  br label %519

519:                                              ; preds = %517, %510
  %520 = phi i32 [ %518, %517 ], [ %516, %510 ]
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %522, label %523

522:                                              ; preds = %519
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #9
  br label %523

523:                                              ; preds = %509, %519, %522
  br i1 %287, label %537, label %524

524:                                              ; preds = %523
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %526 = load atomic i32, i32* %525 monotonic, align 4
  %527 = and i32 %526, 2
  %528 = icmp eq i32 %527, 0
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %530 = load i32, i32* %529, align 4
  br i1 %528, label %531, label %533

531:                                              ; preds = %524
  %532 = add i32 %530, -1
  store i32 %532, i32* %529, align 4
  br label %533

533:                                              ; preds = %531, %524
  %534 = phi i32 [ %532, %531 ], [ %530, %524 ]
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %537

536:                                              ; preds = %533
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #9
  br label %537

537:                                              ; preds = %523, %533, %536
  br i1 %255, label %551, label %538

538:                                              ; preds = %537
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = load atomic i32, i32* %539 monotonic, align 4
  %541 = and i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  br i1 %542, label %545, label %547

545:                                              ; preds = %538
  %546 = add i32 %544, -1
  store i32 %546, i32* %543, align 4
  br label %547

547:                                              ; preds = %545, %538
  %548 = phi i32 [ %546, %545 ], [ %544, %538 ]
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %551

550:                                              ; preds = %547
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #9
  br label %551

551:                                              ; preds = %537, %547, %550
  br i1 %223, label %565, label %552

552:                                              ; preds = %551
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %558 = load i32, i32* %557, align 4
  br i1 %556, label %559, label %561

559:                                              ; preds = %552
  %560 = add i32 %558, -1
  store i32 %560, i32* %557, align 4
  br label %561

561:                                              ; preds = %559, %552
  %562 = phi i32 [ %560, %559 ], [ %558, %552 ]
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %565

564:                                              ; preds = %561
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #9
  br label %565

565:                                              ; preds = %551, %561, %564
  br i1 %191, label %579, label %566

566:                                              ; preds = %565
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = load atomic i32, i32* %567 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %572 = load i32, i32* %571, align 4
  br i1 %570, label %573, label %575

573:                                              ; preds = %566
  %574 = add i32 %572, -1
  store i32 %574, i32* %571, align 4
  br label %575

575:                                              ; preds = %573, %566
  %576 = phi i32 [ %574, %573 ], [ %572, %566 ]
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %579

578:                                              ; preds = %575
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #9
  br label %579

579:                                              ; preds = %565, %575, %578
  br i1 %159, label %593, label %580

580:                                              ; preds = %579
  %581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %582 = load atomic i32, i32* %581 monotonic, align 4
  %583 = and i32 %582, 2
  %584 = icmp eq i32 %583, 0
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %586 = load i32, i32* %585, align 4
  br i1 %584, label %587, label %589

587:                                              ; preds = %580
  %588 = add i32 %586, -1
  store i32 %588, i32* %585, align 4
  br label %589

589:                                              ; preds = %587, %580
  %590 = phi i32 [ %588, %587 ], [ %586, %580 ]
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %593

592:                                              ; preds = %589
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #9
  br label %593

593:                                              ; preds = %579, %589, %592
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  %594 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %595 = icmp eq %"class.WTF::StringImpl"* %594, null
  br i1 %595, label %609, label %596

596:                                              ; preds = %593
  %597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %594, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = load atomic i32, i32* %597 monotonic, align 4
  %599 = and i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %594, i64 0, i32 0
  %602 = load i32, i32* %601, align 4
  br i1 %600, label %603, label %605

603:                                              ; preds = %596
  %604 = add i32 %602, -1
  store i32 %604, i32* %601, align 4
  br label %605

605:                                              ; preds = %603, %596
  %606 = phi i32 [ %604, %603 ], [ %602, %596 ]
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %609

608:                                              ; preds = %605
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %594) #9
  br label %609

609:                                              ; preds = %593, %605, %608
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  ret %"class.WTF::StringImpl"* %453
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule4nameEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %7, %22
  %25 = load atomic i32, i32* %8 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %40

30:                                               ; preds = %24
  %31 = zext i32 %29 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #9
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %30
  tail call void @llvm.trap() #9
  unreachable

38:                                               ; preds = %30
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %28, align 4
  br label %40

40:                                               ; preds = %24, %38
  %41 = phi i32 [ %39, %38 ], [ %29, %24 ]
  %42 = load atomic i32, i32* %8 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %47 = add i32 %41, -1
  store i32 %47, i32* %46, align 4
  br label %48

48:                                               ; preds = %45, %40
  %49 = phi i32 [ %47, %45 ], [ %41, %40 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #9
  br label %52

52:                                               ; preds = %1, %48, %51
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule6systemEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule7symbolsEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 10, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule15additiveSymbolsEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule8negativeEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule6prefixEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule6suffixEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule3padEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule5rangeEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule8fallbackEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSCounterStyleRule7speakAsEv(%"class.blink::CSSCounterStyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %3, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %5) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.WTF::StringImpl"* [ %8, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %10
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule8ReattachEPNS_13StyleRuleBaseE(%"class.blink::CSSCounterStyleRule"* nocapture, %"class.blink::StyleRuleBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1
  %4 = ptrtoint %"class.blink::StyleRuleBase"* %1 to i64
  %5 = bitcast %"class.blink::Member.0"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #9
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSTokenizer", align 8
  %6 = alloca %"class.WTF::Vector.1035", align 8
  %7 = alloca %"class.blink::CSSParserTokenRange", align 8
  %8 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %12, label %28, label %14

14:                                               ; preds = %4, %19
  %15 = phi %"class.blink::ScriptWrappable"** [ %27, %19 ], [ %13, %4 ]
  %16 = phi %"class.blink::CSSRule"* [ %22, %19 ], [ %8, %4 ]
  %17 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %15, align 8
  %18 = icmp eq %"class.blink::ScriptWrappable"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %16, i64 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.blink::ScriptWrappable"** %20 to %"class.blink::CSSRule"**
  %22 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %22, i64 0, i32 2, i32 0, i32 0
  br i1 %26, label %28, label %14

28:                                               ; preds = %19, %4
  %29 = phi %"class.blink::ScriptWrappable"** [ %13, %4 ], [ %27, %19 ]
  %30 = bitcast %"class.blink::ScriptWrappable"** %29 to %"class.blink::CSSStyleSheet"**
  %31 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %30, align 8
  br label %32

32:                                               ; preds = %14, %28
  %33 = phi %"class.blink::CSSStyleSheet"* [ %31, %28 ], [ null, %14 ]
  %34 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = tail call %"class.blink::CSSParserContext"* @_ZNK5blink7CSSRule13ParserContextENS_17SecureContextModeE(%"class.blink::CSSRule"* %8, i32 %35) #9
  %37 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %38 = bitcast i8* %37 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_13CSSStyleSheetE(%"class.blink::CSSParserContext"* %38, %"class.blink::CSSParserContext"* %36, %"class.blink::CSSStyleSheet"* %33) #9
  %39 = getelementptr inbounds i8, i8* %37, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  %43 = bitcast %"class.blink::CSSTokenizer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %3, i32 0) #9
  %44 = bitcast %"class.WTF::Vector.1035"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 784, i1 false)
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1035"* nonnull sret %6, %"class.blink::CSSTokenizer"* nonnull %5) #9
  %45 = bitcast %"class.blink::CSSParserTokenRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %7, i64 0, i32 1
  %47 = bitcast %"class.WTF::Vector.1035"* %6 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::CSSParserTokenRange"* %7 to i64*
  store i64 %48, i64* %49, align 8
  %50 = inttoptr i64 %48 to %"class.blink::CSSParserToken"*
  %51 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %6, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %50, i64 %53
  store %"class.blink::CSSParserToken"* %54, %"class.blink::CSSParserToken"** %46, align 8
  %55 = call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser29ParseAtCounterStyleDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32 %2, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %7, %"class.blink::CSSParserContext"* dereferenceable(176) %38) #9
  %56 = icmp eq %"class.blink::CSSValue"* %55, null
  br i1 %56, label %98, label %57

57:                                               ; preds = %32
  %58 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %58, align 8
  %60 = call zeroext i1 @_ZN5blink21StyleRuleCounterStyle22NewValueInvalidOrEqualENS_18AtRuleDescriptorIDEPKNS_8CSSValueE(%"class.blink::StyleRuleCounterStyle"* %59, i32 %2, %"class.blink::CSSValue"* nonnull %55) #9
  br i1 %60, label %61, label %98

61:                                               ; preds = %57
  %62 = icmp eq %"class.blink::CSSCounterStyleRule"* %0, null
  br i1 %62, label %87, label %63

63:                                               ; preds = %61
  %64 = load i8, i8* %9, align 8
  %65 = and i8 %64, 2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %63, %72
  %68 = phi %"class.blink::ScriptWrappable"** [ %80, %72 ], [ %13, %63 ]
  %69 = phi %"class.blink::CSSRule"* [ %75, %72 ], [ %8, %63 ]
  %70 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %68, align 8
  %71 = icmp eq %"class.blink::ScriptWrappable"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %69, i64 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.blink::ScriptWrappable"** %73 to %"class.blink::CSSRule"**
  %75 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %75, i64 0, i32 1
  %77 = load i8, i8* %76, align 8
  %78 = and i8 %77, 2
  %79 = icmp eq i8 %78, 0
  %80 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %75, i64 0, i32 2, i32 0, i32 0
  br i1 %79, label %81, label %67

81:                                               ; preds = %72, %63
  %82 = phi %"class.blink::ScriptWrappable"** [ %13, %63 ], [ %80, %72 ]
  %83 = bitcast %"class.blink::ScriptWrappable"** %82 to %"class.blink::CSSStyleSheet"**
  %84 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %83, align 8
  %85 = icmp eq %"class.blink::CSSStyleSheet"* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %81
  call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %84) #9
  br label %87

87:                                               ; preds = %67, %61, %81, %86
  %88 = phi %"class.blink::CSSStyleSheet"* [ null, %81 ], [ %84, %86 ], [ null, %61 ], [ null, %67 ]
  %89 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %58, align 8
  call void @_ZN5blink21StyleRuleCounterStyle18SetDescriptorValueENS_18AtRuleDescriptorIDEPKNS_8CSSValueE(%"class.blink::StyleRuleCounterStyle"* %89, i32 %2, %"class.blink::CSSValue"* nonnull %55) #9
  %90 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %33) #9
  %91 = icmp eq %"class.blink::Document"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %90, i64 0, i32 59, i32 0, i32 0
  %94 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %93, align 8
  call void @_ZN5blink11StyleEngine27MarkCounterStylesNeedUpdateEv(%"class.blink::StyleEngine"* %94) #9
  br label %95

95:                                               ; preds = %87, %92
  %96 = icmp eq %"class.blink::CSSStyleSheet"* %88, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %95
  call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %88, i32 1) #9
  br label %98

98:                                               ; preds = %97, %95, %57, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  %99 = load i32, i32* %51, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %102, label %101, !prof !2

101:                                              ; preds = %98
  store i32 0, i32* %51, align 4
  br label %102

102:                                              ; preds = %101, %98
  %103 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %6, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %103, align 8
  %105 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %6, i64 0, i32 0, i32 1, i64 0
  %106 = bitcast i8* %105 to %"class.blink::CSSParserToken"*
  %107 = icmp eq %"class.blink::CSSParserToken"* %104, %106
  br i1 %107, label %110, label %108, !prof !4

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %6, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1036"* nonnull %109, %"class.blink::CSSParserToken"* %104) #9
  br label %110

110:                                              ; preds = %102, %108
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %44) #9
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %43) #9
  ret void
}

declare %"class.blink::CSSParserContext"* @_ZNK5blink7CSSRule13ParserContextENS_17SecureContextModeE(%"class.blink::CSSRule"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1035"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser29ParseAtCounterStyleDescriptorENS_18AtRuleDescriptorIDERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(i32, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21StyleRuleCounterStyle22NewValueInvalidOrEqualENS_18AtRuleDescriptorIDEPKNS_8CSSValueE(%"class.blink::StyleRuleCounterStyle"*, i32, %"class.blink::CSSValue"*) local_unnamed_addr #1

declare void @_ZN5blink21StyleRuleCounterStyle18SetDescriptorValueENS_18AtRuleDescriptorIDEPKNS_8CSSValueE(%"class.blink::StyleRuleCounterStyle"*, i32, %"class.blink::CSSValue"*) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare void @_ZN5blink11StyleEngine27MarkCounterStylesNeedUpdateEv(%"class.blink::StyleEngine"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1030", %"class.WTF::Vector.1030"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.1030"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.1025", %"class.WTF::Vector.1025"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.1025", %"class.WTF::Vector.1025"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1026"* %53, i32* %48) #9
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule7setNameEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSTokenizer", align 8
  %5 = alloca %"class.WTF::Vector.1035", align 8
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %11, label %27, label %13

13:                                               ; preds = %3, %18
  %14 = phi %"class.blink::ScriptWrappable"** [ %26, %18 ], [ %12, %3 ]
  %15 = phi %"class.blink::CSSRule"* [ %21, %18 ], [ %7, %3 ]
  %16 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %14, align 8
  %17 = icmp eq %"class.blink::ScriptWrappable"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %15, i64 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.blink::ScriptWrappable"** %19 to %"class.blink::CSSRule"**
  %21 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 8
  %24 = and i8 %23, 2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %21, i64 0, i32 2, i32 0, i32 0
  br i1 %25, label %27, label %13

27:                                               ; preds = %18, %3
  %28 = phi %"class.blink::ScriptWrappable"** [ %12, %3 ], [ %26, %18 ]
  %29 = bitcast %"class.blink::ScriptWrappable"** %28 to %"class.blink::CSSStyleSheet"**
  %30 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %29, align 8
  br label %31

31:                                               ; preds = %13, %27
  %32 = phi %"class.blink::CSSStyleSheet"* [ %30, %27 ], [ null, %13 ]
  %33 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 11
  %34 = load i32, i32* %33, align 8
  %35 = tail call %"class.blink::CSSParserContext"* @_ZNK5blink7CSSRule13ParserContextENS_17SecureContextModeE(%"class.blink::CSSRule"* %7, i32 %34) #9
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %37 = bitcast i8* %36 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_13CSSStyleSheetE(%"class.blink::CSSParserContext"* %37, %"class.blink::CSSParserContext"* %35, %"class.blink::CSSStyleSheet"* %32) #9
  %38 = getelementptr inbounds i8, i8* %36, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = bitcast %"class.blink::CSSTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %42) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %2, i32 0) #9
  %43 = bitcast %"class.WTF::Vector.1035"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 784, i1 false)
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1035"* nonnull sret %5, %"class.blink::CSSTokenizer"* nonnull %4) #9
  %44 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  %46 = bitcast %"class.WTF::Vector.1035"* %5 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i64*
  store i64 %47, i64* %48, align 8
  %49 = inttoptr i64 %47 to %"class.blink::CSSParserToken"*
  %50 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %5, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 %52
  store %"class.blink::CSSParserToken"* %53, %"class.blink::CSSParserToken"** %45, align 8
  %54 = call %"class.WTF::StringImpl"* @_ZN5blink17css_parsing_utils32ConsumeCounterStyleNameInPreludeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %37) #9
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %184, label %56

56:                                               ; preds = %31
  %57 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %58, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %93, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #9
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #9
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = icmp eq %"class.WTF::StringImpl"* %54, %60
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br i1 %81, label %171, label %93

92:                                               ; preds = %88
  br i1 %81, label %171, label %93

93:                                               ; preds = %56, %91, %92
  %94 = icmp eq %"class.blink::CSSCounterStyleRule"* %0, null
  br i1 %94, label %119, label %95

95:                                               ; preds = %93
  %96 = load i8, i8* %8, align 8
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %95, %104
  %100 = phi %"class.blink::ScriptWrappable"** [ %112, %104 ], [ %12, %95 ]
  %101 = phi %"class.blink::CSSRule"* [ %107, %104 ], [ %7, %95 ]
  %102 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %100, align 8
  %103 = icmp eq %"class.blink::ScriptWrappable"* %102, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %101, i64 0, i32 2, i32 0, i32 0
  %106 = bitcast %"class.blink::ScriptWrappable"** %105 to %"class.blink::CSSRule"**
  %107 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %107, i64 0, i32 1
  %109 = load i8, i8* %108, align 8
  %110 = and i8 %109, 2
  %111 = icmp eq i8 %110, 0
  %112 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %107, i64 0, i32 2, i32 0, i32 0
  br i1 %111, label %113, label %99

113:                                              ; preds = %104, %95
  %114 = phi %"class.blink::ScriptWrappable"** [ %12, %95 ], [ %112, %104 ]
  %115 = bitcast %"class.blink::ScriptWrappable"** %114 to %"class.blink::CSSStyleSheet"**
  %116 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %115, align 8
  %117 = icmp eq %"class.blink::CSSStyleSheet"* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %113
  call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %116) #9
  br label %119

119:                                              ; preds = %99, %118, %113, %93
  %120 = phi %"class.blink::StyleRuleCounterStyle"** [ inttoptr (i64 32 to %"class.blink::StyleRuleCounterStyle"**), %93 ], [ %57, %113 ], [ %57, %118 ], [ %57, %99 ]
  %121 = phi %"class.blink::CSSStyleSheet"* [ null, %93 ], [ null, %113 ], [ %116, %118 ], [ null, %99 ]
  %122 = load %"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"** %120, align 8
  %123 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %122, i64 0, i32 2
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #9
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !2

137:                                              ; preds = %128
  call void @llvm.trap() #9
  unreachable

138:                                              ; preds = %128
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %129, align 4
  br label %140

140:                                              ; preds = %138, %119
  %141 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %142 = bitcast %"class.WTF::AtomicString"* %123 to i64*
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %141, i64* %142, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #9
  br label %159

159:                                              ; preds = %140, %155, %158
  %160 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %122, i64 0, i32 13
  %161 = load i32, i32* %160, align 8
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %160, align 8
  %163 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %32) #9
  %164 = icmp eq %"class.blink::Document"* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %163, i64 0, i32 59, i32 0, i32 0
  %167 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %166, align 8
  call void @_ZN5blink11StyleEngine27MarkCounterStylesNeedUpdateEv(%"class.blink::StyleEngine"* %167) #9
  br label %168

168:                                              ; preds = %159, %165
  %169 = icmp eq %"class.blink::CSSStyleSheet"* %121, null
  br i1 %169, label %171, label %170

170:                                              ; preds = %168
  call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %121, i32 1) #9
  br label %171

171:                                              ; preds = %168, %170, %92, %91
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #9
  br label %184

184:                                              ; preds = %31, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  %185 = load i32, i32* %50, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187, !prof !2

187:                                              ; preds = %184
  store i32 0, i32* %50, align 4
  br label %188

188:                                              ; preds = %187, %184
  %189 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %5, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %189, align 8
  %191 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %5, i64 0, i32 0, i32 1, i64 0
  %192 = bitcast i8* %191 to %"class.blink::CSSParserToken"*
  %193 = icmp eq %"class.blink::CSSParserToken"* %190, %192
  br i1 %193, label %196, label %194, !prof !4

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.WTF::Vector.1035", %"class.WTF::Vector.1035"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1036"* nonnull %195, %"class.blink::CSSParserToken"* %190) #9
  br label %196

196:                                              ; preds = %188, %194
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %43) #9
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %42) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink17css_parsing_utils32ConsumeCounterStyleNameInPreludeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule9setSystemEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 36, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule10setSymbolsEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 34, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule18setAdditiveSymbolsEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 1, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule11setNegativeEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 23, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule9setPrefixEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 26, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule9setSuffixEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 33, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule8setRangeEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 27, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule6setPadEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 25, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule10setSpeakAsEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 30, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CSSCounterStyleRule11setFallbackEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19CSSCounterStyleRule14SetterInternalEPKNS_16ExecutionContextENS_18AtRuleDescriptorIDERKN3WTF6StringE(%"class.blink::CSSCounterStyleRule"* %0, %"class.blink::ExecutionContext"* %1, i32 15, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19CSSCounterStyleRule5TraceEPNS_7VisitorE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.0"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::StyleRuleCounterStyle"*
  %9 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21StyleRuleCounterStyleEE5TraceEPNS_7VisitorEPKv) #9
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::CSSCounterStyleRule", %"class.blink::CSSCounterStyleRule"* %0, i64 0, i32 0
  tail call void @_ZNK5blink7CSSRule5TraceEPNS_7VisitorE(%"class.blink::CSSRule"* %15, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink7CSSRule5TraceEPNS_7VisitorE(%"class.blink::CSSRule"*, %"class.blink::Visitor"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19CSSCounterStyleRule18GetWrapperTypeInfoEv(%"class.blink::CSSCounterStyleRule"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19CSSCounterStyleRule18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink19CSSCounterStyleRule7GetTypeEv(%"class.blink::CSSCounterStyleRule"*) unnamed_addr #0 comdat align 2 {
  ret i32 11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRuleList"* @_ZNK5blink7CSSRule8cssRulesEv(%"class.blink::CSSRule"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSRuleList"* null
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1036"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1026"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_13CSSStyleSheetE(%"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #9
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #9
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21StyleRuleCounterStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
