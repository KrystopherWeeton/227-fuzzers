; ModuleID = '../../services/device/geolocation/position_cache_impl.cc'
source_filename = "../../services/device/geolocation/position_cache_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.device::PositionCacheImpl::CacheEntry" = type { %"class.std::__1::basic_string", %"class.device::mojom::Geoposition", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.device::mojom::Geoposition" = type { i8, double, double, double, double, double, double, double, %"class.base::Time", i32, %"class.std::__1::basic_string.1" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::OneShotTimer"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.13" }
%"class.base::time_internal::TimeBase.13" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.15", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.device::PositionCacheImpl" = type { %"class.device::PositionCache", %"class.net::NetworkChangeNotifier::NetworkChangeObserver", %"class.base::TickClock"*, %"class.std::__1::vector", %"class.device::mojom::Geoposition" }
%"class.device::PositionCache" = type { i32 (...)** }
%"class.net::NetworkChangeNotifier::NetworkChangeObserver" = type { i32 (...)**, %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.device::PositionCacheImpl::CacheEntry"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"struct.device::WifiData" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm = comdat any

$_ZNSt3__16removeINS_11__wrap_iterIPN6device17PositionCacheImpl10CacheEntryEEENS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEET_SD_SD_RKT0_ = comdat any

$_ZN6device13PositionCacheD2Ev = comdat any

$_ZN6device13PositionCacheD0Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EESA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN6device17PositionCacheImpl10CacheEntryENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS4_IDsEEEERKNS1_5mojom11GeopositionENS_10unique_ptrIN4base12OneShotTimerENS_14default_deleteISL_EEEEEEEvDpOT_ = comdat any

$_ZTVN6device13PositionCacheE = comdat any

@_ZN6device17PositionCacheImpl12kMaximumSizeE = hidden local_unnamed_addr constant i64 10, align 8
@_ZN6device17PositionCacheImpl16kMaximumLifetimeE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 86400000000 }, align 8
@_ZTVN6device17PositionCacheImplE = hidden unnamed_addr constant { [10 x i8*], [5 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::PositionCacheImpl"*)* @_ZN6device17PositionCacheImplD2Ev to i8*), i8* bitcast (void (%"class.device::PositionCacheImpl"*)* @_ZN6device17PositionCacheImplD0Ev to i8*), i8* bitcast (void (%"class.device::PositionCacheImpl"*, %"struct.device::WifiData"*, %"class.device::mojom::Geoposition"*)* @_ZN6device17PositionCacheImpl13CachePositionERKNS_8WifiDataERKNS_5mojom11GeopositionE to i8*), i8* bitcast (%"class.device::mojom::Geoposition"* (%"class.device::PositionCacheImpl"*, %"struct.device::WifiData"*)* @_ZNK6device17PositionCacheImpl12FindPositionERKNS_8WifiDataE to i8*), i8* bitcast (i64 (%"class.device::PositionCacheImpl"*)* @_ZNK6device17PositionCacheImpl20GetPositionCacheSizeEv to i8*), i8* bitcast (%"class.device::mojom::Geoposition"* (%"class.device::PositionCacheImpl"*)* @_ZNK6device17PositionCacheImpl26GetLastUsedNetworkPositionEv to i8*), i8* bitcast (void (%"class.device::PositionCacheImpl"*, %"class.device::mojom::Geoposition"*)* @_ZN6device17PositionCacheImpl26SetLastUsedNetworkPositionERKNS_5mojom11GeopositionE to i8*), i8* bitcast (void (%"class.device::PositionCacheImpl"*, i32)* @_ZN6device17PositionCacheImpl16OnNetworkChangedEN3net21NetworkChangeNotifier14ConnectionTypeE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.device::PositionCacheImpl"*, i32)* @_ZThn8_N6device17PositionCacheImpl16OnNetworkChangedEN3net21NetworkChangeNotifier14ConnectionTypeE to i8*), i8* bitcast (void (%"class.device::PositionCacheImpl"*)* @_ZThn8_N6device17PositionCacheImplD1Ev to i8*), i8* bitcast (void (%"class.device::PositionCacheImpl"*)* @_ZThn8_N6device17PositionCacheImplD0Ev to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"CachePosition\00", align 1
@.str.2 = private unnamed_addr constant [57 x i8] c"../../services/device/geolocation/position_cache_impl.cc\00", align 1
@_ZTVN6device13PositionCacheE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::PositionCache"*)* @_ZN6device13PositionCacheD2Ev to i8*), i8* bitcast (void (%"class.device::PositionCache"*)* @_ZN6device13PositionCacheD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN6device17PositionCacheImpl10CacheEntryC1ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS_5mojom11GeopositionENS2_10unique_ptrIN4base12OneShotTimerENS2_14default_deleteISH_EEEE = hidden unnamed_addr alias void (%"class.device::PositionCacheImpl::CacheEntry"*, %"class.std::__1::basic_string"*, %"class.device::mojom::Geoposition"*, %"class.base::OneShotTimer"*), void (%"class.device::PositionCacheImpl::CacheEntry"*, %"class.std::__1::basic_string"*, %"class.device::mojom::Geoposition"*, %"class.base::OneShotTimer"*)* @_ZN6device17PositionCacheImpl10CacheEntryC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS_5mojom11GeopositionENS2_10unique_ptrIN4base12OneShotTimerENS2_14default_deleteISH_EEEE
@_ZN6device17PositionCacheImpl10CacheEntryD1Ev = hidden unnamed_addr alias void (%"class.device::PositionCacheImpl::CacheEntry"*), void (%"class.device::PositionCacheImpl::CacheEntry"*)* @_ZN6device17PositionCacheImpl10CacheEntryD2Ev
@_ZN6device17PositionCacheImpl10CacheEntryC1EOS1_ = hidden unnamed_addr alias void (%"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"*), void (%"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"*)* @_ZN6device17PositionCacheImpl10CacheEntryC2EOS1_
@_ZN6device17PositionCacheImplC1EPKN4base9TickClockE = hidden unnamed_addr alias void (%"class.device::PositionCacheImpl"*, %"class.base::TickClock"*), void (%"class.device::PositionCacheImpl"*, %"class.base::TickClock"*)* @_ZN6device17PositionCacheImplC2EPKN4base9TickClockE
@_ZN6device17PositionCacheImplD1Ev = hidden unnamed_addr alias void (%"class.device::PositionCacheImpl"*), void (%"class.device::PositionCacheImpl"*)* @_ZN6device17PositionCacheImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl10CacheEntryC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS_5mojom11GeopositionENS2_10unique_ptrIN4base12OneShotTimerENS2_14default_deleteISH_EEEE(%"class.device::PositionCacheImpl::CacheEntry"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.device::mojom::Geoposition"* nocapture readonly dereferenceable(104), %"class.base::OneShotTimer"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.base::OneShotTimer"* %3 to i64
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  br label %188

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #13
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #13
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #14
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 76, i1 false) #12
  %191 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1, i32 10
  %192 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %2, i64 0, i32 10
  %193 = bitcast %"class.std::__1::basic_string.1"* %192 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %188
  %198 = bitcast %"class.std::__1::basic_string.1"* %191 to i8*
  %199 = bitcast %"class.std::__1::basic_string.1"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 24, i1 false) #12
  br label %205

200:                                              ; preds = %188
  %201 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %2, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %191, i8* %202, i64 %204) #12
  br label %205

205:                                              ; preds = %200, %197
  %206 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 2
  %207 = bitcast %"class.std::__1::unique_ptr"* %206 to i64*
  store i64 %5, i64* %207, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl10CacheEntryD2Ev(%"class.device::PositionCacheImpl::CacheEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %2, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %2, align 8
  %4 = icmp eq %"class.base::OneShotTimer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::OneShotTimer"* %3 to void (%"class.base::OneShotTimer"*)***
  %7 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %7, i64 1
  %9 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %8, align 8
  tail call void %9(%"class.base::OneShotTimer"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1
  tail call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %11) #12
  %12 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl10CacheEntryC2EOS1_(%"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"* nocapture dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i8*
  %4 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 76, i1 false) #12
  %7 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1, i32 10
  %8 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 10
  %9 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %7, i8* %18, i64 %20) #12
  br label %21

21:                                               ; preds = %13, %16
  %22 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %24, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %26, i64* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.device::PositionCacheImpl::CacheEntry"* @_ZN6device17PositionCacheImpl10CacheEntryaSEOS1_(%"class.device::PositionCacheImpl::CacheEntry"* returned, %"class.device::PositionCacheImpl::CacheEntry"* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %0 to i8*
  %12 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  %13 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  store i8 0, i8* %14, align 1
  %15 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %1 to i16*
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 76, i1 false) #12
  %18 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 1, i32 10
  %19 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 10
  %20 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %0, %1
  br i1 %20, label %50, label %21

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::basic_string.1"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = bitcast %"class.std::__1::basic_string.1"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %25, label %40, label %30

30:                                               ; preds = %21
  br i1 %29, label %34, label %31

31:                                               ; preds = %30
  %32 = bitcast %"class.std::__1::basic_string.1"* %18 to i8*
  %33 = bitcast %"class.std::__1::basic_string.1"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #12
  br label %50

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %18, i8* %36, i64 %38) #12
  br label %50

40:                                               ; preds = %21
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string.1"* %19 to i8*
  %46 = zext i8 %28 to i64
  %47 = select i1 %29, i8* %42, i8* %45
  %48 = select i1 %29, i64 %44, i64 %46
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %18, i8* %47, i64 %48) #12
  br label %50

50:                                               ; preds = %10, %31, %34, %40
  %51 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %0, i64 0, i32 2
  %52 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %1, i64 0, i32 2
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %53, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr"* %51 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %"class.base::OneShotTimer"* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %50
  %61 = bitcast %"class.base::OneShotTimer"* %57 to void (%"class.base::OneShotTimer"*)***
  %62 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %62, i64 1
  %64 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %63, align 8
  tail call void %64(%"class.base::OneShotTimer"* nonnull %57) #12
  br label %65

65:                                               ; preds = %50, %60
  ret %"class.device::PositionCacheImpl::CacheEntry"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl7MakeKeyERKNS_8WifiDataE(%"class.std::__1::basic_string"* noalias sret, %"struct.device::WifiData"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"struct.device::WifiData", %"struct.device::WifiData"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %9, 19
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %10)
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  store i8 1, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 124, i16* %17, align 8
  %18 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"struct.device::WifiData", %"struct.device::WifiData"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %"struct.device::WifiData", %"struct.device::WifiData"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %20, %21
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %22, label %30, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %38

30:                                               ; preds = %623, %2
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %30, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void

38:                                               ; preds = %24, %623
  %39 = phi %"class.std::__1::__tree_end_node"* [ %20, %24 ], [ %624, %623 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 4
  %41 = load i8, i8* %25, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i16*, i16** %12, align 8
  %44 = load i64, i64* %13, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i16* %43, i16* %26
  %47 = select i1 %42, i64 %44, i64 %45
  %48 = load i8, i8* %28, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %38
  %51 = load i64, i64* %6, align 8
  %52 = and i64 %51, 9223372036854775807
  %53 = add nsw i64 %52, -1
  %54 = load i64, i64* %5, align 8
  br label %57

55:                                               ; preds = %38
  %56 = zext i8 %48 to i64
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i64 [ %53, %50 ], [ 10, %55 ]
  %59 = phi i64 [ %54, %50 ], [ %56, %55 ]
  %60 = sub i64 %58, %59
  %61 = icmp ult i64 %60, %47
  br i1 %61, label %220, label %62

62:                                               ; preds = %57
  %63 = icmp eq i64 %47, 0
  br i1 %63, label %223, label %64

64:                                               ; preds = %62
  %65 = load i16*, i16** %4, align 8
  %66 = select i1 %49, i16* %65, i16* %29
  %67 = getelementptr inbounds i16, i16* %66, i64 %59
  %68 = icmp ult i64 %47, 16
  br i1 %68, label %158, label %69

69:                                               ; preds = %64
  %70 = add i64 %47, %59
  %71 = getelementptr i16, i16* %66, i64 %70
  %72 = getelementptr i16, i16* %46, i64 %47
  %73 = icmp ult i16* %67, %72
  %74 = icmp ult i16* %46, %71
  %75 = and i1 %73, %74
  br i1 %75, label %158, label %76

76:                                               ; preds = %69
  %77 = and i64 %47, -16
  %78 = sub i64 %47, %77
  %79 = getelementptr i16, i16* %46, i64 %77
  %80 = getelementptr i16, i16* %67, i64 %77
  %81 = add i64 %77, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 48
  br i1 %85, label %137, label %86

86:                                               ; preds = %76
  %87 = sub nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %134, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %135, %88 ]
  %91 = getelementptr i16, i16* %46, i64 %89
  %92 = getelementptr i16, i16* %67, i64 %89
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !13
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !13
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !16, !noalias !13
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !16, !noalias !13
  %101 = or i64 %89, 16
  %102 = getelementptr i16, i16* %46, i64 %101
  %103 = getelementptr i16, i16* %67, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !13
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !16, !noalias !13
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !16, !noalias !13
  %112 = or i64 %89, 32
  %113 = getelementptr i16, i16* %46, i64 %112
  %114 = getelementptr i16, i16* %67, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !13
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !13
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !16, !noalias !13
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !16, !noalias !13
  %123 = or i64 %89, 48
  %124 = getelementptr i16, i16* %46, i64 %123
  %125 = getelementptr i16, i16* %67, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !13
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !13
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !16, !noalias !13
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !16, !noalias !13
  %134 = add i64 %89, 64
  %135 = add i64 %90, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %88, !llvm.loop !18

137:                                              ; preds = %88, %76
  %138 = phi i64 [ 0, %76 ], [ %134, %88 ]
  %139 = icmp eq i64 %84, 0
  br i1 %139, label %156, label %140

140:                                              ; preds = %137, %140
  %141 = phi i64 [ %153, %140 ], [ %138, %137 ]
  %142 = phi i64 [ %154, %140 ], [ %84, %137 ]
  %143 = getelementptr i16, i16* %46, i64 %141
  %144 = getelementptr i16, i16* %67, i64 %141
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !13
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !13
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !16, !noalias !13
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !16, !noalias !13
  %153 = add i64 %141, 16
  %154 = add i64 %142, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %140, !llvm.loop !19

156:                                              ; preds = %140, %137
  %157 = icmp eq i64 %47, %77
  br i1 %157, label %211, label %158

158:                                              ; preds = %156, %69, %64
  %159 = phi i64 [ %47, %69 ], [ %47, %64 ], [ %78, %156 ]
  %160 = phi i16* [ %46, %69 ], [ %46, %64 ], [ %79, %156 ]
  %161 = phi i16* [ %67, %69 ], [ %67, %64 ], [ %80, %156 ]
  %162 = add i64 %159, -1
  %163 = and i64 %159, 7
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %158, %165
  %166 = phi i64 [ %171, %165 ], [ %159, %158 ]
  %167 = phi i16* [ %173, %165 ], [ %160, %158 ]
  %168 = phi i16* [ %172, %165 ], [ %161, %158 ]
  %169 = phi i64 [ %174, %165 ], [ %163, %158 ]
  %170 = load i16, i16* %167, align 2
  store i16 %170, i16* %168, align 2
  %171 = add i64 %166, -1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = getelementptr inbounds i16, i16* %167, i64 1
  %174 = add i64 %169, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %165, !llvm.loop !20

176:                                              ; preds = %165, %158
  %177 = phi i64 [ %159, %158 ], [ %171, %165 ]
  %178 = phi i16* [ %160, %158 ], [ %173, %165 ]
  %179 = phi i16* [ %161, %158 ], [ %172, %165 ]
  %180 = icmp ult i64 %162, 7
  br i1 %180, label %211, label %181

181:                                              ; preds = %176, %181
  %182 = phi i64 [ %207, %181 ], [ %177, %176 ]
  %183 = phi i16* [ %209, %181 ], [ %178, %176 ]
  %184 = phi i16* [ %208, %181 ], [ %179, %176 ]
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %184, i64 1
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %184, i64 2
  %190 = getelementptr inbounds i16, i16* %183, i64 2
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %184, i64 3
  %193 = getelementptr inbounds i16, i16* %183, i64 3
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %184, i64 4
  %196 = getelementptr inbounds i16, i16* %183, i64 4
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %184, i64 5
  %199 = getelementptr inbounds i16, i16* %183, i64 5
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = getelementptr inbounds i16, i16* %184, i64 6
  %202 = getelementptr inbounds i16, i16* %183, i64 6
  %203 = load i16, i16* %202, align 2
  store i16 %203, i16* %201, align 2
  %204 = getelementptr inbounds i16, i16* %184, i64 7
  %205 = getelementptr inbounds i16, i16* %183, i64 7
  %206 = load i16, i16* %205, align 2
  store i16 %206, i16* %204, align 2
  %207 = add i64 %182, -8
  %208 = getelementptr inbounds i16, i16* %184, i64 8
  %209 = getelementptr inbounds i16, i16* %183, i64 8
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %211, label %181, !llvm.loop !21

211:                                              ; preds = %176, %181, %156
  %212 = add i64 %59, %47
  %213 = load i8, i8* %28, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %211
  store i64 %212, i64* %5, align 8
  br label %218

216:                                              ; preds = %211
  %217 = trunc i64 %212 to i8
  store i8 %217, i8* %28, align 1
  br label %218

218:                                              ; preds = %216, %215
  %219 = getelementptr inbounds i16, i16* %66, i64 %212
  store i16 0, i16* %219, align 2
  br label %223

220:                                              ; preds = %57
  %221 = add i64 %59, %47
  %222 = sub i64 %221, %58
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %58, i64 %222, i64 %59, i64 %59, i64 0, i64 %47, i16* %46) #12
  br label %223

223:                                              ; preds = %62, %218, %220
  %224 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %224, i64 0, i32 1, i32 1
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  %228 = bitcast %"class.std::__1::__tree_end_node"* %40 to i16**
  %229 = load i16*, i16** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 5
  %231 = bitcast %"class.std::__1::__tree_end_node"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.std::__1::__tree_end_node"* %40 to i16*
  %234 = zext i8 %226 to i64
  %235 = select i1 %227, i16* %229, i16* %233
  %236 = select i1 %227, i64 %232, i64 %234
  %237 = load i8, i8* %28, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %244

239:                                              ; preds = %223
  %240 = load i64, i64* %6, align 8
  %241 = and i64 %240, 9223372036854775807
  %242 = add nsw i64 %241, -1
  %243 = load i64, i64* %5, align 8
  br label %246

244:                                              ; preds = %223
  %245 = zext i8 %237 to i64
  br label %246

246:                                              ; preds = %244, %239
  %247 = phi i64 [ %242, %239 ], [ 10, %244 ]
  %248 = phi i64 [ %243, %239 ], [ %245, %244 ]
  %249 = sub i64 %247, %248
  %250 = icmp ult i64 %249, %236
  br i1 %250, label %409, label %251

251:                                              ; preds = %246
  %252 = icmp eq i64 %236, 0
  br i1 %252, label %412, label %253

253:                                              ; preds = %251
  %254 = load i16*, i16** %4, align 8
  %255 = select i1 %238, i16* %254, i16* %29
  %256 = getelementptr inbounds i16, i16* %255, i64 %248
  %257 = icmp ult i64 %236, 16
  br i1 %257, label %347, label %258

258:                                              ; preds = %253
  %259 = add i64 %236, %248
  %260 = getelementptr i16, i16* %255, i64 %259
  %261 = getelementptr i16, i16* %235, i64 %236
  %262 = icmp ult i16* %256, %261
  %263 = icmp ult i16* %235, %260
  %264 = and i1 %262, %263
  br i1 %264, label %347, label %265

265:                                              ; preds = %258
  %266 = and i64 %236, -16
  %267 = sub i64 %236, %266
  %268 = getelementptr i16, i16* %235, i64 %266
  %269 = getelementptr i16, i16* %256, i64 %266
  %270 = add i64 %266, -16
  %271 = lshr exact i64 %270, 4
  %272 = add nuw nsw i64 %271, 1
  %273 = and i64 %272, 3
  %274 = icmp ult i64 %270, 48
  br i1 %274, label %326, label %275

275:                                              ; preds = %265
  %276 = sub nsw i64 %272, %273
  br label %277

277:                                              ; preds = %277, %275
  %278 = phi i64 [ 0, %275 ], [ %323, %277 ]
  %279 = phi i64 [ %276, %275 ], [ %324, %277 ]
  %280 = getelementptr i16, i16* %235, i64 %278
  %281 = getelementptr i16, i16* %256, i64 %278
  %282 = bitcast i16* %280 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !22
  %284 = getelementptr i16, i16* %280, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !22
  %287 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !25, !noalias !22
  %288 = getelementptr i16, i16* %281, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !25, !noalias !22
  %290 = or i64 %278, 16
  %291 = getelementptr i16, i16* %235, i64 %290
  %292 = getelementptr i16, i16* %256, i64 %290
  %293 = bitcast i16* %291 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !22
  %295 = getelementptr i16, i16* %291, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  %297 = load <8 x i16>, <8 x i16>* %296, align 2, !alias.scope !22
  %298 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %298, align 2, !alias.scope !25, !noalias !22
  %299 = getelementptr i16, i16* %292, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  store <8 x i16> %297, <8 x i16>* %300, align 2, !alias.scope !25, !noalias !22
  %301 = or i64 %278, 32
  %302 = getelementptr i16, i16* %235, i64 %301
  %303 = getelementptr i16, i16* %256, i64 %301
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !22
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !22
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !25, !noalias !22
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !25, !noalias !22
  %312 = or i64 %278, 48
  %313 = getelementptr i16, i16* %235, i64 %312
  %314 = getelementptr i16, i16* %256, i64 %312
  %315 = bitcast i16* %313 to <8 x i16>*
  %316 = load <8 x i16>, <8 x i16>* %315, align 2, !alias.scope !22
  %317 = getelementptr i16, i16* %313, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !22
  %320 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %316, <8 x i16>* %320, align 2, !alias.scope !25, !noalias !22
  %321 = getelementptr i16, i16* %314, i64 8
  %322 = bitcast i16* %321 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %322, align 2, !alias.scope !25, !noalias !22
  %323 = add i64 %278, 64
  %324 = add i64 %279, -4
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %277, !llvm.loop !27

326:                                              ; preds = %277, %265
  %327 = phi i64 [ 0, %265 ], [ %323, %277 ]
  %328 = icmp eq i64 %273, 0
  br i1 %328, label %345, label %329

329:                                              ; preds = %326, %329
  %330 = phi i64 [ %342, %329 ], [ %327, %326 ]
  %331 = phi i64 [ %343, %329 ], [ %273, %326 ]
  %332 = getelementptr i16, i16* %235, i64 %330
  %333 = getelementptr i16, i16* %256, i64 %330
  %334 = bitcast i16* %332 to <8 x i16>*
  %335 = load <8 x i16>, <8 x i16>* %334, align 2, !alias.scope !22
  %336 = getelementptr i16, i16* %332, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  %338 = load <8 x i16>, <8 x i16>* %337, align 2, !alias.scope !22
  %339 = bitcast i16* %333 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %339, align 2, !alias.scope !25, !noalias !22
  %340 = getelementptr i16, i16* %333, i64 8
  %341 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %338, <8 x i16>* %341, align 2, !alias.scope !25, !noalias !22
  %342 = add i64 %330, 16
  %343 = add i64 %331, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %329, !llvm.loop !28

345:                                              ; preds = %329, %326
  %346 = icmp eq i64 %236, %266
  br i1 %346, label %400, label %347

347:                                              ; preds = %345, %258, %253
  %348 = phi i64 [ %236, %258 ], [ %236, %253 ], [ %267, %345 ]
  %349 = phi i16* [ %235, %258 ], [ %235, %253 ], [ %268, %345 ]
  %350 = phi i16* [ %256, %258 ], [ %256, %253 ], [ %269, %345 ]
  %351 = add i64 %348, -1
  %352 = and i64 %348, 7
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %365, label %354

354:                                              ; preds = %347, %354
  %355 = phi i64 [ %360, %354 ], [ %348, %347 ]
  %356 = phi i16* [ %362, %354 ], [ %349, %347 ]
  %357 = phi i16* [ %361, %354 ], [ %350, %347 ]
  %358 = phi i64 [ %363, %354 ], [ %352, %347 ]
  %359 = load i16, i16* %356, align 2
  store i16 %359, i16* %357, align 2
  %360 = add i64 %355, -1
  %361 = getelementptr inbounds i16, i16* %357, i64 1
  %362 = getelementptr inbounds i16, i16* %356, i64 1
  %363 = add i64 %358, -1
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %365, label %354, !llvm.loop !29

365:                                              ; preds = %354, %347
  %366 = phi i64 [ %348, %347 ], [ %360, %354 ]
  %367 = phi i16* [ %349, %347 ], [ %362, %354 ]
  %368 = phi i16* [ %350, %347 ], [ %361, %354 ]
  %369 = icmp ult i64 %351, 7
  br i1 %369, label %400, label %370

370:                                              ; preds = %365, %370
  %371 = phi i64 [ %396, %370 ], [ %366, %365 ]
  %372 = phi i16* [ %398, %370 ], [ %367, %365 ]
  %373 = phi i16* [ %397, %370 ], [ %368, %365 ]
  %374 = load i16, i16* %372, align 2
  store i16 %374, i16* %373, align 2
  %375 = getelementptr inbounds i16, i16* %373, i64 1
  %376 = getelementptr inbounds i16, i16* %372, i64 1
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %373, i64 2
  %379 = getelementptr inbounds i16, i16* %372, i64 2
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %373, i64 3
  %382 = getelementptr inbounds i16, i16* %372, i64 3
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %373, i64 4
  %385 = getelementptr inbounds i16, i16* %372, i64 4
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = getelementptr inbounds i16, i16* %373, i64 5
  %388 = getelementptr inbounds i16, i16* %372, i64 5
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = getelementptr inbounds i16, i16* %373, i64 6
  %391 = getelementptr inbounds i16, i16* %372, i64 6
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %390, align 2
  %393 = getelementptr inbounds i16, i16* %373, i64 7
  %394 = getelementptr inbounds i16, i16* %372, i64 7
  %395 = load i16, i16* %394, align 2
  store i16 %395, i16* %393, align 2
  %396 = add i64 %371, -8
  %397 = getelementptr inbounds i16, i16* %373, i64 8
  %398 = getelementptr inbounds i16, i16* %372, i64 8
  %399 = icmp eq i64 %396, 0
  br i1 %399, label %400, label %370, !llvm.loop !30

400:                                              ; preds = %365, %370, %345
  %401 = add i64 %248, %236
  %402 = load i8, i8* %28, align 1
  %403 = icmp slt i8 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %400
  store i64 %401, i64* %5, align 8
  br label %407

405:                                              ; preds = %400
  %406 = trunc i64 %401 to i8
  store i8 %406, i8* %28, align 1
  br label %407

407:                                              ; preds = %405, %404
  %408 = getelementptr inbounds i16, i16* %255, i64 %401
  store i16 0, i16* %408, align 2
  br label %412

409:                                              ; preds = %246
  %410 = add i64 %248, %236
  %411 = sub i64 %410, %247
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %247, i64 %411, i64 %248, i64 %248, i64 0, i64 %236, i16* %235) #12
  br label %412

412:                                              ; preds = %251, %407, %409
  %413 = load i8, i8* %25, align 1
  %414 = icmp slt i8 %413, 0
  %415 = load i16*, i16** %12, align 8
  %416 = load i64, i64* %13, align 8
  %417 = zext i8 %413 to i64
  %418 = select i1 %414, i16* %415, i16* %26
  %419 = select i1 %414, i64 %416, i64 %417
  %420 = load i8, i8* %28, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %427

422:                                              ; preds = %412
  %423 = load i64, i64* %6, align 8
  %424 = and i64 %423, 9223372036854775807
  %425 = add nsw i64 %424, -1
  %426 = load i64, i64* %5, align 8
  br label %429

427:                                              ; preds = %412
  %428 = zext i8 %420 to i64
  br label %429

429:                                              ; preds = %427, %422
  %430 = phi i64 [ %425, %422 ], [ 10, %427 ]
  %431 = phi i64 [ %426, %422 ], [ %428, %427 ]
  %432 = sub i64 %430, %431
  %433 = icmp ult i64 %432, %419
  br i1 %433, label %592, label %434

434:                                              ; preds = %429
  %435 = icmp eq i64 %419, 0
  br i1 %435, label %595, label %436

436:                                              ; preds = %434
  %437 = load i16*, i16** %4, align 8
  %438 = select i1 %421, i16* %437, i16* %29
  %439 = getelementptr inbounds i16, i16* %438, i64 %431
  %440 = icmp ult i64 %419, 16
  br i1 %440, label %530, label %441

441:                                              ; preds = %436
  %442 = add i64 %419, %431
  %443 = getelementptr i16, i16* %438, i64 %442
  %444 = getelementptr i16, i16* %418, i64 %419
  %445 = icmp ult i16* %439, %444
  %446 = icmp ult i16* %418, %443
  %447 = and i1 %445, %446
  br i1 %447, label %530, label %448

448:                                              ; preds = %441
  %449 = and i64 %419, -16
  %450 = sub i64 %419, %449
  %451 = getelementptr i16, i16* %418, i64 %449
  %452 = getelementptr i16, i16* %439, i64 %449
  %453 = add i64 %449, -16
  %454 = lshr exact i64 %453, 4
  %455 = add nuw nsw i64 %454, 1
  %456 = and i64 %455, 3
  %457 = icmp ult i64 %453, 48
  br i1 %457, label %509, label %458

458:                                              ; preds = %448
  %459 = sub nsw i64 %455, %456
  br label %460

460:                                              ; preds = %460, %458
  %461 = phi i64 [ 0, %458 ], [ %506, %460 ]
  %462 = phi i64 [ %459, %458 ], [ %507, %460 ]
  %463 = getelementptr i16, i16* %418, i64 %461
  %464 = getelementptr i16, i16* %439, i64 %461
  %465 = bitcast i16* %463 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !31
  %467 = getelementptr i16, i16* %463, i64 8
  %468 = bitcast i16* %467 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !31
  %470 = bitcast i16* %464 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %470, align 2, !alias.scope !34, !noalias !31
  %471 = getelementptr i16, i16* %464, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %472, align 2, !alias.scope !34, !noalias !31
  %473 = or i64 %461, 16
  %474 = getelementptr i16, i16* %418, i64 %473
  %475 = getelementptr i16, i16* %439, i64 %473
  %476 = bitcast i16* %474 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !31
  %478 = getelementptr i16, i16* %474, i64 8
  %479 = bitcast i16* %478 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !31
  %481 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %481, align 2, !alias.scope !34, !noalias !31
  %482 = getelementptr i16, i16* %475, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %483, align 2, !alias.scope !34, !noalias !31
  %484 = or i64 %461, 32
  %485 = getelementptr i16, i16* %418, i64 %484
  %486 = getelementptr i16, i16* %439, i64 %484
  %487 = bitcast i16* %485 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !31
  %489 = getelementptr i16, i16* %485, i64 8
  %490 = bitcast i16* %489 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !31
  %492 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %488, <8 x i16>* %492, align 2, !alias.scope !34, !noalias !31
  %493 = getelementptr i16, i16* %486, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %494, align 2, !alias.scope !34, !noalias !31
  %495 = or i64 %461, 48
  %496 = getelementptr i16, i16* %418, i64 %495
  %497 = getelementptr i16, i16* %439, i64 %495
  %498 = bitcast i16* %496 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 2, !alias.scope !31
  %500 = getelementptr i16, i16* %496, i64 8
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !31
  %503 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %499, <8 x i16>* %503, align 2, !alias.scope !34, !noalias !31
  %504 = getelementptr i16, i16* %497, i64 8
  %505 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %505, align 2, !alias.scope !34, !noalias !31
  %506 = add i64 %461, 64
  %507 = add i64 %462, -4
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %509, label %460, !llvm.loop !36

509:                                              ; preds = %460, %448
  %510 = phi i64 [ 0, %448 ], [ %506, %460 ]
  %511 = icmp eq i64 %456, 0
  br i1 %511, label %528, label %512

512:                                              ; preds = %509, %512
  %513 = phi i64 [ %525, %512 ], [ %510, %509 ]
  %514 = phi i64 [ %526, %512 ], [ %456, %509 ]
  %515 = getelementptr i16, i16* %418, i64 %513
  %516 = getelementptr i16, i16* %439, i64 %513
  %517 = bitcast i16* %515 to <8 x i16>*
  %518 = load <8 x i16>, <8 x i16>* %517, align 2, !alias.scope !31
  %519 = getelementptr i16, i16* %515, i64 8
  %520 = bitcast i16* %519 to <8 x i16>*
  %521 = load <8 x i16>, <8 x i16>* %520, align 2, !alias.scope !31
  %522 = bitcast i16* %516 to <8 x i16>*
  store <8 x i16> %518, <8 x i16>* %522, align 2, !alias.scope !34, !noalias !31
  %523 = getelementptr i16, i16* %516, i64 8
  %524 = bitcast i16* %523 to <8 x i16>*
  store <8 x i16> %521, <8 x i16>* %524, align 2, !alias.scope !34, !noalias !31
  %525 = add i64 %513, 16
  %526 = add i64 %514, -1
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %528, label %512, !llvm.loop !37

528:                                              ; preds = %512, %509
  %529 = icmp eq i64 %419, %449
  br i1 %529, label %583, label %530

530:                                              ; preds = %528, %441, %436
  %531 = phi i64 [ %419, %441 ], [ %419, %436 ], [ %450, %528 ]
  %532 = phi i16* [ %418, %441 ], [ %418, %436 ], [ %451, %528 ]
  %533 = phi i16* [ %439, %441 ], [ %439, %436 ], [ %452, %528 ]
  %534 = add i64 %531, -1
  %535 = and i64 %531, 7
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %548, label %537

537:                                              ; preds = %530, %537
  %538 = phi i64 [ %543, %537 ], [ %531, %530 ]
  %539 = phi i16* [ %545, %537 ], [ %532, %530 ]
  %540 = phi i16* [ %544, %537 ], [ %533, %530 ]
  %541 = phi i64 [ %546, %537 ], [ %535, %530 ]
  %542 = load i16, i16* %539, align 2
  store i16 %542, i16* %540, align 2
  %543 = add i64 %538, -1
  %544 = getelementptr inbounds i16, i16* %540, i64 1
  %545 = getelementptr inbounds i16, i16* %539, i64 1
  %546 = add i64 %541, -1
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %548, label %537, !llvm.loop !38

548:                                              ; preds = %537, %530
  %549 = phi i64 [ %531, %530 ], [ %543, %537 ]
  %550 = phi i16* [ %532, %530 ], [ %545, %537 ]
  %551 = phi i16* [ %533, %530 ], [ %544, %537 ]
  %552 = icmp ult i64 %534, 7
  br i1 %552, label %583, label %553

553:                                              ; preds = %548, %553
  %554 = phi i64 [ %579, %553 ], [ %549, %548 ]
  %555 = phi i16* [ %581, %553 ], [ %550, %548 ]
  %556 = phi i16* [ %580, %553 ], [ %551, %548 ]
  %557 = load i16, i16* %555, align 2
  store i16 %557, i16* %556, align 2
  %558 = getelementptr inbounds i16, i16* %556, i64 1
  %559 = getelementptr inbounds i16, i16* %555, i64 1
  %560 = load i16, i16* %559, align 2
  store i16 %560, i16* %558, align 2
  %561 = getelementptr inbounds i16, i16* %556, i64 2
  %562 = getelementptr inbounds i16, i16* %555, i64 2
  %563 = load i16, i16* %562, align 2
  store i16 %563, i16* %561, align 2
  %564 = getelementptr inbounds i16, i16* %556, i64 3
  %565 = getelementptr inbounds i16, i16* %555, i64 3
  %566 = load i16, i16* %565, align 2
  store i16 %566, i16* %564, align 2
  %567 = getelementptr inbounds i16, i16* %556, i64 4
  %568 = getelementptr inbounds i16, i16* %555, i64 4
  %569 = load i16, i16* %568, align 2
  store i16 %569, i16* %567, align 2
  %570 = getelementptr inbounds i16, i16* %556, i64 5
  %571 = getelementptr inbounds i16, i16* %555, i64 5
  %572 = load i16, i16* %571, align 2
  store i16 %572, i16* %570, align 2
  %573 = getelementptr inbounds i16, i16* %556, i64 6
  %574 = getelementptr inbounds i16, i16* %555, i64 6
  %575 = load i16, i16* %574, align 2
  store i16 %575, i16* %573, align 2
  %576 = getelementptr inbounds i16, i16* %556, i64 7
  %577 = getelementptr inbounds i16, i16* %555, i64 7
  %578 = load i16, i16* %577, align 2
  store i16 %578, i16* %576, align 2
  %579 = add i64 %554, -8
  %580 = getelementptr inbounds i16, i16* %556, i64 8
  %581 = getelementptr inbounds i16, i16* %555, i64 8
  %582 = icmp eq i64 %579, 0
  br i1 %582, label %583, label %553, !llvm.loop !39

583:                                              ; preds = %548, %553, %528
  %584 = add i64 %431, %419
  %585 = load i8, i8* %28, align 1
  %586 = icmp slt i8 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %583
  store i64 %584, i64* %5, align 8
  br label %590

588:                                              ; preds = %583
  %589 = trunc i64 %584 to i8
  store i8 %589, i8* %28, align 1
  br label %590

590:                                              ; preds = %588, %587
  %591 = getelementptr inbounds i16, i16* %438, i64 %584
  store i16 0, i16* %591, align 2
  br label %595

592:                                              ; preds = %429
  %593 = add i64 %431, %419
  %594 = sub i64 %593, %430
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %430, i64 %594, i64 %431, i64 %431, i64 0, i64 %419, i16* %418) #12
  br label %595

595:                                              ; preds = %434, %590, %592
  %596 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 1, i32 0
  %597 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %596, align 8
  %598 = icmp eq %"class.std::__1::__tree_node_base"* %597, null
  br i1 %598, label %599, label %607

599:                                              ; preds = %595
  %600 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node_base"*
  %601 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 2
  %602 = bitcast %"class.std::__1::__tree_end_node"* %601 to %"class.std::__1::__tree_end_node"**
  %603 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %602, align 8
  %604 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %603, i64 0, i32 0
  %605 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %604, align 8
  %606 = icmp eq %"class.std::__1::__tree_node_base"* %605, %600
  br i1 %606, label %623, label %614

607:                                              ; preds = %595, %607
  %608 = phi %"class.std::__1::__tree_node_base"* [ %610, %607 ], [ %597, %595 ]
  %609 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %608, i64 0, i32 0, i32 0
  %610 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %609, align 8
  %611 = icmp eq %"class.std::__1::__tree_node_base"* %610, null
  br i1 %611, label %612, label %607

612:                                              ; preds = %607
  %613 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %608, i64 0, i32 0
  br label %623

614:                                              ; preds = %599, %614
  %615 = phi %"class.std::__1::__tree_end_node"** [ %618, %614 ], [ %602, %599 ]
  %616 = bitcast %"class.std::__1::__tree_end_node"** %615 to %"class.std::__1::__tree_node_base"**
  %617 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %616, align 8
  %618 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %617, i64 0, i32 2
  %619 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %618, align 8
  %620 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %619, i64 0, i32 0
  %621 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %620, align 8
  %622 = icmp eq %"class.std::__1::__tree_node_base"* %621, %617
  br i1 %622, label %623, label %614

623:                                              ; preds = %614, %599, %612
  %624 = phi %"class.std::__1::__tree_end_node"* [ %613, %612 ], [ %603, %599 ], [ %619, %614 ]
  %625 = icmp eq %"class.std::__1::__tree_end_node"* %624, %21
  br i1 %625, label %30, label %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 9223372036854775791
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %5) #13
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %6
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp ugt i64 %17, %1
  %19 = select i1 %18, i64 %17, i64 %1
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = add i64 %19, 8
  %23 = and i64 %22, -8
  %24 = add i64 %23, -1
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i64 [ %24, %21 ], [ 10, %16 ]
  br i1 %10, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 9223372036854775807
  %31 = add nsw i64 %30, -1
  br label %32

32:                                               ; preds = %25, %27
  %33 = phi i64 [ %31, %27 ], [ 10, %25 ]
  %34 = icmp eq i64 %26, %33
  br i1 %34, label %236, label %35

35:                                               ; preds = %32
  br i1 %10, label %36, label %39

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %35
  %40 = zext i8 %9 to i64
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp eq i64 %26, 10
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = add i64 %26, 1
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %44
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i16*
  br i1 %10, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  br label %61

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %67

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  br i1 %10, label %61, label %67

61:                                               ; preds = %57, %52
  %62 = phi i1 [ true, %52 ], [ false, %57 ]
  %63 = phi i16* [ %54, %52 ], [ %60, %57 ]
  %64 = phi i16* [ %51, %52 ], [ %58, %57 ]
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %73

67:                                               ; preds = %57, %55
  %68 = phi i1 [ true, %55 ], [ false, %57 ]
  %69 = phi i1 [ false, %55 ], [ true, %57 ]
  %70 = phi i16* [ %56, %55 ], [ %60, %57 ]
  %71 = phi i16* [ %51, %55 ], [ %58, %57 ]
  %72 = zext i8 %9 to i64
  br label %73

73:                                               ; preds = %67, %61
  %74 = phi i1 [ %62, %61 ], [ %68, %67 ]
  %75 = phi i1 [ true, %61 ], [ %69, %67 ]
  %76 = phi i16* [ %63, %61 ], [ %70, %67 ]
  %77 = phi i16* [ %64, %61 ], [ %71, %67 ]
  %78 = phi i64 [ %66, %61 ], [ %72, %67 ]
  %79 = bitcast i16* %76 to i8*
  %80 = add i64 %78, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %225, label %82

82:                                               ; preds = %73
  %83 = icmp ult i64 %80, 16
  br i1 %83, label %172, label %84

84:                                               ; preds = %82
  %85 = getelementptr i16, i16* %77, i64 %80
  %86 = getelementptr i16, i16* %76, i64 %80
  %87 = icmp ult i16* %77, %86
  %88 = icmp ult i16* %76, %85
  %89 = and i1 %87, %88
  br i1 %89, label %172, label %90

90:                                               ; preds = %84
  %91 = and i64 %80, -16
  %92 = sub i64 %80, %91
  %93 = getelementptr i16, i16* %76, i64 %91
  %94 = getelementptr i16, i16* %77, i64 %91
  %95 = add i64 %91, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %151, label %100

100:                                              ; preds = %90
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %148, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %149, %102 ]
  %105 = getelementptr i16, i16* %76, i64 %103
  %106 = getelementptr i16, i16* %77, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !40
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !40
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !43, !noalias !40
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !43, !noalias !40
  %115 = or i64 %103, 16
  %116 = getelementptr i16, i16* %76, i64 %115
  %117 = getelementptr i16, i16* %77, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !40
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !40
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !43, !noalias !40
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !43, !noalias !40
  %126 = or i64 %103, 32
  %127 = getelementptr i16, i16* %76, i64 %126
  %128 = getelementptr i16, i16* %77, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !40
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !40
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !43, !noalias !40
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !43, !noalias !40
  %137 = or i64 %103, 48
  %138 = getelementptr i16, i16* %76, i64 %137
  %139 = getelementptr i16, i16* %77, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !40
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !40
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !43, !noalias !40
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !43, !noalias !40
  %148 = add i64 %103, 64
  %149 = add i64 %104, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %102, !llvm.loop !45

151:                                              ; preds = %102, %90
  %152 = phi i64 [ 0, %90 ], [ %148, %102 ]
  %153 = icmp eq i64 %98, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %167, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %168, %154 ], [ %98, %151 ]
  %157 = getelementptr i16, i16* %76, i64 %155
  %158 = getelementptr i16, i16* %77, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !40
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !40
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !43, !noalias !40
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !43, !noalias !40
  %167 = add i64 %155, 16
  %168 = add i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %154, !llvm.loop !46

170:                                              ; preds = %154, %151
  %171 = icmp eq i64 %80, %91
  br i1 %171, label %225, label %172

172:                                              ; preds = %170, %84, %82
  %173 = phi i64 [ %80, %84 ], [ %80, %82 ], [ %92, %170 ]
  %174 = phi i16* [ %76, %84 ], [ %76, %82 ], [ %93, %170 ]
  %175 = phi i16* [ %77, %84 ], [ %77, %82 ], [ %94, %170 ]
  %176 = add i64 %173, -1
  %177 = and i64 %173, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %172, %179
  %180 = phi i64 [ %185, %179 ], [ %173, %172 ]
  %181 = phi i16* [ %187, %179 ], [ %174, %172 ]
  %182 = phi i16* [ %186, %179 ], [ %175, %172 ]
  %183 = phi i64 [ %188, %179 ], [ %177, %172 ]
  %184 = load i16, i16* %181, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %180, -1
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = getelementptr inbounds i16, i16* %181, i64 1
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !47

190:                                              ; preds = %179, %172
  %191 = phi i64 [ %173, %172 ], [ %185, %179 ]
  %192 = phi i16* [ %174, %172 ], [ %187, %179 ]
  %193 = phi i16* [ %175, %172 ], [ %186, %179 ]
  %194 = icmp ult i64 %176, 7
  br i1 %194, label %225, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %221, %195 ], [ %191, %190 ]
  %197 = phi i16* [ %223, %195 ], [ %192, %190 ]
  %198 = phi i16* [ %222, %195 ], [ %193, %190 ]
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %198, i64 1
  %201 = getelementptr inbounds i16, i16* %197, i64 1
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %198, i64 2
  %204 = getelementptr inbounds i16, i16* %197, i64 2
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %198, i64 3
  %207 = getelementptr inbounds i16, i16* %197, i64 3
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %198, i64 4
  %210 = getelementptr inbounds i16, i16* %197, i64 4
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %198, i64 5
  %213 = getelementptr inbounds i16, i16* %197, i64 5
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %198, i64 6
  %216 = getelementptr inbounds i16, i16* %197, i64 6
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %198, i64 7
  %219 = getelementptr inbounds i16, i16* %197, i64 7
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %196, -8
  %222 = getelementptr inbounds i16, i16* %198, i64 8
  %223 = getelementptr inbounds i16, i16* %197, i64 8
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %195, !llvm.loop !48

225:                                              ; preds = %190, %195, %170, %73
  br i1 %75, label %226, label %227

226:                                              ; preds = %225
  tail call void @_ZdlPv(i8* %79) #14
  br label %227

227:                                              ; preds = %226, %225
  br i1 %74, label %228, label %234

228:                                              ; preds = %227
  %229 = add i64 %26, 1
  %230 = or i64 %229, -9223372036854775808
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %77, i16** %233, align 8
  br label %236

234:                                              ; preds = %227
  %235 = trunc i64 %42 to i8
  store i8 %235, i8* %8, align 1
  br label %236

236:                                              ; preds = %234, %228, %32
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImplC2EPKN4base9TickClockE(%"class.device::PositionCacheImpl"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device13PositionCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net21NetworkChangeNotifier21NetworkChangeObserverC2Ev(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"* %4) #12
  %5 = bitcast %"class.device::PositionCacheImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN6device17PositionCacheImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN6device17PositionCacheImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 2
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %6, align 8
  %7 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4
  tail call void @_ZN6device5mojom11GeopositionC1Ev(%"class.device::mojom::Geoposition"* %9) #12
  tail call void @_ZN3net21NetworkChangeNotifier24AddNetworkChangeObserverEPNS0_21NetworkChangeObserverE(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"* %4) #12
  ret void
}

declare void @_ZN3net21NetworkChangeNotifier21NetworkChangeObserverC2Ev(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"*) unnamed_addr #3

declare void @_ZN6device5mojom11GeopositionC1Ev(%"class.device::mojom::Geoposition"*) unnamed_addr #3

declare void @_ZN3net21NetworkChangeNotifier24AddNetworkChangeObserverEPNS0_21NetworkChangeObserverE(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImplD2Ev(%"class.device::PositionCacheImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 1
  %3 = bitcast %"class.device::PositionCacheImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN6device17PositionCacheImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN6device17PositionCacheImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  tail call void @_ZN3net21NetworkChangeNotifier27RemoveNetworkChangeObserverEPNS0_21NetworkChangeObserverE(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"* %2) #12
  %4 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4
  tail call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %4) #12
  %5 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %6, align 8
  %8 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %7, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %7 to i8*
  %11 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %11, align 8
  %13 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %12, %7
  br i1 %13, label %39, label %14

14:                                               ; preds = %9, %34
  %15 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %16, %34 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %15, i64 -1
  %17 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %15, i64 -1, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %17, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %17, align 8
  %19 = icmp eq %"class.base::OneShotTimer"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.base::OneShotTimer"* %18 to void (%"class.base::OneShotTimer"*)***
  %22 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %22, i64 1
  %24 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %23, align 8
  tail call void %24(%"class.base::OneShotTimer"* nonnull %18) #12
  br label %25

25:                                               ; preds = %20, %14
  %26 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %15, i64 -1, i32 1
  tail call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %26) #12
  %27 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %16 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %31, %25
  %35 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %16, %7
  br i1 %35, label %36, label %14

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector"* %5 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %9
  %40 = phi i8* [ %38, %36 ], [ %10, %9 ]
  store %"class.device::PositionCacheImpl::CacheEntry"* %7, %"class.device::PositionCacheImpl::CacheEntry"** %11, align 8
  tail call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %1, %39
  tail call void @_ZN3net21NetworkChangeNotifier21NetworkChangeObserverD2Ev(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"* %2) #12
  ret void
}

declare void @_ZN3net21NetworkChangeNotifier27RemoveNetworkChangeObserverEPNS0_21NetworkChangeObserverE(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net21NetworkChangeNotifier21NetworkChangeObserverD2Ev(%"class.net::NetworkChangeNotifier::NetworkChangeObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6device17PositionCacheImplD1Ev(%"class.device::PositionCacheImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 -1, i32 4, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast i64* %2 to %"class.device::PositionCacheImpl"*
  tail call void @_ZN6device17PositionCacheImplD2Ev(%"class.device::PositionCacheImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImplD0Ev(%"class.device::PositionCacheImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6device17PositionCacheImplD2Ev(%"class.device::PositionCacheImpl"* %0) #12
  %2 = bitcast %"class.device::PositionCacheImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6device17PositionCacheImplD0Ev(%"class.device::PositionCacheImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 -1, i32 4, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast i64* %2 to %"class.device::PositionCacheImpl"*
  tail call void @_ZN6device17PositionCacheImplD2Ev(%"class.device::PositionCacheImpl"* %3) #12
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl13CachePositionERKNS_8WifiDataERKNS_5mojom11GeopositionE(%"class.device::PositionCacheImpl"*, %"struct.device::WifiData"* dereferenceable(24), %"class.device::mojom::Geoposition"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN6device17PositionCacheImpl7MakeKeyERKNS_8WifiDataE(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.device::WifiData"* dereferenceable(24) %1)
  %12 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = bitcast %"class.device::PositionCacheImpl::CacheEntry"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp eq i64 %18, 1360
  %20 = inttoptr i64 %17 to %"class.device::PositionCacheImpl::CacheEntry"*
  %21 = inttoptr i64 %15 to %"class.device::PositionCacheImpl::CacheEntry"*
  br i1 %19, label %22, label %62

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %20, i64 1
  %24 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %23, %21
  br i1 %24, label %35, label %25

25:                                               ; preds = %22, %25
  %26 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %30, %25 ], [ %20, %22 ]
  %27 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %29, %25 ], [ %23, %22 ]
  %28 = call dereferenceable(136) %"class.device::PositionCacheImpl::CacheEntry"* @_ZN6device17PositionCacheImpl10CacheEntryaSEOS1_(%"class.device::PositionCacheImpl::CacheEntry"* %26, %"class.device::PositionCacheImpl::CacheEntry"* dereferenceable(136) %27) #12
  %29 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %27, i64 1
  %30 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %26, i64 1
  %31 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %29, %21
  br i1 %31, label %32, label %25

32:                                               ; preds = %25
  %33 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %13, align 8
  %34 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %33, %30
  br i1 %34, label %60, label %35

35:                                               ; preds = %32, %22
  %36 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %30, %32 ], [ %20, %22 ]
  %37 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %33, %32 ], [ %21, %22 ]
  br label %38

38:                                               ; preds = %58, %35
  %39 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %40, %58 ], [ %37, %35 ]
  %40 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %39, i64 -1
  %41 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %39, i64 -1, i32 2, i32 0, i32 0, i32 0
  %42 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %41, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %41, align 8
  %43 = icmp eq %"class.base::OneShotTimer"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.base::OneShotTimer"* %42 to void (%"class.base::OneShotTimer"*)***
  %46 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %46, i64 1
  %48 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %47, align 8
  call void %48(%"class.base::OneShotTimer"* nonnull %42) #12
  br label %49

49:                                               ; preds = %44, %38
  %50 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %39, i64 -1, i32 1
  call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %50) #12
  %51 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %40 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %40 to i8**
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %55, %49
  %59 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %40, %36
  br i1 %59, label %60, label %38

60:                                               ; preds = %58, %32
  %61 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %30, %32 ], [ %36, %58 ]
  store %"class.device::PositionCacheImpl::CacheEntry"* %61, %"class.device::PositionCacheImpl::CacheEntry"** %13, align 8
  br label %62

62:                                               ; preds = %60, %3
  %63 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 2
  %66 = call i8* @_Znwm(i64 128) #14
  %67 = bitcast i8* %66 to %"class.base::OneShotTimer"*
  %68 = load %"class.base::TickClock"*, %"class.base::TickClock"** %65, align 8
  call void @_ZN4base12OneShotTimerC1EPKNS_9TickClockE(%"class.base::OneShotTimer"* nonnull %67, %"class.base::TickClock"* %68) #12
  %69 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %66, i8** %69, align 8
  %70 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i64 0, i64 0), i32 70) #12
  %71 = ptrtoint %"class.device::PositionCacheImpl"* %0 to i64
  %72 = call i8* @_Znwm(i64 80) #14, !noalias !49
  %73 = bitcast i8* %72 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %73, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EESA_EE7DestroyEPKNS0_13BindStateBaseE) #12
  %74 = getelementptr inbounds i8, i8* %72, i64 32
  %75 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.device::PositionCacheImpl"*, %"class.std::__1::basic_string"*)* @_ZN6device17PositionCacheImpl10EvictEntryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i64), i64 0>, <2 x i64>* %75, align 8
  %76 = getelementptr inbounds i8, i8* %72, i64 48
  %77 = bitcast i8* %76 to i64*
  store i64 %71, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %72, i64 56
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %8, i64 24, i1 false) #12
  br label %261

84:                                               ; preds = %62
  %85 = load i16*, i16** %9, align 8
  %86 = bitcast i16* %85 to i8*
  %87 = load i64, i64* %10, align 8
  %88 = icmp ult i64 %87, 11
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = trunc i64 %87 to i8
  %91 = getelementptr inbounds i8, i8* %72, i64 79
  store i8 %90, i8* %91, align 1
  br label %110

92:                                               ; preds = %84
  %93 = icmp ugt i64 %87, 9223372036854775791
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast i8* %78 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %95) #13
  unreachable

96:                                               ; preds = %92
  %97 = add nuw nsw i64 %87, 8
  %98 = and i64 %97, -8
  %99 = icmp slt i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  call void @abort() #13
  unreachable

101:                                              ; preds = %96
  %102 = shl i64 %98, 1
  %103 = call i8* @_Znwm(i64 %102) #14
  %104 = bitcast i8* %78 to i8**
  store i8* %103, i8** %104, align 8
  %105 = or i64 %98, -9223372036854775808
  %106 = getelementptr inbounds i8, i8* %72, i64 72
  %107 = bitcast i8* %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %72, i64 64
  %109 = bitcast i8* %108 to i64*
  store i64 %87, i64* %109, align 8
  br label %110

110:                                              ; preds = %101, %89
  %111 = phi i8* [ %78, %89 ], [ %103, %101 ]
  %112 = bitcast i8* %111 to i16*
  %113 = add nuw nsw i64 %87, 1
  %114 = add i64 %87, 1
  %115 = icmp ult i64 %114, 16
  br i1 %115, label %208, label %116

116:                                              ; preds = %110
  %117 = shl i64 %87, 1
  %118 = add i64 %117, 2
  %119 = getelementptr i8, i8* %111, i64 %118
  %120 = add i64 %87, 1
  %121 = getelementptr i16, i16* %85, i64 %120
  %122 = bitcast i16* %121 to i8*
  %123 = icmp ult i8* %111, %122
  %124 = icmp ugt i8* %119, %86
  %125 = and i1 %123, %124
  br i1 %125, label %208, label %126

126:                                              ; preds = %116
  %127 = and i64 %114, -16
  %128 = sub i64 %113, %127
  %129 = getelementptr i16, i16* %85, i64 %127
  %130 = getelementptr i16, i16* %112, i64 %127
  %131 = add i64 %127, -16
  %132 = lshr exact i64 %131, 4
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 3
  %135 = icmp ult i64 %131, 48
  br i1 %135, label %187, label %136

136:                                              ; preds = %126
  %137 = sub nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %184, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %185, %138 ]
  %141 = getelementptr i16, i16* %85, i64 %139
  %142 = getelementptr i16, i16* %112, i64 %139
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !54
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !54
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !57, !noalias !54
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !57, !noalias !54
  %151 = or i64 %139, 16
  %152 = getelementptr i16, i16* %85, i64 %151
  %153 = getelementptr i16, i16* %112, i64 %151
  %154 = bitcast i16* %152 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !54
  %156 = getelementptr i16, i16* %152, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !54
  %159 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %159, align 2, !alias.scope !57, !noalias !54
  %160 = getelementptr i16, i16* %153, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %161, align 2, !alias.scope !57, !noalias !54
  %162 = or i64 %139, 32
  %163 = getelementptr i16, i16* %85, i64 %162
  %164 = getelementptr i16, i16* %112, i64 %162
  %165 = bitcast i16* %163 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !54
  %167 = getelementptr i16, i16* %163, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !54
  %170 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %170, align 2, !alias.scope !57, !noalias !54
  %171 = getelementptr i16, i16* %164, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %172, align 2, !alias.scope !57, !noalias !54
  %173 = or i64 %139, 48
  %174 = getelementptr i16, i16* %85, i64 %173
  %175 = getelementptr i16, i16* %112, i64 %173
  %176 = bitcast i16* %174 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !54
  %178 = getelementptr i16, i16* %174, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !54
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %181, align 2, !alias.scope !57, !noalias !54
  %182 = getelementptr i16, i16* %175, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %183, align 2, !alias.scope !57, !noalias !54
  %184 = add i64 %139, 64
  %185 = add i64 %140, -4
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %138, !llvm.loop !59

187:                                              ; preds = %138, %126
  %188 = phi i64 [ 0, %126 ], [ %184, %138 ]
  %189 = icmp eq i64 %134, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %187, %190
  %191 = phi i64 [ %203, %190 ], [ %188, %187 ]
  %192 = phi i64 [ %204, %190 ], [ %134, %187 ]
  %193 = getelementptr i16, i16* %85, i64 %191
  %194 = getelementptr i16, i16* %112, i64 %191
  %195 = bitcast i16* %193 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !54
  %197 = getelementptr i16, i16* %193, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !54
  %200 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %200, align 2, !alias.scope !57, !noalias !54
  %201 = getelementptr i16, i16* %194, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %202, align 2, !alias.scope !57, !noalias !54
  %203 = add i64 %191, 16
  %204 = add i64 %192, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !60

206:                                              ; preds = %190, %187
  %207 = icmp eq i64 %114, %127
  br i1 %207, label %261, label %208

208:                                              ; preds = %206, %116, %110
  %209 = phi i64 [ %113, %116 ], [ %113, %110 ], [ %128, %206 ]
  %210 = phi i16* [ %85, %116 ], [ %85, %110 ], [ %129, %206 ]
  %211 = phi i16* [ %112, %116 ], [ %112, %110 ], [ %130, %206 ]
  %212 = add i64 %209, -1
  %213 = and i64 %209, 7
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %226, label %215

215:                                              ; preds = %208, %215
  %216 = phi i64 [ %221, %215 ], [ %209, %208 ]
  %217 = phi i16* [ %223, %215 ], [ %210, %208 ]
  %218 = phi i16* [ %222, %215 ], [ %211, %208 ]
  %219 = phi i64 [ %224, %215 ], [ %213, %208 ]
  %220 = load i16, i16* %217, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %216, -1
  %222 = getelementptr inbounds i16, i16* %218, i64 1
  %223 = getelementptr inbounds i16, i16* %217, i64 1
  %224 = add i64 %219, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %215, !llvm.loop !61

226:                                              ; preds = %215, %208
  %227 = phi i64 [ %209, %208 ], [ %221, %215 ]
  %228 = phi i16* [ %210, %208 ], [ %223, %215 ]
  %229 = phi i16* [ %211, %208 ], [ %222, %215 ]
  %230 = icmp ult i64 %212, 7
  br i1 %230, label %261, label %231

231:                                              ; preds = %226, %231
  %232 = phi i64 [ %257, %231 ], [ %227, %226 ]
  %233 = phi i16* [ %259, %231 ], [ %228, %226 ]
  %234 = phi i16* [ %258, %231 ], [ %229, %226 ]
  %235 = load i16, i16* %233, align 2
  store i16 %235, i16* %234, align 2
  %236 = getelementptr inbounds i16, i16* %234, i64 1
  %237 = getelementptr inbounds i16, i16* %233, i64 1
  %238 = load i16, i16* %237, align 2
  store i16 %238, i16* %236, align 2
  %239 = getelementptr inbounds i16, i16* %234, i64 2
  %240 = getelementptr inbounds i16, i16* %233, i64 2
  %241 = load i16, i16* %240, align 2
  store i16 %241, i16* %239, align 2
  %242 = getelementptr inbounds i16, i16* %234, i64 3
  %243 = getelementptr inbounds i16, i16* %233, i64 3
  %244 = load i16, i16* %243, align 2
  store i16 %244, i16* %242, align 2
  %245 = getelementptr inbounds i16, i16* %234, i64 4
  %246 = getelementptr inbounds i16, i16* %233, i64 4
  %247 = load i16, i16* %246, align 2
  store i16 %247, i16* %245, align 2
  %248 = getelementptr inbounds i16, i16* %234, i64 5
  %249 = getelementptr inbounds i16, i16* %233, i64 5
  %250 = load i16, i16* %249, align 2
  store i16 %250, i16* %248, align 2
  %251 = getelementptr inbounds i16, i16* %234, i64 6
  %252 = getelementptr inbounds i16, i16* %233, i64 6
  %253 = load i16, i16* %252, align 2
  store i16 %253, i16* %251, align 2
  %254 = getelementptr inbounds i16, i16* %234, i64 7
  %255 = getelementptr inbounds i16, i16* %233, i64 7
  %256 = load i16, i16* %255, align 2
  store i16 %256, i16* %254, align 2
  %257 = add i64 %232, -8
  %258 = getelementptr inbounds i16, i16* %234, i64 8
  %259 = getelementptr inbounds i16, i16* %233, i64 8
  %260 = icmp eq i64 %257, 0
  br i1 %260, label %261, label %231, !llvm.loop !62

261:                                              ; preds = %226, %231, %206, %83
  %262 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %72, i8** %262, align 8, !alias.scope !49
  %263 = bitcast i8* %66 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %264 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %263, align 8
  %265 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %264, i64 7
  %266 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %265, align 8
  call void %266(%"class.base::OneShotTimer"* nonnull %67, %"class.base::Location"* nonnull dereferenceable(32) %6, i64 86400000000, %"class.base::OnceCallback"* nonnull %7) #12
  %267 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %267) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #12
  %268 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %13, align 8
  %269 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %270 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %269, align 8
  %271 = icmp ult %"class.device::PositionCacheImpl::CacheEntry"* %268, %270
  br i1 %271, label %272, label %276

272:                                              ; preds = %261
  %273 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %64, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %64, align 8
  call void @_ZN6device17PositionCacheImpl10CacheEntryC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS_5mojom11GeopositionENS2_10unique_ptrIN4base12OneShotTimerENS2_14default_deleteISH_EEEE(%"class.device::PositionCacheImpl::CacheEntry"* %268, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.device::mojom::Geoposition"* dereferenceable(104) %2, %"class.base::OneShotTimer"* %273) #12
  %274 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %268, i64 1
  %275 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %274 to i64
  store i64 %275, i64* %14, align 8
  br label %277

276:                                              ; preds = %261
  call void @_ZNSt3__16vectorIN6device17PositionCacheImpl10CacheEntryENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS4_IDsEEEERKNS1_5mojom11GeopositionENS_10unique_ptrIN4base12OneShotTimerENS_14default_deleteISL_EEEEEEEvDpOT_(%"class.std::__1::vector"* %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.device::mojom::Geoposition"* dereferenceable(104) %2, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #12
  br label %277

277:                                              ; preds = %272, %276
  %278 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %64, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %64, align 8
  %279 = icmp eq %"class.base::OneShotTimer"* %278, null
  br i1 %279, label %285, label %280

280:                                              ; preds = %277
  %281 = bitcast %"class.base::OneShotTimer"* %278 to void (%"class.base::OneShotTimer"*)***
  %282 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %281, align 8
  %283 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %282, i64 1
  %284 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %283, align 8
  call void %284(%"class.base::OneShotTimer"* nonnull %278) #12
  br label %285

285:                                              ; preds = %277, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  %286 = load i8, i8* %80, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %285
  %289 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %290 = load i8*, i8** %289, align 8
  call void @_ZdlPv(i8* %290) #14
  br label %291

291:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl10EvictEntryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.device::PositionCacheImpl"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %3, align 8
  %5 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %5, align 8
  %7 = tail call %"class.device::PositionCacheImpl::CacheEntry"* @_ZNSt3__16removeINS_11__wrap_iterIPN6device17PositionCacheImpl10CacheEntryEEENS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEET_SD_SD_RKT0_(%"class.device::PositionCacheImpl::CacheEntry"* %4, %"class.device::PositionCacheImpl::CacheEntry"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %8 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %5, align 8
  %9 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %7, %8
  br i1 %9, label %33, label %10

10:                                               ; preds = %2, %30
  %11 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %12, %30 ], [ %8, %2 ]
  %12 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %11, i64 -1
  %13 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %11, i64 -1, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %13, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %13, align 8
  %15 = icmp eq %"class.base::OneShotTimer"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.base::OneShotTimer"* %14 to void (%"class.base::OneShotTimer"*)***
  %18 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %18, i64 1
  %20 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %19, align 8
  tail call void %20(%"class.base::OneShotTimer"* nonnull %14) #12
  br label %21

21:                                               ; preds = %16, %10
  %22 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %11, i64 -1, i32 1
  tail call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %22) #12
  %23 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %12 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %27, %21
  %31 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %12, %7
  br i1 %31, label %32, label %10

32:                                               ; preds = %30
  store %"class.device::PositionCacheImpl::CacheEntry"* %7, %"class.device::PositionCacheImpl::CacheEntry"** %5, align 8
  br label %33

33:                                               ; preds = %2, %32
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.device::mojom::Geoposition"* @_ZNK6device17PositionCacheImpl12FindPositionERKNS_8WifiDataE(%"class.device::PositionCacheImpl"* nocapture readonly, %"struct.device::WifiData"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  call void @_ZN6device17PositionCacheImpl7MakeKeyERKNS_8WifiDataE(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.device::WifiData"* dereferenceable(24) %1)
  %6 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %6, align 8
  %8 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %8, align 8
  %10 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  br label %61

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i64, i64* %17, align 8
  %23 = zext i8 %20 to i64
  %24 = select i1 %21, i64 %22, i64 %23
  %25 = load i16*, i16** %16, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %27 = select i1 %21, i16* %25, i16* %26
  %28 = icmp eq i64 %24, 0
  br label %29

29:                                               ; preds = %58, %15
  %30 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %7, %15 ], [ %59, %58 ]
  %31 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp eq i64 %38, %24
  br i1 %39, label %40, label %58

40:                                               ; preds = %29
  br i1 %28, label %61, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %30 to i16*
  %45 = select i1 %34, i16* %43, i16* %44
  br label %46

46:                                               ; preds = %53, %41
  %47 = phi i64 [ %54, %53 ], [ %24, %41 ]
  %48 = phi i16* [ %56, %53 ], [ %27, %41 ]
  %49 = phi i16* [ %55, %53 ], [ %45, %41 ]
  %50 = load i16, i16* %49, align 2
  %51 = load i16, i16* %48, align 2
  %52 = icmp eq i16 %51, %50
  br i1 %52, label %53, label %58

53:                                               ; preds = %46
  %54 = add i64 %47, -1
  %55 = getelementptr inbounds i16, i16* %49, i64 1
  %56 = getelementptr inbounds i16, i16* %48, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %61, label %46

58:                                               ; preds = %46, %29
  %59 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %30, i64 1
  %60 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %59, %9
  br i1 %60, label %67, label %29

61:                                               ; preds = %40, %53, %11
  %62 = phi i8 [ %14, %11 ], [ %20, %53 ], [ %20, %40 ]
  %63 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %7, %11 ], [ %30, %53 ], [ %30, %40 ]
  %64 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %63, %9
  %65 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %63, i64 0, i32 1
  %66 = select i1 %64, %"class.device::mojom::Geoposition"* null, %"class.device::mojom::Geoposition"* %65
  br label %67

67:                                               ; preds = %58, %61
  %68 = phi i8 [ %62, %61 ], [ %20, %58 ]
  %69 = phi %"class.device::mojom::Geoposition"* [ %66, %61 ], [ null, %58 ]
  %70 = icmp slt i8 %68, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #14
  br label %74

74:                                               ; preds = %67, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret %"class.device::mojom::Geoposition"* %69
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6device17PositionCacheImpl20GetPositionCacheSizeEv(%"class.device::PositionCacheImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.device::PositionCacheImpl::CacheEntry"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 136
  ret i64 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(104) %"class.device::mojom::Geoposition"* @_ZNK6device17PositionCacheImpl26GetLastUsedNetworkPositionEv(%"class.device::PositionCacheImpl"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4
  ret %"class.device::mojom::Geoposition"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl26SetLastUsedNetworkPositionERKNS_5mojom11GeopositionE(%"class.device::PositionCacheImpl"*, %"class.device::mojom::Geoposition"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 76, i1 false) #12
  %6 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4, i32 10
  %7 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %1, i64 0, i32 10
  %8 = icmp eq %"class.device::mojom::Geoposition"* %3, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  %21 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %6, i8* %24, i64 %26) #12
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %6, i8* %35, i64 %36) #12
  br label %38

38:                                               ; preds = %2, %19, %22, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device17PositionCacheImpl16OnNetworkChangedEN3net21NetworkChangeNotifier14ConnectionTypeE(%"class.device::PositionCacheImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.device::WifiData", align 8
  %5 = alloca %"class.device::mojom::Geoposition", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"struct.device::WifiData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZN6device8WifiDataC1Ev(%"struct.device::WifiData"* nonnull %4) #12
  call void @_ZN6device17PositionCacheImpl7MakeKeyERKNS_8WifiDataE(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.device::WifiData"* nonnull dereferenceable(24) %4)
  %8 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %8, align 8
  %10 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %10, align 8
  %12 = call %"class.device::PositionCacheImpl::CacheEntry"* @_ZNSt3__16removeINS_11__wrap_iterIPN6device17PositionCacheImpl10CacheEntryEEENS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEET_SD_SD_RKT0_(%"class.device::PositionCacheImpl::CacheEntry"* %9, %"class.device::PositionCacheImpl::CacheEntry"* %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %13 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %10, align 8
  %14 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %12, %13
  br i1 %14, label %38, label %15

15:                                               ; preds = %2, %35
  %16 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %17, %35 ], [ %13, %2 ]
  %17 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %16, i64 -1
  %18 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %16, i64 -1, i32 2, i32 0, i32 0, i32 0
  %19 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %18, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %18, align 8
  %20 = icmp eq %"class.base::OneShotTimer"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.base::OneShotTimer"* %19 to void (%"class.base::OneShotTimer"*)***
  %23 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %23, i64 1
  %25 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %24, align 8
  call void %25(%"class.base::OneShotTimer"* nonnull %19) #12
  br label %26

26:                                               ; preds = %21, %15
  %27 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %16, i64 -1, i32 1
  call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %27) #12
  %28 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %17 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %32, %26
  %36 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %17, %12
  br i1 %36, label %37, label %15

37:                                               ; preds = %35
  store %"class.device::PositionCacheImpl::CacheEntry"* %12, %"class.device::PositionCacheImpl::CacheEntry"** %10, align 8
  br label %38

38:                                               ; preds = %2, %37
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %38, %43
  call void @_ZN6device8WifiDataD1Ev(%"struct.device::WifiData"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  %47 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %47) #12
  call void @_ZN6device5mojom11GeopositionC1Ev(%"class.device::mojom::Geoposition"* nonnull %5) #12
  %48 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4
  %49 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %48, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %47, i64 76, i1 false) #12
  %50 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 0, i32 4, i32 10
  %51 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %5, i64 0, i32 10
  %52 = icmp eq %"class.device::mojom::Geoposition"* %48, %5
  br i1 %52, label %82, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::basic_string.1"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = bitcast %"class.std::__1::basic_string.1"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %57, label %72, label %62

62:                                               ; preds = %53
  br i1 %61, label %66, label %63

63:                                               ; preds = %62
  %64 = bitcast %"class.std::__1::basic_string.1"* %50 to i8*
  %65 = bitcast %"class.std::__1::basic_string.1"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #12
  br label %82

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %50, i8* %68, i64 %70) #12
  br label %82

72:                                               ; preds = %53
  %73 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.device::mojom::Geoposition", %"class.device::mojom::Geoposition"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::basic_string.1"* %51 to i8*
  %78 = zext i8 %60 to i64
  %79 = select i1 %61, i8* %74, i8* %77
  %80 = select i1 %61, i64 %76, i64 %78
  %81 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %50, i8* %79, i64 %80) #12
  br label %82

82:                                               ; preds = %46, %63, %66, %72
  call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %47) #12
  ret void
}

declare void @_ZN6device8WifiDataC1Ev(%"struct.device::WifiData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6device8WifiDataD1Ev(%"struct.device::WifiData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6device17PositionCacheImpl16OnNetworkChangedEN3net21NetworkChangeNotifier14ConnectionTypeE(%"class.device::PositionCacheImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PositionCacheImpl", %"class.device::PositionCacheImpl"* %0, i64 -1, i32 4, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = bitcast i64* %3 to %"class.device::PositionCacheImpl"*
  tail call void @_ZN6device17PositionCacheImpl16OnNetworkChangedEN3net21NetworkChangeNotifier14ConnectionTypeE(%"class.device::PositionCacheImpl"* %4, i32 undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.device::PositionCacheImpl::CacheEntry"* @_ZNSt3__16removeINS_11__wrap_iterIPN6device17PositionCacheImpl10CacheEntryEEENS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEET_SD_SD_RKT0_(%"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %0, %1
  br i1 %4, label %53, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %17 = select i1 %9, i16* %15, i16* %16
  %18 = icmp eq i64 %13, 0
  br label %19

19:                                               ; preds = %48, %5
  %20 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %0, %5 ], [ %49, %48 ]
  %21 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %28, %13
  br i1 %29, label %30, label %48

30:                                               ; preds = %19
  br i1 %18, label %53, label %31

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %20 to i16*
  %35 = select i1 %24, i16* %33, i16* %34
  br label %36

36:                                               ; preds = %43, %31
  %37 = phi i64 [ %44, %43 ], [ %13, %31 ]
  %38 = phi i16* [ %46, %43 ], [ %17, %31 ]
  %39 = phi i16* [ %45, %43 ], [ %35, %31 ]
  %40 = load i16, i16* %39, align 2
  %41 = load i16, i16* %38, align 2
  %42 = icmp eq i16 %41, %40
  br i1 %42, label %43, label %48

43:                                               ; preds = %36
  %44 = add i64 %37, -1
  %45 = getelementptr inbounds i16, i16* %39, i64 1
  %46 = getelementptr inbounds i16, i16* %38, i64 1
  %47 = icmp eq i64 %44, 0
  br i1 %47, label %53, label %36

48:                                               ; preds = %36, %19
  %49 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %20, i64 1
  %50 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %49, %1
  br i1 %50, label %51, label %19

51:                                               ; preds = %48
  %52 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %1 to i64
  br label %114

53:                                               ; preds = %30, %43, %3
  %54 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %0, %3 ], [ %20, %43 ], [ %20, %30 ]
  %55 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %54 to i64
  %56 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %54, %1
  br i1 %56, label %114, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %54, i64 1
  %59 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %58, %1
  br i1 %59, label %114, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %66

66:                                               ; preds = %60, %110
  %67 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %58, %60 ], [ %112, %110 ]
  %68 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %54, %60 ], [ %67, %110 ]
  %69 = phi i64 [ %55, %60 ], [ %111, %110 ]
  %70 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %68, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = load i8, i8* %62, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %63, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = icmp eq i64 %77, %82
  br i1 %83, label %84, label %105

84:                                               ; preds = %66
  %85 = icmp eq i64 %77, 0
  br i1 %85, label %110, label %86

86:                                               ; preds = %84
  %87 = load i16*, i16** %64, align 8
  %88 = select i1 %79, i16* %87, i16* %65
  %89 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %67 to i16*
  %92 = select i1 %73, i16* %90, i16* %91
  br label %93

93:                                               ; preds = %100, %86
  %94 = phi i64 [ %101, %100 ], [ %77, %86 ]
  %95 = phi i16* [ %103, %100 ], [ %88, %86 ]
  %96 = phi i16* [ %102, %100 ], [ %92, %86 ]
  %97 = load i16, i16* %96, align 2
  %98 = load i16, i16* %95, align 2
  %99 = icmp eq i16 %98, %97
  br i1 %99, label %100, label %105

100:                                              ; preds = %93
  %101 = add i64 %94, -1
  %102 = getelementptr inbounds i16, i16* %96, i64 1
  %103 = getelementptr inbounds i16, i16* %95, i64 1
  %104 = icmp eq i64 %101, 0
  br i1 %104, label %110, label %93

105:                                              ; preds = %93, %66
  %106 = inttoptr i64 %69 to %"class.device::PositionCacheImpl::CacheEntry"*
  %107 = tail call dereferenceable(136) %"class.device::PositionCacheImpl::CacheEntry"* @_ZN6device17PositionCacheImpl10CacheEntryaSEOS1_(%"class.device::PositionCacheImpl::CacheEntry"* %106, %"class.device::PositionCacheImpl::CacheEntry"* dereferenceable(136) %67)
  %108 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %106, i64 1
  %109 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %108 to i64
  br label %110

110:                                              ; preds = %100, %84, %105
  %111 = phi i64 [ %109, %105 ], [ %69, %84 ], [ %69, %100 ]
  %112 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %67, i64 1
  %113 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %112, %1
  br i1 %113, label %114, label %66

114:                                              ; preds = %110, %57, %53, %51
  %115 = phi i64 [ %55, %53 ], [ %52, %51 ], [ %55, %57 ], [ %111, %110 ]
  %116 = inttoptr i64 %115 to %"class.device::PositionCacheImpl::CacheEntry"*
  ret %"class.device::PositionCacheImpl::CacheEntry"* %116
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device13PositionCacheD2Ev(%"class.device::PositionCache"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device13PositionCacheD0Ev(%"class.device::PositionCache"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !63
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !63
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !66, !noalias !63
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !66, !noalias !63
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !63
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !63
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !66, !noalias !63
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !66, !noalias !63
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !63
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !63
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !66, !noalias !63
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !66, !noalias !63
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !63
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !63
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !66, !noalias !63
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !66, !noalias !63
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !68

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !63
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !63
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !66, !noalias !63
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !66, !noalias !63
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !69

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !70

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !71

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !72

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !73

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !74

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !76
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !76
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !79, !noalias !76
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !79, !noalias !76
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !76
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !76
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !79, !noalias !76
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !79, !noalias !76
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !76
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !76
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !79, !noalias !76
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !79, !noalias !76
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !76
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !76
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !79, !noalias !76
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !79, !noalias !76
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !81

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !76
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !76
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !79, !noalias !76
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !79, !noalias !76
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !82

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !83

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !84

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZN4base12OneShotTimerC1EPKNS_9TickClockE(%"class.base::OneShotTimer"*, %"class.base::TickClock"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.std::__1::basic_string"*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.device::PositionCacheImpl"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.device::PositionCacheImpl"*, %"class.std::__1::basic_string"*)**
  %23 = load void (%"class.device::PositionCacheImpl"*, %"class.std::__1::basic_string"*)*, void (%"class.device::PositionCacheImpl"*, %"class.std::__1::basic_string"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.device::PositionCacheImpl"*, %"class.std::__1::basic_string"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.device::PositionCacheImpl"*, %"class.std::__1::basic_string"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.device::PositionCacheImpl"* %14, %"class.std::__1::basic_string"* dereferenceable(24) %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %3, %9
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6device17PositionCacheImpl10CacheEntryENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS4_IDsEEEERKNS1_5mojom11GeopositionENS_10unique_ptrIN4base12OneShotTimerENS_14default_deleteISL_EEEEEEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.device::mojom::Geoposition"* dereferenceable(104), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.device::PositionCacheImpl::CacheEntry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 136
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 135637824071393761
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #13
  unreachable

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.device::PositionCacheImpl::CacheEntry"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = sdiv exact i64 %20, 136
  %22 = icmp ult i64 %21, 67818912035696880
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = shl nsw i64 %21, 1
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %26, %23 ], [ 135637824071393761, %16 ]
  %30 = mul i64 %29, 136
  %31 = tail call i8* @_Znwm(i64 %30) #14
  %32 = bitcast i8* %31 to %"class.device::PositionCacheImpl::CacheEntry"*
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi i64 [ %29, %28 ], [ 0, %23 ]
  %35 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %32, %28 ], [ null, %23 ]
  %36 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %35, i64 %11
  %37 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %35, i64 %34
  %38 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %39, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %39, align 8
  tail call void @_ZN6device17PositionCacheImpl10CacheEntryC2ERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKNS_5mojom11GeopositionENS2_10unique_ptrIN4base12OneShotTimerENS2_14default_deleteISH_EEEE(%"class.device::PositionCacheImpl::CacheEntry"* %36, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.device::mojom::Geoposition"* dereferenceable(104) %2, %"class.base::OneShotTimer"* %40) #12
  %41 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %36, i64 1
  %42 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %43, align 8
  %45 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %5, align 8
  %46 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %33
  %48 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %44 to i64
  br label %83

49:                                               ; preds = %33, %72
  %50 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %52, %72 ], [ %36, %33 ]
  %51 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %53, %72 ], [ %45, %33 ]
  %52 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %50, i64 -1
  %53 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %51, i64 -1
  %54 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %52 to i8*
  %55 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  %56 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %50, i64 -1, i32 1, i32 0
  %57 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %51, i64 -1, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 76, i1 false) #12
  %58 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %50, i64 -1, i32 1, i32 10
  %59 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %51, i64 -1, i32 1, i32 10
  %60 = bitcast %"class.std::__1::basic_string.1"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %49
  %65 = bitcast %"class.std::__1::basic_string.1"* %58 to i8*
  %66 = bitcast %"class.std::__1::basic_string.1"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #12
  br label %72

67:                                               ; preds = %49
  %68 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %51, i64 -1, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %58, i8* %69, i64 %71) #12
  br label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %50, i64 -1, i32 2
  %74 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %51, i64 -1, i32 2
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %53, %44
  br i1 %79, label %80, label %49

80:                                               ; preds = %72
  %81 = load i64, i64* %8, align 8
  %82 = load %"class.device::PositionCacheImpl::CacheEntry"*, %"class.device::PositionCacheImpl::CacheEntry"** %5, align 8
  br label %83

83:                                               ; preds = %47, %80
  %84 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %44, %47 ], [ %82, %80 ]
  %85 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %36, %47 ], [ %52, %80 ]
  %86 = phi i64 [ %48, %47 ], [ %81, %80 ]
  %87 = ptrtoint %"class.device::PositionCacheImpl::CacheEntry"* %85 to i64
  store i64 %87, i64* %8, align 8
  store i64 %42, i64* %6, align 8
  store i64 %38, i64* %18, align 8
  %88 = inttoptr i64 %86 to %"class.device::PositionCacheImpl::CacheEntry"*
  %89 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %84, %88
  br i1 %89, label %112, label %90

90:                                               ; preds = %83, %110
  %91 = phi %"class.device::PositionCacheImpl::CacheEntry"* [ %92, %110 ], [ %84, %83 ]
  %92 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %91, i64 -1
  %93 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %91, i64 -1, i32 2, i32 0, i32 0, i32 0
  %94 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %93, align 8
  store %"class.base::OneShotTimer"* null, %"class.base::OneShotTimer"** %93, align 8
  %95 = icmp eq %"class.base::OneShotTimer"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.base::OneShotTimer"* %94 to void (%"class.base::OneShotTimer"*)***
  %98 = load void (%"class.base::OneShotTimer"*)**, void (%"class.base::OneShotTimer"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %98, i64 1
  %100 = load void (%"class.base::OneShotTimer"*)*, void (%"class.base::OneShotTimer"*)** %99, align 8
  tail call void %100(%"class.base::OneShotTimer"* nonnull %94) #12
  br label %101

101:                                              ; preds = %96, %90
  %102 = getelementptr inbounds %"class.device::PositionCacheImpl::CacheEntry", %"class.device::PositionCacheImpl::CacheEntry"* %91, i64 -1, i32 1
  tail call void @_ZN6device5mojom11GeopositionD1Ev(%"class.device::mojom::Geoposition"* %102) #12
  %103 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %92 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %101
  %108 = bitcast %"class.device::PositionCacheImpl::CacheEntry"* %92 to i8**
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %107, %101
  %111 = icmp eq %"class.device::PositionCacheImpl::CacheEntry"* %92, %88
  br i1 %111, label %112, label %90

112:                                              ; preds = %110, %83
  %113 = icmp eq i64 %86, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %86 to i8*
  tail call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %112, %114
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EESD_EEEDcOT0_DpOT1_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EESD_EEEDcOT0_DpOT1_"}
!52 = distinct !{!52, !53, !"_ZN4base8BindOnceIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEJNS_8internal17UnretainedWrapperIS2_EESB_EEENS_12OnceCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8BindOnceIMN6device17PositionCacheImplEFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEJNS_8internal17UnretainedWrapperIS2_EESB_EEENS_12OnceCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !8}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !10}
!62 = distinct !{!62, !8}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !8}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !8}
!72 = distinct !{!72, !8}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !75, !8}
!75 = !{!"llvm.loop.unroll.runtime.disable"}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !8}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !8}
