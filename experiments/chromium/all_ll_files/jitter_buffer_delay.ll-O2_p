; ModuleID = '../../third_party/webrtc/pc/jitter_buffer_delay.cc'
source_filename = "../../third_party/webrtc/pc/jitter_buffer_delay.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::JitterBufferDelay" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }

@_ZN6webrtc17JitterBufferDelayC1Ev = hidden unnamed_addr alias void (%"class.webrtc::JitterBufferDelay"*), void (%"class.webrtc::JitterBufferDelay"*)* @_ZN6webrtc17JitterBufferDelayC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc17JitterBufferDelayC2Ev(%"class.webrtc::JitterBufferDelay"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::JitterBufferDelay", %"class.webrtc::JitterBufferDelay"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17JitterBufferDelay3SetEN4absl8optionalIdEE(%"class.webrtc::JitterBufferDelay"* nocapture, i8, double) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::JitterBufferDelay", %"class.webrtc::JitterBufferDelay"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 %1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::JitterBufferDelay", %"class.webrtc::JitterBufferDelay"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %2, double* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc17JitterBufferDelay5GetMsEv(%"class.webrtc::JitterBufferDelay"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::JitterBufferDelay", %"class.webrtc::JitterBufferDelay"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::JitterBufferDelay", %"class.webrtc::JitterBufferDelay"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load double, double* %6, align 8
  %8 = fmul double %7, 1.000000e+03
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi double [ %8, %5 ], [ 0.000000e+00, %1 ]
  %11 = fcmp ole double %10, 0x41DFFFFFFFC00000
  %12 = select i1 %11, i32 0, i32 2
  %13 = fcmp ult double %10, 0xC1E0000000000000
  %14 = zext i1 %13 to i32
  %15 = or i32 %12, %14
  switch i32 %15, label %17 [
    i32 0, label %18
    i32 1, label %25
    i32 2, label %23
    i32 3, label %16
  ]

16:                                               ; preds = %9
  tail call void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() #3
  unreachable

17:                                               ; preds = %9
  unreachable

18:                                               ; preds = %9
  %19 = fptosi double %10 to i32
  %20 = icmp sgt i32 %19, 0
  %21 = icmp slt i32 %19, 10000
  %22 = select i1 %21, i32 %19, i32 10000
  br i1 %20, label %23, label %25

23:                                               ; preds = %18, %9
  %24 = phi i32 [ 10000, %9 ], [ %22, %18 ]
  br label %25

25:                                               ; preds = %18, %9, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %9 ], [ 0, %18 ]
  ret i32 %26
}

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
