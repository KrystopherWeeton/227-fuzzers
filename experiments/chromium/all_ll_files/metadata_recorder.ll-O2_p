; ModuleID = '../../base/profiler/metadata_recorder.cc'
source_filename = "../../base/profiler/metadata_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::MetadataRecorder::Item" = type { i64, %"class.absl::optional", i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"struct.base::MetadataRecorder::ItemInternal" = type { %"struct.std::__1::atomic", i64, %"class.absl::optional", %"struct.std::__1::atomic.0" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i64 }
%"class.base::MetadataRecorder" = type { i32 (...)**, %"struct.std::__1::array", %"struct.std::__1::atomic.5", i64, %"class.base::Lock", %"class.base::Lock" }
%"struct.std::__1::array" = type { [50 x %"struct.base::MetadataRecorder::ItemInternal"] }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::MetadataRecorder::MetadataProvider" = type { %"class.base::MetadataRecorder"*, %"class.base::internal::BasicAutoLock" }
%"class.base::internal::BasicAutoLock" = type { %"class.base::Lock"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.10", [4 x i8] }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i32 }
%"struct.std::__1::array.15" = type { [50 x %"struct.base::MetadataRecorder::Item"] }

@_ZN4base16MetadataRecorder18MAX_METADATA_COUNTE = hidden local_unnamed_addr constant i64 50, align 8
@_ZTVN4base16MetadataRecorderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MetadataRecorder"*)* @_ZN4base16MetadataRecorderD2Ev to i8*), i8* bitcast (void (%"class.base::MetadataRecorder"*)* @_ZN4base16MetadataRecorderD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [40 x i8] c"StackSamplingProfiler.MetadataSlotsUsed\00", align 1
@_ZZN4base16MetadataRecorder3SetEmN4absl8optionalIlEElE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4base16MetadataRecorder3SetEmN4absl8optionalIlEElE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN4base16MetadataRecorder4ItemC1EmN4absl8optionalIlEEl = hidden unnamed_addr alias void (%"struct.base::MetadataRecorder::Item"*, i64, i8, i64, i64), void (%"struct.base::MetadataRecorder::Item"*, i64, i8, i64, i64)* @_ZN4base16MetadataRecorder4ItemC2EmN4absl8optionalIlEEl
@_ZN4base16MetadataRecorder4ItemC1Ev = hidden unnamed_addr alias void (%"struct.base::MetadataRecorder::Item"*), void (%"struct.base::MetadataRecorder::Item"*)* @_ZN4base16MetadataRecorder4ItemC2Ev
@_ZN4base16MetadataRecorder4ItemC1ERKS1_ = hidden unnamed_addr alias void (%"struct.base::MetadataRecorder::Item"*, %"struct.base::MetadataRecorder::Item"*), void (%"struct.base::MetadataRecorder::Item"*, %"struct.base::MetadataRecorder::Item"*)* @_ZN4base16MetadataRecorder4ItemC2ERKS1_
@_ZN4base16MetadataRecorder12ItemInternalC1Ev = hidden unnamed_addr alias void (%"struct.base::MetadataRecorder::ItemInternal"*), void (%"struct.base::MetadataRecorder::ItemInternal"*)* @_ZN4base16MetadataRecorder12ItemInternalC2Ev
@_ZN4base16MetadataRecorder12ItemInternalD1Ev = hidden unnamed_addr alias void (%"struct.base::MetadataRecorder::ItemInternal"*), void (%"struct.base::MetadataRecorder::ItemInternal"*)* @_ZN4base16MetadataRecorder12ItemInternalD2Ev
@_ZN4base16MetadataRecorderC1Ev = hidden unnamed_addr alias void (%"class.base::MetadataRecorder"*), void (%"class.base::MetadataRecorder"*)* @_ZN4base16MetadataRecorderC2Ev
@_ZN4base16MetadataRecorderD1Ev = hidden unnamed_addr alias void (%"class.base::MetadataRecorder"*), void (%"class.base::MetadataRecorder"*)* @_ZN4base16MetadataRecorderD2Ev
@_ZN4base16MetadataRecorder16MetadataProviderC1EPS0_ = hidden unnamed_addr alias void (%"class.base::MetadataRecorder::MetadataProvider"*, %"class.base::MetadataRecorder"*), void (%"class.base::MetadataRecorder::MetadataProvider"*, %"class.base::MetadataRecorder"*)* @_ZN4base16MetadataRecorder16MetadataProviderC2EPS0_
@_ZN4base16MetadataRecorder16MetadataProviderD1Ev = hidden unnamed_addr alias void (%"class.base::MetadataRecorder::MetadataProvider"*), void (%"class.base::MetadataRecorder::MetadataProvider"*)* @_ZN4base16MetadataRecorder16MetadataProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorder4ItemC2EmN4absl8optionalIlEEl(%"struct.base::MetadataRecorder::Item"* nocapture, i64, i8, i64, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %2, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 2
  store i64 %4, i64* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base16MetadataRecorder4ItemC2Ev(%"struct.base::MetadataRecorder::Item"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %0, i64 0, i32 2
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorder4ItemC2ERKS1_(%"struct.base::MetadataRecorder::Item"* nocapture, %"struct.base::MetadataRecorder::Item"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::MetadataRecorder::Item"* %0 to i8*
  %4 = bitcast %"struct.base::MetadataRecorder::Item"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.base::MetadataRecorder::Item"* @_ZN4base16MetadataRecorder4ItemaSERKS1_(%"struct.base::MetadataRecorder::Item"* returned, %"struct.base::MetadataRecorder::Item"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::MetadataRecorder::Item"* %0 to i8*
  %4 = bitcast %"struct.base::MetadataRecorder::Item"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  ret %"struct.base::MetadataRecorder::Item"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base16MetadataRecorder12ItemInternalC2Ev(%"struct.base::MetadataRecorder::ItemInternal"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.base::MetadataRecorder::ItemInternal", %"struct.base::MetadataRecorder::ItemInternal"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"struct.base::MetadataRecorder::ItemInternal", %"struct.base::MetadataRecorder::ItemInternal"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base16MetadataRecorder12ItemInternalD2Ev(%"struct.base::MetadataRecorder::ItemInternal"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorderC2Ev(%"class.base::MetadataRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base16MetadataRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 1, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 2, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 3, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 4, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 5, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 6, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 7, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 8, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 9, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 9, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 10, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 10, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 11, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 11, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 12, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 13, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 13, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 14, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 15, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 16, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 17, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 18, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 19, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 20, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 21, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 22, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 23, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 24, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 25, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 26, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 27, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 28, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 29, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 30, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 30, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %64, align 8
  %65 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 31, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 32, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 33, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 34, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 35, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 36, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %75, align 1
  %76 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 36, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %76, align 8
  %77 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 37, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 37, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 38, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 38, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %80, align 8
  %81 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 39, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 39, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %82, align 8
  %83 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 40, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 1
  %84 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 40, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %84, align 8
  %85 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 41, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %85, align 1
  %86 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 41, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 42, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 8
  %89 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 43, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %89, align 1
  %90 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 43, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %90, align 8
  %91 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 44, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %91, align 1
  %92 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 44, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %92, align 8
  %93 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 45, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 45, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %94, align 8
  %95 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 46, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %95, align 1
  %96 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 46, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %96, align 8
  %97 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 47, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 47, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 48, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 48, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 49, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %101, align 1
  %102 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 49, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %102, align 8
  %103 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 4, i32 0
  %105 = bitcast i64* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %104) #9
  %106 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %106) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorderD2Ev(%"class.base::MetadataRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base16MetadataRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #9
  %4 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorderD0Ev(%"class.base::MetadataRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base16MetadataRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #9
  %4 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %4) #9
  %5 = bitcast %"class.base::MetadataRecorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorder3SetEmN4absl8optionalIlEEl(%"class.base::MetadataRecorder"*, i64, i8, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca [7 x i8], align 1
  %7 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !2

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #9
  br label %13

13:                                               ; preds = %5, %11
  %14 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %66, label %17

17:                                               ; preds = %13
  %18 = icmp ne i8 %2, 0
  %19 = icmp eq i8 %2, 0
  br label %20

20:                                               ; preds = %56, %17
  %21 = phi i64 [ 0, %17 ], [ %57, %56 ]
  %22 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %21, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %1
  br i1 %24, label %25, label %56

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %21, i32 2, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %18, %28
  %30 = xor i1 %28, true
  %31 = or i1 %29, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  br i1 %19, label %33, label %34, !prof !4

33:                                               ; preds = %32
  tail call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %21, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %3
  br i1 %37, label %39, label %56

38:                                               ; preds = %25
  br i1 %29, label %56, label %39

39:                                               ; preds = %38, %34
  %40 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %21, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %4, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %21, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw xchg i8* %41, i8 1 release
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %39, %45
  %50 = load atomic i64, i64* @_ZZN4base16MetadataRecorder3SetEmN4absl8optionalIlEElE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %51 = inttoptr i64 %50 to %"class.base::HistogramBase"*
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #9
  %55 = ptrtoint %"class.base::HistogramBase"* %54 to i64
  store atomic i64 %55, i64* @_ZZN4base16MetadataRecorder3SetEmN4absl8optionalIlEElE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %59

56:                                               ; preds = %38, %20, %34
  %57 = add nuw i64 %21, 1
  %58 = icmp eq i64 %57, %15
  br i1 %58, label %66, label %20

59:                                               ; preds = %49, %53
  %60 = phi %"class.base::HistogramBase"* [ %51, %49 ], [ %54, %53 ]
  %61 = trunc i64 %15 to i32
  %62 = bitcast %"class.base::HistogramBase"* %60 to void (%"class.base::HistogramBase"*, i32)***
  %63 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %63, i64 6
  %65 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %64, align 8
  tail call void %65(%"class.base::HistogramBase"* %60, i32 %61) #9
  br label %92

66:                                               ; preds = %56, %13
  %67 = tail call i64 @_ZN4base16MetadataRecorder23TryReclaimInactiveSlotsEm(%"class.base::MetadataRecorder"* %0, i64 %15)
  %68 = load atomic i64, i64* @_ZZN4base16MetadataRecorder3SetEmN4absl8optionalIlEElE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %69 = inttoptr i64 %68 to %"class.base::HistogramBase"*
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #9
  %73 = ptrtoint %"class.base::HistogramBase"* %72 to i64
  store atomic i64 %73, i64* @_ZZN4base16MetadataRecorder3SetEmN4absl8optionalIlEElE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %74

74:                                               ; preds = %66, %71
  %75 = phi %"class.base::HistogramBase"* [ %69, %66 ], [ %72, %71 ]
  %76 = trunc i64 %67 to i32
  %77 = add i32 %76, 1
  %78 = bitcast %"class.base::HistogramBase"* %75 to void (%"class.base::HistogramBase"*, i32)***
  %79 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %79, i64 6
  %81 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %80, align 8
  tail call void %81(%"class.base::HistogramBase"* %75, i32 %77) #9
  %82 = icmp eq i64 %67, 50
  br i1 %82, label %92, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %67, i32 1
  store i64 %1, i64* %84, align 8
  %85 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %67, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %2, i8* %85, align 8
  %86 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %67, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds i8, i8* %86, i64 17
  %88 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* nonnull align 1 %88, i64 7, i1 false)
  %89 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %67, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %3, i64* %89, align 8
  %90 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %67, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %4, i64* %90 monotonic, align 8
  store atomic i8 1, i8* %86 release, align 1
  %91 = atomicrmw add i64* %14, i64 1 release
  br label %92

92:                                               ; preds = %59, %74, %83
  %93 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base16MetadataRecorder23TryReclaimInactiveSlotsEm(%"class.base::MetadataRecorder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  %6 = sub i64 50, %1
  %7 = icmp ult i64 %4, %6
  %8 = or i1 %5, %7
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %53

13:                                               ; preds = %9
  %14 = add i64 %1, -1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %49, label %16

16:                                               ; preds = %13, %44
  %17 = phi i64 [ %47, %44 ], [ %14, %13 ]
  %18 = phi i64 [ %46, %44 ], [ 0, %13 ]
  %19 = phi i64 [ %45, %44 ], [ %1, %13 ]
  %20 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i8, i8* %20 monotonic, align 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = add nuw i64 %18, 1
  br label %44

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %17, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i8, i8* %27 monotonic, align 1
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = add i64 %17, -1
  %33 = add i64 %19, -1
  br label %44

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %17, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %18, i32 1
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %17, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %18, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %39, i64* %40 monotonic, align 8
  store atomic i8 1, i8* %20 monotonic, align 1
  %41 = add nuw i64 %18, 1
  %42 = add i64 %17, -1
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %34, %31, %24
  %45 = phi i64 [ %19, %24 ], [ %43, %34 ], [ %33, %31 ]
  %46 = phi i64 [ %25, %24 ], [ %41, %34 ], [ %18, %31 ]
  %47 = phi i64 [ %17, %24 ], [ %42, %34 ], [ %32, %31 ]
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %16, label %49

49:                                               ; preds = %44, %13
  %50 = phi i64 [ 1, %13 ], [ %45, %44 ]
  %51 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #9
  br label %53

53:                                               ; preds = %9, %49, %2
  %54 = phi i64 [ %1, %2 ], [ %50, %49 ], [ %1, %9 ]
  ret i64 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorder6RemoveEmN4absl8optionalIlEE(%"class.base::MetadataRecorder"*, i64, i8, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %4, %9
  %12 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %11
  %16 = icmp ne i8 %2, 0
  %17 = icmp eq i8 %2, 0
  br label %18

18:                                               ; preds = %46, %15
  %19 = phi i64 [ 0, %15 ], [ %47, %46 ]
  %20 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %19, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, %1
  br i1 %22, label %23, label %46

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %19, i32 2, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !3
  %26 = icmp ne i8 %25, 0
  %27 = xor i1 %16, %26
  %28 = xor i1 %26, true
  %29 = or i1 %27, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  br i1 %17, label %31, label %32, !prof !4

31:                                               ; preds = %30
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %19, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %37, label %46

36:                                               ; preds = %23
  br i1 %27, label %46, label %37

37:                                               ; preds = %36, %32
  %38 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %19, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw xchg i8* %38, i8 0 monotonic
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  br label %49

46:                                               ; preds = %36, %18, %32
  %47 = add nuw i64 %19, 1
  %48 = icmp eq i64 %47, %13
  br i1 %48, label %49, label %18

49:                                               ; preds = %46, %11, %37, %42
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorder16MetadataProviderC2EPS0_(%"class.base::MetadataRecorder::MetadataProvider"* nocapture, %"class.base::MetadataRecorder"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::MetadataRecorder::MetadataProvider", %"class.base::MetadataRecorder::MetadataProvider"* %0, i64 0, i32 0
  store %"class.base::MetadataRecorder"* %1, %"class.base::MetadataRecorder"** %3, align 8
  %4 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %1, i64 0, i32 5
  %5 = getelementptr inbounds %"class.base::MetadataRecorder::MetadataProvider", %"class.base::MetadataRecorder::MetadataProvider"* %0, i64 0, i32 1, i32 0
  store %"class.base::Lock"* %4, %"class.base::Lock"** %5, align 8
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MetadataRecorder16MetadataProviderD2Ev(%"class.base::MetadataRecorder::MetadataProvider"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MetadataRecorder::MetadataProvider", %"class.base::MetadataRecorder::MetadataProvider"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.base::Lock"*, %"class.base::Lock"** %2, align 8
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base16MetadataRecorder16MetadataProvider8GetItemsEPNSt3__15arrayINS0_4ItemELm50EEE(%"class.base::MetadataRecorder::MetadataProvider"* nocapture readonly, %"struct.std::__1::array.15"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [7 x i8], align 1
  %4 = getelementptr inbounds %"class.base::MetadataRecorder::MetadataProvider", %"class.base::MetadataRecorder::MetadataProvider"* %0, i64 0, i32 0
  %5 = load %"class.base::MetadataRecorder"*, %"class.base::MetadataRecorder"** %4, align 8
  %6 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 0
  br label %11

11:                                               ; preds = %35, %9
  %12 = phi i64 [ 0, %9 ], [ %36, %35 ]
  %13 = phi i64 [ 0, %9 ], [ %37, %35 ]
  %14 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %5, i64 0, i32 1, i32 0, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i8, i8* %14 acquire, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %10)
  %19 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %5, i64 0, i32 1, i32 0, i64 %13, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %5, i64 0, i32 1, i32 0, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8
  %23 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %5, i64 0, i32 1, i32 0, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %5, i64 0, i32 1, i32 0, i64 %13, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = add i64 %12, 1
  %28 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12
  %29 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %28, i64 0, i32 0
  store i64 %20, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %22, i8* %30, align 8
  %31 = bitcast %"struct.base::MetadataRecorder::Item"* %28 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* nonnull align 1 %10, i64 7, i1 false) #9
  %33 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %24, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12, i32 2
  store i64 %26, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %10)
  br label %35

35:                                               ; preds = %18, %11
  %36 = phi i64 [ %27, %18 ], [ %12, %11 ]
  %37 = add nuw i64 %13, 1
  %38 = icmp eq i64 %37, %7
  br i1 %38, label %39, label %11

39:                                               ; preds = %35, %2
  %40 = phi i64 [ 0, %2 ], [ %36, %35 ]
  ret i64 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base16MetadataRecorder8GetItemsEPNSt3__15arrayINS0_4ItemELm50EEE(%"class.base::MetadataRecorder"* nocapture readonly, %"struct.std::__1::array.15"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [7 x i8], align 1
  %4 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds [7 x i8], [7 x i8]* %3, i64 0, i64 0
  br label %11

9:                                                ; preds = %35, %2
  %10 = phi i64 [ 0, %2 ], [ %36, %35 ]
  ret i64 %10

11:                                               ; preds = %35, %7
  %12 = phi i64 [ 0, %7 ], [ %36, %35 ]
  %13 = phi i64 [ 0, %7 ], [ %37, %35 ]
  %14 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i8, i8* %14 acquire, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %8)
  %19 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %13, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8
  %23 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %13, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = add i64 %12, 1
  %28 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12
  %29 = getelementptr inbounds %"struct.base::MetadataRecorder::Item", %"struct.base::MetadataRecorder::Item"* %28, i64 0, i32 0
  store i64 %20, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %22, i8* %30, align 8
  %31 = bitcast %"struct.base::MetadataRecorder::Item"* %28 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* nonnull align 1 %8, i64 7, i1 false)
  %33 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %24, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::array.15", %"struct.std::__1::array.15"* %1, i64 0, i32 0, i64 %12, i32 2
  store i64 %26, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %8)
  br label %35

35:                                               ; preds = %11, %18
  %36 = phi i64 [ %27, %18 ], [ %12, %11 ]
  %37 = add nuw i64 %13, 1
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %9, label %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN4base16MetadataRecorder20ReclaimInactiveSlotsEm(%"class.base::MetadataRecorder"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = add i64 %1, -1
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2, %33
  %6 = phi i64 [ %36, %33 ], [ %3, %2 ]
  %7 = phi i64 [ %35, %33 ], [ 0, %2 ]
  %8 = phi i64 [ %34, %33 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %7, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i8, i8* %9 monotonic, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = add nuw i64 %7, 1
  br label %33

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %6, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i8, i8* %16 monotonic, align 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = add i64 %6, -1
  %22 = add i64 %8, -1
  br label %33

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %6, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %7, i32 1
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %6, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 1, i32 0, i64 %7, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %28, i64* %29 monotonic, align 8
  store atomic i8 1, i8* %9 monotonic, align 1
  %30 = add nuw i64 %7, 1
  %31 = add i64 %6, -1
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %23, %20, %13
  %34 = phi i64 [ %8, %13 ], [ %32, %23 ], [ %22, %20 ]
  %35 = phi i64 [ %14, %13 ], [ %30, %23 ], [ %7, %20 ]
  %36 = phi i64 [ %6, %13 ], [ %31, %23 ], [ %21, %20 ]
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %5, label %38

38:                                               ; preds = %33, %2
  %39 = phi i64 [ 1, %2 ], [ %34, %33 ]
  %40 = getelementptr inbounds %"class.base::MetadataRecorder", %"class.base::MetadataRecorder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %39, i64* %40 monotonic, align 8
  ret i64 %39
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
