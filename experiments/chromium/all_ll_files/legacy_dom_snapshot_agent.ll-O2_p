; ModuleID = '../../third_party/blink/renderer/core/inspector/legacy_dom_snapshot_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/legacy_dom_snapshot_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1752", i64 }
%"class.std::__1::vector.1752" = type { %"class.std::__1::__vector_base.1753" }
%"class.std::__1::__vector_base.1753" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1754" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::LegacyDOMSnapshotAgent" = type { %"class.std::__1::unique_ptr.2745", %"class.std::__1::unique_ptr.2752", %"class.std::__1::unique_ptr.2759", %"class.std::__1::unique_ptr.3238", %"class.std::__1::unique_ptr.3249", %"class.std::__1::unique_ptr.2910", %"class.WTF::HashMap.2920"*, %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.std::__1::unique_ptr.2745" = type { %"class.std::__1::__compressed_pair.2746" }
%"class.std::__1::__compressed_pair.2746" = type { %"struct.std::__1::__compressed_pair_elem.2747" }
%"struct.std::__1::__compressed_pair_elem.2747" = type { %"class.std::__1::vector.2748"* }
%"class.std::__1::vector.2748" = type { %"class.std::__1::__vector_base.3127" }
%"class.std::__1::__vector_base.3127" = type { %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::__compressed_pair.3156" }
%"class.std::__1::unique_ptr.3128" = type { %"class.std::__1::__compressed_pair.3129" }
%"class.std::__1::__compressed_pair.3129" = type { %"struct.std::__1::__compressed_pair_elem.3130" }
%"struct.std::__1::__compressed_pair_elem.3130" = type { %"class.blink::protocol::DOMSnapshot::DOMNode"* }
%"class.blink::protocol::DOMSnapshot::DOMNode" = type { %"class.crdtp::ProtocolObject.3131", i32, %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135", i32, %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.3136", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe.3144", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3144", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::PtrMaybe.3145", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.3131" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::PtrMaybe.3136" = type { %"class.std::__1::unique_ptr.3137" }
%"class.std::__1::unique_ptr.3137" = type { %"class.std::__1::__compressed_pair.3138" }
%"class.std::__1::__compressed_pair.3138" = type { %"struct.std::__1::__compressed_pair_elem.3139" }
%"struct.std::__1::__compressed_pair_elem.3139" = type { %"class.std::__1::vector.3140"* }
%"class.std::__1::vector.3140" = type { %"class.std::__1::__vector_base.3161" }
%"class.std::__1::__vector_base.3161" = type { %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::__compressed_pair.3171" }
%"class.std::__1::unique_ptr.3162" = type { %"class.std::__1::__compressed_pair.3163" }
%"class.std::__1::__compressed_pair.3163" = type { %"struct.std::__1::__compressed_pair_elem.3164" }
%"struct.std::__1::__compressed_pair_elem.3164" = type { %"class.blink::protocol::DOMSnapshot::NameValue"* }
%"class.blink::protocol::DOMSnapshot::NameValue" = type { %"class.crdtp::ProtocolObject.3165", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3165" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3171" = type { %"struct.std::__1::__compressed_pair_elem.3172" }
%"struct.std::__1::__compressed_pair_elem.3172" = type { %"class.std::__1::unique_ptr.3162"* }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2812" }
%"class.std::__1::unique_ptr.2812" = type { %"class.std::__1::__compressed_pair.2813" }
%"class.std::__1::__compressed_pair.2813" = type { %"struct.std::__1::__compressed_pair_elem.2814" }
%"struct.std::__1::__compressed_pair_elem.2814" = type { %"class.std::__1::vector.2815"* }
%"class.std::__1::vector.2815" = type { %"class.std::__1::__vector_base.2816" }
%"class.std::__1::__vector_base.2816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2817" }
%"class.std::__1::__compressed_pair.2817" = type { %"struct.std::__1::__compressed_pair_elem.2818" }
%"struct.std::__1::__compressed_pair_elem.2818" = type { i32* }
%"class.crdtp::detail::ValueMaybe.3144" = type { i8, i32 }
%"class.crdtp::detail::ValueMaybe.3135" = type { i8, i8 }
%"class.crdtp::detail::PtrMaybe.3145" = type { %"class.std::__1::unique_ptr.3146" }
%"class.std::__1::unique_ptr.3146" = type { %"class.std::__1::__compressed_pair.3147" }
%"class.std::__1::__compressed_pair.3147" = type { %"struct.std::__1::__compressed_pair_elem.3148" }
%"struct.std::__1::__compressed_pair_elem.3148" = type { %"class.std::__1::vector.3149"* }
%"class.std::__1::vector.3149" = type { %"class.std::__1::__vector_base.3411" }
%"class.std::__1::__vector_base.3411" = type { %"class.std::__1::unique_ptr.3412"*, %"class.std::__1::unique_ptr.3412"*, %"class.std::__1::__compressed_pair.3428" }
%"class.std::__1::unique_ptr.3412" = type { %"class.std::__1::__compressed_pair.3413" }
%"class.std::__1::__compressed_pair.3413" = type { %"struct.std::__1::__compressed_pair_elem.3414" }
%"struct.std::__1::__compressed_pair_elem.3414" = type { %"class.blink::protocol::DOMDebugger::EventListener"* }
%"class.blink::protocol::DOMDebugger::EventListener" = type { %"class.crdtp::ProtocolObject.3415", %"class.WTF::String", i8, i8, i8, %"class.WTF::String", i32, i32, %"class.crdtp::detail::PtrMaybe.3418", %"class.crdtp::detail::PtrMaybe.3418", %"class.crdtp::detail::ValueMaybe.3144" }
%"class.crdtp::ProtocolObject.3415" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3418" = type { %"class.std::__1::unique_ptr.3419" }
%"class.std::__1::unique_ptr.3419" = type { %"class.std::__1::__compressed_pair.3420" }
%"class.std::__1::__compressed_pair.3420" = type { %"struct.std::__1::__compressed_pair_elem.3421" }
%"struct.std::__1::__compressed_pair_elem.3421" = type { %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.3428" = type { %"struct.std::__1::__compressed_pair_elem.3429" }
%"struct.std::__1::__compressed_pair_elem.3429" = type { %"class.std::__1::unique_ptr.3412"* }
%"class.crdtp::detail::ValueMaybe.3134" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::ValueMaybe" = type { i8, double }
%"class.std::__1::__compressed_pair.3156" = type { %"struct.std::__1::__compressed_pair_elem.3157" }
%"struct.std::__1::__compressed_pair_elem.3157" = type { %"class.std::__1::unique_ptr.3128"* }
%"class.std::__1::unique_ptr.2752" = type { %"class.std::__1::__compressed_pair.2753" }
%"class.std::__1::__compressed_pair.2753" = type { %"struct.std::__1::__compressed_pair_elem.2754" }
%"struct.std::__1::__compressed_pair_elem.2754" = type { %"class.std::__1::vector.2755"* }
%"class.std::__1::vector.2755" = type { %"class.std::__1::__vector_base.3176" }
%"class.std::__1::__vector_base.3176" = type { %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::__compressed_pair.3218" }
%"class.std::__1::unique_ptr.3177" = type { %"class.std::__1::__compressed_pair.3178" }
%"class.std::__1::__compressed_pair.3178" = type { %"struct.std::__1::__compressed_pair_elem.3179" }
%"struct.std::__1::__compressed_pair_elem.3179" = type { %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* }
%"class.blink::protocol::DOMSnapshot::LayoutTreeNode" = type <{ %"class.crdtp::ProtocolObject.3180", i32, [4 x i8], %"class.std::__1::unique_ptr.3183", %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::PtrMaybe.3192", %"class.crdtp::detail::ValueMaybe.3144", %"class.crdtp::detail::ValueMaybe.3144", %"class.crdtp::detail::ValueMaybe.3135", [6 x i8] }>
%"class.crdtp::ProtocolObject.3180" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3183" = type { %"class.std::__1::__compressed_pair.3184" }
%"class.std::__1::__compressed_pair.3184" = type { %"struct.std::__1::__compressed_pair_elem.3185" }
%"struct.std::__1::__compressed_pair_elem.3185" = type { %"class.blink::protocol::DOM::Rect"* }
%"class.blink::protocol::DOM::Rect" = type { %"class.crdtp::ProtocolObject.3186", double, double, double, double }
%"class.crdtp::ProtocolObject.3186" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3192" = type { %"class.std::__1::unique_ptr.3193" }
%"class.std::__1::unique_ptr.3193" = type { %"class.std::__1::__compressed_pair.3194" }
%"class.std::__1::__compressed_pair.3194" = type { %"struct.std::__1::__compressed_pair_elem.3195" }
%"struct.std::__1::__compressed_pair_elem.3195" = type { %"class.std::__1::vector.3196"* }
%"class.std::__1::vector.3196" = type { %"class.std::__1::__vector_base.3197" }
%"class.std::__1::__vector_base.3197" = type { %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::__compressed_pair.3207" }
%"class.std::__1::unique_ptr.3198" = type { %"class.std::__1::__compressed_pair.3199" }
%"class.std::__1::__compressed_pair.3199" = type { %"struct.std::__1::__compressed_pair_elem.3200" }
%"struct.std::__1::__compressed_pair_elem.3200" = type { %"class.blink::protocol::DOMSnapshot::InlineTextBox"* }
%"class.blink::protocol::DOMSnapshot::InlineTextBox" = type { %"class.crdtp::ProtocolObject.3201", %"class.std::__1::unique_ptr.3183", i32, i32 }
%"class.crdtp::ProtocolObject.3201" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3207" = type { %"struct.std::__1::__compressed_pair_elem.3208" }
%"struct.std::__1::__compressed_pair_elem.3208" = type { %"class.std::__1::unique_ptr.3198"* }
%"class.std::__1::__compressed_pair.3218" = type { %"struct.std::__1::__compressed_pair_elem.3219" }
%"struct.std::__1::__compressed_pair_elem.3219" = type { %"class.std::__1::unique_ptr.3177"* }
%"class.std::__1::unique_ptr.2759" = type { %"class.std::__1::__compressed_pair.2760" }
%"class.std::__1::__compressed_pair.2760" = type { %"struct.std::__1::__compressed_pair_elem.2761" }
%"struct.std::__1::__compressed_pair_elem.2761" = type { %"class.std::__1::vector.2762"* }
%"class.std::__1::vector.2762" = type { %"class.std::__1::__vector_base.3223" }
%"class.std::__1::__vector_base.3223" = type { %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::__compressed_pair.3233" }
%"class.std::__1::unique_ptr.3224" = type { %"class.std::__1::__compressed_pair.3225" }
%"class.std::__1::__compressed_pair.3225" = type { %"struct.std::__1::__compressed_pair_elem.3226" }
%"struct.std::__1::__compressed_pair_elem.3226" = type { %"class.blink::protocol::DOMSnapshot::ComputedStyle"* }
%"class.blink::protocol::DOMSnapshot::ComputedStyle" = type { %"class.crdtp::ProtocolObject.3227", %"class.std::__1::unique_ptr.3137" }
%"class.crdtp::ProtocolObject.3227" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3233" = type { %"struct.std::__1::__compressed_pair_elem.3234" }
%"struct.std::__1::__compressed_pair_elem.3234" = type { %"class.std::__1::unique_ptr.3224"* }
%"class.std::__1::unique_ptr.3238" = type { %"class.std::__1::__compressed_pair.3239" }
%"class.std::__1::__compressed_pair.3239" = type { %"struct.std::__1::__compressed_pair_elem.3240" }
%"struct.std::__1::__compressed_pair_elem.3240" = type { %"class.WTF::HashMap.3241"* }
%"class.WTF::HashMap.3241" = type { %"class.WTF::HashTable.3242" }
%"class.WTF::HashTable.3242" = type <{ %"struct.WTF::KeyValuePair.3245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3245" = type <{ %"class.WTF::Vector.630", i32, [4 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.std::__1::unique_ptr.3249" = type { %"class.std::__1::__compressed_pair.3250" }
%"class.std::__1::__compressed_pair.3250" = type { %"struct.std::__1::__compressed_pair_elem.3251" }
%"struct.std::__1::__compressed_pair_elem.3251" = type { %"class.WTF::Vector.3252"* }
%"class.WTF::Vector.3252" = type { %"class.WTF::VectorBuffer.3253" }
%"class.WTF::VectorBuffer.3253" = type { %"class.WTF::VectorBufferBase.3254" }
%"class.WTF::VectorBufferBase.3254" = type { %"struct.std::__1::pair.3255"*, i32, i32 }
%"struct.std::__1::pair.3255" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.WTF::HashMap.2913"* }
%"class.WTF::HashMap.2913" = type { %"class.WTF::HashTable.3119" }
%"class.WTF::HashTable.3119" = type <{ %"struct.WTF::KeyValuePair.3122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3122" = type <{ %"class.blink::PaintLayer"*, i32, [4 x i8] }>
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.3051", %"class.blink::Persistent.3057", %"class.std::__1::unique_ptr.3081", %"class.blink::CullRect", %"class.std::__1::unique_ptr.3097" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1759", [4 x i8] }>
%"class.WTF::RefCounted.1759" = type { %"class.base::RefCounted.1760" }
%"class.base::RefCounted.1760" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3535 }
%class.scoped_refptr.3535 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3536", %"class.WTF::Vector.630", %"class.WTF::Vector.3538", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3536" = type { %"class.base::RefCounted.3537" }
%"class.base::RefCounted.3537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3538" = type { %"class.WTF::VectorBuffer.3539" }
%"class.WTF::VectorBuffer.3539" = type { %"class.WTF::VectorBufferBase.3540" }
%"class.WTF::VectorBufferBase.3540" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3541 }
%union.anon.3541 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1459", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1464", %"class.blink::Member.1471", %"class.std::__1::unique_ptr.1473", %"class.blink::Member.1479", i8, i8, %"class.WTF::String", %"class.blink::Member.1481", i8, [7 x i8], %"class.blink::HeapHashMap.1483", %"class.blink::HeapObserverSet", %"class.blink::Member.1497", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1499", i32, i8, i8, %"class.blink::WeakMember.1501", %"class.blink::Member.1502" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1526", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1593", i32, i8, [3 x i8], %"class.blink::HeapVector.1595", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1603", %"class.blink::Member.1605", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1614", %"class.blink::Member.1737", %"class.blink::Member.1739", i8, [7 x i8] }>
%"class.blink::Supplementable.1526" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1527" }
%"class.blink::HeapHashMap.1527" = type { %"class.WTF::HashMap.1530" }
%"class.WTF::HashMap.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"struct.WTF::KeyValuePair.1533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1533" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1542" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1534" }
%"class.blink::HeapObserverSet.1534" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1535" }
%"class.blink::HeapHashSet.1535" = type { %"class.WTF::HashSet.1538" }
%"class.WTF::HashSet.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"class.blink::WeakMember.1541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1541" = type opaque
%"class.blink::Supplementable.1542" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1543" }
%"class.blink::HeapHashMap.1543" = type { %"class.WTF::HashMap.1546" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1549" = type { i8*, %"class.blink::Member.3445" }
%"class.blink::Member.3445" = type { %"class.blink::MemberBase.3446" }
%"class.blink::MemberBase.3446" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3447" }
%"class.blink::Member.3447" = type { %"class.blink::MemberBase.3448" }
%"class.blink::MemberBase.3448" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1550, %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1583", %"class.std::__1::unique_ptr.1583", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1589", i32, i32 }
%class.scoped_refptr.1550 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1551", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1553", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1558 }
%"class.WTF::RefCounted.1551" = type { %"class.base::RefCounted.1552" }
%"class.base::RefCounted.1552" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1553" = type { %"class.absl::optional_internal::optional_data.1554" }
%"class.absl::optional_internal::optional_data.1554" = type { %"class.absl::optional_internal::optional_data_base.1555" }
%"class.absl::optional_internal::optional_data_base.1555" = type { %"class.absl::optional_internal::optional_data_dtor_base.1556" }
%"class.absl::optional_internal::optional_data_dtor_base.1556" = type { i8, %union.anon.1557 }
%union.anon.1557 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1558 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1570", %"class.std::__1::map.1579"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1553" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1562", %"class.std::__1::__compressed_pair.1567" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1570" = type { %"class.std::__1::__tree.1571" }
%"class.std::__1::__tree.1571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1572", %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1579" = type opaque
%"class.std::__1::unique_ptr.1583" = type { %"class.std::__1::__compressed_pair.1584" }
%"class.std::__1::__compressed_pair.1584" = type { %"struct.std::__1::__compressed_pair_elem.1585" }
%"struct.std::__1::__compressed_pair_elem.1585" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1595" = type { %"class.WTF::Vector.1598" }
%"class.WTF::Vector.1598" = type { %"class.WTF::VectorBuffer.1599" }
%"class.WTF::VectorBuffer.1599" = type { %"class.WTF::VectorBufferBase.1600" }
%"class.WTF::VectorBufferBase.1600" = type { %"class.blink::Member.1601"*, i32, i32 }
%"class.blink::Member.1601" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1607", i32, i32 }
%"class.blink::HeapHashMap.1607" = type { %"class.WTF::HashMap.1610" }
%"class.WTF::HashMap.1610" = type { %"class.WTF::HashTable.1611" }
%"class.WTF::HashTable.1611" = type <{ %"struct.WTF::KeyValuePair.1613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1613" = type opaque
%"class.std::__1::unique_ptr.1614" = type { %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1616" }
%"struct.std::__1::__compressed_pair_elem.1616" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1617" }
%"class.std::__1::unique_ptr.1617" = type { %"class.std::__1::__compressed_pair.1618" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.1619" }
%"struct.std::__1::__compressed_pair_elem.1619" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1620" }
%"class.WTF::Vector.1620" = type { %"class.WTF::VectorBuffer.1621" }
%"class.WTF::VectorBuffer.1621" = type { %"class.WTF::VectorBufferBase.1622" }
%"class.WTF::VectorBufferBase.1622" = type { %"class.mojo::StructPtr.1623"*, i32, i32 }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1627", %"class.WTF::HashMap.1634", %"class.WTF::HashMap.1639", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1644", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1627" = type { %"class.std::__1::unique_ptr.1628" }
%"class.std::__1::unique_ptr.1628" = type { %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"struct.WTF::KeyValuePair.1638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1638" = type opaque
%"class.WTF::HashMap.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"struct.WTF::KeyValuePair.1643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1643" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1644" = type { %"class.std::__1::unique_ptr.1645" }
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1728" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1659", i32 }>
%"class.std::__1::unique_ptr.1659" = type { %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.1661" }
%"struct.std::__1::__compressed_pair_elem.1661" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1662", %"class.absl::optional.1663", %"class.absl::optional.1668", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1681", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1703", %"class.std::__1::map.1714", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1723", i8, %class.scoped_refptr.1673, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1724" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1662" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1663" = type { %"class.absl::optional_internal::optional_data.1664" }
%"class.absl::optional_internal::optional_data.1664" = type { %"class.absl::optional_internal::optional_data_base.1665" }
%"class.absl::optional_internal::optional_data_base.1665" = type { %"class.absl::optional_internal::optional_data_dtor_base.1666" }
%"class.absl::optional_internal::optional_data_dtor_base.1666" = type { i8, %union.anon.1667 }
%union.anon.1667 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1668" = type { %"class.absl::optional_internal::optional_data.1669" }
%"class.absl::optional_internal::optional_data.1669" = type { %"class.absl::optional_internal::optional_data_base.1670" }
%"class.absl::optional_internal::optional_data_base.1670" = type { %"class.absl::optional_internal::optional_data_dtor_base.1671" }
%"class.absl::optional_internal::optional_data_dtor_base.1671" = type { i8, %union.anon.1672 }
%union.anon.1672 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1673, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1674" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1674" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1679 }
%class.scoped_refptr.1679 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1751", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1673, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1751" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1680 }
%class.scoped_refptr.1680 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1684", %class.scoped_refptr.1685 }
%"class.base::RepeatingCallback.1684" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1685 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1686", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1686" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1690", %"class.std::__1::unique_ptr.1696", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1702" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1702" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1703" = type { %"class.std::__1::__tree.1704" }
%"class.std::__1::__tree.1704" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1705", %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1714" = type { %"class.std::__1::__tree.1715" }
%"class.std::__1::__tree.1715" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1716", %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1723" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1673 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1724" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1728" = type { %"class.std::__1::__compressed_pair.1729" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.1730" }
%"struct.std::__1::__compressed_pair_elem.1730" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1605", i8, [7 x i8], %"class.WTF::Vector.1620", %"class.blink::HeapVector.1743", i8, [7 x i8], %"class.WTF::HashSet.1589", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1743" = type { %"class.WTF::Vector.1746" }
%"class.WTF::Vector.1746" = type { %"class.WTF::VectorBuffer.1747" }
%"class.WTF::VectorBuffer.1747" = type { %"class.WTF::VectorBufferBase.1748" }
%"class.WTF::VectorBufferBase.1748" = type { %"class.blink::Member.1749"*, i32, i32 }
%"class.blink::Member.1749" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type { %"class.blink::Node", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1517", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1517" = type { %"class.WTF::Vector.1520" }
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.1522" }
%"class.WTF::VectorBufferBase.1522" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3513 }
%class.scoped_refptr.3513 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3523" }
%"class.blink::Member.3523" = type { %"class.blink::MemberBase.3524" }
%"class.blink::MemberBase.3524" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3519" }
%"class.blink::MemberBase.3519" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3520" }
%"class.blink::MemberBase.3520" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3521" }
%"class.blink::MemberBase.3521" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3522" }
%"class.blink::MemberBase.3522" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3514", %"class.WTF::Vector.3514" }
%"class.WTF::Vector.3514" = type { %"class.WTF::VectorBuffer.3515" }
%"class.WTF::VectorBuffer.3515" = type { %"class.WTF::VectorBufferBase.3516" }
%"class.WTF::VectorBufferBase.3516" = type { %class.scoped_refptr.3513*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1862", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2082", %"class.std::__1::unique_ptr.2088", %"class.std::__1::unique_ptr.2094", %class.scoped_refptr.1858, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2100", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1821", %"class.std::__1::unique_ptr.1831" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1777, %"class.WTF::Vector.1778", %"class.std::__1::unique_ptr.1783", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1804, %"class.blink::Persistent.1805" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1777 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1778" = type { %"class.WTF::VectorBuffer.1779" }
%"class.WTF::VectorBuffer.1779" = type { %"class.WTF::VectorBufferBase.1780", [8 x i8] }
%"class.WTF::VectorBufferBase.1780" = type { %class.scoped_refptr.1777*, i32, i32 }
%"class.std::__1::unique_ptr.1783" = type { %"class.std::__1::__compressed_pair.1784" }
%"class.std::__1::__compressed_pair.1784" = type { %"struct.std::__1::__compressed_pair_elem.1785" }
%"struct.std::__1::__compressed_pair_elem.1785" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1786", %"class.absl::optional.1791", %"class.absl::optional.1796" }
%"class.absl::optional.1786" = type { %"class.absl::optional_internal::optional_data.1787" }
%"class.absl::optional_internal::optional_data.1787" = type { %"class.absl::optional_internal::optional_data_base.1788" }
%"class.absl::optional_internal::optional_data_base.1788" = type { %"class.absl::optional_internal::optional_data_dtor_base.1789" }
%"class.absl::optional_internal::optional_data_dtor_base.1789" = type { i8, %union.anon.1790 }
%union.anon.1790 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1791" = type { %"class.absl::optional_internal::optional_data.1792" }
%"class.absl::optional_internal::optional_data.1792" = type { %"class.absl::optional_internal::optional_data_base.1793" }
%"class.absl::optional_internal::optional_data_base.1793" = type { %"class.absl::optional_internal::optional_data_dtor_base.1794" }
%"class.absl::optional_internal::optional_data_dtor_base.1794" = type { i8, [3 x i8], %union.anon.1795 }
%union.anon.1795 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1796" = type { %"class.absl::optional_internal::optional_data.1797" }
%"class.absl::optional_internal::optional_data.1797" = type { %"class.absl::optional_internal::optional_data_base.1798" }
%"class.absl::optional_internal::optional_data_base.1798" = type { %"class.absl::optional_internal::optional_data_dtor_base.1799" }
%"class.absl::optional_internal::optional_data_dtor_base.1799" = type { i8, %union.anon.1800 }
%union.anon.1800 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1804 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1761", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1764", %"class.absl::optional.1769" }
%"class.absl::optional.1764" = type { %"class.absl::optional_internal::optional_data.1765" }
%"class.absl::optional_internal::optional_data.1765" = type { %"class.absl::optional_internal::optional_data_base.1766" }
%"class.absl::optional_internal::optional_data_base.1766" = type { %"class.absl::optional_internal::optional_data_dtor_base.1767" }
%"class.absl::optional_internal::optional_data_dtor_base.1767" = type { i8, %union.anon.1768 }
%union.anon.1768 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1769" = type { %"class.absl::optional_internal::optional_data.1770" }
%"class.absl::optional_internal::optional_data.1770" = type { %"class.absl::optional_internal::optional_data_base.1771" }
%"class.absl::optional_internal::optional_data_base.1771" = type { %"class.absl::optional_internal::optional_data_dtor_base.1772" }
%"class.absl::optional_internal::optional_data_dtor_base.1772" = type { i8, %union.anon.1773 }
%union.anon.1773 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1805" = type { %"class.blink::PersistentBase.1806" }
%"class.blink::PersistentBase.1806" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1809", %"struct.blink::PhysicalRect", %"class.blink::Member.1819" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.WTF::HashSet.1812"* }
%"class.WTF::HashSet.1812" = type { %"class.WTF::HashTable.1813" }
%"class.WTF::HashTable.1813" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1821" = type { %"class.blink::PersistentBase.1822" }
%"class.blink::PersistentBase.1822" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1825", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1825" = type { %"class.std::__1::__compressed_pair.1826" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.1827" }
%"struct.std::__1::__compressed_pair_elem.1827" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1831" = type { %"class.std::__1::__compressed_pair.1832" }
%"class.std::__1::__compressed_pair.1832" = type { %"struct.std::__1::__compressed_pair_elem.1833" }
%"struct.std::__1::__compressed_pair_elem.1833" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1834", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1834" = type { %"class.WTF::HashTable.1837", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1837" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1840", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1840" = type { %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1843, %"class.std::__1::unique_ptr.1844", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1761", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1843 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.3049", i16, %class.scoped_refptr.1843 }
%"class.WTF::ThreadSafeRefCounted.3049" = type { %"class.base::RefCountedThreadSafe.3050" }
%"class.base::RefCountedThreadSafe.3050" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"class.WTF::Vector.1847"* }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1858, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1866", %"class.blink::Member.1871", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1873", i8, i32, %"class.blink::Color", %"class.absl::optional.1876", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1881", %"class.blink::Member.1883", %"class.blink::Member.1883", %"class.std::__1::unique_ptr.1886", i32, [4 x i8], %"class.WTF::HashSet.1889", %"class.blink::Member.1896", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1898", %"class.blink::HeapHashSet.1905", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1913", i8, %"class.blink::Member.1919", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1931", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1945", i8, %"class.std::__1::unique_ptr.1951", %"class.std::__1::unique_ptr.2032", %"class.WTF::Vector.2038", i32, %class.scoped_refptr.2043, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2044", %"class.blink::Member.2046", %"class.blink::Member.2048", %"class.blink::HeapHashSet.2050", %"class.blink::HeapHashSet.2057", %"class.std::__1::unique_ptr.2064", %"class.std::__1::unique_ptr.2071", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1866" = type { %"class.WTF::HashTable.1867" }
%"class.WTF::HashTable.1867" = type <{ %class.scoped_refptr.1870*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1870 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2300", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2308", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2322", %"class.blink::FrameLoader", %"class.blink::Member.2343", %"class.blink::Member.343", %"class.blink::Member.2344", %"class.blink::Member.2346", %"class.blink::Member.2362", %"class.blink::Member.2364", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2366", %class.scoped_refptr.2590, %"class.blink::Member.2591", %"class.blink::Member.2593", %"class.blink::Member.2595", %"class.blink::Member.2597", %"class.blink::Member.2599", %"class.blink::Member.2603", %"class.blink::Member.2605", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2609", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2615", %"class.std::__1::unique_ptr.2616", %"class.absl::optional.2288", i32, [4 x i8], %"class.std::__1::unique_ptr.2622", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2630", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2635", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2640", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2643", %"class.blink::Member.2645", %"class.blink::Member.2647", %"class.blink::Member.2649", %"class.mojo::StructPtr.2652", %"class.blink::Member.2661", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2663", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2133", %"class.blink::Member.2135", %"class.blink::Member.2137", i8, i32, i8, i32, %"class.blink::Member.2270", %"class.blink::Member.2160", %"class.blink::FrameLifecycle", %"class.blink::Member.2131", %"class.blink::Member.2131", %"class.blink::Member.2131", %"class.blink::Member.2131", %"class.blink::Member.2131", %"class.blink::Member.2131", %"class.blink::Member.1871", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2281", i8, %"class.base::UnguessableToken", %"class.absl::optional.2283", %"class.absl::optional.2288", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2131", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2131", %"class.blink::Member.2160", %"class.blink::Member.2162", %"class.blink::Member.2164", i8, %"class.WTF::Vector.2166" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2153" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2141" }
%"class.blink::HeapVector.2141" = type { %"class.WTF::Vector.2144" }
%"class.WTF::Vector.2144" = type { %"class.WTF::VectorBuffer.2145" }
%"class.WTF::VectorBuffer.2145" = type { %"class.WTF::VectorBufferBase.2146", [32 x i8] }
%"class.WTF::VectorBufferBase.2146" = type { %"struct.std::__1::pair.2147"*, i32, i32 }
%"struct.std::__1::pair.2147" = type { %"class.WTF::AtomicString", %"class.blink::Member.2148" }
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::HeapVector.2150"* }
%"class.blink::HeapVector.2150" = type opaque
%"class.std::__1::unique_ptr.2153" = type { %"class.std::__1::__compressed_pair.2154" }
%"class.std::__1::__compressed_pair.2154" = type { %"struct.std::__1::__compressed_pair_elem.2155" }
%"struct.std::__1::__compressed_pair_elem.2155" = type { %"class.WTF::Vector.2156"* }
%"class.WTF::Vector.2156" = type opaque
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2166" = type { %"class.WTF::VectorBuffer.2167" }
%"class.WTF::VectorBuffer.2167" = type { %"class.WTF::VectorBufferBase.2168" }
%"class.WTF::VectorBufferBase.2168" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2262" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2169, %"class.std::__1::unique_ptr.1659", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1673, i32 }>
%class.scoped_refptr.2169 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1673, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2228", %"class.absl::optional.2233", %"class.absl::optional.2186", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2253", i8, [7 x i8], %class.scoped_refptr.1673, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1686" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1673, %"class.std::__1::unique_ptr.2170", %"class.absl::optional.2180", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2186", %"class.std::__1::unique_ptr.2191", i8, i64, %class.scoped_refptr.2225, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2226", %"class.base::WeakPtrFactory.2227" }
%"class.std::__1::unique_ptr.2170" = type { %"class.std::__1::__compressed_pair.2171" }
%"class.std::__1::__compressed_pair.2171" = type { %"struct.std::__1::__compressed_pair_elem.2172" }
%"struct.std::__1::__compressed_pair_elem.2172" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1673, i8, %"class.mojo::ScopedHandleBase.2173", %class.scoped_refptr.2174, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2175", i8*, %"class.base::WeakPtrFactory.2176" }
%"class.mojo::ScopedHandleBase.2173" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2174 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2175" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2180" = type { %"class.absl::optional_internal::optional_data.2181" }
%"class.absl::optional_internal::optional_data.2181" = type { %"class.absl::optional_internal::optional_data_base.2182" }
%"class.absl::optional_internal::optional_data_base.2182" = type { %"class.absl::optional_internal::optional_data_dtor_base.2183" }
%"class.absl::optional_internal::optional_data_dtor_base.2183" = type { i8, %union.anon.2184 }
%union.anon.2184 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2185", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2185" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2191" = type { %"class.std::__1::__compressed_pair.2192" }
%"class.std::__1::__compressed_pair.2192" = type { %"struct.std::__1::__compressed_pair_elem.2193" }
%"struct.std::__1::__compressed_pair_elem.2193" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2194", i8, i64, %class.scoped_refptr.2195, %class.scoped_refptr.2220 }
%"class.base::RepeatingCallback.2194" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2195 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2196", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2198", %"class.std::__1::map.2209", i8, [7 x i8] }>
%"class.base::RefCounted.2196" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2197 }
%class.scoped_refptr.2197 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2198" = type { %"class.std::__1::__tree.2199" }
%"class.std::__1::__tree.2199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2200", %"class.std::__1::__compressed_pair.2204" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2204" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2209" = type { %"class.std::__1::__tree.2210" }
%"class.std::__1::__tree.2210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2211", %"class.std::__1::__compressed_pair.2215" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2220 = type { %"class.base::RefCountedData.2221"* }
%"class.base::RefCountedData.2221" = type opaque
%class.scoped_refptr.2225 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2226" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2227" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2228" = type { %"class.absl::optional_internal::optional_data.2229" }
%"class.absl::optional_internal::optional_data.2229" = type { %"class.absl::optional_internal::optional_data_base.2230" }
%"class.absl::optional_internal::optional_data_base.2230" = type { %"class.absl::optional_internal::optional_data_dtor_base.2231" }
%"class.absl::optional_internal::optional_data_dtor_base.2231" = type { i8, %union.anon.2232 }
%union.anon.2232 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2233" = type { %"class.absl::optional_internal::optional_data.2234" }
%"class.absl::optional_internal::optional_data.2234" = type { %"class.absl::optional_internal::optional_data_base.2235" }
%"class.absl::optional_internal::optional_data_base.2235" = type { %"class.absl::optional_internal::optional_data_dtor_base.2236" }
%"class.absl::optional_internal::optional_data_dtor_base.2236" = type { i8, [7 x i8], %union.anon.2237 }
%union.anon.2237 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2186" = type { %"class.absl::optional_internal::optional_data.2187" }
%"class.absl::optional_internal::optional_data.2187" = type { %"class.absl::optional_internal::optional_data_base.2188" }
%"class.absl::optional_internal::optional_data_base.2188" = type { %"class.absl::optional_internal::optional_data_dtor_base.2189" }
%"class.absl::optional_internal::optional_data_dtor_base.2189" = type { i8, %union.anon.2190 }
%union.anon.2190 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2238 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2238 = type { %"class.std::__1::map.2241" }
%"class.std::__1::map.2241" = type { %"class.std::__1::__tree.2242" }
%"class.std::__1::__tree.2242" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2243", %"class.std::__1::__compressed_pair.2247" }
%"class.std::__1::__compressed_pair.2243" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2247" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2252"*, i64 }
%"class.std::__1::unique_ptr.2252" = type opaque
%"class.std::__1::map.2253" = type { %"class.std::__1::__tree.2254" }
%"class.std::__1::__tree.2254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2255", %"class.std::__1::__compressed_pair.2259" }
%"class.std::__1::__compressed_pair.2255" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.2259" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2262" = type { %"class.std::__1::__compressed_pair.2263" }
%"class.std::__1::__compressed_pair.2263" = type { %"struct.std::__1::__compressed_pair_elem.2264" }
%"struct.std::__1::__compressed_pair_elem.2264" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2270" = type { %"class.blink::MemberBase.2271" }
%"class.blink::MemberBase.2271" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2131", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2272" }
%"class.base::internal::flat_tree.2272" = type { %"class.std::__1::vector.2273" }
%"class.std::__1::vector.2273" = type { %"class.std::__1::__vector_base.2274" }
%"class.std::__1::__vector_base.2274" = type { %"struct.std::__1::pair.2275"*, %"struct.std::__1::pair.2275"*, %"class.std::__1::__compressed_pair.2276" }
%"struct.std::__1::pair.2275" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2276" = type { %"struct.std::__1::__compressed_pair_elem.2277" }
%"struct.std::__1::__compressed_pair_elem.2277" = type { %"struct.std::__1::pair.2275"* }
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2283" = type { %"class.absl::optional_internal::optional_data.2284" }
%"class.absl::optional_internal::optional_data.2284" = type { %"class.absl::optional_internal::optional_data_base.2285" }
%"class.absl::optional_internal::optional_data_base.2285" = type { %"class.absl::optional_internal::optional_data_dtor_base.2286" }
%"class.absl::optional_internal::optional_data_dtor_base.2286" = type { i8, %union.anon.2287 }
%union.anon.2287 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2293" }
%"class.blink::HeapHashSet.2293" = type { %"class.WTF::HashSet.2296" }
%"class.WTF::HashSet.2296" = type { %"class.WTF::HashTable.2297" }
%"class.WTF::HashTable.2297" = type <{ %"class.blink::WeakMember.2299"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2299" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2300" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2301" }
%"class.blink::HeapHashMap.2301" = type { %"class.WTF::HashMap.2304" }
%"class.WTF::HashMap.2304" = type { %"class.WTF::HashTable.2305" }
%"class.WTF::HashTable.2305" = type <{ %"struct.WTF::KeyValuePair.2307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2307" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2308" = type { %"class.std::__1::__compressed_pair.2309" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.2310" }
%"struct.std::__1::__compressed_pair_elem.2310" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2311", %"class.base::WeakPtrFactory.2316" }
%"class.WTF::HashMap.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"struct.WTF::KeyValuePair.2315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2315" = type opaque
%"class.base::WeakPtrFactory.2316" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2320" }
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3451" }
%"class.blink::WeakMember.3451" = type { %"class.blink::MemberBase.3452" }
%"class.blink::MemberBase.3452" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3453", i64, %"class.std::__1::map.3454", i8*, i64, %"class.base::WeakPtrFactory.3463" }
%"class.base::RepeatingCallback.3453" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3454" = type { %"class.std::__1::__tree.3455" }
%"class.std::__1::__tree.3455" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3456", %"class.std::__1::__compressed_pair.3460" }
%"class.std::__1::__compressed_pair.3456" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"class.std::__1::__compressed_pair.3460" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3463" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2322" = type { %"class.WTF::HashSet.2325" }
%"class.WTF::HashSet.2325" = type { %"class.WTF::HashTable.2326" }
%"class.WTF::HashTable.2326" = type <{ %"class.blink::WeakMember.2328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2328" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1871", %"class.blink::Member.2329", %"class.blink::Member.2331", %"class.std::__1::unique_ptr.2333", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2339" }
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.2330" }
%"class.blink::MemberBase.2330" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2333" = type { %"class.std::__1::__compressed_pair.2334" }
%"class.std::__1::__compressed_pair.2334" = type { %"struct.std::__1::__compressed_pair_elem.2335" }
%"struct.std::__1::__compressed_pair_elem.2335" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::HashSet.2339" = type { %"class.WTF::HashTable.2340" }
%"class.WTF::HashTable.2340" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2343" = type { %"class.blink::MemberBase.1875" }
%"class.blink::MemberBase.1875" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2346" = type { %"class.blink::MemberBase.2347" }
%"class.blink::MemberBase.2347" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1871", %"class.blink::Member.2350", %"class.blink::Member.2352", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2354", %"class.blink::Member.2360" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2354" = type { %"class.std::__1::__compressed_pair.2355" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2370", %"class.blink::HeapListHashSet.2381", %"class.blink::HeapListHashSet.2392", %"class.blink::HeapListHashSet.2403", %"class.blink::HeapListHashSet.2414", %"class.blink::HeapListHashSet.2425", %"class.blink::HeapListHashSet.2436", %"class.blink::HeapListHashSet.2447", %"class.blink::HeapListHashSet.2458", %"class.blink::HeapListHashSet.2469", %"class.blink::HeapListHashSet.2480", %"class.blink::HeapListHashSet.2491", %"class.blink::HeapListHashSet.2502", %"class.blink::HeapListHashSet.2513", %"class.blink::HeapListHashSet.2524", %"class.blink::HeapListHashSet.2535", %"class.blink::HeapListHashSet.2546", %"class.blink::HeapListHashSet.2557", %"class.blink::HeapListHashSet.2568", %"class.blink::HeapListHashSet.2579" }
%"class.blink::HeapListHashSet.2370" = type { %"class.WTF::ListHashSet.base.2380", [7 x i8] }
%"class.WTF::ListHashSet.base.2380" = type <{ %"class.WTF::HashTable.2375", %"class.blink::Member.2377", %"class.blink::Member.2377", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2375" = type <{ %"class.blink::Member.2377"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::HeapListHashSetNode.2379"* }
%"class.blink::HeapListHashSetNode.2379" = type { %"class.blink::Member.2593", %"class.blink::Member.2377", %"class.blink::Member.2377" }
%"class.blink::HeapListHashSet.2381" = type { %"class.WTF::ListHashSet.base.2391", [7 x i8] }
%"class.WTF::ListHashSet.base.2391" = type <{ %"class.WTF::HashTable.2386", %"class.blink::Member.2388", %"class.blink::Member.2388", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2386" = type <{ %"class.blink::Member.2388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2388" = type { %"class.blink::MemberBase.2389" }
%"class.blink::MemberBase.2389" = type { %"class.blink::HeapListHashSetNode.2390"* }
%"class.blink::HeapListHashSetNode.2390" = type { %"class.blink::Member.3045", %"class.blink::Member.2388", %"class.blink::Member.2388" }
%"class.blink::Member.3045" = type { %"class.blink::MemberBase.3046" }
%"class.blink::MemberBase.3046" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2392" = type { %"class.WTF::ListHashSet.base.2402", [7 x i8] }
%"class.WTF::ListHashSet.base.2402" = type <{ %"class.WTF::HashTable.2397", %"class.blink::Member.2399", %"class.blink::Member.2399", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2397" = type <{ %"class.blink::Member.2399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::HeapListHashSetNode.2401"* }
%"class.blink::HeapListHashSetNode.2401" = type { %"class.blink::Member.3041", %"class.blink::Member.2399", %"class.blink::Member.2399" }
%"class.blink::Member.3041" = type { %"class.blink::MemberBase.3042" }
%"class.blink::MemberBase.3042" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2403" = type { %"class.WTF::ListHashSet.base.2413", [7 x i8] }
%"class.WTF::ListHashSet.base.2413" = type <{ %"class.WTF::HashTable.2408", %"class.blink::Member.2410", %"class.blink::Member.2410", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2408" = type <{ %"class.blink::Member.2410"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::HeapListHashSetNode.2412"* }
%"class.blink::HeapListHashSetNode.2412" = type { %"class.blink::Member.3037", %"class.blink::Member.2410", %"class.blink::Member.2410" }
%"class.blink::Member.3037" = type { %"class.blink::MemberBase.3038" }
%"class.blink::MemberBase.3038" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2414" = type { %"class.WTF::ListHashSet.base.2424", [7 x i8] }
%"class.WTF::ListHashSet.base.2424" = type <{ %"class.WTF::HashTable.2419", %"class.blink::Member.2421", %"class.blink::Member.2421", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2419" = type <{ %"class.blink::Member.2421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::HeapListHashSetNode.2423"* }
%"class.blink::HeapListHashSetNode.2423" = type { %"class.blink::Member.3033", %"class.blink::Member.2421", %"class.blink::Member.2421" }
%"class.blink::Member.3033" = type { %"class.blink::MemberBase.3034" }
%"class.blink::MemberBase.3034" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2425" = type { %"class.WTF::ListHashSet.base.2435", [7 x i8] }
%"class.WTF::ListHashSet.base.2435" = type <{ %"class.WTF::HashTable.2430", %"class.blink::Member.2432", %"class.blink::Member.2432", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2430" = type <{ %"class.blink::Member.2432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2432" = type { %"class.blink::MemberBase.2433" }
%"class.blink::MemberBase.2433" = type { %"class.blink::HeapListHashSetNode.2434"* }
%"class.blink::HeapListHashSetNode.2434" = type { %"class.blink::Member.3029", %"class.blink::Member.2432", %"class.blink::Member.2432" }
%"class.blink::Member.3029" = type { %"class.blink::MemberBase.3030" }
%"class.blink::MemberBase.3030" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2436" = type { %"class.WTF::ListHashSet.base.2446", [7 x i8] }
%"class.WTF::ListHashSet.base.2446" = type <{ %"class.WTF::HashTable.2441", %"class.blink::Member.2443", %"class.blink::Member.2443", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2441" = type <{ %"class.blink::Member.2443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2443" = type { %"class.blink::MemberBase.2444" }
%"class.blink::MemberBase.2444" = type { %"class.blink::HeapListHashSetNode.2445"* }
%"class.blink::HeapListHashSetNode.2445" = type { %"class.blink::Member.2942", %"class.blink::Member.2443", %"class.blink::Member.2443" }
%"class.blink::Member.2942" = type { %"class.blink::MemberBase.2943" }
%"class.blink::MemberBase.2943" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.2944", %"class.v8::Isolate"*, %"class.blink::Member.2931", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.2951", %"class.blink::Member.2958", %"class.blink::HeapVector.2961", %"class.blink::HeapHashMap.2968", %"class.blink::HeapHashMap.2975", %"class.blink::HeapHashMap.2982", %"class.WTF::HashSet.2989", %"class.WTF::HashSet.2989", %"class.WTF::HashMap.2993", i32, %"class.blink::Member.326", %"class.blink::HeapHashMap.2998", %"class.blink::Member.3005", %"class.blink::Member.3007", %"class.blink::Member.3009", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.2944" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.2366", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2945" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.2712" }
%"class.WTF::Vector.2712" = type { %"class.WTF::VectorBuffer.2713" }
%"class.WTF::VectorBuffer.2713" = type { %"class.WTF::VectorBufferBase.2714" }
%"class.WTF::VectorBufferBase.2714" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.2715", %"class.mojo::StructPtr.2715" }
%"class.mojo::StructPtr.2715" = type { %"class.std::__1::unique_ptr.2716" }
%"class.std::__1::unique_ptr.2716" = type { %"class.std::__1::__compressed_pair.2717" }
%"class.std::__1::__compressed_pair.2717" = type { %"struct.std::__1::__compressed_pair_elem.2718" }
%"struct.std::__1::__compressed_pair_elem.2718" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.2719" }
%"class.WTF::HashMap.2719" = type { %"class.WTF::HashTable.2720" }
%"class.WTF::HashTable.2720" = type <{ %"struct.WTF::KeyValuePair.2723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2723" = type { %"class.WTF::String", %"class.absl::optional.2724" }
%"class.absl::optional.2724" = type { %"class.absl::optional_internal::optional_data.2725" }
%"class.absl::optional_internal::optional_data.2725" = type { %"class.absl::optional_internal::optional_data_base.2726" }
%"class.absl::optional_internal::optional_data_base.2726" = type { %"class.absl::optional_internal::optional_data_dtor_base.2727" }
%"class.absl::optional_internal::optional_data_dtor_base.2727" = type { i8, %union.anon.2728 }
%union.anon.2728 = type { %"class.WTF::Vector.2729" }
%"class.WTF::Vector.2729" = type { %"class.WTF::VectorBuffer.2730" }
%"class.WTF::VectorBuffer.2730" = type { %"class.WTF::VectorBufferBase.2731" }
%"class.WTF::VectorBufferBase.2731" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2945" = type { %"class.std::__1::__compressed_pair.2946" }
%"class.std::__1::__compressed_pair.2946" = type { %"struct.std::__1::__compressed_pair_elem.2947" }
%"struct.std::__1::__compressed_pair_elem.2947" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.2931" = type { %"class.blink::MemberBase.2932" }
%"class.blink::MemberBase.2932" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::HeapHashSet.2951" = type { %"class.WTF::HashSet.2954" }
%"class.WTF::HashSet.2954" = type { %"class.WTF::HashTable.2955" }
%"class.WTF::HashTable.2955" = type <{ %"class.blink::Member.2957"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2957" = type opaque
%"class.blink::Member.2958" = type { %"class.blink::MemberBase.2959" }
%"class.blink::MemberBase.2959" = type { %"class.blink::HeapHashMap.2960"* }
%"class.blink::HeapHashMap.2960" = type opaque
%"class.blink::HeapVector.2961" = type { %"class.WTF::Vector.2964" }
%"class.WTF::Vector.2964" = type { %"class.WTF::VectorBuffer.2965" }
%"class.WTF::VectorBuffer.2965" = type { %"class.WTF::VectorBufferBase.2966" }
%"class.WTF::VectorBufferBase.2966" = type { %"class.blink::Member.2958"*, i32, i32 }
%"class.blink::HeapHashMap.2968" = type { %"class.WTF::HashMap.2971" }
%"class.WTF::HashMap.2971" = type { %"class.WTF::HashTable.2972" }
%"class.WTF::HashTable.2972" = type <{ %"struct.WTF::KeyValuePair.2974"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2974" = type opaque
%"class.blink::HeapHashMap.2975" = type { %"class.WTF::HashMap.2978" }
%"class.WTF::HashMap.2978" = type { %"class.WTF::HashTable.2979" }
%"class.WTF::HashTable.2979" = type <{ %"struct.WTF::KeyValuePair.2981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2981" = type opaque
%"class.blink::HeapHashMap.2982" = type { %"class.WTF::HashMap.2985" }
%"class.WTF::HashMap.2985" = type { %"class.WTF::HashTable.2986" }
%"class.WTF::HashTable.2986" = type <{ %"struct.WTF::KeyValuePair.2988"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2988" = type opaque
%"class.WTF::HashSet.2989" = type { %"class.WTF::HashTable.2990" }
%"class.WTF::HashTable.2990" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.2993" = type { %"class.WTF::HashTable.2994" }
%"class.WTF::HashTable.2994" = type <{ %"struct.WTF::KeyValuePair.2997"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2997" = type opaque
%"class.blink::HeapHashMap.2998" = type { %"class.WTF::HashMap.3001" }
%"class.WTF::HashMap.3001" = type { %"class.WTF::HashTable.3002" }
%"class.WTF::HashTable.3002" = type <{ %"struct.WTF::KeyValuePair.3004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3004" = type opaque
%"class.blink::Member.3005" = type { %"class.blink::MemberBase.3006" }
%"class.blink::MemberBase.3006" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.3007" = type { %"class.blink::MemberBase.3008" }
%"class.blink::MemberBase.3008" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.3009" = type { %"class.blink::MemberBase.3010" }
%"class.blink::MemberBase.3010" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::HeapListHashSet.2447" = type { %"class.WTF::ListHashSet.base.2457", [7 x i8] }
%"class.WTF::ListHashSet.base.2457" = type <{ %"class.WTF::HashTable.2452", %"class.blink::Member.2454", %"class.blink::Member.2454", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2452" = type <{ %"class.blink::Member.2454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::HeapListHashSetNode.2456"* }
%"class.blink::HeapListHashSetNode.2456" = type { %"class.blink::Member.2933", %"class.blink::Member.2454", %"class.blink::Member.2454" }
%"class.blink::Member.2933" = type { %"class.blink::MemberBase.2934" }
%"class.blink::MemberBase.2934" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::HeapListHashSet.2458" = type { %"class.WTF::ListHashSet.base.2468", [7 x i8] }
%"class.WTF::ListHashSet.base.2468" = type <{ %"class.WTF::HashTable.2463", %"class.blink::Member.2465", %"class.blink::Member.2465", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2463" = type <{ %"class.blink::Member.2465"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::HeapListHashSetNode.2467"* }
%"class.blink::HeapListHashSetNode.2467" = type { %"class.blink::Member.2708", %"class.blink::Member.2465", %"class.blink::Member.2465" }
%"class.blink::Member.2708" = type { %"class.blink::MemberBase.2709" }
%"class.blink::MemberBase.2709" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type { %"class.blink::InspectorBaseAgent", %"class.std::__1::unique_ptr.2745", %"class.std::__1::unique_ptr.2752", %"class.std::__1::unique_ptr.2759", %"class.std::__1::unique_ptr.2766", %"class.WTF::HashMap.2779", %"class.blink::HeapHashMap.2784", %"class.WTF::HashMap.2791", %"class.std::__1::unique_ptr.2796", %"class.std::__1::unique_ptr.2803", i8, i8, i8, %"class.std::__1::unique_ptr.2903", %"class.std::__1::unique_ptr.2910", %"class.std::__1::unique_ptr.2917", %"class.blink::HeapHashMap.2924", %"class.blink::Member.2931", %"class.blink::Member.2933", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOMSnapshot::Backend", %"class.blink::Member.2366", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2739" }
%"class.blink::protocol::DOMSnapshot::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2739" = type { %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { %"class.blink::protocol::DOMSnapshot::Frontend"* }
%"class.blink::protocol::DOMSnapshot::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.std::__1::unique_ptr.2766" = type { %"class.std::__1::__compressed_pair.2767" }
%"class.std::__1::__compressed_pair.2767" = type { %"struct.std::__1::__compressed_pair_elem.2768" }
%"struct.std::__1::__compressed_pair_elem.2768" = type { %"class.std::__1::vector.2769"* }
%"class.std::__1::vector.2769" = type { %"class.std::__1::__vector_base.2770" }
%"class.std::__1::__vector_base.2770" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2771" }
%"class.std::__1::__compressed_pair.2771" = type { %"struct.std::__1::__compressed_pair_elem.2772" }
%"struct.std::__1::__compressed_pair_elem.2772" = type { %"class.WTF::String"* }
%"class.WTF::HashMap.2779" = type { %"class.WTF::HashTable.2780" }
%"class.WTF::HashTable.2780" = type <{ %"struct.WTF::KeyValuePair.2783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2783" = type opaque
%"class.blink::HeapHashMap.2784" = type { %"class.WTF::HashMap.2787" }
%"class.WTF::HashMap.2787" = type { %"class.WTF::HashTable.2788" }
%"class.WTF::HashTable.2788" = type <{ %"struct.WTF::KeyValuePair.2790"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2790" = type opaque
%"class.WTF::HashMap.2791" = type { %"class.WTF::HashTable.2792" }
%"class.WTF::HashTable.2792" = type <{ %"struct.WTF::KeyValuePair.2795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2795" = type opaque
%"class.std::__1::unique_ptr.2796" = type { %"class.std::__1::__compressed_pair.2797" }
%"class.std::__1::__compressed_pair.2797" = type { %"struct.std::__1::__compressed_pair_elem.2798" }
%"struct.std::__1::__compressed_pair_elem.2798" = type { %"class.std::__1::vector.2799"* }
%"class.std::__1::vector.2799" = type opaque
%"class.std::__1::unique_ptr.2803" = type { %"class.std::__1::__compressed_pair.2804" }
%"class.std::__1::__compressed_pair.2804" = type { %"struct.std::__1::__compressed_pair_elem.2805" }
%"struct.std::__1::__compressed_pair_elem.2805" = type { %"class.blink::protocol::DOMSnapshot::DocumentSnapshot"* }
%"class.blink::protocol::DOMSnapshot::DocumentSnapshot" = type { %"class.crdtp::ProtocolObject", i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.2806", %"class.std::__1::unique_ptr.2866", %"class.std::__1::unique_ptr.2891", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2806" = type { %"class.std::__1::__compressed_pair.2807" }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.2808" }
%"struct.std::__1::__compressed_pair_elem.2808" = type { %"class.blink::protocol::DOMSnapshot::NodeTreeSnapshot"* }
%"class.blink::protocol::DOMSnapshot::NodeTreeSnapshot" = type { %"class.crdtp::ProtocolObject.2809", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2825", %"class.crdtp::detail::PtrMaybe.2833", %"class.crdtp::detail::PtrMaybe.2833", %"class.crdtp::detail::PtrMaybe.2843", %"class.crdtp::detail::PtrMaybe.2843", %"class.crdtp::detail::PtrMaybe.2853", %"class.crdtp::detail::PtrMaybe.2833", %"class.crdtp::detail::PtrMaybe.2843", %"class.crdtp::detail::PtrMaybe.2833", %"class.crdtp::detail::PtrMaybe.2833" }
%"class.crdtp::ProtocolObject.2809" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2825" = type { %"class.std::__1::unique_ptr.2826" }
%"class.std::__1::unique_ptr.2826" = type { %"class.std::__1::__compressed_pair.2827" }
%"class.std::__1::__compressed_pair.2827" = type { %"struct.std::__1::__compressed_pair_elem.2828" }
%"struct.std::__1::__compressed_pair_elem.2828" = type { %"class.std::__1::vector.2829"* }
%"class.std::__1::vector.2829" = type { %"class.std::__1::__vector_base.3433" }
%"class.std::__1::__vector_base.3433" = type { %"class.std::__1::unique_ptr.2812"*, %"class.std::__1::unique_ptr.2812"*, %"class.std::__1::__compressed_pair.3434" }
%"class.std::__1::__compressed_pair.3434" = type { %"struct.std::__1::__compressed_pair_elem.3435" }
%"struct.std::__1::__compressed_pair_elem.3435" = type { %"class.std::__1::unique_ptr.2812"* }
%"class.crdtp::detail::PtrMaybe.2853" = type { %"class.std::__1::unique_ptr.2854" }
%"class.std::__1::unique_ptr.2854" = type { %"class.std::__1::__compressed_pair.2855" }
%"class.std::__1::__compressed_pair.2855" = type { %"struct.std::__1::__compressed_pair_elem.2856" }
%"struct.std::__1::__compressed_pair_elem.2856" = type { %"class.blink::protocol::DOMSnapshot::RareIntegerData"* }
%"class.blink::protocol::DOMSnapshot::RareIntegerData" = type { %"class.crdtp::ProtocolObject.2857", %"class.std::__1::unique_ptr.2812", %"class.std::__1::unique_ptr.2812" }
%"class.crdtp::ProtocolObject.2857" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2843" = type { %"class.std::__1::unique_ptr.2844" }
%"class.std::__1::unique_ptr.2844" = type { %"class.std::__1::__compressed_pair.2845" }
%"class.std::__1::__compressed_pair.2845" = type { %"struct.std::__1::__compressed_pair_elem.2846" }
%"struct.std::__1::__compressed_pair_elem.2846" = type { %"class.blink::protocol::DOMSnapshot::RareBooleanData"* }
%"class.blink::protocol::DOMSnapshot::RareBooleanData" = type { %"class.crdtp::ProtocolObject.2847", %"class.std::__1::unique_ptr.2812" }
%"class.crdtp::ProtocolObject.2847" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2833" = type { %"class.std::__1::unique_ptr.2834" }
%"class.std::__1::unique_ptr.2834" = type { %"class.std::__1::__compressed_pair.2835" }
%"class.std::__1::__compressed_pair.2835" = type { %"struct.std::__1::__compressed_pair_elem.2836" }
%"struct.std::__1::__compressed_pair_elem.2836" = type { %"class.blink::protocol::DOMSnapshot::RareStringData"* }
%"class.blink::protocol::DOMSnapshot::RareStringData" = type { %"class.crdtp::ProtocolObject.2837", %"class.std::__1::unique_ptr.2812", %"class.std::__1::unique_ptr.2812" }
%"class.crdtp::ProtocolObject.2837" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2866" = type { %"class.std::__1::__compressed_pair.2867" }
%"class.std::__1::__compressed_pair.2867" = type { %"struct.std::__1::__compressed_pair_elem.2868" }
%"struct.std::__1::__compressed_pair_elem.2868" = type { %"class.blink::protocol::DOMSnapshot::LayoutTreeSnapshot"* }
%"class.blink::protocol::DOMSnapshot::LayoutTreeSnapshot" = type { %"class.crdtp::ProtocolObject.2869", %"class.std::__1::unique_ptr.2812", %"class.std::__1::unique_ptr.2826", %"class.std::__1::unique_ptr.2872", %"class.std::__1::unique_ptr.2812", %"class.std::__1::unique_ptr.2844", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2879", %"class.crdtp::detail::PtrMaybe.2879", %"class.crdtp::detail::PtrMaybe.2879", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2880" }
%"class.crdtp::ProtocolObject.2869" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2872" = type { %"class.std::__1::__compressed_pair.2873" }
%"class.std::__1::__compressed_pair.2873" = type { %"struct.std::__1::__compressed_pair_elem.2874" }
%"struct.std::__1::__compressed_pair_elem.2874" = type { %"class.std::__1::vector.2875"* }
%"class.std::__1::vector.2875" = type { %"class.std::__1::__vector_base.3439" }
%"class.std::__1::__vector_base.3439" = type { %"class.std::__1::unique_ptr.2881"*, %"class.std::__1::unique_ptr.2881"*, %"class.std::__1::__compressed_pair.3440" }
%"class.std::__1::unique_ptr.2881" = type { %"class.std::__1::__compressed_pair.2882" }
%"class.std::__1::__compressed_pair.2882" = type { %"struct.std::__1::__compressed_pair_elem.2883" }
%"struct.std::__1::__compressed_pair_elem.2883" = type { %"class.std::__1::vector.2884"* }
%"class.std::__1::vector.2884" = type { %"class.std::__1::__vector_base.3405" }
%"class.std::__1::__vector_base.3405" = type { double*, double*, %"class.std::__1::__compressed_pair.3406" }
%"class.std::__1::__compressed_pair.3406" = type { %"struct.std::__1::__compressed_pair_elem.3407" }
%"struct.std::__1::__compressed_pair_elem.3407" = type { double* }
%"class.std::__1::__compressed_pair.3440" = type { %"struct.std::__1::__compressed_pair_elem.3441" }
%"struct.std::__1::__compressed_pair_elem.3441" = type { %"class.std::__1::unique_ptr.2881"* }
%"class.crdtp::detail::PtrMaybe.2879" = type { %"class.std::__1::unique_ptr.2872" }
%"class.crdtp::detail::PtrMaybe.2880" = type { %"class.std::__1::unique_ptr.2881" }
%"class.std::__1::unique_ptr.2891" = type { %"class.std::__1::__compressed_pair.2892" }
%"class.std::__1::__compressed_pair.2892" = type { %"struct.std::__1::__compressed_pair_elem.2893" }
%"struct.std::__1::__compressed_pair_elem.2893" = type { %"class.blink::protocol::DOMSnapshot::TextBoxSnapshot"* }
%"class.blink::protocol::DOMSnapshot::TextBoxSnapshot" = type { %"class.crdtp::ProtocolObject.2894", %"class.std::__1::unique_ptr.2812", %"class.std::__1::unique_ptr.2872", %"class.std::__1::unique_ptr.2812", %"class.std::__1::unique_ptr.2812" }
%"class.crdtp::ProtocolObject.2894" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2903" = type { %"class.std::__1::__compressed_pair.2904" }
%"class.std::__1::__compressed_pair.2904" = type { %"struct.std::__1::__compressed_pair_elem.2905" }
%"struct.std::__1::__compressed_pair_elem.2905" = type { %"class.WTF::Vector.2906"* }
%"class.WTF::Vector.2906" = type opaque
%"class.std::__1::unique_ptr.2917" = type { %"class.std::__1::__compressed_pair.2918" }
%"class.std::__1::__compressed_pair.2918" = type { %"struct.std::__1::__compressed_pair_elem.2919" }
%"struct.std::__1::__compressed_pair_elem.2919" = type { %"class.WTF::HashMap.2920"* }
%"class.blink::HeapHashMap.2924" = type { %"class.WTF::HashMap.2927" }
%"class.WTF::HashMap.2927" = type { %"class.WTF::HashTable.2928" }
%"class.WTF::HashTable.2928" = type <{ %"struct.WTF::KeyValuePair.2930"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2930" = type opaque
%"class.blink::HeapListHashSet.2469" = type { %"class.WTF::ListHashSet.base.2479", [7 x i8] }
%"class.WTF::ListHashSet.base.2479" = type <{ %"class.WTF::HashTable.2474", %"class.blink::Member.2476", %"class.blink::Member.2476", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2474" = type <{ %"class.blink::Member.2476"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2476" = type { %"class.blink::MemberBase.2477" }
%"class.blink::MemberBase.2477" = type { %"class.blink::HeapListHashSetNode.2478"* }
%"class.blink::HeapListHashSetNode.2478" = type { %"class.blink::Member.2704", %"class.blink::Member.2476", %"class.blink::Member.2476" }
%"class.blink::Member.2704" = type { %"class.blink::MemberBase.2705" }
%"class.blink::MemberBase.2705" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2480" = type { %"class.WTF::ListHashSet.base.2490", [7 x i8] }
%"class.WTF::ListHashSet.base.2490" = type <{ %"class.WTF::HashTable.2485", %"class.blink::Member.2487", %"class.blink::Member.2487", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2485" = type <{ %"class.blink::Member.2487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::HeapListHashSetNode.2489"* }
%"class.blink::HeapListHashSetNode.2489" = type { %"class.blink::Member.2597", %"class.blink::Member.2487", %"class.blink::Member.2487" }
%"class.blink::HeapListHashSet.2491" = type { %"class.WTF::ListHashSet.base.2501", [7 x i8] }
%"class.WTF::ListHashSet.base.2501" = type <{ %"class.WTF::HashTable.2496", %"class.blink::Member.2498", %"class.blink::Member.2498", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2496" = type <{ %"class.blink::Member.2498"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2498" = type { %"class.blink::MemberBase.2499" }
%"class.blink::MemberBase.2499" = type { %"class.blink::HeapListHashSetNode.2500"* }
%"class.blink::HeapListHashSetNode.2500" = type { %"class.blink::Member.2698", %"class.blink::Member.2498", %"class.blink::Member.2498" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2502" = type { %"class.WTF::ListHashSet.base.2512", [7 x i8] }
%"class.WTF::ListHashSet.base.2512" = type <{ %"class.WTF::HashTable.2507", %"class.blink::Member.2509", %"class.blink::Member.2509", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2507" = type <{ %"class.blink::Member.2509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::HeapListHashSetNode.2511"* }
%"class.blink::HeapListHashSetNode.2511" = type { %"class.blink::Member.2694", %"class.blink::Member.2509", %"class.blink::Member.2509" }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2513" = type { %"class.WTF::ListHashSet.base.2523", [7 x i8] }
%"class.WTF::ListHashSet.base.2523" = type <{ %"class.WTF::HashTable.2518", %"class.blink::Member.2520", %"class.blink::Member.2520", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2518" = type <{ %"class.blink::Member.2520"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::HeapListHashSetNode.2522"* }
%"class.blink::HeapListHashSetNode.2522" = type { %"class.blink::Member.2690", %"class.blink::Member.2520", %"class.blink::Member.2520" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2524" = type { %"class.WTF::ListHashSet.base.2534", [7 x i8] }
%"class.WTF::ListHashSet.base.2534" = type <{ %"class.WTF::HashTable.2529", %"class.blink::Member.2531", %"class.blink::Member.2531", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2529" = type <{ %"class.blink::Member.2531"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::HeapListHashSetNode.2533"* }
%"class.blink::HeapListHashSetNode.2533" = type { %"class.blink::Member.2686", %"class.blink::Member.2531", %"class.blink::Member.2531" }
%"class.blink::Member.2686" = type { %"class.blink::MemberBase.2687" }
%"class.blink::MemberBase.2687" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2535" = type { %"class.WTF::ListHashSet.base.2545", [7 x i8] }
%"class.WTF::ListHashSet.base.2545" = type <{ %"class.WTF::HashTable.2540", %"class.blink::Member.2542", %"class.blink::Member.2542", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2540" = type <{ %"class.blink::Member.2542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2542" = type { %"class.blink::MemberBase.2543" }
%"class.blink::MemberBase.2543" = type { %"class.blink::HeapListHashSetNode.2544"* }
%"class.blink::HeapListHashSetNode.2544" = type { %"class.blink::Member.2682", %"class.blink::Member.2542", %"class.blink::Member.2542" }
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2546" = type { %"class.WTF::ListHashSet.base.2556", [7 x i8] }
%"class.WTF::ListHashSet.base.2556" = type <{ %"class.WTF::HashTable.2551", %"class.blink::Member.2553", %"class.blink::Member.2553", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2551" = type <{ %"class.blink::Member.2553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::HeapListHashSetNode.2555"* }
%"class.blink::HeapListHashSetNode.2555" = type { %"class.blink::Member.2678", %"class.blink::Member.2553", %"class.blink::Member.2553" }
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2557" = type { %"class.WTF::ListHashSet.base.2567", [7 x i8] }
%"class.WTF::ListHashSet.base.2567" = type <{ %"class.WTF::HashTable.2562", %"class.blink::Member.2564", %"class.blink::Member.2564", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2562" = type <{ %"class.blink::Member.2564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::HeapListHashSetNode.2566"* }
%"class.blink::HeapListHashSetNode.2566" = type { %"class.blink::Member.2674", %"class.blink::Member.2564", %"class.blink::Member.2564" }
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2568" = type { %"class.WTF::ListHashSet.base.2578", [7 x i8] }
%"class.WTF::ListHashSet.base.2578" = type <{ %"class.WTF::HashTable.2573", %"class.blink::Member.2575", %"class.blink::Member.2575", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2573" = type <{ %"class.blink::Member.2575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::HeapListHashSetNode.2577"* }
%"class.blink::HeapListHashSetNode.2577" = type { %"class.blink::Member.2599", %"class.blink::Member.2575", %"class.blink::Member.2575" }
%"class.blink::HeapListHashSet.2579" = type { %"class.WTF::ListHashSet.base.2589", [7 x i8] }
%"class.WTF::ListHashSet.base.2589" = type <{ %"class.WTF::HashTable.2584", %"class.blink::Member.2586", %"class.blink::Member.2586", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2584" = type <{ %"class.blink::Member.2586"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2586" = type { %"class.blink::MemberBase.2587" }
%"class.blink::MemberBase.2587" = type { %"class.blink::HeapListHashSetNode.2588"* }
%"class.blink::HeapListHashSetNode.2588" = type { %"class.blink::Member.2591", %"class.blink::Member.2586", %"class.blink::Member.2586" }
%class.scoped_refptr.2590 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2591" = type { %"class.blink::MemberBase.2592" }
%"class.blink::MemberBase.2592" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2595" = type { %"class.blink::MemberBase.2596" }
%"class.blink::MemberBase.2596" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2597" = type { %"class.blink::MemberBase.2598" }
%"class.blink::MemberBase.2598" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2599" = type { %"class.blink::MemberBase.2600" }
%"class.blink::MemberBase.2600" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2603" = type { %"class.blink::MemberBase.2604" }
%"class.blink::MemberBase.2604" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2605" = type { %"class.blink::MemberBase.2606" }
%"class.blink::MemberBase.2606" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2607" }
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3466" }
%"class.mojo::Remote.3466" = type { %"class.mojo::internal::InterfacePtrState.3467" }
%"class.mojo::internal::InterfacePtrState.3467" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3468" }
%"class.std::__1::unique_ptr.3468" = type { %"class.std::__1::__compressed_pair.3469" }
%"class.std::__1::__compressed_pair.3469" = type { %"struct.std::__1::__compressed_pair_elem.3470" }
%"struct.std::__1::__compressed_pair_elem.3470" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2609" = type { %"class.std::__1::__compressed_pair.2610" }
%"class.std::__1::__compressed_pair.2610" = type { %"struct.std::__1::__compressed_pair_elem.2611" }
%"struct.std::__1::__compressed_pair_elem.2611" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2615" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2616" = type { %"class.std::__1::__compressed_pair.2617" }
%"class.std::__1::__compressed_pair.2617" = type { %"struct.std::__1::__compressed_pair_elem.2618" }
%"struct.std::__1::__compressed_pair_elem.2618" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2288" = type { %"class.absl::optional_internal::optional_data.2289" }
%"class.absl::optional_internal::optional_data.2289" = type { %"class.absl::optional_internal::optional_data_base.2290" }
%"class.absl::optional_internal::optional_data_base.2290" = type { %"class.absl::optional_internal::optional_data_dtor_base.2291" }
%"class.absl::optional_internal::optional_data_dtor_base.2291" = type { i8, %union.anon.2292 }
%union.anon.2292 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2622" = type { %"class.std::__1::__compressed_pair.2623" }
%"class.std::__1::__compressed_pair.2623" = type { %"struct.std::__1::__compressed_pair_elem.2624" }
%"struct.std::__1::__compressed_pair_elem.2624" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2628" }
%"class.blink::Member.2628" = type { %"class.blink::MemberBase.2629" }
%"class.blink::MemberBase.2629" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3476" }
%"class.mojo::AssociatedRemote.3476" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3477" }
%"class.mojo::internal::AssociatedInterfacePtrState.3477" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3478" }
%"class.std::__1::unique_ptr.3478" = type { %"class.std::__1::__compressed_pair.3479" }
%"class.std::__1::__compressed_pair.3479" = type { %"struct.std::__1::__compressed_pair_elem.3480" }
%"struct.std::__1::__compressed_pair_elem.3480" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2630" = type { %"class.blink::Member.2631" }
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3486" }
%"class.mojo::AssociatedRemote.3486" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3487" }
%"class.mojo::internal::AssociatedInterfacePtrState.3487" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3488" }
%"class.std::__1::unique_ptr.3488" = type { %"class.std::__1::__compressed_pair.3489" }
%"class.std::__1::__compressed_pair.3489" = type { %"struct.std::__1::__compressed_pair_elem.3490" }
%"struct.std::__1::__compressed_pair_elem.3490" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2633" }
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3496", %"class.blink::Member.1871", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3496" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3497" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1659" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3497" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2635" = type { %"class.blink::Member.2636" }
%"class.blink::Member.2636" = type { %"class.blink::MemberBase.2637" }
%"class.blink::MemberBase.2637" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3500", %"class.blink::Member.1871", %"class.mojo::AssociatedReceiver.3501" }
%"class.blink::ThreadState::PrefinalizerRegistration.3500" = type { i8 }
%"class.mojo::AssociatedReceiver.3501" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3502" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3502" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2638" }
%"class.blink::Member.2638" = type { %"class.blink::MemberBase.2639" }
%"class.blink::MemberBase.2639" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3505", %"class.blink::Member.1871", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3505" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2169, %"class.std::__1::unique_ptr.1659", %"class.base::WeakPtrFactory.3506" }
%"class.base::WeakPtrFactory.3506" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2640" = type { %"class.blink::Member.2641" }
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3509", %"class.blink::Member.1871", %"class.mojo::AssociatedReceiver.3510" }
%"class.blink::ThreadState::PrefinalizerRegistration.3509" = type { i8 }
%"class.mojo::AssociatedReceiver.3510" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3511" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3511" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2645" = type { %"class.blink::MemberBase.2646" }
%"class.blink::MemberBase.2646" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2649" = type { %"class.blink::MemberBase.2650" }
%"class.blink::MemberBase.2650" = type { %"class.blink::HeapHashMap.2651"* }
%"class.blink::HeapHashMap.2651" = type opaque
%"class.mojo::StructPtr.2652" = type { %"class.std::__1::unique_ptr.2653" }
%"class.std::__1::unique_ptr.2653" = type { %"class.std::__1::__compressed_pair.2654" }
%"class.std::__1::__compressed_pair.2654" = type { %"struct.std::__1::__compressed_pair_elem.2655" }
%"struct.std::__1::__compressed_pair_elem.2655" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2656", %"class.mojo::InlinedStructPtr.2657" }
%"class.mojo::InlinedStructPtr.2656" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2657" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2661" = type { %"class.blink::MemberBase.2662" }
%"class.blink::MemberBase.2662" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2663" = type { %"class.absl::optional_internal::optional_data.2664" }
%"class.absl::optional_internal::optional_data.2664" = type { %"class.absl::optional_internal::optional_data_base.2665" }
%"class.absl::optional_internal::optional_data_base.2665" = type { %"class.absl::optional_internal::optional_data_dtor_base.2666" }
%"class.absl::optional_internal::optional_data_dtor_base.2666" = type { i8, %union.anon.2667 }
%union.anon.2667 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1873" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1874", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1874" = type { %"class.blink::MemberBase.1875" }
%"class.absl::optional.1876" = type { %"class.absl::optional_internal::optional_data.1877" }
%"class.absl::optional_internal::optional_data.1877" = type { %"class.absl::optional_internal::optional_data_base.1878" }
%"class.absl::optional_internal::optional_data_base.1878" = type { %"class.absl::optional_internal::optional_data_dtor_base.1879" }
%"class.absl::optional_internal::optional_data_dtor_base.1879" = type { i8, %union.anon.1880 }
%union.anon.1880 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::HeapHashSet.1885"* }
%"class.blink::HeapHashSet.1885" = type opaque
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.WTF::HashSet.1889"* }
%"class.WTF::HashSet.1889" = type { %"class.WTF::HashTable.1890" }
%"class.WTF::HashTable.1890" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1898" = type { %"class.WTF::HashSet.1901" }
%"class.WTF::HashSet.1901" = type { %"class.WTF::HashTable.1902" }
%"class.WTF::HashTable.1902" = type <{ %"class.blink::Member.1904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1904" = type opaque
%"class.blink::HeapHashSet.1905" = type { %"class.WTF::HashSet.1908" }
%"class.WTF::HashSet.1908" = type { %"class.WTF::HashTable.1909" }
%"class.WTF::HashTable.1909" = type <{ %"class.blink::Member.1911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1911" = type { %"class.blink::MemberBase.1912" }
%"class.blink::MemberBase.1912" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2117", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2127", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", %"class.blink::Member.2125", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2127" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2128", { i64, i64 } }
%"class.blink::WeakMember.2128" = type { %"class.blink::MemberBase.1912" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1923", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1923" = type { %"class.WTF::HashTable.1924" }
%"class.WTF::HashTable.1924" = type <{ %"struct.WTF::KeyValuePair.1926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1926" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1927", i32, i32 }
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929" }
%"class.WTF::VectorBufferBase.1929" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1931" = type { %"class.WTF::LinkedHashSet.1934" }
%"class.WTF::LinkedHashSet.1934" = type { %"class.WTF::HashMap.1935", %"class.WTF::VectorBackedLinkedList.1939" }
%"class.WTF::HashMap.1935" = type { %"class.WTF::HashTable.1936" }
%"class.WTF::HashTable.1936" = type <{ %"struct.WTF::KeyValuePair.1938"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1938" = type opaque
%"class.WTF::VectorBackedLinkedList.1939" = type { %"class.WTF::Vector.1940", i32, i32 }
%"class.WTF::Vector.1940" = type { %"class.WTF::VectorBuffer.1941" }
%"class.WTF::VectorBuffer.1941" = type { %"class.WTF::VectorBufferBase.1942" }
%"class.WTF::VectorBufferBase.1942" = type { %"class.WTF::VectorBackedLinkedListNode.1943"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1943" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1945" = type { %"class.std::__1::__compressed_pair.1946" }
%"class.std::__1::__compressed_pair.1946" = type { %"struct.std::__1::__compressed_pair_elem.1947" }
%"struct.std::__1::__compressed_pair_elem.1947" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1954, %class.scoped_refptr.1954, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2009", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2014", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1954 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1955", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1962" }
%"class.WTF::RefCounted.1955" = type { %"class.base::RefCounted.1956" }
%"class.base::RefCounted.1956" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1957", i32, [4 x i8] }>
%"class.WTF::Vector.1957" = type { %"class.WTF::VectorBuffer.1958" }
%"class.WTF::VectorBuffer.1958" = type { %"class.WTF::VectorBufferBase.1959" }
%"class.WTF::VectorBufferBase.1959" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1962" = type { %"class.WTF::VectorBuffer.1963" }
%"class.WTF::VectorBuffer.1963" = type { %"class.WTF::VectorBufferBase.1964" }
%"class.WTF::VectorBufferBase.1964" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1965", %"class.std::__1::unique_ptr.1981", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1965" = type { %"class.std::__1::__compressed_pair.1966" }
%"class.std::__1::__compressed_pair.1966" = type { %"struct.std::__1::__compressed_pair_elem.1967" }
%"struct.std::__1::__compressed_pair_elem.1967" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1968", %"class.WTF::Vector.1973", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1968" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1970" }
%"class.WTF::VectorBufferBase.1970" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1973" = type { %"class.WTF::VectorBuffer.1974" }
%"class.WTF::VectorBuffer.1974" = type { %"class.WTF::VectorBufferBase.1975" }
%"class.WTF::VectorBufferBase.1975" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1981" = type { %"class.std::__1::__compressed_pair.1982" }
%"class.std::__1::__compressed_pair.1982" = type { %"struct.std::__1::__compressed_pair_elem.1983" }
%"struct.std::__1::__compressed_pair_elem.1983" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1984", %"class.absl::optional.1984" }
%"class.absl::optional.1984" = type { %"class.absl::optional_internal::optional_data.1985" }
%"class.absl::optional_internal::optional_data.1985" = type { %"class.absl::optional_internal::optional_data_base.1986" }
%"class.absl::optional_internal::optional_data_base.1986" = type { %"class.absl::optional_internal::optional_data_dtor_base.1987" }
%"class.absl::optional_internal::optional_data_dtor_base.1987" = type { i8, [3 x i8], %union.anon.1988 }
%union.anon.1988 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1962"*, %"class.absl::optional.1994", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1994" = type { %"class.absl::optional_internal::optional_data.1995" }
%"class.absl::optional_internal::optional_data.1995" = type { %"class.absl::optional_internal::optional_data_base.1996" }
%"class.absl::optional_internal::optional_data_base.1996" = type { %"class.absl::optional_internal::optional_data_dtor_base.1997" }
%"class.absl::optional_internal::optional_data_dtor_base.1997" = type { i8, %union.anon.1998 }
%union.anon.1998 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1999", %"class.WTF::Vector.2004" }
%"class.WTF::Vector.1999" = type { %"class.WTF::VectorBuffer.2000" }
%"class.WTF::VectorBuffer.2000" = type { %"class.WTF::VectorBufferBase.2001", [128 x i8] }
%"class.WTF::VectorBufferBase.2001" = type { i32*, i32, i32 }
%"class.WTF::Vector.2004" = type { %"class.WTF::VectorBuffer.2005" }
%"class.WTF::VectorBuffer.2005" = type { %"class.WTF::VectorBufferBase.2006", [128 x i8] }
%"class.WTF::VectorBufferBase.2006" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2009" = type { %"class.WTF::VectorBuffer.2010" }
%"class.WTF::VectorBuffer.2010" = type { %"class.WTF::VectorBufferBase.2011" }
%"class.WTF::VectorBufferBase.2011" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2014" = type { %"class.WTF::HashTable.2015" }
%"class.WTF::HashTable.2015" = type <{ %"struct.WTF::KeyValuePair.2018"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2018" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2019", %"class.WTF::Vector.2024" }
%"class.WTF::HashMap.2019" = type { %"class.WTF::HashTable.2020" }
%"class.WTF::HashTable.2020" = type <{ %"struct.WTF::KeyValuePair.2023"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2023" = type opaque
%"class.WTF::Vector.2024" = type { %"class.WTF::VectorBuffer.2025" }
%"class.WTF::VectorBuffer.2025" = type { %"class.WTF::VectorBufferBase.2026" }
%"class.WTF::VectorBufferBase.2026" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2032" = type { %"class.std::__1::__compressed_pair.2033" }
%"class.std::__1::__compressed_pair.2033" = type { %"struct.std::__1::__compressed_pair_elem.2034" }
%"struct.std::__1::__compressed_pair_elem.2034" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2038" = type { %"class.WTF::VectorBuffer.2039" }
%"class.WTF::VectorBuffer.2039" = type { %"class.WTF::VectorBufferBase.2040" }
%"class.WTF::VectorBufferBase.2040" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2043 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2050" = type { %"class.WTF::HashSet.2053" }
%"class.WTF::HashSet.2053" = type { %"class.WTF::HashTable.2054" }
%"class.WTF::HashTable.2054" = type <{ %"class.blink::WeakMember.2056"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2056" = type opaque
%"class.blink::HeapHashSet.2057" = type { %"class.WTF::HashSet.2060" }
%"class.WTF::HashSet.2060" = type { %"class.WTF::HashTable.2061" }
%"class.WTF::HashTable.2061" = type <{ %"class.blink::WeakMember.2063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2063" = type opaque
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2067" }
%"class.base::time_internal::TimeBase.2067" = type { i64 }
%"class.std::__1::unique_ptr.2071" = type { %"class.std::__1::__compressed_pair.2072" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.2073" }
%"struct.std::__1::__compressed_pair_elem.2073" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2074", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2074" = type { %"class.absl::optional_internal::optional_data.2075" }
%"class.absl::optional_internal::optional_data.2075" = type { %"class.absl::optional_internal::optional_data_base.2076" }
%"class.absl::optional_internal::optional_data_base.2076" = type { %"class.absl::optional_internal::optional_data_dtor_base.2077" }
%"class.absl::optional_internal::optional_data_dtor_base.2077" = type { i8, %union.anon.2078 }
%union.anon.2078 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2088" = type { %"class.std::__1::__compressed_pair.2089" }
%"class.std::__1::__compressed_pair.2089" = type { %"struct.std::__1::__compressed_pair_elem.2090" }
%"struct.std::__1::__compressed_pair_elem.2090" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2094" = type { %"class.std::__1::__compressed_pair.2095" }
%"class.std::__1::__compressed_pair.2095" = type { %"struct.std::__1::__compressed_pair_elem.2096" }
%"struct.std::__1::__compressed_pair_elem.2096" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1858 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2100" = type { %"class.blink::PersistentBase.2101" }
%"class.blink::PersistentBase.2101" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2104", i64 }
%"class.blink::HeapVector.2104" = type { %"class.WTF::Vector.2107" }
%"class.WTF::Vector.2107" = type { %"class.WTF::VectorBuffer.2108" }
%"class.WTF::VectorBuffer.2108" = type { %"class.WTF::VectorBufferBase.2109", [368 x i8] }
%"class.WTF::VectorBufferBase.2109" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1911", i8, %"class.blink::Member.2110", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::HeapLinkedHashSet.2112"* }
%"class.blink::HeapLinkedHashSet.2112" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1457", %"class.blink::Member.1457", i32, i8, [3 x i8] }>
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1459" = type { %"class.WTF::VectorBuffer.1460" }
%"class.WTF::VectorBuffer.1460" = type { %"class.WTF::VectorBufferBase.1461" }
%"class.WTF::VectorBufferBase.1461" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1464" = type { %"class.WTF::HashMap.1467" }
%"class.WTF::HashMap.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"struct.WTF::KeyValuePair.1470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1470" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1473" = type { %"class.std::__1::__compressed_pair.1474" }
%"class.std::__1::__compressed_pair.1474" = type { %"struct.std::__1::__compressed_pair_elem.1475" }
%"struct.std::__1::__compressed_pair_elem.1475" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1483" = type { %"class.WTF::HashMap.1486" }
%"class.WTF::HashMap.1486" = type { %"class.WTF::HashTable.1487" }
%"class.WTF::HashTable.1487" = type <{ %"struct.WTF::KeyValuePair.1489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1489" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1490" }
%"class.blink::HeapHashSet.1490" = type { %"class.WTF::HashSet.1493" }
%"class.WTF::HashSet.1493" = type { %"class.WTF::HashTable.1494" }
%"class.WTF::HashTable.1494" = type <{ %"class.blink::WeakMember.1496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1496" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1506", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1513", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1506" = type { %"class.WTF::HashSet.1509" }
%"class.WTF::HashSet.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"class.blink::Member.1512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1512" = type opaque
%"class.blink::HeapTaskRunnerTimer.1513" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1514", { i64, i64 } }
%"class.blink::WeakMember.1514" = type { %"class.blink::MemberBase.1500" }
%"class.blink::WeakMember.1501" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3525" }
%"class.WTF::Vector.3525" = type { %"class.WTF::VectorBuffer.3526" }
%"class.WTF::VectorBuffer.3526" = type { %"class.WTF::VectorBufferBase.3527" }
%"class.WTF::VectorBufferBase.3527" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3530", %"class.absl::optional.3530", %"class.absl::optional.3530" }
%"class.absl::optional.3530" = type { %"class.absl::optional_internal::optional_data.3531" }
%"class.absl::optional_internal::optional_data.3531" = type { %"class.absl::optional_internal::optional_data_base.3532" }
%"class.absl::optional_internal::optional_data_base.3532" = type { %"class.absl::optional_internal::optional_data_dtor_base.3533" }
%"class.absl::optional_internal::optional_data_dtor_base.3533" = type { i8, %union.anon.3534 }
%union.anon.3534 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3545" }
%"class.WTF::VectorBuffer.3545" = type { %"class.WTF::VectorBufferBase.3546", [32 x i8] }
%"class.WTF::VectorBufferBase.3546" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.std::__1::unique_ptr.3051" = type { %"class.std::__1::__compressed_pair.3052" }
%"class.std::__1::__compressed_pair.3052" = type { %"struct.std::__1::__compressed_pair_elem.3053" }
%"struct.std::__1::__compressed_pair_elem.3053" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.3057" = type { %"class.blink::PersistentBase.3058" }
%"class.blink::PersistentBase.3058" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3063", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.3076" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3061", %"class.blink::Member.1911", %"class.blink::Member.1911", i8, [7 x i8] }>
%"class.blink::Member.3061" = type { %"class.blink::MemberBase.3062" }
%"class.blink::MemberBase.3062" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2117", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.3063" = type { %"class.std::__1::__compressed_pair.3064" }
%"class.std::__1::__compressed_pair.3064" = type { %"struct.std::__1::__compressed_pair_elem.3065" }
%"struct.std::__1::__compressed_pair_elem.3065" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3066", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1973" }
%"class.WTF::HashMap.3066" = type { %"class.WTF::HashTable.3067" }
%"class.WTF::HashTable.3067" = type <{ %"struct.WTF::KeyValuePair.3070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3070" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3074" }
%"class.blink::Member.3074" = type { %"class.blink::MemberBase.3075" }
%"class.blink::MemberBase.3075" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3074" }
%"class.absl::optional.3076" = type { %"class.absl::optional_internal::optional_data.3077" }
%"class.absl::optional_internal::optional_data.3077" = type { %"class.absl::optional_internal::optional_data_base.3078" }
%"class.absl::optional_internal::optional_data_base.3078" = type { %"class.absl::optional_internal::optional_data_dtor_base.3079" }
%"class.absl::optional_internal::optional_data_dtor_base.3079" = type { i8, %union.anon.3080 }
%union.anon.3080 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.3081" = type { %"class.std::__1::__compressed_pair.3082" }
%"class.std::__1::__compressed_pair.3082" = type { %"struct.std::__1::__compressed_pair_elem.3083" }
%"struct.std::__1::__compressed_pair_elem.3083" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.3084", %"class.WTF::Vector.3084", %"class.WTF::HashMap.3089", %"class.WTF::Vector.3084", i8, [7 x i8] }>
%"class.WTF::HashMap.3089" = type { %"class.WTF::HashTable.3090" }
%"class.WTF::HashTable.3090" = type <{ %"struct.WTF::KeyValuePair.3093"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3093" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.3084" }
%"class.WTF::Vector.3084" = type { %"class.WTF::VectorBuffer.3085" }
%"class.WTF::VectorBuffer.3085" = type { %"class.WTF::VectorBufferBase.3086" }
%"class.WTF::VectorBufferBase.3086" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.3097" = type { %"class.std::__1::__compressed_pair.3098" }
%"class.std::__1::__compressed_pair.3098" = type { %"struct.std::__1::__compressed_pair_elem.3099" }
%"struct.std::__1::__compressed_pair_elem.3099" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.3100", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.3106", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.3112", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.3100" = type { %"class.std::__1::__compressed_pair.3101" }
%"class.std::__1::__compressed_pair.3101" = type { %"struct.std::__1::__compressed_pair_elem.3102" }
%"struct.std::__1::__compressed_pair_elem.3102" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.3106" = type { %"class.std::__1::__compressed_pair.3107" }
%"class.std::__1::__compressed_pair.3107" = type { %"struct.std::__1::__compressed_pair_elem.3108" }
%"struct.std::__1::__compressed_pair_elem.3108" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.3112" = type { %"class.blink::PersistentBase.3113" }
%"class.blink::PersistentBase.3113" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::InspectorDOMDebuggerAgent" = type { %"class.blink::InspectorBaseAgent.2935", %"class.v8::Isolate"*, %"class.blink::Member.2942", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashMap.3011", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent.2935" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOMDebugger::Backend", %"class.blink::Member.2366", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2936" }
%"class.blink::protocol::DOMDebugger::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2936" = type { %"class.std::__1::__compressed_pair.2937" }
%"class.std::__1::__compressed_pair.2937" = type { %"struct.std::__1::__compressed_pair_elem.2938" }
%"struct.std::__1::__compressed_pair_elem.2938" = type { %"class.blink::protocol::DOMDebugger::Frontend"* }
%"class.blink::protocol::DOMDebugger::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::HeapHashMap.3011" = type { %"class.WTF::HashMap.3014" }
%"class.WTF::HashMap.3014" = type { %"class.WTF::HashTable.3015" }
%"class.WTF::HashTable.3015" = type <{ %"struct.WTF::KeyValuePair.3017"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3017" = type opaque
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.3018" }
%"class.WTF::HashMap.3018" = type { %"class.WTF::HashTable.3019" }
%"class.WTF::HashTable.3019" = type <{ %"struct.WTF::KeyValuePair.3022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3022" = type opaque
%"class.WTF::HashMap.2920" = type { %"class.WTF::HashTable.3123" }
%"class.WTF::HashTable.3123" = type <{ %"struct.WTF::KeyValuePair.3126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3126" = type { i32, %"class.WTF::String" }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.WTF::Vector.3274" = type { %"class.WTF::VectorBuffer.3275" }
%"class.WTF::VectorBuffer.3275" = type { %"class.WTF::VectorBufferBase.3276" }
%"class.WTF::VectorBufferBase.3276" = type { %"struct.blink::V8EventListenerInfo"*, i32, i32 }
%"struct.blink::V8EventListenerInfo" = type { %"class.WTF::AtomicString", i8, i8, i8, %"class.v8::Local.3277", %"class.v8::Local.3278", i64 }
%"class.v8::Local.3277" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Local.3278" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.3282 }
%union.anon.3282 = type { i8* }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3550", %"class.blink::Member.3552", %"class.blink::Member.3554", %"class.blink::Member.3573", %"class.blink::Member.3575" }
%"class.blink::Member.3550" = type { %"class.blink::MemberBase.3551" }
%"class.blink::MemberBase.3551" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3552" = type { %"class.blink::MemberBase.3553" }
%"class.blink::MemberBase.3553" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3554" = type { %"class.blink::MemberBase.3555" }
%"class.blink::MemberBase.3555" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3558", %"class.blink::HeapHashSet.3567" }
%"class.blink::HeapVector.3558" = type { %"class.WTF::Vector.3561" }
%"class.WTF::Vector.3561" = type { %"class.WTF::VectorBuffer.3562" }
%"class.WTF::VectorBuffer.3562" = type { %"class.WTF::VectorBufferBase.3563" }
%"class.WTF::VectorBufferBase.3563" = type { %"class.blink::Member.3564"*, i32, i32 }
%"class.blink::Member.3564" = type { %"class.blink::MemberBase.3565" }
%"class.blink::MemberBase.3565" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3567" = type { %"class.WTF::HashSet.3570" }
%"class.WTF::HashSet.3570" = type { %"class.WTF::HashTable.3571" }
%"class.WTF::HashTable.3571" = type <{ %"class.blink::Member.3564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3573" = type { %"class.blink::MemberBase.3574" }
%"class.blink::MemberBase.3574" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3575" = type { %"class.blink::MemberBase.3576" }
%"class.blink::MemberBase.3576" = type { %"class.blink::HeapHashSet.3577"* }
%"class.blink::HeapHashSet.3577" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3267, %"class.blink::Member.3268", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3272" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3267 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3268" = type { %"class.blink::MemberBase.3269" }
%"class.blink::MemberBase.3269" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3270" }
%"class.blink::Persistent.3270" = type { %"class.blink::PersistentBase.3271" }
%"class.blink::PersistentBase.3271" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3272" = type { %"class.base::StrongAlias.3273" }
%"class.base::StrongAlias.3273" = type { %"class.base::UnguessableToken" }
%"class.v8::Value" = type { i8 }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.2131", %"class.blink::Member.3283", %"struct.blink::FramePolicy", %"class.blink::Member.3299", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3283" = type { %"class.blink::MemberBase.3284" }
%"class.blink::MemberBase.3284" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.3285", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.3285" = type { %"class.std::__1::__vector_base.3286" }
%"class.std::__1::__vector_base.3286" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.3294" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.3287", i8, i8, [6 x i8] }>
%"class.std::__1::vector.3287" = type { %"class.std::__1::__vector_base.3288" }
%"class.std::__1::__vector_base.3288" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.3289" }
%"class.std::__1::__compressed_pair.3289" = type { %"struct.std::__1::__compressed_pair_elem.3290" }
%"struct.std::__1::__compressed_pair_elem.3290" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.3294" = type { %"struct.std::__1::__compressed_pair_elem.3295" }
%"struct.std::__1::__compressed_pair_elem.3295" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3299" = type { %"class.blink::MemberBase.3300" }
%"class.blink::MemberBase.3300" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::HTMLTextAreaElement" = type <{ %"class.blink::TextControlElement", i32, i32, i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3307", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3301", %"class.blink::Member.3303", %"class.blink::Member.3305", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3301" = type { %"class.blink::MemberBase.3302" }
%"class.blink::MemberBase.3302" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3303" = type { %"class.blink::MemberBase.3304" }
%"class.blink::MemberBase.3304" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3305" = type { %"class.blink::MemberBase.3306" }
%"class.blink::MemberBase.3306" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3307" = type { %"class.blink::MemberBase.3308" }
%"class.blink::MemberBase.3308" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3309", %"class.blink::Member.3311", %"class.blink::Member.3313", %"class.blink::Member.3372", i32, [4 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3309" = type { %"class.blink::MemberBase.3310" }
%"class.blink::MemberBase.3310" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.3311" = type { %"class.blink::MemberBase.3312" }
%"class.blink::MemberBase.3312" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.3313" = type { %"class.blink::MemberBase.3314" }
%"class.blink::MemberBase.3314" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3317", %"class.blink::Member.343", %"class.blink::Member.3318", %"class.blink::Member.3318", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3354", %"class.std::__1::unique_ptr.3355", %"class.std::__1::unique_ptr.3355", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3364" }
%"class.blink::ThreadState::PrefinalizerRegistration.3317" = type { i8 }
%"class.blink::Member.3318" = type { %"class.blink::MemberBase.3319" }
%"class.blink::MemberBase.3319" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3322", float, i8, %class.scoped_refptr.3324, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3322" = type { %"class.blink::MemberBase.3323" }
%"class.blink::MemberBase.3323" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3324 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3325", i8, %class.scoped_refptr.3327, %"class.blink::WeakPersistent.3341", i32, i8, %"class.std::__1::unique_ptr.3343" }
%"class.WTF::ThreadSafeRefCounted.3325" = type { %"class.base::RefCountedThreadSafe.3326" }
%"class.base::RefCountedThreadSafe.3326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3327 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3328", i64, %"class.WTF::Vector.3330", %"class.WTF::Vector.3335" }
%"class.WTF::RefCounted.3328" = type { %"class.base::RefCounted.3329" }
%"class.base::RefCounted.3329" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3330" = type { %"class.WTF::VectorBuffer.3331" }
%"class.WTF::VectorBuffer.3331" = type { %"class.WTF::VectorBufferBase.3332" }
%"class.WTF::VectorBufferBase.3332" = type { i8*, i32, i32 }
%"class.WTF::Vector.3335" = type { %"class.WTF::VectorBuffer.3336" }
%"class.WTF::VectorBuffer.3336" = type { %"class.WTF::VectorBufferBase.3337" }
%"class.WTF::VectorBufferBase.3337" = type { %"class.std::__1::unique_ptr.3338"*, i32, i32 }
%"class.std::__1::unique_ptr.3338" = type opaque
%"class.blink::WeakPersistent.3341" = type { %"class.blink::PersistentBase.3342" }
%"class.blink::PersistentBase.3342" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.3343" = type { %"class.std::__1::__compressed_pair.3344" }
%"class.std::__1::__compressed_pair.3344" = type { %"struct.std::__1::__compressed_pair_elem.3345" }
%"struct.std::__1::__compressed_pair_elem.3345" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3349" }
%"class.WTF::HashMap.3349" = type { %"class.WTF::HashTable.3350" }
%"class.WTF::HashTable.3350" = type <{ %"struct.WTF::KeyValuePair.3353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3353" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3354" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3355" = type { %"class.std::__1::__compressed_pair.3356" }
%"class.std::__1::__compressed_pair.3356" = type { %"struct.std::__1::__compressed_pair_elem.3357" }
%"struct.std::__1::__compressed_pair_elem.3357" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type { %"class.blink::WeakPersistent.3358" }
%"class.blink::WeakPersistent.3358" = type { %"class.blink::PersistentBase.3359" }
%"class.blink::PersistentBase.3359" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.3360" }
%"class.blink::PersistentNodePtr.3360" = type { %"class.blink::PersistentNode"* }
%"class.blink::HeapVector.3364" = type { %"class.WTF::Vector.3367" }
%"class.WTF::Vector.3367" = type { %"class.WTF::VectorBuffer.3368" }
%"class.WTF::VectorBuffer.3368" = type { %"class.WTF::VectorBufferBase.3369" }
%"class.WTF::VectorBufferBase.3369" = type { %"class.blink::Member.3370"*, i32, i32 }
%"class.blink::Member.3370" = type opaque
%"class.blink::Member.3372" = type { %"class.blink::MemberBase.3373" }
%"class.blink::MemberBase.3373" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.3374", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.3374" = type { %"class.blink::MemberBase.3375" }
%"class.blink::MemberBase.3375" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3376", %"class.blink::FormAssociated", %"class.blink::Member.3313", %"class.blink::Member.3377", %"class.blink::Member.3303", %"class.WTF::AtomicString", float, %"class.blink::Member.3379", i8, i8, i32, %"class.std::__1::unique_ptr.3381" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.3376" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3377" = type { %"class.blink::MemberBase.3378" }
%"class.blink::MemberBase.3378" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.3379" = type { %"class.blink::MemberBase.3380" }
%"class.blink::MemberBase.3380" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.3381" = type { %"class.std::__1::__compressed_pair.3382" }
%"class.std::__1::__compressed_pair.3382" = type { %"struct.std::__1::__compressed_pair_elem.3383" }
%"struct.std::__1::__compressed_pair_elem.3383" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.3387", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3387" = type { %"class.blink::MemberBase.3388" }
%"class.blink::MemberBase.3388" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.WTF::Vector.3395" = type { %"class.WTF::VectorBuffer.3396" }
%"class.WTF::VectorBuffer.3396" = type { %"class.WTF::VectorBufferBase.3397" }
%"class.WTF::VectorBufferBase.3397" = type { %"struct.blink::LayoutText::TextBoxInfo"*, i32, i32 }
%"struct.blink::LayoutText::TextBoxInfo" = type { %"class.blink::LayoutRect", i32, i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.3393 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3393 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.3394" }
%"class.blink::InlineBoxList.3394" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3578" }
%"class.WTF::Vector.3578" = type { %"class.WTF::VectorBuffer.3579" }
%"class.WTF::VectorBuffer.3579" = type { %"class.WTF::VectorBufferBase.3580", [64 x i8] }
%"class.WTF::VectorBufferBase.3580" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::PseudoElement" = type <{ %"class.blink::Element", i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member.318", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3403" }
%"class.blink::WeakMember.3403" = type { %"class.blink::MemberBase.916" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEEEEmm = comdat any

$_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot7DOMNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot9NameValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot13InlineTextBoxENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot14LayoutTreeNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6LookupINS_22IdentityHashTranslatorISA_SE_S3_EES4_EEPKS6_RKT0_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot13ComputedStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6insertINS_17HashMapTranslatorISE_SA_S3_EES4_RjEENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E8RehashToEPS6_jSG_ = comdat any

$_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E8ReinsertEOS6_ = comdat any

$_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E16LookupForWritingINS_22IdentityHashTranslatorISA_SE_S3_EES4_EENSt3__14pairIPS6_bEERKT0_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16input_type_names6kRadioE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.ref.tmp = private constant [3 x i8] c"\02\03\04", align 1
@_ZTVN5blink8protocol11DOMSnapshot7DOMNodeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol11DOMSnapshot9NameValueE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol11DOMSnapshot14LayoutTreeNodeE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3DOM4RectE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol11DOMSnapshot13InlineTextBoxE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol11DOMSnapshot13ComputedStyleE = external unnamed_addr constant { [5 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEiN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsES8_NS_10HashTraitsIiEES4_EEEEPKcv = private unnamed_addr constant [276 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>, int, blink::LegacyDOMSnapshotAgent::VectorStringHashTraits, blink::LegacyDOMSnapshotAgent::VectorStringHashTraits, WTF::HashTraits<int>, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [138 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<std::__1::pair<WTF::String, blink::CSSPropertyID>, 0, WTF::PartitionAllocator>]\00", align 1
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::CSSPropertyID>]\00", align 1
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEiEEEEPKcv = private unnamed_addr constant [124 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>, int>]\00", align 1

@_ZN5blink22LegacyDOMSnapshotAgentC1EPNS_25InspectorDOMDebuggerAgentEPN3WTF7HashMapIiNS3_6StringENS3_7IntHashIiEENS3_10HashTraitsIiEENS8_IS5_EENS3_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::LegacyDOMSnapshotAgent"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::HashMap.2920"*), void (%"class.blink::LegacyDOMSnapshotAgent"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::HashMap.2920"*)* @_ZN5blink22LegacyDOMSnapshotAgentC2EPNS_25InspectorDOMDebuggerAgentEPN3WTF7HashMapIiNS3_6StringENS3_7IntHashIiEENS3_10HashTraitsIiEENS8_IS5_EENS3_18PartitionAllocatorEEE
@_ZN5blink22LegacyDOMSnapshotAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::LegacyDOMSnapshotAgent"*), void (%"class.blink::LegacyDOMSnapshotAgent"*)* @_ZN5blink22LegacyDOMSnapshotAgentD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22LegacyDOMSnapshotAgentC2EPNS_25InspectorDOMDebuggerAgentEPN3WTF7HashMapIiNS3_6StringENS3_7IntHashIiEENS3_10HashTraitsIiEENS8_IS5_EENS3_18PartitionAllocatorEEE(%"class.blink::LegacyDOMSnapshotAgent"* nocapture, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::HashMap.2920"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 6
  %5 = bitcast %"class.blink::LegacyDOMSnapshotAgent"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  store %"class.WTF::HashMap.2920"* %2, %"class.WTF::HashMap.2920"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 7
  store %"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.blink::InspectorDOMDebuggerAgent"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LegacyDOMSnapshotAgentD2Ev(%"class.blink::LegacyDOMSnapshotAgent"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::HashMap.2913"*, %"class.WTF::HashMap.2913"** %2, align 8
  store %"class.WTF::HashMap.2913"* null, %"class.WTF::HashMap.2913"** %2, align 8
  %4 = icmp eq %"class.WTF::HashMap.2913"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashMap.2913", %"class.WTF::HashMap.2913"* %3, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.3122"*, %"struct.WTF::KeyValuePair.3122"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.3122"* %7, null
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %5
  %10 = bitcast %"struct.WTF::KeyValuePair.3122"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #15
  store %"struct.WTF::KeyValuePair.3122"* null, %"struct.WTF::KeyValuePair.3122"** %6, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = bitcast %"class.WTF::HashMap.2913"* %3 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %12) #15
  br label %13

13:                                               ; preds = %1, %11
  %14 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.3252"*, %"class.WTF::Vector.3252"** %14, align 8
  store %"class.WTF::Vector.3252"* null, %"class.WTF::Vector.3252"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.3252"* %15, null
  br i1 %16, label %57, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %18, align 8
  %20 = icmp eq %"struct.std::__1::pair.3255"* %19, null
  br i1 %20, label %55, label %21, !prof !2

21:                                               ; preds = %17
  %22 = bitcast %"struct.std::__1::pair.3255"* %19 to i8*
  %23 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %15, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %53, label %26, !prof !3

26:                                               ; preds = %21
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %19, i64 %27
  br label %29

29:                                               ; preds = %47, %26
  %30 = phi %"struct.std::__1::pair.3255"* [ %48, %47 ], [ %19, %26 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %46, %43, %29
  %48 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %30, i64 1
  %49 = icmp eq %"struct.std::__1::pair.3255"* %48, %28
  br i1 %49, label %50, label %29

50:                                               ; preds = %47
  store i32 0, i32* %23, align 4
  %51 = bitcast %"class.WTF::Vector.3252"* %15 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %21
  %54 = phi i8* [ %52, %50 ], [ %22, %21 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #15
  store %"struct.std::__1::pair.3255"* null, %"struct.std::__1::pair.3255"** %18, align 8
  br label %55

55:                                               ; preds = %53, %17
  %56 = bitcast %"class.WTF::Vector.3252"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %56) #15
  br label %57

57:                                               ; preds = %13, %55
  %58 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::HashMap.3241"*, %"class.WTF::HashMap.3241"** %58, align 8
  store %"class.WTF::HashMap.3241"* null, %"class.WTF::HashMap.3241"** %58, align 8
  %60 = icmp eq %"class.WTF::HashMap.3241"* %59, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %59, i64 0, i32 0, i32 0
  %63 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %62, align 8
  %64 = icmp eq %"struct.WTF::KeyValuePair.3245"* %63, null
  br i1 %64, label %68, label %65, !prof !2

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %59, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  tail call void @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.3245"* nonnull %63, i32 %67) #15
  store %"struct.WTF::KeyValuePair.3245"* null, %"struct.WTF::KeyValuePair.3245"** %62, align 8
  br label %68

68:                                               ; preds = %65, %61
  %69 = bitcast %"class.WTF::HashMap.3241"* %59 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %69) #15
  br label %70

70:                                               ; preds = %57, %68
  %71 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.2762"*, %"class.std::__1::vector.2762"** %71, align 8
  store %"class.std::__1::vector.2762"* null, %"class.std::__1::vector.2762"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.2762"* %72, null
  br i1 %73, label %103, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %72, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %75, align 8
  %77 = icmp eq %"class.std::__1::unique_ptr.3224"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.std::__1::unique_ptr.3224"* %76 to i8*
  %80 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %72, i64 0, i32 0, i32 1
  %81 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %80, align 8
  %82 = icmp eq %"class.std::__1::unique_ptr.3224"* %81, %76
  br i1 %82, label %99, label %83

83:                                               ; preds = %78, %94
  %84 = phi %"class.std::__1::unique_ptr.3224"* [ %85, %94 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %84, i64 -1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::protocol::DOMSnapshot::ComputedStyle"*, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %86, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %86, align 8
  %88 = icmp eq %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %87 to void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)***
  %91 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)**, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %91, i64 2
  %93 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %92, align 8
  tail call void %93(%"class.blink::protocol::DOMSnapshot::ComputedStyle"* nonnull %87) #15
  br label %94

94:                                               ; preds = %89, %83
  %95 = icmp eq %"class.std::__1::unique_ptr.3224"* %85, %76
  br i1 %95, label %96, label %83

96:                                               ; preds = %94
  %97 = bitcast %"class.std::__1::vector.2762"* %72 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %78
  %100 = phi i8* [ %98, %96 ], [ %79, %78 ]
  store %"class.std::__1::unique_ptr.3224"* %76, %"class.std::__1::unique_ptr.3224"** %80, align 8
  tail call void @_ZdlPv(i8* %100) #16
  br label %101

101:                                              ; preds = %99, %74
  %102 = bitcast %"class.std::__1::vector.2762"* %72 to i8*
  tail call void @_ZdlPv(i8* %102) #16
  br label %103

103:                                              ; preds = %70, %101
  %104 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::vector.2755"*, %"class.std::__1::vector.2755"** %104, align 8
  store %"class.std::__1::vector.2755"* null, %"class.std::__1::vector.2755"** %104, align 8
  %106 = icmp eq %"class.std::__1::vector.2755"* %105, null
  br i1 %106, label %136, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %105, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %108, align 8
  %110 = icmp eq %"class.std::__1::unique_ptr.3177"* %109, null
  br i1 %110, label %134, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.std::__1::unique_ptr.3177"* %109 to i8*
  %113 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %105, i64 0, i32 0, i32 1
  %114 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %113, align 8
  %115 = icmp eq %"class.std::__1::unique_ptr.3177"* %114, %109
  br i1 %115, label %132, label %116

116:                                              ; preds = %111, %127
  %117 = phi %"class.std::__1::unique_ptr.3177"* [ %118, %127 ], [ %114, %111 ]
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %117, i64 -1
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %119, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %119, align 8
  %121 = icmp eq %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %120 to void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)***
  %124 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)**, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %124, i64 2
  %126 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %125, align 8
  tail call void %126(%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* nonnull %120) #15
  br label %127

127:                                              ; preds = %122, %116
  %128 = icmp eq %"class.std::__1::unique_ptr.3177"* %118, %109
  br i1 %128, label %129, label %116

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.2755"* %105 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %111
  %133 = phi i8* [ %131, %129 ], [ %112, %111 ]
  store %"class.std::__1::unique_ptr.3177"* %109, %"class.std::__1::unique_ptr.3177"** %113, align 8
  tail call void @_ZdlPv(i8* %133) #16
  br label %134

134:                                              ; preds = %132, %107
  %135 = bitcast %"class.std::__1::vector.2755"* %105 to i8*
  tail call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %103, %134
  %137 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.std::__1::vector.2748"*, %"class.std::__1::vector.2748"** %137, align 8
  store %"class.std::__1::vector.2748"* null, %"class.std::__1::vector.2748"** %137, align 8
  %139 = icmp eq %"class.std::__1::vector.2748"* %138, null
  br i1 %139, label %169, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %138, i64 0, i32 0, i32 0
  %142 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %141, align 8
  %143 = icmp eq %"class.std::__1::unique_ptr.3128"* %142, null
  br i1 %143, label %167, label %144

144:                                              ; preds = %140
  %145 = bitcast %"class.std::__1::unique_ptr.3128"* %142 to i8*
  %146 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %138, i64 0, i32 0, i32 1
  %147 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %146, align 8
  %148 = icmp eq %"class.std::__1::unique_ptr.3128"* %147, %142
  br i1 %148, label %165, label %149

149:                                              ; preds = %144, %160
  %150 = phi %"class.std::__1::unique_ptr.3128"* [ %151, %160 ], [ %147, %144 ]
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %150, i64 -1
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %152, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %152, align 8
  %154 = icmp eq %"class.blink::protocol::DOMSnapshot::DOMNode"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %149
  %156 = bitcast %"class.blink::protocol::DOMSnapshot::DOMNode"* %153 to void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)***
  %157 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)**, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %157, i64 2
  %159 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %158, align 8
  tail call void %159(%"class.blink::protocol::DOMSnapshot::DOMNode"* nonnull %153) #15
  br label %160

160:                                              ; preds = %155, %149
  %161 = icmp eq %"class.std::__1::unique_ptr.3128"* %151, %142
  br i1 %161, label %162, label %149

162:                                              ; preds = %160
  %163 = bitcast %"class.std::__1::vector.2748"* %138 to i8**
  %164 = load i8*, i8** %163, align 8
  br label %165

165:                                              ; preds = %162, %144
  %166 = phi i8* [ %164, %162 ], [ %145, %144 ]
  store %"class.std::__1::unique_ptr.3128"* %142, %"class.std::__1::unique_ptr.3128"** %146, align 8
  tail call void @_ZdlPv(i8* %166) #16
  br label %167

167:                                              ; preds = %165, %140
  %168 = bitcast %"class.std::__1::vector.2748"* %138 to i8*
  tail call void @_ZdlPv(i8* %168) #16
  br label %169

169:                                              ; preds = %136, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LegacyDOMSnapshotAgent11GetSnapshotEPNS_8DocumentENSt3__110unique_ptrINS3_6vectorIN3WTF6StringENS3_9allocatorIS7_EEEENS3_14default_deleteISA_EEEEN5crdtp6detail10ValueMaybeIbEESH_SH_PNS4_INS5_INS4_INS_8protocol11DOMSnapshot7DOMNodeENSB_ISK_EEEENS8_ISM_EEEENSB_ISO_EEEEPNS4_INS5_INS4_INSJ_14LayoutTreeNodeENSB_ISS_EEEENS8_ISU_EEEENSB_ISW_EEEEPNS4_INS5_INS4_INSJ_13ComputedStyleENSB_IS10_EEEENS8_IS12_EEEENSB_IS14_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::LegacyDOMSnapshotAgent"* nocapture, %"class.blink::Document"*, %"class.std::__1::vector.2769"*, %"class.crdtp::detail::ValueMaybe.3135"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3135"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3135"* nocapture readonly, %"class.std::__1::unique_ptr.2745"* nocapture, %"class.std::__1::unique_ptr.2752"* nocapture, %"class.std::__1::unique_ptr.2759"* nocapture) local_unnamed_addr #1 align 2 {
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %2) #15
  %15 = tail call zeroext i1 @_ZN5blink14LocalFrameView28UpdateLifecycleToLayoutCleanENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"* %14, i32 13) #15
  %16 = tail call i8* @_Znwm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #15
  %17 = ptrtoint i8* %16 to i64
  %18 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::vector.2748"*, %"class.std::__1::vector.2748"** %18, align 8
  %20 = bitcast %"class.blink::LegacyDOMSnapshotAgent"* %1 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %"class.std::__1::vector.2748"* %19, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %19, i64 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %23, align 8
  %25 = icmp eq %"class.std::__1::unique_ptr.3128"* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::unique_ptr.3128"* %24 to i8*
  %28 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %19, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.3128"* %29, %24
  br i1 %30, label %47, label %31

31:                                               ; preds = %26, %42
  %32 = phi %"class.std::__1::unique_ptr.3128"* [ %33, %42 ], [ %29, %26 ]
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %32, i64 -1
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %34, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %34, align 8
  %36 = icmp eq %"class.blink::protocol::DOMSnapshot::DOMNode"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::protocol::DOMSnapshot::DOMNode"* %35 to void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)***
  %39 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)**, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %39, i64 2
  %41 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %40, align 8
  tail call void %41(%"class.blink::protocol::DOMSnapshot::DOMNode"* nonnull %35) #15
  br label %42

42:                                               ; preds = %37, %31
  %43 = icmp eq %"class.std::__1::unique_ptr.3128"* %33, %24
  br i1 %43, label %44, label %31

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector.2748"* %19 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %26
  %48 = phi i8* [ %46, %44 ], [ %27, %26 ]
  store %"class.std::__1::unique_ptr.3128"* %24, %"class.std::__1::unique_ptr.3128"** %28, align 8
  tail call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %47, %22
  %50 = bitcast %"class.std::__1::vector.2748"* %19 to i8*
  tail call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %10
  %52 = tail call i8* @_Znwm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #15
  %53 = ptrtoint i8* %52 to i64
  %54 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.2752", %"class.std::__1::unique_ptr.2752"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.std::__1::vector.2755"*, %"class.std::__1::vector.2755"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.2752"* %54 to i64*
  store i64 %53, i64* %57, align 8
  %58 = icmp eq %"class.std::__1::vector.2755"* %56, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %56, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %60, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr.3177"* %61, null
  br i1 %62, label %86, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.std::__1::unique_ptr.3177"* %61 to i8*
  %65 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %56, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.3177"* %66, %61
  br i1 %67, label %84, label %68

68:                                               ; preds = %63, %79
  %69 = phi %"class.std::__1::unique_ptr.3177"* [ %70, %79 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %69, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %71, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %71, align 8
  %73 = icmp eq %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %72 to void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)***
  %76 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)**, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %76, i64 2
  %78 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %77, align 8
  tail call void %78(%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* nonnull %72) #15
  br label %79

79:                                               ; preds = %74, %68
  %80 = icmp eq %"class.std::__1::unique_ptr.3177"* %70, %61
  br i1 %80, label %81, label %68

81:                                               ; preds = %79
  %82 = bitcast %"class.std::__1::vector.2755"* %56 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %84

84:                                               ; preds = %81, %63
  %85 = phi i8* [ %83, %81 ], [ %64, %63 ]
  store %"class.std::__1::unique_ptr.3177"* %61, %"class.std::__1::unique_ptr.3177"** %65, align 8
  tail call void @_ZdlPv(i8* %85) #16
  br label %86

86:                                               ; preds = %84, %59
  %87 = bitcast %"class.std::__1::vector.2755"* %56 to i8*
  tail call void @_ZdlPv(i8* %87) #16
  br label %88

88:                                               ; preds = %86, %51
  %89 = tail call i8* @_Znwm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #15
  %90 = ptrtoint i8* %89 to i64
  %91 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 2
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2759", %"class.std::__1::unique_ptr.2759"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::vector.2762"*, %"class.std::__1::vector.2762"** %92, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.2759"* %91 to i64*
  store i64 %90, i64* %94, align 8
  %95 = icmp eq %"class.std::__1::vector.2762"* %93, null
  br i1 %95, label %125, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %93, i64 0, i32 0, i32 0
  %98 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %97, align 8
  %99 = icmp eq %"class.std::__1::unique_ptr.3224"* %98, null
  br i1 %99, label %123, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::unique_ptr.3224"* %98 to i8*
  %102 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %93, i64 0, i32 0, i32 1
  %103 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %102, align 8
  %104 = icmp eq %"class.std::__1::unique_ptr.3224"* %103, %98
  br i1 %104, label %121, label %105

105:                                              ; preds = %100, %116
  %106 = phi %"class.std::__1::unique_ptr.3224"* [ %107, %116 ], [ %103, %100 ]
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %106, i64 -1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::protocol::DOMSnapshot::ComputedStyle"*, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %108, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %108, align 8
  %110 = icmp eq %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = bitcast %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %109 to void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)***
  %113 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)**, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %113, i64 2
  %115 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %114, align 8
  tail call void %115(%"class.blink::protocol::DOMSnapshot::ComputedStyle"* nonnull %109) #15
  br label %116

116:                                              ; preds = %111, %105
  %117 = icmp eq %"class.std::__1::unique_ptr.3224"* %107, %98
  br i1 %117, label %118, label %105

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::vector.2762"* %93 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %100
  %122 = phi i8* [ %120, %118 ], [ %101, %100 ]
  store %"class.std::__1::unique_ptr.3224"* %98, %"class.std::__1::unique_ptr.3224"** %102, align 8
  tail call void @_ZdlPv(i8* %122) #16
  br label %123

123:                                              ; preds = %121, %96
  %124 = bitcast %"class.std::__1::vector.2762"* %93 to i8*
  tail call void @_ZdlPv(i8* %124) #16
  br label %125

125:                                              ; preds = %123, %88
  %126 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([276 x i8], [276 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEiN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsES8_NS_10HashTraitsIiEES4_EEEEPKcv, i64 0, i64 0)) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 20, i1 false) #15
  %127 = ptrtoint i8* %126 to i64
  %128 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 3
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.3238", %"class.std::__1::unique_ptr.3238"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::HashMap.3241"*, %"class.WTF::HashMap.3241"** %129, align 8
  %131 = bitcast %"class.std::__1::unique_ptr.3238"* %128 to i64*
  store i64 %127, i64* %131, align 8
  %132 = icmp eq %"class.WTF::HashMap.3241"* %130, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %130, i64 0, i32 0, i32 0
  %135 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %134, align 8
  %136 = icmp eq %"struct.WTF::KeyValuePair.3245"* %135, null
  br i1 %136, label %140, label %137, !prof !2

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %130, i64 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  tail call void @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.3245"* nonnull %135, i32 %139) #15
  store %"struct.WTF::KeyValuePair.3245"* null, %"struct.WTF::KeyValuePair.3245"** %134, align 8
  br label %140

140:                                              ; preds = %137, %133
  %141 = bitcast %"class.WTF::HashMap.3241"* %130 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %141) #15
  br label %142

142:                                              ; preds = %140, %125
  %143 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #15
  %144 = ptrtoint i8* %143 to i64
  %145 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 4
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.3249", %"class.std::__1::unique_ptr.3249"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::Vector.3252"*, %"class.WTF::Vector.3252"** %146, align 8
  %148 = bitcast %"class.std::__1::unique_ptr.3249"* %145 to i64*
  store i64 %144, i64* %148, align 8
  %149 = icmp eq %"class.WTF::Vector.3252"* %147, null
  br i1 %149, label %190, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %147, i64 0, i32 0, i32 0, i32 0
  %152 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %151, align 8
  %153 = icmp eq %"struct.std::__1::pair.3255"* %152, null
  br i1 %153, label %188, label %154, !prof !2

154:                                              ; preds = %150
  %155 = bitcast %"struct.std::__1::pair.3255"* %152 to i8*
  %156 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %147, i64 0, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %186, label %159, !prof !3

159:                                              ; preds = %154
  %160 = zext i32 %157 to i64
  %161 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %152, i64 %160
  br label %162

162:                                              ; preds = %180, %159
  %163 = phi %"struct.std::__1::pair.3255"* [ %181, %180 ], [ %152, %159 ]
  %164 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #15
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %163, i64 1
  %182 = icmp eq %"struct.std::__1::pair.3255"* %181, %161
  br i1 %182, label %183, label %162

183:                                              ; preds = %180
  store i32 0, i32* %156, align 4
  %184 = bitcast %"class.WTF::Vector.3252"* %147 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %154
  %187 = phi i8* [ %185, %183 ], [ %155, %154 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #15
  store %"struct.std::__1::pair.3255"* null, %"struct.std::__1::pair.3255"** %151, align 8
  br label %188

188:                                              ; preds = %186, %150
  %189 = bitcast %"class.WTF::Vector.3252"* %147 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %189) #15
  br label %190

190:                                              ; preds = %188, %142
  %191 = getelementptr inbounds %"class.std::__1::vector.2769", %"class.std::__1::vector.2769"* %3, i64 0, i32 0, i32 0
  %192 = load %"class.WTF::String"*, %"class.WTF::String"** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::vector.2769", %"class.std::__1::vector.2769"* %3, i64 0, i32 0, i32 1
  %194 = load %"class.WTF::String"*, %"class.WTF::String"** %193, align 8
  %195 = icmp eq %"class.WTF::String"* %192, %194
  br i1 %195, label %196, label %204

196:                                              ; preds = %285, %190
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  store i8 0, i8* %11, align 1
  %197 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135"* %5, i64 0, i32 0
  %198 = load i8, i8* %197, align 1, !range !4
  %199 = icmp eq i8 %198, 0
  %200 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135"* %5, i64 0, i32 1
  %201 = select i1 %199, i8* %11, i8* %200
  %202 = load i8, i8* %201, align 1, !range !4
  %203 = icmp eq i8 %202, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  br i1 %203, label %304, label %288

204:                                              ; preds = %190, %285
  %205 = phi %"class.WTF::String"* [ %286, %285 ], [ %192, %190 ]
  %206 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %2) #15
  %207 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %206, %"class.WTF::String"* dereferenceable(8) %205) #15
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %285, label %209

209:                                              ; preds = %204
  %210 = load %"class.WTF::Vector.3252"*, %"class.WTF::Vector.3252"** %146, align 8
  %211 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %210, i64 0, i32 0, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %210, i64 0, i32 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %216, label %255, !prof !3

216:                                              ; preds = %209
  %217 = add i32 %212, 1
  %218 = lshr i32 %212, 2
  %219 = add i32 %217, %218
  %220 = icmp ugt i32 %219, 4
  %221 = select i1 %220, i32 %219, i32 4
  %222 = icmp ugt i32 %221, %217
  %223 = select i1 %222, i32 %221, i32 %217
  %224 = icmp ult i32 %212, %223
  br i1 %224, label %225, label %255, !prof !2

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %210, i64 0, i32 0, i32 0, i32 0
  %227 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %226, align 8
  %228 = icmp eq %"struct.std::__1::pair.3255"* %227, null
  %229 = zext i32 %223 to i64
  %230 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEEEEmm(i64 %229) #15
  %231 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %230, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEEEEPKcv, i64 0, i64 0)) #15
  br i1 %228, label %232, label %237

232:                                              ; preds = %225
  %233 = ptrtoint i8* %231 to i64
  %234 = bitcast %"class.WTF::Vector.3252"* %210 to i64*
  store atomic i64 %233, i64* %234 monotonic, align 8
  %235 = lshr i64 %230, 4
  %236 = trunc i64 %235 to i32
  store i32 %236, i32* %213, align 8
  br label %255

237:                                              ; preds = %225
  %238 = lshr i64 %230, 4
  %239 = ptrtoint i8* %231 to i64
  %240 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %226, align 8
  %241 = icmp ne i8* %231, null
  %242 = icmp ne %"struct.std::__1::pair.3255"* %240, null
  %243 = and i1 %241, %242
  %244 = bitcast %"struct.std::__1::pair.3255"* %240 to i8*
  br i1 %243, label %245, label %251, !prof !2

245:                                              ; preds = %237
  %246 = load i32, i32* %211, align 4
  %247 = zext i32 %246 to i64
  %248 = shl nuw nsw i64 %247, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %231, i8* nonnull align 8 %244, i64 %248, i1 false) #15
  %249 = bitcast %"class.WTF::Vector.3252"* %210 to i8**
  %250 = load i8*, i8** %249, align 8
  br label %251

251:                                              ; preds = %245, %237
  %252 = phi i8* [ %250, %245 ], [ %244, %237 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %252) #15
  %253 = bitcast %"class.WTF::Vector.3252"* %210 to i64*
  store atomic i64 %239, i64* %253 monotonic, align 8
  %254 = trunc i64 %238 to i32
  store i32 %254, i32* %213, align 8
  br label %255

255:                                              ; preds = %251, %232, %216, %209
  %256 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %210, i64 0, i32 0, i32 0, i32 0
  %257 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %256, align 8
  %258 = load i32, i32* %211, align 4
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %205, i64 0, i32 0, i32 0
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %260, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %257, i64 %259, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %262, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %263, label %281, label %264

264:                                              ; preds = %255
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %281

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i33
  %273 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %272, i33 1) #15
  %274 = extractvalue { i33, i1 } %273, 1
  %275 = extractvalue { i33, i1 } %273, 0
  %276 = icmp slt i33 %275, 0
  %277 = or i1 %274, %276
  br i1 %277, label %278, label %279, !prof !3

278:                                              ; preds = %269
  tail call void @llvm.trap() #15
  unreachable

279:                                              ; preds = %269
  %280 = trunc i33 %275 to i32
  store i32 %280, i32* %270, align 4
  br label %281

281:                                              ; preds = %255, %264, %279
  %282 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %257, i64 %259, i32 1
  store i32 %207, i32* %282, align 8
  %283 = load i32, i32* %211, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %211, align 4
  br label %285

285:                                              ; preds = %204, %281
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %205, i64 1
  %287 = icmp eq %"class.WTF::String"* %286, %194
  br i1 %287, label %196, label %204

288:                                              ; preds = %196
  %289 = tail call %"class.WTF::HashMap.2913"* @_ZN5blink25InspectorDOMSnapshotAgent19BuildPaintLayerTreeEPNS_8DocumentE(%"class.blink::Document"* %2) #15
  %290 = ptrtoint %"class.WTF::HashMap.2913"* %289 to i64
  %291 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 5
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr.2910", %"class.std::__1::unique_ptr.2910"* %291, i64 0, i32 0, i32 0, i32 0
  %293 = load %"class.WTF::HashMap.2913"*, %"class.WTF::HashMap.2913"** %292, align 8
  %294 = bitcast %"class.std::__1::unique_ptr.2910"* %291 to i64*
  store i64 %290, i64* %294, align 8
  %295 = icmp eq %"class.WTF::HashMap.2913"* %293, null
  br i1 %295, label %304, label %296

296:                                              ; preds = %288
  %297 = getelementptr inbounds %"class.WTF::HashMap.2913", %"class.WTF::HashMap.2913"* %293, i64 0, i32 0, i32 0
  %298 = load %"struct.WTF::KeyValuePair.3122"*, %"struct.WTF::KeyValuePair.3122"** %297, align 8
  %299 = icmp eq %"struct.WTF::KeyValuePair.3122"* %298, null
  br i1 %299, label %302, label %300, !prof !2

300:                                              ; preds = %296
  %301 = bitcast %"struct.WTF::KeyValuePair.3122"* %298 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %301) #15
  store %"struct.WTF::KeyValuePair.3122"* null, %"struct.WTF::KeyValuePair.3122"** %297, align 8
  br label %302

302:                                              ; preds = %300, %296
  %303 = bitcast %"class.WTF::HashMap.2913"* %293 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %303) #15
  br label %304

304:                                              ; preds = %288, %302, %196
  %305 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12)
  store i8 0, i8* %12, align 1
  %306 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135"* %4, i64 0, i32 0
  %307 = load i8, i8* %306, align 1, !range !4
  %308 = icmp eq i8 %307, 0
  %309 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135"* %4, i64 0, i32 1
  %310 = select i1 %308, i8* %12, i8* %309
  %311 = load i8, i8* %310, align 1, !range !4
  %312 = icmp ne i8 %311, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13)
  store i8 0, i8* %13, align 1
  %313 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135"* %6, i64 0, i32 0
  %314 = load i8, i8* %313, align 1, !range !4
  %315 = icmp eq i8 %314, 0
  %316 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3135", %"class.crdtp::detail::ValueMaybe.3135"* %6, i64 0, i32 1
  %317 = select i1 %315, i8* %13, i8* %316
  %318 = load i8, i8* %317, align 1, !range !4
  %319 = icmp ne i8 %318, 0
  %320 = tail call i32 @_ZN5blink22LegacyDOMSnapshotAgent9VisitNodeEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* %1, %"class.blink::Node"* %305, i1 zeroext %312, i1 zeroext %319)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12)
  %321 = load i64, i64* %20, align 8
  store %"class.std::__1::vector.2748"* null, %"class.std::__1::vector.2748"** %18, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.2745", %"class.std::__1::unique_ptr.2745"* %7, i64 0, i32 0, i32 0, i32 0
  %323 = load %"class.std::__1::vector.2748"*, %"class.std::__1::vector.2748"** %322, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.2745"* %7 to i64*
  store i64 %321, i64* %324, align 8
  %325 = icmp eq %"class.std::__1::vector.2748"* %323, null
  br i1 %325, label %355, label %326

326:                                              ; preds = %304
  %327 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %323, i64 0, i32 0, i32 0
  %328 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %327, align 8
  %329 = icmp eq %"class.std::__1::unique_ptr.3128"* %328, null
  br i1 %329, label %353, label %330

330:                                              ; preds = %326
  %331 = bitcast %"class.std::__1::unique_ptr.3128"* %328 to i8*
  %332 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %323, i64 0, i32 0, i32 1
  %333 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %332, align 8
  %334 = icmp eq %"class.std::__1::unique_ptr.3128"* %333, %328
  br i1 %334, label %351, label %335

335:                                              ; preds = %330, %346
  %336 = phi %"class.std::__1::unique_ptr.3128"* [ %337, %346 ], [ %333, %330 ]
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %336, i64 -1
  %338 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %337, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %338, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %338, align 8
  %340 = icmp eq %"class.blink::protocol::DOMSnapshot::DOMNode"* %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %335
  %342 = bitcast %"class.blink::protocol::DOMSnapshot::DOMNode"* %339 to void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)***
  %343 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)**, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*** %342, align 8
  %344 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %343, i64 2
  %345 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %344, align 8
  tail call void %345(%"class.blink::protocol::DOMSnapshot::DOMNode"* nonnull %339) #15
  br label %346

346:                                              ; preds = %341, %335
  %347 = icmp eq %"class.std::__1::unique_ptr.3128"* %337, %328
  br i1 %347, label %348, label %335

348:                                              ; preds = %346
  %349 = bitcast %"class.std::__1::vector.2748"* %323 to i8**
  %350 = load i8*, i8** %349, align 8
  br label %351

351:                                              ; preds = %348, %330
  %352 = phi i8* [ %350, %348 ], [ %331, %330 ]
  store %"class.std::__1::unique_ptr.3128"* %328, %"class.std::__1::unique_ptr.3128"** %332, align 8
  tail call void @_ZdlPv(i8* %352) #16
  br label %353

353:                                              ; preds = %351, %326
  %354 = bitcast %"class.std::__1::vector.2748"* %323 to i8*
  tail call void @_ZdlPv(i8* %354) #16
  br label %355

355:                                              ; preds = %304, %353
  %356 = load i64, i64* %57, align 8
  store %"class.std::__1::vector.2755"* null, %"class.std::__1::vector.2755"** %55, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.2752", %"class.std::__1::unique_ptr.2752"* %8, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.std::__1::vector.2755"*, %"class.std::__1::vector.2755"** %357, align 8
  %359 = bitcast %"class.std::__1::unique_ptr.2752"* %8 to i64*
  store i64 %356, i64* %359, align 8
  %360 = icmp eq %"class.std::__1::vector.2755"* %358, null
  br i1 %360, label %390, label %361

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %358, i64 0, i32 0, i32 0
  %363 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %362, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.3177"* %363, null
  br i1 %364, label %388, label %365

365:                                              ; preds = %361
  %366 = bitcast %"class.std::__1::unique_ptr.3177"* %363 to i8*
  %367 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %358, i64 0, i32 0, i32 1
  %368 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %367, align 8
  %369 = icmp eq %"class.std::__1::unique_ptr.3177"* %368, %363
  br i1 %369, label %386, label %370

370:                                              ; preds = %365, %381
  %371 = phi %"class.std::__1::unique_ptr.3177"* [ %372, %381 ], [ %368, %365 ]
  %372 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %371, i64 -1
  %373 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %372, i64 0, i32 0, i32 0, i32 0
  %374 = load %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %373, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %373, align 8
  %375 = icmp eq %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %374, null
  br i1 %375, label %381, label %376

376:                                              ; preds = %370
  %377 = bitcast %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %374 to void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)***
  %378 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)**, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %378, i64 2
  %380 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %379, align 8
  tail call void %380(%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* nonnull %374) #15
  br label %381

381:                                              ; preds = %376, %370
  %382 = icmp eq %"class.std::__1::unique_ptr.3177"* %372, %363
  br i1 %382, label %383, label %370

383:                                              ; preds = %381
  %384 = bitcast %"class.std::__1::vector.2755"* %358 to i8**
  %385 = load i8*, i8** %384, align 8
  br label %386

386:                                              ; preds = %383, %365
  %387 = phi i8* [ %385, %383 ], [ %366, %365 ]
  store %"class.std::__1::unique_ptr.3177"* %363, %"class.std::__1::unique_ptr.3177"** %367, align 8
  tail call void @_ZdlPv(i8* %387) #16
  br label %388

388:                                              ; preds = %386, %361
  %389 = bitcast %"class.std::__1::vector.2755"* %358 to i8*
  tail call void @_ZdlPv(i8* %389) #16
  br label %390

390:                                              ; preds = %355, %388
  %391 = load i64, i64* %94, align 8
  store %"class.std::__1::vector.2762"* null, %"class.std::__1::vector.2762"** %92, align 8
  %392 = getelementptr inbounds %"class.std::__1::unique_ptr.2759", %"class.std::__1::unique_ptr.2759"* %9, i64 0, i32 0, i32 0, i32 0
  %393 = load %"class.std::__1::vector.2762"*, %"class.std::__1::vector.2762"** %392, align 8
  %394 = bitcast %"class.std::__1::unique_ptr.2759"* %9 to i64*
  store i64 %391, i64* %394, align 8
  %395 = icmp eq %"class.std::__1::vector.2762"* %393, null
  br i1 %395, label %425, label %396

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %393, i64 0, i32 0, i32 0
  %398 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %397, align 8
  %399 = icmp eq %"class.std::__1::unique_ptr.3224"* %398, null
  br i1 %399, label %423, label %400

400:                                              ; preds = %396
  %401 = bitcast %"class.std::__1::unique_ptr.3224"* %398 to i8*
  %402 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %393, i64 0, i32 0, i32 1
  %403 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %402, align 8
  %404 = icmp eq %"class.std::__1::unique_ptr.3224"* %403, %398
  br i1 %404, label %421, label %405

405:                                              ; preds = %400, %416
  %406 = phi %"class.std::__1::unique_ptr.3224"* [ %407, %416 ], [ %403, %400 ]
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %406, i64 -1
  %408 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %407, i64 0, i32 0, i32 0, i32 0
  %409 = load %"class.blink::protocol::DOMSnapshot::ComputedStyle"*, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %408, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %408, align 8
  %410 = icmp eq %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %409, null
  br i1 %410, label %416, label %411

411:                                              ; preds = %405
  %412 = bitcast %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %409 to void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)***
  %413 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)**, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*** %412, align 8
  %414 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %413, i64 2
  %415 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %414, align 8
  tail call void %415(%"class.blink::protocol::DOMSnapshot::ComputedStyle"* nonnull %409) #15
  br label %416

416:                                              ; preds = %411, %405
  %417 = icmp eq %"class.std::__1::unique_ptr.3224"* %407, %398
  br i1 %417, label %418, label %405

418:                                              ; preds = %416
  %419 = bitcast %"class.std::__1::vector.2762"* %393 to i8**
  %420 = load i8*, i8** %419, align 8
  br label %421

421:                                              ; preds = %418, %400
  %422 = phi i8* [ %420, %418 ], [ %401, %400 ]
  store %"class.std::__1::unique_ptr.3224"* %398, %"class.std::__1::unique_ptr.3224"** %402, align 8
  tail call void @_ZdlPv(i8* %422) #16
  br label %423

423:                                              ; preds = %421, %396
  %424 = bitcast %"class.std::__1::vector.2762"* %393 to i8*
  tail call void @_ZdlPv(i8* %424) #16
  br label %425

425:                                              ; preds = %390, %423
  %426 = load %"class.WTF::HashMap.3241"*, %"class.WTF::HashMap.3241"** %129, align 8
  store %"class.WTF::HashMap.3241"* null, %"class.WTF::HashMap.3241"** %129, align 8
  %427 = icmp eq %"class.WTF::HashMap.3241"* %426, null
  br i1 %427, label %437, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %426, i64 0, i32 0, i32 0
  %430 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %429, align 8
  %431 = icmp eq %"struct.WTF::KeyValuePair.3245"* %430, null
  br i1 %431, label %435, label %432, !prof !2

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %426, i64 0, i32 0, i32 1
  %434 = load i32, i32* %433, align 8
  tail call void @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.3245"* nonnull %430, i32 %434) #15
  store %"struct.WTF::KeyValuePair.3245"* null, %"struct.WTF::KeyValuePair.3245"** %429, align 8
  br label %435

435:                                              ; preds = %432, %428
  %436 = bitcast %"class.WTF::HashMap.3241"* %426 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %436) #15
  br label %437

437:                                              ; preds = %425, %435
  %438 = load %"class.WTF::Vector.3252"*, %"class.WTF::Vector.3252"** %146, align 8
  store %"class.WTF::Vector.3252"* null, %"class.WTF::Vector.3252"** %146, align 8
  %439 = icmp eq %"class.WTF::Vector.3252"* %438, null
  br i1 %439, label %480, label %440

440:                                              ; preds = %437
  %441 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %438, i64 0, i32 0, i32 0, i32 0
  %442 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %441, align 8
  %443 = icmp eq %"struct.std::__1::pair.3255"* %442, null
  br i1 %443, label %478, label %444, !prof !2

444:                                              ; preds = %440
  %445 = bitcast %"struct.std::__1::pair.3255"* %442 to i8*
  %446 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %438, i64 0, i32 0, i32 0, i32 2
  %447 = load i32, i32* %446, align 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449, !prof !3

449:                                              ; preds = %444
  %450 = zext i32 %447 to i64
  %451 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %442, i64 %450
  br label %452

452:                                              ; preds = %470, %449
  %453 = phi %"struct.std::__1::pair.3255"* [ %471, %470 ], [ %442, %449 ]
  %454 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %453, i64 0, i32 0, i32 0, i32 0
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %470, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = and i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 0
  %463 = load i32, i32* %462, align 4
  br i1 %461, label %464, label %466

464:                                              ; preds = %457
  %465 = add i32 %463, -1
  store i32 %465, i32* %462, align 4
  br label %466

466:                                              ; preds = %464, %457
  %467 = phi i32 [ %465, %464 ], [ %463, %457 ]
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %470

469:                                              ; preds = %466
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %455) #15
  br label %470

470:                                              ; preds = %469, %466, %452
  %471 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %453, i64 1
  %472 = icmp eq %"struct.std::__1::pair.3255"* %471, %451
  br i1 %472, label %473, label %452

473:                                              ; preds = %470
  store i32 0, i32* %446, align 4
  %474 = bitcast %"class.WTF::Vector.3252"* %438 to i8**
  %475 = load i8*, i8** %474, align 8
  br label %476

476:                                              ; preds = %473, %444
  %477 = phi i8* [ %475, %473 ], [ %445, %444 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %477) #15
  store %"struct.std::__1::pair.3255"* null, %"struct.std::__1::pair.3255"** %441, align 8
  br label %478

478:                                              ; preds = %476, %440
  %479 = bitcast %"class.WTF::Vector.3252"* %438 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %479) #15
  br label %480

480:                                              ; preds = %437, %478
  %481 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %482 = load %"class.WTF::HashMap.2913"*, %"class.WTF::HashMap.2913"** %481, align 8
  store %"class.WTF::HashMap.2913"* null, %"class.WTF::HashMap.2913"** %481, align 8
  %483 = icmp eq %"class.WTF::HashMap.2913"* %482, null
  br i1 %483, label %492, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.WTF::HashMap.2913", %"class.WTF::HashMap.2913"* %482, i64 0, i32 0, i32 0
  %486 = load %"struct.WTF::KeyValuePair.3122"*, %"struct.WTF::KeyValuePair.3122"** %485, align 8
  %487 = icmp eq %"struct.WTF::KeyValuePair.3122"* %486, null
  br i1 %487, label %490, label %488, !prof !2

488:                                              ; preds = %484
  %489 = bitcast %"struct.WTF::KeyValuePair.3122"* %486 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %489) #15
  store %"struct.WTF::KeyValuePair.3122"* null, %"struct.WTF::KeyValuePair.3122"** %485, align 8
  br label %490

490:                                              ; preds = %488, %484
  %491 = bitcast %"class.WTF::HashMap.2913"* %482 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %491) #15
  br label %492

492:                                              ; preds = %480, %490
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #15
  %493 = icmp eq %"class.std::__1::vector.2769"* %3, null
  br i1 %493, label %529, label %494

494:                                              ; preds = %492
  %495 = load %"class.WTF::String"*, %"class.WTF::String"** %191, align 8
  %496 = icmp eq %"class.WTF::String"* %495, null
  br i1 %496, label %527, label %497

497:                                              ; preds = %494
  %498 = bitcast %"class.WTF::String"* %495 to i8*
  %499 = load %"class.WTF::String"*, %"class.WTF::String"** %193, align 8
  %500 = icmp eq %"class.WTF::String"* %499, %495
  br i1 %500, label %525, label %501

501:                                              ; preds = %497, %520
  %502 = phi %"class.WTF::String"* [ %503, %520 ], [ %499, %497 ]
  %503 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %502, i64 -1
  %504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %503, i64 0, i32 0, i32 0
  %505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %504, align 8
  %506 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %506, label %520, label %507

507:                                              ; preds = %501
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  br i1 %511, label %514, label %516

514:                                              ; preds = %507
  %515 = add i32 %513, -1
  store i32 %515, i32* %512, align 4
  br label %516

516:                                              ; preds = %514, %507
  %517 = phi i32 [ %515, %514 ], [ %513, %507 ]
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %516
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %505) #15
  br label %520

520:                                              ; preds = %519, %516, %501
  %521 = icmp eq %"class.WTF::String"* %503, %495
  br i1 %521, label %522, label %501

522:                                              ; preds = %520
  %523 = bitcast %"class.std::__1::vector.2769"* %3 to i8**
  %524 = load i8*, i8** %523, align 8
  br label %525

525:                                              ; preds = %522, %497
  %526 = phi i8* [ %524, %522 ], [ %498, %497 ]
  store %"class.WTF::String"* %495, %"class.WTF::String"** %193, align 8
  tail call void @_ZdlPv(i8* %526) #16
  br label %527

527:                                              ; preds = %525, %494
  %528 = bitcast %"class.std::__1::vector.2769"* %3 to i8*
  tail call void @_ZdlPv(i8* %528) #16
  br label %529

529:                                              ; preds = %492, %527
  ret void
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14LocalFrameView28UpdateLifecycleToLayoutCleanENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare %"class.WTF::HashMap.2913"* @_ZN5blink25InspectorDOMSnapshotAgent19BuildPaintLayerTreeEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22LegacyDOMSnapshotAgent9VisitNodeEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* nocapture readonly, %"class.blink::Node"*, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.3128", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.blink::ScriptState::Scope", align 8
  %10 = alloca %"class.WTF::Vector.3274", align 8
  %11 = alloca %"class.v8_inspector::StringView", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 0, i32 0
  %22 = icmp eq %"class.blink::Node"* %21, %1
  br i1 %22, label %23, label %28

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::HashMap.2913"*, %"class.WTF::HashMap.2913"** %24, align 8
  %26 = icmp eq %"class.WTF::HashMap.2913"* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %20) #15
  br label %28

28:                                               ; preds = %23, %27, %4
  %29 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %30 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %30, i64 30
  %32 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %31, align 8
  %33 = tail call i32 %32(%"class.blink::Node"* %1) #15
  switch i32 %33, label %34 [
    i32 3, label %36
    i32 2, label %36
    i32 8, label %36
    i32 4, label %36
    i32 11, label %36
  ]

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  br label %43

36:                                               ; preds = %28, %28, %28, %28, %28
  %37 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %38 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %38, i64 28
  %40 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %39, align 8
  %41 = tail call %"class.WTF::StringImpl"* %40(%"class.blink::Node"* %1) #15
  %42 = ptrtoint %"class.WTF::StringImpl"* %41 to i64
  br label %43

43:                                               ; preds = %34, %36
  %44 = phi %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** [ %35, %34 ], [ %37, %36 ]
  %45 = phi i64 [ 0, %34 ], [ %42, %36 ]
  %46 = bitcast %"class.std::__1::unique_ptr.3128"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::DOMSnapshot::DOMNode"*), %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  %48 = tail call i8* @_Znwm(i64 336) #16
  %49 = bitcast i8* %48 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMSnapshot7DOMNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 16
  %51 = getelementptr inbounds i8, i8* %48, i64 40
  %52 = bitcast i8* %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds i8, i8* %48, i64 48
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 56
  %55 = getelementptr inbounds i8, i8* %48, i64 100
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %48, i64 104
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds i8, i8* %48, i64 112
  %59 = bitcast i8* %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %48, i64 120
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds i8, i8* %48, i64 128
  %62 = bitcast i8* %61 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds i8, i8* %48, i64 136
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds i8, i8* %48, i64 144
  %65 = bitcast i8* %64 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds i8, i8* %48, i64 152
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds i8, i8* %48, i64 160
  %68 = bitcast i8* %67 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds i8, i8* %48, i64 168
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds i8, i8* %48, i64 176
  %71 = bitcast i8* %70 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds i8, i8* %48, i64 184
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds i8, i8* %48, i64 192
  %74 = bitcast i8* %73 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds i8, i8* %48, i64 200
  store i8 0, i8* %75, align 8
  %76 = getelementptr inbounds i8, i8* %48, i64 208
  %77 = bitcast i8* %76 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds i8, i8* %48, i64 216
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds i8, i8* %48, i64 220
  %80 = bitcast i8* %79 to i32*
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %48, i64 224
  store i8 0, i8* %81, align 8
  %82 = getelementptr inbounds i8, i8* %48, i64 232
  %83 = bitcast i8* %82 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds i8, i8* %48, i64 240
  store i8 0, i8* %84, align 8
  %85 = getelementptr inbounds i8, i8* %48, i64 248
  %86 = bitcast i8* %85 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %87 = getelementptr inbounds i8, i8* %48, i64 256
  store i8 0, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %48, i64 257
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %48, i64 264
  %90 = bitcast i8* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %48, i64 272
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds i8, i8* %48, i64 280
  %93 = bitcast i8* %92 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %94 = getelementptr inbounds i8, i8* %48, i64 288
  store i8 0, i8* %94, align 8
  %95 = getelementptr inbounds i8, i8* %48, i64 296
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds i8, i8* %48, i64 304
  store i8 0, i8* %97, align 8
  %98 = getelementptr inbounds i8, i8* %48, i64 312
  %99 = bitcast i8* %98 to double*
  store double 0.000000e+00, double* %99, align 8
  %100 = getelementptr inbounds i8, i8* %48, i64 320
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds i8, i8* %48, i64 328
  %102 = bitcast i8* %101 to double*
  store double 0.000000e+00, double* %102, align 8
  %103 = getelementptr inbounds i8, i8* %48, i64 8
  %104 = bitcast i8* %103 to i32*
  store i32 0, i32* %104, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 17, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 41, i1 false) #15
  %105 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %29, align 8
  %106 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %105, i64 30
  %107 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %106, align 8
  %108 = tail call i32 %107(%"class.blink::Node"* %1) #15
  store i32 %108, i32* %104, align 8
  %109 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %44, align 8
  %110 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %109, i64 27
  %111 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %110, align 8
  %112 = tail call %"class.WTF::StringImpl"* %111(%"class.blink::Node"* %1) #15
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %43
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #15
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %119
  tail call void @llvm.trap() #15
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %114, %43
  %132 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %133 = bitcast i8* %50 to i64*
  %134 = bitcast i8* %50 to %"class.WTF::StringImpl"**
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store i64 %132, i64* %133, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #15
  br label %150

150:                                              ; preds = %131, %146, %149
  %151 = getelementptr inbounds i8, i8* %48, i64 24
  %152 = inttoptr i64 %45 to %"class.WTF::StringImpl"*
  %153 = icmp eq i64 %45, 0
  br i1 %153, label %171, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %171

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #15
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !3

168:                                              ; preds = %159
  tail call void @llvm.trap() #15
  unreachable

169:                                              ; preds = %159
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %160, align 4
  br label %171

171:                                              ; preds = %169, %154, %150
  %172 = bitcast i8* %151 to i64*
  %173 = bitcast i8* %151 to %"class.WTF::StringImpl"**
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  store i64 %45, i64* %172, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #15
  br label %189

189:                                              ; preds = %171, %185, %188
  %190 = tail call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* %1) #15
  %191 = getelementptr inbounds i8, i8* %48, i64 68
  %192 = bitcast i8* %191 to i32*
  store i32 %190, i32* %192, align 4
  %193 = bitcast %"class.std::__1::unique_ptr.3128"* %5 to i8**
  store i8* %48, i8** %193, align 8
  br i1 %113, label %207, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #15
  br label %207

207:                                              ; preds = %206, %203, %189
  %208 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 6
  %209 = load %"class.WTF::HashMap.2920"*, %"class.WTF::HashMap.2920"** %208, align 8
  %210 = icmp eq %"class.WTF::HashMap.2920"* %209, null
  br i1 %210, label %425, label %211

211:                                              ; preds = %207
  %212 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  %213 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %212, i64 0, i32 8
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %"class.WTF::HashMap.2920", %"class.WTF::HashMap.2920"* %209, i64 0, i32 0, i32 0
  %216 = load %"struct.WTF::KeyValuePair.3126"*, %"struct.WTF::KeyValuePair.3126"** %215, align 8
  %217 = icmp eq %"struct.WTF::KeyValuePair.3126"* %216, null
  br i1 %217, label %425, label %218

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.WTF::HashMap.2920", %"class.WTF::HashMap.2920"* %209, i64 0, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  %221 = add i32 %220, -1
  %222 = zext i32 %221 to i64
  %223 = shl i32 %214, 15
  %224 = xor i32 %223, -1
  %225 = add i32 %214, %224
  %226 = lshr i32 %225, 10
  %227 = xor i32 %226, %225
  %228 = mul i32 %227, 9
  %229 = lshr i32 %228, 6
  %230 = xor i32 %229, %228
  %231 = shl i32 %230, 11
  %232 = xor i32 %231, -1
  %233 = add i32 %230, %232
  %234 = lshr i32 %233, 16
  %235 = xor i32 %234, %233
  %236 = and i32 %221, %235
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %216, i64 %237
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %238, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, %214
  br i1 %241, label %270, label %242

242:                                              ; preds = %218
  %243 = xor i32 %235, -1
  %244 = lshr i32 %233, 23
  %245 = add i32 %244, %243
  %246 = shl i32 %245, 12
  %247 = xor i32 %246, %245
  %248 = lshr i32 %247, 7
  %249 = xor i32 %248, %247
  %250 = shl i32 %249, 2
  %251 = xor i32 %250, %249
  %252 = lshr i32 %251, 20
  %253 = xor i32 %252, %251
  %254 = or i32 %253, 1
  %255 = zext i32 %254 to i64
  br label %256

256:                                              ; preds = %261, %242
  %257 = phi i32 [ %240, %242 ], [ %268, %261 ]
  %258 = phi i64 [ %237, %242 ], [ %265, %261 ]
  %259 = phi i64 [ 0, %242 ], [ %263, %261 ]
  %260 = icmp eq i32 %257, 0
  br i1 %260, label %425, label %261

261:                                              ; preds = %256
  %262 = icmp eq i64 %259, 0
  %263 = select i1 %262, i64 %255, i64 %259
  %264 = add i64 %263, %258
  %265 = and i64 %264, %222
  %266 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %216, i64 %265
  %267 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %266, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, %214
  br i1 %269, label %270, label %256

270:                                              ; preds = %261, %218
  %271 = phi %"struct.WTF::KeyValuePair.3126"* [ %238, %218 ], [ %266, %261 ]
  %272 = icmp eq %"struct.WTF::KeyValuePair.3126"* %271, null
  br i1 %272, label %425, label %273

273:                                              ; preds = %270
  %274 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #15
  store i32 %214, i32* %6, align 4
  %275 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.2920"* nonnull %209, i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #15
  %276 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #15
  %277 = icmp eq %"class.blink::ContainerNode"* %276, null
  %278 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %278) #15
  br i1 %277, label %300, label %279

279:                                              ; preds = %273
  %280 = load %"class.WTF::HashMap.2920"*, %"class.WTF::HashMap.2920"** %208, align 8
  %281 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #15
  %282 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %281, i64 0, i32 0
  %283 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %282) #15
  store i32 %283, i32* %7, align 4
  %284 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.2920"* %280, i32* nonnull dereferenceable(4) %7)
  %285 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %284, %"class.WTF::StringImpl"* %275) #15
  %286 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %286, label %301, label %287

287:                                              ; preds = %279
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #15
  br label %301

300:                                              ; preds = %273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %278) #15
  br label %302

301:                                              ; preds = %299, %296, %279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %278) #15
  br i1 %285, label %410, label %302

302:                                              ; preds = %301, %300
  %303 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  %304 = load %"class.WTF::HashMap.2920"*, %"class.WTF::HashMap.2920"** %208, align 8
  %305 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %305) #15
  %306 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %303, i64 0, i32 8
  %307 = load i32, i32* %306, align 4
  store i32 %307, i32* %8, align 4
  %308 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.2920"* %304, i32* nonnull dereferenceable(4) %8)
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %327, label %310

310:                                              ; preds = %302
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %348

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #15
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !3

324:                                              ; preds = %315
  call void @llvm.trap() #15
  unreachable

325:                                              ; preds = %315
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %316, align 4
  br label %348

327:                                              ; preds = %302
  %328 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %303, i64 0, i32 26, i32 1
  %329 = bitcast %"class.WTF::String"* %328 to i64*
  %330 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %328, i64 0, i32 0, i32 0
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  store i64 0, i64* %329, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #15
  br label %346

346:                                              ; preds = %327, %342, %345
  %347 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %303, i64 0, i32 26, i32 0
  store i8 1, i8* %347, align 8
  br label %409

348:                                              ; preds = %325, %310
  %349 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %303, i64 0, i32 26, i32 1
  %350 = load atomic i32, i32* %311 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %365

353:                                              ; preds = %348
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = zext i32 %355 to i33
  %357 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %356, i33 1) #15
  %358 = extractvalue { i33, i1 } %357, 1
  %359 = extractvalue { i33, i1 } %357, 0
  %360 = icmp slt i33 %359, 0
  %361 = or i1 %358, %360
  br i1 %361, label %362, label %363, !prof !3

362:                                              ; preds = %353
  call void @llvm.trap() #15
  unreachable

363:                                              ; preds = %353
  %364 = trunc i33 %359 to i32
  store i32 %364, i32* %354, align 4
  br label %365

365:                                              ; preds = %363, %348
  %366 = ptrtoint %"class.WTF::StringImpl"* %308 to i64
  %367 = bitcast %"class.WTF::String"* %349 to i64*
  %368 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %349, i64 0, i32 0, i32 0
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %368, align 8
  store i64 %366, i64* %367, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %369) #15
  br label %384

384:                                              ; preds = %365, %380, %383
  %385 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %303, i64 0, i32 26, i32 0
  store i8 1, i8* %385, align 8
  %386 = load atomic i32, i32* %311 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  br i1 %388, label %391, label %393

391:                                              ; preds = %384
  %392 = add i32 %390, -1
  store i32 %392, i32* %389, align 4
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i32 [ %392, %391 ], [ %390, %384 ]
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #15
  %397 = load i32, i32* %389, align 4
  br label %398

398:                                              ; preds = %393, %396
  %399 = phi i32 [ %394, %393 ], [ %397, %396 ]
  %400 = load atomic i32, i32* %311 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %398
  %404 = add i32 %399, -1
  store i32 %404, i32* %389, align 4
  br label %405

405:                                              ; preds = %403, %398
  %406 = phi i32 [ %404, %403 ], [ %399, %398 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #15
  br label %409

409:                                              ; preds = %346, %405, %408
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %305) #15
  br label %410

410:                                              ; preds = %301, %409
  %411 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %411, label %425, label %412

412:                                              ; preds = %410
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = and i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  br i1 %416, label %419, label %421

419:                                              ; preds = %412
  %420 = add i32 %418, -1
  store i32 %420, i32* %417, align 4
  br label %421

421:                                              ; preds = %419, %412
  %422 = phi i32 [ %420, %419 ], [ %418, %412 ]
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #15
  br label %425

425:                                              ; preds = %256, %270, %211, %207, %424, %421, %410
  %426 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  %427 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %428 = load %"class.std::__1::vector.2748"*, %"class.std::__1::vector.2748"** %427, align 8
  %429 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %428, i64 0, i32 0, i32 1
  %430 = bitcast %"class.std::__1::unique_ptr.3128"** %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.std::__1::vector.2748"* %428 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = sub i64 %431, %433
  %435 = lshr exact i64 %434, 3
  %436 = trunc i64 %435 to i32
  %437 = inttoptr i64 %431 to %"class.std::__1::unique_ptr.3128"*
  %438 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %428, i64 0, i32 0, i32 2, i32 0, i32 0
  %439 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %438, align 8
  %440 = icmp ugt %"class.std::__1::unique_ptr.3128"* %439, %437
  br i1 %440, label %441, label %446

441:                                              ; preds = %425
  %442 = ptrtoint %"class.blink::protocol::DOMSnapshot::DOMNode"* %426 to i64
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  %443 = inttoptr i64 %431 to i64*
  store i64 %442, i64* %443, align 8
  %444 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %437, i64 1
  %445 = ptrtoint %"class.std::__1::unique_ptr.3128"* %444 to i64
  store i64 %445, i64* %430, align 8
  br label %447

446:                                              ; preds = %425
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot7DOMNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2748"* %428, %"class.std::__1::unique_ptr.3128"* nonnull dereferenceable(8) %5) #15
  br label %447

447:                                              ; preds = %441, %446
  %448 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %449 = load i32, i32* %448, align 8
  %450 = and i32 %449, 1
  %451 = icmp eq i32 %450, 0
  %452 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %451, label %457, label %453

453:                                              ; preds = %447
  %454 = bitcast %"class.blink::NodeData"** %452 to %"class.blink::NodeRareData"**
  %455 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %454, align 8
  %456 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %455, i64 0, i32 1, i32 0, i32 0
  br label %459

457:                                              ; preds = %447
  %458 = bitcast %"class.blink::NodeData"** %452 to %"class.blink::NodeRenderingData"**
  br label %459

459:                                              ; preds = %453, %457
  %460 = phi %"class.blink::NodeRenderingData"** [ %456, %453 ], [ %458, %457 ]
  %461 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %460, align 8
  %462 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %461, i64 0, i32 1
  %463 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %462, align 8
  %464 = call i32 @_ZN5blink22LegacyDOMSnapshotAgent19VisitLayoutTreeNodeEPNS_12LayoutObjectEPNS_4NodeEi(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::LayoutObject"* %463, %"class.blink::Node"* %1, i32 %436)
  %465 = icmp eq i32 %464, -1
  br i1 %465, label %469, label %466

466:                                              ; preds = %459
  %467 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 12, i32 1
  store i32 %464, i32* %467, align 4
  %468 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 12, i32 0
  store i8 1, i8* %468, align 4
  br label %469

469:                                              ; preds = %459, %466
  %470 = bitcast %"class.blink::Node"* %1 to i1 (%"class.blink::Node"*)***
  %471 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %470, align 8
  %472 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %471, i64 61
  %473 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %472, align 8
  %474 = call zeroext i1 %473(%"class.blink::Node"* %1) #15
  br i1 %474, label %475, label %478

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 23, i32 1
  store i8 1, i8* %476, align 1
  %477 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 23, i32 0
  store i8 1, i8* %477, align 1
  br label %478

478:                                              ; preds = %475, %469
  br i1 %2, label %479, label %614

479:                                              ; preds = %478
  %480 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %481 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %480, i64 0, i32 2, i32 0, i32 0
  %482 = load %"class.blink::Document"*, %"class.blink::Document"** %481, align 8
  %483 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %482) #15
  %484 = icmp eq %"class.blink::LocalFrame"* %483, null
  br i1 %484, label %614, label %485

485:                                              ; preds = %479
  %486 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %487 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %486, i64 0, i32 2, i32 0, i32 0
  %488 = load %"class.blink::Document"*, %"class.blink::Document"** %487, align 8
  %489 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %488) #15
  %490 = call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %489) #15
  %491 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %490, i64 0, i32 1, i32 0, i32 0, i32 0
  %492 = load %"class.v8::Context"*, %"class.v8::Context"** %491, align 8
  %493 = icmp eq %"class.v8::Context"* %492, null
  br i1 %493, label %614, label %494

494:                                              ; preds = %485
  %495 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %490, i64 0, i32 3, i32 0, i32 0
  %496 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %495, align 8
  %497 = icmp eq %"class.blink::V8PerContextData"* %496, null
  br i1 %497, label %614, label %498

498:                                              ; preds = %494
  %499 = bitcast %"class.blink::ScriptState::Scope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %499) #15
  %500 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %9, i64 0, i32 1, i32 0
  %501 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %9, i64 0, i32 0
  %502 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %490, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %499, i8 -86, i64 32, i1 false)
  %503 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %502, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %501, %"class.v8::Isolate"* %503) #15
  %504 = load %"class.v8::Context"*, %"class.v8::Context"** %491, align 8
  %505 = icmp eq %"class.v8::Context"* %504, null
  br i1 %505, label %513, label %506

506:                                              ; preds = %498
  %507 = bitcast %"class.blink::ScriptState"* %490 to %"class.v8::internal::Isolate"**
  %508 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %507, align 8
  %509 = bitcast %"class.v8::Context"* %504 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %508, i64 %510) #15
  %512 = bitcast i64* %511 to %"class.v8::Context"*
  br label %513

513:                                              ; preds = %498, %506
  %514 = phi %"class.v8::Context"* [ %512, %506 ], [ null, %498 ]
  store %"class.v8::Context"* %514, %"class.v8::Context"** %500, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %514) #15
  %515 = load %"class.v8::Context"*, %"class.v8::Context"** %491, align 8
  %516 = icmp eq %"class.v8::Context"* %515, null
  br i1 %516, label %524, label %517

517:                                              ; preds = %513
  %518 = bitcast %"class.blink::ScriptState"* %490 to %"class.v8::internal::Isolate"**
  %519 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %518, align 8
  %520 = bitcast %"class.v8::Context"* %515 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %519, i64 %521) #15
  %523 = bitcast i64* %522 to %"class.v8::Context"*
  br label %524

524:                                              ; preds = %513, %517
  %525 = phi %"class.v8::Context"* [ %523, %517 ], [ null, %513 ]
  %526 = bitcast %"class.WTF::Vector.3274"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %526) #15
  %527 = getelementptr inbounds %"class.WTF::Vector.3274", %"class.WTF::Vector.3274"* %10, i64 0, i32 0, i32 0, i32 0
  %528 = getelementptr inbounds %"class.WTF::Vector.3274", %"class.WTF::Vector.3274"* %10, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %526, i8 0, i64 16, i1 false) #15
  %529 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %502, align 8
  %530 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 0
  call void @_ZN5blink25InspectorDOMDebuggerAgent21CollectEventListenersEPN2v87IsolateEPNS_11EventTargetENS1_5LocalINS1_5ValueEEEPNS_4NodeEbPN3WTF6VectorINS_19V8EventListenerInfoELj0ENSB_18PartitionAllocatorEEE(%"class.v8::Isolate"* %529, %"class.blink::EventTarget"* %530, %"class.v8::Value"* null, %"class.blink::Node"* %1, i1 zeroext true, %"class.WTF::Vector.3274"* nonnull %10) #15
  %531 = load i32, i32* %528, align 4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %576, label %533

533:                                              ; preds = %524
  %534 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 7
  %535 = load %"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::InspectorDOMDebuggerAgent"** %534, align 8
  %536 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %536) #15
  store i8 1, i8* %536, align 8
  %537 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %11, i64 0, i32 1
  %538 = bitcast i64* %537 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %538, i8 0, i64 16, i1 false) #15
  %539 = call %"class.std::__1::vector.3149"* @_ZN5blink25InspectorDOMDebuggerAgent29BuildObjectsForEventListenersERKN3WTF6VectorINS_19V8EventListenerInfoELj0ENS1_18PartitionAllocatorEEEN2v85LocalINS8_7ContextEEERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"* %535, %"class.WTF::Vector.3274"* nonnull dereferenceable(16) %10, %"class.v8::Context"* %525, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %11) #15
  %540 = ptrtoint %"class.std::__1::vector.3149"* %539 to i64
  %541 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 24
  %542 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3145", %"class.crdtp::detail::PtrMaybe.3145"* %541, i64 0, i32 0, i32 0, i32 0, i32 0
  %543 = load %"class.std::__1::vector.3149"*, %"class.std::__1::vector.3149"** %542, align 8
  %544 = bitcast %"class.crdtp::detail::PtrMaybe.3145"* %541 to i64*
  store i64 %540, i64* %544, align 8
  %545 = icmp eq %"class.std::__1::vector.3149"* %543, null
  br i1 %545, label %575, label %546

546:                                              ; preds = %533
  %547 = getelementptr inbounds %"class.std::__1::vector.3149", %"class.std::__1::vector.3149"* %543, i64 0, i32 0, i32 0
  %548 = load %"class.std::__1::unique_ptr.3412"*, %"class.std::__1::unique_ptr.3412"** %547, align 8
  %549 = icmp eq %"class.std::__1::unique_ptr.3412"* %548, null
  br i1 %549, label %573, label %550

550:                                              ; preds = %546
  %551 = bitcast %"class.std::__1::unique_ptr.3412"* %548 to i8*
  %552 = getelementptr inbounds %"class.std::__1::vector.3149", %"class.std::__1::vector.3149"* %543, i64 0, i32 0, i32 1
  %553 = load %"class.std::__1::unique_ptr.3412"*, %"class.std::__1::unique_ptr.3412"** %552, align 8
  %554 = icmp eq %"class.std::__1::unique_ptr.3412"* %553, %548
  br i1 %554, label %571, label %555

555:                                              ; preds = %550, %566
  %556 = phi %"class.std::__1::unique_ptr.3412"* [ %557, %566 ], [ %553, %550 ]
  %557 = getelementptr inbounds %"class.std::__1::unique_ptr.3412", %"class.std::__1::unique_ptr.3412"* %556, i64 -1
  %558 = getelementptr inbounds %"class.std::__1::unique_ptr.3412", %"class.std::__1::unique_ptr.3412"* %557, i64 0, i32 0, i32 0, i32 0
  %559 = load %"class.blink::protocol::DOMDebugger::EventListener"*, %"class.blink::protocol::DOMDebugger::EventListener"** %558, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %558, align 8
  %560 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %559, null
  br i1 %560, label %566, label %561

561:                                              ; preds = %555
  %562 = bitcast %"class.blink::protocol::DOMDebugger::EventListener"* %559 to void (%"class.blink::protocol::DOMDebugger::EventListener"*)***
  %563 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)**, void (%"class.blink::protocol::DOMDebugger::EventListener"*)*** %562, align 8
  %564 = getelementptr inbounds void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %563, i64 2
  %565 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %564, align 8
  call void %565(%"class.blink::protocol::DOMDebugger::EventListener"* nonnull %559) #15
  br label %566

566:                                              ; preds = %561, %555
  %567 = icmp eq %"class.std::__1::unique_ptr.3412"* %557, %548
  br i1 %567, label %568, label %555

568:                                              ; preds = %566
  %569 = bitcast %"class.std::__1::vector.3149"* %543 to i8**
  %570 = load i8*, i8** %569, align 8
  br label %571

571:                                              ; preds = %568, %550
  %572 = phi i8* [ %570, %568 ], [ %551, %550 ]
  store %"class.std::__1::unique_ptr.3412"* %548, %"class.std::__1::unique_ptr.3412"** %552, align 8
  call void @_ZdlPv(i8* %572) #16
  br label %573

573:                                              ; preds = %571, %546
  %574 = bitcast %"class.std::__1::vector.3149"* %543 to i8*
  call void @_ZdlPv(i8* %574) #16
  br label %575

575:                                              ; preds = %533, %573
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %536) #15
  br label %576

576:                                              ; preds = %575, %524
  %577 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %527, align 8
  %578 = icmp eq %"struct.blink::V8EventListenerInfo"* %577, null
  br i1 %578, label %612, label %579, !prof !2

579:                                              ; preds = %576
  %580 = bitcast %"struct.blink::V8EventListenerInfo"* %577 to i8*
  %581 = load i32, i32* %528, align 4
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %610, label %583, !prof !3

583:                                              ; preds = %579
  %584 = zext i32 %581 to i64
  %585 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %577, i64 %584
  br label %586

586:                                              ; preds = %604, %583
  %587 = phi %"struct.blink::V8EventListenerInfo"* [ %605, %604 ], [ %577, %583 ]
  %588 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %587, i64 0, i32 0, i32 0, i32 0, i32 0
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %588, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %604, label %591

591:                                              ; preds = %586
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load atomic i32, i32* %592 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %598, label %600

598:                                              ; preds = %591
  %599 = add i32 %597, -1
  store i32 %599, i32* %596, align 4
  br label %600

600:                                              ; preds = %598, %591
  %601 = phi i32 [ %599, %598 ], [ %597, %591 ]
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %589) #15
  br label %604

604:                                              ; preds = %603, %600, %586
  %605 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %587, i64 1
  %606 = icmp eq %"struct.blink::V8EventListenerInfo"* %605, %585
  br i1 %606, label %607, label %586

607:                                              ; preds = %604
  store i32 0, i32* %528, align 4
  %608 = bitcast %"class.WTF::Vector.3274"* %10 to i8**
  %609 = load i8*, i8** %608, align 8
  br label %610

610:                                              ; preds = %607, %579
  %611 = phi i8* [ %609, %607 ], [ %580, %579 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %611) #15
  store %"struct.blink::V8EventListenerInfo"* null, %"struct.blink::V8EventListenerInfo"** %527, align 8
  br label %612

612:                                              ; preds = %576, %610
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %526) #15
  %613 = load %"class.v8::Context"*, %"class.v8::Context"** %500, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %613) #15
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %501) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %499) #15
  br label %614

614:                                              ; preds = %494, %485, %612, %479, %478
  %615 = icmp eq %"class.blink::Node"* %1, null
  br i1 %615, label %1923, label %616

616:                                              ; preds = %614
  %617 = load i32, i32* %448, align 8
  %618 = and i32 %617, 12
  %619 = icmp eq i32 %618, 0
  %620 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  br i1 %619, label %621, label %1372

621:                                              ; preds = %616
  %622 = call %"class.std::__1::vector.3140"* @_ZN5blink22LegacyDOMSnapshotAgent30BuildArrayForElementAttributesEPNS_7ElementE(%"class.blink::LegacyDOMSnapshotAgent"* undef, %"class.blink::Element"* nonnull %620)
  %623 = ptrtoint %"class.std::__1::vector.3140"* %622 to i64
  %624 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 10
  %625 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3136", %"class.crdtp::detail::PtrMaybe.3136"* %624, i64 0, i32 0, i32 0, i32 0, i32 0
  %626 = load %"class.std::__1::vector.3140"*, %"class.std::__1::vector.3140"** %625, align 8
  %627 = bitcast %"class.crdtp::detail::PtrMaybe.3136"* %624 to i64*
  store i64 %623, i64* %627, align 8
  %628 = icmp eq %"class.std::__1::vector.3140"* %626, null
  br i1 %628, label %658, label %629

629:                                              ; preds = %621
  %630 = getelementptr inbounds %"class.std::__1::vector.3140", %"class.std::__1::vector.3140"* %626, i64 0, i32 0, i32 0
  %631 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %630, align 8
  %632 = icmp eq %"class.std::__1::unique_ptr.3162"* %631, null
  br i1 %632, label %656, label %633

633:                                              ; preds = %629
  %634 = bitcast %"class.std::__1::unique_ptr.3162"* %631 to i8*
  %635 = getelementptr inbounds %"class.std::__1::vector.3140", %"class.std::__1::vector.3140"* %626, i64 0, i32 0, i32 1
  %636 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %635, align 8
  %637 = icmp eq %"class.std::__1::unique_ptr.3162"* %636, %631
  br i1 %637, label %654, label %638

638:                                              ; preds = %633, %649
  %639 = phi %"class.std::__1::unique_ptr.3162"* [ %640, %649 ], [ %636, %633 ]
  %640 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %639, i64 -1
  %641 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %640, i64 0, i32 0, i32 0, i32 0
  %642 = load %"class.blink::protocol::DOMSnapshot::NameValue"*, %"class.blink::protocol::DOMSnapshot::NameValue"** %641, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %641, align 8
  %643 = icmp eq %"class.blink::protocol::DOMSnapshot::NameValue"* %642, null
  br i1 %643, label %649, label %644

644:                                              ; preds = %638
  %645 = bitcast %"class.blink::protocol::DOMSnapshot::NameValue"* %642 to void (%"class.blink::protocol::DOMSnapshot::NameValue"*)***
  %646 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)**, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*** %645, align 8
  %647 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %646, i64 2
  %648 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %647, align 8
  call void %648(%"class.blink::protocol::DOMSnapshot::NameValue"* nonnull %642) #15
  br label %649

649:                                              ; preds = %644, %638
  %650 = icmp eq %"class.std::__1::unique_ptr.3162"* %640, %631
  br i1 %650, label %651, label %638

651:                                              ; preds = %649
  %652 = bitcast %"class.std::__1::vector.3140"* %626 to i8**
  %653 = load i8*, i8** %652, align 8
  br label %654

654:                                              ; preds = %633, %651
  %655 = phi i8* [ %653, %651 ], [ %634, %633 ]
  store %"class.std::__1::unique_ptr.3162"* %631, %"class.std::__1::unique_ptr.3162"** %635, align 8
  call void @_ZdlPv(i8* %655) #16
  br label %656

656:                                              ; preds = %629, %654
  %657 = bitcast %"class.std::__1::vector.3140"* %626 to i8*
  call void @_ZdlPv(i8* %657) #16
  br label %658

658:                                              ; preds = %656, %621
  %659 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %470, align 8
  %660 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %659, i64 42
  %661 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %660, align 8
  %662 = call zeroext i1 %661(%"class.blink::Node"* nonnull %1) #15
  %663 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLFrameOwnerElement"*
  br i1 %662, label %664, label %785

664:                                              ; preds = %658
  %665 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 5
  %666 = bitcast %"class.blink::Member.318"* %665 to %"class.blink::Frame"**
  %667 = load %"class.blink::Frame"*, %"class.blink::Frame"** %666, align 8
  %668 = icmp eq %"class.blink::Frame"* %667, null
  br i1 %668, label %777, label %669

669:                                              ; preds = %664
  %670 = bitcast %"class.blink::Frame"* %667 to i1 (%"class.blink::Frame"*)***
  %671 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %670, align 8
  %672 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %671, i64 3
  %673 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %672, align 8
  %674 = call zeroext i1 %673(%"class.blink::Frame"* nonnull %667) #15
  br i1 %674, label %675, label %777

675:                                              ; preds = %669
  %676 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* nonnull %667) #15
  %677 = icmp eq %"class.WTF::StringImpl"* %676, null
  br i1 %677, label %695, label %678

678:                                              ; preds = %675
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = load atomic i32, i32* %679 monotonic, align 4
  %681 = and i32 %680, 2
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %716

683:                                              ; preds = %678
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 0
  %685 = load i32, i32* %684, align 4
  %686 = zext i32 %685 to i33
  %687 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %686, i33 1) #15
  %688 = extractvalue { i33, i1 } %687, 1
  %689 = extractvalue { i33, i1 } %687, 0
  %690 = icmp slt i33 %689, 0
  %691 = or i1 %688, %690
  br i1 %691, label %692, label %693, !prof !3

692:                                              ; preds = %683
  call void @llvm.trap() #15
  unreachable

693:                                              ; preds = %683
  %694 = trunc i33 %689 to i32
  store i32 %694, i32* %684, align 4
  br label %716

695:                                              ; preds = %675
  %696 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 1
  %697 = bitcast %"class.WTF::String"* %696 to i64*
  %698 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %696, i64 0, i32 0, i32 0
  %699 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %698, align 8
  store i64 0, i64* %697, align 8
  %700 = icmp eq %"class.WTF::StringImpl"* %699, null
  br i1 %700, label %714, label %701

701:                                              ; preds = %695
  %702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %699, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load atomic i32, i32* %702 monotonic, align 4
  %704 = and i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %699, i64 0, i32 0
  %707 = load i32, i32* %706, align 4
  br i1 %705, label %708, label %710

708:                                              ; preds = %701
  %709 = add i32 %707, -1
  store i32 %709, i32* %706, align 4
  br label %710

710:                                              ; preds = %708, %701
  %711 = phi i32 [ %709, %708 ], [ %707, %701 ]
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %714

713:                                              ; preds = %710
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %699) #15
  br label %714

714:                                              ; preds = %695, %710, %713
  %715 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 0
  store i8 1, i8* %715, align 8
  br label %777

716:                                              ; preds = %693, %678
  %717 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 1
  %718 = load atomic i32, i32* %679 monotonic, align 4
  %719 = and i32 %718, 2
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %733

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  %724 = zext i32 %723 to i33
  %725 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %724, i33 1) #15
  %726 = extractvalue { i33, i1 } %725, 1
  %727 = extractvalue { i33, i1 } %725, 0
  %728 = icmp slt i33 %727, 0
  %729 = or i1 %726, %728
  br i1 %729, label %730, label %731, !prof !3

730:                                              ; preds = %721
  call void @llvm.trap() #15
  unreachable

731:                                              ; preds = %721
  %732 = trunc i33 %727 to i32
  store i32 %732, i32* %722, align 4
  br label %733

733:                                              ; preds = %731, %716
  %734 = ptrtoint %"class.WTF::StringImpl"* %676 to i64
  %735 = bitcast %"class.WTF::String"* %717 to i64*
  %736 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %717, i64 0, i32 0, i32 0
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %736, align 8
  store i64 %734, i64* %735, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %733
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #15
  br label %752

752:                                              ; preds = %733, %748, %751
  %753 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 0
  store i8 1, i8* %753, align 8
  %754 = load atomic i32, i32* %679 monotonic, align 4
  %755 = and i32 %754, 2
  %756 = icmp eq i32 %755, 0
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 0
  %758 = load i32, i32* %757, align 4
  br i1 %756, label %759, label %761

759:                                              ; preds = %752
  %760 = add i32 %758, -1
  store i32 %760, i32* %757, align 4
  br label %761

761:                                              ; preds = %759, %752
  %762 = phi i32 [ %760, %759 ], [ %758, %752 ]
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %764, label %766

764:                                              ; preds = %761
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %676) #15
  %765 = load i32, i32* %757, align 4
  br label %766

766:                                              ; preds = %761, %764
  %767 = phi i32 [ %762, %761 ], [ %765, %764 ]
  %768 = load atomic i32, i32* %679 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %771, label %773

771:                                              ; preds = %766
  %772 = add i32 %767, -1
  store i32 %772, i32* %757, align 4
  br label %773

773:                                              ; preds = %771, %766
  %774 = phi i32 [ %772, %771 ], [ %767, %766 ]
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %776, label %777

776:                                              ; preds = %773
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %676) #15
  br label %777

777:                                              ; preds = %669, %664, %776, %773, %714
  %778 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* nonnull %663) #15
  %779 = icmp eq %"class.blink::Document"* %778, null
  br i1 %779, label %785, label %780

780:                                              ; preds = %777
  %781 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %778, i64 0, i32 0, i32 0
  %782 = call i32 @_ZN5blink22LegacyDOMSnapshotAgent9VisitNodeEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::Node"* %781, i1 zeroext %2, i1 zeroext %3)
  %783 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 20, i32 1
  store i32 %782, i32* %783, align 4
  %784 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 20, i32 0
  store i8 1, i8* %784, align 4
  br label %785

785:                                              ; preds = %658, %780, %777
  %786 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #15
  %787 = icmp eq %"class.blink::ContainerNode"* %786, null
  br i1 %787, label %906, label %788

788:                                              ; preds = %785
  %789 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #15
  %790 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %789, i64 0, i32 0
  %791 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %789, i64 0, i32 0, i32 3, i32 0, i32 0
  %792 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %791, align 8
  %793 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %792, i64 0, i32 2, i32 0, i32 0
  %794 = load %"class.blink::Document"*, %"class.blink::Document"** %793, align 8
  %795 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %794, i64 0, i32 0, i32 0
  %796 = icmp eq %"class.blink::Node"* %795, %790
  br i1 %796, label %797, label %906

797:                                              ; preds = %788
  %798 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %799 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %798, i64 0, i32 2, i32 0, i32 0
  %800 = load %"class.blink::Document"*, %"class.blink::Document"** %799, align 8
  %801 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %800) #15
  %802 = icmp eq %"class.blink::LocalFrame"* %801, null
  br i1 %802, label %906, label %803

803:                                              ; preds = %797
  %804 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %801, i64 0, i32 0
  %805 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %804) #15
  %806 = icmp eq %"class.WTF::StringImpl"* %805, null
  br i1 %806, label %824, label %807

807:                                              ; preds = %803
  %808 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %809 = load atomic i32, i32* %808 monotonic, align 4
  %810 = and i32 %809, 2
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %812, label %845

812:                                              ; preds = %807
  %813 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 0
  %814 = load i32, i32* %813, align 4
  %815 = zext i32 %814 to i33
  %816 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %815, i33 1) #15
  %817 = extractvalue { i33, i1 } %816, 1
  %818 = extractvalue { i33, i1 } %816, 0
  %819 = icmp slt i33 %818, 0
  %820 = or i1 %817, %819
  br i1 %820, label %821, label %822, !prof !3

821:                                              ; preds = %812
  call void @llvm.trap() #15
  unreachable

822:                                              ; preds = %812
  %823 = trunc i33 %818 to i32
  store i32 %823, i32* %813, align 4
  br label %845

824:                                              ; preds = %803
  %825 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 1
  %826 = bitcast %"class.WTF::String"* %825 to i64*
  %827 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %825, i64 0, i32 0, i32 0
  %828 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %827, align 8
  store i64 0, i64* %826, align 8
  %829 = icmp eq %"class.WTF::StringImpl"* %828, null
  br i1 %829, label %843, label %830

830:                                              ; preds = %824
  %831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %828, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %832 = load atomic i32, i32* %831 monotonic, align 4
  %833 = and i32 %832, 2
  %834 = icmp eq i32 %833, 0
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %828, i64 0, i32 0
  %836 = load i32, i32* %835, align 4
  br i1 %834, label %837, label %839

837:                                              ; preds = %830
  %838 = add i32 %836, -1
  store i32 %838, i32* %835, align 4
  br label %839

839:                                              ; preds = %837, %830
  %840 = phi i32 [ %838, %837 ], [ %836, %830 ]
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %842, label %843

842:                                              ; preds = %839
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %828) #15
  br label %843

843:                                              ; preds = %824, %839, %842
  %844 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 0
  store i8 1, i8* %844, align 8
  br label %906

845:                                              ; preds = %822, %807
  %846 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 1
  %847 = load atomic i32, i32* %808 monotonic, align 4
  %848 = and i32 %847, 2
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %862

850:                                              ; preds = %845
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 0
  %852 = load i32, i32* %851, align 4
  %853 = zext i32 %852 to i33
  %854 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %853, i33 1) #15
  %855 = extractvalue { i33, i1 } %854, 1
  %856 = extractvalue { i33, i1 } %854, 0
  %857 = icmp slt i33 %856, 0
  %858 = or i1 %855, %857
  br i1 %858, label %859, label %860, !prof !3

859:                                              ; preds = %850
  call void @llvm.trap() #15
  unreachable

860:                                              ; preds = %850
  %861 = trunc i33 %856 to i32
  store i32 %861, i32* %851, align 4
  br label %862

862:                                              ; preds = %860, %845
  %863 = ptrtoint %"class.WTF::StringImpl"* %805 to i64
  %864 = bitcast %"class.WTF::String"* %846 to i64*
  %865 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %846, i64 0, i32 0, i32 0
  %866 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %865, align 8
  store i64 %863, i64* %864, align 8
  %867 = icmp eq %"class.WTF::StringImpl"* %866, null
  br i1 %867, label %881, label %868

868:                                              ; preds = %862
  %869 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %866, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %870 = load atomic i32, i32* %869 monotonic, align 4
  %871 = and i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %866, i64 0, i32 0
  %874 = load i32, i32* %873, align 4
  br i1 %872, label %875, label %877

875:                                              ; preds = %868
  %876 = add i32 %874, -1
  store i32 %876, i32* %873, align 4
  br label %877

877:                                              ; preds = %875, %868
  %878 = phi i32 [ %876, %875 ], [ %874, %868 ]
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %880, label %881

880:                                              ; preds = %877
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %866) #15
  br label %881

881:                                              ; preds = %862, %877, %880
  %882 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 0
  store i8 1, i8* %882, align 8
  %883 = load atomic i32, i32* %808 monotonic, align 4
  %884 = and i32 %883, 2
  %885 = icmp eq i32 %884, 0
  %886 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 0
  %887 = load i32, i32* %886, align 4
  br i1 %885, label %888, label %890

888:                                              ; preds = %881
  %889 = add i32 %887, -1
  store i32 %889, i32* %886, align 4
  br label %890

890:                                              ; preds = %888, %881
  %891 = phi i32 [ %889, %888 ], [ %887, %881 ]
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %893, label %895

893:                                              ; preds = %890
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %805) #15
  %894 = load i32, i32* %886, align 4
  br label %895

895:                                              ; preds = %890, %893
  %896 = phi i32 [ %891, %890 ], [ %894, %893 ]
  %897 = load atomic i32, i32* %808 monotonic, align 4
  %898 = and i32 %897, 2
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %902

900:                                              ; preds = %895
  %901 = add i32 %896, -1
  store i32 %901, i32* %886, align 4
  br label %902

902:                                              ; preds = %900, %895
  %903 = phi i32 [ %901, %900 ], [ %896, %895 ]
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %906

905:                                              ; preds = %902
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %805) #15
  br label %906

906:                                              ; preds = %788, %785, %797, %843, %902, %905
  %907 = load i32, i32* %448, align 8
  %908 = and i32 %907, 48
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %1025

910:                                              ; preds = %906
  %911 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %912 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %911, i64 0, i32 0, i32 0, i32 0
  %913 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %912, align 8
  %914 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %915 = bitcast %"class.blink::Member.318"* %914 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %916 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %915, align 8
  %917 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %916, i64 0, i32 3, i32 0, i32 0, i32 0
  %918 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %917, align 8
  %919 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %913, i64 0, i32 3, i32 0, i32 0, i32 0
  %920 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %919, align 8
  %921 = icmp eq %"class.WTF::StringImpl"* %918, %920
  br i1 %921, label %922, label %1025

922:                                              ; preds = %910
  %923 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLTextAreaElement"*
  %924 = call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement5valueEv(%"class.blink::HTMLTextAreaElement"* nonnull %923) #15
  %925 = icmp eq %"class.WTF::StringImpl"* %924, null
  br i1 %925, label %943, label %926

926:                                              ; preds = %922
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %928 = load atomic i32, i32* %927 monotonic, align 4
  %929 = and i32 %928, 2
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %964

931:                                              ; preds = %926
  %932 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 0
  %933 = load i32, i32* %932, align 4
  %934 = zext i32 %933 to i33
  %935 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %934, i33 1) #15
  %936 = extractvalue { i33, i1 } %935, 1
  %937 = extractvalue { i33, i1 } %935, 0
  %938 = icmp slt i33 %937, 0
  %939 = or i1 %936, %938
  br i1 %939, label %940, label %941, !prof !3

940:                                              ; preds = %931
  call void @llvm.trap() #15
  unreachable

941:                                              ; preds = %931
  %942 = trunc i33 %937 to i32
  store i32 %942, i32* %932, align 4
  br label %964

943:                                              ; preds = %922
  %944 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 4, i32 1
  %945 = bitcast %"class.WTF::String"* %944 to i64*
  %946 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %944, i64 0, i32 0, i32 0
  %947 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %946, align 8
  store i64 0, i64* %945, align 8
  %948 = icmp eq %"class.WTF::StringImpl"* %947, null
  br i1 %948, label %962, label %949

949:                                              ; preds = %943
  %950 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %951 = load atomic i32, i32* %950 monotonic, align 4
  %952 = and i32 %951, 2
  %953 = icmp eq i32 %952, 0
  %954 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 0
  %955 = load i32, i32* %954, align 4
  br i1 %953, label %956, label %958

956:                                              ; preds = %949
  %957 = add i32 %955, -1
  store i32 %957, i32* %954, align 4
  br label %958

958:                                              ; preds = %956, %949
  %959 = phi i32 [ %957, %956 ], [ %955, %949 ]
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %961, label %962

961:                                              ; preds = %958
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %947) #15
  br label %962

962:                                              ; preds = %943, %958, %961
  %963 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 4, i32 0
  store i8 1, i8* %963, align 8
  br label %1025

964:                                              ; preds = %941, %926
  %965 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 4, i32 1
  %966 = load atomic i32, i32* %927 monotonic, align 4
  %967 = and i32 %966, 2
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %969, label %981

969:                                              ; preds = %964
  %970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 0
  %971 = load i32, i32* %970, align 4
  %972 = zext i32 %971 to i33
  %973 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %972, i33 1) #15
  %974 = extractvalue { i33, i1 } %973, 1
  %975 = extractvalue { i33, i1 } %973, 0
  %976 = icmp slt i33 %975, 0
  %977 = or i1 %974, %976
  br i1 %977, label %978, label %979, !prof !3

978:                                              ; preds = %969
  call void @llvm.trap() #15
  unreachable

979:                                              ; preds = %969
  %980 = trunc i33 %975 to i32
  store i32 %980, i32* %970, align 4
  br label %981

981:                                              ; preds = %979, %964
  %982 = ptrtoint %"class.WTF::StringImpl"* %924 to i64
  %983 = bitcast %"class.WTF::String"* %965 to i64*
  %984 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %965, i64 0, i32 0, i32 0
  %985 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %984, align 8
  store i64 %982, i64* %983, align 8
  %986 = icmp eq %"class.WTF::StringImpl"* %985, null
  br i1 %986, label %1000, label %987

987:                                              ; preds = %981
  %988 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %989 = load atomic i32, i32* %988 monotonic, align 4
  %990 = and i32 %989, 2
  %991 = icmp eq i32 %990, 0
  %992 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 0
  %993 = load i32, i32* %992, align 4
  br i1 %991, label %994, label %996

994:                                              ; preds = %987
  %995 = add i32 %993, -1
  store i32 %995, i32* %992, align 4
  br label %996

996:                                              ; preds = %994, %987
  %997 = phi i32 [ %995, %994 ], [ %993, %987 ]
  %998 = icmp eq i32 %997, 0
  br i1 %998, label %999, label %1000

999:                                              ; preds = %996
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %985) #15
  br label %1000

1000:                                             ; preds = %981, %996, %999
  %1001 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 4, i32 0
  store i8 1, i8* %1001, align 8
  %1002 = load atomic i32, i32* %927 monotonic, align 4
  %1003 = and i32 %1002, 2
  %1004 = icmp eq i32 %1003, 0
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 0
  %1006 = load i32, i32* %1005, align 4
  br i1 %1004, label %1007, label %1009

1007:                                             ; preds = %1000
  %1008 = add i32 %1006, -1
  store i32 %1008, i32* %1005, align 4
  br label %1009

1009:                                             ; preds = %1007, %1000
  %1010 = phi i32 [ %1008, %1007 ], [ %1006, %1000 ]
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1014

1012:                                             ; preds = %1009
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %924) #15
  %1013 = load i32, i32* %1005, align 4
  br label %1014

1014:                                             ; preds = %1009, %1012
  %1015 = phi i32 [ %1010, %1009 ], [ %1013, %1012 ]
  %1016 = load atomic i32, i32* %927 monotonic, align 4
  %1017 = and i32 %1016, 2
  %1018 = icmp eq i32 %1017, 0
  br i1 %1018, label %1019, label %1021

1019:                                             ; preds = %1014
  %1020 = add i32 %1015, -1
  store i32 %1020, i32* %1005, align 4
  br label %1021

1021:                                             ; preds = %1019, %1014
  %1022 = phi i32 [ %1020, %1019 ], [ %1015, %1014 ]
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1024, label %1025

1024:                                             ; preds = %1021
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %924) #15
  br label %1025

1025:                                             ; preds = %910, %906, %962, %1021, %1024
  %1026 = load i32, i32* %448, align 8
  %1027 = and i32 %1026, 48
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1029, label %1177

1029:                                             ; preds = %1025
  %1030 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %1031 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1030, i64 0, i32 0, i32 0, i32 0
  %1032 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1031, align 8
  %1033 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %1034 = bitcast %"class.blink::Member.318"* %1033 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1035 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1034, align 8
  %1036 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1035, i64 0, i32 3, i32 0, i32 0, i32 0
  %1037 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1036, align 8
  %1038 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1032, i64 0, i32 3, i32 0, i32 0, i32 0
  %1039 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1038, align 8
  %1040 = icmp eq %"class.WTF::StringImpl"* %1037, %1039
  %1041 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLInputElement"*
  br i1 %1040, label %1042, label %1177

1042:                                             ; preds = %1029
  %1043 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %1044 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %1043, align 8
  %1045 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %1044, i64 195
  %1046 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %1045, align 8
  %1047 = call %"class.WTF::StringImpl"* %1046(%"class.blink::HTMLInputElement"* nonnull %1041) #15
  %1048 = icmp eq %"class.WTF::StringImpl"* %1047, null
  br i1 %1048, label %1066, label %1049

1049:                                             ; preds = %1042
  %1050 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load atomic i32, i32* %1050 monotonic, align 4
  %1052 = and i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1054, label %1087

1054:                                             ; preds = %1049
  %1055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 0
  %1056 = load i32, i32* %1055, align 4
  %1057 = zext i32 %1056 to i33
  %1058 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1057, i33 1) #15
  %1059 = extractvalue { i33, i1 } %1058, 1
  %1060 = extractvalue { i33, i1 } %1058, 0
  %1061 = icmp slt i33 %1060, 0
  %1062 = or i1 %1059, %1061
  br i1 %1062, label %1063, label %1064, !prof !3

1063:                                             ; preds = %1054
  call void @llvm.trap() #15
  unreachable

1064:                                             ; preds = %1054
  %1065 = trunc i33 %1060 to i32
  store i32 %1065, i32* %1055, align 4
  br label %1087

1066:                                             ; preds = %1042
  %1067 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 5, i32 1
  %1068 = bitcast %"class.WTF::String"* %1067 to i64*
  %1069 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1067, i64 0, i32 0, i32 0
  %1070 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  store i64 0, i64* %1068, align 8
  %1071 = icmp eq %"class.WTF::StringImpl"* %1070, null
  br i1 %1071, label %1085, label %1072

1072:                                             ; preds = %1066
  %1073 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1070, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1074 = load atomic i32, i32* %1073 monotonic, align 4
  %1075 = and i32 %1074, 2
  %1076 = icmp eq i32 %1075, 0
  %1077 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1070, i64 0, i32 0
  %1078 = load i32, i32* %1077, align 4
  br i1 %1076, label %1079, label %1081

1079:                                             ; preds = %1072
  %1080 = add i32 %1078, -1
  store i32 %1080, i32* %1077, align 4
  br label %1081

1081:                                             ; preds = %1079, %1072
  %1082 = phi i32 [ %1080, %1079 ], [ %1078, %1072 ]
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1084, label %1085

1084:                                             ; preds = %1081
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1070) #15
  br label %1085

1085:                                             ; preds = %1066, %1081, %1084
  %1086 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 5, i32 0
  store i8 1, i8* %1086, align 8
  br label %1148

1087:                                             ; preds = %1064, %1049
  %1088 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 5, i32 1
  %1089 = load atomic i32, i32* %1050 monotonic, align 4
  %1090 = and i32 %1089, 2
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1092, label %1104

1092:                                             ; preds = %1087
  %1093 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 0
  %1094 = load i32, i32* %1093, align 4
  %1095 = zext i32 %1094 to i33
  %1096 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1095, i33 1) #15
  %1097 = extractvalue { i33, i1 } %1096, 1
  %1098 = extractvalue { i33, i1 } %1096, 0
  %1099 = icmp slt i33 %1098, 0
  %1100 = or i1 %1097, %1099
  br i1 %1100, label %1101, label %1102, !prof !3

1101:                                             ; preds = %1092
  call void @llvm.trap() #15
  unreachable

1102:                                             ; preds = %1092
  %1103 = trunc i33 %1098 to i32
  store i32 %1103, i32* %1093, align 4
  br label %1104

1104:                                             ; preds = %1102, %1087
  %1105 = ptrtoint %"class.WTF::StringImpl"* %1047 to i64
  %1106 = bitcast %"class.WTF::String"* %1088 to i64*
  %1107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1088, i64 0, i32 0, i32 0
  %1108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1107, align 8
  store i64 %1105, i64* %1106, align 8
  %1109 = icmp eq %"class.WTF::StringImpl"* %1108, null
  br i1 %1109, label %1123, label %1110

1110:                                             ; preds = %1104
  %1111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1112 = load atomic i32, i32* %1111 monotonic, align 4
  %1113 = and i32 %1112, 2
  %1114 = icmp eq i32 %1113, 0
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1108, i64 0, i32 0
  %1116 = load i32, i32* %1115, align 4
  br i1 %1114, label %1117, label %1119

1117:                                             ; preds = %1110
  %1118 = add i32 %1116, -1
  store i32 %1118, i32* %1115, align 4
  br label %1119

1119:                                             ; preds = %1117, %1110
  %1120 = phi i32 [ %1118, %1117 ], [ %1116, %1110 ]
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1122, label %1123

1122:                                             ; preds = %1119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1108) #15
  br label %1123

1123:                                             ; preds = %1104, %1119, %1122
  %1124 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 5, i32 0
  store i8 1, i8* %1124, align 8
  %1125 = load atomic i32, i32* %1050 monotonic, align 4
  %1126 = and i32 %1125, 2
  %1127 = icmp eq i32 %1126, 0
  %1128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1047, i64 0, i32 0
  %1129 = load i32, i32* %1128, align 4
  br i1 %1127, label %1130, label %1132

1130:                                             ; preds = %1123
  %1131 = add i32 %1129, -1
  store i32 %1131, i32* %1128, align 4
  br label %1132

1132:                                             ; preds = %1130, %1123
  %1133 = phi i32 [ %1131, %1130 ], [ %1129, %1123 ]
  %1134 = icmp eq i32 %1133, 0
  br i1 %1134, label %1135, label %1137

1135:                                             ; preds = %1132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1047) #15
  %1136 = load i32, i32* %1128, align 4
  br label %1137

1137:                                             ; preds = %1132, %1135
  %1138 = phi i32 [ %1133, %1132 ], [ %1136, %1135 ]
  %1139 = load atomic i32, i32* %1050 monotonic, align 4
  %1140 = and i32 %1139, 2
  %1141 = icmp eq i32 %1140, 0
  br i1 %1141, label %1142, label %1144

1142:                                             ; preds = %1137
  %1143 = add i32 %1138, -1
  store i32 %1143, i32* %1128, align 4
  br label %1144

1144:                                             ; preds = %1142, %1137
  %1145 = phi i32 [ %1143, %1142 ], [ %1138, %1137 ]
  %1146 = icmp eq i32 %1145, 0
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1047) #15
  br label %1148

1148:                                             ; preds = %1085, %1144, %1147
  %1149 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLFormControlElement"*
  %1150 = bitcast %"class.blink::Node"* %1 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %1151 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %1150, align 8
  %1152 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %1151, i64 171
  %1153 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %1152, align 8
  %1154 = call dereferenceable(8) %"class.WTF::AtomicString"* %1153(%"class.blink::HTMLFormControlElement"* %1149) #15
  %1155 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %1156 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1154, i64 0, i32 0, i32 0, i32 0
  %1157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1156, align 8
  %1158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1155, i64 0, i32 0, i32 0, i32 0
  %1159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1158, align 8
  %1160 = icmp eq %"class.WTF::StringImpl"* %1157, %1159
  br i1 %1160, label %1172, label %1161

1161:                                             ; preds = %1148
  %1162 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %1150, align 8
  %1163 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %1162, i64 171
  %1164 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %1163, align 8
  %1165 = call dereferenceable(8) %"class.WTF::AtomicString"* %1164(%"class.blink::HTMLFormControlElement"* %1149) #15
  %1166 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %1167 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1165, i64 0, i32 0, i32 0, i32 0
  %1168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1167, align 8
  %1169 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1166, i64 0, i32 0, i32 0, i32 0
  %1170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1169, align 8
  %1171 = icmp eq %"class.WTF::StringImpl"* %1168, %1170
  br i1 %1171, label %1172, label %1177

1172:                                             ; preds = %1161, %1148
  %1173 = call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* nonnull %1041) #15
  %1174 = zext i1 %1173 to i8
  %1175 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 6, i32 1
  store i8 %1174, i8* %1175, align 1
  %1176 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 6, i32 0
  store i8 1, i8* %1176, align 1
  br label %1177

1177:                                             ; preds = %1029, %1025, %1172, %1161
  %1178 = load i32, i32* %448, align 8
  %1179 = and i32 %1178, 48
  %1180 = icmp eq i32 %1179, 0
  br i1 %1180, label %1181, label %1199

1181:                                             ; preds = %1177
  %1182 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %1183 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1182, i64 0, i32 0, i32 0, i32 0
  %1184 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1183, align 8
  %1185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %1186 = bitcast %"class.blink::Member.318"* %1185 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1187 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1186, align 8
  %1188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1187, i64 0, i32 3, i32 0, i32 0, i32 0
  %1189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1188, align 8
  %1190 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1184, i64 0, i32 3, i32 0, i32 0, i32 0
  %1191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1190, align 8
  %1192 = icmp eq %"class.WTF::StringImpl"* %1189, %1191
  br i1 %1192, label %1193, label %1199

1193:                                             ; preds = %1181
  %1194 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLOptionElement"*
  %1195 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %1194) #15
  %1196 = zext i1 %1195 to i8
  %1197 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 7, i32 1
  store i8 %1196, i8* %1197, align 1
  %1198 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 7, i32 0
  store i8 1, i8* %1198, align 1
  br label %1199

1199:                                             ; preds = %1181, %1177, %1193
  %1200 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %1201 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %1200, align 8
  %1202 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %1201, i64 34
  %1203 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %1202, align 8
  %1204 = call zeroext i8 %1203(%"class.blink::Node"* nonnull %1) #15
  %1205 = icmp eq i8 %1204, 0
  br i1 %1205, label %1312, label %1206

1206:                                             ; preds = %1199
  %1207 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %1200, align 8
  %1208 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %1207, i64 34
  %1209 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %1208, align 8
  %1210 = call zeroext i8 %1209(%"class.blink::Node"* nonnull %1) #15
  %1211 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent25ProtocolPseudoElementTypeENS_8PseudoIdE(i8 zeroext %1210) #15
  %1212 = icmp eq %"class.WTF::StringImpl"* %1211, null
  br i1 %1212, label %1230, label %1213

1213:                                             ; preds = %1206
  %1214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1215 = load atomic i32, i32* %1214 monotonic, align 4
  %1216 = and i32 %1215, 2
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1251

1218:                                             ; preds = %1213
  %1219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1211, i64 0, i32 0
  %1220 = load i32, i32* %1219, align 4
  %1221 = zext i32 %1220 to i33
  %1222 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1221, i33 1) #15
  %1223 = extractvalue { i33, i1 } %1222, 1
  %1224 = extractvalue { i33, i1 } %1222, 0
  %1225 = icmp slt i33 %1224, 0
  %1226 = or i1 %1223, %1225
  br i1 %1226, label %1227, label %1228, !prof !3

1227:                                             ; preds = %1218
  call void @llvm.trap() #15
  unreachable

1228:                                             ; preds = %1218
  %1229 = trunc i33 %1224 to i32
  store i32 %1229, i32* %1219, align 4
  br label %1251

1230:                                             ; preds = %1206
  %1231 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 21, i32 1
  %1232 = bitcast %"class.WTF::String"* %1231 to i64*
  %1233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1231, i64 0, i32 0, i32 0
  %1234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1233, align 8
  store i64 0, i64* %1232, align 8
  %1235 = icmp eq %"class.WTF::StringImpl"* %1234, null
  br i1 %1235, label %1249, label %1236

1236:                                             ; preds = %1230
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1238 = load atomic i32, i32* %1237 monotonic, align 4
  %1239 = and i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1234, i64 0, i32 0
  %1242 = load i32, i32* %1241, align 4
  br i1 %1240, label %1243, label %1245

1243:                                             ; preds = %1236
  %1244 = add i32 %1242, -1
  store i32 %1244, i32* %1241, align 4
  br label %1245

1245:                                             ; preds = %1243, %1236
  %1246 = phi i32 [ %1244, %1243 ], [ %1242, %1236 ]
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1248, label %1249

1248:                                             ; preds = %1245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1234) #15
  br label %1249

1249:                                             ; preds = %1230, %1245, %1248
  %1250 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 21, i32 0
  store i8 1, i8* %1250, align 8
  br label %1312

1251:                                             ; preds = %1228, %1213
  %1252 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 21, i32 1
  %1253 = load atomic i32, i32* %1214 monotonic, align 4
  %1254 = and i32 %1253, 2
  %1255 = icmp eq i32 %1254, 0
  br i1 %1255, label %1256, label %1268

1256:                                             ; preds = %1251
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1211, i64 0, i32 0
  %1258 = load i32, i32* %1257, align 4
  %1259 = zext i32 %1258 to i33
  %1260 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1259, i33 1) #15
  %1261 = extractvalue { i33, i1 } %1260, 1
  %1262 = extractvalue { i33, i1 } %1260, 0
  %1263 = icmp slt i33 %1262, 0
  %1264 = or i1 %1261, %1263
  br i1 %1264, label %1265, label %1266, !prof !3

1265:                                             ; preds = %1256
  call void @llvm.trap() #15
  unreachable

1266:                                             ; preds = %1256
  %1267 = trunc i33 %1262 to i32
  store i32 %1267, i32* %1257, align 4
  br label %1268

1268:                                             ; preds = %1266, %1251
  %1269 = ptrtoint %"class.WTF::StringImpl"* %1211 to i64
  %1270 = bitcast %"class.WTF::String"* %1252 to i64*
  %1271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1252, i64 0, i32 0, i32 0
  %1272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1271, align 8
  store i64 %1269, i64* %1270, align 8
  %1273 = icmp eq %"class.WTF::StringImpl"* %1272, null
  br i1 %1273, label %1287, label %1274

1274:                                             ; preds = %1268
  %1275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1276 = load atomic i32, i32* %1275 monotonic, align 4
  %1277 = and i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 0
  %1280 = load i32, i32* %1279, align 4
  br i1 %1278, label %1281, label %1283

1281:                                             ; preds = %1274
  %1282 = add i32 %1280, -1
  store i32 %1282, i32* %1279, align 4
  br label %1283

1283:                                             ; preds = %1281, %1274
  %1284 = phi i32 [ %1282, %1281 ], [ %1280, %1274 ]
  %1285 = icmp eq i32 %1284, 0
  br i1 %1285, label %1286, label %1287

1286:                                             ; preds = %1283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1272) #15
  br label %1287

1287:                                             ; preds = %1268, %1283, %1286
  %1288 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 21, i32 0
  store i8 1, i8* %1288, align 8
  %1289 = load atomic i32, i32* %1214 monotonic, align 4
  %1290 = and i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1211, i64 0, i32 0
  %1293 = load i32, i32* %1292, align 4
  br i1 %1291, label %1294, label %1296

1294:                                             ; preds = %1287
  %1295 = add i32 %1293, -1
  store i32 %1295, i32* %1292, align 4
  br label %1296

1296:                                             ; preds = %1294, %1287
  %1297 = phi i32 [ %1295, %1294 ], [ %1293, %1287 ]
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1299, label %1301

1299:                                             ; preds = %1296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1211) #15
  %1300 = load i32, i32* %1292, align 4
  br label %1301

1301:                                             ; preds = %1296, %1299
  %1302 = phi i32 [ %1297, %1296 ], [ %1300, %1299 ]
  %1303 = load atomic i32, i32* %1214 monotonic, align 4
  %1304 = and i32 %1303, 2
  %1305 = icmp eq i32 %1304, 0
  br i1 %1305, label %1306, label %1308

1306:                                             ; preds = %1301
  %1307 = add i32 %1302, -1
  store i32 %1307, i32* %1292, align 4
  br label %1308

1308:                                             ; preds = %1306, %1301
  %1309 = phi i32 [ %1307, %1306 ], [ %1302, %1301 ]
  %1310 = icmp eq i32 %1309, 0
  br i1 %1310, label %1311, label %1312

1311:                                             ; preds = %1308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1211) #15
  br label %1312

1312:                                             ; preds = %1311, %1308, %1249, %1199
  %1313 = call %"class.std::__1::vector.2815"* @_ZN5blink22LegacyDOMSnapshotAgent19VisitPseudoElementsEPNS_7ElementEibb(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::Element"* nonnull %620, i32 undef, i1 zeroext %2, i1 zeroext %3)
  %1314 = ptrtoint %"class.std::__1::vector.2815"* %1313 to i64
  %1315 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 11
  %1316 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %1315, i64 0, i32 0, i32 0, i32 0, i32 0
  %1317 = load %"class.std::__1::vector.2815"*, %"class.std::__1::vector.2815"** %1316, align 8
  %1318 = bitcast %"class.crdtp::detail::PtrMaybe"* %1315 to i64*
  store i64 %1314, i64* %1318, align 8
  %1319 = icmp eq %"class.std::__1::vector.2815"* %1317, null
  br i1 %1319, label %1331, label %1320

1320:                                             ; preds = %1312
  %1321 = getelementptr inbounds %"class.std::__1::vector.2815", %"class.std::__1::vector.2815"* %1317, i64 0, i32 0, i32 0
  %1322 = load i32*, i32** %1321, align 8
  %1323 = icmp eq i32* %1322, null
  br i1 %1323, label %1329, label %1324

1324:                                             ; preds = %1320
  %1325 = ptrtoint i32* %1322 to i64
  %1326 = getelementptr inbounds %"class.std::__1::vector.2815", %"class.std::__1::vector.2815"* %1317, i64 0, i32 0, i32 1
  %1327 = bitcast i32** %1326 to i64*
  store i64 %1325, i64* %1327, align 8
  %1328 = bitcast i32* %1322 to i8*
  call void @_ZdlPv(i8* %1328) #16
  br label %1329

1329:                                             ; preds = %1324, %1320
  %1330 = bitcast %"class.std::__1::vector.2815"* %1317 to i8*
  call void @_ZdlPv(i8* %1330) #16
  br label %1331

1331:                                             ; preds = %1329, %1312
  %1332 = load i32, i32* %448, align 8
  %1333 = and i32 %1332, 48
  %1334 = icmp eq i32 %1333, 0
  br i1 %1334, label %1335, label %1923

1335:                                             ; preds = %1331
  %1336 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %1337 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1336, i64 0, i32 0, i32 0, i32 0
  %1338 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1337, align 8
  %1339 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %1340 = bitcast %"class.blink::Member.318"* %1339 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1341 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1340, align 8
  %1342 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1341, i64 0, i32 3, i32 0, i32 0, i32 0
  %1343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1342, align 8
  %1344 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1338, i64 0, i32 3, i32 0, i32 0, i32 0
  %1345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1344, align 8
  %1346 = icmp eq %"class.WTF::StringImpl"* %1343, %1345
  br i1 %1346, label %1347, label %1923

1347:                                             ; preds = %1335
  %1348 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLImageElement"*
  %1349 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16HTMLImageElement10currentSrcEv(%"class.blink::HTMLImageElement"* nonnull %1348) #15
  %1350 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1349, i64 0, i32 0, i32 0
  %1351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1350, align 8
  %1352 = icmp eq %"class.WTF::StringImpl"* %1351, null
  br i1 %1352, label %1370, label %1353

1353:                                             ; preds = %1347
  %1354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1351, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1355 = load atomic i32, i32* %1354 monotonic, align 4
  %1356 = and i32 %1355, 2
  %1357 = icmp eq i32 %1356, 0
  br i1 %1357, label %1358, label %1370

1358:                                             ; preds = %1353
  %1359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1351, i64 0, i32 0
  %1360 = load i32, i32* %1359, align 4
  %1361 = zext i32 %1360 to i33
  %1362 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1361, i33 1) #15
  %1363 = extractvalue { i33, i1 } %1362, 1
  %1364 = extractvalue { i33, i1 } %1362, 0
  %1365 = icmp slt i33 %1364, 0
  %1366 = or i1 %1363, %1365
  br i1 %1366, label %1367, label %1368, !prof !3

1367:                                             ; preds = %1358
  call void @llvm.trap() #15
  unreachable

1368:                                             ; preds = %1358
  %1369 = trunc i33 %1364 to i32
  store i32 %1369, i32* %1359, align 4
  br label %1370

1370:                                             ; preds = %1347, %1353, %1368
  %1371 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 25
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"* %1371, %"class.WTF::StringImpl"* %1351) #15
  br label %1923

1372:                                             ; preds = %616
  %1373 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %1374 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1373, i64 0, i32 2, i32 0, i32 0
  %1375 = load %"class.blink::Document"*, %"class.blink::Document"** %1374, align 8
  %1376 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1375, i64 0, i32 0, i32 0
  %1377 = icmp eq %"class.blink::Node"* %1376, %1
  %1378 = bitcast %"class.blink::Node"* %1 to %"class.blink::Document"*
  br i1 %1377, label %1379, label %1870

1379:                                             ; preds = %1372
  %1380 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"* nonnull %1378) #15
  %1381 = icmp eq %"class.WTF::StringImpl"* %1380, null
  br i1 %1381, label %1399, label %1382

1382:                                             ; preds = %1379
  %1383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1384 = load atomic i32, i32* %1383 monotonic, align 4
  %1385 = and i32 %1384, 2
  %1386 = icmp eq i32 %1385, 0
  br i1 %1386, label %1387, label %1420

1387:                                             ; preds = %1382
  %1388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1380, i64 0, i32 0
  %1389 = load i32, i32* %1388, align 4
  %1390 = zext i32 %1389 to i33
  %1391 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1390, i33 1) #15
  %1392 = extractvalue { i33, i1 } %1391, 1
  %1393 = extractvalue { i33, i1 } %1391, 0
  %1394 = icmp slt i33 %1393, 0
  %1395 = or i1 %1392, %1394
  br i1 %1395, label %1396, label %1397, !prof !3

1396:                                             ; preds = %1387
  call void @llvm.trap() #15
  unreachable

1397:                                             ; preds = %1387
  %1398 = trunc i33 %1393 to i32
  store i32 %1398, i32* %1388, align 4
  br label %1420

1399:                                             ; preds = %1379
  %1400 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 13, i32 1
  %1401 = bitcast %"class.WTF::String"* %1400 to i64*
  %1402 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1400, i64 0, i32 0, i32 0
  %1403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1402, align 8
  store i64 0, i64* %1401, align 8
  %1404 = icmp eq %"class.WTF::StringImpl"* %1403, null
  br i1 %1404, label %1418, label %1405

1405:                                             ; preds = %1399
  %1406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1407 = load atomic i32, i32* %1406 monotonic, align 4
  %1408 = and i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1403, i64 0, i32 0
  %1411 = load i32, i32* %1410, align 4
  br i1 %1409, label %1412, label %1414

1412:                                             ; preds = %1405
  %1413 = add i32 %1411, -1
  store i32 %1413, i32* %1410, align 4
  br label %1414

1414:                                             ; preds = %1412, %1405
  %1415 = phi i32 [ %1413, %1412 ], [ %1411, %1405 ]
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1417, label %1418

1417:                                             ; preds = %1414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1403) #15
  br label %1418

1418:                                             ; preds = %1399, %1414, %1417
  %1419 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 13, i32 0
  store i8 1, i8* %1419, align 8
  br label %1481

1420:                                             ; preds = %1397, %1382
  %1421 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 13, i32 1
  %1422 = load atomic i32, i32* %1383 monotonic, align 4
  %1423 = and i32 %1422, 2
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %1425, label %1437

1425:                                             ; preds = %1420
  %1426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1380, i64 0, i32 0
  %1427 = load i32, i32* %1426, align 4
  %1428 = zext i32 %1427 to i33
  %1429 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1428, i33 1) #15
  %1430 = extractvalue { i33, i1 } %1429, 1
  %1431 = extractvalue { i33, i1 } %1429, 0
  %1432 = icmp slt i33 %1431, 0
  %1433 = or i1 %1430, %1432
  br i1 %1433, label %1434, label %1435, !prof !3

1434:                                             ; preds = %1425
  call void @llvm.trap() #15
  unreachable

1435:                                             ; preds = %1425
  %1436 = trunc i33 %1431 to i32
  store i32 %1436, i32* %1426, align 4
  br label %1437

1437:                                             ; preds = %1435, %1420
  %1438 = ptrtoint %"class.WTF::StringImpl"* %1380 to i64
  %1439 = bitcast %"class.WTF::String"* %1421 to i64*
  %1440 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1421, i64 0, i32 0, i32 0
  %1441 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1440, align 8
  store i64 %1438, i64* %1439, align 8
  %1442 = icmp eq %"class.WTF::StringImpl"* %1441, null
  br i1 %1442, label %1456, label %1443

1443:                                             ; preds = %1437
  %1444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1441, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1445 = load atomic i32, i32* %1444 monotonic, align 4
  %1446 = and i32 %1445, 2
  %1447 = icmp eq i32 %1446, 0
  %1448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1441, i64 0, i32 0
  %1449 = load i32, i32* %1448, align 4
  br i1 %1447, label %1450, label %1452

1450:                                             ; preds = %1443
  %1451 = add i32 %1449, -1
  store i32 %1451, i32* %1448, align 4
  br label %1452

1452:                                             ; preds = %1450, %1443
  %1453 = phi i32 [ %1451, %1450 ], [ %1449, %1443 ]
  %1454 = icmp eq i32 %1453, 0
  br i1 %1454, label %1455, label %1456

1455:                                             ; preds = %1452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1441) #15
  br label %1456

1456:                                             ; preds = %1437, %1452, %1455
  %1457 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 13, i32 0
  store i8 1, i8* %1457, align 8
  %1458 = load atomic i32, i32* %1383 monotonic, align 4
  %1459 = and i32 %1458, 2
  %1460 = icmp eq i32 %1459, 0
  %1461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1380, i64 0, i32 0
  %1462 = load i32, i32* %1461, align 4
  br i1 %1460, label %1463, label %1465

1463:                                             ; preds = %1456
  %1464 = add i32 %1462, -1
  store i32 %1464, i32* %1461, align 4
  br label %1465

1465:                                             ; preds = %1463, %1456
  %1466 = phi i32 [ %1464, %1463 ], [ %1462, %1456 ]
  %1467 = icmp eq i32 %1466, 0
  br i1 %1467, label %1468, label %1470

1468:                                             ; preds = %1465
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1380) #15
  %1469 = load i32, i32* %1461, align 4
  br label %1470

1470:                                             ; preds = %1465, %1468
  %1471 = phi i32 [ %1466, %1465 ], [ %1469, %1468 ]
  %1472 = load atomic i32, i32* %1383 monotonic, align 4
  %1473 = and i32 %1472, 2
  %1474 = icmp eq i32 %1473, 0
  br i1 %1474, label %1475, label %1477

1475:                                             ; preds = %1470
  %1476 = add i32 %1471, -1
  store i32 %1476, i32* %1461, align 4
  br label %1477

1477:                                             ; preds = %1475, %1470
  %1478 = phi i32 [ %1476, %1475 ], [ %1471, %1470 ]
  %1479 = icmp eq i32 %1478, 0
  br i1 %1479, label %1480, label %1481

1480:                                             ; preds = %1477
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1380) #15
  br label %1481

1481:                                             ; preds = %1418, %1477, %1480
  %1482 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent21DocumentBaseURLStringEPNS_8DocumentE(%"class.blink::Document"* nonnull %1378) #15
  %1483 = icmp eq %"class.WTF::StringImpl"* %1482, null
  br i1 %1483, label %1501, label %1484

1484:                                             ; preds = %1481
  %1485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1486 = load atomic i32, i32* %1485 monotonic, align 4
  %1487 = and i32 %1486, 2
  %1488 = icmp eq i32 %1487, 0
  br i1 %1488, label %1489, label %1522

1489:                                             ; preds = %1484
  %1490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1482, i64 0, i32 0
  %1491 = load i32, i32* %1490, align 4
  %1492 = zext i32 %1491 to i33
  %1493 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1492, i33 1) #15
  %1494 = extractvalue { i33, i1 } %1493, 1
  %1495 = extractvalue { i33, i1 } %1493, 0
  %1496 = icmp slt i33 %1495, 0
  %1497 = or i1 %1494, %1496
  br i1 %1497, label %1498, label %1499, !prof !3

1498:                                             ; preds = %1489
  call void @llvm.trap() #15
  unreachable

1499:                                             ; preds = %1489
  %1500 = trunc i33 %1495 to i32
  store i32 %1500, i32* %1490, align 4
  br label %1522

1501:                                             ; preds = %1481
  %1502 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 14, i32 1
  %1503 = bitcast %"class.WTF::String"* %1502 to i64*
  %1504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1502, i64 0, i32 0, i32 0
  %1505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1504, align 8
  store i64 0, i64* %1503, align 8
  %1506 = icmp eq %"class.WTF::StringImpl"* %1505, null
  br i1 %1506, label %1520, label %1507

1507:                                             ; preds = %1501
  %1508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1509 = load atomic i32, i32* %1508 monotonic, align 4
  %1510 = and i32 %1509, 2
  %1511 = icmp eq i32 %1510, 0
  %1512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1505, i64 0, i32 0
  %1513 = load i32, i32* %1512, align 4
  br i1 %1511, label %1514, label %1516

1514:                                             ; preds = %1507
  %1515 = add i32 %1513, -1
  store i32 %1515, i32* %1512, align 4
  br label %1516

1516:                                             ; preds = %1514, %1507
  %1517 = phi i32 [ %1515, %1514 ], [ %1513, %1507 ]
  %1518 = icmp eq i32 %1517, 0
  br i1 %1518, label %1519, label %1520

1519:                                             ; preds = %1516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1505) #15
  br label %1520

1520:                                             ; preds = %1501, %1516, %1519
  %1521 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 14, i32 0
  store i8 1, i8* %1521, align 8
  br label %1583

1522:                                             ; preds = %1499, %1484
  %1523 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 14, i32 1
  %1524 = load atomic i32, i32* %1485 monotonic, align 4
  %1525 = and i32 %1524, 2
  %1526 = icmp eq i32 %1525, 0
  br i1 %1526, label %1527, label %1539

1527:                                             ; preds = %1522
  %1528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1482, i64 0, i32 0
  %1529 = load i32, i32* %1528, align 4
  %1530 = zext i32 %1529 to i33
  %1531 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1530, i33 1) #15
  %1532 = extractvalue { i33, i1 } %1531, 1
  %1533 = extractvalue { i33, i1 } %1531, 0
  %1534 = icmp slt i33 %1533, 0
  %1535 = or i1 %1532, %1534
  br i1 %1535, label %1536, label %1537, !prof !3

1536:                                             ; preds = %1527
  call void @llvm.trap() #15
  unreachable

1537:                                             ; preds = %1527
  %1538 = trunc i33 %1533 to i32
  store i32 %1538, i32* %1528, align 4
  br label %1539

1539:                                             ; preds = %1537, %1522
  %1540 = ptrtoint %"class.WTF::StringImpl"* %1482 to i64
  %1541 = bitcast %"class.WTF::String"* %1523 to i64*
  %1542 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1523, i64 0, i32 0, i32 0
  %1543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1542, align 8
  store i64 %1540, i64* %1541, align 8
  %1544 = icmp eq %"class.WTF::StringImpl"* %1543, null
  br i1 %1544, label %1558, label %1545

1545:                                             ; preds = %1539
  %1546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1547 = load atomic i32, i32* %1546 monotonic, align 4
  %1548 = and i32 %1547, 2
  %1549 = icmp eq i32 %1548, 0
  %1550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1543, i64 0, i32 0
  %1551 = load i32, i32* %1550, align 4
  br i1 %1549, label %1552, label %1554

1552:                                             ; preds = %1545
  %1553 = add i32 %1551, -1
  store i32 %1553, i32* %1550, align 4
  br label %1554

1554:                                             ; preds = %1552, %1545
  %1555 = phi i32 [ %1553, %1552 ], [ %1551, %1545 ]
  %1556 = icmp eq i32 %1555, 0
  br i1 %1556, label %1557, label %1558

1557:                                             ; preds = %1554
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1543) #15
  br label %1558

1558:                                             ; preds = %1539, %1554, %1557
  %1559 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 14, i32 0
  store i8 1, i8* %1559, align 8
  %1560 = load atomic i32, i32* %1485 monotonic, align 4
  %1561 = and i32 %1560, 2
  %1562 = icmp eq i32 %1561, 0
  %1563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1482, i64 0, i32 0
  %1564 = load i32, i32* %1563, align 4
  br i1 %1562, label %1565, label %1567

1565:                                             ; preds = %1558
  %1566 = add i32 %1564, -1
  store i32 %1566, i32* %1563, align 4
  br label %1567

1567:                                             ; preds = %1565, %1558
  %1568 = phi i32 [ %1566, %1565 ], [ %1564, %1558 ]
  %1569 = icmp eq i32 %1568, 0
  br i1 %1569, label %1570, label %1572

1570:                                             ; preds = %1567
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1482) #15
  %1571 = load i32, i32* %1563, align 4
  br label %1572

1572:                                             ; preds = %1567, %1570
  %1573 = phi i32 [ %1568, %1567 ], [ %1571, %1570 ]
  %1574 = load atomic i32, i32* %1485 monotonic, align 4
  %1575 = and i32 %1574, 2
  %1576 = icmp eq i32 %1575, 0
  br i1 %1576, label %1577, label %1579

1577:                                             ; preds = %1572
  %1578 = add i32 %1573, -1
  store i32 %1578, i32* %1563, align 4
  br label %1579

1579:                                             ; preds = %1577, %1572
  %1580 = phi i32 [ %1578, %1577 ], [ %1573, %1572 ]
  %1581 = icmp eq i32 %1580, 0
  br i1 %1581, label %1582, label %1583

1582:                                             ; preds = %1579
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1482) #15
  br label %1583

1583:                                             ; preds = %1520, %1579, %1582
  %1584 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 26, i32 2
  %1585 = bitcast %"class.blink::Member.318"* %1584 to %"class.WTF::StringImpl"**
  %1586 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1585, align 8
  %1587 = icmp eq %"class.WTF::StringImpl"* %1586, null
  br i1 %1587, label %1650, label %1588

1588:                                             ; preds = %1583
  %1589 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1589) #15
  %1590 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1590) #15
  %1591 = bitcast %"class.blink::Member.318"* %1584 to %"class.WTF::String"*
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %13, %"class.WTF::String"* %1591, i32 0) #15
  %1592 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1593 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1592, i64 0, i32 1, i32 0
  %1594 = load i8, i8* %1593, align 1
  %1595 = icmp slt i8 %1594, 0
  br i1 %1595, label %1596, label %1600

1596:                                             ; preds = %1588
  %1597 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1598 = load i8*, i8** %1597, align 8
  %1599 = icmp eq i8* %1598, null
  br i1 %1599, label %1603, label %1600

1600:                                             ; preds = %1588, %1596
  %1601 = phi i8* [ %1598, %1596 ], [ %1590, %1588 ]
  %1602 = call i64 @strlen(i8* nonnull %1601) #17
  br label %1603

1603:                                             ; preds = %1596, %1600
  %1604 = phi i8* [ %1601, %1600 ], [ null, %1596 ]
  %1605 = phi i64 [ %1602, %1600 ], [ 0, %1596 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* %1604, i64 %1605) #15
  %1606 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %1607 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1606, align 8
  %1608 = icmp eq %"class.WTF::StringImpl"* %1607, null
  br i1 %1608, label %1626, label %1609

1609:                                             ; preds = %1603
  %1610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1607, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1611 = load atomic i32, i32* %1610 monotonic, align 4
  %1612 = and i32 %1611, 2
  %1613 = icmp eq i32 %1612, 0
  br i1 %1613, label %1614, label %1626

1614:                                             ; preds = %1609
  %1615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1607, i64 0, i32 0
  %1616 = load i32, i32* %1615, align 4
  %1617 = zext i32 %1616 to i33
  %1618 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1617, i33 1) #15
  %1619 = extractvalue { i33, i1 } %1618, 1
  %1620 = extractvalue { i33, i1 } %1618, 0
  %1621 = icmp slt i33 %1620, 0
  %1622 = or i1 %1619, %1621
  br i1 %1622, label %1623, label %1624, !prof !3

1623:                                             ; preds = %1614
  call void @llvm.trap() #15
  unreachable

1624:                                             ; preds = %1614
  %1625 = trunc i33 %1620 to i32
  store i32 %1625, i32* %1615, align 4
  br label %1626

1626:                                             ; preds = %1603, %1609, %1624
  %1627 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 15
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"* %1627, %"class.WTF::StringImpl"* %1607) #15
  %1628 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1606, align 8
  %1629 = icmp eq %"class.WTF::StringImpl"* %1628, null
  br i1 %1629, label %1643, label %1630

1630:                                             ; preds = %1626
  %1631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1628, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1632 = load atomic i32, i32* %1631 monotonic, align 4
  %1633 = and i32 %1632, 2
  %1634 = icmp eq i32 %1633, 0
  %1635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1628, i64 0, i32 0
  %1636 = load i32, i32* %1635, align 4
  br i1 %1634, label %1637, label %1639

1637:                                             ; preds = %1630
  %1638 = add i32 %1636, -1
  store i32 %1638, i32* %1635, align 4
  br label %1639

1639:                                             ; preds = %1637, %1630
  %1640 = phi i32 [ %1638, %1637 ], [ %1636, %1630 ]
  %1641 = icmp eq i32 %1640, 0
  br i1 %1641, label %1642, label %1643

1642:                                             ; preds = %1639
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1628) #15
  br label %1643

1643:                                             ; preds = %1626, %1639, %1642
  %1644 = load i8, i8* %1593, align 1
  %1645 = icmp slt i8 %1644, 0
  br i1 %1645, label %1646, label %1649

1646:                                             ; preds = %1643
  %1647 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1648 = load i8*, i8** %1647, align 8
  call void @_ZdlPv(i8* %1648) #16
  br label %1649

1649:                                             ; preds = %1643, %1646
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1590) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1589) #15
  br label %1650

1650:                                             ; preds = %1583, %1649
  %1651 = call %"class.WTF::StringImpl"* @_ZNK5blink8Document12EncodingNameEv(%"class.blink::Document"* nonnull %1378) #15
  %1652 = icmp eq %"class.WTF::StringImpl"* %1651, null
  br i1 %1652, label %1747, label %1653

1653:                                             ; preds = %1650
  %1654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1655 = load atomic i32, i32* %1654 monotonic, align 4
  %1656 = and i32 %1655, 2
  %1657 = icmp eq i32 %1656, 0
  %1658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1651, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 4
  br i1 %1657, label %1660, label %1662

1660:                                             ; preds = %1653
  %1661 = add i32 %1659, -1
  store i32 %1661, i32* %1658, align 4
  br label %1662

1662:                                             ; preds = %1660, %1653
  %1663 = phi i32 [ %1661, %1660 ], [ %1659, %1653 ]
  %1664 = icmp eq i32 %1663, 0
  br i1 %1664, label %1665, label %1666

1665:                                             ; preds = %1662
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1651) #15
  br label %1666

1666:                                             ; preds = %1665, %1662
  %1667 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1667) #15
  %1668 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1668) #15
  %1669 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1669) #15
  %1670 = call %"class.WTF::StringImpl"* @_ZNK5blink8Document12EncodingNameEv(%"class.blink::Document"* nonnull %1378) #15
  %1671 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1670, %"class.WTF::StringImpl"** %1671, align 8
  %1672 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %15, %"class.WTF::String"* nonnull %1672, i32 0) #15
  %1673 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1674 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1673, i64 0, i32 1, i32 0
  %1675 = load i8, i8* %1674, align 1
  %1676 = icmp slt i8 %1675, 0
  br i1 %1676, label %1677, label %1681

1677:                                             ; preds = %1666
  %1678 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1679 = load i8*, i8** %1678, align 8
  %1680 = icmp eq i8* %1679, null
  br i1 %1680, label %1684, label %1681

1681:                                             ; preds = %1666, %1677
  %1682 = phi i8* [ %1679, %1677 ], [ %1668, %1666 ]
  %1683 = call i64 @strlen(i8* nonnull %1682) #17
  br label %1684

1684:                                             ; preds = %1677, %1681
  %1685 = phi i8* [ %1682, %1681 ], [ null, %1677 ]
  %1686 = phi i64 [ %1683, %1681 ], [ 0, %1677 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* %1685, i64 %1686) #15
  %1687 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %1688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1687, align 8
  %1689 = icmp eq %"class.WTF::StringImpl"* %1688, null
  br i1 %1689, label %1707, label %1690

1690:                                             ; preds = %1684
  %1691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1692 = load atomic i32, i32* %1691 monotonic, align 4
  %1693 = and i32 %1692, 2
  %1694 = icmp eq i32 %1693, 0
  br i1 %1694, label %1695, label %1707

1695:                                             ; preds = %1690
  %1696 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1688, i64 0, i32 0
  %1697 = load i32, i32* %1696, align 4
  %1698 = zext i32 %1697 to i33
  %1699 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1698, i33 1) #15
  %1700 = extractvalue { i33, i1 } %1699, 1
  %1701 = extractvalue { i33, i1 } %1699, 0
  %1702 = icmp slt i33 %1701, 0
  %1703 = or i1 %1700, %1702
  br i1 %1703, label %1704, label %1705, !prof !3

1704:                                             ; preds = %1695
  call void @llvm.trap() #15
  unreachable

1705:                                             ; preds = %1695
  %1706 = trunc i33 %1701 to i32
  store i32 %1706, i32* %1696, align 4
  br label %1707

1707:                                             ; preds = %1684, %1690, %1705
  %1708 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 16
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"* %1708, %"class.WTF::StringImpl"* %1688) #15
  %1709 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1687, align 8
  %1710 = icmp eq %"class.WTF::StringImpl"* %1709, null
  br i1 %1710, label %1724, label %1711

1711:                                             ; preds = %1707
  %1712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1713 = load atomic i32, i32* %1712 monotonic, align 4
  %1714 = and i32 %1713, 2
  %1715 = icmp eq i32 %1714, 0
  %1716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1709, i64 0, i32 0
  %1717 = load i32, i32* %1716, align 4
  br i1 %1715, label %1718, label %1720

1718:                                             ; preds = %1711
  %1719 = add i32 %1717, -1
  store i32 %1719, i32* %1716, align 4
  br label %1720

1720:                                             ; preds = %1718, %1711
  %1721 = phi i32 [ %1719, %1718 ], [ %1717, %1711 ]
  %1722 = icmp eq i32 %1721, 0
  br i1 %1722, label %1723, label %1724

1723:                                             ; preds = %1720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1709) #15
  br label %1724

1724:                                             ; preds = %1707, %1720, %1723
  %1725 = load i8, i8* %1674, align 1
  %1726 = icmp slt i8 %1725, 0
  br i1 %1726, label %1727, label %1730

1727:                                             ; preds = %1724
  %1728 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1729 = load i8*, i8** %1728, align 8
  call void @_ZdlPv(i8* %1729) #16
  br label %1730

1730:                                             ; preds = %1724, %1727
  %1731 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1671, align 8
  %1732 = icmp eq %"class.WTF::StringImpl"* %1731, null
  br i1 %1732, label %1746, label %1733

1733:                                             ; preds = %1730
  %1734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1731, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1735 = load atomic i32, i32* %1734 monotonic, align 4
  %1736 = and i32 %1735, 2
  %1737 = icmp eq i32 %1736, 0
  %1738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1731, i64 0, i32 0
  %1739 = load i32, i32* %1738, align 4
  br i1 %1737, label %1740, label %1742

1740:                                             ; preds = %1733
  %1741 = add i32 %1739, -1
  store i32 %1741, i32* %1738, align 4
  br label %1742

1742:                                             ; preds = %1740, %1733
  %1743 = phi i32 [ %1741, %1740 ], [ %1739, %1733 ]
  %1744 = icmp eq i32 %1743, 0
  br i1 %1744, label %1745, label %1746

1745:                                             ; preds = %1742
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1731) #15
  br label %1746

1746:                                             ; preds = %1730, %1742, %1745
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1669) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1668) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1667) #15
  br label %1747

1747:                                             ; preds = %1650, %1746
  %1748 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %1378) #15
  %1749 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1748, i64 0, i32 0
  %1750 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %1749) #15
  %1751 = icmp eq %"class.WTF::StringImpl"* %1750, null
  br i1 %1751, label %1769, label %1752

1752:                                             ; preds = %1747
  %1753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1754 = load atomic i32, i32* %1753 monotonic, align 4
  %1755 = and i32 %1754, 2
  %1756 = icmp eq i32 %1755, 0
  br i1 %1756, label %1757, label %1790

1757:                                             ; preds = %1752
  %1758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1759 = load i32, i32* %1758, align 4
  %1760 = zext i32 %1759 to i33
  %1761 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1760, i33 1) #15
  %1762 = extractvalue { i33, i1 } %1761, 1
  %1763 = extractvalue { i33, i1 } %1761, 0
  %1764 = icmp slt i33 %1763, 0
  %1765 = or i1 %1762, %1764
  br i1 %1765, label %1766, label %1767, !prof !3

1766:                                             ; preds = %1757
  call void @llvm.trap() #15
  unreachable

1767:                                             ; preds = %1757
  %1768 = trunc i33 %1763 to i32
  store i32 %1768, i32* %1758, align 4
  br label %1790

1769:                                             ; preds = %1747
  %1770 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 1
  %1771 = bitcast %"class.WTF::String"* %1770 to i64*
  %1772 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1770, i64 0, i32 0, i32 0
  %1773 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1772, align 8
  store i64 0, i64* %1771, align 8
  %1774 = icmp eq %"class.WTF::StringImpl"* %1773, null
  br i1 %1774, label %1788, label %1775

1775:                                             ; preds = %1769
  %1776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1773, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1777 = load atomic i32, i32* %1776 monotonic, align 4
  %1778 = and i32 %1777, 2
  %1779 = icmp eq i32 %1778, 0
  %1780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1773, i64 0, i32 0
  %1781 = load i32, i32* %1780, align 4
  br i1 %1779, label %1782, label %1784

1782:                                             ; preds = %1775
  %1783 = add i32 %1781, -1
  store i32 %1783, i32* %1780, align 4
  br label %1784

1784:                                             ; preds = %1782, %1775
  %1785 = phi i32 [ %1783, %1782 ], [ %1781, %1775 ]
  %1786 = icmp eq i32 %1785, 0
  br i1 %1786, label %1787, label %1788

1787:                                             ; preds = %1784
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1773) #15
  br label %1788

1788:                                             ; preds = %1769, %1784, %1787
  %1789 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 0
  store i8 1, i8* %1789, align 8
  br label %1851

1790:                                             ; preds = %1767, %1752
  %1791 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 1
  %1792 = load atomic i32, i32* %1753 monotonic, align 4
  %1793 = and i32 %1792, 2
  %1794 = icmp eq i32 %1793, 0
  br i1 %1794, label %1795, label %1807

1795:                                             ; preds = %1790
  %1796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1797 = load i32, i32* %1796, align 4
  %1798 = zext i32 %1797 to i33
  %1799 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1798, i33 1) #15
  %1800 = extractvalue { i33, i1 } %1799, 1
  %1801 = extractvalue { i33, i1 } %1799, 0
  %1802 = icmp slt i33 %1801, 0
  %1803 = or i1 %1800, %1802
  br i1 %1803, label %1804, label %1805, !prof !3

1804:                                             ; preds = %1795
  call void @llvm.trap() #15
  unreachable

1805:                                             ; preds = %1795
  %1806 = trunc i33 %1801 to i32
  store i32 %1806, i32* %1796, align 4
  br label %1807

1807:                                             ; preds = %1805, %1790
  %1808 = ptrtoint %"class.WTF::StringImpl"* %1750 to i64
  %1809 = bitcast %"class.WTF::String"* %1791 to i64*
  %1810 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1791, i64 0, i32 0, i32 0
  %1811 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1810, align 8
  store i64 %1808, i64* %1809, align 8
  %1812 = icmp eq %"class.WTF::StringImpl"* %1811, null
  br i1 %1812, label %1826, label %1813

1813:                                             ; preds = %1807
  %1814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1811, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1815 = load atomic i32, i32* %1814 monotonic, align 4
  %1816 = and i32 %1815, 2
  %1817 = icmp eq i32 %1816, 0
  %1818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1811, i64 0, i32 0
  %1819 = load i32, i32* %1818, align 4
  br i1 %1817, label %1820, label %1822

1820:                                             ; preds = %1813
  %1821 = add i32 %1819, -1
  store i32 %1821, i32* %1818, align 4
  br label %1822

1822:                                             ; preds = %1820, %1813
  %1823 = phi i32 [ %1821, %1820 ], [ %1819, %1813 ]
  %1824 = icmp eq i32 %1823, 0
  br i1 %1824, label %1825, label %1826

1825:                                             ; preds = %1822
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1811) #15
  br label %1826

1826:                                             ; preds = %1807, %1822, %1825
  %1827 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 19, i32 0
  store i8 1, i8* %1827, align 8
  %1828 = load atomic i32, i32* %1753 monotonic, align 4
  %1829 = and i32 %1828, 2
  %1830 = icmp eq i32 %1829, 0
  %1831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1832 = load i32, i32* %1831, align 4
  br i1 %1830, label %1833, label %1835

1833:                                             ; preds = %1826
  %1834 = add i32 %1832, -1
  store i32 %1834, i32* %1831, align 4
  br label %1835

1835:                                             ; preds = %1833, %1826
  %1836 = phi i32 [ %1834, %1833 ], [ %1832, %1826 ]
  %1837 = icmp eq i32 %1836, 0
  br i1 %1837, label %1838, label %1840

1838:                                             ; preds = %1835
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1750) #15
  %1839 = load i32, i32* %1831, align 4
  br label %1840

1840:                                             ; preds = %1835, %1838
  %1841 = phi i32 [ %1836, %1835 ], [ %1839, %1838 ]
  %1842 = load atomic i32, i32* %1753 monotonic, align 4
  %1843 = and i32 %1842, 2
  %1844 = icmp eq i32 %1843, 0
  br i1 %1844, label %1845, label %1847

1845:                                             ; preds = %1840
  %1846 = add i32 %1841, -1
  store i32 %1846, i32* %1831, align 4
  br label %1847

1847:                                             ; preds = %1845, %1840
  %1848 = phi i32 [ %1846, %1845 ], [ %1841, %1840 ]
  %1849 = icmp eq i32 %1848, 0
  br i1 %1849, label %1850, label %1851

1850:                                             ; preds = %1847
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1750) #15
  br label %1851

1851:                                             ; preds = %1788, %1847, %1850
  %1852 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* nonnull %1378) #15
  %1853 = icmp eq %"class.blink::LocalFrameView"* %1852, null
  br i1 %1853, label %1923, label %1854

1854:                                             ; preds = %1851
  %1855 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* nonnull %1378) #15
  %1856 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %1855) #15
  %1857 = icmp eq %"class.blink::PaintLayerScrollableArea"* %1856, null
  br i1 %1857, label %1923, label %1858

1858:                                             ; preds = %1854
  %1859 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* nonnull %1378) #15
  %1860 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %1859) #15
  %1861 = call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %1860) #15
  %1862 = extractelement <2 x float> %1861, i32 0
  %1863 = fpext float %1862 to double
  %1864 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 27, i32 1
  store double %1863, double* %1864, align 8
  %1865 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 27, i32 0
  store i8 1, i8* %1865, align 8
  %1866 = extractelement <2 x float> %1861, i32 1
  %1867 = fpext float %1866 to double
  %1868 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 28, i32 1
  store double %1867, double* %1868, align 8
  %1869 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 28, i32 0
  store i8 1, i8* %1869, align 8
  br label %1923

1870:                                             ; preds = %1372
  %1871 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %29, align 8
  %1872 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %1871, i64 30
  %1873 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %1872, align 8
  %1874 = call i32 %1873(%"class.blink::Node"* nonnull %1) #15
  %1875 = icmp eq i32 %1874, 10
  br i1 %1875, label %1876, label %1923

1876:                                             ; preds = %1870
  %1877 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %1878 = bitcast %"class.blink::TraceWrapperV8Reference"* %1877 to %"class.WTF::StringImpl"**
  %1879 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1878, align 8
  %1880 = icmp eq %"class.WTF::StringImpl"* %1879, null
  br i1 %1880, label %1898, label %1881

1881:                                             ; preds = %1876
  %1882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1879, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1883 = load atomic i32, i32* %1882 monotonic, align 4
  %1884 = and i32 %1883, 2
  %1885 = icmp eq i32 %1884, 0
  br i1 %1885, label %1886, label %1898

1886:                                             ; preds = %1881
  %1887 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1879, i64 0, i32 0
  %1888 = load i32, i32* %1887, align 4
  %1889 = zext i32 %1888 to i33
  %1890 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1889, i33 1) #15
  %1891 = extractvalue { i33, i1 } %1890, 1
  %1892 = extractvalue { i33, i1 } %1890, 0
  %1893 = icmp slt i33 %1892, 0
  %1894 = or i1 %1891, %1893
  br i1 %1894, label %1895, label %1896, !prof !3

1895:                                             ; preds = %1886
  call void @llvm.trap() #15
  unreachable

1896:                                             ; preds = %1886
  %1897 = trunc i33 %1892 to i32
  store i32 %1897, i32* %1887, align 4
  br label %1898

1898:                                             ; preds = %1876, %1881, %1896
  %1899 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 17
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"* %1899, %"class.WTF::StringImpl"* %1879) #15
  %1900 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 1
  %1901 = bitcast i32* %1900 to %"class.WTF::StringImpl"**
  %1902 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1901, align 8
  %1903 = icmp eq %"class.WTF::StringImpl"* %1902, null
  br i1 %1903, label %1921, label %1904

1904:                                             ; preds = %1898
  %1905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1902, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1906 = load atomic i32, i32* %1905 monotonic, align 4
  %1907 = and i32 %1906, 2
  %1908 = icmp eq i32 %1907, 0
  br i1 %1908, label %1909, label %1921

1909:                                             ; preds = %1904
  %1910 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1902, i64 0, i32 0
  %1911 = load i32, i32* %1910, align 4
  %1912 = zext i32 %1911 to i33
  %1913 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1912, i33 1) #15
  %1914 = extractvalue { i33, i1 } %1913, 1
  %1915 = extractvalue { i33, i1 } %1913, 0
  %1916 = icmp slt i33 %1915, 0
  %1917 = or i1 %1914, %1916
  br i1 %1917, label %1918, label %1919, !prof !3

1918:                                             ; preds = %1909
  call void @llvm.trap() #15
  unreachable

1919:                                             ; preds = %1909
  %1920 = trunc i33 %1915 to i32
  store i32 %1920, i32* %1910, align 4
  br label %1921

1921:                                             ; preds = %1898, %1904, %1919
  %1922 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 18
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"* %1922, %"class.WTF::StringImpl"* %1902) #15
  br label %1923

1923:                                             ; preds = %1870, %1335, %614, %1331, %1858, %1851, %1854, %1921, %1370
  %1924 = load i32, i32* %448, align 8
  %1925 = and i32 %1924, 512
  %1926 = icmp eq i32 %1925, 0
  br i1 %1926, label %2030, label %1927

1927:                                             ; preds = %1923
  %1928 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %1) #15
  %1929 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17GetShadowRootTypeEPNS_10ShadowRootE(%"class.blink::ShadowRoot"* %1928) #15
  %1930 = icmp eq %"class.WTF::StringImpl"* %1929, null
  br i1 %1930, label %1948, label %1931

1931:                                             ; preds = %1927
  %1932 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1929, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1933 = load atomic i32, i32* %1932 monotonic, align 4
  %1934 = and i32 %1933, 2
  %1935 = icmp eq i32 %1934, 0
  br i1 %1935, label %1936, label %1969

1936:                                             ; preds = %1931
  %1937 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1929, i64 0, i32 0
  %1938 = load i32, i32* %1937, align 4
  %1939 = zext i32 %1938 to i33
  %1940 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1939, i33 1) #15
  %1941 = extractvalue { i33, i1 } %1940, 1
  %1942 = extractvalue { i33, i1 } %1940, 0
  %1943 = icmp slt i33 %1942, 0
  %1944 = or i1 %1941, %1943
  br i1 %1944, label %1945, label %1946, !prof !3

1945:                                             ; preds = %1936
  call void @llvm.trap() #15
  unreachable

1946:                                             ; preds = %1936
  %1947 = trunc i33 %1942 to i32
  store i32 %1947, i32* %1937, align 4
  br label %1969

1948:                                             ; preds = %1927
  %1949 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 22, i32 1
  %1950 = bitcast %"class.WTF::String"* %1949 to i64*
  %1951 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1949, i64 0, i32 0, i32 0
  %1952 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1951, align 8
  store i64 0, i64* %1950, align 8
  %1953 = icmp eq %"class.WTF::StringImpl"* %1952, null
  br i1 %1953, label %1967, label %1954

1954:                                             ; preds = %1948
  %1955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1952, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1956 = load atomic i32, i32* %1955 monotonic, align 4
  %1957 = and i32 %1956, 2
  %1958 = icmp eq i32 %1957, 0
  %1959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1952, i64 0, i32 0
  %1960 = load i32, i32* %1959, align 4
  br i1 %1958, label %1961, label %1963

1961:                                             ; preds = %1954
  %1962 = add i32 %1960, -1
  store i32 %1962, i32* %1959, align 4
  br label %1963

1963:                                             ; preds = %1961, %1954
  %1964 = phi i32 [ %1962, %1961 ], [ %1960, %1954 ]
  %1965 = icmp eq i32 %1964, 0
  br i1 %1965, label %1966, label %1967

1966:                                             ; preds = %1963
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1952) #15
  br label %1967

1967:                                             ; preds = %1948, %1963, %1966
  %1968 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 22, i32 0
  store i8 1, i8* %1968, align 8
  br label %2030

1969:                                             ; preds = %1946, %1931
  %1970 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 22, i32 1
  %1971 = load atomic i32, i32* %1932 monotonic, align 4
  %1972 = and i32 %1971, 2
  %1973 = icmp eq i32 %1972, 0
  br i1 %1973, label %1974, label %1986

1974:                                             ; preds = %1969
  %1975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1929, i64 0, i32 0
  %1976 = load i32, i32* %1975, align 4
  %1977 = zext i32 %1976 to i33
  %1978 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1977, i33 1) #15
  %1979 = extractvalue { i33, i1 } %1978, 1
  %1980 = extractvalue { i33, i1 } %1978, 0
  %1981 = icmp slt i33 %1980, 0
  %1982 = or i1 %1979, %1981
  br i1 %1982, label %1983, label %1984, !prof !3

1983:                                             ; preds = %1974
  call void @llvm.trap() #15
  unreachable

1984:                                             ; preds = %1974
  %1985 = trunc i33 %1980 to i32
  store i32 %1985, i32* %1975, align 4
  br label %1986

1986:                                             ; preds = %1984, %1969
  %1987 = ptrtoint %"class.WTF::StringImpl"* %1929 to i64
  %1988 = bitcast %"class.WTF::String"* %1970 to i64*
  %1989 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1970, i64 0, i32 0, i32 0
  %1990 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1989, align 8
  store i64 %1987, i64* %1988, align 8
  %1991 = icmp eq %"class.WTF::StringImpl"* %1990, null
  br i1 %1991, label %2005, label %1992

1992:                                             ; preds = %1986
  %1993 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1990, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1994 = load atomic i32, i32* %1993 monotonic, align 4
  %1995 = and i32 %1994, 2
  %1996 = icmp eq i32 %1995, 0
  %1997 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1990, i64 0, i32 0
  %1998 = load i32, i32* %1997, align 4
  br i1 %1996, label %1999, label %2001

1999:                                             ; preds = %1992
  %2000 = add i32 %1998, -1
  store i32 %2000, i32* %1997, align 4
  br label %2001

2001:                                             ; preds = %1999, %1992
  %2002 = phi i32 [ %2000, %1999 ], [ %1998, %1992 ]
  %2003 = icmp eq i32 %2002, 0
  br i1 %2003, label %2004, label %2005

2004:                                             ; preds = %2001
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1990) #15
  br label %2005

2005:                                             ; preds = %1986, %2001, %2004
  %2006 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 22, i32 0
  store i8 1, i8* %2006, align 8
  %2007 = load atomic i32, i32* %1932 monotonic, align 4
  %2008 = and i32 %2007, 2
  %2009 = icmp eq i32 %2008, 0
  %2010 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1929, i64 0, i32 0
  %2011 = load i32, i32* %2010, align 4
  br i1 %2009, label %2012, label %2014

2012:                                             ; preds = %2005
  %2013 = add i32 %2011, -1
  store i32 %2013, i32* %2010, align 4
  br label %2014

2014:                                             ; preds = %2012, %2005
  %2015 = phi i32 [ %2013, %2012 ], [ %2011, %2005 ]
  %2016 = icmp eq i32 %2015, 0
  br i1 %2016, label %2017, label %2019

2017:                                             ; preds = %2014
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1929) #15
  %2018 = load i32, i32* %2010, align 4
  br label %2019

2019:                                             ; preds = %2014, %2017
  %2020 = phi i32 [ %2015, %2014 ], [ %2018, %2017 ]
  %2021 = load atomic i32, i32* %1932 monotonic, align 4
  %2022 = and i32 %2021, 2
  %2023 = icmp eq i32 %2022, 0
  br i1 %2023, label %2024, label %2026

2024:                                             ; preds = %2019
  %2025 = add i32 %2020, -1
  store i32 %2025, i32* %2010, align 4
  br label %2026

2026:                                             ; preds = %2024, %2019
  %2027 = phi i32 [ %2025, %2024 ], [ %2020, %2019 ]
  %2028 = icmp eq i32 %2027, 0
  br i1 %2028, label %2029, label %2030

2029:                                             ; preds = %2026
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1929) #15
  br label %2030

2030:                                             ; preds = %1923, %2029, %2026, %1967
  %2031 = load i32, i32* %448, align 8
  %2032 = and i32 %2031, 2
  %2033 = icmp eq i32 %2032, 0
  br i1 %2033, label %2053, label %2034

2034:                                             ; preds = %2030
  %2035 = call %"class.std::__1::vector.2815"* @_ZN5blink22LegacyDOMSnapshotAgent22VisitContainerChildrenEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::Node"* %1, i1 zeroext %2, i1 zeroext %3)
  %2036 = ptrtoint %"class.std::__1::vector.2815"* %2035 to i64
  %2037 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::DOMNode", %"class.blink::protocol::DOMSnapshot::DOMNode"* %426, i64 0, i32 9
  %2038 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %2037, i64 0, i32 0, i32 0, i32 0, i32 0
  %2039 = load %"class.std::__1::vector.2815"*, %"class.std::__1::vector.2815"** %2038, align 8
  %2040 = bitcast %"class.crdtp::detail::PtrMaybe"* %2037 to i64*
  store i64 %2036, i64* %2040, align 8
  %2041 = icmp eq %"class.std::__1::vector.2815"* %2039, null
  br i1 %2041, label %2053, label %2042

2042:                                             ; preds = %2034
  %2043 = getelementptr inbounds %"class.std::__1::vector.2815", %"class.std::__1::vector.2815"* %2039, i64 0, i32 0, i32 0
  %2044 = load i32*, i32** %2043, align 8
  %2045 = icmp eq i32* %2044, null
  br i1 %2045, label %2051, label %2046

2046:                                             ; preds = %2042
  %2047 = ptrtoint i32* %2044 to i64
  %2048 = getelementptr inbounds %"class.std::__1::vector.2815", %"class.std::__1::vector.2815"* %2039, i64 0, i32 0, i32 1
  %2049 = bitcast i32** %2048 to i64*
  store i64 %2047, i64* %2049, align 8
  %2050 = bitcast i32* %2044 to i8*
  call void @_ZdlPv(i8* %2050) #16
  br label %2051

2051:                                             ; preds = %2046, %2042
  %2052 = bitcast %"class.std::__1::vector.2815"* %2039 to i8*
  call void @_ZdlPv(i8* %2052) #16
  br label %2053

2053:                                             ; preds = %2030, %2051, %2034
  %2054 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %47, align 8
  %2055 = icmp eq %"class.blink::protocol::DOMSnapshot::DOMNode"* %2054, null
  br i1 %2055, label %2061, label %2056

2056:                                             ; preds = %2053
  %2057 = bitcast %"class.blink::protocol::DOMSnapshot::DOMNode"* %2054 to void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)***
  %2058 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)**, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*** %2057, align 8
  %2059 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %2058, i64 2
  %2060 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %2059, align 8
  call void %2060(%"class.blink::protocol::DOMSnapshot::DOMNode"* nonnull %2054) #15
  br label %2061

2061:                                             ; preds = %2053, %2056
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  br i1 %153, label %2075, label %2062

2062:                                             ; preds = %2061
  %2063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2064 = load atomic i32, i32* %2063 monotonic, align 4
  %2065 = and i32 %2064, 2
  %2066 = icmp eq i32 %2065, 0
  %2067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %2068 = load i32, i32* %2067, align 4
  br i1 %2066, label %2069, label %2071

2069:                                             ; preds = %2062
  %2070 = add i32 %2068, -1
  store i32 %2070, i32* %2067, align 4
  br label %2071

2071:                                             ; preds = %2069, %2062
  %2072 = phi i32 [ %2070, %2069 ], [ %2068, %2062 ]
  %2073 = icmp eq i32 %2072, 0
  br i1 %2073, label %2074, label %2075

2074:                                             ; preds = %2071
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #15
  br label %2075

2075:                                             ; preds = %2061, %2071, %2074
  ret i32 %436
}

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #2

declare i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIiNS_6StringENS_7IntHashIiEENS_10HashTraitsIiEENS4_IS1_EENS_18PartitionAllocatorEE2atERKi(%"class.WTF::HashMap.2920"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.2920", %"class.WTF::HashMap.2920"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3126"*, %"struct.WTF::KeyValuePair.3126"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3126"* %4, null
  br i1 %5, label %83, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.2920", %"class.WTF::HashMap.2920"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %6
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %83, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %6
  %60 = phi %"struct.WTF::KeyValuePair.3126"* [ %27, %6 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.3126"* %60, null
  br i1 %61, label %83, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3126", %"struct.WTF::KeyValuePair.3126"* %60, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #15
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %71
  tail call void @llvm.trap() #15
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %45, %2, %81, %66, %62, %59
  %84 = phi %"class.WTF::StringImpl"* [ null, %59 ], [ null, %62 ], [ %64, %66 ], [ %64, %81 ], [ null, %2 ], [ null, %45 ]
  ret %"class.WTF::StringImpl"* %84
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22LegacyDOMSnapshotAgent19VisitLayoutTreeNodeEPNS_12LayoutObjectEPNS_4NodeEi(%"class.blink::LegacyDOMSnapshotAgent"* nocapture readonly, %"class.blink::LayoutObject"*, %"class.blink::Node"*, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.3177", align 8
  %6 = alloca %"class.WTF::Vector.3395", align 8
  %7 = alloca %"class.std::__1::unique_ptr.3198", align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %8, label %451, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::Node"* %2 to i8 (%"class.blink::Node"*)***
  %11 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %10, align 8
  %12 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %11, i64 34
  %13 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %12, align 8
  %14 = tail call zeroext i8 %13(%"class.blink::Node"* %2) #15
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %40, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %18 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %18, i64 13
  %20 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutObjectChildList"* %20(%"class.blink::LayoutObject"* nonnull %1) #15
  %22 = icmp eq %"class.blink::LayoutObjectChildList"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %21, i64 0, i32 0
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23, %36
  %28 = phi %"class.blink::LayoutObject"* [ %38, %36 ], [ %25, %23 ]
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = tail call i32 @_ZN5blink22LegacyDOMSnapshotAgent19VisitLayoutTreeNodeEPNS_12LayoutObjectEPNS_4NodeEi(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::LayoutObject"* nonnull %28, %"class.blink::Node"* %2, i32 %3)
  br label %36

36:                                               ; preds = %27, %34
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 9
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %40, label %27

40:                                               ; preds = %36, %16, %23, %9
  %41 = bitcast %"class.std::__1::unique_ptr.3177"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*), %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %42, align 8
  %43 = tail call i8* @_Znwm(i64 72) #16
  %44 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMSnapshot14LayoutTreeNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 16
  %46 = bitcast i8* %45 to i64*
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 24
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds i8, i8* %43, i64 32
  %49 = getelementptr inbounds i8, i8* %43, i64 52
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %43, i64 56
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds i8, i8* %43, i64 60
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %43, i64 64
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds i8, i8* %43, i64 65
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds i8, i8* %43, i64 8
  %57 = bitcast i8* %56 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 17, i1 false) #15
  store i32 %3, i32* %57, align 8
  %58 = tail call { i64, i64 } @_ZN5blink25InspectorDOMSnapshotAgent14RectInDocumentEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull %1) #15
  %59 = extractvalue { i64, i64 } %58, 0
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %63 = extractvalue { i64, i64 } %58, 1
  %64 = tail call i8* @_Znwm(i64 40) #16
  %65 = bitcast i8* %64 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM4RectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = sitofp i32 %60 to double
  %68 = fmul double %67, 1.562500e-02
  %69 = bitcast i8* %66 to double*
  store double %68, double* %69, align 8
  %70 = sitofp i32 %62 to double
  %71 = fmul double %70, 1.562500e-02
  %72 = getelementptr inbounds i8, i8* %64, i64 16
  %73 = bitcast i8* %72 to double*
  store double %71, double* %73, align 8
  %74 = trunc i64 %63 to i32
  %75 = sitofp i32 %74 to double
  %76 = fmul double %75, 1.562500e-02
  %77 = getelementptr inbounds i8, i8* %64, i64 24
  %78 = bitcast i8* %77 to double*
  store double %76, double* %78, align 8
  %79 = lshr i64 %63, 32
  %80 = trunc i64 %79 to i32
  %81 = sitofp i32 %80 to double
  %82 = fmul double %81, 1.562500e-02
  %83 = getelementptr inbounds i8, i8* %64, i64 32
  %84 = bitcast i8* %83 to double*
  store double %82, double* %84, align 8
  %85 = ptrtoint i8* %64 to i64
  %86 = bitcast i8* %45 to %"class.blink::protocol::DOM::Rect"**
  %87 = load %"class.blink::protocol::DOM::Rect"*, %"class.blink::protocol::DOM::Rect"** %86, align 8
  store i64 %85, i64* %46, align 8
  %88 = icmp eq %"class.blink::protocol::DOM::Rect"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %40
  %90 = bitcast %"class.blink::protocol::DOM::Rect"* %87 to void (%"class.blink::protocol::DOM::Rect"*)***
  %91 = load void (%"class.blink::protocol::DOM::Rect"*)**, void (%"class.blink::protocol::DOM::Rect"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %91, i64 2
  %93 = load void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %92, align 8
  tail call void %93(%"class.blink::protocol::DOM::Rect"* nonnull %87) #15
  br label %94

94:                                               ; preds = %89, %40
  %95 = bitcast %"class.std::__1::unique_ptr.3177"* %5 to i8**
  store i8* %43, i8** %95, align 8
  %96 = tail call i32 @_ZN5blink22LegacyDOMSnapshotAgent20GetStyleIndexForNodeEPNS_4NodeE(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::Node"* %2)
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds i8, i8* %43, i64 52
  %100 = bitcast i8* %99 to i32*
  store i32 %96, i32* %100, align 4
  %101 = getelementptr inbounds i8, i8* %43, i64 48
  store i8 1, i8* %101, align 4
  br label %102

102:                                              ; preds = %94, %98
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %103, align 8
  %105 = icmp eq %"class.blink::ComputedStyle"* %104, null
  br i1 %105, label %170, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %108, i64 0, i32 3, i32 0, i32 0
  %110 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %110, i64 0, i32 39
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 67108864
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %167

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %108, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %117, i64 0, i32 2, i32 0, i32 0
  %119 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %119, i64 0, i32 45
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 5
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %170, label %124

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %126 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %125 to i96*
  %127 = load i96, i96* %126, align 4
  %128 = and i96 %127, 1207959552
  %129 = icmp eq i96 %128, 134217728
  br i1 %129, label %170, label %130

130:                                              ; preds = %124
  %131 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, i64 92
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, align 8
  %135 = tail call zeroext i1 %134(%"class.blink::LayoutObject"* nonnull %1, i32 43) #15
  br i1 %135, label %170, label %136

136:                                              ; preds = %130
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %138 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %137, i64 92
  %139 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %138, align 8
  %140 = tail call zeroext i1 %139(%"class.blink::LayoutObject"* nonnull %1, i32 46) #15
  br i1 %140, label %161, label %141

141:                                              ; preds = %136
  %142 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %143 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %142, i64 92
  %144 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %143, align 8
  %145 = tail call zeroext i1 %144(%"class.blink::LayoutObject"* nonnull %1, i32 48) #15
  br i1 %145, label %161, label %146

146:                                              ; preds = %141
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %148 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %147, i64 92
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %148, align 8
  %150 = tail call zeroext i1 %149(%"class.blink::LayoutObject"* nonnull %1, i32 45) #15
  br i1 %150, label %161, label %151

151:                                              ; preds = %146
  %152 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %152, i64 92
  %154 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %153, align 8
  %155 = tail call zeroext i1 %154(%"class.blink::LayoutObject"* nonnull %1, i32 49) #15
  br i1 %155, label %161, label %156

156:                                              ; preds = %151
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %157, i64 92
  %159 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %158, align 8
  %160 = tail call zeroext i1 %159(%"class.blink::LayoutObject"* nonnull %1, i32 50) #15
  br i1 %160, label %161, label %167

161:                                              ; preds = %136, %141, %146, %151, %156
  %162 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %163 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %162, align 8
  %164 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %163, i64 24
  %165 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %164, align 8
  %166 = tail call zeroext i1 %165(%"class.blink::LayoutObject"* nonnull %1) #15
  br i1 %166, label %167, label %170

167:                                              ; preds = %156, %106, %161
  %168 = getelementptr inbounds i8, i8* %43, i64 65
  store i8 1, i8* %168, align 1
  %169 = getelementptr inbounds i8, i8* %43, i64 64
  store i8 1, i8* %169, align 1
  br label %170

170:                                              ; preds = %124, %115, %130, %102, %167, %161
  %171 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %172 = load %"class.WTF::HashMap.2913"*, %"class.WTF::HashMap.2913"** %171, align 8
  %173 = icmp eq %"class.WTF::HashMap.2913"* %172, null
  br i1 %173, label %250, label %174

174:                                              ; preds = %170
  %175 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject14EnclosingLayerEv(%"class.blink::LayoutObject"* nonnull %1) #15
  %176 = ptrtoint %"class.blink::PaintLayer"* %175 to i64
  %177 = load %"class.WTF::HashMap.2913"*, %"class.WTF::HashMap.2913"** %171, align 8
  %178 = getelementptr inbounds %"class.WTF::HashMap.2913", %"class.WTF::HashMap.2913"* %177, i64 0, i32 0, i32 0
  %179 = load %"struct.WTF::KeyValuePair.3122"*, %"struct.WTF::KeyValuePair.3122"** %178, align 8
  %180 = icmp eq %"struct.WTF::KeyValuePair.3122"* %179, null
  br i1 %180, label %250, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.WTF::HashMap.2913", %"class.WTF::HashMap.2913"* %177, i64 0, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = add i32 %183, -1
  %185 = zext i32 %184 to i64
  %186 = shl i64 %176, 32
  %187 = xor i64 %186, -1
  %188 = add i64 %187, %176
  %189 = lshr i64 %188, 22
  %190 = xor i64 %189, %188
  %191 = shl i64 %190, 13
  %192 = xor i64 %191, -1
  %193 = add i64 %190, %192
  %194 = lshr i64 %193, 8
  %195 = xor i64 %194, %193
  %196 = mul i64 %195, 9
  %197 = lshr i64 %196, 15
  %198 = xor i64 %197, %196
  %199 = shl i64 %198, 27
  %200 = xor i64 %199, -1
  %201 = add i64 %198, %200
  %202 = lshr i64 %201, 31
  %203 = xor i64 %202, %201
  %204 = trunc i64 %203 to i32
  %205 = and i32 %184, %204
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.3122", %"struct.WTF::KeyValuePair.3122"* %179, i64 %206
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.3122", %"struct.WTF::KeyValuePair.3122"* %207, i64 0, i32 0
  %209 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %208, align 8
  %210 = icmp eq %"class.blink::PaintLayer"* %209, %175
  br i1 %210, label %239, label %211

211:                                              ; preds = %181
  %212 = xor i32 %204, -1
  %213 = lshr i32 %204, 23
  %214 = add i32 %213, %212
  %215 = shl i32 %214, 12
  %216 = xor i32 %215, %214
  %217 = lshr i32 %216, 7
  %218 = xor i32 %217, %216
  %219 = shl i32 %218, 2
  %220 = xor i32 %219, %218
  %221 = lshr i32 %220, 20
  %222 = xor i32 %221, %220
  %223 = or i32 %222, 1
  %224 = zext i32 %223 to i64
  br label %225

225:                                              ; preds = %230, %211
  %226 = phi %"class.blink::PaintLayer"* [ %209, %211 ], [ %237, %230 ]
  %227 = phi i64 [ %206, %211 ], [ %234, %230 ]
  %228 = phi i64 [ 0, %211 ], [ %232, %230 ]
  %229 = icmp eq %"class.blink::PaintLayer"* %226, null
  br i1 %229, label %250, label %230

230:                                              ; preds = %225
  %231 = icmp eq i64 %228, 0
  %232 = select i1 %231, i64 %224, i64 %228
  %233 = add i64 %232, %227
  %234 = and i64 %233, %185
  %235 = getelementptr inbounds %"struct.WTF::KeyValuePair.3122", %"struct.WTF::KeyValuePair.3122"* %179, i64 %234
  %236 = getelementptr inbounds %"struct.WTF::KeyValuePair.3122", %"struct.WTF::KeyValuePair.3122"* %235, i64 0, i32 0
  %237 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %236, align 8
  %238 = icmp eq %"class.blink::PaintLayer"* %237, %175
  br i1 %238, label %239, label %225

239:                                              ; preds = %230, %181
  %240 = phi %"struct.WTF::KeyValuePair.3122"* [ %207, %181 ], [ %235, %230 ]
  %241 = icmp eq %"struct.WTF::KeyValuePair.3122"* %240, null
  br i1 %241, label %250, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"struct.WTF::KeyValuePair.3122", %"struct.WTF::KeyValuePair.3122"* %240, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds i8, i8* %43, i64 60
  %248 = bitcast i8* %247 to i32*
  store i32 %244, i32* %248, align 4
  %249 = getelementptr inbounds i8, i8* %43, i64 56
  store i8 1, i8* %249, align 4
  br label %250

250:                                              ; preds = %225, %170, %174, %239, %246, %242
  %251 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %252 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %251 to i96*
  %253 = load i96, i96* %252, align 4
  %254 = and i96 %253, 33554432
  %255 = icmp eq i96 %254, 0
  br i1 %255, label %420, label %256

256:                                              ; preds = %250
  %257 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutText"*
  %258 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 4, i32 0, i64 4
  %259 = bitcast i8* %258 to %"class.WTF::StringImpl"**
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %279, label %262

262:                                              ; preds = %256
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i33
  %271 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %270, i33 1) #15
  %272 = extractvalue { i33, i1 } %271, 1
  %273 = extractvalue { i33, i1 } %271, 0
  %274 = icmp slt i33 %273, 0
  %275 = or i1 %272, %274
  br i1 %275, label %276, label %277, !prof !3

276:                                              ; preds = %267
  tail call void @llvm.trap() #15
  unreachable

277:                                              ; preds = %267
  %278 = trunc i33 %273 to i32
  store i32 %278, i32* %268, align 4
  br label %279

279:                                              ; preds = %256, %262, %277
  %280 = getelementptr inbounds i8, i8* %43, i64 24
  %281 = bitcast i8* %280 to %"class.crdtp::detail::ValueMaybe.3134"*
  tail call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"* %281, %"class.WTF::StringImpl"* %260) #15
  %282 = bitcast %"class.WTF::Vector.3395"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %282) #15
  %283 = getelementptr inbounds %"class.WTF::Vector.3395", %"class.WTF::Vector.3395"* %6, i64 0, i32 0, i32 0, i32 0
  %284 = getelementptr inbounds %"class.WTF::Vector.3395", %"class.WTF::Vector.3395"* %6, i64 0, i32 0, i32 0, i32 2
  %285 = bitcast %"class.WTF::Vector.3395"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %285, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink10LayoutText14GetTextBoxInfoEv(%"class.WTF::Vector.3395"* nonnull sret %6, %"class.blink::LayoutText"* nonnull %257) #15
  %286 = load i32, i32* %284, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %410, label %288

288:                                              ; preds = %279
  %289 = call i8* @_Znwm(i64 24) #16
  %290 = bitcast i8* %289 to %"class.std::__1::vector.3196"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 0, i64 24, i1 false) #15
  %291 = ptrtoint i8* %289 to i64
  %292 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %283, align 8
  %293 = zext i32 %286 to i64
  %294 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %292, i64 %293
  %295 = bitcast %"class.std::__1::unique_ptr.3198"* %7 to i8*
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %7, i64 0, i32 0, i32 0, i32 0
  %297 = bitcast %"class.std::__1::unique_ptr.3198"* %7 to i8**
  %298 = getelementptr inbounds i8, i8* %289, i64 8
  %299 = bitcast i8* %298 to %"class.std::__1::unique_ptr.3198"**
  %300 = getelementptr inbounds i8, i8* %289, i64 16
  %301 = bitcast i8* %300 to %"class.std::__1::unique_ptr.3198"**
  %302 = bitcast i8* %298 to i64*
  br label %339

303:                                              ; preds = %407
  %304 = load %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %42, align 8
  %305 = getelementptr inbounds %"class.blink::protocol::DOMSnapshot::LayoutTreeNode", %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %304, i64 0, i32 5
  %306 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3192", %"class.crdtp::detail::PtrMaybe.3192"* %305, i64 0, i32 0, i32 0, i32 0, i32 0
  %307 = load %"class.std::__1::vector.3196"*, %"class.std::__1::vector.3196"** %306, align 8
  %308 = bitcast %"class.crdtp::detail::PtrMaybe.3192"* %305 to i64*
  store i64 %291, i64* %308, align 8
  %309 = icmp eq %"class.std::__1::vector.3196"* %307, null
  br i1 %309, label %410, label %310

310:                                              ; preds = %303
  %311 = getelementptr inbounds %"class.std::__1::vector.3196", %"class.std::__1::vector.3196"* %307, i64 0, i32 0, i32 0
  %312 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %311, align 8
  %313 = icmp eq %"class.std::__1::unique_ptr.3198"* %312, null
  br i1 %313, label %337, label %314

314:                                              ; preds = %310
  %315 = bitcast %"class.std::__1::unique_ptr.3198"* %312 to i8*
  %316 = getelementptr inbounds %"class.std::__1::vector.3196", %"class.std::__1::vector.3196"* %307, i64 0, i32 0, i32 1
  %317 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %316, align 8
  %318 = icmp eq %"class.std::__1::unique_ptr.3198"* %317, %312
  br i1 %318, label %335, label %319

319:                                              ; preds = %314, %330
  %320 = phi %"class.std::__1::unique_ptr.3198"* [ %321, %330 ], [ %317, %314 ]
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %320, i64 -1
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %321, i64 0, i32 0, i32 0, i32 0
  %323 = load %"class.blink::protocol::DOMSnapshot::InlineTextBox"*, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %322, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %322, align 8
  %324 = icmp eq %"class.blink::protocol::DOMSnapshot::InlineTextBox"* %323, null
  br i1 %324, label %330, label %325

325:                                              ; preds = %319
  %326 = bitcast %"class.blink::protocol::DOMSnapshot::InlineTextBox"* %323 to void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)***
  %327 = load void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)**, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)** %327, i64 2
  %329 = load void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)** %328, align 8
  call void %329(%"class.blink::protocol::DOMSnapshot::InlineTextBox"* nonnull %323) #15
  br label %330

330:                                              ; preds = %325, %319
  %331 = icmp eq %"class.std::__1::unique_ptr.3198"* %321, %312
  br i1 %331, label %332, label %319

332:                                              ; preds = %330
  %333 = bitcast %"class.std::__1::vector.3196"* %307 to i8**
  %334 = load i8*, i8** %333, align 8
  br label %335

335:                                              ; preds = %332, %314
  %336 = phi i8* [ %334, %332 ], [ %315, %314 ]
  store %"class.std::__1::unique_ptr.3198"* %312, %"class.std::__1::unique_ptr.3198"** %316, align 8
  call void @_ZdlPv(i8* %336) #16
  br label %337

337:                                              ; preds = %335, %310
  %338 = bitcast %"class.std::__1::vector.3196"* %307 to i8*
  call void @_ZdlPv(i8* %338) #16
  br label %410

339:                                              ; preds = %288, %407
  %340 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %292, %288 ], [ %408, %407 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #15
  %341 = call i8* @_Znwm(i64 24) #16
  %342 = bitcast i8* %341 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMSnapshot13InlineTextBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %342, align 8
  %343 = getelementptr inbounds i8, i8* %341, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %343, i8 0, i64 16, i1 false) #15
  %344 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %340, i64 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = getelementptr inbounds i8, i8* %341, i64 16
  %347 = bitcast i8* %346 to i32*
  store i32 %345, i32* %347, align 8
  %348 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %340, i64 0, i32 2
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds i8, i8* %341, i64 20
  %351 = bitcast i8* %350 to i32*
  store i32 %349, i32* %351, align 4
  %352 = call { i64, i64 } @_ZN5blink25InspectorDOMSnapshotAgent26TextFragmentRectInDocumentEPKNS_12LayoutObjectERKNS_10LayoutText11TextBoxInfoE(%"class.blink::LayoutObject"* nonnull %1, %"struct.blink::LayoutText::TextBoxInfo"* dereferenceable(24) %340) #15
  %353 = extractvalue { i64, i64 } %352, 0
  %354 = trunc i64 %353 to i32
  %355 = lshr i64 %353, 32
  %356 = trunc i64 %355 to i32
  %357 = extractvalue { i64, i64 } %352, 1
  %358 = call i8* @_Znwm(i64 40) #16
  %359 = bitcast i8* %358 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM4RectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8
  %360 = getelementptr inbounds i8, i8* %358, i64 8
  %361 = sitofp i32 %354 to double
  %362 = fmul double %361, 1.562500e-02
  %363 = bitcast i8* %360 to double*
  store double %362, double* %363, align 8
  %364 = sitofp i32 %356 to double
  %365 = fmul double %364, 1.562500e-02
  %366 = getelementptr inbounds i8, i8* %358, i64 16
  %367 = bitcast i8* %366 to double*
  store double %365, double* %367, align 8
  %368 = trunc i64 %357 to i32
  %369 = sitofp i32 %368 to double
  %370 = fmul double %369, 1.562500e-02
  %371 = getelementptr inbounds i8, i8* %358, i64 24
  %372 = bitcast i8* %371 to double*
  store double %370, double* %372, align 8
  %373 = lshr i64 %357, 32
  %374 = trunc i64 %373 to i32
  %375 = sitofp i32 %374 to double
  %376 = fmul double %375, 1.562500e-02
  %377 = getelementptr inbounds i8, i8* %358, i64 32
  %378 = bitcast i8* %377 to double*
  store double %376, double* %378, align 8
  %379 = ptrtoint i8* %358 to i64
  %380 = bitcast i8* %343 to %"class.blink::protocol::DOM::Rect"**
  %381 = load %"class.blink::protocol::DOM::Rect"*, %"class.blink::protocol::DOM::Rect"** %380, align 8
  %382 = bitcast i8* %343 to i64*
  store i64 %379, i64* %382, align 8
  %383 = icmp eq %"class.blink::protocol::DOM::Rect"* %381, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %339
  %385 = bitcast %"class.blink::protocol::DOM::Rect"* %381 to void (%"class.blink::protocol::DOM::Rect"*)***
  %386 = load void (%"class.blink::protocol::DOM::Rect"*)**, void (%"class.blink::protocol::DOM::Rect"*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %386, i64 2
  %388 = load void (%"class.blink::protocol::DOM::Rect"*)*, void (%"class.blink::protocol::DOM::Rect"*)** %387, align 8
  call void %388(%"class.blink::protocol::DOM::Rect"* nonnull %381) #15
  br label %389

389:                                              ; preds = %339, %384
  store i8* %341, i8** %297, align 8
  %390 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %299, align 8
  %391 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %301, align 8
  %392 = icmp ult %"class.std::__1::unique_ptr.3198"* %390, %391
  br i1 %392, label %393, label %398

393:                                              ; preds = %389
  %394 = ptrtoint i8* %341 to i64
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %296, align 8
  %395 = bitcast %"class.std::__1::unique_ptr.3198"* %390 to i64*
  store i64 %394, i64* %395, align 8
  %396 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %390, i64 1
  %397 = ptrtoint %"class.std::__1::unique_ptr.3198"* %396 to i64
  store i64 %397, i64* %302, align 8
  br label %399

398:                                              ; preds = %389
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot13InlineTextBoxENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3196"* nonnull %290, %"class.std::__1::unique_ptr.3198"* nonnull dereferenceable(8) %7) #15
  br label %399

399:                                              ; preds = %393, %398
  %400 = load %"class.blink::protocol::DOMSnapshot::InlineTextBox"*, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %296, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %296, align 8
  %401 = icmp eq %"class.blink::protocol::DOMSnapshot::InlineTextBox"* %400, null
  br i1 %401, label %407, label %402

402:                                              ; preds = %399
  %403 = bitcast %"class.blink::protocol::DOMSnapshot::InlineTextBox"* %400 to void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)***
  %404 = load void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)**, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*** %403, align 8
  %405 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)** %404, i64 2
  %406 = load void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)** %405, align 8
  call void %406(%"class.blink::protocol::DOMSnapshot::InlineTextBox"* nonnull %400) #15
  br label %407

407:                                              ; preds = %402, %399
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #15
  %408 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %340, i64 1
  %409 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %408, %294
  br i1 %409, label %303, label %339

410:                                              ; preds = %303, %337, %279
  %411 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %283, align 8
  %412 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %411, null
  %413 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %411 to i8*
  br i1 %412, label %419, label %414, !prof !2

414:                                              ; preds = %410
  %415 = load i32, i32* %284, align 4
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %418, label %417, !prof !3

417:                                              ; preds = %414
  store i32 0, i32* %284, align 4
  br label %418

418:                                              ; preds = %417, %414
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %413) #15
  store %"struct.blink::LayoutText::TextBoxInfo"* null, %"struct.blink::LayoutText::TextBoxInfo"** %283, align 8
  br label %419

419:                                              ; preds = %410, %418
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %282) #15
  br label %420

420:                                              ; preds = %250, %419
  %421 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %422 = load %"class.std::__1::vector.2755"*, %"class.std::__1::vector.2755"** %421, align 8
  %423 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %422, i64 0, i32 0, i32 1
  %424 = bitcast %"class.std::__1::unique_ptr.3177"** %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = bitcast %"class.std::__1::vector.2755"* %422 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = sub i64 %425, %427
  %429 = lshr exact i64 %428, 3
  %430 = trunc i64 %429 to i32
  %431 = inttoptr i64 %425 to %"class.std::__1::unique_ptr.3177"*
  %432 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %422, i64 0, i32 0, i32 2, i32 0, i32 0
  %433 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %432, align 8
  %434 = icmp ugt %"class.std::__1::unique_ptr.3177"* %433, %431
  br i1 %434, label %435, label %441

435:                                              ; preds = %420
  %436 = bitcast %"class.std::__1::unique_ptr.3177"* %5 to i64*
  %437 = load i64, i64* %436, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %42, align 8
  %438 = inttoptr i64 %425 to i64*
  store i64 %437, i64* %438, align 8
  %439 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %431, i64 1
  %440 = ptrtoint %"class.std::__1::unique_ptr.3177"* %439 to i64
  store i64 %440, i64* %424, align 8
  br label %442

441:                                              ; preds = %420
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot14LayoutTreeNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2755"* %422, %"class.std::__1::unique_ptr.3177"* nonnull dereferenceable(8) %5) #15
  br label %442

442:                                              ; preds = %435, %441
  %443 = load %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %42, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %42, align 8
  %444 = icmp eq %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %443, null
  br i1 %444, label %450, label %445

445:                                              ; preds = %442
  %446 = bitcast %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %443 to void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)***
  %447 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)**, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*** %446, align 8
  %448 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %447, i64 2
  %449 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %448, align 8
  call void %449(%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* nonnull %443) #15
  br label %450

450:                                              ; preds = %442, %445
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  br label %451

451:                                              ; preds = %4, %450
  %452 = phi i32 [ %430, %450 ], [ -1, %4 ]
  ret i32 %452
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink25InspectorDOMDebuggerAgent21CollectEventListenersEPN2v87IsolateEPNS_11EventTargetENS1_5LocalINS1_5ValueEEEPNS_4NodeEbPN3WTF6VectorINS_19V8EventListenerInfoELj0ENSB_18PartitionAllocatorEEE(%"class.v8::Isolate"*, %"class.blink::EventTarget"*, %"class.v8::Value"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::Vector.3274"*) local_unnamed_addr #2

declare %"class.std::__1::vector.3149"* @_ZN5blink25InspectorDOMDebuggerAgent29BuildObjectsForEventListenersERKN3WTF6VectorINS_19V8EventListenerInfoELj0ENS1_18PartitionAllocatorEEEN2v85LocalINS8_7ContextEEERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::Vector.3274"* dereferenceable(16), %"class.v8::Context"*, %"class.v8_inspector::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.3140"* @_ZN5blink22LegacyDOMSnapshotAgent30BuildArrayForElementAttributesEPNS_7ElementE(%"class.blink::LegacyDOMSnapshotAgent"* nocapture readnone, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.3162", align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %169, label %7

7:                                                ; preds = %2
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %1) #15
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = load i32, i32* null, align 536870912
  br label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %20 = bitcast %"class.blink::Member.354"* %19 to %"class.blink::Attribute"**
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  br label %30

24:                                               ; preds = %12, %10
  %25 = phi i32 [ %11, %10 ], [ %14, %12 ]
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %27 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::Attribute"*
  %28 = lshr i32 %25, 1
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %17, %24
  %31 = phi i32 [ %29, %24 ], [ %23, %17 ]
  %32 = phi %"class.blink::Attribute"* [ %27, %24 ], [ %21, %17 ]
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %169, label %34

34:                                               ; preds = %30
  %35 = tail call i8* @_Znwm(i64 24) #16
  %36 = bitcast i8* %35 to %"class.std::__1::vector.3140"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #15
  %37 = zext i32 %31 to i64
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %37
  %39 = bitcast %"class.std::__1::unique_ptr.3162"* %3 to i8*
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3162"* %3 to i8**
  %42 = getelementptr inbounds i8, i8* %35, i64 8
  %43 = bitcast i8* %42 to %"class.std::__1::unique_ptr.3162"**
  %44 = getelementptr inbounds i8, i8* %35, i64 16
  %45 = bitcast i8* %44 to %"class.std::__1::unique_ptr.3162"**
  %46 = bitcast i8* %42 to i64*
  br label %47

47:                                               ; preds = %34, %164
  %48 = phi %"class.blink::Attribute"* [ %32, %34 ], [ %165, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %49 = call i8* @_Znwm(i64 24) #16
  %50 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMSnapshot9NameValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #15
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 0
  %53 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %52) #15
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #15
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  call void @llvm.trap() #15
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %70, %55, %47
  %73 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %74 = bitcast i8* %51 to i64*
  %75 = bitcast i8* %51 to %"class.WTF::StringImpl"**
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #15
  br label %91

91:                                               ; preds = %72, %87, %90
  %92 = getelementptr inbounds i8, i8* %49, i64 16
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #15
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %101
  call void @llvm.trap() #15
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %91
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast i8* %92 to i64*
  %116 = bitcast i8* %92 to %"class.WTF::StringImpl"**
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #15
  br label %132

132:                                              ; preds = %113, %128, %131
  store i8* %49, i8** %41, align 8
  %133 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %43, align 8
  %134 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %45, align 8
  %135 = icmp ult %"class.std::__1::unique_ptr.3162"* %133, %134
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = ptrtoint i8* %49 to i64
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %40, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.3162"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %133, i64 1
  %140 = ptrtoint %"class.std::__1::unique_ptr.3162"* %139 to i64
  store i64 %140, i64* %46, align 8
  br label %142

141:                                              ; preds = %132
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot9NameValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3140"* nonnull %36, %"class.std::__1::unique_ptr.3162"* nonnull dereferenceable(8) %3) #15
  br label %142

142:                                              ; preds = %136, %141
  %143 = load %"class.blink::protocol::DOMSnapshot::NameValue"*, %"class.blink::protocol::DOMSnapshot::NameValue"** %40, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %40, align 8
  %144 = icmp eq %"class.blink::protocol::DOMSnapshot::NameValue"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.blink::protocol::DOMSnapshot::NameValue"* %143 to void (%"class.blink::protocol::DOMSnapshot::NameValue"*)***
  %147 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)**, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %148, align 8
  call void %149(%"class.blink::protocol::DOMSnapshot::NameValue"* nonnull %143) #15
  br label %150

150:                                              ; preds = %142, %145
  br i1 %54, label %164, label %151

151:                                              ; preds = %150
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #15
  br label %164

164:                                              ; preds = %163, %160, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  %165 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 1
  %166 = icmp eq %"class.blink::Attribute"* %165, %38
  br i1 %166, label %167, label %47

167:                                              ; preds = %164
  %168 = bitcast i8* %35 to %"class.std::__1::vector.3140"*
  br label %169

169:                                              ; preds = %167, %2, %30
  %170 = phi %"class.std::__1::vector.3140"* [ null, %30 ], [ null, %2 ], [ %168, %167 ]
  ret %"class.std::__1::vector.3140"* %170
}

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement5valueEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent25ProtocolPseudoElementTypeENS_8PseudoIdE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2815"* @_ZN5blink22LegacyDOMSnapshotAgent19VisitPseudoElementsEPNS_7ElementEibb(%"class.blink::LegacyDOMSnapshotAgent"* nocapture readonly, %"class.blink::Element"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1 align 2 {
  %6 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext 2) #15
  %7 = icmp eq %"class.blink::PseudoElement"* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext 3) #15
  %10 = icmp eq %"class.blink::PseudoElement"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext 4) #15
  %13 = icmp eq %"class.blink::PseudoElement"* %12, null
  br i1 %13, label %86, label %14

14:                                               ; preds = %11, %8, %5
  %15 = tail call i8* @_Znwm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #15
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32**
  %18 = getelementptr inbounds i8, i8* %15, i64 16
  %19 = bitcast i8* %18 to i32**
  %20 = bitcast i8* %16 to i64*
  %21 = bitcast i8* %15 to i64*
  %22 = bitcast i8* %18 to i64*
  br label %23

23:                                               ; preds = %14, %81
  %24 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.ref.tmp, i64 0, i64 0), %14 ], [ %82, %81 ]
  %25 = load i8, i8* %24, align 1
  %26 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* %1, i8 zeroext %25) #15
  %27 = icmp eq %"class.blink::PseudoElement"* %26, null
  br i1 %27, label %81, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %26, i64 0, i32 0, i32 0, i32 0
  %30 = tail call i32 @_ZN5blink22LegacyDOMSnapshotAgent9VisitNodeEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::Node"* %29, i1 zeroext %3, i1 zeroext %4)
  %31 = load i32*, i32** %17, align 8
  %32 = load i32*, i32** %19, align 8
  %33 = icmp ult i32* %31, %32
  %34 = ptrtoint i32* %32 to i64
  br i1 %33, label %35, label %38

35:                                               ; preds = %28
  store i32 %30, i32* %31, align 4
  %36 = getelementptr inbounds i32, i32* %31, i64 1
  %37 = ptrtoint i32* %36 to i64
  store i64 %37, i64* %20, align 8
  br label %81

38:                                               ; preds = %28
  %39 = ptrtoint i32* %31 to i64
  %40 = load i64, i64* %21, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 2
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 4611686018427387903
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = bitcast i8* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %46) #18
  unreachable

47:                                               ; preds = %38
  %48 = sub i64 %34, %40
  %49 = ashr exact i64 %48, 2
  %50 = icmp ult i64 %49, 2305843009213693951
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = ashr exact i64 %48, 1
  %53 = icmp ult i64 %52, %43
  %54 = select i1 %53, i64 %43, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #18
  unreachable

59:                                               ; preds = %56, %47
  %60 = phi i64 [ %54, %56 ], [ 4611686018427387903, %47 ]
  %61 = shl i64 %60, 2
  %62 = tail call i8* @_Znwm(i64 %61) #16
  %63 = bitcast i8* %62 to i32*
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ %60, %59 ], [ 0, %51 ]
  %66 = phi i8* [ %62, %59 ], [ null, %51 ]
  %67 = phi i32* [ %63, %59 ], [ null, %51 ]
  %68 = getelementptr inbounds i32, i32* %67, i64 %42
  %69 = getelementptr inbounds i32, i32* %67, i64 %65
  %70 = ptrtoint i32* %69 to i64
  store i32 %30, i32* %68, align 4
  %71 = getelementptr inbounds i32, i32* %68, i64 1
  %72 = ptrtoint i32* %71 to i64
  %73 = ptrtoint i32* %67 to i64
  %74 = icmp sgt i64 %41, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %64
  %76 = inttoptr i64 %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %76, i64 %41, i1 false) #15
  br label %77

77:                                               ; preds = %75, %64
  store i64 %73, i64* %21, align 8
  store i64 %72, i64* %20, align 8
  store i64 %70, i64* %22, align 8
  %78 = icmp eq i64 %40, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %40 to i8*
  tail call void @_ZdlPv(i8* %80) #16
  br label %81

81:                                               ; preds = %79, %77, %35, %23
  %82 = getelementptr inbounds i8, i8* %24, i64 1
  %83 = icmp eq i8* %82, getelementptr inbounds ([3 x i8], [3 x i8]* @.ref.tmp, i64 1, i64 0)
  br i1 %83, label %84, label %23

84:                                               ; preds = %81
  %85 = bitcast i8* %15 to %"class.std::__1::vector.2815"*
  br label %86

86:                                               ; preds = %84, %11
  %87 = phi %"class.std::__1::vector.2815"* [ null, %11 ], [ %85, %84 ]
  ret %"class.std::__1::vector.2815"* %87
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16HTMLImageElement10currentSrcEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent21DocumentBaseURLStringEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8Document12EncodingNameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17GetShadowRootTypeEPNS_10ShadowRootE(%"class.blink::ShadowRoot"*) local_unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2815"* @_ZN5blink22LegacyDOMSnapshotAgent22VisitContainerChildrenEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* nocapture readonly, %"class.blink::Node"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = tail call i8* @_Znwm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = ptrtoint i8* %5 to i64
  %7 = tail call zeroext i1 @_ZN5blink19dom_traversal_utils11HasChildrenERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64) %1, i1 zeroext %3) #15
  br i1 %7, label %8, label %75

8:                                                ; preds = %4
  %9 = tail call %"class.blink::Node"* @_ZN5blink19dom_traversal_utils10FirstChildERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64) %1, i1 zeroext %3) #15
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %85, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32**
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  %15 = bitcast i8* %14 to i32**
  %16 = bitcast i8* %12 to i64*
  %17 = bitcast i8* %5 to i64*
  %18 = bitcast i8* %14 to i64*
  br label %19

19:                                               ; preds = %11, %72
  %20 = phi %"class.blink::Node"* [ %9, %11 ], [ %73, %72 ]
  %21 = tail call i32 @_ZN5blink22LegacyDOMSnapshotAgent9VisitNodeEPNS_4NodeEbb(%"class.blink::LegacyDOMSnapshotAgent"* %0, %"class.blink::Node"* nonnull %20, i1 zeroext %2, i1 zeroext %3)
  %22 = load i32*, i32** %13, align 8
  %23 = load i32*, i32** %15, align 8
  %24 = icmp ult i32* %22, %23
  %25 = ptrtoint i32* %23 to i64
  br i1 %24, label %26, label %29

26:                                               ; preds = %19
  store i32 %21, i32* %22, align 4
  %27 = getelementptr inbounds i32, i32* %22, i64 1
  %28 = ptrtoint i32* %27 to i64
  store i64 %28, i64* %16, align 8
  br label %72

29:                                               ; preds = %19
  %30 = ptrtoint i32* %22 to i64
  %31 = load i64, i64* %17, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 2
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast i8* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #18
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %25, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

50:                                               ; preds = %47, %38
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8* [ %53, %50 ], [ null, %42 ]
  %58 = phi i32* [ %54, %50 ], [ null, %42 ]
  %59 = getelementptr inbounds i32, i32* %58, i64 %33
  %60 = getelementptr inbounds i32, i32* %58, i64 %56
  %61 = ptrtoint i32* %60 to i64
  store i32 %21, i32* %59, align 4
  %62 = getelementptr inbounds i32, i32* %59, i64 1
  %63 = ptrtoint i32* %62 to i64
  %64 = ptrtoint i32* %58 to i64
  %65 = icmp sgt i64 %32, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %55
  %67 = inttoptr i64 %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %67, i64 %32, i1 false) #15
  br label %68

68:                                               ; preds = %66, %55
  store i64 %64, i64* %17, align 8
  store i64 %63, i64* %16, align 8
  store i64 %61, i64* %18, align 8
  %69 = icmp eq i64 %31, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %31 to i8*
  tail call void @_ZdlPv(i8* %71) #16
  br label %72

72:                                               ; preds = %26, %68, %70
  %73 = tail call %"class.blink::Node"* @_ZN5blink19dom_traversal_utils11NextSiblingERKNS_4NodeEb(%"class.blink::Node"* nonnull dereferenceable(64) %20, i1 zeroext %3) #15
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %85, label %19

75:                                               ; preds = %4
  %76 = bitcast i8* %5 to i32**
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = ptrtoint i32* %77 to i64
  %81 = getelementptr inbounds i8, i8* %5, i64 8
  %82 = bitcast i8* %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast i32* %77 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %79, %75
  tail call void @_ZdlPv(i8* nonnull %5) #16
  br label %85

85:                                               ; preds = %72, %8, %84
  %86 = phi i64 [ 0, %84 ], [ %6, %8 ], [ %6, %72 ]
  %87 = inttoptr i64 %86 to %"class.std::__1::vector.2815"*
  ret %"class.std::__1::vector.2815"* %87
}

declare zeroext i1 @_ZN5blink19dom_traversal_utils11HasChildrenERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink19dom_traversal_utils10FirstChildERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink19dom_traversal_utils11NextSiblingERKNS_4NodeEb(%"class.blink::Node"* dereferenceable(64), i1 zeroext) local_unnamed_addr #2

declare %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink25InspectorDOMSnapshotAgent14RectInDocumentEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22LegacyDOMSnapshotAgent20GetStyleIndexForNodeEPNS_4NodeE(%"class.blink::LegacyDOMSnapshotAgent"* nocapture readonly, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.630", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::unique_ptr.3162", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::unique_ptr.3224", align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #15
  %10 = bitcast i8* %9 to %"class.blink::CSSComputedStyleDeclaration"*
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %10, %"class.blink::Node"* %1, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %29 = getelementptr inbounds i8, i8* %9, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = bitcast %"class.WTF::Vector.630"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %4, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #15
  %37 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::Vector.3252"*, %"class.WTF::Vector.3252"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %38, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %40, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %314, label %46

46:                                               ; preds = %28
  %47 = bitcast %"class.WTF::String"* %5 to i8*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %52

49:                                               ; preds = %110
  %50 = and i8 %65, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %113, label %314

52:                                               ; preds = %46, %110
  %53 = phi i8 [ 1, %46 ], [ %65, %110 ]
  %54 = phi %"struct.std::__1::pair.3255"* [ %40, %46 ], [ %111, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %48, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %54, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = call %"class.WTF::StringImpl"* @_ZNK5blink27CSSComputedStyleDeclaration16GetPropertyValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %10, i32 %56) #15
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %48, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %52, %59
  br label %64

64:                                               ; preds = %59, %63
  %65 = phi i8 [ %53, %63 ], [ 0, %59 ]
  %66 = load i32, i32* %36, align 4
  %67 = load i32, i32* %35, align 8
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %93, label %69, !prof !3

69:                                               ; preds = %64
  %70 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 %71, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %72, align 8
  br i1 %58, label %90, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #15
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %78
  call void @llvm.trap() #15
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %88, %73, %69
  %91 = load i32, i32* %36, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %36, align 4
  br label %94

93:                                               ; preds = %64
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.630"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  br label %94

94:                                               ; preds = %90, %93
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  %111 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %54, i64 1
  %112 = icmp eq %"struct.std::__1::pair.3255"* %111, %44
  br i1 %112, label %49, label %52

113:                                              ; preds = %49
  %114 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::HashMap.3241"*, %"class.WTF::HashMap.3241"** %114, align 8
  %116 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %115, i64 0, i32 0
  %117 = call %"struct.WTF::KeyValuePair.3245"* @_ZNK3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6LookupINS_22IdentityHashTranslatorISA_SE_S3_EES4_EEPKS6_RKT0_(%"class.WTF::HashTable.3242"* %116, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %4) #15
  %118 = icmp eq %"struct.WTF::KeyValuePair.3245"* %117, null
  %119 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %115, i64 0, i32 0, i32 0
  %120 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %119, align 8
  %121 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %115, i64 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %120, i64 %123
  %125 = select i1 %118, %"struct.WTF::KeyValuePair.3245"* %124, %"struct.WTF::KeyValuePair.3245"* %117
  %126 = load %"class.WTF::HashMap.3241"*, %"class.WTF::HashMap.3241"** %114, align 8
  %127 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %126, i64 0, i32 0, i32 0
  %128 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %127, align 8
  %129 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %126, i64 0, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %128, i64 %131
  %133 = icmp eq %"struct.WTF::KeyValuePair.3245"* %125, %132
  br i1 %133, label %137, label %134

134:                                              ; preds = %113
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %125, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  br label %314

137:                                              ; preds = %113
  %138 = call i8* @_Znwm(i64 24) #16
  %139 = bitcast i8* %138 to %"class.std::__1::vector.3140"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 24, i1 false) #15
  %140 = ptrtoint i8* %138 to i64
  %141 = load i32, i32* %36, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %152, label %143

143:                                              ; preds = %137
  %144 = bitcast %"class.std::__1::unique_ptr.3162"* %6 to i8*
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %6, i64 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::unique_ptr.3162"* %6 to i8**
  %147 = getelementptr inbounds i8, i8* %138, i64 8
  %148 = bitcast i8* %147 to %"class.std::__1::unique_ptr.3162"**
  %149 = getelementptr inbounds i8, i8* %138, i64 16
  %150 = bitcast i8* %149 to %"class.std::__1::unique_ptr.3162"**
  %151 = bitcast i8* %147 to i64*
  br label %194

152:                                              ; preds = %310, %137
  %153 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #15
  %154 = getelementptr inbounds %"class.blink::LegacyDOMSnapshotAgent", %"class.blink::LegacyDOMSnapshotAgent"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %155 = load %"class.std::__1::vector.2762"*, %"class.std::__1::vector.2762"** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %155, i64 0, i32 0, i32 1
  %157 = bitcast %"class.std::__1::unique_ptr.3224"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::vector.2762"* %155 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %158, %160
  %162 = lshr exact i64 %161, 3
  %163 = trunc i64 %162 to i32
  store i32 %163, i32* %7, align 4
  %164 = bitcast %"class.std::__1::unique_ptr.3224"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #15
  %165 = call i8* @_Znwm(i64 16) #16
  %166 = bitcast i8* %165 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMSnapshot13ComputedStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %166, align 8
  %167 = getelementptr inbounds i8, i8* %165, i64 8
  %168 = bitcast i8* %167 to i64*
  store i64 %140, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %8, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.std::__1::unique_ptr.3224"* %8 to i8**
  store i8* %165, i8** %170, align 8
  %171 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %156, align 8
  %172 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %155, i64 0, i32 0, i32 2, i32 0, i32 0
  %173 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %172, align 8
  %174 = icmp ult %"class.std::__1::unique_ptr.3224"* %171, %173
  br i1 %174, label %175, label %180

175:                                              ; preds = %152
  %176 = ptrtoint i8* %165 to i64
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %169, align 8
  %177 = bitcast %"class.std::__1::unique_ptr.3224"* %171 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %171, i64 1
  %179 = ptrtoint %"class.std::__1::unique_ptr.3224"* %178 to i64
  store i64 %179, i64* %157, align 8
  br label %181

180:                                              ; preds = %152
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot13ComputedStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2762"* %155, %"class.std::__1::unique_ptr.3224"* nonnull dereferenceable(8) %8) #15
  br label %181

181:                                              ; preds = %175, %180
  %182 = load %"class.blink::protocol::DOMSnapshot::ComputedStyle"*, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %169, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %169, align 8
  %183 = icmp eq %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %181
  %185 = bitcast %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %182 to void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)***
  %186 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)**, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %186, i64 2
  %188 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %187, align 8
  call void %188(%"class.blink::protocol::DOMSnapshot::ComputedStyle"* nonnull %182) #15
  br label %189

189:                                              ; preds = %184, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #15
  %190 = load %"class.WTF::HashMap.3241"*, %"class.WTF::HashMap.3241"** %114, align 8
  %191 = getelementptr inbounds %"class.WTF::HashMap.3241", %"class.WTF::HashMap.3241"* %190, i64 0, i32 0
  %192 = call { %"struct.WTF::KeyValuePair.3245"*, i8 } @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6insertINS_17HashMapTranslatorISE_SA_S3_EES4_RjEENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.3242"* %191, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %4, i32* nonnull dereferenceable(4) %7) #15
  %193 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #15
  br label %314

194:                                              ; preds = %143, %310
  %195 = phi i32 [ 0, %143 ], [ %311, %310 ]
  %196 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %4, i32 %195) #15
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %196, i64 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %310, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %310, label %204

204:                                              ; preds = %200
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #15
  %205 = call i8* @_Znwm(i64 24) #16
  %206 = bitcast i8* %205 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMSnapshot9NameValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds i8, i8* %205, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 16, i1 false) #15
  %208 = load %"class.WTF::Vector.3252"*, %"class.WTF::Vector.3252"** %37, align 8
  %209 = call dereferenceable(16) %"struct.std::__1::pair.3255"* @_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3252"* %208, i32 %195) #15
  %210 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %209, i64 0, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %230, label %213

213:                                              ; preds = %204
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %230

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i33
  %222 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %221, i33 1) #15
  %223 = extractvalue { i33, i1 } %222, 1
  %224 = extractvalue { i33, i1 } %222, 0
  %225 = icmp slt i33 %224, 0
  %226 = or i1 %223, %225
  br i1 %226, label %227, label %228, !prof !3

227:                                              ; preds = %218
  call void @llvm.trap() #15
  unreachable

228:                                              ; preds = %218
  %229 = trunc i33 %224 to i32
  store i32 %229, i32* %219, align 4
  br label %230

230:                                              ; preds = %228, %213, %204
  %231 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %232 = bitcast i8* %207 to i64*
  %233 = bitcast i8* %207 to %"class.WTF::StringImpl"**
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  store i64 %231, i64* %232, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #15
  br label %249

249:                                              ; preds = %230, %245, %248
  %250 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %4, i32 %195) #15
  %251 = getelementptr inbounds i8, i8* %205, i64 16
  %252 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %250, i64 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #15
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !3

269:                                              ; preds = %260
  call void @llvm.trap() #15
  unreachable

270:                                              ; preds = %260
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %261, align 4
  br label %272

272:                                              ; preds = %270, %255, %249
  %273 = ptrtoint %"class.WTF::StringImpl"* %253 to i64
  %274 = bitcast i8* %251 to i64*
  %275 = bitcast i8* %251 to %"class.WTF::StringImpl"**
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  store i64 %273, i64* %274, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #15
  br label %291

291:                                              ; preds = %272, %287, %290
  store i8* %205, i8** %146, align 8
  %292 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %148, align 8
  %293 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %150, align 8
  %294 = icmp ult %"class.std::__1::unique_ptr.3162"* %292, %293
  br i1 %294, label %295, label %300

295:                                              ; preds = %291
  %296 = ptrtoint i8* %205 to i64
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %145, align 8
  %297 = bitcast %"class.std::__1::unique_ptr.3162"* %292 to i64*
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %292, i64 1
  %299 = ptrtoint %"class.std::__1::unique_ptr.3162"* %298 to i64
  store i64 %299, i64* %151, align 8
  br label %301

300:                                              ; preds = %291
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot9NameValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3140"* nonnull %139, %"class.std::__1::unique_ptr.3162"* nonnull dereferenceable(8) %6) #15
  br label %301

301:                                              ; preds = %295, %300
  %302 = load %"class.blink::protocol::DOMSnapshot::NameValue"*, %"class.blink::protocol::DOMSnapshot::NameValue"** %145, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %145, align 8
  %303 = icmp eq %"class.blink::protocol::DOMSnapshot::NameValue"* %302, null
  br i1 %303, label %309, label %304

304:                                              ; preds = %301
  %305 = bitcast %"class.blink::protocol::DOMSnapshot::NameValue"* %302 to void (%"class.blink::protocol::DOMSnapshot::NameValue"*)***
  %306 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)**, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %306, i64 2
  %308 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %307, align 8
  call void %308(%"class.blink::protocol::DOMSnapshot::NameValue"* nonnull %302) #15
  br label %309

309:                                              ; preds = %304, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #15
  br label %310

310:                                              ; preds = %194, %200, %309
  %311 = add nuw i32 %195, 1
  %312 = load i32, i32* %36, align 4
  %313 = icmp ult i32 %311, %312
  br i1 %313, label %194, label %152

314:                                              ; preds = %28, %134, %189, %49
  %315 = phi i32 [ -1, %49 ], [ %136, %134 ], [ %193, %189 ], [ -1, %28 ]
  %316 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %317 = icmp eq %"class.WTF::String"* %316, null
  br i1 %317, label %351, label %318, !prof !2

318:                                              ; preds = %314
  %319 = bitcast %"class.WTF::String"* %316 to i8*
  %320 = load i32, i32* %36, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %349, label %322, !prof !3

322:                                              ; preds = %318
  %323 = zext i32 %320 to i64
  %324 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %316, i64 %323
  br label %325

325:                                              ; preds = %343, %322
  %326 = phi %"class.WTF::String"* [ %344, %343 ], [ %316, %322 ]
  %327 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %326, i64 0, i32 0, i32 0
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #15
  br label %343

343:                                              ; preds = %342, %339, %325
  %344 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %326, i64 1
  %345 = icmp eq %"class.WTF::String"* %344, %324
  br i1 %345, label %346, label %325

346:                                              ; preds = %343
  store i32 0, i32* %36, align 4
  %347 = bitcast %"class.WTF::Vector.630"* %4 to i8**
  %348 = load i8*, i8** %347, align 8
  br label %349

349:                                              ; preds = %346, %318
  %350 = phi i8* [ %348, %346 ], [ %319, %318 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %350) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %34, align 8
  br label %351

351:                                              ; preds = %314, %349
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #15
  ret i32 %315
}

declare %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject14EnclosingLayerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZNK5blink10LayoutText14GetTextBoxInfoEv(%"class.WTF::Vector.3395"* sret, %"class.blink::LayoutText"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink25InspectorDOMSnapshotAgent26TextFragmentRectInDocumentEPKNS_12LayoutObjectERKNS_10LayoutText11TextBoxInfoE(%"class.blink::LayoutObject"*, %"struct.blink::LayoutText::TextBoxInfo"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink27CSSComputedStyleDeclaration16GetPropertyValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.3134"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #15
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #15
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3134", %"class.crdtp::detail::ValueMaybe.3134"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #9

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.3245"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.3245"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %0, i64 %9
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = ptrtoint %"class.WTF::String"* %12 to i64
  switch i64 %13, label %14 [
    i64 -1, label %48
    i64 0, label %48
  ], !prof !5

14:                                               ; preds = %8
  %15 = bitcast %"class.WTF::String"* %12 to i8*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %0, i64 %9, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %46, label %19, !prof !3

19:                                               ; preds = %14
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %20
  br label %22

22:                                               ; preds = %40, %19
  %23 = phi %"class.WTF::String"* [ %41, %40 ], [ %12, %19 ]
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #15
  br label %40

40:                                               ; preds = %39, %36, %22
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 1
  %42 = icmp eq %"class.WTF::String"* %41, %21
  br i1 %42, label %43, label %22

43:                                               ; preds = %40
  store i32 0, i32* %16, align 4
  %44 = bitcast %"struct.WTF::KeyValuePair.3245"* %10 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %14
  %47 = phi i8* [ %45, %43 ], [ %15, %14 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %11, align 8
  br label %48

48:                                               ; preds = %8, %8, %46
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot7DOMNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2748"*, %"class.std::__1::unique_ptr.3128"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3128"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2748"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2748"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3128"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3128"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3128"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3128"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3128"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3128"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3128"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2748", %"class.std::__1::vector.2748"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3128"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3128"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOMSnapshot::DOMNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3128"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3128"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3128"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3128"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !6

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3128"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3128"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3128"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3128"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3128"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3128"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3128"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3128"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3128"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3128"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3128"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3128"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3128"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3128"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3128"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3128"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3128"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3128"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3128"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3128"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3128"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3128"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3128"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3128"*, %"class.std::__1::unique_ptr.3128"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3128"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3128"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3128"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3128"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3128"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3128"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3128", %"class.std::__1::unique_ptr.3128"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOMSnapshot::DOMNode"*, %"class.blink::protocol::DOMSnapshot::DOMNode"** %142, align 8
  store %"class.blink::protocol::DOMSnapshot::DOMNode"* null, %"class.blink::protocol::DOMSnapshot::DOMNode"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOMSnapshot::DOMNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOMSnapshot::DOMNode"* %143 to void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)***
  %147 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)**, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)*, void (%"class.blink::protocol::DOMSnapshot::DOMNode"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOMSnapshot::DOMNode"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3128"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot9NameValueENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3140"*, %"class.std::__1::unique_ptr.3162"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3140", %"class.std::__1::vector.3140"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3162"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3140"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3140"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3140", %"class.std::__1::vector.3140"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3162"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3162"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3162"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3162"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3162"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3162"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3162"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3140", %"class.std::__1::vector.3140"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3162"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3162"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOMSnapshot::NameValue"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3162"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3162"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3162"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3162"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !8

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3162"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3162"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3162"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3162"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3162"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3162"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3162"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3162"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3162"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3162"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3162"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3162"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3162"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3162"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3162"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3162"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3162"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3162"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3162"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3162"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3162"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3162"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3162"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3162"*, %"class.std::__1::unique_ptr.3162"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3162"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3162"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3162"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3162"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3162"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3162"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3162", %"class.std::__1::unique_ptr.3162"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOMSnapshot::NameValue"*, %"class.blink::protocol::DOMSnapshot::NameValue"** %142, align 8
  store %"class.blink::protocol::DOMSnapshot::NameValue"* null, %"class.blink::protocol::DOMSnapshot::NameValue"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOMSnapshot::NameValue"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOMSnapshot::NameValue"* %143 to void (%"class.blink::protocol::DOMSnapshot::NameValue"*)***
  %147 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)**, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMSnapshot::NameValue"*)*, void (%"class.blink::protocol::DOMSnapshot::NameValue"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOMSnapshot::NameValue"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3162"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot13InlineTextBoxENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3196"*, %"class.std::__1::unique_ptr.3198"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3196", %"class.std::__1::vector.3196"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3198"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3196"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3196"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3196", %"class.std::__1::vector.3196"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3198"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3198"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3198"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3198"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3198"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3198"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3198"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3196", %"class.std::__1::vector.3196"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3198"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3198"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3198"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3198"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3198"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3198"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3198"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3198"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3198"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3198"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3198"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3198"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3198"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3198"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3198"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3198"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3198"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3198"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3198"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3198"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3198"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3198"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3198"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3198"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3198"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3198"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3198"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3198"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3198"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3198"*, %"class.std::__1::unique_ptr.3198"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3198"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3198"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3198"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3198"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3198"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3198"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3198", %"class.std::__1::unique_ptr.3198"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOMSnapshot::InlineTextBox"*, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %142, align 8
  store %"class.blink::protocol::DOMSnapshot::InlineTextBox"* null, %"class.blink::protocol::DOMSnapshot::InlineTextBox"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOMSnapshot::InlineTextBox"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOMSnapshot::InlineTextBox"* %143 to void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)***
  %147 = load void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)**, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)*, void (%"class.blink::protocol::DOMSnapshot::InlineTextBox"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOMSnapshot::InlineTextBox"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3198"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot14LayoutTreeNodeENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2755"*, %"class.std::__1::unique_ptr.3177"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3177"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2755"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2755"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3177"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3177"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3177"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3177"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3177"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3177"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3177"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2755", %"class.std::__1::vector.2755"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3177"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3177"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3177"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3177"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3177"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3177"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !10

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3177"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3177"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3177"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3177"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3177"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3177"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3177"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3177"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3177"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3177"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3177"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3177"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3177"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3177"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3177"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3177"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3177"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3177"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3177"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3177"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3177"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3177"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3177"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3177"*, %"class.std::__1::unique_ptr.3177"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3177"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3177"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3177"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3177"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3177"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3177"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3177", %"class.std::__1::unique_ptr.3177"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %142, align 8
  store %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* null, %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* %143 to void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)***
  %147 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)**, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)*, void (%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOMSnapshot::LayoutTreeNode"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3177"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #15
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %40, i8* %41) #15
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #15
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #15
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.630"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #15
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #15
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3245"* @_ZNK3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6LookupINS_22IdentityHashTranslatorISA_SE_S3_EES4_EEPKS6_RKT0_(%"class.WTF::HashTable.3242"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3245"* %4, null
  br i1 %5, label %112, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 %13, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %13
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = icmp eq i32 %12, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %6, %45
  %34 = phi i32 [ %53, %45 ], [ 0, %6 ]
  %35 = phi i64 [ %52, %45 ], [ %31, %6 ]
  %36 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %1, i32 %34) #15
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = lshr i32 %40, 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %33
  %44 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %38) #15
  br label %45

45:                                               ; preds = %43, %33
  %46 = phi i32 [ %44, %43 ], [ %41, %33 ]
  %47 = and i64 %35, 4294967295
  %48 = mul i64 %47, 5146158508761418231
  %49 = zext i32 %46 to i64
  %50 = mul i64 %49, -682818954288075998
  %51 = add i64 %50, %48
  %52 = lshr i64 %51, 32
  %53 = add nuw i32 %34, 1
  %54 = load i32, i32* %11, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %33, label %56

56:                                               ; preds = %45, %6
  %57 = phi i64 [ %31, %6 ], [ %52, %45 ]
  %58 = trunc i64 %57 to i32
  %59 = and i32 %9, %58
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %60, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %112, label %64

64:                                               ; preds = %56
  %65 = xor i32 %58, -1
  %66 = lshr i32 %58, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %64, %104
  %79 = phi i32 [ %62, %64 ], [ %110, %104 ]
  %80 = phi i64 [ %60, %64 ], [ %108, %104 ]
  %81 = phi i64 [ 0, %64 ], [ %106, %104 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %80
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::String"*, %"class.WTF::String"** %83, align 8
  %85 = icmp eq %"class.WTF::String"* %84, inttoptr (i64 -1 to %"class.WTF::String"*)
  br i1 %85, label %104, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %82, i64 0, i32 0
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %80, i32 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %11, align 4
  %90 = icmp eq i32 %79, %89
  br i1 %90, label %94, label %104

91:                                               ; preds = %94
  %92 = load i32, i32* %88, align 4
  %93 = icmp ult i32 %103, %92
  br i1 %93, label %94, label %112

94:                                               ; preds = %86, %91
  %95 = phi i32 [ %103, %91 ], [ 0, %86 ]
  %96 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %87, i32 %95) #15
  %97 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %1, i32 %95) #15
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"* %101) #15
  %103 = add nuw i32 %95, 1
  br i1 %102, label %91, label %104

104:                                              ; preds = %94, %86, %78
  %105 = icmp eq i64 %81, 0
  %106 = select i1 %105, i64 %77, i64 %81
  %107 = add i64 %106, %80
  %108 = and i64 %107, %10
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %108, i32 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %78

112:                                              ; preds = %104, %91, %56, %2
  %113 = phi %"struct.WTF::KeyValuePair.3245"* [ null, %2 ], [ null, %56 ], [ %82, %91 ], [ null, %104 ]
  ret %"struct.WTF::KeyValuePair.3245"* %113
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair.3255"* @_ZN3WTF6VectorINSt3__14pairINS_6StringEN5blink13CSSPropertyIDEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3252"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3252", %"class.WTF::Vector.3252"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.3255"*, %"struct.std::__1::pair.3255"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.3255", %"struct.std::__1::pair.3255"* %24, i64 %25
  ret %"struct.std::__1::pair.3255"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMSnapshot13ComputedStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2762"*, %"class.std::__1::unique_ptr.3224"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3224"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2762"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2762"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3224"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3224"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3224"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3224"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3224"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3224"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3224"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2762", %"class.std::__1::vector.2762"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3224"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3224"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3224"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3224"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3224"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3224"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3224"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3224"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3224"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3224"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3224"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3224"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3224"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3224"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3224"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3224"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3224"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3224"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3224"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3224"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3224"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3224"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3224"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3224"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3224"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3224"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3224"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3224"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3224"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3224"*, %"class.std::__1::unique_ptr.3224"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3224"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3224"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3224"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3224"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3224"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3224"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3224", %"class.std::__1::unique_ptr.3224"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOMSnapshot::ComputedStyle"*, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %142, align 8
  store %"class.blink::protocol::DOMSnapshot::ComputedStyle"* null, %"class.blink::protocol::DOMSnapshot::ComputedStyle"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOMSnapshot::ComputedStyle"* %143 to void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)***
  %147 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)**, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)*, void (%"class.blink::protocol::DOMSnapshot::ComputedStyle"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOMSnapshot::ComputedStyle"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3224"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3245"*, i8 } @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6insertINS_17HashMapTranslatorISE_SA_S3_EES4_RjEENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.3242"*, %"class.WTF::Vector.630"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3245"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6ExpandEPS6_(%"class.WTF::HashTable.3242"* %0, %"struct.WTF::KeyValuePair.3245"* null)
  %9 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3245"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %20, %18
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = icmp eq i32 %17, 0
  br i1 %37, label %61, label %38

38:                                               ; preds = %10, %50
  %39 = phi i32 [ %58, %50 ], [ 0, %10 ]
  %40 = phi i64 [ %57, %50 ], [ %36, %10 ]
  %41 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %1, i32 %39) #15
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = lshr i32 %45, 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %38
  %49 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %43) #15
  br label %50

50:                                               ; preds = %48, %38
  %51 = phi i32 [ %49, %48 ], [ %46, %38 ]
  %52 = and i64 %40, 4294967295
  %53 = mul i64 %52, 5146158508761418231
  %54 = zext i32 %51 to i64
  %55 = mul i64 %54, -682818954288075998
  %56 = add i64 %55, %53
  %57 = lshr i64 %56, 32
  %58 = add nuw i32 %39, 1
  %59 = load i32, i32* %16, align 4
  %60 = icmp ult i32 %58, %59
  br i1 %60, label %38, label %61

61:                                               ; preds = %50, %10
  %62 = phi i64 [ %36, %10 ], [ %57, %50 ]
  %63 = trunc i64 %62 to i32
  %64 = and i32 %14, %63
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %11, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %11, i64 %65, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %123, label %70

70:                                               ; preds = %61
  %71 = xor i32 %63, -1
  %72 = lshr i32 %63, 23
  %73 = add i32 %72, %71
  %74 = shl i32 %73, 12
  %75 = xor i32 %74, %73
  %76 = lshr i32 %75, 7
  %77 = xor i32 %76, %75
  %78 = shl i32 %77, 2
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 20
  %81 = xor i32 %80, %79
  %82 = or i32 %81, 1
  %83 = zext i32 %82 to i64
  br label %84

84:                                               ; preds = %70, %111
  %85 = phi i32 [ %68, %70 ], [ %119, %111 ]
  %86 = phi %"struct.WTF::KeyValuePair.3245"* [ %66, %70 ], [ %117, %111 ]
  %87 = phi %"struct.WTF::KeyValuePair.3245"* [ null, %70 ], [ %112, %111 ]
  %88 = phi i64 [ %65, %70 ], [ %116, %111 ]
  %89 = phi i64 [ 0, %70 ], [ %114, %111 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::String"*, %"class.WTF::String"** %90, align 8
  %92 = icmp eq %"class.WTF::String"* %91, inttoptr (i64 -1 to %"class.WTF::String"*)
  br i1 %92, label %111, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %86, i64 0, i32 0
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %11, i64 %88, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %16, align 4
  %97 = icmp eq i32 %85, %96
  br i1 %97, label %101, label %111

98:                                               ; preds = %101
  %99 = load i32, i32* %95, align 4
  %100 = icmp ult i32 %110, %99
  br i1 %100, label %101, label %163

101:                                              ; preds = %93, %98
  %102 = phi i32 [ %110, %98 ], [ 0, %93 ]
  %103 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %94, i32 %102) #15
  %104 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %1, i32 %102) #15
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"* %108) #15
  %110 = add nuw i32 %102, 1
  br i1 %109, label %98, label %111

111:                                              ; preds = %101, %84, %93
  %112 = phi %"struct.WTF::KeyValuePair.3245"* [ %86, %84 ], [ %87, %93 ], [ %87, %101 ]
  %113 = icmp eq i64 %89, 0
  %114 = select i1 %113, i64 %83, i64 %89
  %115 = add i64 %114, %88
  %116 = and i64 %115, %15
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %11, i64 %116
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %11, i64 %116, i32 0, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %84

121:                                              ; preds = %111
  %122 = icmp eq %"struct.WTF::KeyValuePair.3245"* %112, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %61, %121
  %124 = phi %"struct.WTF::KeyValuePair.3245"* [ %117, %121 ], [ %66, %61 ]
  %125 = bitcast %"struct.WTF::KeyValuePair.3245"* %124 to i64*
  br label %137

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %112, i64 0, i32 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %112, i64 0, i32 0, i32 0, i32 0, i32 2
  %129 = bitcast %"struct.WTF::KeyValuePair.3245"* %112 to i64*
  store atomic i64 0, i64* %129 monotonic, align 8
  store i32 0, i32* %127, align 4
  store i32 0, i32* %128, align 4
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %112, i64 0, i32 1
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, 2147483647
  %134 = and i32 %133, 2147483647
  %135 = and i32 %132, -2147483648
  %136 = or i32 %134, %135
  store i32 %136, i32* %131, align 8
  br label %137

137:                                              ; preds = %123, %126
  %138 = phi i64* [ %125, %123 ], [ %129, %126 ]
  %139 = phi %"struct.WTF::KeyValuePair.3245"* [ %124, %123 ], [ %112, %126 ]
  %140 = bitcast %"class.WTF::Vector.630"* %1 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = load i64, i64* %138, align 8
  store atomic i64 %142, i64* %140 monotonic, align 8
  store atomic i64 %141, i64* %138 monotonic, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %139, i64 0, i32 0, i32 0, i32 0, i32 1
  %144 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %1, i64 0, i32 0, i32 0, i32 1
  %145 = load i32, i32* %143, align 4
  %146 = load i32, i32* %144, align 4
  store i32 %146, i32* %143, align 4
  store i32 %145, i32* %144, align 4
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %139, i64 0, i32 0, i32 0, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = load i32, i32* %16, align 4
  store i32 %149, i32* %147, align 4
  store i32 %148, i32* %16, align 4
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %139, i64 0, i32 1
  %151 = load i32, i32* %2, align 4
  store i32 %151, i32* %150, align 4
  %152 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  %155 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, %154
  %158 = shl i32 %157, 1
  %159 = load i32, i32* %12, align 8
  %160 = icmp ult i32 %158, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %137
  %162 = tail call %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6ExpandEPS6_(%"class.WTF::HashTable.3242"* %0, %"struct.WTF::KeyValuePair.3245"* %139)
  br label %163

163:                                              ; preds = %98, %137, %161
  %164 = phi i8 [ 1, %137 ], [ 1, %161 ], [ 0, %98 ]
  %165 = phi %"struct.WTF::KeyValuePair.3245"* [ %139, %137 ], [ %162, %161 ], [ %86, %98 ]
  %166 = insertvalue { %"struct.WTF::KeyValuePair.3245"*, i8 } undef, %"struct.WTF::KeyValuePair.3245"* %165, 0
  %167 = insertvalue { %"struct.WTF::KeyValuePair.3245"*, i8 } %166, i8 %164, 1
  ret { %"struct.WTF::KeyValuePair.3245"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E6ExpandEPS6_(%"class.WTF::HashTable.3242"*, %"struct.WTF::KeyValuePair.3245"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEiEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3245"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %60, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %57, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %58, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %44, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %44, i32 0, i32 0, i32 0, i32 2
  %49 = bitcast %"struct.WTF::KeyValuePair.3245"* %46 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  store i32 0, i32* %47, align 4
  store i32 0, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %44, i32 1
  store i32 0, i32* %50, align 8
  %51 = or i64 %44, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %51, i32 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %51, i32 0, i32 0, i32 0, i32 2
  %55 = bitcast %"struct.WTF::KeyValuePair.3245"* %52 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  store i32 0, i32* %53, align 4
  store i32 0, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %51, i32 1
  store i32 0, i32* %56, align 8
  %57 = add nuw nsw i64 %44, 2
  %58 = add i64 %45, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %43

60:                                               ; preds = %43, %38
  %61 = phi i64 [ 0, %38 ], [ %57, %43 ]
  %62 = icmp eq i64 %39, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %61
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %61, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %61, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"struct.WTF::KeyValuePair.3245"* %64 to i64*
  store atomic i64 0, i64* %67 monotonic, align 8
  store i32 0, i32* %65, align 4
  store i32 0, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %36, i64 %61, i32 1
  store i32 0, i32* %68, align 8
  br label %69

69:                                               ; preds = %63, %60, %31
  %70 = call %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E8RehashToEPS6_jSG_(%"class.WTF::HashTable.3242"* %0, %"struct.WTF::KeyValuePair.3245"* %36, i32 %32, %"struct.WTF::KeyValuePair.3245"* %1) #15
  ret %"struct.WTF::KeyValuePair.3245"* %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E8RehashToEPS6_jSG_(%"class.WTF::HashTable.3242"*, %"struct.WTF::KeyValuePair.3245"*, i32, %"struct.WTF::KeyValuePair.3245"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3242", align 8
  %6 = bitcast %"class.WTF::HashTable.3242"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3242"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3245"* %1, %"struct.WTF::KeyValuePair.3245"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3242"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3242"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %22 to i64
  br label %42

24:                                               ; preds = %65
  %25 = bitcast %"class.WTF::HashTable.3242"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3242"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %66, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3245"* [ null, %16 ], [ %69, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %67, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.3245"*
  call void @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.3245"* nonnull %37, i32 %34) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.3245"* %33

42:                                               ; preds = %21, %65
  %43 = phi i64 [ %66, %65 ], [ %23, %21 ]
  %44 = phi i32 [ %67, %65 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.3245"* [ %68, %65 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.3245"* [ %69, %65 ], [ null, %21 ]
  %47 = phi i32 [ %70, %65 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %45, i64 %48, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::String"*, %"class.WTF::String"** %53, align 8
  %55 = icmp eq %"class.WTF::String"* %54, inttoptr (i64 -1 to %"class.WTF::String"*)
  %56 = or i1 %52, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %42
  %58 = call %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E8ReinsertEOS6_(%"class.WTF::HashTable.3242"* nonnull %5, %"struct.WTF::KeyValuePair.3245"* dereferenceable(24) %49)
  %59 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %15, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %59, i64 %48
  %61 = icmp eq %"struct.WTF::KeyValuePair.3245"* %60, %3
  %62 = select i1 %61, %"struct.WTF::KeyValuePair.3245"* %58, %"struct.WTF::KeyValuePair.3245"* %46
  %63 = load i32, i32* %12, align 8
  %64 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %59 to i64
  br label %65

65:                                               ; preds = %42, %57
  %66 = phi i64 [ %43, %42 ], [ %64, %57 ]
  %67 = phi i32 [ %44, %42 ], [ %63, %57 ]
  %68 = phi %"struct.WTF::KeyValuePair.3245"* [ %45, %42 ], [ %59, %57 ]
  %69 = phi %"struct.WTF::KeyValuePair.3245"* [ %46, %42 ], [ %62, %57 ]
  %70 = add i32 %47, 1
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3245"* @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E8ReinsertEOS6_(%"class.WTF::HashTable.3242"*, %"struct.WTF::KeyValuePair.3245"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.3245"*, i8 } @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E16LookupForWritingINS_22IdentityHashTranslatorISA_SE_S3_EES4_EENSt3__14pairIPS6_bEERKT0_(%"class.WTF::HashTable.3242"* %0, %"class.WTF::Vector.630"* dereferenceable(16) %3) #15
  %5 = extractvalue { %"struct.WTF::KeyValuePair.3245"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp eq %"class.WTF::String"* %7, null
  br i1 %8, label %43, label %9, !prof !2

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::String"* %7 to i8*
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %41, label %14, !prof !3

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %15
  br label %17

17:                                               ; preds = %35, %14
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %16
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 0, i32* %11, align 4
  %39 = bitcast %"struct.WTF::KeyValuePair.3245"* %5 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %9
  %42 = phi i8* [ %40, %38 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %6, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = bitcast %"struct.WTF::KeyValuePair.3245"* %5 to i8*
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"struct.WTF::KeyValuePair.3245"* %1 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #15
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"struct.WTF::KeyValuePair.3245"* %5 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %45, align 4
  %52 = load i32, i32* %50, align 4
  store i32 %52, i32* %45, align 4
  store i32 %51, i32* %50, align 4
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %46, align 4
  %55 = load i32, i32* %53, align 4
  store i32 %55, i32* %46, align 4
  store i32 %54, i32* %53, align 4
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %5, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %1, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %56, align 8
  ret %"struct.WTF::KeyValuePair.3245"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3245"*, i8 } @_ZN3WTF9HashTableINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_iEENS_24KeyValuePairKeyExtractorEN5blink22LegacyDOMSnapshotAgent22VectorStringHashTraitsENS_18HashMapValueTraitsISA_NS_10HashTraitsIiEEEESA_S3_E16LookupForWritingINS_22IdentityHashTranslatorISA_SE_S3_EES4_EENSt3__14pairIPS6_bEERKT0_(%"class.WTF::HashTable.3242"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3245"*, %"struct.WTF::KeyValuePair.3245"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3242", %"class.WTF::HashTable.3242"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %1, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %11
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %2, %43
  %32 = phi i32 [ %51, %43 ], [ 0, %2 ]
  %33 = phi i64 [ %50, %43 ], [ %29, %2 ]
  %34 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %1, i32 %32) #15
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = lshr i32 %38, 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %31
  %42 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %36) #15
  br label %43

43:                                               ; preds = %41, %31
  %44 = phi i32 [ %42, %41 ], [ %39, %31 ]
  %45 = and i64 %33, 4294967295
  %46 = mul i64 %45, 5146158508761418231
  %47 = zext i32 %44 to i64
  %48 = mul i64 %47, -682818954288075998
  %49 = add i64 %48, %46
  %50 = lshr i64 %49, 32
  %51 = add nuw i32 %32, 1
  %52 = load i32, i32* %9, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %31, label %54

54:                                               ; preds = %43, %2
  %55 = phi i64 [ %29, %2 ], [ %50, %43 ]
  %56 = trunc i64 %55 to i32
  %57 = and i32 %7, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %58, i32 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %80, label %64

64:                                               ; preds = %54
  %65 = xor i32 %56, -1
  %66 = lshr i32 %56, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %86

78:                                               ; preds = %114
  %79 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %120 to i64
  br label %80

80:                                               ; preds = %78, %54
  %81 = phi i64 [ %60, %54 ], [ %79, %78 ]
  %82 = phi %"struct.WTF::KeyValuePair.3245"* [ null, %54 ], [ %115, %78 ]
  %83 = icmp eq %"struct.WTF::KeyValuePair.3245"* %82, null
  %84 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %82 to i64
  %85 = select i1 %83, i64 %81, i64 %84
  br label %125

86:                                               ; preds = %64, %114
  %87 = phi i32 [ %62, %64 ], [ %123, %114 ]
  %88 = phi %"struct.WTF::KeyValuePair.3245"* [ null, %64 ], [ %115, %114 ]
  %89 = phi i64 [ %60, %64 ], [ %121, %114 ]
  %90 = phi %"struct.WTF::KeyValuePair.3245"* [ %59, %64 ], [ %120, %114 ]
  %91 = phi i64 [ %58, %64 ], [ %119, %114 ]
  %92 = phi i64 [ 0, %64 ], [ %117, %114 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::String"*, %"class.WTF::String"** %93, align 8
  %95 = icmp eq %"class.WTF::String"* %94, inttoptr (i64 -1 to %"class.WTF::String"*)
  br i1 %95, label %114, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %90, i64 0, i32 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %91, i32 0, i32 0, i32 0, i32 2
  %99 = load i32, i32* %9, align 4
  %100 = icmp eq i32 %87, %99
  br i1 %100, label %104, label %114

101:                                              ; preds = %104
  %102 = load i32, i32* %98, align 4
  %103 = icmp ult i32 %113, %102
  br i1 %103, label %104, label %125

104:                                              ; preds = %96, %101
  %105 = phi i32 [ %113, %101 ], [ 0, %96 ]
  %106 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %97, i32 %105) #15
  %107 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* %1, i32 %105) #15
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %107, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"* %111) #15
  %113 = add nuw i32 %105, 1
  br i1 %112, label %101, label %114

114:                                              ; preds = %104, %86, %96
  %115 = phi %"struct.WTF::KeyValuePair.3245"* [ %88, %96 ], [ %90, %86 ], [ %88, %104 ]
  %116 = icmp eq i64 %92, 0
  %117 = select i1 %116, i64 %77, i64 %92
  %118 = add i64 %117, %91
  %119 = and i64 %118, %8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %119
  %121 = ptrtoint %"struct.WTF::KeyValuePair.3245"* %120 to i64
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.3245", %"struct.WTF::KeyValuePair.3245"* %4, i64 %119, i32 0, i32 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %78, label %86

125:                                              ; preds = %101, %80
  %126 = phi i64 [ %85, %80 ], [ %89, %101 ]
  %127 = phi i8 [ 0, %80 ], [ 1, %101 ]
  %128 = inttoptr i64 %126 to %"struct.WTF::KeyValuePair.3245"*
  %129 = insertvalue { %"struct.WTF::KeyValuePair.3245"*, i8 } undef, %"struct.WTF::KeyValuePair.3245"* %128, 0
  %130 = insertvalue { %"struct.WTF::KeyValuePair.3245"*, i8 } %129, i8 %127, 1
  ret { %"struct.WTF::KeyValuePair.3245"*, i8 } %130
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
