; ModuleID = '../../net/reporting/reporting_delegate.cc'
source_filename = "../../net/reporting/reporting_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ReportingDelegate" = type { i32 (...)** }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.220", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.4" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.1" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.6" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.11", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.13" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.18", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.97", %"class.base::MRUCache.109", %"class.base::flat_map.129", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.36", %"class.std::__1::map.43", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.89" }
%"class.std::__1::list.36" = type { %"class.std::__1::__list_imp.37" }
%"class.std::__1::__list_imp.37" = type { %"struct.std::__1::__list_node_base.38", %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::__list_node_base.38" = type { %"struct.std::__1::__list_node_base.38"*, %"struct.std::__1::__list_node_base.38"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.61" }
%"class.base::MRUCache.61" = type { %"class.base::MRUCacheBase.62" }
%"class.base::MRUCacheBase.62" = type { i32 (...)**, %"class.std::__1::list.63", %"class.std::__1::map.70", i64 }
%"class.std::__1::list.63" = type { %"class.std::__1::__list_imp.64" }
%"class.std::__1::__list_imp.64" = type { %"struct.std::__1::__list_node_base.65", %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::__list_node_base.65" = type { %"struct.std::__1::__list_node_base.65"*, %"struct.std::__1::__list_node_base.65"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.70" = type { %"class.std::__1::__tree.71" }
%"class.std::__1::__tree.71" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::WeakPtrFactory.89" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.81", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.81" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.82" }
%"struct.std::__1::atomic.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl.85" }
%"struct.std::__1::__cxx_atomic_impl.85" = type { %"struct.std::__1::__cxx_atomic_base_impl.86" }
%"struct.std::__1::__cxx_atomic_base_impl.86" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.90" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.109" = type { %"class.base::MRUCacheBase.110" }
%"class.base::MRUCacheBase.110" = type { i32 (...)**, %"class.std::__1::list.111", %"class.std::__1::map.118", i64 }
%"class.std::__1::list.111" = type { %"class.std::__1::__list_imp.112" }
%"class.std::__1::__list_imp.112" = type { %"struct.std::__1::__list_node_base.113", %"class.std::__1::__compressed_pair.114" }
%"struct.std::__1::__list_node_base.113" = type { %"struct.std::__1::__list_node_base.113"*, %"struct.std::__1::__list_node_base.113"* }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.118" = type { %"class.std::__1::__tree.119" }
%"class.std::__1::__tree.119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::flat_map.129" = type { %"class.base::internal::flat_tree.130" }
%"class.base::internal::flat_tree.130" = type { %"class.std::__1::vector.131" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"struct.std::__1::pair.133"*, %"struct.std::__1::pair.133"*, %"class.std::__1::__compressed_pair.134" }
%"struct.std::__1::pair.133" = type opaque
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::pair.133"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.87 }
%class.scoped_refptr.87 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.88", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.139", %"class.std::__1::map.150", %"class.std::__1::map.159", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.182", i8, [7 x i8] }>
%"class.std::__1::map.139" = type { %"class.std::__1::__tree.140" }
%"class.std::__1::__tree.140" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.150" = type { %"class.std::__1::__tree.151" }
%"class.std::__1::__tree.151" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.159" = type { %"class.std::__1::__tree.160" }
%"class.std::__1::__tree.160" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.170", %"struct.std::__1::less.179", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::less.179" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.181" }
%"class.base::time_internal::TimeBase.181" = type { i64 }
%"class.std::__1::set.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.190", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.196", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.203", %"class.std::__1::vector.213", %"class.std::__1::vector.213", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.198" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.203" = type { %"class.std::__1::__tree.204" }
%"class.std::__1::__tree.204" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { i32*, i32*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::set.223"* }
%"class.std::__1::set.223" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::(anonymous namespace)::ReportingDelegateImpl" = type { %"class.net::ReportingDelegate", %"class.net::URLRequestContext"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::set.234" = type { %"class.std::__1::__tree.235" }
%"class.std::__1::__tree.235" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::OnceCallback.244" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.url::Origin" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.245" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %class.GURL* }

$_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

@_ZTVN3net17ReportingDelegateE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ReportingDelegate"*)* @_ZN3net17ReportingDelegateD2Ev to i8*), i8* bitcast (void (%"class.net::ReportingDelegate"*)* @_ZN3net17ReportingDelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net12_GLOBAL__N_121ReportingDelegateImplE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ReportingDelegate"*)* @_ZN3net17ReportingDelegateD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDelegateImpl"*)* @_ZN3net12_GLOBAL__N_121ReportingDelegateImplD0Ev to i8*), i8* bitcast (i1 (%"class.net::(anonymous namespace)::ReportingDelegateImpl"*, %"class.url::Origin"*)* @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl14CanQueueReportERKN3url6OriginE to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::ReportingDelegateImpl"*, %"class.std::__1::set.234"*, %"class.base::OnceCallback.244"*)* @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl14CanSendReportsENSt3__13setIN3url6OriginENS2_4lessIS5_EENS2_9allocatorIS5_EEEEN4base12OnceCallbackIFvSA_EEE to i8*), i8* bitcast (i1 (%"class.net::(anonymous namespace)::ReportingDelegateImpl"*, %"class.url::Origin"*, %class.GURL*)* @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl12CanSetClientERKN3url6OriginERK4GURL to i8*), i8* bitcast (i1 (%"class.net::(anonymous namespace)::ReportingDelegateImpl"*, %"class.url::Origin"*, %class.GURL*)* @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl12CanUseClientERKN3url6OriginERK4GURL to i8*)] }, align 8

@_ZN3net17ReportingDelegateD1Ev = hidden unnamed_addr alias void (%"class.net::ReportingDelegate"*), void (%"class.net::ReportingDelegate"*)* @_ZN3net17ReportingDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ReportingDelegate"* @_ZN3net17ReportingDelegate6CreateEPNS_17URLRequestContextE(%"class.net::URLRequestContext"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.net::URLRequestContext"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 16) #9
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12_GLOBAL__N_121ReportingDelegateImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i64*
  store i64 %2, i64* %6, align 8
  %7 = bitcast i8* %3 to %"class.net::ReportingDelegate"*
  ret %"class.net::ReportingDelegate"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net17ReportingDelegateD0Ev(%"class.net::ReportingDelegate"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net17ReportingDelegateD2Ev(%"class.net::ReportingDelegate"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_121ReportingDelegateImplD0Ev(%"class.net::(anonymous namespace)::ReportingDelegateImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::(anonymous namespace)::ReportingDelegateImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl14CanQueueReportERKN3url6OriginE(%"class.net::(anonymous namespace)::ReportingDelegateImpl"* nocapture readonly, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDelegateImpl", %"class.net::(anonymous namespace)::ReportingDelegateImpl"* %0, i64 0, i32 1
  %4 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %3, align 8
  %5 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %4, i64 0, i32 8
  %6 = load %"class.net::NetworkDelegate"*, %"class.net::NetworkDelegate"** %5, align 8
  %7 = icmp eq %"class.net::NetworkDelegate"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZNK3net15NetworkDelegate23CanQueueReportingReportERKN3url6OriginE(%"class.net::NetworkDelegate"* nonnull %6, %"class.url::Origin"* dereferenceable(80) %1) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i1 [ false, %2 ], [ %9, %8 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl14CanSendReportsENSt3__13setIN3url6OriginENS2_4lessIS5_EENS2_9allocatorIS5_EEEEN4base12OnceCallbackIFvSA_EEE(%"class.net::(anonymous namespace)::ReportingDelegateImpl"* nocapture readonly, %"class.std::__1::set.234"*, %"class.base::OnceCallback.244"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.244", align 8
  %5 = alloca %"class.std::__1::set.234", align 8
  %6 = alloca %"class.std::__1::set.234", align 16
  %7 = alloca %"class.base::OnceCallback.244", align 8
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDelegateImpl", %"class.net::(anonymous namespace)::ReportingDelegateImpl"* %0, i64 0, i32 1
  %9 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %8, align 8
  %10 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %9, i64 0, i32 8
  %11 = load %"class.net::NetworkDelegate"*, %"class.net::NetworkDelegate"** %10, align 8
  %12 = icmp eq %"class.net::NetworkDelegate"* %11, null
  br i1 %12, label %13, label %35

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  tail call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.235"* %14, %"class.std::__1::__tree_node"* %17) #11
  %18 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %5, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__compressed_pair.236"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = bitcast %"class.base::OnceCallback.244"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback.244"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::OnceCallback.244"* %4 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %4, i64 0, i32 0
  %31 = inttoptr i64 %28 to %"class.base::internal::BindStateBase"*
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %33 = bitcast void ()** %32 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.234"*)**
  %34 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.234"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.234"*)** %33, align 8
  call void %34(%"class.base::internal::BindStateBase"* %31, %"class.std::__1::set.234"* nonnull dereferenceable(24) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  br label %59

35:                                               ; preds = %3
  %36 = bitcast %"class.std::__1::set.234"* %1 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = bitcast %"class.std::__1::set.234"* %6 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 16
  %39 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %40, align 16
  %42 = icmp eq i64 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %42, label %44, label %46

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %6, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %45, align 16
  br label %53

46:                                               ; preds = %35
  %47 = extractelement <2 x i64> %37, i32 1
  %48 = inttoptr i64 %47 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %49, align 8
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #11
  br label %53

53:                                               ; preds = %44, %46
  %54 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %2, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.base::OnceCallback.244"* %2 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.base::OnceCallback.244"* %7 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8
  call void @_ZNK3net15NetworkDelegate23CanSendReportingReportsENSt3__13setIN3url6OriginENS1_4lessIS4_EENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvS9_EEE(%"class.net::NetworkDelegate"* nonnull %11, %"class.std::__1::set.234"* nonnull %6, %"class.base::OnceCallback.244"* nonnull %7) #11
  %58 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #11
  br label %59

59:                                               ; preds = %53, %13
  %60 = phi %"class.std::__1::set.234"* [ %6, %53 ], [ %5, %13 ]
  %61 = phi %"class.std::__1::__tree_end_node"* [ %43, %53 ], [ %22, %13 ]
  %62 = getelementptr inbounds %"class.std::__1::set.234", %"class.std::__1::set.234"* %60, i64 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node"**
  %64 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %63, align 8
  call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.235"* nonnull %62, %"class.std::__1::__tree_node"* %64) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl12CanSetClientERKN3url6OriginERK4GURL(%"class.net::(anonymous namespace)::ReportingDelegateImpl"* nocapture readonly, %"class.url::Origin"* dereferenceable(80), %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDelegateImpl", %"class.net::(anonymous namespace)::ReportingDelegateImpl"* %0, i64 0, i32 1
  %5 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %4, align 8
  %6 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 8
  %7 = load %"class.net::NetworkDelegate"*, %"class.net::NetworkDelegate"** %6, align 8
  %8 = icmp eq %"class.net::NetworkDelegate"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK3net15NetworkDelegate21CanSetReportingClientERKN3url6OriginERK4GURL(%"class.net::NetworkDelegate"* nonnull %7, %"class.url::Origin"* dereferenceable(80) %1, %class.GURL* dereferenceable(120) %2) #11
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i1 [ false, %3 ], [ %10, %9 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_121ReportingDelegateImpl12CanUseClientERKN3url6OriginERK4GURL(%"class.net::(anonymous namespace)::ReportingDelegateImpl"* nocapture readonly, %"class.url::Origin"* dereferenceable(80), %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::ReportingDelegateImpl", %"class.net::(anonymous namespace)::ReportingDelegateImpl"* %0, i64 0, i32 1
  %5 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %4, align 8
  %6 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 8
  %7 = load %"class.net::NetworkDelegate"*, %"class.net::NetworkDelegate"** %6, align 8
  %8 = icmp eq %"class.net::NetworkDelegate"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK3net15NetworkDelegate21CanUseReportingClientERKN3url6OriginERK4GURL(%"class.net::NetworkDelegate"* nonnull %7, %"class.url::Origin"* dereferenceable(80) %1, %class.GURL* dereferenceable(120) %2) #11
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i1 [ false, %3 ], [ %10, %9 ]
  ret i1 %12
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZNK3net15NetworkDelegate23CanQueueReportingReportERKN3url6OriginE(%"class.net::NetworkDelegate"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #7

declare void @_ZNK3net15NetworkDelegate23CanSendReportingReportsENSt3__13setIN3url6OriginENS1_4lessIS4_EENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvS9_EEE(%"class.net::NetworkDelegate"*, %"class.std::__1::set.234"*, %"class.base::OnceCallback.244"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.235"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.235"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3url6OriginENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.235"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %10) #11
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #8

declare zeroext i1 @_ZNK3net15NetworkDelegate21CanSetReportingClientERKN3url6OriginERK4GURL(%"class.net::NetworkDelegate"*, %"class.url::Origin"* dereferenceable(80), %class.GURL* dereferenceable(120)) local_unnamed_addr #7

declare zeroext i1 @_ZNK3net15NetworkDelegate21CanUseReportingClientERKN3url6OriginERK4GURL(%"class.net::NetworkDelegate"*, %"class.url::Origin"* dereferenceable(80), %class.GURL* dereferenceable(120)) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
