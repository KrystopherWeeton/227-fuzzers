; ModuleID = '../../third_party/tflite/src/tensorflow/lite/nnapi/nnapi_implementation_disabled.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/nnapi/nnapi_implementation_disabled.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NnApi = type { i8, i32, i32 (i64, i32, i32, i64, %struct.ANeuralNetworksMemory**)*, void (%struct.ANeuralNetworksMemory*)*, i32 (%struct.ANeuralNetworksModel**)*, void (%struct.ANeuralNetworksModel*)*, i32 (%struct.ANeuralNetworksModel*)*, i32 (%struct.ANeuralNetworksModel*, %struct.ANeuralNetworksOperandType*)*, i32 (%struct.ANeuralNetworksModel*, i32, i8*, i64)*, i32 (%struct.ANeuralNetworksModel*, i32, %struct.ANeuralNetworksSymmPerChannelQuantParams*)*, i32 (%struct.ANeuralNetworksModel*, i32, %struct.ANeuralNetworksMemory*, i64, i64)*, i32 (%struct.ANeuralNetworksModel*, i32, i32, i32*, i32, i32*)*, i32 (%struct.ANeuralNetworksModel*, i32, i32*, i32, i32*)*, i32 (%struct.ANeuralNetworksModel*, i1)*, i32 (%struct.ANeuralNetworksModel*, %struct.ANeuralNetworksCompilation**)*, void (%struct.ANeuralNetworksCompilation*)*, i32 (%struct.ANeuralNetworksCompilation*, i32)*, i32 (%struct.ANeuralNetworksCompilation*)*, i32 (%struct.ANeuralNetworksCompilation*, %struct.ANeuralNetworksExecution**)*, void (%struct.ANeuralNetworksExecution*)*, i32 (%struct.ANeuralNetworksExecution*, i32, %struct.ANeuralNetworksOperandType*, i8*, i64)*, i32 (%struct.ANeuralNetworksExecution*, i32, %struct.ANeuralNetworksOperandType*, %struct.ANeuralNetworksMemory*, i64, i64)*, i32 (%struct.ANeuralNetworksExecution*, i32, %struct.ANeuralNetworksOperandType*, i8*, i64)*, i32 (%struct.ANeuralNetworksExecution*, i32, %struct.ANeuralNetworksOperandType*, %struct.ANeuralNetworksMemory*, i64, i64)*, i32 (%struct.ANeuralNetworksExecution*, %struct.ANeuralNetworksEvent**)*, i32 (%struct.ANeuralNetworksEvent*)*, void (%struct.ANeuralNetworksEvent*)*, i32 (i8*, i64)*, i32 (i32*)*, i32 (i32, %struct.ANeuralNetworksDevice**)*, i32 (%struct.ANeuralNetworksDevice*, i8**)*, i32 (%struct.ANeuralNetworksDevice*, i8**)*, i32 (%struct.ANeuralNetworksDevice*, i64*)*, i32 (%struct.ANeuralNetworksDevice*, i32*)*, i32 (%struct.ANeuralNetworksModel*, %struct.ANeuralNetworksDevice**, i32, i8*)*, i32 (%struct.ANeuralNetworksModel*, %struct.ANeuralNetworksDevice**, i32, %struct.ANeuralNetworksCompilation**)*, i32 (%struct.ANeuralNetworksCompilation*, i8*, i8*)*, i32 (%struct.ANeuralNetworksCompilation*, i64)*, i32 (%struct.ANeuralNetworksCompilation*, i32)*, i32 (%struct.ANeuralNetworksExecution*)*, i32 (%struct.ANeuralNetworksExecution*, i64)*, i32 (%struct.ANeuralNetworksExecution*, i64)*, i32 (%struct.ANeuralNetworksExecution*, i32, i32*)*, i32 (%struct.ANeuralNetworksExecution*, i32, i32*)*, i32 (%struct.ANeuralNetworksCompilation*, %struct.ANeuralNetworksBurst**)*, void (%struct.ANeuralNetworksBurst*)*, i32 (%struct.ANeuralNetworksExecution*, %struct.ANeuralNetworksBurst*)*, i32 (%struct.AHardwareBuffer*, %struct.ANeuralNetworksMemory**)*, i32 (%struct.ANeuralNetworksExecution*, i1)*, i32 (%struct.ANeuralNetworksExecution*, i32, i64*)*, i32 (%struct.ANeuralNetworksDevice*, i8*, i8*)*, i32 (%struct.ANeuralNetworksModel*, i8*, i16, i32*)*, i32 (%struct.ANeuralNetworksModel*, i8*, i16, i32*)*, i32 (%struct.ANeuralNetworksModel*, i32, i8*, i64)*, i32 (%struct.ANeuralNetworksMemoryDesc**)*, void (%struct.ANeuralNetworksMemoryDesc*)*, i32 (%struct.ANeuralNetworksMemoryDesc*, %struct.ANeuralNetworksCompilation*, i32, float)*, i32 (%struct.ANeuralNetworksMemoryDesc*, %struct.ANeuralNetworksCompilation*, i32, float)*, i32 (%struct.ANeuralNetworksMemoryDesc*, i32, i32*)*, i32 (%struct.ANeuralNetworksMemoryDesc*)*, i32 (%struct.ANeuralNetworksMemoryDesc*, %struct.ANeuralNetworksMemory**)*, i32 (%struct.ANeuralNetworksMemory*, %struct.ANeuralNetworksMemory*)* }
%struct.ANeuralNetworksMemory = type opaque
%struct.ANeuralNetworksModel = type opaque
%struct.ANeuralNetworksOperandType = type { i32, i32, i32*, float, i32 }
%struct.ANeuralNetworksSymmPerChannelQuantParams = type { i32, i32, float* }
%struct.ANeuralNetworksCompilation = type opaque
%struct.ANeuralNetworksExecution = type opaque
%struct.ANeuralNetworksEvent = type opaque
%struct.ANeuralNetworksDevice = type opaque
%struct.ANeuralNetworksBurst = type opaque
%struct.AHardwareBuffer = type opaque
%struct.ANeuralNetworksMemoryDesc = type opaque

@_ZZ19NnApiImplementationvE5nnapi = internal constant %struct.NnApi zeroinitializer, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.NnApi* @_Z19NnApiImplementationv() local_unnamed_addr #0 {
  ret %struct.NnApi* @_ZZ19NnApiImplementationvE5nnapi
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
