; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_union_compositeoperationorauto_compositeoperationorautosequence.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_union_compositeoperationorauto_compositeoperationorautosequence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.188", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.127", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.47" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.121", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { float }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.130", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.139" }
%"class.WTF::Vector.139" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.155" }
%"class.WTF::VectorBuffer.155" = type { %"class.WTF::VectorBufferBase.156" }
%"class.WTF::VectorBufferBase.156" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.195" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::V8CompositeOperationOrAuto", %"class.WTF::Vector" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::V8CompositeOperationOrAuto" = type { %"class.blink::bindings::EnumerationBase" }
%"class.blink::bindings::EnumerationBase" = type { i64, i8* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::V8CompositeOperationOrAuto"*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.1", %"class.v8::Local", %"class.v8::Local.2", %"class.v8::Local.2", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.1" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Local.2" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.5, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.5 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.13" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.13" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.13" = type { %"class.v8::TracedReference.14" }
%"class.v8::TracedReference.14" = type { %"class.v8::BasicTracedReference.15" }
%"class.v8::BasicTracedReference.15" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.193" }
%"class.blink::Persistent.193" = type { %"class.blink::PersistentBase.194" }
%"class.blink::PersistentBase.194" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_26V8CompositeOperationOrAutoEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD2Ev = comdat any

$_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD0Ev = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm = comdat any

$_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_26V8CompositeOperationOrAutoEN3WTF6VectorIS2_Lj0ENS3_18PartitionAllocatorEEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*)* @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD2Ev to i8*), i8* bitcast (void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*)* @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD0Ev to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.blink::ScriptState"*)* @_ZNK5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence9ToV8ValueEPNS_11ScriptStateE to i8*), i8* bitcast (void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.blink::Visitor"*)* @_ZNK5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26V8CompositeOperationOrAutoEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::V8CompositeOperationOrAuto]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink26V8CompositeOperationOrAuto13string_table_E = external constant [4 x i8*], align 16
@.str.10 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"accumulate\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"CompositeOperationOrAuto\00", align 1
@_ZN5blink26V8CompositeOperationOrAuto13string_table_E.const = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0)], align 16

@_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC1ERKN3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.WTF::Vector"*), void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.WTF::Vector"*)* @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC2ERKN3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE
@_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC1EON3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.WTF::Vector"*), void (%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.WTF::Vector"*)* @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC2EON3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %1) #9
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  %9 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_26V8CompositeOperationOrAutoEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %4, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %36

13:                                               ; preds = %8
  %14 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #9
  %15 = bitcast i8* %14 to %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*
  %16 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 16
  %20 = getelementptr inbounds i8, i8* %14, i64 32
  %21 = getelementptr inbounds i8, i8* %14, i64 40
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds i8, i8* %14, i64 44
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast %"class.WTF::Vector"* %4 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %22, align 4
  store i32 0, i32* %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %24, align 4
  store i32 0, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %14, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  br label %36

36:                                               ; preds = %8, %13
  %37 = phi %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* [ %15, %13 ], [ null, %8 ]
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %38, align 8
  %40 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %39, null
  %41 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %39 to i8*
  br i1 %40, label %48, label %42, !prof !2

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #9
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %38, align 8
  br label %48

48:                                               ; preds = %36, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %134

49:                                               ; preds = %3
  %50 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #9
  br i1 %50, label %51, label %104

51:                                               ; preds = %49
  %52 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %52) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 56, i1 false)
  %53 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %0, %"class.v8::Object"* %53, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %101

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %59 = load %"class.v8::Object"*, %"class.v8::Object"** %58, align 8
  %60 = icmp eq %"class.v8::Object"* %59, null
  br i1 %60, label %103, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #9
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %6, %"class.v8::Isolate"* %0, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %63 = load i32, i32* %54, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %88

65:                                               ; preds = %61
  %66 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #9
  %67 = bitcast i8* %66 to %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*
  %68 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = getelementptr inbounds i8, i8* %66, i64 8
  %70 = bitcast i8* %69 to i32*
  store i32 1, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %66, i64 16
  %72 = getelementptr inbounds i8, i8* %66, i64 32
  %73 = getelementptr inbounds i8, i8* %66, i64 40
  %74 = bitcast i8* %73 to i32*
  %75 = getelementptr inbounds i8, i8* %66, i64 44
  %76 = bitcast i8* %75 to i32*
  %77 = bitcast %"class.WTF::Vector"* %6 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #9
  %78 = load i64, i64* %77, align 8
  %79 = bitcast i8* %72 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %74, align 4
  store i32 0, i32* %80, align 8
  %82 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %76, align 4
  store i32 0, i32* %82, align 4
  %84 = getelementptr inbounds i8, i8* %66, i64 -4
  %85 = bitcast i8* %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = or i16 %86, 1
  store atomic i16 %87, i16* %85 release, align 2
  br label %88

88:                                               ; preds = %61, %65
  %89 = phi %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* [ %67, %65 ], [ null, %61 ]
  %90 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %90, align 8
  %92 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %91, null
  %93 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %91 to i8*
  br i1 %92, label %100, label %94, !prof !2

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98, !prof !3

98:                                               ; preds = %94
  store i32 0, i32* %95, align 4
  br label %99

99:                                               ; preds = %98, %94
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #9
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %90, align 8
  br label %100

100:                                              ; preds = %88, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #9
  br label %101

101:                                              ; preds = %51, %100
  %102 = phi %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* [ null, %51 ], [ %89, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #9
  br label %134

103:                                              ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #9
  br label %104

104:                                              ; preds = %103, %49
  %105 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, i64 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN5blink26V8CompositeOperationOrAuto13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  %106 = extractvalue { i8, i64 } %105, 0
  %107 = extractvalue { i8, i64 } %105, 1
  %108 = icmp eq i8 %106, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZN5blink26V8CompositeOperationOrAuto13string_table_E.const, i64 0, i64 %107
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %104, %109
  %114 = phi i64 [ %112, %109 ], [ 0, %104 ]
  %115 = phi i64 [ %107, %109 ], [ 0, %104 ]
  %116 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %134

119:                                              ; preds = %113
  %120 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #9
  %121 = bitcast i8* %120 to %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*
  %122 = bitcast i8* %120 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds i8, i8* %120, i64 8
  %124 = bitcast i8* %123 to i32*
  store i32 0, i32* %124, align 8
  %125 = getelementptr inbounds i8, i8* %120, i64 16
  %126 = bitcast i8* %125 to i64*
  store i64 %115, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %120, i64 24
  %128 = bitcast i8* %127 to i64*
  store i64 %114, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %120, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #9
  %130 = getelementptr inbounds i8, i8* %120, i64 -4
  %131 = bitcast i8* %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = or i16 %132, 1
  store atomic i16 %133, i16* %131 release, align 2
  br label %134

134:                                              ; preds = %113, %119, %101, %48
  %135 = phi %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* [ %37, %48 ], [ %102, %101 ], [ %121, %119 ], [ null, %113 ]
  ret %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %135
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_26V8CompositeOperationOrAutoEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.blink::V8CompositeOperationOrAuto", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %53

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %6, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %20

20:                                               ; preds = %14, %51
  %21 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %22 = icmp eq %"class.v8::Value"* %21, null
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %20
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %24

24:                                               ; preds = %20, %23
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %25 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %21, i64 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN5blink26V8CompositeOperationOrAuto13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %26 = extractvalue { i8, i64 } %25, 0
  %27 = extractvalue { i8, i64 } %25, 1
  %28 = icmp eq i8 %26, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZN5blink26V8CompositeOperationOrAuto13string_table_E.const, i64 0, i64 %27
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi i8* [ %31, %29 ], [ null, %24 ]
  %34 = phi i64 [ %27, %29 ], [ 0, %24 ]
  store i64 %34, i64* %17, align 8
  store i8* %33, i8** %18, align 8
  %35 = load i32, i32* %19, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %68

39:                                               ; preds = %32
  %40 = load i32, i32* %12, align 4
  %41 = load i32, i32* %11, align 8
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %50, label %43, !prof !3

43:                                               ; preds = %39
  %44 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %10, align 8
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %44, i64 %45
  %47 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %16, i64 16, i1 false) #9
  %48 = load i32, i32* %12, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %12, align 4
  br label %51

50:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.blink::V8CompositeOperationOrAuto"* nonnull dereferenceable(16) %6) #9
  br label %51

51:                                               ; preds = %43, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  %52 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %52, label %20, label %53

53:                                               ; preds = %51, %4
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #9
  br label %68

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.WTF::Vector"* %5 to i64*
  %63 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %63, align 8
  %64 = load i64, i64* %62, align 8
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = load i32, i32* %11, align 8
  store i32 %66, i32* %60, align 8
  store i32 0, i32* %11, align 8
  %67 = load i32, i32* %12, align 4
  store i32 %67, i32* %61, align 4
  store i32 0, i32* %12, align 4
  br label %68

68:                                               ; preds = %37, %59, %57
  %69 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %10, align 8
  %70 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %69, null
  %71 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %69 to i8*
  br i1 %70, label %77, label %72, !prof !2

72:                                               ; preds = %68
  %73 = load i32, i32* %12, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %72
  store i32 0, i32* %12, align 4
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #9
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %10, align 8
  br label %77

77:                                               ; preds = %68, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC2ERKN3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nocapture, %"class.WTF::Vector"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = zext i32 %9 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm(i64 %14) #9
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %15, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26V8CompositeOperationOrAutoEEEPKcv, i64 0, i64 0)) #9
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.WTF::Vector"* %7 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = lshr i64 %15, 4
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %11, align 8
  %21 = icmp ne i8* %16, null
  br label %22

22:                                               ; preds = %13, %2
  %23 = phi i8* [ null, %2 ], [ %16, %13 ]
  %24 = phi i1 [ false, %2 ], [ %21, %13 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %28, align 8
  %30 = icmp ne %"class.blink::V8CompositeOperationOrAuto"* %29, null
  %31 = and i1 %24, %30
  br i1 %31, label %32, label %37, !prof !2

32:                                               ; preds = %22
  %33 = load i32, i32* %25, align 4
  %34 = zext i32 %33 to i64
  %35 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %29 to i8*
  %36 = shl nuw nsw i64 %34, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %35, i64 %36, i1 false) #9
  br label %37

37:                                               ; preds = %22, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC2EON3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nocapture, %"class.WTF::Vector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = bitcast %"class.WTF::Vector"* %1 to i64*
  %10 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  %11 = load i64, i64* %9, align 8
  %12 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %7, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %7, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %8, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %8, align 4
  store i32 %17, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence3SetERKN3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  %13 = bitcast %"class.WTF::Vector"* %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %14) #9
  br label %16

16:                                               ; preds = %2, %12
  %17 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %1)
  %18 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 1
  store i32 1, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence5ClearEv(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = bitcast %"class.WTF::Vector"* %2 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.WTF::Vector"* %2 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #9
  br label %15

15:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %90, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #9
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %31, align 8
  %33 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm(i64 %34) #9
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26V8CompositeOperationOrAutoEEEPKcv, i64 0, i64 0)) #9
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 4
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 4
  %44 = ptrtoint i8* %36 to i64
  %45 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne %"class.blink::V8CompositeOperationOrAuto"* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %45 to i8*
  br i1 %48, label %50, label %56, !prof !2

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %49, i64 %53, i1 false) #9
  %54 = bitcast %"class.WTF::Vector"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #9
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %63, i64 %69, i1 false) #9
  %70 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %70, i64 %72
  %74 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %66, align 8
  %75 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %74, i64 %72
  %76 = icmp ne %"class.blink::V8CompositeOperationOrAuto"* %75, null
  %77 = icmp ne %"class.blink::V8CompositeOperationOrAuto"* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !2

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %70, i64 %81
  %83 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %75 to i8*
  %84 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %73 to i8*
  %85 = ptrtoint %"class.blink::V8CompositeOperationOrAuto"* %82 to i64
  %86 = ptrtoint %"class.blink::V8CompositeOperationOrAuto"* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* nonnull align 8 %84, i64 %87, i1 false) #9
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence3SetEON3WTF6VectorINS_26V8CompositeOperationOrAutoELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nocapture, %"class.WTF::Vector"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::Vector"* %3 to i64*
  br label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  %15 = bitcast %"class.WTF::Vector"* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %16) #9
  br label %18

18:                                               ; preds = %7, %14
  %19 = phi i64* [ %8, %7 ], [ %17, %14 ]
  %20 = bitcast %"class.WTF::Vector"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %19, align 8
  store atomic i64 %22, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %19 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %4, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %4, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %26, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %26, align 4
  store i32 %28, i32* %27, align 4
  %30 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 1
  store i32 1, i32* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.blink::ScriptState"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %30 [
    i32 0, label %5
    i32 1, label %27
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %11, %5
  %15 = ptrtoint %"class.v8::Isolate"* %7 to i64
  %16 = add i64 %15, 200
  %17 = inttoptr i64 %16 to %"class.v8::String"*
  br label %24

18:                                               ; preds = %11
  %19 = tail call i64 @strlen(i8* nonnull %9) #10
  %20 = trunc i64 %19 to i32
  %21 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %7, i8* nonnull %9, i32 0, i32 %20) #9
  %22 = icmp eq %"class.v8::String"* %21, null
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %18
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %24

24:                                               ; preds = %14, %18, %23
  %25 = phi %"class.v8::String"* [ %17, %14 ], [ %21, %18 ], [ null, %23 ]
  %26 = bitcast %"class.v8::String"* %25 to %"class.v8::Value"*
  br label %30

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3
  %29 = tail call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_26V8CompositeOperationOrAutoEN3WTF6VectorIS2_Lj0ENS3_18PartitionAllocatorEEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %1, %"class.WTF::Vector"* dereferenceable(16) %28) #9
  br label %30

30:                                               ; preds = %2, %27, %24
  %31 = phi %"class.v8::Value"* [ %29, %27 ], [ %26, %24 ], [ null, %2 ]
  ret %"class.v8::Value"* %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence5TraceEPNS_7VisitorE(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD2Ev(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %3, align 8
  %5 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %4, null
  %6 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD0Ev(%"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink65V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %3, align 8
  %5 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %4, null
  %6 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::V8UnionCompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_26V8CompositeOperationOrAutoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::V8CompositeOperationOrAuto", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 134086656
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %107

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26V8CompositeOperationOrAutoEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 4
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector"* %5 to i64*
  br label %88

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %7, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %7, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %41

41:                                               ; preds = %35, %79
  %42 = phi i32 [ 0, %35 ], [ %80, %79 ]
  %43 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %42) #9
  %44 = icmp eq %"class.v8::Value"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %41
  %46 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %47 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %48, i64 5
  %50 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, align 8
  call void %50(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %46) #9
  %51 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #9
  br label %97

52:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  %53 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %43, i64 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN5blink26V8CompositeOperationOrAuto13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %54 = extractvalue { i8, i64 } %53, 0
  %55 = extractvalue { i8, i64 } %53, 1
  %56 = icmp eq i8 %54, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZN5blink26V8CompositeOperationOrAuto13string_table_E.const, i64 0, i64 %55
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi i8* [ %59, %57 ], [ null, %52 ]
  %62 = phi i64 [ %55, %57 ], [ 0, %52 ]
  store i64 %62, i64* %38, align 8
  store i8* %61, i8** %39, align 8
  %63 = load i32, i32* %40, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = load i32, i32* %17, align 4
  %67 = load i32, i32* %16, align 8
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %76, label %69, !prof !3

69:                                               ; preds = %65
  %70 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %15, align 8
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %70, i64 %71
  %73 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %37, i64 16, i1 false) #9
  %74 = load i32, i32* %17, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %17, align 4
  br label %79

76:                                               ; preds = %65
  call void @_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.blink::V8CompositeOperationOrAuto"* nonnull dereferenceable(16) %7) #9
  br label %79

77:                                               ; preds = %60
  %78 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  br label %97

79:                                               ; preds = %69, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  %80 = add nuw i32 %42, 1
  %81 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %41, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.WTF::Vector"* %5 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = load i32, i32* %16, align 8
  %87 = load i32, i32* %17, align 4
  br label %88

88:                                               ; preds = %33, %83
  %89 = phi i64* [ %34, %33 ], [ %84, %83 ]
  %90 = phi i32 [ 0, %33 ], [ %87, %83 ]
  %91 = phi i32 [ %27, %33 ], [ %86, %83 ]
  %92 = phi i64 [ %28, %33 ], [ %85, %83 ]
  %93 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %95, align 8
  %96 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  store atomic i64 %92, i64* %96 monotonic, align 8
  store i32 %91, i32* %93, align 8
  store i32 0, i32* %16, align 8
  store i32 %90, i32* %94, align 4
  store i32 0, i32* %17, align 4
  br label %97

97:                                               ; preds = %45, %77, %88
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #9
  %98 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %15, align 8
  %99 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %98, null
  %100 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %98 to i8*
  br i1 %99, label %106, label %101, !prof !2

101:                                              ; preds = %97
  %102 = load i32, i32* %17, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104, !prof !3

104:                                              ; preds = %101
  store i32 0, i32* %17, align 4
  br label %105

105:                                              ; preds = %104, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #9
  store %"class.blink::V8CompositeOperationOrAuto"* null, %"class.blink::V8CompositeOperationOrAuto"** %15, align 8
  br label %106

106:                                              ; preds = %97, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %107

107:                                              ; preds = %106, %11
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink26V8CompositeOperationOrAutoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::V8CompositeOperationOrAuto"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %6, align 8
  %8 = icmp ugt %"class.blink::V8CompositeOperationOrAuto"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %7, i64 %10
  %12 = icmp ugt %"class.blink::V8CompositeOperationOrAuto"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26V8CompositeOperationOrAutoEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::V8CompositeOperationOrAuto"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::V8CompositeOperationOrAuto"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::V8CompositeOperationOrAuto"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::V8CompositeOperationOrAuto"* %1 to i64
  %56 = ptrtoint %"class.blink::V8CompositeOperationOrAuto"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26V8CompositeOperationOrAutoEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26V8CompositeOperationOrAutoEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::V8CompositeOperationOrAuto"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::V8CompositeOperationOrAuto"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::V8CompositeOperationOrAuto"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::V8CompositeOperationOrAuto"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::V8CompositeOperationOrAuto"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %100, i64 %103
  %105 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %104 to i8*
  %106 = bitcast %"class.blink::V8CompositeOperationOrAuto"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #9
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i64, i8**, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_26V8CompositeOperationOrAutoEN3WTF6VectorIS2_Lj0ENS3_18PartitionAllocatorEEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::internal::Isolate"*
  %10 = bitcast %"class.v8::Context"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %9, i64 %11) #9
  %13 = bitcast i64* %12 to %"class.v8::Context"*
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.v8::Context"* [ %13, %8 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %15) #9
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %14
  %21 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %4, i32 %17) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %15) #9
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #9
  %30 = bitcast i64* %29 to %"class.v8::Context"*
  br label %31

31:                                               ; preds = %20, %24
  %32 = phi %"class.v8::Context"* [ %30, %24 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::V8CompositeOperationOrAuto"*, %"class.blink::V8CompositeOperationOrAuto"** %33, align 8
  %35 = load i32, i32* %16, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %74, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.v8::Array"* %21 to %"class.v8::Object"*
  br label %41

41:                                               ; preds = %39, %70
  %42 = phi i32 [ 0, %39 ], [ %71, %70 ]
  %43 = phi %"class.blink::V8CompositeOperationOrAuto"* [ %34, %39 ], [ %72, %70 ]
  %44 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %45 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %43, i64 0, i32 0, i32 1
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %41
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %48
  %52 = tail call i64 @strlen(i8* nonnull %46) #10
  %53 = trunc i64 %52 to i32
  %54 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %44, i8* nonnull %46, i32 0, i32 %53) #9
  %55 = icmp eq %"class.v8::String"* %54, null
  br i1 %55, label %56, label %62, !prof !3

56:                                               ; preds = %51
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %76

57:                                               ; preds = %41, %48
  %58 = ptrtoint %"class.v8::Isolate"* %44 to i64
  %59 = add i64 %58, 200
  %60 = inttoptr i64 %59 to %"class.v8::String"*
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %51, %57
  %63 = phi %"class.v8::String"* [ %60, %57 ], [ %54, %51 ]
  %64 = bitcast %"class.v8::String"* %63 to %"class.v8::Value"*
  %65 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %40, %"class.v8::Context"* %32, i32 %42, %"class.v8::Value"* nonnull %64) #9
  %66 = trunc i16 %65 to i8
  %67 = icmp eq i8 %66, 0
  %68 = icmp ult i16 %65, 256
  %69 = or i1 %68, %67
  br i1 %69, label %76, label %70, !prof !4

70:                                               ; preds = %62
  %71 = add i32 %42, 1
  %72 = getelementptr inbounds %"class.blink::V8CompositeOperationOrAuto", %"class.blink::V8CompositeOperationOrAuto"* %43, i64 1
  %73 = icmp eq %"class.blink::V8CompositeOperationOrAuto"* %72, %37
  br i1 %73, label %74, label %41

74:                                               ; preds = %70, %31
  %75 = bitcast %"class.v8::Array"* %21 to %"class.v8::Value"*
  br label %76

76:                                               ; preds = %57, %62, %56, %74
  %77 = phi %"class.v8::Value"* [ %75, %74 ], [ null, %56 ], [ null, %62 ], [ null, %57 ]
  ret %"class.v8::Value"* %77
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2002, i32 2000}
