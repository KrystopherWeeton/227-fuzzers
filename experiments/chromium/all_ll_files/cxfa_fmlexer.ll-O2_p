; ModuleID = '../../third_party/pdfium/xfa/fxfa/fm2js/cxfa_fmlexer.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/fm2js/cxfa_fmlexer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.(anonymous namespace)::XFA_FMKeyword" = type { i32, i8* }
%"struct.CXFA_FMLexer::Token" = type <{ %"class.fxcrt::StringViewTemplate", i32, [4 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CXFA_FMLexer = type <{ %"class.pdfium::span.0", i64, i8, [7 x i8] }>
%"class.pdfium::span.0" = type { %"class.fxcrt::UnownedPtr.1", i64 }
%"class.fxcrt::UnownedPtr.1" = type { i32* }

@_ZN12_GLOBAL__N_18keyWordsE = internal constant [37 x %"struct.(anonymous namespace)::XFA_FMKeyword"] [%"struct.(anonymous namespace)::XFA_FMKeyword" { i32 22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 34, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 49, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 50, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0) }, %"struct.(anonymous namespace)::XFA_FMKeyword" { i32 58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0) }], align 16
@.str = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"eq\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"ge\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"gt\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"eof\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"var\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"then\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"downto\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"infinity\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"endwhile\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"foreach\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"endfunc\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"elseif\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"endfor\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"upto\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"endif\00", align 1

@_ZN12CXFA_FMLexer5TokenC1E12XFA_FM_TOKEN = hidden unnamed_addr alias void (%"struct.CXFA_FMLexer::Token"*, i32), void (%"struct.CXFA_FMLexer::Token"*, i32)* @_ZN12CXFA_FMLexer5TokenC2E12XFA_FM_TOKEN
@_ZN12CXFA_FMLexer5TokenC1Ev = hidden unnamed_addr alias void (%"struct.CXFA_FMLexer::Token"*), void (%"struct.CXFA_FMLexer::Token"*)* @_ZN12CXFA_FMLexer5TokenC2Ev
@_ZN12CXFA_FMLexer5TokenC1ERKS0_ = hidden unnamed_addr alias void (%"struct.CXFA_FMLexer::Token"*, %"struct.CXFA_FMLexer::Token"*), void (%"struct.CXFA_FMLexer::Token"*, %"struct.CXFA_FMLexer::Token"*)* @_ZN12CXFA_FMLexer5TokenC2ERKS0_
@_ZN12CXFA_FMLexer5TokenD1Ev = hidden unnamed_addr alias void (%"struct.CXFA_FMLexer::Token"*), void (%"struct.CXFA_FMLexer::Token"*)* @_ZN12CXFA_FMLexer5TokenD2Ev
@_ZN12CXFA_FMLexerC1EN5fxcrt18StringViewTemplateIwEE = hidden unnamed_addr alias void (%class.CXFA_FMLexer*, %"class.fxcrt::StringViewTemplate"*), void (%class.CXFA_FMLexer*, %"class.fxcrt::StringViewTemplate"*)* @_ZN12CXFA_FMLexerC2EN5fxcrt18StringViewTemplateIwEE
@_ZN12CXFA_FMLexerD1Ev = hidden unnamed_addr alias void (%class.CXFA_FMLexer*), void (%class.CXFA_FMLexer*)* @_ZN12CXFA_FMLexerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer5TokenC2E12XFA_FM_TOKEN(%"struct.CXFA_FMLexer::Token"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer5TokenC2Ev(%"struct.CXFA_FMLexer::Token"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #7
  %3 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer5TokenC2ERKS0_(%"struct.CXFA_FMLexer::Token"* nocapture, %"struct.CXFA_FMLexer::Token"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  %4 = bitcast %"struct.CXFA_FMLexer::Token"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 20, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12CXFA_FMLexer5TokenD2Ev(%"struct.CXFA_FMLexer::Token"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexerC2EN5fxcrt18StringViewTemplateIwEE(%class.CXFA_FMLexer* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to <2 x i64>*
  %4 = load <2 x i64>, <2 x i64>* %3, align 8, !noalias !2
  %5 = bitcast %class.CXFA_FMLexer* %0 to <2 x i64>*
  store <2 x i64> %4, <2 x i64>* %5, align 8, !alias.scope !5
  %6 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %0, i64 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12CXFA_FMLexerD2Ev(%class.CXFA_FMLexer* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer9NextTokenEv(%"struct.CXFA_FMLexer::Token"* noalias sret, %class.CXFA_FMLexer*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %308

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  br label %17

14:                                               ; preds = %2
  %15 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #7
  %16 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %16, align 8
  br label %311

17:                                               ; preds = %12, %305
  %18 = phi i64 [ %8, %12 ], [ %306, %305 ]
  %19 = icmp ugt i64 %10, %18
  br i1 %19, label %21, label %20, !prof !9

20:                                               ; preds = %17
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !10
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !11
  unreachable

21:                                               ; preds = %17
  %22 = load i32*, i32** %13, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %18
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %308, label %26

26:                                               ; preds = %21
  %27 = add i32 %24, -9
  %28 = icmp ult i32 %27, 5
  %29 = add i32 %24, -32
  %30 = icmp ult i32 %29, 55264
  %31 = or i1 %28, %30
  %32 = add i32 %24, -57344
  %33 = icmp ult i32 %32, 8190
  %34 = or i1 %33, %31
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  store i8 1, i8* %3, align 8
  %36 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #7
  %37 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %37, align 8
  br label %311

38:                                               ; preds = %26
  switch i32 %24, label %297 [
    i32 10, label %39
    i32 13, label %41
    i32 59, label %43
    i32 34, label %69
    i32 48, label %70
    i32 49, label %70
    i32 50, label %70
    i32 51, label %70
    i32 52, label %70
    i32 53, label %70
    i32 54, label %70
    i32 55, label %70
    i32 56, label %70
    i32 57, label %70
    i32 61, label %71
    i32 60, label %100
    i32 62, label %132
    i32 44, label %161
    i32 40, label %165
    i32 41, label %169
    i32 91, label %173
    i32 93, label %177
    i32 38, label %181
    i32 124, label %184
    i32 43, label %188
    i32 45, label %192
    i32 42, label %196
    i32 47, label %200
    i32 46, label %251
    i32 12, label %295
    i32 11, label %295
    i32 9, label %295
    i32 32, label %295
  ]

39:                                               ; preds = %38
  %40 = add nuw i64 %18, 1
  store i64 %40, i64* %7, align 8
  br label %305

41:                                               ; preds = %38
  %42 = add nuw i64 %18, 1
  store i64 %42, i64* %7, align 8
  br label %305

43:                                               ; preds = %38
  %44 = add nuw i64 %18, 1
  store i64 %44, i64* %7, align 8
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi i64 [ %68, %66 ], [ %44, %43 ]
  %47 = icmp ult i64 %46, %10
  br i1 %47, label %48, label %305

48:                                               ; preds = %45
  %49 = getelementptr inbounds i32, i32* %22, i64 %46
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %305, label %52

52:                                               ; preds = %48
  %53 = add i32 %50, -9
  %54 = icmp ult i32 %53, 5
  %55 = add i32 %50, -32
  %56 = icmp ult i32 %55, 55264
  %57 = or i1 %54, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = add i32 %50, -57344
  %60 = icmp ult i32 %59, 8190
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  store i8 1, i8* %3, align 8
  br label %305

62:                                               ; preds = %52
  %63 = icmp eq i32 %50, 13
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = add nuw i64 %46, 1
  store i64 %65, i64* %7, align 8
  br label %305

66:                                               ; preds = %62, %58
  %67 = icmp eq i32 %50, 10
  %68 = add nuw i64 %46, 1
  store i64 %68, i64* %7, align 8
  br i1 %67, label %305, label %45

69:                                               ; preds = %38
  tail call void @_ZN12CXFA_FMLexer16AdvanceForStringEv(%"struct.CXFA_FMLexer::Token"* sret %0, %class.CXFA_FMLexer* %1)
  br label %311

70:                                               ; preds = %38, %38, %38, %38, %38, %38, %38, %38, %38, %38
  tail call void @_ZN12CXFA_FMLexer16AdvanceForNumberEv(%"struct.CXFA_FMLexer::Token"* sret %0, %class.CXFA_FMLexer* %1)
  br label %311

71:                                               ; preds = %38
  %72 = add nuw i64 %18, 1
  store i64 %72, i64* %7, align 8
  %73 = icmp ult i64 %72, %10
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #7
  %76 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 10, i32* %76, align 8
  br label %311

77:                                               ; preds = %71
  %78 = getelementptr inbounds i32, i32* %22, i64 %72
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, -9
  %81 = icmp ult i32 %80, 5
  %82 = add i32 %79, -32
  %83 = icmp ult i32 %82, 55264
  %84 = or i1 %81, %83
  br i1 %84, label %91, label %85

85:                                               ; preds = %77
  %86 = add i32 %79, -57344
  %87 = icmp ult i32 %86, 8190
  br i1 %87, label %97, label %88

88:                                               ; preds = %85
  store i8 1, i8* %3, align 8
  %89 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #7
  %90 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %90, align 8
  br label %311

91:                                               ; preds = %77
  %92 = icmp eq i32 %79, 61
  br i1 %92, label %93, label %97

93:                                               ; preds = %91
  %94 = add nuw i64 %18, 2
  store i64 %94, i64* %7, align 8
  %95 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #7
  %96 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 20, i32* %96, align 8
  br label %311

97:                                               ; preds = %85, %91
  %98 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #7
  %99 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 10, i32* %99, align 8
  br label %311

100:                                              ; preds = %38
  %101 = add nuw i64 %18, 1
  store i64 %101, i64* %7, align 8
  %102 = icmp ult i64 %101, %10
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #7
  %105 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 9, i32* %105, align 8
  br label %311

106:                                              ; preds = %100
  %107 = getelementptr inbounds i32, i32* %22, i64 %101
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, -9
  %110 = icmp ult i32 %109, 5
  %111 = add i32 %108, -32
  %112 = icmp ult i32 %111, 55264
  %113 = or i1 %110, %112
  br i1 %113, label %120, label %114

114:                                              ; preds = %106
  %115 = add i32 %108, -57344
  %116 = icmp ult i32 %115, 8190
  br i1 %116, label %129, label %117

117:                                              ; preds = %114
  store i8 1, i8* %3, align 8
  %118 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #7
  %119 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %119, align 8
  br label %311

120:                                              ; preds = %106
  switch i32 %108, label %129 [
    i32 61, label %121
    i32 62, label %125
  ]

121:                                              ; preds = %120
  %122 = add nuw i64 %18, 2
  store i64 %122, i64* %7, align 8
  %123 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #7
  %124 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 18, i32* %124, align 8
  br label %311

125:                                              ; preds = %120
  %126 = add nuw i64 %18, 2
  store i64 %126, i64* %7, align 8
  %127 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 16, i1 false) #7
  %128 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 19, i32* %128, align 8
  br label %311

129:                                              ; preds = %120, %114
  %130 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #7
  %131 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 9, i32* %131, align 8
  br label %311

132:                                              ; preds = %38
  %133 = add nuw i64 %18, 1
  store i64 %133, i64* %7, align 8
  %134 = icmp ult i64 %133, %10
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #7
  %137 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 11, i32* %137, align 8
  br label %311

138:                                              ; preds = %132
  %139 = getelementptr inbounds i32, i32* %22, i64 %133
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, -9
  %142 = icmp ult i32 %141, 5
  %143 = add i32 %140, -32
  %144 = icmp ult i32 %143, 55264
  %145 = or i1 %142, %144
  br i1 %145, label %152, label %146

146:                                              ; preds = %138
  %147 = add i32 %140, -57344
  %148 = icmp ult i32 %147, 8190
  br i1 %148, label %158, label %149

149:                                              ; preds = %146
  store i8 1, i8* %3, align 8
  %150 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 16, i1 false) #7
  %151 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %151, align 8
  br label %311

152:                                              ; preds = %138
  %153 = icmp eq i32 %140, 61
  br i1 %153, label %154, label %158

154:                                              ; preds = %152
  %155 = add nuw i64 %18, 2
  store i64 %155, i64* %7, align 8
  %156 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #7
  %157 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 21, i32* %157, align 8
  br label %311

158:                                              ; preds = %146, %152
  %159 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 16, i1 false) #7
  %160 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 11, i32* %160, align 8
  br label %311

161:                                              ; preds = %38
  %162 = add nuw i64 %18, 1
  store i64 %162, i64* %7, align 8
  %163 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 16, i1 false) #7
  %164 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 5, i32* %164, align 8
  br label %311

165:                                              ; preds = %38
  %166 = add nuw i64 %18, 1
  store i64 %166, i64* %7, align 8
  %167 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 16, i1 false) #7
  %168 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 1, i32* %168, align 8
  br label %311

169:                                              ; preds = %38
  %170 = add nuw i64 %18, 1
  store i64 %170, i64* %7, align 8
  %171 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #7
  %172 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 2, i32* %172, align 8
  br label %311

173:                                              ; preds = %38
  %174 = add nuw i64 %18, 1
  store i64 %174, i64* %7, align 8
  %175 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false) #7
  %176 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 12, i32* %176, align 8
  br label %311

177:                                              ; preds = %38
  %178 = add nuw i64 %18, 1
  store i64 %178, i64* %7, align 8
  %179 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 16, i1 false) #7
  %180 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 13, i32* %180, align 8
  br label %311

181:                                              ; preds = %38
  %182 = add nuw i64 %18, 1
  store i64 %182, i64* %7, align 8
  %183 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 20, i1 false)
  br label %311

184:                                              ; preds = %38
  %185 = add nuw i64 %18, 1
  store i64 %185, i64* %7, align 8
  %186 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #7
  %187 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 14, i32* %187, align 8
  br label %311

188:                                              ; preds = %38
  %189 = add nuw i64 %18, 1
  store i64 %189, i64* %7, align 8
  %190 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 16, i1 false) #7
  %191 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 4, i32* %191, align 8
  br label %311

192:                                              ; preds = %38
  %193 = add nuw i64 %18, 1
  store i64 %193, i64* %7, align 8
  %194 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 16, i1 false) #7
  %195 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 6, i32* %195, align 8
  br label %311

196:                                              ; preds = %38
  %197 = add nuw i64 %18, 1
  store i64 %197, i64* %7, align 8
  %198 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 16, i1 false) #7
  %199 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 3, i32* %199, align 8
  br label %311

200:                                              ; preds = %38
  %201 = add nuw i64 %18, 1
  store i64 %201, i64* %7, align 8
  %202 = icmp ult i64 %201, %10
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #7
  %205 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 8, i32* %205, align 8
  br label %311

206:                                              ; preds = %200
  %207 = getelementptr inbounds i32, i32* %22, i64 %201
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %208, -9
  %210 = icmp ult i32 %209, 5
  %211 = add i32 %208, -32
  %212 = icmp ult i32 %211, 55264
  %213 = or i1 %210, %212
  br i1 %213, label %220, label %214

214:                                              ; preds = %206
  %215 = add i32 %208, -57344
  %216 = icmp ult i32 %215, 8190
  br i1 %216, label %222, label %217

217:                                              ; preds = %214
  store i8 1, i8* %3, align 8
  %218 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 16, i1 false) #7
  %219 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %219, align 8
  br label %311

220:                                              ; preds = %206
  %221 = icmp eq i32 %208, 47
  br i1 %221, label %225, label %222

222:                                              ; preds = %220, %214
  %223 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 0, i64 16, i1 false) #7
  %224 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 8, i32* %224, align 8
  br label %311

225:                                              ; preds = %220
  %226 = add nuw i64 %18, 2
  store i64 %226, i64* %7, align 8
  br label %227

227:                                              ; preds = %248, %225
  %228 = phi i64 [ %250, %248 ], [ %226, %225 ]
  %229 = icmp ult i64 %228, %10
  br i1 %229, label %230, label %305

230:                                              ; preds = %227
  %231 = getelementptr inbounds i32, i32* %22, i64 %228
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %305, label %234

234:                                              ; preds = %230
  %235 = add i32 %232, -9
  %236 = icmp ult i32 %235, 5
  %237 = add i32 %232, -32
  %238 = icmp ult i32 %237, 55264
  %239 = or i1 %236, %238
  br i1 %239, label %244, label %240

240:                                              ; preds = %234
  %241 = add i32 %232, -57344
  %242 = icmp ult i32 %241, 8190
  br i1 %242, label %248, label %243

243:                                              ; preds = %240
  store i8 1, i8* %3, align 8
  br label %305

244:                                              ; preds = %234
  %245 = icmp eq i32 %232, 13
  br i1 %245, label %246, label %248

246:                                              ; preds = %244
  %247 = add nuw i64 %228, 1
  store i64 %247, i64* %7, align 8
  br label %305

248:                                              ; preds = %244, %240
  %249 = icmp eq i32 %232, 10
  %250 = add nuw i64 %228, 1
  store i64 %250, i64* %7, align 8
  br i1 %249, label %305, label %227

251:                                              ; preds = %38
  %252 = add nuw i64 %18, 1
  store i64 %252, i64* %7, align 8
  %253 = icmp ult i64 %252, %10
  br i1 %253, label %257, label %254

254:                                              ; preds = %251
  %255 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %255, i8 0, i64 16, i1 false) #7
  %256 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 7, i32* %256, align 8
  br label %311

257:                                              ; preds = %251
  %258 = getelementptr inbounds i32, i32* %22, i64 %252
  %259 = load i32, i32* %258, align 4
  %260 = add i32 %259, -9
  %261 = icmp ult i32 %260, 5
  %262 = add i32 %259, -32
  %263 = icmp ult i32 %262, 55264
  %264 = or i1 %261, %263
  br i1 %264, label %271, label %265

265:                                              ; preds = %257
  %266 = add i32 %259, -57344
  %267 = icmp ult i32 %266, 8190
  br i1 %267, label %292, label %268

268:                                              ; preds = %265
  store i8 1, i8* %3, align 8
  %269 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 16, i1 false) #7
  %270 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %270, align 8
  br label %311

271:                                              ; preds = %257
  switch i32 %259, label %284 [
    i32 46, label %272
    i32 42, label %276
    i32 35, label %280
  ]

272:                                              ; preds = %271
  %273 = add nuw i64 %18, 2
  store i64 %273, i64* %7, align 8
  %274 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #7
  %275 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 17, i32* %275, align 8
  br label %311

276:                                              ; preds = %271
  %277 = add nuw i64 %18, 2
  store i64 %277, i64* %7, align 8
  %278 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 16, i1 false) #7
  %279 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 16, i32* %279, align 8
  br label %311

280:                                              ; preds = %271
  %281 = add nuw i64 %18, 2
  store i64 %281, i64* %7, align 8
  %282 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 16, i1 false) #7
  %283 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 15, i32* %283, align 8
  br label %311

284:                                              ; preds = %271
  %285 = icmp ugt i32 %259, 127
  br i1 %285, label %292, label %286

286:                                              ; preds = %284
  %287 = tail call i32 @iswdigit(i32 %259) #7
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %292, label %289

289:                                              ; preds = %286
  %290 = load i64, i64* %7, align 8
  %291 = add i64 %290, -1
  store i64 %291, i64* %7, align 8
  tail call void @_ZN12CXFA_FMLexer16AdvanceForNumberEv(%"struct.CXFA_FMLexer::Token"* sret %0, %class.CXFA_FMLexer* %1)
  br label %311

292:                                              ; preds = %286, %265, %284
  %293 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %293, i8 0, i64 16, i1 false) #7
  %294 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 7, i32* %294, align 8
  br label %311

295:                                              ; preds = %38, %38, %38, %38
  %296 = add nuw i64 %18, 1
  store i64 %296, i64* %7, align 8
  br label %305

297:                                              ; preds = %38
  %298 = tail call signext i8 @u_isalpha_69(i32 %24) #7
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %304

300:                                              ; preds = %297
  switch i32 %24, label %301 [
    i32 95, label %304
    i32 36, label %304
    i32 33, label %304
  ]

301:                                              ; preds = %300
  store i8 1, i8* %3, align 8
  %302 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 16, i1 false) #7
  %303 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 67, i32* %303, align 8
  br label %311

304:                                              ; preds = %300, %300, %300, %297
  tail call void @_ZN12CXFA_FMLexer20AdvanceForIdentifierEv(%"struct.CXFA_FMLexer::Token"* sret %0, %class.CXFA_FMLexer* %1)
  br label %311

305:                                              ; preds = %248, %230, %227, %66, %48, %45, %246, %243, %64, %61, %295, %41, %39
  %306 = phi i64 [ %247, %246 ], [ %228, %243 ], [ %65, %64 ], [ %46, %61 ], [ %296, %295 ], [ %42, %41 ], [ %40, %39 ], [ %68, %66 ], [ %46, %48 ], [ %46, %45 ], [ %250, %248 ], [ %228, %230 ], [ %228, %227 ]
  %307 = icmp ult i64 %306, %10
  br i1 %307, label %17, label %308

308:                                              ; preds = %21, %305, %6
  %309 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 16, i1 false) #7
  %310 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 36, i32* %310, align 8
  br label %311

311:                                              ; preds = %308, %304, %301, %292, %289, %280, %276, %272, %268, %254, %222, %217, %203, %196, %192, %188, %184, %181, %177, %173, %169, %165, %161, %158, %154, %149, %135, %129, %125, %121, %117, %103, %97, %93, %88, %74, %70, %69, %35, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer17AdvanceForCommentEv(%class.CXFA_FMLexer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  %5 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %5, align 8
  br label %8

8:                                                ; preds = %31, %1
  %9 = phi i64 [ %33, %31 ], [ %4, %1 ]
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %11, label %34

11:                                               ; preds = %8
  %12 = load i32*, i32** %6, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 %9
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = add i32 %14, -9
  %18 = icmp ult i32 %17, 5
  %19 = add i32 %14, -32
  %20 = icmp ult i32 %19, 55264
  %21 = or i1 %18, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = add i32 %14, -57344
  %24 = icmp ult i32 %23, 8190
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %0, i64 0, i32 2
  store i8 1, i8* %26, align 8
  br label %34

27:                                               ; preds = %16
  %28 = icmp eq i32 %14, 13
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = add nuw i64 %9, 1
  store i64 %30, i64* %2, align 8
  br label %34

31:                                               ; preds = %22, %27
  %32 = icmp eq i32 %14, 10
  %33 = add nuw i64 %9, 1
  store i64 %33, i64* %2, align 8
  br i1 %32, label %34, label %8

34:                                               ; preds = %8, %11, %31, %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer16AdvanceForStringEv(%"struct.CXFA_FMLexer::Token"* noalias nocapture sret, %class.CXFA_FMLexer* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %84

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %9, %80
  %12 = phi i64 [ %5, %9 ], [ %82, %80 ]
  %13 = phi i64 [ %4, %9 ], [ %81, %80 ]
  %14 = icmp ugt i64 %7, %12
  br i1 %14, label %16, label %15, !prof !9

15:                                               ; preds = %11
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !10
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !11
  unreachable

16:                                               ; preds = %11
  %17 = load i32*, i32** %10, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %84, label %21

21:                                               ; preds = %16
  %22 = add i32 %19, -9
  %23 = icmp ult i32 %22, 5
  %24 = add i32 %19, -32
  %25 = icmp ult i32 %24, 55264
  %26 = or i1 %23, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = add i32 %19, -57344
  %29 = icmp ult i32 %28, 8190
  br i1 %29, label %80, label %84

30:                                               ; preds = %21
  %31 = icmp eq i32 %19, 34
  br i1 %31, label %32, label %80

32:                                               ; preds = %30
  %33 = add i64 %13, 2
  store i64 %33, i64* %3, align 8
  %34 = icmp ult i64 %33, %7
  br i1 %34, label %51, label %35

35:                                               ; preds = %32
  %36 = sub i64 %33, %4
  %37 = icmp ult i64 %7, %4
  br i1 %37, label %38, label %39, !prof !12

38:                                               ; preds = %35
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !13, !srcloc !16
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !13, !srcloc !17
  unreachable

39:                                               ; preds = %35
  %40 = icmp eq i64 %36, -1
  %41 = sub i64 %7, %4
  %42 = icmp ult i64 %41, %36
  %43 = xor i1 %40, true
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %46, !prof !12

45:                                               ; preds = %39
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !13, !srcloc !18
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !13, !srcloc !19
  unreachable

46:                                               ; preds = %39
  %47 = getelementptr inbounds i32, i32* %17, i64 %4
  %48 = select i1 %40, i64 %41, i64 %36
  %49 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %47, i32** %49, align 8
  %50 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %50, align 8
  br label %87

51:                                               ; preds = %32
  %52 = getelementptr inbounds i32, i32* %17, i64 %33
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 34
  br i1 %54, label %80, label %55

55:                                               ; preds = %51
  %56 = add i32 %53, -9
  %57 = icmp ult i32 %56, 5
  %58 = add i32 %53, -32
  %59 = icmp ult i32 %58, 55264
  %60 = or i1 %57, %59
  %61 = add i32 %53, -57344
  %62 = icmp ult i32 %61, 8190
  %63 = or i1 %62, %60
  br i1 %63, label %64, label %84

64:                                               ; preds = %55
  %65 = sub i64 %33, %4
  %66 = icmp ult i64 %7, %4
  br i1 %66, label %67, label %68, !prof !12

67:                                               ; preds = %64
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !20, !srcloc !16
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !20, !srcloc !17
  unreachable

68:                                               ; preds = %64
  %69 = icmp eq i64 %65, -1
  %70 = sub i64 %7, %4
  %71 = icmp ult i64 %70, %65
  %72 = xor i1 %69, true
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %75, !prof !12

74:                                               ; preds = %68
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !20, !srcloc !18
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !20, !srcloc !19
  unreachable

75:                                               ; preds = %68
  %76 = getelementptr inbounds i32, i32* %17, i64 %4
  %77 = select i1 %69, i64 %70, i64 %65
  %78 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %76, i32** %78, align 8
  %79 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %77, i64* %79, align 8
  br label %87

80:                                               ; preds = %27, %51, %30
  %81 = phi i64 [ %12, %27 ], [ %33, %51 ], [ %12, %30 ]
  %82 = add nuw i64 %81, 1
  store i64 %82, i64* %3, align 8
  %83 = icmp ult i64 %82, %7
  br i1 %83, label %11, label %84

84:                                               ; preds = %27, %16, %80, %2, %55
  %85 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 2
  store i8 1, i8* %85, align 8
  %86 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #7
  br label %87

87:                                               ; preds = %84, %75, %46
  %88 = phi i32 [ 67, %84 ], [ 65, %75 ], [ 65, %46 ]
  %89 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 %88, i32* %89, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer16AdvanceForNumberEv(%"struct.CXFA_FMLexer::Token"* noalias nocapture sret, %class.CXFA_FMLexer* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 %6
  %14 = sub i64 %8, %6
  %15 = trunc i64 %14 to i32
  %16 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %13, i32 %15, i32* nonnull %3) #7
  %17 = load i64, i64* %5, align 8
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = add i64 %17, %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %10
  %23 = load i64, i64* %7, align 8
  %24 = icmp ult i64 %20, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %20
  %29 = load i32, i32* %28, align 4
  %30 = call signext i8 @u_isalpha_69(i32 %29) #7
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = load i64, i64* %5, align 8
  %34 = load i64, i64* %7, align 8, !noalias !23
  br label %38

35:                                               ; preds = %2, %25, %10
  %36 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 2
  store i8 1, i8* %36, align 8
  %37 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #7
  br label %58

38:                                               ; preds = %32, %22
  %39 = phi i64 [ %34, %32 ], [ %23, %22 ]
  %40 = phi i64 [ %33, %32 ], [ %17, %22 ]
  %41 = sub i64 %20, %40
  %42 = icmp ult i64 %39, %40
  br i1 %42, label %43, label %44, !prof !12

43:                                               ; preds = %38
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !23, !srcloc !16
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !23, !srcloc !17
  unreachable

44:                                               ; preds = %38
  %45 = icmp eq i64 %41, -1
  %46 = sub i64 %39, %40
  %47 = icmp ult i64 %46, %41
  %48 = xor i1 %45, true
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %51, !prof !12

50:                                               ; preds = %44
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !23, !srcloc !18
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !23, !srcloc !19
  unreachable

51:                                               ; preds = %44
  %52 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8, !noalias !23
  %54 = getelementptr inbounds i32, i32* %53, i64 %40
  %55 = select i1 %45, i64 %46, i64 %41
  store i64 %20, i64* %5, align 8
  %56 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %54, i32** %56, align 8
  %57 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %57, align 8
  br label %58

58:                                               ; preds = %51, %35
  %59 = phi i32 [ 66, %51 ], [ 67, %35 ]
  %60 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 %59, i32* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CXFA_FMLexer20AdvanceForIdentifierEv(%"struct.CXFA_FMLexer::Token"* noalias nocapture sret, %class.CXFA_FMLexer* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %45

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %9, %40
  %12 = phi i64 [ %7, %9 ], [ %43, %40 ]
  %13 = phi i64 [ %5, %9 ], [ %42, %40 ]
  %14 = icmp ugt i64 %12, %13
  br i1 %14, label %16, label %15, !prof !9

15:                                               ; preds = %11
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !10
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !11
  unreachable

16:                                               ; preds = %11
  %17 = load i32*, i32** %10, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %13
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %16
  %22 = add i32 %19, -9
  %23 = icmp ult i32 %22, 5
  %24 = add i32 %19, -32
  %25 = icmp ult i32 %24, 55264
  %26 = or i1 %23, %25
  %27 = add i32 %19, -57344
  %28 = icmp ult i32 %27, 8190
  %29 = or i1 %28, %26
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 2
  store i8 1, i8* %31, align 8
  %32 = bitcast %"struct.CXFA_FMLexer::Token"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #7
  br label %122

33:                                               ; preds = %21
  %34 = tail call signext i8 @u_isalnum_69(i32 %19) #7
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %33
  switch i32 %19, label %37 [
    i32 95, label %40
    i32 36, label %40
  ]

37:                                               ; preds = %36
  %38 = load i64, i64* %3, align 8
  %39 = load i64, i64* %6, align 8, !noalias !26
  br label %45

40:                                               ; preds = %33, %36, %36
  %41 = load i64, i64* %3, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %6, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %11, label %45

45:                                               ; preds = %16, %40, %37, %2
  %46 = phi i64 [ %7, %2 ], [ %39, %37 ], [ %12, %16 ], [ %43, %40 ]
  %47 = phi i64 [ %5, %2 ], [ %38, %37 ], [ %13, %16 ], [ %42, %40 ]
  %48 = sub i64 %47, %4
  %49 = icmp ult i64 %46, %4
  br i1 %49, label %50, label %51, !prof !12

50:                                               ; preds = %45
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !26, !srcloc !16
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !26, !srcloc !17
  unreachable

51:                                               ; preds = %45
  %52 = icmp eq i64 %48, -1
  %53 = sub i64 %46, %4
  %54 = icmp ult i64 %53, %48
  %55 = xor i1 %52, true
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %58, !prof !12

57:                                               ; preds = %51
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !26, !srcloc !18
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !26, !srcloc !19
  unreachable

58:                                               ; preds = %51
  %59 = getelementptr inbounds %class.CXFA_FMLexer, %class.CXFA_FMLexer* %1, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !26
  %61 = getelementptr inbounds i32, i32* %60, i64 %4
  %62 = select i1 %52, i64 %53, i64 %48
  %63 = icmp eq i64 %62, 0
  br label %64

64:                                               ; preds = %89, %58
  %65 = phi %"struct.(anonymous namespace)::XFA_FMKeyword"* [ getelementptr inbounds ([37 x %"struct.(anonymous namespace)::XFA_FMKeyword"], [37 x %"struct.(anonymous namespace)::XFA_FMKeyword"]* @_ZN12_GLOBAL__N_18keyWordsE, i64 0, i64 0), %58 ], [ %90, %89 ]
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::XFA_FMKeyword", %"struct.(anonymous namespace)::XFA_FMKeyword"* %65, i64 0, i32 1
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = tail call i64 @strlen(i8* nonnull %67) #8
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i64 [ %70, %69 ], [ 0, %64 ]
  %73 = icmp eq i64 %62, %72
  br i1 %73, label %74, label %89

74:                                               ; preds = %71
  br i1 %63, label %92, label %77

75:                                               ; preds = %83
  %76 = icmp eq i64 %88, %62
  br i1 %76, label %92, label %77

77:                                               ; preds = %74, %75
  %78 = phi i64 [ %88, %75 ], [ 0, %74 ]
  %79 = getelementptr inbounds i32, i32* %61, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, -1
  %82 = icmp ugt i32 %81, 126
  br i1 %82, label %89, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds i8, i8* %67, i64 %78
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %80, %86
  %88 = add nuw i64 %78, 1
  br i1 %87, label %75, label %89

89:                                               ; preds = %83, %77, %71
  %90 = getelementptr inbounds %"struct.(anonymous namespace)::XFA_FMKeyword", %"struct.(anonymous namespace)::XFA_FMKeyword"* %65, i64 1
  %91 = icmp eq %"struct.(anonymous namespace)::XFA_FMKeyword"* %90, getelementptr inbounds ([37 x %"struct.(anonymous namespace)::XFA_FMKeyword"], [37 x %"struct.(anonymous namespace)::XFA_FMKeyword"]* @_ZN12_GLOBAL__N_18keyWordsE, i64 1, i64 0)
  br i1 %91, label %118, label %64

92:                                               ; preds = %74, %75
  %93 = icmp eq %"struct.(anonymous namespace)::XFA_FMKeyword"* %65, getelementptr inbounds ([37 x %"struct.(anonymous namespace)::XFA_FMKeyword"], [37 x %"struct.(anonymous namespace)::XFA_FMKeyword"]* @_ZN12_GLOBAL__N_18keyWordsE, i64 1, i64 0)
  br i1 %93, label %118, label %94

94:                                               ; preds = %92
  br i1 %68, label %97, label %95

95:                                               ; preds = %94
  %96 = tail call i64 @strlen(i8* nonnull %67) #8
  br label %97

97:                                               ; preds = %95, %94
  %98 = phi i64 [ %96, %95 ], [ 0, %94 ]
  %99 = icmp eq i64 %62, %98
  br i1 %99, label %100, label %118

100:                                              ; preds = %97
  br i1 %63, label %115, label %103

101:                                              ; preds = %109
  %102 = icmp eq i64 %114, %62
  br i1 %102, label %115, label %103

103:                                              ; preds = %100, %101
  %104 = phi i64 [ %114, %101 ], [ 0, %100 ]
  %105 = getelementptr inbounds i32, i32* %61, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, -1
  %108 = icmp ugt i32 %107, 126
  br i1 %108, label %118, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds i8, i8* %67, i64 %104
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %106, %112
  %114 = add nuw i64 %104, 1
  br i1 %113, label %101, label %118

115:                                              ; preds = %101, %100
  %116 = getelementptr inbounds %"struct.(anonymous namespace)::XFA_FMKeyword", %"struct.(anonymous namespace)::XFA_FMKeyword"* %65, i64 0, i32 0
  %117 = load i32, i32* %116, align 8
  br label %118

118:                                              ; preds = %89, %103, %109, %92, %97, %115
  %119 = phi i32 [ %117, %115 ], [ 60, %92 ], [ 60, %97 ], [ 60, %109 ], [ 60, %103 ], [ 60, %89 ]
  %120 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* %61, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %62, i64* %121, align 8
  br label %122

122:                                              ; preds = %118, %30
  %123 = phi i32 [ %119, %118 ], [ 67, %30 ]
  %124 = getelementptr inbounds %"struct.CXFA_FMLexer::Token", %"struct.CXFA_FMLexer::Token"* %0, i64 0, i32 1
  store i32 %123, i32* %124, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare float @_Z12FXSYS_wcstofPKwiPi(i32*, i32, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #5

declare signext i8 @u_isalpha_69(i32) local_unnamed_addr #4

declare signext i8 @u_isalnum_69(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt18StringViewTemplateIwE4spanEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt18StringViewTemplateIwE4spanEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN6pdfium9make_spanIKwEENS_4spanIT_EEPS3_m: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium9make_spanIKwEENS_4spanIT_EEPS3_m"}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{i32 -2143838661}
!11 = !{i32 -2143838640}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!15 = distinct !{!15, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!16 = !{i32 -2143839787}
!17 = !{i32 -2143839766}
!18 = !{i32 -2143839200}
!19 = !{i32 -2143839179}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!22 = distinct !{!22, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!25 = distinct !{!25, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK6pdfium4spanIKwE7subspanEmm: argument 0"}
!28 = distinct !{!28, !"_ZNK6pdfium4spanIKwE7subspanEmm"}
