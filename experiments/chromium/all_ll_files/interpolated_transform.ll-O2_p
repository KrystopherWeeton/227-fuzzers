; ModuleID = '../../ui/gfx/interpolated_transform.cc'
source_filename = "../../ui/gfx/interpolated_transform.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Quaternion" = type { double, double, double, double }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.ui::InterpolatedTransform" = type <{ i32 (...)**, float, float, %"class.std::__1::unique_ptr", i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::InterpolatedTransform"* }
%"class.ui::InterpolatedRotation" = type { %"class.ui::InterpolatedTransform.base", float, float, [4 x i8] }
%"class.ui::InterpolatedTransform.base" = type <{ i32 (...)**, float, float, %"class.std::__1::unique_ptr", i8 }>
%"class.ui::InterpolatedAxisAngleRotation" = type { %"class.ui::InterpolatedTransform.base", %"class.gfx::Vector3dF", float, float }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.ui::InterpolatedScale" = type { %"class.ui::InterpolatedTransform.base", %"class.gfx::Point3F", %"class.gfx::Point3F", [4 x i8] }
%"class.gfx::Point3F" = type { float, float, float }
%"class.ui::InterpolatedTranslation" = type { %"class.ui::InterpolatedTransform.base", %"class.gfx::Point3F", %"class.gfx::Point3F", [4 x i8] }
%"class.gfx::PointF" = type { float, float }
%"class.ui::InterpolatedConstantTransform" = type { %"class.ui::InterpolatedTransform.base", [3 x i8], %"class.gfx::Transform" }
%"class.ui::InterpolatedTransformAboutPivot" = type { %"class.ui::InterpolatedTransform.base", %"class.std::__1::unique_ptr" }
%"class.gfx::Point" = type { i32, i32 }
%"class.ui::InterpolatedMatrixTransform" = type { %"class.ui::InterpolatedTransform.base", %"struct.gfx::DecomposedTransform", %"struct.gfx::DecomposedTransform" }
%"struct.gfx::DecomposedTransform" = type { [3 x float], [3 x float], [3 x float], [4 x float], %"class.gfx::Quaternion" }

@_ZTVN2ui21InterpolatedTransformE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN2ui20InterpolatedRotationE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedRotation"*)* @_ZN2ui20InterpolatedRotationD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedRotation"*, float)* @_ZNK2ui20InterpolatedRotation26InterpolateButDoNotComposeEf to i8*)] }, align 8
@_ZTVN2ui29InterpolatedAxisAngleRotationE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedAxisAngleRotation"*)* @_ZN2ui29InterpolatedAxisAngleRotationD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedAxisAngleRotation"*, float)* @_ZNK2ui29InterpolatedAxisAngleRotation26InterpolateButDoNotComposeEf to i8*)] }, align 8
@_ZTVN2ui17InterpolatedScaleE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedScale"*)* @_ZN2ui17InterpolatedScaleD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedScale"*, float)* @_ZNK2ui17InterpolatedScale26InterpolateButDoNotComposeEf to i8*)] }, align 8
@_ZTVN2ui23InterpolatedTranslationE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedTranslation"*)* @_ZN2ui23InterpolatedTranslationD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTranslation"*, float)* @_ZNK2ui23InterpolatedTranslation26InterpolateButDoNotComposeEf to i8*)] }, align 8
@_ZTVN2ui29InterpolatedConstantTransformE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedConstantTransform"*)* @_ZN2ui29InterpolatedConstantTransformD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedConstantTransform"*, float)* @_ZNK2ui29InterpolatedConstantTransform26InterpolateButDoNotComposeEf to i8*)] }, align 8
@_ZTVN2ui31InterpolatedTransformAboutPivotE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransformAboutPivot"*)* @_ZN2ui31InterpolatedTransformAboutPivotD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedTransformAboutPivot"*)* @_ZN2ui31InterpolatedTransformAboutPivotD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransformAboutPivot"*, float)* @_ZNK2ui31InterpolatedTransformAboutPivot26InterpolateButDoNotComposeEf to i8*)] }, align 8
@_ZTVN2ui27InterpolatedMatrixTransformE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to i8*), i8* bitcast (void (%"class.ui::InterpolatedMatrixTransform"*)* @_ZN2ui27InterpolatedMatrixTransformD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.ui::InterpolatedMatrixTransform"*, float)* @_ZNK2ui27InterpolatedMatrixTransform26InterpolateButDoNotComposeEf to i8*)] }, align 8
@__const._ZNK2ui27InterpolatedMatrixTransform26InterpolateButDoNotComposeEf.blended = private unnamed_addr constant { [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" } { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA", %"class.gfx::Quaternion" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } }, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4

@_ZN2ui21InterpolatedTransformD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedTransform"*), void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev
@_ZN2ui20InterpolatedRotationC1Eff = hidden unnamed_addr alias void (%"class.ui::InterpolatedRotation"*, float, float), void (%"class.ui::InterpolatedRotation"*, float, float)* @_ZN2ui20InterpolatedRotationC2Eff
@_ZN2ui20InterpolatedRotationC1Effff = hidden unnamed_addr alias void (%"class.ui::InterpolatedRotation"*, float, float, float, float), void (%"class.ui::InterpolatedRotation"*, float, float, float, float)* @_ZN2ui20InterpolatedRotationC2Effff
@_ZN2ui20InterpolatedRotationD2Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedRotation"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedRotation"*)*)
@_ZN2ui20InterpolatedRotationD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedRotation"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedRotation"*)*)
@_ZN2ui29InterpolatedAxisAngleRotationC1ERKN3gfx9Vector3dFEff = hidden unnamed_addr alias void (%"class.ui::InterpolatedAxisAngleRotation"*, %"class.gfx::Vector3dF"*, float, float), void (%"class.ui::InterpolatedAxisAngleRotation"*, %"class.gfx::Vector3dF"*, float, float)* @_ZN2ui29InterpolatedAxisAngleRotationC2ERKN3gfx9Vector3dFEff
@_ZN2ui29InterpolatedAxisAngleRotationC1ERKN3gfx9Vector3dFEffff = hidden unnamed_addr alias void (%"class.ui::InterpolatedAxisAngleRotation"*, %"class.gfx::Vector3dF"*, float, float, float, float), void (%"class.ui::InterpolatedAxisAngleRotation"*, %"class.gfx::Vector3dF"*, float, float, float, float)* @_ZN2ui29InterpolatedAxisAngleRotationC2ERKN3gfx9Vector3dFEffff
@_ZN2ui29InterpolatedAxisAngleRotationD2Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedAxisAngleRotation"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedAxisAngleRotation"*)*)
@_ZN2ui29InterpolatedAxisAngleRotationD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedAxisAngleRotation"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedAxisAngleRotation"*)*)
@_ZN2ui17InterpolatedScaleC1Eff = hidden unnamed_addr alias void (%"class.ui::InterpolatedScale"*, float, float), void (%"class.ui::InterpolatedScale"*, float, float)* @_ZN2ui17InterpolatedScaleC2Eff
@_ZN2ui17InterpolatedScaleC1Effff = hidden unnamed_addr alias void (%"class.ui::InterpolatedScale"*, float, float, float, float), void (%"class.ui::InterpolatedScale"*, float, float, float, float)* @_ZN2ui17InterpolatedScaleC2Effff
@_ZN2ui17InterpolatedScaleC1ERKN3gfx7Point3FES4_ = hidden unnamed_addr alias void (%"class.ui::InterpolatedScale"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*), void (%"class.ui::InterpolatedScale"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*)* @_ZN2ui17InterpolatedScaleC2ERKN3gfx7Point3FES4_
@_ZN2ui17InterpolatedScaleC1ERKN3gfx7Point3FES4_ff = hidden unnamed_addr alias void (%"class.ui::InterpolatedScale"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, float, float), void (%"class.ui::InterpolatedScale"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, float, float)* @_ZN2ui17InterpolatedScaleC2ERKN3gfx7Point3FES4_ff
@_ZN2ui17InterpolatedScaleD2Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedScale"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedScale"*)*)
@_ZN2ui17InterpolatedScaleD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedScale"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedScale"*)*)
@_ZN2ui23InterpolatedTranslationC1ERKN3gfx6PointFES4_ = hidden unnamed_addr alias void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*), void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*)* @_ZN2ui23InterpolatedTranslationC2ERKN3gfx6PointFES4_
@_ZN2ui23InterpolatedTranslationC1ERKN3gfx6PointFES4_ff = hidden unnamed_addr alias void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*, float, float), void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::PointF"*, %"class.gfx::PointF"*, float, float)* @_ZN2ui23InterpolatedTranslationC2ERKN3gfx6PointFES4_ff
@_ZN2ui23InterpolatedTranslationC1ERKN3gfx7Point3FES4_ = hidden unnamed_addr alias void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*), void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*)* @_ZN2ui23InterpolatedTranslationC2ERKN3gfx7Point3FES4_
@_ZN2ui23InterpolatedTranslationC1ERKN3gfx7Point3FES4_ff = hidden unnamed_addr alias void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, float, float), void (%"class.ui::InterpolatedTranslation"*, %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, float, float)* @_ZN2ui23InterpolatedTranslationC2ERKN3gfx7Point3FES4_ff
@_ZN2ui23InterpolatedTranslationD2Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedTranslation"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedTranslation"*)*)
@_ZN2ui23InterpolatedTranslationD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedTranslation"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedTranslation"*)*)
@_ZN2ui29InterpolatedConstantTransformC1ERKN3gfx9TransformE = hidden unnamed_addr alias void (%"class.ui::InterpolatedConstantTransform"*, %"class.gfx::Transform"*), void (%"class.ui::InterpolatedConstantTransform"*, %"class.gfx::Transform"*)* @_ZN2ui29InterpolatedConstantTransformC2ERKN3gfx9TransformE
@_ZN2ui29InterpolatedConstantTransformD2Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedConstantTransform"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedConstantTransform"*)*)
@_ZN2ui29InterpolatedConstantTransformD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedConstantTransform"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedConstantTransform"*)*)
@_ZN2ui31InterpolatedTransformAboutPivotC1ERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%"class.ui::InterpolatedTransformAboutPivot"*, %"class.gfx::Point"*, %"class.ui::InterpolatedTransform"*), void (%"class.ui::InterpolatedTransformAboutPivot"*, %"class.gfx::Point"*, %"class.ui::InterpolatedTransform"*)* @_ZN2ui31InterpolatedTransformAboutPivotC2ERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEE
@_ZN2ui31InterpolatedTransformAboutPivotC1ERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEEff = hidden unnamed_addr alias void (%"class.ui::InterpolatedTransformAboutPivot"*, %"class.gfx::Point"*, %"class.ui::InterpolatedTransform"*, float, float), void (%"class.ui::InterpolatedTransformAboutPivot"*, %"class.gfx::Point"*, %"class.ui::InterpolatedTransform"*, float, float)* @_ZN2ui31InterpolatedTransformAboutPivotC2ERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEEff
@_ZN2ui31InterpolatedTransformAboutPivotD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedTransformAboutPivot"*), void (%"class.ui::InterpolatedTransformAboutPivot"*)* @_ZN2ui31InterpolatedTransformAboutPivotD2Ev
@_ZN2ui27InterpolatedMatrixTransformC1ERKN3gfx9TransformES4_ = hidden unnamed_addr alias void (%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*), void (%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*)* @_ZN2ui27InterpolatedMatrixTransformC2ERKN3gfx9TransformES4_
@_ZN2ui27InterpolatedMatrixTransformC1ERKN3gfx9TransformES4_ff = hidden unnamed_addr alias void (%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*, float, float), void (%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"*, %"class.gfx::Transform"*, float, float)* @_ZN2ui27InterpolatedMatrixTransformC2ERKN3gfx9TransformES4_ff
@_ZN2ui27InterpolatedMatrixTransformD2Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedMatrixTransform"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedMatrixTransform"*)*)
@_ZN2ui27InterpolatedMatrixTransformD1Ev = hidden unnamed_addr alias void (%"class.ui::InterpolatedMatrixTransform"*), bitcast (void (%"class.ui::InterpolatedTransform"*)* @_ZN2ui21InterpolatedTransformD2Ev to void (%"class.ui::InterpolatedMatrixTransform"*)*)

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui21InterpolatedTransformC2Ev(%"class.ui::InterpolatedTransform"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui21InterpolatedTransformC2Eff(%"class.ui::InterpolatedTransform"* nocapture, float, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 1
  store float %1, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 2
  store float %2, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 4
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21InterpolatedTransformD2Ev(%"class.ui::InterpolatedTransform"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2ui21InterpolatedTransformD0Ev(%"class.ui::InterpolatedTransform"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui21InterpolatedTransform11InterpolateEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedTransform"*, float) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %1, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = fsub float 1.000000e+00, %2
  %9 = select i1 %7, float %2, float %8
  %10 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  %11 = bitcast %"class.ui::InterpolatedTransform"* %1 to void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)***
  %12 = load void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)**, void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)*, void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)** %12, i64 2
  %14 = load void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)*, void (%"class.gfx::Transform"*, %"class.ui::InterpolatedTransform"*, float)** %13, align 8
  tail call void %14(%"class.gfx::Transform"* sret %0, %"class.ui::InterpolatedTransform"* %1, float %9) #11
  %15 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %15, align 8
  %17 = icmp eq %"class.ui::InterpolatedTransform"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %19) #11
  call void @_ZNK2ui21InterpolatedTransform11InterpolateEf(%"class.gfx::Transform"* nonnull sret %4, %"class.ui::InterpolatedTransform"* nonnull %16, float %9)
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %19) #11
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21InterpolatedTransform8SetChildENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.ui::InterpolatedTransform"* nocapture, %"class.ui::InterpolatedTransform"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.ui::InterpolatedTransform"* %1 to i64
  %4 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.ui::InterpolatedTransform"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.ui::InterpolatedTransform"* %6 to void (%"class.ui::InterpolatedTransform"*)***
  %11 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %11, i64 1
  %13 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %12, align 8
  tail call void %13(%"class.ui::InterpolatedTransform"* nonnull %6) #11
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui20InterpolatedRotationC2Eff(%"class.ui::InterpolatedRotation"* nocapture, float, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui20InterpolatedRotationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 1
  store float %1, float* %10, align 4
  %11 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 2
  store float %2, float* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui20InterpolatedRotationC2Effff(%"class.ui::InterpolatedRotation"* nocapture, float, float, float, float) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 1
  store float %3, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 2
  store float %4, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui20InterpolatedRotationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 1
  store float %1, float* %12, align 4
  %13 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 2
  store float %2, float* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InterpolatedRotationD0Ev(%"class.ui::InterpolatedRotation"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::InterpolatedRotation"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui20InterpolatedRotation26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedRotation"* nocapture readonly, float) unnamed_addr #1 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %1, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %1, i64 0, i32 2
  %10 = load float, float* %9, align 8
  %11 = fcmp uno float %2, 0.000000e+00
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %1, i64 0, i32 0, i32 1
  %14 = load float, float* %13, align 8
  %15 = fcmp uno float %14, 0.000000e+00
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::InterpolatedRotation", %"class.ui::InterpolatedRotation"* %1, i64 0, i32 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = fcmp uno float %18, 0.000000e+00
  %20 = fcmp ogt float %14, %2
  %21 = or i1 %20, %19
  br i1 %21, label %33, label %22

22:                                               ; preds = %16
  %23 = fcmp ugt float %18, %2
  br i1 %23, label %24, label %33

24:                                               ; preds = %22
  %25 = fsub float %2, %14
  %26 = fsub float %18, %14
  %27 = fdiv float %25, %26
  %28 = fpext float %27 to double
  %29 = fpext float %8 to double
  %30 = fpext float %10 to double
  %31 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %28, double %29, double %30) #11
  %32 = fptrunc double %31 to float
  br label %33

33:                                               ; preds = %3, %12, %16, %22, %24
  %34 = phi float [ %32, %24 ], [ %8, %16 ], [ %8, %12 ], [ %8, %3 ], [ %10, %22 ]
  %35 = fpext float %34 to double
  tail call void @_ZN3gfx9Transform16RotateAboutZAxisEd(%"class.gfx::Transform"* %0, double %35) #11
  %36 = fcmp oeq float %2, 0.000000e+00
  %37 = fcmp oeq float %2, 1.000000e+00
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %74

39:                                               ; preds = %33
  %40 = tail call double @fmod(double %35, double 9.000000e+01) #11
  %41 = tail call double @llvm.fabs.f64(double %40) #11
  %42 = fcmp olt double %41, 0x3EB0C6F7A0B5ED8D
  %43 = fsub double 9.000000e+01, %41
  %44 = fcmp olt double %43, 0x3EB0C6F7A0B5ED8D
  %45 = or i1 %42, %44
  %46 = icmp ne %"class.gfx::Transform"* %0, null
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %74

48:                                               ; preds = %39
  %49 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %49) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %50 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0
  %52 = fdiv float %34, 9.000000e+01
  %53 = fcmp ult float %52, 0.000000e+00
  %54 = fadd float %52, 5.000000e-01
  %55 = tail call float @llvm.floor.f32(float %54) #11
  %56 = fadd float %52, -5.000000e-01
  %57 = tail call float @llvm.ceil.f32(float %56) #11
  %58 = select i1 %53, float %57, float %55
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 3
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = srem i32 %65, 4
  %67 = icmp slt i32 %66, 0
  %68 = add nsw i32 %66, 4
  %69 = select i1 %67, i32 %68, i32 %66
  switch i32 %69, label %73 [
    i32 1, label %70
    i32 2, label %71
    i32 3, label %72
  ]

70:                                               ; preds = %48
  call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* nonnull %51, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00) #11
  br label %73

71:                                               ; preds = %48
  call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* nonnull %51, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00) #11
  br label %73

72:                                               ; preds = %48
  call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* nonnull %51, float 0.000000e+00, float -1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00) #11
  br label %73

73:                                               ; preds = %72, %71, %70, %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* nonnull align 4 %49, i64 68, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %49) #11
  br label %74

74:                                               ; preds = %73, %39, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui29InterpolatedAxisAngleRotationC2ERKN3gfx9Vector3dFEff(%"class.ui::InterpolatedAxisAngleRotation"* nocapture, %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12), float, float) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui29InterpolatedAxisAngleRotationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 1
  %12 = bitcast %"class.gfx::Vector3dF"* %11 to i8*
  %13 = bitcast %"class.gfx::Vector3dF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 12, i1 false)
  %14 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 2
  store float %2, float* %14, align 8
  %15 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 3
  store float %3, float* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui29InterpolatedAxisAngleRotationC2ERKN3gfx9Vector3dFEffff(%"class.ui::InterpolatedAxisAngleRotation"* nocapture, %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12), float, float, float, float) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 1
  store float %4, float* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 2
  store float %5, float* %9, align 4
  %10 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 3
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui29InterpolatedAxisAngleRotationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %13 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 1
  %14 = bitcast %"class.gfx::Vector3dF"* %13 to i8*
  %15 = bitcast %"class.gfx::Vector3dF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false)
  %16 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 2
  store float %2, float* %16, align 8
  %17 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 3
  store float %3, float* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui29InterpolatedAxisAngleRotationD0Ev(%"class.ui::InterpolatedAxisAngleRotation"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::InterpolatedAxisAngleRotation"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui29InterpolatedAxisAngleRotation26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedAxisAngleRotation"*, float) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %1, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %1, i64 0, i32 3
  %10 = load float, float* %9, align 4
  %11 = fcmp uno float %2, 0.000000e+00
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %1, i64 0, i32 0, i32 1
  %14 = load float, float* %13, align 8
  %15 = fcmp uno float %14, 0.000000e+00
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::InterpolatedAxisAngleRotation", %"class.ui::InterpolatedAxisAngleRotation"* %1, i64 0, i32 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = fcmp uno float %18, 0.000000e+00
  %20 = fcmp ogt float %14, %2
  %21 = or i1 %20, %19
  br i1 %21, label %33, label %22

22:                                               ; preds = %16
  %23 = fcmp ugt float %18, %2
  br i1 %23, label %24, label %33

24:                                               ; preds = %22
  %25 = fsub float %2, %14
  %26 = fsub float %18, %14
  %27 = fdiv float %25, %26
  %28 = fpext float %27 to double
  %29 = fpext float %8 to double
  %30 = fpext float %10 to double
  %31 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %28, double %29, double %30) #11
  %32 = fptrunc double %31 to float
  br label %33

33:                                               ; preds = %3, %12, %16, %22, %24
  %34 = phi float [ %32, %24 ], [ %8, %16 ], [ %8, %12 ], [ %8, %3 ], [ %10, %22 ]
  %35 = fpext float %34 to double
  tail call void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"* %0, %"class.gfx::Vector3dF"* dereferenceable(12) %6, double %35) #11
  ret void
}

declare void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* dereferenceable(12), double) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui17InterpolatedScaleC2Eff(%"class.ui::InterpolatedScale"* nocapture, float, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17InterpolatedScaleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1, i32 0
  store float %1, float* %10, align 4
  %11 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1, i32 1
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1, i32 2
  store float %1, float* %12, align 4
  %13 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2, i32 0
  store float %2, float* %13, align 4
  %14 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2, i32 1
  store float %2, float* %14, align 4
  %15 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2, i32 2
  store float %2, float* %15, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui17InterpolatedScaleC2Effff(%"class.ui::InterpolatedScale"* nocapture, float, float, float, float) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 1
  store float %3, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 2
  store float %4, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17InterpolatedScaleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1, i32 0
  store float %1, float* %12, align 4
  %13 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1, i32 1
  store float %1, float* %13, align 4
  %14 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1, i32 2
  store float %1, float* %14, align 4
  %15 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2, i32 0
  store float %2, float* %15, align 4
  %16 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2, i32 1
  store float %2, float* %16, align 4
  %17 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2, i32 2
  store float %2, float* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17InterpolatedScaleC2ERKN3gfx7Point3FES4_(%"class.ui::InterpolatedScale"* nocapture, %"class.gfx::Point3F"* nocapture readonly dereferenceable(12), %"class.gfx::Point3F"* nocapture readonly dereferenceable(12)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17InterpolatedScaleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1
  %11 = bitcast %"class.gfx::Point3F"* %10 to i8*
  %12 = bitcast %"class.gfx::Point3F"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false)
  %13 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2
  %14 = bitcast %"class.gfx::Point3F"* %13 to i8*
  %15 = bitcast %"class.gfx::Point3F"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17InterpolatedScaleC2ERKN3gfx7Point3FES4_ff(%"class.ui::InterpolatedScale"* nocapture, %"class.gfx::Point3F"* nocapture readonly dereferenceable(12), %"class.gfx::Point3F"* nocapture readonly dereferenceable(12), float, float) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 1
  store float %3, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 2
  store float %4, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17InterpolatedScaleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 1
  %13 = bitcast %"class.gfx::Point3F"* %12 to i8*
  %14 = bitcast %"class.gfx::Point3F"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 2
  %16 = bitcast %"class.gfx::Point3F"* %15 to i8*
  %17 = bitcast %"class.gfx::Point3F"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17InterpolatedScaleD0Ev(%"class.ui::InterpolatedScale"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::InterpolatedScale"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui17InterpolatedScale26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedScale"* nocapture readonly, float) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 1, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 2, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp uno float %2, 0.000000e+00
  br i1 %10, label %59, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 0, i32 1
  %13 = load float, float* %12, align 8
  %14 = fcmp uno float %13, 0.000000e+00
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = fcmp uno float %17, 0.000000e+00
  %19 = fcmp ogt float %13, %2
  %20 = or i1 %19, %18
  br i1 %20, label %33, label %21

21:                                               ; preds = %15
  %22 = fcmp ugt float %17, %2
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  %24 = fsub float %2, %13
  %25 = fsub float %17, %13
  %26 = fdiv float %24, %25
  %27 = fpext float %26 to double
  %28 = fpext float %7 to double
  %29 = fpext float %9 to double
  %30 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %27, double %28, double %29) #11
  %31 = fptrunc double %30 to float
  %32 = load float, float* %12, align 8
  br label %33

33:                                               ; preds = %11, %15, %21, %23
  %34 = phi float [ %13, %21 ], [ %13, %11 ], [ %13, %15 ], [ %32, %23 ]
  %35 = phi float [ %9, %21 ], [ %7, %11 ], [ %7, %15 ], [ %31, %23 ]
  %36 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 1, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 2, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp uno float %34, 0.000000e+00
  br i1 %40, label %64, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = fcmp uno float %43, 0.000000e+00
  %45 = fcmp ogt float %34, %2
  %46 = or i1 %45, %44
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = fcmp ugt float %43, %2
  br i1 %48, label %49, label %64

49:                                               ; preds = %47
  %50 = fsub float %2, %34
  %51 = fsub float %43, %34
  %52 = fdiv float %50, %51
  %53 = fpext float %52 to double
  %54 = fpext float %37 to double
  %55 = fpext float %39 to double
  %56 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %53, double %54, double %55) #11
  %57 = fptrunc double %56 to float
  %58 = load float, float* %12, align 8
  br label %64

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 1, i32 1
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 1, i32 2
  %63 = load float, float* %62, align 4
  br label %89

64:                                               ; preds = %33, %41, %47, %49
  %65 = phi float [ %34, %47 ], [ %34, %33 ], [ %34, %41 ], [ %58, %49 ]
  %66 = phi float [ %39, %47 ], [ %37, %33 ], [ %37, %41 ], [ %57, %49 ]
  %67 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 1, i32 2
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 2, i32 2
  %70 = load float, float* %69, align 4
  %71 = fcmp uno float %65, 0.000000e+00
  br i1 %71, label %89, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.ui::InterpolatedScale", %"class.ui::InterpolatedScale"* %1, i64 0, i32 0, i32 2
  %74 = load float, float* %73, align 4
  %75 = fcmp uno float %74, 0.000000e+00
  %76 = fcmp ogt float %65, %2
  %77 = or i1 %76, %75
  br i1 %77, label %89, label %78

78:                                               ; preds = %72
  %79 = fcmp ugt float %74, %2
  br i1 %79, label %80, label %89

80:                                               ; preds = %78
  %81 = fsub float %2, %65
  %82 = fsub float %74, %65
  %83 = fdiv float %81, %82
  %84 = fpext float %83 to double
  %85 = fpext float %68 to double
  %86 = fpext float %70 to double
  %87 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %84, double %85, double %86) #11
  %88 = fptrunc double %87 to float
  br label %89

89:                                               ; preds = %59, %64, %72, %78, %80
  %90 = phi float [ %66, %80 ], [ %66, %72 ], [ %66, %64 ], [ %61, %59 ], [ %66, %78 ]
  %91 = phi float [ %35, %80 ], [ %35, %72 ], [ %35, %64 ], [ %7, %59 ], [ %35, %78 ]
  %92 = phi float [ %88, %80 ], [ %68, %72 ], [ %68, %64 ], [ %63, %59 ], [ %70, %78 ]
  tail call void @_ZN3gfx9Transform7Scale3dEfff(%"class.gfx::Transform"* %0, float %91, float %90, float %92) #11
  ret void
}

declare void @_ZN3gfx9Transform7Scale3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui23InterpolatedTranslationC2ERKN3gfx6PointFES4_(%"class.ui::InterpolatedTranslation"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui23InterpolatedTranslationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1
  %11 = bitcast %"class.gfx::PointF"* %1 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.gfx::Point3F"* %10 to i32*
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1, i32 1
  %15 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = bitcast float* %14 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1, i32 2
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2
  %21 = bitcast %"class.gfx::PointF"* %2 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.gfx::Point3F"* %20 to i32*
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2, i32 1
  %25 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %24 to i32*
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2, i32 2
  store float 0.000000e+00, float* %29, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui23InterpolatedTranslationC2ERKN3gfx6PointFES4_ff(%"class.ui::InterpolatedTranslation"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8), float, float) unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 1
  store float %3, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 2
  store float %4, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui23InterpolatedTranslationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1
  %13 = bitcast %"class.gfx::PointF"* %1 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.gfx::Point3F"* %12 to i32*
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1, i32 1
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %16 to i32*
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1, i32 2
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2
  %23 = bitcast %"class.gfx::PointF"* %2 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %"class.gfx::Point3F"* %22 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2, i32 1
  %27 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast float* %26 to i32*
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2, i32 2
  store float 0.000000e+00, float* %31, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23InterpolatedTranslationC2ERKN3gfx7Point3FES4_(%"class.ui::InterpolatedTranslation"* nocapture, %"class.gfx::Point3F"* nocapture readonly dereferenceable(12), %"class.gfx::Point3F"* nocapture readonly dereferenceable(12)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui23InterpolatedTranslationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1
  %11 = bitcast %"class.gfx::Point3F"* %10 to i8*
  %12 = bitcast %"class.gfx::Point3F"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false)
  %13 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2
  %14 = bitcast %"class.gfx::Point3F"* %13 to i8*
  %15 = bitcast %"class.gfx::Point3F"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23InterpolatedTranslationC2ERKN3gfx7Point3FES4_ff(%"class.ui::InterpolatedTranslation"* nocapture, %"class.gfx::Point3F"* nocapture readonly dereferenceable(12), %"class.gfx::Point3F"* nocapture readonly dereferenceable(12), float, float) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 1
  store float %3, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 2
  store float %4, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui23InterpolatedTranslationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 1
  %13 = bitcast %"class.gfx::Point3F"* %12 to i8*
  %14 = bitcast %"class.gfx::Point3F"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 2
  %16 = bitcast %"class.gfx::Point3F"* %15 to i8*
  %17 = bitcast %"class.gfx::Point3F"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23InterpolatedTranslationD0Ev(%"class.ui::InterpolatedTranslation"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::InterpolatedTranslation"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui23InterpolatedTranslation26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedTranslation"* nocapture readonly, float) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 1, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 2, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp uno float %2, 0.000000e+00
  br i1 %10, label %59, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 0, i32 1
  %13 = load float, float* %12, align 8
  %14 = fcmp uno float %13, 0.000000e+00
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = fcmp uno float %17, 0.000000e+00
  %19 = fcmp ogt float %13, %2
  %20 = or i1 %19, %18
  br i1 %20, label %33, label %21

21:                                               ; preds = %15
  %22 = fcmp ugt float %17, %2
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  %24 = fsub float %2, %13
  %25 = fsub float %17, %13
  %26 = fdiv float %24, %25
  %27 = fpext float %26 to double
  %28 = fpext float %7 to double
  %29 = fpext float %9 to double
  %30 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %27, double %28, double %29) #11
  %31 = fptrunc double %30 to float
  %32 = load float, float* %12, align 8
  br label %33

33:                                               ; preds = %11, %15, %21, %23
  %34 = phi float [ %13, %21 ], [ %13, %11 ], [ %13, %15 ], [ %32, %23 ]
  %35 = phi float [ %9, %21 ], [ %7, %11 ], [ %7, %15 ], [ %31, %23 ]
  %36 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 1, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 2, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp uno float %34, 0.000000e+00
  br i1 %40, label %64, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = fcmp uno float %43, 0.000000e+00
  %45 = fcmp ogt float %34, %2
  %46 = or i1 %45, %44
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = fcmp ugt float %43, %2
  br i1 %48, label %49, label %64

49:                                               ; preds = %47
  %50 = fsub float %2, %34
  %51 = fsub float %43, %34
  %52 = fdiv float %50, %51
  %53 = fpext float %52 to double
  %54 = fpext float %37 to double
  %55 = fpext float %39 to double
  %56 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %53, double %54, double %55) #11
  %57 = fptrunc double %56 to float
  %58 = load float, float* %12, align 8
  br label %64

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 1, i32 1
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 1, i32 2
  %63 = load float, float* %62, align 4
  br label %89

64:                                               ; preds = %33, %41, %47, %49
  %65 = phi float [ %34, %47 ], [ %34, %33 ], [ %34, %41 ], [ %58, %49 ]
  %66 = phi float [ %39, %47 ], [ %37, %33 ], [ %37, %41 ], [ %57, %49 ]
  %67 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 1, i32 2
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 2, i32 2
  %70 = load float, float* %69, align 4
  %71 = fcmp uno float %65, 0.000000e+00
  br i1 %71, label %89, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.ui::InterpolatedTranslation", %"class.ui::InterpolatedTranslation"* %1, i64 0, i32 0, i32 2
  %74 = load float, float* %73, align 4
  %75 = fcmp uno float %74, 0.000000e+00
  %76 = fcmp ogt float %65, %2
  %77 = or i1 %76, %75
  br i1 %77, label %89, label %78

78:                                               ; preds = %72
  %79 = fcmp ugt float %74, %2
  br i1 %79, label %80, label %89

80:                                               ; preds = %78
  %81 = fsub float %2, %65
  %82 = fsub float %74, %65
  %83 = fdiv float %81, %82
  %84 = fpext float %83 to double
  %85 = fpext float %68 to double
  %86 = fpext float %70 to double
  %87 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %84, double %85, double %86) #11
  %88 = fptrunc double %87 to float
  br label %89

89:                                               ; preds = %59, %64, %72, %78, %80
  %90 = phi float [ %66, %80 ], [ %66, %72 ], [ %66, %64 ], [ %61, %59 ], [ %66, %78 ]
  %91 = phi float [ %35, %80 ], [ %35, %72 ], [ %35, %64 ], [ %7, %59 ], [ %35, %78 ]
  %92 = phi float [ %88, %80 ], [ %68, %72 ], [ %68, %64 ], [ %63, %59 ], [ %70, %78 ]
  tail call void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"* %0, float %91, float %90, float %92) #11
  ret void
}

declare void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui29InterpolatedConstantTransformC2ERKN3gfx9TransformE(%"class.ui::InterpolatedConstantTransform"* nocapture, %"class.gfx::Transform"* nocapture readonly dereferenceable(68)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 3
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui29InterpolatedConstantTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 2
  %10 = bitcast %"class.gfx::Transform"* %9 to i8*
  %11 = bitcast %"class.gfx::Transform"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 68, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui29InterpolatedConstantTransform26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias nocapture sret, %"class.ui::InterpolatedConstantTransform"* nocapture readonly, float) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %1, i64 0, i32 2
  %5 = bitcast %"class.gfx::Transform"* %0 to i8*
  %6 = bitcast %"class.gfx::Transform"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 68, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui29InterpolatedConstantTransformD0Ev(%"class.ui::InterpolatedConstantTransform"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedConstantTransform", %"class.ui::InterpolatedConstantTransform"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::InterpolatedConstantTransform"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui31InterpolatedTransformAboutPivotC2ERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEE(%"class.ui::InterpolatedTransformAboutPivot"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.ui::InterpolatedTransform"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui31InterpolatedTransformAboutPivotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  tail call void @_ZN2ui31InterpolatedTransformAboutPivot4InitERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEE(%"class.ui::InterpolatedTransformAboutPivot"* %0, %"class.gfx::Point"* dereferenceable(8) %1, %"class.ui::InterpolatedTransform"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui31InterpolatedTransformAboutPivot4InitERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEE(%"class.ui::InterpolatedTransformAboutPivot"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.ui::InterpolatedTransform"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = ptrtoint %"class.ui::InterpolatedTransform"* %2 to i64
  %7 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %7) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %8, align 4
  %9 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %9) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_140MassageRotationIfMultipleOfNinetyDegreesEPN3gfx9TransformEf.transform to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sub nsw i32 0, %12
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 0, %16
  %18 = sitofp i32 %17 to float
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %4, float %14, float %18) #11
  %19 = load i32, i32* %11, align 4
  %20 = sitofp i32 %19 to float
  %21 = load i32, i32* %15, align 4
  %22 = sitofp i32 %21 to float
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %5, float %20, float %22) #11
  %23 = call i8* @_Znwm(i64 96) #13
  %24 = bitcast i8* %23 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 12
  %28 = bitcast i8* %27 to float*
  store float 1.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds i8, i8* %23, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 24
  store i8 0, i8* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui29InterpolatedConstantTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* nonnull align 4 %7, i64 68, i1 false) #11
  %33 = ptrtoint i8* %23 to i64
  %34 = call i8* @_Znwm(i64 96) #13
  %35 = bitcast i8* %34 to i32 (...)***
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to float*
  store float 0.000000e+00, float* %37, align 8
  %38 = getelementptr inbounds i8, i8* %34, i64 12
  %39 = bitcast i8* %38 to float*
  store float 1.000000e+00, float* %39, align 4
  %40 = getelementptr inbounds i8, i8* %34, i64 16
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %34, i64 24
  store i8 0, i8* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui29InterpolatedConstantTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %43 = getelementptr inbounds i8, i8* %34, i64 28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* nonnull align 4 %9, i64 68, i1 false) #11
  %44 = ptrtoint i8* %34 to i64
  %45 = getelementptr inbounds %"class.ui::InterpolatedTransform", %"class.ui::InterpolatedTransform"* %2, i64 0, i32 3
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %44, i64* %48, align 8
  %49 = icmp eq %"class.ui::InterpolatedTransform"* %47, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %3
  store i64 %6, i64* %30, align 8
  br label %64

51:                                               ; preds = %3
  %52 = bitcast %"class.ui::InterpolatedTransform"* %47 to void (%"class.ui::InterpolatedTransform"*)***
  %53 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %53, i64 1
  %55 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %54, align 8
  call void %55(%"class.ui::InterpolatedTransform"* nonnull %47) #11
  %56 = bitcast i8* %29 to %"class.ui::InterpolatedTransform"**
  %57 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %56, align 8
  store i64 %6, i64* %30, align 8
  %58 = icmp eq %"class.ui::InterpolatedTransform"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %51
  %60 = bitcast %"class.ui::InterpolatedTransform"* %57 to void (%"class.ui::InterpolatedTransform"*)***
  %61 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %61, i64 1
  %63 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %62, align 8
  call void %63(%"class.ui::InterpolatedTransform"* nonnull %57) #11
  br label %64

64:                                               ; preds = %50, %51, %59
  %65 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  store i64 %33, i64* %68, align 8
  %69 = icmp eq %"class.ui::InterpolatedTransform"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.ui::InterpolatedTransform"* %67 to void (%"class.ui::InterpolatedTransform"*)***
  %72 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %72, i64 1
  %74 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %73, align 8
  call void %74(%"class.ui::InterpolatedTransform"* nonnull %67) #11
  br label %75

75:                                               ; preds = %70, %64
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui31InterpolatedTransformAboutPivotC2ERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEEff(%"class.ui::InterpolatedTransformAboutPivot"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.ui::InterpolatedTransform"*, float, float) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui31InterpolatedTransformAboutPivotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 0, i64* %13, align 8
  tail call void @_ZN2ui31InterpolatedTransformAboutPivot4InitERKN3gfx5PointENSt3__110unique_ptrINS_21InterpolatedTransformENS5_14default_deleteIS7_EEEE(%"class.ui::InterpolatedTransformAboutPivot"* %0, %"class.gfx::Point"* dereferenceable(8) %1, %"class.ui::InterpolatedTransform"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui31InterpolatedTransformAboutPivotD2Ev(%"class.ui::InterpolatedTransformAboutPivot"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui31InterpolatedTransformAboutPivotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %12, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %12, align 8
  %14 = icmp eq %"class.ui::InterpolatedTransform"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.ui::InterpolatedTransform"* %13 to void (%"class.ui::InterpolatedTransform"*)***
  %17 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %17, i64 1
  %19 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %18, align 8
  tail call void %19(%"class.ui::InterpolatedTransform"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui31InterpolatedTransformAboutPivotD0Ev(%"class.ui::InterpolatedTransformAboutPivot"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui31InterpolatedTransformAboutPivotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %12, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %12, align 8
  %14 = icmp eq %"class.ui::InterpolatedTransform"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.ui::InterpolatedTransform"* %13 to void (%"class.ui::InterpolatedTransform"*)***
  %17 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %17, i64 1
  %19 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %18, align 8
  tail call void %19(%"class.ui::InterpolatedTransform"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.ui::InterpolatedTransformAboutPivot"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui31InterpolatedTransformAboutPivot26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedTransformAboutPivot"* nocapture readonly, float) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedTransformAboutPivot", %"class.ui::InterpolatedTransformAboutPivot"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %4, align 8
  %6 = icmp eq %"class.ui::InterpolatedTransform"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZNK2ui21InterpolatedTransform11InterpolateEf(%"class.gfx::Transform"* sret %0, %"class.ui::InterpolatedTransform"* nonnull %5, float %2)
  br label %11

8:                                                ; preds = %3
  %9 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #11
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %10, align 4
  br label %11

11:                                               ; preds = %8, %7
  ret void
}

declare void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27InterpolatedMatrixTransformC2ERKN3gfx9TransformES4_(%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui27InterpolatedMatrixTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 1
  tail call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* %10) #11
  %11 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 2
  tail call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* %11) #11
  %12 = tail call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* %10, %"class.gfx::Transform"* dereferenceable(68) %1) #11
  %13 = tail call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* %11, %"class.gfx::Transform"* dereferenceable(68) %2) #11
  ret void
}

declare void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27InterpolatedMatrixTransform4InitERKN3gfx9TransformES4_(%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* %4, %"class.gfx::Transform"* dereferenceable(68) %1) #11
  %6 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 2
  %7 = tail call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* %6, %"class.gfx::Transform"* dereferenceable(68) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27InterpolatedMatrixTransformC2ERKN3gfx9TransformES4_ff(%"class.ui::InterpolatedMatrixTransform"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Transform"* dereferenceable(68), float, float) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 2
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui27InterpolatedMatrixTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %12 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 1
  tail call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* %12) #11
  %13 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 2
  tail call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* %13) #11
  %14 = tail call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* %12, %"class.gfx::Transform"* dereferenceable(68) %1) #11
  %15 = tail call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* %13, %"class.gfx::Transform"* dereferenceable(68) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui27InterpolatedMatrixTransformD0Ev(%"class.ui::InterpolatedMatrixTransform"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui21InterpolatedTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.ui::InterpolatedTransform"*, %"class.ui::InterpolatedTransform"** %3, align 8
  store %"class.ui::InterpolatedTransform"* null, %"class.ui::InterpolatedTransform"** %3, align 8
  %5 = icmp eq %"class.ui::InterpolatedTransform"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::InterpolatedTransform"* %4 to void (%"class.ui::InterpolatedTransform"*)***
  %8 = load void (%"class.ui::InterpolatedTransform"*)**, void (%"class.ui::InterpolatedTransform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %8, i64 1
  %10 = load void (%"class.ui::InterpolatedTransform"*)*, void (%"class.ui::InterpolatedTransform"*)** %9, align 8
  tail call void %10(%"class.ui::InterpolatedTransform"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::InterpolatedMatrixTransform"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui27InterpolatedMatrixTransform26InterpolateButDoNotComposeEf(%"class.gfx::Transform"* noalias sret, %"class.ui::InterpolatedMatrixTransform"*, float) unnamed_addr #1 align 2 {
  %4 = alloca %"struct.gfx::DecomposedTransform", align 8
  %5 = bitcast %"struct.gfx::DecomposedTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" }* @__const._ZNK2ui27InterpolatedMatrixTransform26InterpolateButDoNotComposeEf.blended to i8*), i64 88, i1 false)
  %6 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.ui::InterpolatedMatrixTransform", %"class.ui::InterpolatedMatrixTransform"* %1, i64 0, i32 1
  %8 = fpext float %2 to double
  call void @_ZN3gfx25BlendDecomposedTransformsERKNS_19DecomposedTransformES2_d(%"struct.gfx::DecomposedTransform"* nonnull sret %4, %"struct.gfx::DecomposedTransform"* dereferenceable(88) %6, %"struct.gfx::DecomposedTransform"* dereferenceable(88) %7, double %8) #11
  call void @_ZN3gfx16ComposeTransformERKNS_19DecomposedTransformE(%"class.gfx::Transform"* sret %0, %"struct.gfx::DecomposedTransform"* nonnull dereferenceable(88) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #11
  ret void
}

declare void @_ZN3gfx25BlendDecomposedTransformsERKNS_19DecomposedTransformES2_d(%"struct.gfx::DecomposedTransform"* sret, %"struct.gfx::DecomposedTransform"* dereferenceable(88), %"struct.gfx::DecomposedTransform"* dereferenceable(88), double) local_unnamed_addr #5

declare void @_ZN3gfx16ComposeTransformERKNS_19DecomposedTransformE(%"class.gfx::Transform"* sret, %"struct.gfx::DecomposedTransform"* dereferenceable(88)) local_unnamed_addr #5

declare zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double, double, double) local_unnamed_addr #5

declare void @_ZN3gfx9Transform16RotateAboutZAxisEd(%"class.gfx::Transform"*, double) local_unnamed_addr #5

declare void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44*, float, float, float, float, float, float, float, float, float) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
