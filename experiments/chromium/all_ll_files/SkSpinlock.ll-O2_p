; ModuleID = '../../third_party/skia/src/core/SkSpinlock.cpp'
source_filename = "../../third_party/skia/src/core/SkSpinlock.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkSpinlock = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkSpinlock16contendedAcquireEv(%class.SkSpinlock* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSpinlock, %class.SkSpinlock* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw xchg i8* %2, i8 1 acquire
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1, %6
  tail call void @llvm.x86.sse2.pause() #1
  %7 = atomicrmw xchg i8* %2, i8 1 acquire
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %6

10:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.x86.sse2.pause() #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
