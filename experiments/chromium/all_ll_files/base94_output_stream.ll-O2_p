; ModuleID = '../../third_party/crashpad/crashpad/util/stream/base94_output_stream.cc'
source_filename = "../../third_party/crashpad/crashpad/util/stream/base94_output_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.crashpad::Base94OutputStream" = type <{ %"class.crashpad::OutputStreamInterface", i8, [7 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::vector", i32, [4 x i8], i64, i8, i8, i8, [5 x i8] }>
%"class.crashpad::OutputStreamInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.crashpad::OutputStreamInterface"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN8crashpad18Base94OutputStreamE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::Base94OutputStream"*)* @_ZN8crashpad18Base94OutputStreamD2Ev to i8*), i8* bitcast (void (%"class.crashpad::Base94OutputStream"*)* @_ZN8crashpad18Base94OutputStreamD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::Base94OutputStream"*, i8*, i64)* @_ZN8crashpad18Base94OutputStream5WriteEPKhm to i8*), i8* bitcast (i1 (%"class.crashpad::Base94OutputStream"*)* @_ZN8crashpad18Base94OutputStream5FlushEv to i8*)] }, align 8
@.str = private unnamed_addr constant [72 x i8] c"../../third_party/crashpad/crashpad/util/stream/base94_output_stream.cc\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Decode: invalid input\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN8crashpad18Base94OutputStreamC1ENS0_4ModeENSt3__110unique_ptrINS_21OutputStreamInterfaceENS2_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.crashpad::Base94OutputStream"*, i1, %"class.crashpad::OutputStreamInterface"*), void (%"class.crashpad::Base94OutputStream"*, i1, %"class.crashpad::OutputStreamInterface"*)* @_ZN8crashpad18Base94OutputStreamC2ENS0_4ModeENSt3__110unique_ptrINS_21OutputStreamInterfaceENS2_14default_deleteIS4_EEEE
@_ZN8crashpad18Base94OutputStreamD1Ev = hidden unnamed_addr alias void (%"class.crashpad::Base94OutputStream"*), void (%"class.crashpad::Base94OutputStream"*)* @_ZN8crashpad18Base94OutputStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad18Base94OutputStreamC2ENS0_4ModeENSt3__110unique_ptrINS_21OutputStreamInterfaceENS2_14default_deleteIS4_EEEE(%"class.crashpad::Base94OutputStream"* nocapture, i1 zeroext, %"class.crashpad::OutputStreamInterface"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.crashpad::OutputStreamInterface"* %2 to i64
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8crashpad18Base94OutputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 1
  %16 = bitcast %"class.std::__1::vector"* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 11, i1 false)
  %18 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = tail call i8* @_Znwm(i64 4096) #8
  %21 = ptrtoint i8* %20 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 4096
  %23 = ptrtoint i8* %22 to i64
  store i64 %21, i64* %14, align 8
  store i64 %21, i64* %19, align 8
  store i64 %23, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad18Base94OutputStreamD2Ev(%"class.crashpad::Base94OutputStream"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8crashpad18Base94OutputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %11, align 8
  store %"class.crashpad::OutputStreamInterface"* null, %"class.crashpad::OutputStreamInterface"** %11, align 8
  %13 = icmp eq %"class.crashpad::OutputStreamInterface"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.crashpad::OutputStreamInterface"* %12 to void (%"class.crashpad::OutputStreamInterface"*)***
  %16 = load void (%"class.crashpad::OutputStreamInterface"*)**, void (%"class.crashpad::OutputStreamInterface"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.crashpad::OutputStreamInterface"*)*, void (%"class.crashpad::OutputStreamInterface"*)** %16, i64 1
  %18 = load void (%"class.crashpad::OutputStreamInterface"*)*, void (%"class.crashpad::OutputStreamInterface"*)** %17, align 8
  tail call void %18(%"class.crashpad::OutputStreamInterface"* nonnull %12) #9
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad18Base94OutputStreamD0Ev(%"class.crashpad::Base94OutputStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8crashpad18Base94OutputStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %11, align 8
  store %"class.crashpad::OutputStreamInterface"* null, %"class.crashpad::OutputStreamInterface"** %11, align 8
  %13 = icmp eq %"class.crashpad::OutputStreamInterface"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.crashpad::OutputStreamInterface"* %12 to void (%"class.crashpad::OutputStreamInterface"*)***
  %16 = load void (%"class.crashpad::OutputStreamInterface"*)**, void (%"class.crashpad::OutputStreamInterface"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.crashpad::OutputStreamInterface"*)*, void (%"class.crashpad::OutputStreamInterface"*)** %16, i64 1
  %18 = load void (%"class.crashpad::OutputStreamInterface"*)*, void (%"class.crashpad::OutputStreamInterface"*)** %17, align 8
  tail call void %18(%"class.crashpad::OutputStreamInterface"* nonnull %12) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = bitcast %"class.crashpad::Base94OutputStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream5WriteEPKhm(%"class.crashpad::Base94OutputStream"*, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 9
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN8crashpad18Base94OutputStream6EncodeEPKhm(%"class.crashpad::Base94OutputStream"* %0, i8* %1, i64 %2)
  br label %12

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN8crashpad18Base94OutputStream6DecodeEPKhm(%"class.crashpad::Base94OutputStream"* %0, i8* %1, i64 %2)
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i1 [ %9, %8 ], [ %11, %10 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream6EncodeEPKhm(%"class.crashpad::Base94OutputStream"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %171, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i8** %9 to i64*
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = bitcast i8** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %5, %30
  %17 = phi i64 [ %2, %5 ], [ %19, %30 ]
  %18 = phi i8* [ %1, %5 ], [ %20, %30 ]
  %19 = add i64 %17, -1
  %20 = getelementptr inbounds i8, i8* %18, i64 1
  %21 = load i8, i8* %18, align 1
  %22 = zext i8 %21 to i32
  %23 = load i64, i64* %6, align 8
  %24 = trunc i64 %23 to i32
  %25 = shl i32 %22, %24
  %26 = load i32, i32* %7, align 8
  %27 = or i32 %25, %26
  store i32 %27, i32* %7, align 8
  %28 = add i64 %23, 8
  store i64 %28, i64* %6, align 8
  %29 = icmp ult i64 %28, 14
  br i1 %29, label %30, label %32

30:                                               ; preds = %152, %161, %16
  %31 = icmp eq i64 %19, 0
  br i1 %31, label %171, label %16

32:                                               ; preds = %16
  %33 = and i32 %27, 8191
  %34 = icmp ugt i32 %33, 643
  %35 = and i32 %27, 16383
  %36 = select i1 %34, i32 13, i32 14
  %37 = select i1 %34, i64 -5, i64 -6
  %38 = select i1 %34, i32 %33, i32 %35
  %39 = lshr i32 %27, %36
  store i32 %39, i32* %7, align 8
  %40 = add i64 %23, %37
  store i64 %40, i64* %6, align 8
  %41 = trunc i32 %38 to i16
  %42 = urem i16 %41, 94
  %43 = udiv i16 %41, 94
  %44 = trunc i16 %42 to i8
  %45 = icmp ugt i8 %44, 93
  %46 = add nuw nsw i8 %44, 33
  %47 = select i1 %45, i8 -1, i8 %46
  %48 = load i8*, i8** %9, align 8
  %49 = load i8*, i8** %10, align 8
  %50 = icmp ult i8* %48, %49
  %51 = ptrtoint i8* %49 to i64
  br i1 %50, label %52, label %55

52:                                               ; preds = %32
  store i8 %47, i8* %48, align 1
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = ptrtoint i8* %53 to i64
  store i64 %54, i64* %11, align 8
  br label %97

55:                                               ; preds = %32
  %56 = ptrtoint i8* %48 to i64
  %57 = load i64, i64* %12, align 8
  %58 = sub i64 %56, %57
  %59 = add i64 %58, 1
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #10
  unreachable

63:                                               ; preds = %55
  %64 = sub i64 %51, %57
  %65 = icmp ult i64 %64, 4611686018427387903
  br i1 %65, label %66, label %71

66:                                               ; preds = %63
  %67 = shl i64 %64, 1
  %68 = icmp ult i64 %67, %59
  %69 = select i1 %68, i64 %59, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66, %63
  %72 = phi i64 [ %69, %66 ], [ 9223372036854775807, %63 ]
  %73 = tail call i8* @_Znwm(i64 %72) #8
  br label %74

74:                                               ; preds = %71, %66
  %75 = phi i64 [ %72, %71 ], [ 0, %66 ]
  %76 = phi i8* [ %73, %71 ], [ null, %66 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %58
  %78 = getelementptr inbounds i8, i8* %76, i64 %75
  %79 = ptrtoint i8* %78 to i64
  store i8 %47, i8* %77, align 1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  %81 = ptrtoint i8* %80 to i64
  %82 = load i8*, i8** %14, align 8
  %83 = load i64, i64* %11, align 8
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %83, %84
  %86 = sub i64 0, %85
  %87 = getelementptr inbounds i8, i8* %77, i64 %86
  %88 = ptrtoint i8* %87 to i64
  %89 = icmp sgt i64 %85, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %82, i64 %85, i1 false) #9
  %91 = load i8*, i8** %14, align 8
  br label %92

92:                                               ; preds = %90, %74
  %93 = phi i8* [ %82, %74 ], [ %91, %90 ]
  store i64 %88, i64* %12, align 8
  store i64 %81, i64* %11, align 8
  store i64 %79, i64* %13, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  tail call void @_ZdlPv(i8* nonnull %93) #8
  %96 = load i8*, i8** %9, align 8
  br label %97

97:                                               ; preds = %52, %92, %95
  %98 = phi i8* [ %53, %52 ], [ %80, %92 ], [ %96, %95 ]
  %99 = trunc i16 %43 to i8
  %100 = icmp ugt i8 %99, 93
  %101 = add nuw i8 %99, 33
  %102 = select i1 %100, i8 -1, i8 %101
  %103 = load i8*, i8** %10, align 8
  %104 = icmp ult i8* %98, %103
  %105 = ptrtoint i8* %103 to i64
  br i1 %104, label %106, label %109

106:                                              ; preds = %97
  store i8 %102, i8* %98, align 1
  %107 = getelementptr inbounds i8, i8* %98, i64 1
  %108 = ptrtoint i8* %107 to i64
  store i64 %108, i64* %11, align 8
  br label %152

109:                                              ; preds = %97
  %110 = ptrtoint i8* %98 to i64
  %111 = load i64, i64* %12, align 8
  %112 = sub i64 %110, %111
  %113 = add i64 %112, 1
  %114 = icmp slt i64 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #10
  unreachable

117:                                              ; preds = %109
  %118 = sub i64 %105, %111
  %119 = icmp ult i64 %118, 4611686018427387903
  br i1 %119, label %120, label %125

120:                                              ; preds = %117
  %121 = shl i64 %118, 1
  %122 = icmp ult i64 %121, %113
  %123 = select i1 %122, i64 %113, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %120, %117
  %126 = phi i64 [ %123, %120 ], [ 9223372036854775807, %117 ]
  %127 = tail call i8* @_Znwm(i64 %126) #8
  br label %128

128:                                              ; preds = %125, %120
  %129 = phi i64 [ %126, %125 ], [ 0, %120 ]
  %130 = phi i8* [ %127, %125 ], [ null, %120 ]
  %131 = getelementptr inbounds i8, i8* %130, i64 %112
  %132 = getelementptr inbounds i8, i8* %130, i64 %129
  %133 = ptrtoint i8* %132 to i64
  store i8 %102, i8* %131, align 1
  %134 = getelementptr inbounds i8, i8* %131, i64 1
  %135 = ptrtoint i8* %134 to i64
  %136 = load i8*, i8** %14, align 8
  %137 = load i64, i64* %11, align 8
  %138 = ptrtoint i8* %136 to i64
  %139 = sub i64 %137, %138
  %140 = sub i64 0, %139
  %141 = getelementptr inbounds i8, i8* %131, i64 %140
  %142 = ptrtoint i8* %141 to i64
  %143 = icmp sgt i64 %139, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %128
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* align 1 %136, i64 %139, i1 false) #9
  %145 = load i8*, i8** %14, align 8
  br label %146

146:                                              ; preds = %144, %128
  %147 = phi i8* [ %136, %128 ], [ %145, %144 ]
  store i64 %142, i64* %12, align 8
  store i64 %135, i64* %11, align 8
  store i64 %133, i64* %13, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  tail call void @_ZdlPv(i8* nonnull %147) #8
  %150 = load i64, i64* %11, align 8
  %151 = inttoptr i64 %150 to i8*
  br label %152

152:                                              ; preds = %106, %146, %149
  %153 = phi i8* [ %107, %106 ], [ %134, %146 ], [ %151, %149 ]
  %154 = phi i64 [ %108, %106 ], [ %135, %146 ], [ %150, %149 ]
  %155 = load i64, i64* %12, align 8
  %156 = sub i64 %154, %155
  %157 = icmp ult i64 %156, 4095
  %158 = inttoptr i64 %155 to i8*
  %159 = icmp eq i8* %153, %158
  %160 = or i1 %157, %159
  br i1 %160, label %30, label %161

161:                                              ; preds = %152
  %162 = ptrtoint i8* %153 to i64
  %163 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %15, align 8
  %164 = sub i64 %162, %155
  %165 = bitcast %"class.crashpad::OutputStreamInterface"* %163 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %166 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %165, align 8
  %167 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %166, i64 2
  %168 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %167, align 8
  %169 = tail call zeroext i1 %168(%"class.crashpad::OutputStreamInterface"* %163, i8* %158, i64 %164) #9
  %170 = load i64, i64* %12, align 8
  store i64 %170, i64* %11, align 8
  br i1 %169, label %30, label %192

171:                                              ; preds = %30, %3
  %172 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %172, i64 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %174, %176
  br i1 %177, label %192, label %178

178:                                              ; preds = %171
  %179 = ptrtoint i8* %174 to i64
  %180 = ptrtoint i8* %176 to i64
  %181 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %182 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %181, align 8
  %183 = bitcast i8** %175 to i64*
  %184 = bitcast %"class.std::__1::vector"* %172 to i64*
  %185 = sub i64 %180, %179
  %186 = bitcast %"class.crashpad::OutputStreamInterface"* %182 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %187 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %187, i64 2
  %189 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %188, align 8
  %190 = tail call zeroext i1 %189(%"class.crashpad::OutputStreamInterface"* %182, i8* %174, i64 %185) #9
  %191 = load i64, i64* %184, align 8
  store i64 %191, i64* %183, align 8
  br label %192

192:                                              ; preds = %161, %178, %171
  %193 = phi i1 [ %190, %178 ], [ true, %171 ], [ false, %161 ]
  ret i1 %193
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream6DecodeEPKhm(%"class.crashpad::Base94OutputStream"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %133, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %12 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %11 to i64*
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = bitcast i8** %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %6, %37
  %19 = phi i64 [ %2, %6 ], [ %21, %37 ]
  %20 = phi i8* [ %1, %6 ], [ %38, %37 ]
  %21 = add i64 %19, -1
  %22 = load i8, i8* %20, align 1
  %23 = add i8 %22, -33
  %24 = icmp ugt i8 %23, 93
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  %26 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %26, label %27, label %154

27:                                               ; preds = %25
  %28 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %28) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i32 112, i32 2) #9
  %29 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %29 to %"class.std::__1::basic_ostream"*
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i64 21) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %28) #9
  br label %154

32:                                               ; preds = %18
  %33 = load i8, i8* %7, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  store i8 %22, i8* %7, align 8
  %36 = getelementptr inbounds i8, i8* %20, i64 1
  br label %37

37:                                               ; preds = %116, %125, %35
  %38 = phi i8* [ %36, %35 ], [ %48, %125 ], [ %48, %116 ]
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %133, label %18

40:                                               ; preds = %32
  %41 = add i8 %33, -33
  %42 = icmp ult i8 %41, 94
  %43 = select i1 %42, i8 %41, i8 94
  %44 = zext i8 %43 to i32
  %45 = zext i8 %23 to i32
  %46 = mul nuw nsw i32 %45, 94
  %47 = add nuw nsw i32 %46, %44
  %48 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 0, i8* %7, align 8
  %49 = load i64, i64* %8, align 8
  %50 = trunc i64 %49 to i32
  %51 = shl i32 %47, %50
  %52 = load i32, i32* %9, align 8
  %53 = or i32 %51, %52
  store i32 %53, i32* %9, align 8
  %54 = and i32 %47, 8188
  %55 = icmp ugt i32 %54, 643
  %56 = select i1 %55, i64 13, i64 14
  %57 = add i64 %49, %56
  store i64 %57, i64* %8, align 8
  %58 = icmp ugt i64 %57, 7
  br i1 %58, label %59, label %116

59:                                               ; preds = %40, %110
  %60 = phi i32 [ %112, %110 ], [ %53, %40 ]
  %61 = trunc i32 %60 to i8
  %62 = load i8*, i8** %11, align 8
  %63 = load i8*, i8** %12, align 8
  %64 = icmp ult i8* %62, %63
  %65 = ptrtoint i8* %63 to i64
  br i1 %64, label %66, label %69

66:                                               ; preds = %59
  store i8 %61, i8* %62, align 1
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  %68 = ptrtoint i8* %67 to i64
  store i64 %68, i64* %13, align 8
  br label %110

69:                                               ; preds = %59
  %70 = ptrtoint i8* %62 to i64
  %71 = load i64, i64* %14, align 8
  %72 = sub i64 %70, %71
  %73 = add i64 %72, 1
  %74 = icmp slt i64 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %76) #10
  unreachable

77:                                               ; preds = %69
  %78 = sub i64 %65, %71
  %79 = icmp ult i64 %78, 4611686018427387903
  br i1 %79, label %80, label %85

80:                                               ; preds = %77
  %81 = shl i64 %78, 1
  %82 = icmp ult i64 %81, %73
  %83 = select i1 %82, i64 %73, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %80, %77
  %86 = phi i64 [ %83, %80 ], [ 9223372036854775807, %77 ]
  %87 = tail call i8* @_Znwm(i64 %86) #8
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i64 [ %86, %85 ], [ 0, %80 ]
  %90 = phi i8* [ %87, %85 ], [ null, %80 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 %72
  %92 = getelementptr inbounds i8, i8* %90, i64 %89
  %93 = ptrtoint i8* %92 to i64
  store i8 %61, i8* %91, align 1
  %94 = getelementptr inbounds i8, i8* %91, i64 1
  %95 = ptrtoint i8* %94 to i64
  %96 = load i8*, i8** %16, align 8
  %97 = load i64, i64* %13, align 8
  %98 = ptrtoint i8* %96 to i64
  %99 = sub i64 %97, %98
  %100 = sub i64 0, %99
  %101 = getelementptr inbounds i8, i8* %91, i64 %100
  %102 = ptrtoint i8* %101 to i64
  %103 = icmp sgt i64 %99, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %88
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %96, i64 %99, i1 false) #9
  %105 = load i8*, i8** %16, align 8
  br label %106

106:                                              ; preds = %104, %88
  %107 = phi i8* [ %96, %88 ], [ %105, %104 ]
  store i64 %102, i64* %14, align 8
  store i64 %95, i64* %13, align 8
  store i64 %93, i64* %15, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  tail call void @_ZdlPv(i8* nonnull %107) #8
  br label %110

110:                                              ; preds = %66, %106, %109
  %111 = load i32, i32* %9, align 8
  %112 = lshr i32 %111, 8
  store i32 %112, i32* %9, align 8
  %113 = load i64, i64* %8, align 8
  %114 = add i64 %113, -8
  store i64 %114, i64* %8, align 8
  %115 = icmp ugt i64 %114, 7
  br i1 %115, label %59, label %116

116:                                              ; preds = %110, %40
  %117 = load i64, i64* %13, align 8
  %118 = load i64, i64* %14, align 8
  %119 = sub i64 %117, %118
  %120 = icmp ult i64 %119, 4095
  %121 = inttoptr i64 %118 to i8*
  %122 = inttoptr i64 %117 to i8*
  %123 = icmp eq i8* %121, %122
  %124 = or i1 %120, %123
  br i1 %124, label %37, label %125

125:                                              ; preds = %116
  %126 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %17, align 8
  %127 = bitcast %"class.crashpad::OutputStreamInterface"* %126 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %128 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %128, i64 2
  %130 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.crashpad::OutputStreamInterface"* %126, i8* %121, i64 %119) #9
  %132 = load i64, i64* %14, align 8
  store i64 %132, i64* %13, align 8
  br i1 %131, label %37, label %154

133:                                              ; preds = %37, %3
  %134 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %134, i64 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %136, %138
  br i1 %139, label %154, label %140

140:                                              ; preds = %133
  %141 = ptrtoint i8* %136 to i64
  %142 = ptrtoint i8* %138 to i64
  %143 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %144 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %143, align 8
  %145 = bitcast i8** %137 to i64*
  %146 = bitcast %"class.std::__1::vector"* %134 to i64*
  %147 = sub i64 %142, %141
  %148 = bitcast %"class.crashpad::OutputStreamInterface"* %144 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %149 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %148, align 8
  %150 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %149, i64 2
  %151 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.crashpad::OutputStreamInterface"* %144, i8* %136, i64 %147) #9
  %153 = load i64, i64* %146, align 8
  store i64 %153, i64* %145, align 8
  br label %154

154:                                              ; preds = %125, %140, %133, %27, %25
  %155 = phi i1 [ false, %25 ], [ false, %27 ], [ %152, %140 ], [ true, %133 ], [ false, %125 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream5FlushEv(%"class.crashpad::Base94OutputStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 10
  store i8 1, i8* %2, align 2
  %3 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 1
  %7 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZN8crashpad18Base94OutputStream14FinishEncodingEv(%"class.crashpad::Base94OutputStream"* %0)
  br i1 %11, label %14, label %22

12:                                               ; preds = %6
  %13 = tail call zeroext i1 @_ZN8crashpad18Base94OutputStream14FinishDecodingEv(%"class.crashpad::Base94OutputStream"* %0)
  br i1 %13, label %14, label %22

14:                                               ; preds = %1, %10, %12
  %15 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %15, align 8
  %17 = bitcast %"class.crashpad::OutputStreamInterface"* %16 to i1 (%"class.crashpad::OutputStreamInterface"*)***
  %18 = load i1 (%"class.crashpad::OutputStreamInterface"*)**, i1 (%"class.crashpad::OutputStreamInterface"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*)*, i1 (%"class.crashpad::OutputStreamInterface"*)** %18, i64 3
  %20 = load i1 (%"class.crashpad::OutputStreamInterface"*)*, i1 (%"class.crashpad::OutputStreamInterface"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.crashpad::OutputStreamInterface"* %16) #9
  br label %22

22:                                               ; preds = %10, %12, %14
  %23 = phi i1 [ %21, %14 ], [ false, %12 ], [ false, %10 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream14FinishEncodingEv(%"class.crashpad::Base94OutputStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %160, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = urem i32 %8, 94
  %10 = trunc i32 %9 to i8
  %11 = icmp ugt i8 %10, 93
  %12 = add nuw nsw i8 %10, 33
  %13 = select i1 %11, i8 -1, i8 %12
  %14 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp ult i8* %15, %17
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %24

20:                                               ; preds = %5
  store i8 %13, i8* %15, align 1
  %21 = getelementptr inbounds i8, i8* %15, i64 1
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %69

24:                                               ; preds = %5
  %25 = ptrtoint i8* %15 to i64
  %26 = bitcast i8** %14 to i64*
  %27 = bitcast %"class.std::__1::vector"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = add i64 %29, 1
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #10
  unreachable

34:                                               ; preds = %24
  %35 = bitcast i8** %16 to i64*
  %36 = sub i64 %19, %28
  %37 = icmp ult i64 %36, 4611686018427387903
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = shl i64 %36, 1
  %40 = icmp ult i64 %39, %30
  %41 = select i1 %40, i64 %30, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38, %34
  %44 = phi i64 [ %41, %38 ], [ 9223372036854775807, %34 ]
  %45 = tail call i8* @_Znwm(i64 %44) #8
  br label %46

46:                                               ; preds = %43, %38
  %47 = phi i64 [ %44, %43 ], [ 0, %38 ]
  %48 = phi i8* [ %45, %43 ], [ null, %38 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %29
  %50 = getelementptr inbounds i8, i8* %48, i64 %47
  %51 = ptrtoint i8* %50 to i64
  store i8 %13, i8* %49, align 1
  %52 = getelementptr inbounds i8, i8* %49, i64 1
  %53 = ptrtoint i8* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = load i64, i64* %26, align 8
  %57 = ptrtoint i8* %55 to i64
  %58 = sub i64 %56, %57
  %59 = sub i64 0, %58
  %60 = getelementptr inbounds i8, i8* %49, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = icmp sgt i64 %58, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %55, i64 %58, i1 false) #9
  %64 = load i8*, i8** %54, align 8
  br label %65

65:                                               ; preds = %63, %46
  %66 = phi i8* [ %55, %46 ], [ %64, %63 ]
  store i64 %61, i64* %27, align 8
  store i64 %53, i64* %26, align 8
  store i64 %51, i64* %35, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  tail call void @_ZdlPv(i8* nonnull %66) #8
  br label %69

69:                                               ; preds = %20, %65, %68
  %70 = load i32, i32* %7, align 8
  %71 = icmp ugt i32 %70, 93
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %2, align 8
  %74 = icmp ugt i64 %73, 8
  br i1 %74, label %75, label %141

75:                                               ; preds = %72, %69
  %76 = udiv i32 %70, 94
  %77 = tail call i1 @llvm.is.constant.i32(i32 %76) #9
  %78 = icmp ult i32 %70, 24064
  %79 = trunc i32 %76 to i8
  %80 = select i1 %78, i8 %79, i8 -1
  %81 = icmp ult i32 %76, 255
  %82 = select i1 %81, i32 %76, i32 255
  %83 = trunc i32 %82 to i8
  %84 = select i1 %77, i8 %83, i8 %80
  %85 = icmp ugt i8 %84, 93
  %86 = add i8 %84, 33
  %87 = select i1 %85, i8 -1, i8 %86
  %88 = load i8*, i8** %14, align 8
  %89 = load i8*, i8** %16, align 8
  %90 = icmp ult i8* %88, %89
  %91 = ptrtoint i8* %89 to i64
  br i1 %90, label %92, label %96

92:                                               ; preds = %75
  store i8 %87, i8* %88, align 1
  %93 = getelementptr inbounds i8, i8* %88, i64 1
  %94 = ptrtoint i8* %93 to i64
  %95 = bitcast i8** %14 to i64*
  store i64 %94, i64* %95, align 8
  br label %141

96:                                               ; preds = %75
  %97 = ptrtoint i8* %88 to i64
  %98 = bitcast i8** %14 to i64*
  %99 = bitcast %"class.std::__1::vector"* %6 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %97, %100
  %102 = add i64 %101, 1
  %103 = icmp slt i64 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %105) #10
  unreachable

106:                                              ; preds = %96
  %107 = bitcast i8** %16 to i64*
  %108 = sub i64 %91, %100
  %109 = icmp ult i64 %108, 4611686018427387903
  br i1 %109, label %110, label %115

110:                                              ; preds = %106
  %111 = shl i64 %108, 1
  %112 = icmp ult i64 %111, %102
  %113 = select i1 %112, i64 %102, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %110, %106
  %116 = phi i64 [ %113, %110 ], [ 9223372036854775807, %106 ]
  %117 = tail call i8* @_Znwm(i64 %116) #8
  br label %118

118:                                              ; preds = %115, %110
  %119 = phi i64 [ %116, %115 ], [ 0, %110 ]
  %120 = phi i8* [ %117, %115 ], [ null, %110 ]
  %121 = getelementptr inbounds i8, i8* %120, i64 %101
  %122 = getelementptr inbounds i8, i8* %120, i64 %119
  %123 = ptrtoint i8* %122 to i64
  store i8 %87, i8* %121, align 1
  %124 = getelementptr inbounds i8, i8* %121, i64 1
  %125 = ptrtoint i8* %124 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = load i64, i64* %98, align 8
  %129 = ptrtoint i8* %127 to i64
  %130 = sub i64 %128, %129
  %131 = sub i64 0, %130
  %132 = getelementptr inbounds i8, i8* %121, i64 %131
  %133 = ptrtoint i8* %132 to i64
  %134 = icmp sgt i64 %130, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %118
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 %127, i64 %130, i1 false) #9
  %136 = load i8*, i8** %126, align 8
  br label %137

137:                                              ; preds = %135, %118
  %138 = phi i8* [ %127, %118 ], [ %136, %135 ]
  store i64 %133, i64* %99, align 8
  store i64 %125, i64* %98, align 8
  store i64 %123, i64* %107, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  tail call void @_ZdlPv(i8* nonnull %138) #8
  br label %141

141:                                              ; preds = %140, %137, %92, %72
  store i64 0, i64* %2, align 8
  store i32 0, i32* %7, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = load i8*, i8** %14, align 8
  %145 = icmp eq i8* %143, %144
  br i1 %145, label %160, label %146

146:                                              ; preds = %141
  %147 = ptrtoint i8* %143 to i64
  %148 = ptrtoint i8* %144 to i64
  %149 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %149, align 8
  %151 = bitcast i8** %14 to i64*
  %152 = bitcast %"class.std::__1::vector"* %6 to i64*
  %153 = sub i64 %148, %147
  %154 = bitcast %"class.crashpad::OutputStreamInterface"* %150 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %155 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %154, align 8
  %156 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %155, i64 2
  %157 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %156, align 8
  %158 = tail call zeroext i1 %157(%"class.crashpad::OutputStreamInterface"* %150, i8* %143, i64 %153) #9
  %159 = load i64, i64* %152, align 8
  store i64 %159, i64* %151, align 8
  br label %160

160:                                              ; preds = %146, %141, %1
  %161 = phi i1 [ true, %1 ], [ %158, %146 ], [ true, %141 ]
  ret i1 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream14FinishDecodingEv(%"class.crashpad::Base94OutputStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %96, label %5

5:                                                ; preds = %1
  %6 = add i8 %3, -33
  %7 = icmp ult i8 %6, 94
  %8 = select i1 %7, i8 %6, i8 94
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 7
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = shl i32 %9, %12
  %14 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %13, %15
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %18 = trunc i32 %16 to i8
  %19 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ult i8* %20, %22
  %24 = ptrtoint i8* %22 to i64
  br i1 %23, label %25, label %29

25:                                               ; preds = %5
  store i8 %18, i8* %20, align 1
  %26 = getelementptr inbounds i8, i8* %20, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast i8** %19 to i64*
  store i64 %27, i64* %28, align 8
  br label %75

29:                                               ; preds = %5
  %30 = ptrtoint i8* %20 to i64
  %31 = bitcast i8** %19 to i64*
  %32 = bitcast %"class.std::__1::vector"* %17 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = add i64 %34, 1
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %29
  %40 = bitcast i8** %21 to i64*
  %41 = sub i64 %24, %33
  %42 = icmp ult i64 %41, 4611686018427387903
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43, %39
  %49 = phi i64 [ %46, %43 ], [ 9223372036854775807, %39 ]
  %50 = tail call i8* @_Znwm(i64 %49) #8
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %53 = phi i8* [ %50, %48 ], [ null, %43 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %34
  %55 = getelementptr inbounds i8, i8* %53, i64 %52
  %56 = ptrtoint i8* %55 to i64
  store i8 %18, i8* %54, align 1
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  %58 = ptrtoint i8* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = load i64, i64* %31, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = sub i64 %61, %62
  %64 = sub i64 0, %63
  %65 = getelementptr inbounds i8, i8* %54, i64 %64
  %66 = ptrtoint i8* %65 to i64
  %67 = icmp sgt i64 %63, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %60, i64 %63, i1 false) #9
  %69 = load i8*, i8** %59, align 8
  br label %70

70:                                               ; preds = %68, %51
  %71 = phi i8* [ %60, %51 ], [ %69, %68 ]
  store i64 %66, i64* %32, align 8
  store i64 %58, i64* %31, align 8
  store i64 %56, i64* %40, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  tail call void @_ZdlPv(i8* nonnull %71) #8
  %74 = load i8*, i8** %19, align 8
  br label %75

75:                                               ; preds = %25, %70, %73
  %76 = phi i8* [ %26, %25 ], [ %57, %70 ], [ %74, %73 ]
  %77 = load i32, i32* %14, align 8
  %78 = lshr i32 %77, 8
  store i32 %78, i32* %14, align 8
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, %76
  br i1 %81, label %96, label %82

82:                                               ; preds = %75
  %83 = ptrtoint i8* %80 to i64
  %84 = ptrtoint i8* %76 to i64
  %85 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %85, align 8
  %87 = bitcast i8** %19 to i64*
  %88 = bitcast %"class.std::__1::vector"* %17 to i64*
  %89 = sub i64 %84, %83
  %90 = bitcast %"class.crashpad::OutputStreamInterface"* %86 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %91 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %91, i64 2
  %93 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.crashpad::OutputStreamInterface"* %86, i8* %80, i64 %89) #9
  %95 = load i64, i64* %88, align 8
  store i64 %95, i64* %87, align 8
  br label %96

96:                                               ; preds = %82, %75, %1
  %97 = phi i1 [ true, %1 ], [ %94, %82 ], [ true, %75 ]
  ret i1 %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad18Base94OutputStream17WriteOutputStreamEv(%"class.crashpad::Base94OutputStream"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = ptrtoint i8* %4 to i64
  %10 = ptrtoint i8* %6 to i64
  %11 = getelementptr inbounds %"class.crashpad::Base94OutputStream", %"class.crashpad::Base94OutputStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.crashpad::OutputStreamInterface"*, %"class.crashpad::OutputStreamInterface"** %11, align 8
  %13 = bitcast i8** %5 to i64*
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = sub i64 %10, %9
  %16 = bitcast %"class.crashpad::OutputStreamInterface"* %12 to i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)***
  %17 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)**, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %17, i64 2
  %19 = load i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)*, i1 (%"class.crashpad::OutputStreamInterface"*, i8*, i64)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.crashpad::OutputStreamInterface"* %12, i8* %4, i64 %15) #9
  %21 = load i64, i64* %14, align 8
  store i64 %21, i64* %13, align 8
  br label %22

22:                                               ; preds = %1, %8
  %23 = phi i1 [ %20, %8 ], [ true, %1 ]
  ret i1 %23
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
