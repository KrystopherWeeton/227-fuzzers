; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/cert_compressor.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/cert_compressor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.quic::CommonCertSets" = type { i32 (...)** }
%"struct.quic::(anonymous namespace)::CertEntry" = type { i32, i64, i64, i32 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.quic::(anonymous namespace)::CertEntry"* }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { i64*, i64*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64* }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@_ZN4quic12_GLOBAL__N_121kCommonCertSubstringsE = internal unnamed_addr constant [1484 x i8] c"\04\020\000\1D\06\03U\1D%\04\160\14\06\08+\06\01\05\05\07\03\01\06\08+\06\01\05\05\07\03\020_\06\09`\86H\01\86\F8B\04\01\06\06\0B`\86H\01\86\FDm\01\07\17\0103 Extended Validation S Limited14 SSL CA0\1E\17\0D12 Secure Server CA0-aia.verisign.com/E-crl.verisign.com/E.cer0\0D\06\09*\86H\86\F7\0D\01\01\05\05\00\03\82\01\01\00J.com/resources/cps (c)00\09\06\03U\1D\13\04\020\000\1D0\0D\06\09*\86H\86\F7\0D\01\01\05\05\00\03\82\01\01\00{0\1D\06\03U\1D\0E0\82\01\220\0D\06\09*\86H\86\F7\0D\01\01\01\05\00\03\82\01\0F\000\82\01\0A\02\82\01\01\00\D2odoca.com/C.crl0\1D\06\03U\1D\0E\04\16\04\14\B4.globalsign.com/r0\0B\06\03U\1D\0F\04\04\03\02\010\0D\06\09*\86H\86\F7\0D\01\01\05\05\000\81\CA1\0B0\09\06\03U\04\06\13\02US1\100\0E\06\03U\04\08\13\07Arizona1\130\11\06\03U\04\07\13\0AScottsdale1\1A0\18\06\03U\04\0A\13\11GoDaddy.com, Inc.1301\06\03U\04\0B\13*http://certificates.godaddy.com/repository100.\06\03U\04\03\13'Go Daddy Secure Certification Authority1\110\0F\06\03U\04\05\13\08079692870\1E\17\0D110\0E\06\03U\1D\0F\01\01\FF\04\04\03\02\05\A00\0C\06\03U\1D\13\01\01\FF\04\020\000\1D0\0F\06\03U\1D\13\01\01\FF\04\050\03\01\01\000\1D\06\03U\1D%\04\160\14\06\08+\06\01\05\05\07\03\01\06\08+\06\01\05\05\07\03\020\0E\06\03U\1D\0F\01\01\FF\04\04\03\02\05\A003\06\03U\1D\1F\04,0*0(\A0&\A0$\86\22http://crl.godaddy.com/gds1-20*0(\06\08+\06\01\05\05\07\02\01\16\1Chttps://www.verisign.com/cps04000000Z\17\0D130509\06\08+\06\01\05\05\070\02\86-http://s0907\06\08+\06\01\05\05\07\020D\06\03U\1D \04=0;09\06\0B`\86H\01\86\F8E\01\07\17\061\0B0\09\06\03U\04\06\13\02GB1\1BS1\170\15\06\03U\04\0A\13\0EVeriSign, Inc.1\1F0\1D\06\03U\04\0B\13\16VeriSign Trust Network1;09\06\03U\04\0B\132Terms of use at https://www.verisign.com/rpa (c)01\100\0E\06\03U\04\07\13\07S1\130\11\06\03U\04\0B\13\0AG1\130\11\06\0B+\06\01\04\01\827<\02\01\03\13\02U1\160\14\06\03U\04\03\141\190\17\06\03U\04\03\131\1D0\1B\06\03U\04\0F\13\14Private Organization1\121!0\1F\06\03U\04\0B\13\18Domain Control Validated1\14110/\06\03U\04\0B\13(See www.r://secure.gGlobalSign1ServerCA.crlVeriSign Class 3 Ecrl.geotrust.com/crls/sd1\1A0\18\06\03U\04\0Ahttp://EVIntl-ccrt.gwww.gicert.com/1ocsp.verisign.com09rapidssl.cos.godaddy.com/repository/0\81\80\06\08+\06\01\05\05\07\01\01\04t0r0$\06\08+\06\01\05\05\070\01\86\18http://ocsp.godaddy.com/0J\06\08+\06\01\05\05\070\02\86>http://certificates.godaddy.com/repository/gd_intermediate.crt0\1F\06\03U\1D#\04\180\16\80\14\FD\ACa2\93lE\D6\E2\EE\85_\9A\BA\E7v\99h\CC\E70'\86)http://c\860http://s", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14CertCompressor13CompressChainERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4absl11string_viewESE_PKNS_14CommonCertSetsE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i8*, i64, i8* nocapture readonly, i64, %"class.quic::CommonCertSets"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.quic::(anonymous namespace)::CertEntry", align 8
  %9 = alloca %"class.std::__1::vector.6", align 8
  %10 = alloca %struct.z_stream_s, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca i32, align 4
  %14 = bitcast %"class.std::__1::vector.6"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !2
  %21 = bitcast %"class.std::__1::vector"* %1 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !2
  %23 = sub i64 %20, %22
  %24 = sdiv exact i64 %23, 24
  %25 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"** %17 to i64*
  %26 = bitcast %"class.std::__1::vector.6"* %9 to i64*
  %27 = icmp eq i64 %23, 0
  %28 = inttoptr i64 %22 to %"class.std::__1::basic_string"*
  %29 = inttoptr i64 %20 to %"class.std::__1::basic_string"*
  br i1 %27, label %42, label %30

30:                                               ; preds = %7
  %31 = icmp ugt i64 %24, 576460752303423487
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void @abort() #10
  unreachable

33:                                               ; preds = %30
  %34 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"** %16 to i64*
  %35 = shl i64 %24, 5
  %36 = tail call i8* @_Znwm(i64 %35) #11
  %37 = bitcast i8* %36 to %"struct.quic::(anonymous namespace)::CertEntry"*
  %38 = ptrtoint i8* %36 to i64
  %39 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %37, i64 %24
  %40 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %39 to i64
  store i64 %38, i64* %26, align 8, !alias.scope !2
  store i64 %38, i64* %34, align 8, !alias.scope !2
  store i64 %40, i64* %25, align 8, !alias.scope !2
  %41 = bitcast i8* %36 to %"struct.quic::(anonymous namespace)::CertEntry"*
  br label %42

42:                                               ; preds = %33, %7
  %43 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %41, %33 ], [ null, %7 ]
  %44 = and i64 %5, 7
  %45 = icmp eq i64 %44, 0
  %46 = icmp ne i64 %5, 0
  %47 = and i1 %46, %45
  %48 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"** %16 to i64*
  br label %291

51:                                               ; preds = %42
  %52 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %8 to i8*
  %53 = icmp eq %"class.quic::CommonCertSets"* %6, null
  %54 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %8, i64 0, i32 2
  %55 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %8, i64 0, i32 3
  %56 = bitcast %"class.quic::CommonCertSets"* %6 to i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)***
  %57 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %8, i64 0, i32 0
  %58 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"** %16 to i64*
  %59 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %8, i64 0, i32 1
  br label %60

60:                                               ; preds = %274, %51
  %61 = phi %"class.std::__1::basic_string"* [ %28, %51 ], [ %275, %274 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false) #9, !noalias !2
  br i1 %47, label %62, label %144

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = zext i8 %65 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %61 to i64
  br label %77

70:                                               ; preds = %62
  %71 = bitcast %"class.std::__1::basic_string"* %61 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp sgt i64 %74, -1
  br i1 %75, label %77, label %76, !prof !5

76:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

77:                                               ; preds = %70, %67
  %78 = phi i64 [ %72, %70 ], [ %69, %67 ]
  %79 = phi i64 [ %74, %70 ], [ %68, %67 ]
  %80 = inttoptr i64 %78 to i8*
  %81 = call i64 @_ZN4quic9QuicUtils13FNV1a_64_HashEN4absl11string_viewE(i8* %80, i64 %79) #9
  br label %84

82:                                               ; preds = %84
  %83 = icmp ult i64 %90, %5
  br i1 %83, label %84, label %144

84:                                               ; preds = %82, %77
  %85 = phi i64 [ %90, %82 ], [ 0, %77 ]
  %86 = getelementptr inbounds i8, i8* %4, i64 %85
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 1, !noalias !2
  %89 = icmp eq i64 %81, %88
  %90 = add i64 %85, 8
  br i1 %89, label %91, label %82

91:                                               ; preds = %84
  store i32 2, i32* %57, align 8, !noalias !2
  store i64 %81, i64* %59, align 8, !noalias !2
  %92 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8, !alias.scope !2
  %93 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %17, align 8, !alias.scope !2
  %94 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %92, %93
  %95 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %93 to i64
  br i1 %94, label %100, label %96

96:                                               ; preds = %91
  %97 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* nonnull align 8 %52, i64 32, i1 false) #9
  %98 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %92, i64 1
  %99 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %98 to i64
  store i64 %99, i64* %58, align 8, !alias.scope !2
  br label %274

100:                                              ; preds = %91
  %101 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %92 to i64
  %102 = load i64, i64* %26, align 8, !alias.scope !2
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 5
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 576460752303423487
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::vector.6"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %108) #10
  unreachable

109:                                              ; preds = %100
  %110 = sub i64 %95, %102
  %111 = ashr exact i64 %110, 5
  %112 = icmp ult i64 %111, 288230376151711743
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = ashr exact i64 %110, 4
  %115 = icmp ult i64 %114, %105
  %116 = select i1 %115, i64 %105, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 576460752303423487
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  call void @abort() #10
  unreachable

121:                                              ; preds = %118, %109
  %122 = phi i64 [ %116, %118 ], [ 576460752303423487, %109 ]
  %123 = shl i64 %122, 5
  %124 = call i8* @_Znwm(i64 %123) #11
  %125 = bitcast i8* %124 to %"struct.quic::(anonymous namespace)::CertEntry"*
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi i8* [ %124, %121 ], [ null, %113 ]
  %129 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %125, %121 ], [ null, %113 ]
  %130 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %129, i64 %104
  %131 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %129, i64 %127
  %132 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %131 to i64
  %133 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* nonnull align 8 %52, i64 32, i1 false) #9, !noalias !2
  %134 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %130, i64 1
  %135 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %134 to i64
  %136 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %129 to i64
  %137 = icmp sgt i64 %103, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %126
  %139 = inttoptr i64 %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %139, i64 %103, i1 false) #9
  br label %140

140:                                              ; preds = %138, %126
  store i64 %136, i64* %26, align 8, !alias.scope !2
  store i64 %135, i64* %58, align 8, !alias.scope !2
  store i64 %132, i64* %25, align 8, !alias.scope !2
  %141 = icmp eq i64 %102, 0
  br i1 %141, label %274, label %142

142:                                              ; preds = %140
  %143 = inttoptr i64 %102 to i8*
  call void @_ZdlPv(i8* %143) #11
  br label %274

144:                                              ; preds = %82, %60
  br i1 %53, label %221, label %145

145:                                              ; preds = %144
  %146 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %145
  %151 = zext i8 %148 to i64
  %152 = ptrtoint %"class.std::__1::basic_string"* %61 to i64
  br label %160

153:                                              ; preds = %145
  %154 = bitcast %"class.std::__1::basic_string"* %61 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = icmp sgt i64 %157, -1
  br i1 %158, label %160, label %159, !prof !5

159:                                              ; preds = %153
  call void @llvm.trap() #9
  unreachable

160:                                              ; preds = %153, %150
  %161 = phi i64 [ %155, %153 ], [ %152, %150 ]
  %162 = phi i64 [ %157, %153 ], [ %151, %150 ]
  %163 = inttoptr i64 %161 to i8*
  %164 = load i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)**, i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)*** %56, align 8, !noalias !2
  %165 = getelementptr inbounds i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)*, i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)** %164, i64 4
  %166 = load i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)*, i1 (%"class.quic::CommonCertSets"*, i8*, i64, i8*, i64, i64*, i32*)** %165, align 8
  %167 = call zeroext i1 %166(%"class.quic::CommonCertSets"* nonnull %6, i8* %163, i64 %162, i8* %2, i64 %3, i64* %54, i32* %55) #9
  br i1 %167, label %168, label %221

168:                                              ; preds = %160
  store i32 3, i32* %57, align 8, !noalias !2
  %169 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8, !alias.scope !2
  %170 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %17, align 8, !alias.scope !2
  %171 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %169, %170
  %172 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %170 to i64
  br i1 %171, label %177, label %173

173:                                              ; preds = %168
  %174 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* nonnull align 8 %52, i64 32, i1 false) #9
  %175 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %169, i64 1
  %176 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %175 to i64
  store i64 %176, i64* %58, align 8, !alias.scope !2
  br label %274

177:                                              ; preds = %168
  %178 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %169 to i64
  %179 = load i64, i64* %26, align 8, !alias.scope !2
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 5
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 576460752303423487
  br i1 %183, label %184, label %186

184:                                              ; preds = %177
  %185 = bitcast %"class.std::__1::vector.6"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %185) #10
  unreachable

186:                                              ; preds = %177
  %187 = sub i64 %172, %179
  %188 = ashr exact i64 %187, 5
  %189 = icmp ult i64 %188, 288230376151711743
  br i1 %189, label %190, label %198

190:                                              ; preds = %186
  %191 = ashr exact i64 %187, 4
  %192 = icmp ult i64 %191, %182
  %193 = select i1 %192, i64 %182, i64 %191
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %203, label %195

195:                                              ; preds = %190
  %196 = icmp ugt i64 %193, 576460752303423487
  br i1 %196, label %197, label %198

197:                                              ; preds = %195
  call void @abort() #10
  unreachable

198:                                              ; preds = %195, %186
  %199 = phi i64 [ %193, %195 ], [ 576460752303423487, %186 ]
  %200 = shl i64 %199, 5
  %201 = call i8* @_Znwm(i64 %200) #11
  %202 = bitcast i8* %201 to %"struct.quic::(anonymous namespace)::CertEntry"*
  br label %203

203:                                              ; preds = %198, %190
  %204 = phi i64 [ %199, %198 ], [ 0, %190 ]
  %205 = phi i8* [ %201, %198 ], [ null, %190 ]
  %206 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %202, %198 ], [ null, %190 ]
  %207 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %206, i64 %181
  %208 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %206, i64 %204
  %209 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %208 to i64
  %210 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* nonnull align 8 %52, i64 32, i1 false) #9, !noalias !2
  %211 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %207, i64 1
  %212 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %211 to i64
  %213 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %206 to i64
  %214 = icmp sgt i64 %180, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %203
  %216 = inttoptr i64 %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %216, i64 %180, i1 false) #9
  br label %217

217:                                              ; preds = %215, %203
  store i64 %213, i64* %26, align 8, !alias.scope !2
  store i64 %212, i64* %58, align 8, !alias.scope !2
  store i64 %209, i64* %25, align 8, !alias.scope !2
  %218 = icmp eq i64 %179, 0
  br i1 %218, label %274, label %219

219:                                              ; preds = %217
  %220 = inttoptr i64 %179 to i8*
  call void @_ZdlPv(i8* %220) #11
  br label %274

221:                                              ; preds = %160, %144
  store i32 1, i32* %57, align 8, !noalias !2
  %222 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8, !alias.scope !2
  %223 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %17, align 8, !alias.scope !2
  %224 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %222, %223
  %225 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %223 to i64
  br i1 %224, label %230, label %226

226:                                              ; preds = %221
  %227 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* nonnull align 8 %52, i64 32, i1 false) #9
  %228 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %222, i64 1
  %229 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %228 to i64
  store i64 %229, i64* %58, align 8, !alias.scope !2
  br label %274

230:                                              ; preds = %221
  %231 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %222 to i64
  %232 = load i64, i64* %26, align 8, !alias.scope !2
  %233 = sub i64 %231, %232
  %234 = ashr exact i64 %233, 5
  %235 = add nsw i64 %234, 1
  %236 = icmp ugt i64 %235, 576460752303423487
  br i1 %236, label %237, label %239

237:                                              ; preds = %230
  %238 = bitcast %"class.std::__1::vector.6"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %238) #10
  unreachable

239:                                              ; preds = %230
  %240 = sub i64 %225, %232
  %241 = ashr exact i64 %240, 5
  %242 = icmp ult i64 %241, 288230376151711743
  br i1 %242, label %243, label %251

243:                                              ; preds = %239
  %244 = ashr exact i64 %240, 4
  %245 = icmp ult i64 %244, %235
  %246 = select i1 %245, i64 %235, i64 %244
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %243
  %249 = icmp ugt i64 %246, 576460752303423487
  br i1 %249, label %250, label %251

250:                                              ; preds = %248
  call void @abort() #10
  unreachable

251:                                              ; preds = %248, %239
  %252 = phi i64 [ %246, %248 ], [ 576460752303423487, %239 ]
  %253 = shl i64 %252, 5
  %254 = call i8* @_Znwm(i64 %253) #11
  %255 = bitcast i8* %254 to %"struct.quic::(anonymous namespace)::CertEntry"*
  br label %256

256:                                              ; preds = %251, %243
  %257 = phi i64 [ %252, %251 ], [ 0, %243 ]
  %258 = phi i8* [ %254, %251 ], [ null, %243 ]
  %259 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %255, %251 ], [ null, %243 ]
  %260 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %259, i64 %234
  %261 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %259, i64 %257
  %262 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %261 to i64
  %263 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* nonnull align 8 %52, i64 32, i1 false) #9, !noalias !2
  %264 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %260, i64 1
  %265 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %264 to i64
  %266 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %259 to i64
  %267 = icmp sgt i64 %233, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %256
  %269 = inttoptr i64 %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %269, i64 %233, i1 false) #9
  br label %270

270:                                              ; preds = %268, %256
  store i64 %266, i64* %26, align 8, !alias.scope !2
  store i64 %265, i64* %58, align 8, !alias.scope !2
  store i64 %262, i64* %25, align 8, !alias.scope !2
  %271 = icmp eq i64 %232, 0
  br i1 %271, label %274, label %272

272:                                              ; preds = %270
  %273 = inttoptr i64 %232 to i8*
  call void @_ZdlPv(i8* %273) #11
  br label %274

274:                                              ; preds = %272, %270, %226, %219, %217, %173, %142, %140, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #9, !noalias !2
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %276 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8, !noalias !2
  %277 = icmp eq %"class.std::__1::basic_string"* %275, %276
  br i1 %277, label %278, label %60

278:                                              ; preds = %274
  %279 = load i64, i64* %58, align 8
  %280 = load i64, i64* %26, align 8
  %281 = inttoptr i64 %280 to %"struct.quic::(anonymous namespace)::CertEntry"*
  %282 = inttoptr i64 %279 to %"struct.quic::(anonymous namespace)::CertEntry"*
  %283 = icmp eq i64 %279, %280
  br i1 %283, label %291, label %284

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %286 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %285, align 8
  %287 = load i64, i64* %58, align 8
  %288 = sub i64 %287, %280
  %289 = ashr exact i64 %288, 5
  %290 = inttoptr i64 %287 to %"struct.quic::(anonymous namespace)::CertEntry"*
  br label %299

291:                                              ; preds = %278, %49
  %292 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %43, %49 ], [ %281, %278 ]
  %293 = phi i64* [ %50, %49 ], [ %58, %278 ]
  %294 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %43, %49 ], [ %282, %278 ]
  %295 = bitcast %struct.z_stream_s* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %295) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 -86, i64 112, i1 false)
  br label %366

296:                                              ; preds = %320
  %297 = bitcast %struct.z_stream_s* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %297) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 -86, i64 112, i1 false)
  %298 = icmp eq i64 %321, 0
  br i1 %298, label %366, label %324

299:                                              ; preds = %284, %320
  %300 = phi i64 [ 0, %284 ], [ %321, %320 ]
  %301 = phi i64 [ 0, %284 ], [ %322, %320 ]
  %302 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %281, i64 %301, i32 0
  %303 = load i32, i32* %302, align 8
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %320

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %286, i64 %301
  %307 = bitcast %"class.std::__1::basic_string"* %306 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %307, i64 0, i32 1, i32 0
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %286, i64 %301, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %313 = load i64, i64* %312, align 8
  br label %316

314:                                              ; preds = %305
  %315 = zext i8 %309 to i64
  br label %316

316:                                              ; preds = %311, %314
  %317 = phi i64 [ %313, %311 ], [ %315, %314 ]
  %318 = add i64 %300, 4
  %319 = add i64 %318, %317
  br label %320

320:                                              ; preds = %299, %316
  %321 = phi i64 [ %319, %316 ], [ %300, %299 ]
  %322 = add nuw i64 %301, 1
  %323 = icmp ult i64 %322, %289
  br i1 %323, label %299, label %296

324:                                              ; preds = %296
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 0, i64 112, i1 false)
  %325 = call i32 @Cr_z_deflateInit_(%struct.z_stream_s* nonnull %10, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #9
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %324
  %328 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  store i8 0, i8* %329, align 1
  %330 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %330, align 8
  br label %583

331:                                              ; preds = %324
  %332 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #9
  %333 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %335 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN4quic12_GLOBAL__N_118ZlibDictForEntriesERKNSt3__16vectorINS0_9CertEntryENS1_9allocatorIS3_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.std::__1::vector.6"* nonnull dereferenceable(24) %9, %"class.std::__1::vector"* dereferenceable(24) %1)
  %336 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %337 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %336, i64 0, i32 1, i32 0
  %338 = load i8, i8* %337, align 1
  %339 = icmp slt i8 %338, 0
  %340 = load i8*, i8** %333, align 8
  %341 = load i64, i64* %334, align 8
  %342 = zext i8 %338 to i64
  %343 = select i1 %339, i8* %340, i8* %332
  %344 = select i1 %339, i64 %341, i64 %342
  %345 = trunc i64 %344 to i32
  %346 = call i32 @Cr_z_deflateSetDictionary(%struct.z_stream_s* nonnull %10, i8* %343, i32 %345) #9
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %352, label %348

348:                                              ; preds = %331
  %349 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  store i8 0, i8* %350, align 1
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %351, align 8
  br label %354

352:                                              ; preds = %331
  %353 = call i64 @Cr_z_deflateBound(%struct.z_stream_s* nonnull %10, i64 %321) #9
  br label %354

354:                                              ; preds = %352, %348
  %355 = phi i64 [ 0, %348 ], [ %353, %352 ]
  %356 = phi i32 [ 1, %348 ], [ 0, %352 ]
  %357 = load i8, i8* %337, align 1
  %358 = icmp slt i8 %357, 0
  br i1 %358, label %359, label %361

359:                                              ; preds = %354
  %360 = load i8*, i8** %333, align 8
  call void @_ZdlPv(i8* %360) #11
  br label %361

361:                                              ; preds = %359, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #9
  %362 = icmp eq i32 %356, 0
  br i1 %362, label %363, label %578

363:                                              ; preds = %361
  %364 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %15, align 8
  %365 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8
  br label %366

366:                                              ; preds = %296, %291, %363
  %367 = phi i64 [ 4, %363 ], [ 0, %296 ], [ 0, %291 ]
  %368 = phi i8* [ %297, %363 ], [ %297, %296 ], [ %295, %291 ]
  %369 = phi i64 [ %321, %363 ], [ 0, %296 ], [ 0, %291 ]
  %370 = phi i64* [ %58, %363 ], [ %58, %296 ], [ %293, %291 ]
  %371 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %365, %363 ], [ %290, %296 ], [ %294, %291 ]
  %372 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %364, %363 ], [ %281, %296 ], [ %292, %291 ]
  %373 = phi %struct.z_stream_s* [ %10, %363 ], [ null, %296 ], [ null, %291 ]
  %374 = phi i64 [ %355, %363 ], [ 0, %296 ], [ 0, %291 ]
  %375 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %372, %371
  br i1 %375, label %419, label %376

376:                                              ; preds = %366
  %377 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %372 to i64
  %378 = getelementptr %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %371, i64 -1, i32 0
  %379 = ptrtoint i32* %378 to i64
  %380 = sub i64 %379, %377
  %381 = lshr i64 %380, 5
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 1
  %384 = icmp eq i64 %381, 0
  br i1 %384, label %403, label %385

385:                                              ; preds = %376
  %386 = sub nuw nsw i64 %382, %383
  br label %387

387:                                              ; preds = %596, %385
  %388 = phi i64 [ 1, %385 ], [ %599, %596 ]
  %389 = phi i64 [ 0, %385 ], [ %597, %596 ]
  %390 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %372, %385 ], [ %598, %596 ]
  %391 = phi i64 [ %386, %385 ], [ %600, %596 ]
  %392 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %390, i64 0, i32 0
  %393 = load i32, i32* %392, align 8
  switch i32 %393, label %398 [
    i32 3, label %396
    i32 2, label %394
  ]

394:                                              ; preds = %387
  %395 = add i64 %389, 9
  br label %398

396:                                              ; preds = %387
  %397 = add i64 %389, 13
  br label %398

398:                                              ; preds = %396, %394, %387
  %399 = phi i64 [ %388, %387 ], [ %395, %394 ], [ %397, %396 ]
  %400 = add i64 %399, 1
  %401 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %390, i64 1, i32 0
  %402 = load i32, i32* %401, align 8
  switch i32 %402, label %596 [
    i32 3, label %594
    i32 2, label %592
  ]

403:                                              ; preds = %596, %376
  %404 = phi i64 [ undef, %376 ], [ %599, %596 ]
  %405 = phi i64 [ 1, %376 ], [ %599, %596 ]
  %406 = phi i64 [ 0, %376 ], [ %597, %596 ]
  %407 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %372, %376 ], [ %598, %596 ]
  %408 = icmp eq i64 %383, 0
  br i1 %408, label %419, label %409

409:                                              ; preds = %403
  %410 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %407, i64 0, i32 0
  %411 = load i32, i32* %410, align 8
  switch i32 %411, label %416 [
    i32 3, label %414
    i32 2, label %412
  ]

412:                                              ; preds = %409
  %413 = add i64 %406, 9
  br label %416

414:                                              ; preds = %409
  %415 = add i64 %406, 13
  br label %416

416:                                              ; preds = %409, %412, %414
  %417 = phi i64 [ %405, %409 ], [ %413, %412 ], [ %415, %414 ]
  %418 = add i64 %417, 1
  br label %419

419:                                              ; preds = %416, %403, %366
  %420 = phi i64 [ 1, %366 ], [ %404, %403 ], [ %418, %416 ]
  %421 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %421) #9
  %422 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %421, i8 0, i64 24, i1 false) #9
  %424 = add i64 %374, %367
  %425 = add i64 %424, %420
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %12, i64 %425, i8 signext 0) #9
  %426 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %427 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %426, i64 0, i32 1, i32 0
  %428 = load i8, i8* %427, align 1
  %429 = icmp slt i8 %428, 0
  %430 = load i8*, i8** %422, align 8
  %431 = select i1 %429, i8* %430, i8* %421
  %432 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %15, align 8
  %433 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8
  %434 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %432, %433
  br i1 %434, label %462, label %435

435:                                              ; preds = %419, %457
  %436 = phi i8* [ %458, %457 ], [ %431, %419 ]
  %437 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %459, %457 ], [ %432, %419 ]
  %438 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %437, i64 0, i32 0
  %439 = load i32, i32* %438, align 8
  %440 = trunc i32 %439 to i8
  %441 = getelementptr inbounds i8, i8* %436, i64 1
  store i8 %440, i8* %436, align 1
  %442 = load i32, i32* %438, align 8
  switch i32 %442, label %457 [
    i32 3, label %448
    i32 2, label %443
  ]

443:                                              ; preds = %435
  %444 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %437, i64 0, i32 1
  %445 = bitcast i8* %441 to i64*
  %446 = load i64, i64* %444, align 8
  store i64 %446, i64* %445, align 1
  %447 = getelementptr inbounds i8, i8* %436, i64 9
  br label %457

448:                                              ; preds = %435
  %449 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %437, i64 0, i32 2
  %450 = bitcast i8* %441 to i64*
  %451 = load i64, i64* %449, align 8
  store i64 %451, i64* %450, align 1
  %452 = getelementptr inbounds i8, i8* %436, i64 9
  %453 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %437, i64 0, i32 3
  %454 = bitcast i8* %452 to i32*
  %455 = load i32, i32* %453, align 8
  store i32 %455, i32* %454, align 1
  %456 = getelementptr inbounds i8, i8* %436, i64 13
  br label %457

457:                                              ; preds = %448, %443, %435
  %458 = phi i8* [ %441, %435 ], [ %447, %443 ], [ %456, %448 ]
  %459 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %437, i64 1
  %460 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8
  %461 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %459, %460
  br i1 %461, label %462, label %435

462:                                              ; preds = %457, %419
  %463 = phi i8* [ %431, %419 ], [ %458, %457 ]
  store i8 0, i8* %463, align 1
  %464 = getelementptr inbounds i8, i8* %431, i64 %420
  %465 = icmp eq i64 %369, 0
  br i1 %465, label %466, label %468

466:                                              ; preds = %462
  %467 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %467, i8* nonnull align 8 %421, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %421, i8 0, i64 24, i1 false) #9
  br label %571

468:                                              ; preds = %462
  %469 = trunc i64 %369 to i32
  %470 = bitcast i8* %464 to i32*
  store i32 %469, i32* %470, align 1
  %471 = getelementptr inbounds i8, i8* %464, i64 4
  %472 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 3
  store i8* %471, i8** %472, align 8
  %473 = trunc i64 %374 to i32
  %474 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 4
  store i32 %473, i32* %474, align 8
  %475 = load i64, i64* %19, align 8
  %476 = load i64, i64* %21, align 8
  %477 = icmp eq i64 %475, %476
  br i1 %477, label %553, label %478

478:                                              ; preds = %468
  %479 = bitcast i32* %13 to i8*
  %480 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %481 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 0
  %482 = bitcast %struct.z_stream_s* %10 to i32**
  %483 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 1
  br label %484

484:                                              ; preds = %478, %542
  %485 = phi i64 [ %476, %478 ], [ %543, %542 ]
  %486 = phi i64 [ %475, %478 ], [ %544, %542 ]
  %487 = phi i64 [ 0, %478 ], [ %545, %542 ]
  %488 = inttoptr i64 %485 to %"class.std::__1::basic_string"*
  %489 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %15, align 8
  %490 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %489, i64 %487, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = icmp eq i32 %491, 1
  br i1 %492, label %493, label %542

493:                                              ; preds = %484
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %479) #9
  store i32 -1431655766, i32* %13, align 4
  %494 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %488, i64 %487
  %495 = bitcast %"class.std::__1::basic_string"* %494 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %496 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %495, i64 0, i32 1, i32 0
  %497 = load i8, i8* %496, align 1
  %498 = icmp slt i8 %497, 0
  br i1 %498, label %499, label %502

499:                                              ; preds = %493
  %500 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %488, i64 %487, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %501 = load i64, i64* %500, align 8
  br label %504

502:                                              ; preds = %493
  %503 = zext i8 %497 to i64
  br label %504

504:                                              ; preds = %499, %502
  %505 = phi i64 [ %501, %499 ], [ %503, %502 ]
  %506 = trunc i64 %505 to i32
  store i32 %506, i32* %13, align 4
  store i32* %13, i32** %482, align 8
  store i32 4, i32* %483, align 8
  %507 = call i32 @Cr_z_deflate(%struct.z_stream_s* nonnull %10, i32 0) #9
  %508 = load i32, i32* %483, align 8
  %509 = or i32 %508, %507
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %549

511:                                              ; preds = %504
  %512 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %480, align 8
  %513 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %512, i64 %487
  %514 = bitcast %"class.std::__1::basic_string"* %513 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %515 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %514, i64 0, i32 1, i32 0
  %516 = load i8, i8* %515, align 1
  %517 = icmp slt i8 %516, 0
  br i1 %517, label %518, label %521

518:                                              ; preds = %511
  %519 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %513, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load i8*, i8** %519, align 8
  br label %523

521:                                              ; preds = %511
  %522 = bitcast %"class.std::__1::basic_string"* %513 to i8*
  br label %523

523:                                              ; preds = %518, %521
  %524 = phi i8* [ %520, %518 ], [ %522, %521 ]
  store i8* %524, i8** %481, align 8
  %525 = load i8, i8* %515, align 1
  %526 = icmp slt i8 %525, 0
  br i1 %526, label %527, label %530

527:                                              ; preds = %523
  %528 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %512, i64 %487, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %529 = load i64, i64* %528, align 8
  br label %532

530:                                              ; preds = %523
  %531 = zext i8 %525 to i64
  br label %532

532:                                              ; preds = %527, %530
  %533 = phi i64 [ %529, %527 ], [ %531, %530 ]
  %534 = trunc i64 %533 to i32
  store i32 %534, i32* %483, align 8
  %535 = call i32 @Cr_z_deflate(%struct.z_stream_s* nonnull %10, i32 0) #9
  %536 = load i32, i32* %483, align 8
  %537 = or i32 %536, %535
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %549

539:                                              ; preds = %532
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %479) #9
  %540 = load i64, i64* %19, align 8
  %541 = load i64, i64* %21, align 8
  br label %542

542:                                              ; preds = %539, %484
  %543 = phi i64 [ %541, %539 ], [ %485, %484 ]
  %544 = phi i64 [ %540, %539 ], [ %486, %484 ]
  %545 = add nuw i64 %487, 1
  %546 = sub i64 %544, %543
  %547 = sdiv exact i64 %546, 24
  %548 = icmp ult i64 %545, %547
  br i1 %548, label %484, label %553

549:                                              ; preds = %532, %504
  %550 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %551 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %550, i64 0, i32 1, i32 0
  store i8 0, i8* %551, align 1
  %552 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %552, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %479) #9
  br label %571

553:                                              ; preds = %542, %468
  %554 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 1
  store i32 0, i32* %554, align 8
  %555 = call i32 @Cr_z_deflate(%struct.z_stream_s* nonnull %10, i32 4) #9
  %556 = icmp eq i32 %555, 1
  br i1 %556, label %561, label %557

557:                                              ; preds = %553
  %558 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %559 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %558, i64 0, i32 1, i32 0
  store i8 0, i8* %559, align 1
  %560 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %560, align 8
  br label %571

561:                                              ; preds = %553
  %562 = load i8, i8* %427, align 1
  %563 = icmp slt i8 %562, 0
  %564 = load i64, i64* %423, align 8
  %565 = zext i8 %562 to i64
  %566 = select i1 %563, i64 %564, i64 %565
  %567 = load i32, i32* %474, align 8
  %568 = zext i32 %567 to i64
  %569 = sub i64 %566, %568
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %12, i64 %569, i8 signext 0) #9
  %570 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %570, i8* nonnull align 8 %421, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %421, i8 0, i64 24, i1 false) #9
  br label %571

571:                                              ; preds = %549, %557, %561, %466
  %572 = load i8, i8* %427, align 1
  %573 = icmp slt i8 %572, 0
  br i1 %573, label %574, label %576

574:                                              ; preds = %571
  %575 = load i8*, i8** %422, align 8
  call void @_ZdlPv(i8* %575) #11
  br label %576

576:                                              ; preds = %574, %571
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %421) #9
  %577 = icmp eq %struct.z_stream_s* %373, null
  br i1 %577, label %583, label %578

578:                                              ; preds = %361, %576
  %579 = phi i8* [ %368, %576 ], [ %297, %361 ]
  %580 = phi i64* [ %370, %576 ], [ %58, %361 ]
  %581 = phi %struct.z_stream_s* [ %373, %576 ], [ %10, %361 ]
  %582 = call i32 @Cr_z_deflateEnd(%struct.z_stream_s* nonnull %581) #9
  br label %583

583:                                              ; preds = %327, %576, %578
  %584 = phi i8* [ %297, %327 ], [ %368, %576 ], [ %579, %578 ]
  %585 = phi i64* [ %58, %327 ], [ %370, %576 ], [ %580, %578 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %584) #9
  %586 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %15, align 8
  %587 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %586, null
  br i1 %587, label %591, label %588

588:                                              ; preds = %583
  %589 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %586 to i64
  store i64 %589, i64* %585, align 8
  %590 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %586 to i8*
  call void @_ZdlPv(i8* %590) #11
  br label %591

591:                                              ; preds = %583, %588
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void

592:                                              ; preds = %398
  %593 = add i64 %399, 9
  br label %596

594:                                              ; preds = %398
  %595 = add i64 %399, 13
  br label %596

596:                                              ; preds = %594, %592, %398
  %597 = phi i64 [ %400, %398 ], [ %593, %592 ], [ %595, %594 ]
  %598 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %390, i64 2
  %599 = add i64 %597, 1
  %600 = add i64 %391, -2
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %403, label %387
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @Cr_z_deflateInit_(%struct.z_stream_s*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4quic12_GLOBAL__N_118ZlibDictForEntriesERKNSt3__16vectorINS0_9CertEntryENS1_9allocatorIS3_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 0
  %13 = inttoptr i64 %9 to %"class.std::__1::basic_string"*
  br i1 %12, label %18, label %14

14:                                               ; preds = %3
  %15 = add nsw i64 %11, -1
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  %17 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8
  br label %29

18:                                               ; preds = %49, %3
  %19 = phi i64 [ 0, %3 ], [ %50, %49 ]
  %20 = add i64 %19, 1484
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %20) #9
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = sub i64 %21, %22
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %53, label %25

25:                                               ; preds = %18
  %26 = sdiv exact i64 %23, 24
  %27 = add nsw i64 %26, -1
  %28 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  br label %57

29:                                               ; preds = %14, %49
  %30 = phi i64 [ %15, %14 ], [ %51, %49 ]
  %31 = phi i64 [ 0, %14 ], [ %50, %49 ]
  %32 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %17, i64 %30, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %49, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %30
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  br label %46

44:                                               ; preds = %35
  %45 = zext i8 %39 to i64
  br label %46

46:                                               ; preds = %41, %44
  %47 = phi i64 [ %43, %41 ], [ %45, %44 ]
  %48 = add i64 %47, %31
  br label %49

49:                                               ; preds = %29, %46
  %50 = phi i64 [ %48, %46 ], [ %31, %29 ]
  %51 = add i64 %30, -1
  %52 = icmp ult i64 %51, %11
  br i1 %52, label %29, label %18

53:                                               ; preds = %83, %18
  %54 = tail call i8* @_Znwm(i64 1488) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 16 getelementptr inbounds ([1484 x i8], [1484 x i8]* @_ZN4quic12_GLOBAL__N_121kCommonCertSubstringsE, i64 0, i64 0), i64 1484, i1 false) #9
  %55 = getelementptr inbounds i8, i8* %54, i64 1484
  store i8 0, i8* %55, align 1
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %54, i64 1484) #9
  call void @_ZdlPv(i8* nonnull %54) #11
  ret void

57:                                               ; preds = %25, %83
  %58 = phi i64 [ %22, %25 ], [ %84, %83 ]
  %59 = phi i64 [ %21, %25 ], [ %85, %83 ]
  %60 = phi i64 [ %27, %25 ], [ %86, %83 ]
  %61 = inttoptr i64 %58 to %"class.std::__1::basic_string"*
  %62 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %28, align 8
  %63 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %62, i64 %60, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %83, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 %60
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 %60, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %77 = zext i8 %70 to i64
  %78 = select i1 %71, i8* %73, i8* %76
  %79 = select i1 %71, i64 %75, i64 %77
  %80 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %78, i64 %79) #9
  %81 = load i64, i64* %6, align 8
  %82 = load i64, i64* %8, align 8
  br label %83

83:                                               ; preds = %57, %66
  %84 = phi i64 [ %58, %57 ], [ %82, %66 ]
  %85 = phi i64 [ %59, %57 ], [ %81, %66 ]
  %86 = add i64 %60, -1
  %87 = sub i64 %85, %84
  %88 = sdiv exact i64 %87, 24
  %89 = icmp ult i64 %86, %88
  br i1 %89, label %57, label %53
}

declare i32 @Cr_z_deflateSetDictionary(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #2

declare i64 @Cr_z_deflateBound(%struct.z_stream_s*, i64) local_unnamed_addr #2

declare i32 @Cr_z_deflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14CertCompressor15DecompressChainEN4absl11string_viewERKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEPKNS_14CommonCertSetsEPSC_(i8*, i64, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.quic::CommonCertSets"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector.19", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.6", align 8
  %10 = alloca %struct.z_stream_s, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.std::__1::vector.6"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::vector.6"* %9 to i64*
  %18 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::vector.6"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false)
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = icmp eq %"class.std::__1::basic_string"* %23, %21
  br i1 %24, label %37, label %25

25:                                               ; preds = %5, %35
  %26 = phi %"class.std::__1::basic_string"* [ %27, %35 ], [ %23, %5 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 -1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %32, %25
  %36 = icmp eq %"class.std::__1::basic_string"* %27, %21
  br i1 %36, label %37, label %25

37:                                               ; preds = %35, %5
  store %"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"** %22, align 8
  %38 = icmp eq i64 %1, 0
  br i1 %38, label %537, label %39

39:                                               ; preds = %37
  %40 = icmp eq %"class.quic::CommonCertSets"* %3, null
  %41 = bitcast %"class.quic::CommonCertSets"* %3 to { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)***
  %42 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"** %22 to i64*
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"** %50 to i64*
  %52 = bitcast %"class.std::__1::vector"* %2 to i64*
  %53 = bitcast %"class.std::__1::vector.19"* %7 to i8*
  %54 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast i64** %55 to i64*
  %57 = bitcast %"class.std::__1::vector.19"* %7 to i64*
  %58 = bitcast i64** %54 to i64*
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"** %16 to i64*
  br label %65

65:                                               ; preds = %370, %39
  %66 = phi i64 [ %1, %39 ], [ %301, %370 ]
  %67 = phi i8* [ %0, %39 ], [ %297, %370 ]
  %68 = phi i64 [ 0, %39 ], [ %296, %370 ]
  %69 = phi i64 [ 0, %39 ], [ %295, %370 ]
  %70 = load i8, i8* %67, align 1
  %71 = getelementptr inbounds i8, i8* %67, i64 1
  %72 = add i64 %66, -1
  %73 = icmp eq i8 %70, 0
  br i1 %73, label %372, label %74

74:                                               ; preds = %65
  %75 = zext i8 %70 to i32
  switch i8 %70, label %372 [
    i8 1, label %76
    i8 2, label %90
    i8 3, label %243
  ]

76:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #9
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %79 = icmp ult %"class.std::__1::basic_string"* %77, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %60, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #9
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %83 = ptrtoint %"class.std::__1::basic_string"* %82 to i64
  store i64 %83, i64* %49, align 8
  br label %89

84:                                               ; preds = %76
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #9
  %85 = load i8, i8* %62, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %88) #11
  br label %89

89:                                               ; preds = %87, %84, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  br label %294

90:                                               ; preds = %74
  %91 = icmp ult i64 %72, 8
  br i1 %91, label %372, label %92

92:                                               ; preds = %90
  %93 = bitcast i8* %71 to i64*
  %94 = load i64, i64* %93, align 1
  %95 = getelementptr inbounds i8, i8* %67, i64 9
  %96 = add i64 %66, -9
  %97 = sub i64 %68, %69
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %51, align 8
  %100 = load i64, i64* %52, align 8
  %101 = sub i64 %99, %100
  %102 = sdiv exact i64 %101, 24
  %103 = icmp eq i64 %98, %102
  br i1 %103, label %204, label %104

104:                                              ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #9, !alias.scope !6
  %105 = icmp eq i64 %101, 0
  %106 = inttoptr i64 %100 to %"class.std::__1::basic_string"*
  %107 = inttoptr i64 %99 to %"class.std::__1::basic_string"*
  br i1 %105, label %118, label %108

108:                                              ; preds = %104
  %109 = icmp ugt i64 %102, 2305843009213693951
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  call void @abort() #10
  unreachable

111:                                              ; preds = %108
  %112 = shl nsw i64 %102, 3
  %113 = call i8* @_Znwm(i64 %112) #11
  %114 = bitcast i8* %113 to i64*
  %115 = ptrtoint i8* %113 to i64
  %116 = getelementptr inbounds i64, i64* %114, i64 %102
  %117 = ptrtoint i64* %116 to i64
  store i64 %115, i64* %57, align 8, !alias.scope !6
  store i64 %115, i64* %58, align 8, !alias.scope !6
  store i64 %117, i64* %56, align 8, !alias.scope !6
  br label %118

118:                                              ; preds = %111, %104
  %119 = icmp eq %"class.std::__1::basic_string"* %106, %107
  br i1 %119, label %195, label %120

120:                                              ; preds = %118, %191
  %121 = phi %"class.std::__1::basic_string"* [ %192, %191 ], [ %106, %118 ]
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1, !noalias !6
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = zext i8 %124 to i64
  %128 = ptrtoint %"class.std::__1::basic_string"* %121 to i64
  br label %136

129:                                              ; preds = %120
  %130 = bitcast %"class.std::__1::basic_string"* %121 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = icmp sgt i64 %133, -1
  br i1 %134, label %136, label %135, !prof !5

135:                                              ; preds = %129
  call void @llvm.trap() #9
  unreachable

136:                                              ; preds = %129, %126
  %137 = phi i64 [ %131, %129 ], [ %128, %126 ]
  %138 = phi i64 [ %133, %129 ], [ %127, %126 ]
  %139 = inttoptr i64 %137 to i8*
  %140 = call i64 @_ZN4quic9QuicUtils13FNV1a_64_HashEN4absl11string_viewE(i8* %139, i64 %138) #9, !noalias !6
  %141 = load i64*, i64** %54, align 8, !alias.scope !6
  %142 = load i64*, i64** %55, align 8, !alias.scope !6
  %143 = icmp ult i64* %141, %142
  %144 = ptrtoint i64* %142 to i64
  br i1 %143, label %145, label %148

145:                                              ; preds = %136
  store i64 %140, i64* %141, align 8
  %146 = getelementptr inbounds i64, i64* %141, i64 1
  %147 = ptrtoint i64* %146 to i64
  store i64 %147, i64* %58, align 8, !alias.scope !6
  br label %191

148:                                              ; preds = %136
  %149 = ptrtoint i64* %141 to i64
  %150 = load i64, i64* %57, align 8, !alias.scope !6
  %151 = sub i64 %149, %150
  %152 = ashr exact i64 %151, 3
  %153 = add nsw i64 %152, 1
  %154 = icmp ugt i64 %153, 2305843009213693951
  br i1 %154, label %155, label %157

155:                                              ; preds = %148
  %156 = bitcast %"class.std::__1::vector.19"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %156) #10
  unreachable

157:                                              ; preds = %148
  %158 = sub i64 %144, %150
  %159 = ashr exact i64 %158, 3
  %160 = icmp ult i64 %159, 1152921504606846975
  br i1 %160, label %161, label %169

161:                                              ; preds = %157
  %162 = ashr exact i64 %158, 2
  %163 = icmp ult i64 %162, %153
  %164 = select i1 %163, i64 %153, i64 %162
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %174, label %166

166:                                              ; preds = %161
  %167 = icmp ugt i64 %164, 2305843009213693951
  br i1 %167, label %168, label %169

168:                                              ; preds = %166
  call void @abort() #10
  unreachable

169:                                              ; preds = %166, %157
  %170 = phi i64 [ %164, %166 ], [ 2305843009213693951, %157 ]
  %171 = shl i64 %170, 3
  %172 = call i8* @_Znwm(i64 %171) #11
  %173 = bitcast i8* %172 to i64*
  br label %174

174:                                              ; preds = %169, %161
  %175 = phi i64 [ %170, %169 ], [ 0, %161 ]
  %176 = phi i8* [ %172, %169 ], [ null, %161 ]
  %177 = phi i64* [ %173, %169 ], [ null, %161 ]
  %178 = getelementptr inbounds i64, i64* %177, i64 %152
  %179 = getelementptr inbounds i64, i64* %177, i64 %175
  %180 = ptrtoint i64* %179 to i64
  store i64 %140, i64* %178, align 8, !noalias !6
  %181 = getelementptr inbounds i64, i64* %178, i64 1
  %182 = ptrtoint i64* %181 to i64
  %183 = ptrtoint i64* %177 to i64
  %184 = icmp sgt i64 %151, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %174
  %186 = inttoptr i64 %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %186, i64 %151, i1 false) #9
  br label %187

187:                                              ; preds = %185, %174
  store i64 %183, i64* %57, align 8, !alias.scope !6
  store i64 %182, i64* %58, align 8, !alias.scope !6
  store i64 %180, i64* %56, align 8, !alias.scope !6
  %188 = icmp eq i64 %150, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = inttoptr i64 %150 to i8*
  call void @_ZdlPv(i8* %190) #11
  br label %191

191:                                              ; preds = %189, %187, %145
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 1
  %193 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %50, align 8, !noalias !6
  %194 = icmp eq %"class.std::__1::basic_string"* %192, %193
  br i1 %194, label %195, label %120

195:                                              ; preds = %191, %118
  %196 = icmp eq i64 %69, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = inttoptr i64 %69 to i8*
  call void @_ZdlPv(i8* %198) #11
  br label %199

199:                                              ; preds = %197, %195
  %200 = load i64, i64* %57, align 8
  %201 = load i64, i64* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #9
  %202 = sub i64 %201, %200
  %203 = ashr exact i64 %202, 3
  br label %204

204:                                              ; preds = %199, %92
  %205 = phi i64 [ %98, %92 ], [ %203, %199 ]
  %206 = phi i64 [ %97, %92 ], [ %202, %199 ]
  %207 = phi i64 [ %69, %92 ], [ %200, %199 ]
  %208 = phi i64 [ %68, %92 ], [ %201, %199 ]
  %209 = icmp eq i64 %206, 0
  br i1 %209, label %372, label %210

210:                                              ; preds = %204
  %211 = inttoptr i64 %207 to i64*
  br label %212

212:                                              ; preds = %240, %210
  %213 = phi i64 [ 0, %210 ], [ %241, %240 ]
  %214 = getelementptr inbounds i64, i64* %211, i64 %213
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, %94
  br i1 %216, label %217, label %240

217:                                              ; preds = %212
  %218 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %218, i64 %213
  %220 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %221 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %222 = icmp eq %"class.std::__1::basic_string"* %220, %221
  br i1 %222, label %239, label %223

223:                                              ; preds = %217
  %224 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = bitcast %"class.std::__1::basic_string"* %220 to i8*
  %230 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 24, i1 false) #9
  br label %236

231:                                              ; preds = %223
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %218, i64 %213, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %235 = load i64, i64* %234, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %220, i8* %233, i64 %235) #9
  br label %236

236:                                              ; preds = %231, %228
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %220, i64 1
  %238 = ptrtoint %"class.std::__1::basic_string"* %237 to i64
  store i64 %238, i64* %49, align 8
  br label %294

239:                                              ; preds = %217
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %219) #9
  br label %294

240:                                              ; preds = %212
  %241 = add nuw i64 %213, 1
  %242 = icmp ult i64 %241, %205
  br i1 %242, label %212, label %372

243:                                              ; preds = %74
  %244 = icmp ult i64 %72, 12
  %245 = or i1 %40, %244
  br i1 %245, label %372, label %246

246:                                              ; preds = %243
  %247 = bitcast i8* %71 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %67, i64 9
  %250 = bitcast i8* %249 to i32*
  %251 = load i32, i32* %250, align 1
  %252 = getelementptr inbounds i8, i8* %67, i64 13
  %253 = add i64 %66, -13
  %254 = load { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)**, { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)*** %41, align 8
  %255 = getelementptr inbounds { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)*, { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)** %254, i64 3
  %256 = load { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)*, { i8*, i64 } (%"class.quic::CommonCertSets"*, i64, i32)** %255, align 8
  %257 = call { i8*, i64 } %256(%"class.quic::CommonCertSets"* nonnull %3, i64 %248, i32 %251) #9
  %258 = extractvalue { i8*, i64 } %257, 0
  %259 = extractvalue { i8*, i64 } %257, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %372, label %261

261:                                              ; preds = %246
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %262 = icmp eq i8* %258, null
  br i1 %262, label %263, label %264

263:                                              ; preds = %261
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #9, !alias.scope !9
  br label %280

264:                                              ; preds = %261
  %265 = icmp ugt i64 %259, -17
  br i1 %265, label %266, label %268

266:                                              ; preds = %264
  %267 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %267) #10
  unreachable

268:                                              ; preds = %264
  %269 = icmp ult i64 %259, 23
  br i1 %269, label %275, label %270

270:                                              ; preds = %268
  %271 = add nuw i64 %259, 16
  %272 = and i64 %271, -16
  %273 = call i8* @_Znwm(i64 %272) #11
  store i8* %273, i8** %43, align 8, !alias.scope !9
  %274 = or i64 %272, -9223372036854775808
  store i64 %274, i64* %44, align 8, !alias.scope !9
  store i64 %259, i64* %45, align 8, !alias.scope !9
  br label %277

275:                                              ; preds = %268
  %276 = trunc i64 %259 to i8
  store i8 %276, i8* %47, align 1, !alias.scope !9
  br label %277

277:                                              ; preds = %275, %270
  %278 = phi i8* [ %273, %270 ], [ %42, %275 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %278, i8* nonnull align 1 %258, i64 %259, i1 false) #9
  %279 = getelementptr inbounds i8, i8* %278, i64 %259
  store i8 0, i8* %279, align 1
  br label %280

280:                                              ; preds = %277, %263
  %281 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %282 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %283 = icmp ult %"class.std::__1::basic_string"* %281, %282
  br i1 %283, label %284, label %288

284:                                              ; preds = %280
  %285 = bitcast %"class.std::__1::basic_string"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* nonnull align 8 %42, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #9
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %281, i64 1
  %287 = ptrtoint %"class.std::__1::basic_string"* %286 to i64
  store i64 %287, i64* %49, align 8
  br label %293

288:                                              ; preds = %280
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #9
  %289 = load i8, i8* %47, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %292) #11
  br label %293

293:                                              ; preds = %291, %288, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  br label %294

294:                                              ; preds = %293, %239, %236, %89
  %295 = phi i64 [ %69, %89 ], [ %69, %293 ], [ %207, %236 ], [ %207, %239 ]
  %296 = phi i64 [ %68, %89 ], [ %68, %293 ], [ %208, %236 ], [ %208, %239 ]
  %297 = phi i8* [ %71, %89 ], [ %252, %293 ], [ %95, %236 ], [ %95, %239 ]
  %298 = phi i32 [ -1431655766, %89 ], [ %251, %293 ], [ -1431655766, %236 ], [ -1431655766, %239 ]
  %299 = phi i64 [ -6148914691236517206, %89 ], [ %248, %293 ], [ -6148914691236517206, %236 ], [ -6148914691236517206, %239 ]
  %300 = phi i64 [ -6148914691236517206, %89 ], [ -6148914691236517206, %293 ], [ %94, %236 ], [ %94, %239 ]
  %301 = phi i64 [ %72, %89 ], [ %253, %293 ], [ %96, %236 ], [ %96, %239 ]
  %302 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %15, align 8
  %303 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %16, align 8
  %304 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %302, %303
  %305 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %303 to i64
  br i1 %304, label %318, label %306

306:                                              ; preds = %294
  %307 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %302 to i8*
  %308 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %302, i64 0, i32 0
  store i32 %75, i32* %308, align 8
  %309 = getelementptr inbounds i8, i8* %307, i64 4
  %310 = bitcast i8* %309 to i32*
  store i32 -1431655766, i32* %310, align 4
  %311 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %302, i64 0, i32 1
  store i64 %300, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %302, i64 0, i32 2
  store i64 %299, i64* %312, align 8
  %313 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %302, i64 0, i32 3
  store i32 %298, i32* %313, align 8
  %314 = getelementptr inbounds i8, i8* %307, i64 28
  %315 = bitcast i8* %314 to i32*
  store i32 -1431655766, i32* %315, align 4
  %316 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %302, i64 1
  %317 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %316 to i64
  store i64 %317, i64* %18, align 8
  br label %370

318:                                              ; preds = %294
  %319 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %302 to i64
  %320 = load i64, i64* %17, align 8
  %321 = sub i64 %319, %320
  %322 = ashr exact i64 %321, 5
  %323 = add nsw i64 %322, 1
  %324 = icmp ugt i64 %323, 576460752303423487
  br i1 %324, label %325, label %327

325:                                              ; preds = %318
  %326 = bitcast %"class.std::__1::vector.6"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %326) #10
  unreachable

327:                                              ; preds = %318
  %328 = sub i64 %305, %320
  %329 = ashr exact i64 %328, 5
  %330 = icmp ult i64 %329, 288230376151711743
  br i1 %330, label %331, label %339

331:                                              ; preds = %327
  %332 = ashr exact i64 %328, 4
  %333 = icmp ult i64 %332, %323
  %334 = select i1 %333, i64 %323, i64 %332
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %344, label %336

336:                                              ; preds = %331
  %337 = icmp ugt i64 %334, 576460752303423487
  br i1 %337, label %338, label %339

338:                                              ; preds = %336
  call void @abort() #10
  unreachable

339:                                              ; preds = %336, %327
  %340 = phi i64 [ %334, %336 ], [ 576460752303423487, %327 ]
  %341 = shl i64 %340, 5
  %342 = call i8* @_Znwm(i64 %341) #11
  %343 = bitcast i8* %342 to %"struct.quic::(anonymous namespace)::CertEntry"*
  br label %344

344:                                              ; preds = %339, %331
  %345 = phi i64 [ %340, %339 ], [ 0, %331 ]
  %346 = phi i8* [ %342, %339 ], [ null, %331 ]
  %347 = phi %"struct.quic::(anonymous namespace)::CertEntry"* [ %343, %339 ], [ null, %331 ]
  %348 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %347, i64 %322
  %349 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %347, i64 %345
  %350 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %349 to i64
  %351 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %348 to i8*
  %352 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %348, i64 0, i32 0
  store i32 %75, i32* %352, align 8
  %353 = getelementptr inbounds i8, i8* %351, i64 4
  %354 = bitcast i8* %353 to i32*
  store i32 -1431655766, i32* %354, align 4
  %355 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %347, i64 %322, i32 1
  store i64 %300, i64* %355, align 8
  %356 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %347, i64 %322, i32 2
  store i64 %299, i64* %356, align 8
  %357 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %347, i64 %322, i32 3
  store i32 %298, i32* %357, align 8
  %358 = getelementptr inbounds i8, i8* %351, i64 28
  %359 = bitcast i8* %358 to i32*
  store i32 -1431655766, i32* %359, align 4
  %360 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %348, i64 1
  %361 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %360 to i64
  %362 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %347 to i64
  %363 = icmp sgt i64 %321, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %344
  %365 = inttoptr i64 %320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %346, i8* align 8 %365, i64 %321, i1 false) #9
  br label %366

366:                                              ; preds = %364, %344
  store i64 %362, i64* %17, align 8
  store i64 %361, i64* %18, align 8
  store i64 %350, i64* %64, align 8
  %367 = icmp eq i64 %320, 0
  br i1 %367, label %370, label %368

368:                                              ; preds = %366
  %369 = inttoptr i64 %320 to i8*
  call void @_ZdlPv(i8* %369) #11
  br label %370

370:                                              ; preds = %368, %366, %306
  %371 = icmp eq i64 %301, 0
  br i1 %371, label %372, label %65

372:                                              ; preds = %65, %370, %246, %243, %204, %90, %74, %240
  %373 = phi i8* [ %0, %240 ], [ %71, %65 ], [ %0, %204 ], [ %0, %90 ], [ %0, %370 ], [ %0, %246 ], [ %0, %243 ], [ %0, %74 ]
  %374 = phi i64 [ %1, %240 ], [ %72, %65 ], [ %1, %204 ], [ %1, %90 ], [ %1, %370 ], [ %1, %246 ], [ %1, %243 ], [ %1, %74 ]
  %375 = phi i64 [ %207, %240 ], [ %69, %65 ], [ %207, %204 ], [ %69, %90 ], [ %295, %370 ], [ %69, %246 ], [ %69, %243 ], [ %69, %74 ]
  %376 = phi i1 [ false, %240 ], [ true, %65 ], [ false, %204 ], [ false, %90 ], [ false, %370 ], [ false, %246 ], [ false, %243 ], [ false, %74 ]
  %377 = icmp eq i64 %375, 0
  br i1 %377, label %380, label %378

378:                                              ; preds = %372
  %379 = inttoptr i64 %375 to i8*
  call void @_ZdlPv(i8* %379) #11
  br i1 %376, label %381, label %537

380:                                              ; preds = %372
  br i1 %376, label %381, label %537

381:                                              ; preds = %378, %380
  %382 = icmp eq i64 %374, 0
  br i1 %382, label %446, label %383

383:                                              ; preds = %381
  %384 = icmp ult i64 %374, 4
  br i1 %384, label %537, label %385

385:                                              ; preds = %383
  %386 = bitcast i8* %373 to i32*
  %387 = load i32, i32* %386, align 1
  %388 = icmp ugt i32 %387, 131072
  br i1 %388, label %537, label %389

389:                                              ; preds = %385
  %390 = getelementptr inbounds i8, i8* %373, i64 4
  %391 = zext i32 %387 to i64
  %392 = call i8* @_Znam(i64 %391) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %392, i8 0, i64 %391, i1 false) #9
  %393 = ptrtoint i8* %392 to i64
  %394 = bitcast %struct.z_stream_s* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %394, i8 0, i64 112, i1 false)
  %395 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 3
  store i8* %392, i8** %395, align 8
  %396 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 4
  store i32 %387, i32* %396, align 8
  %397 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 0
  store i8* %390, i8** %397, align 8
  %398 = trunc i64 %374 to i32
  %399 = add i32 %398, -4
  %400 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %10, i64 0, i32 1
  store i32 %399, i32* %400, align 8
  %401 = call i32 @Cr_z_inflateInit_(%struct.z_stream_s* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #9
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %404, label %403

403:                                              ; preds = %389
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %394) #9
  br label %533

404:                                              ; preds = %389
  %405 = call i32 @Cr_z_inflate(%struct.z_stream_s* nonnull %10, i32 4) #9
  %406 = icmp eq i32 %405, 2
  br i1 %406, label %407, label %437

407:                                              ; preds = %404
  %408 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %408) #9
  %409 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %411 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %411, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN4quic12_GLOBAL__N_118ZlibDictForEntriesERKNSt3__16vectorINS0_9CertEntryENS1_9allocatorIS3_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.std::__1::vector.6"* nonnull dereferenceable(24) %9, %"class.std::__1::vector"* dereferenceable(24) %4)
  %412 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %413 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %412, i64 0, i32 1, i32 0
  %414 = load i8, i8* %413, align 1
  %415 = icmp slt i8 %414, 0
  %416 = load i8*, i8** %409, align 8
  %417 = load i64, i64* %410, align 8
  %418 = zext i8 %414 to i64
  %419 = select i1 %415, i8* %416, i8* %408
  %420 = select i1 %415, i64 %417, i64 %418
  %421 = trunc i64 %420 to i32
  %422 = call i32 @Cr_z_inflateSetDictionary(%struct.z_stream_s* nonnull %10, i8* %419, i32 %421) #9
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %407
  %425 = call i32 @Cr_z_inflate(%struct.z_stream_s* nonnull %10, i32 4) #9
  br label %426

426:                                              ; preds = %407, %424
  %427 = phi i32 [ 0, %424 ], [ 1, %407 ]
  %428 = phi i32 [ %425, %424 ], [ 2, %407 ]
  %429 = load i8, i8* %413, align 1
  %430 = icmp slt i8 %429, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %426
  %432 = load i8*, i8** %409, align 8
  call void @_ZdlPv(i8* %432) #11
  br label %433

433:                                              ; preds = %426, %431
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %408) #9
  %434 = icmp eq i32 %427, 0
  br i1 %434, label %437, label %435

435:                                              ; preds = %433
  %436 = call i32 @Cr_z_inflateEnd(%struct.z_stream_s* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %394) #9
  br label %533

437:                                              ; preds = %404, %433
  %438 = phi i32 [ %428, %433 ], [ %405, %404 ]
  %439 = icmp eq i32 %438, 1
  %440 = load i32, i32* %396, align 8
  %441 = load i32, i32* %400, align 8
  %442 = or i32 %441, %440
  %443 = icmp eq i32 %442, 0
  %444 = and i1 %439, %443
  %445 = call i32 @Cr_z_inflateEnd(%struct.z_stream_s* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %394) #9
  br i1 %444, label %446, label %533

446:                                              ; preds = %437, %381
  %447 = phi i64 [ 0, %381 ], [ %391, %437 ]
  %448 = phi i8* [ null, %381 ], [ %392, %437 ]
  %449 = phi i64 [ 0, %381 ], [ %393, %437 ]
  %450 = load i64, i64* %18, align 8
  %451 = load i64, i64* %17, align 8
  %452 = icmp eq i64 %450, %451
  br i1 %452, label %527, label %453

453:                                              ; preds = %446
  %454 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %455 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %457 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %458 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %459 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %458, i64 0, i32 1, i32 0
  br label %460

460:                                              ; preds = %453, %518
  %461 = phi i64 [ %451, %453 ], [ %519, %518 ]
  %462 = phi i64 [ %450, %453 ], [ %520, %518 ]
  %463 = phi i64 [ 0, %453 ], [ %523, %518 ]
  %464 = phi i8* [ %448, %453 ], [ %522, %518 ]
  %465 = phi i64 [ %447, %453 ], [ %521, %518 ]
  %466 = inttoptr i64 %461 to %"struct.quic::(anonymous namespace)::CertEntry"*
  %467 = getelementptr inbounds %"struct.quic::(anonymous namespace)::CertEntry", %"struct.quic::(anonymous namespace)::CertEntry"* %466, i64 %463, i32 0
  %468 = load i32, i32* %467, align 8
  %469 = icmp eq i32 %468, 1
  br i1 %469, label %470, label %518

470:                                              ; preds = %460
  %471 = icmp ult i64 %465, 4
  br i1 %471, label %530, label %472

472:                                              ; preds = %470
  %473 = bitcast i8* %464 to i32*
  %474 = load i32, i32* %473, align 1
  %475 = getelementptr inbounds i8, i8* %464, i64 4
  %476 = add i64 %465, -4
  %477 = zext i32 %474 to i64
  %478 = icmp ult i64 %476, %477
  br i1 %478, label %530, label %479

479:                                              ; preds = %472
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %454) #9
  %480 = icmp ugt i64 %476, %477
  %481 = select i1 %480, i64 %477, i64 %476
  %482 = icmp sgt i64 %481, -1
  br i1 %482, label %484, label %483, !prof !5

483:                                              ; preds = %479
  call void @llvm.trap() #9
  unreachable

484:                                              ; preds = %479
  %485 = icmp eq i8* %475, null
  br i1 %485, label %486, label %487

486:                                              ; preds = %484
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %454, i8 0, i64 24, i1 false) #9, !alias.scope !12
  br label %502

487:                                              ; preds = %484
  %488 = icmp ult i64 %481, 23
  br i1 %488, label %494, label %489

489:                                              ; preds = %487
  %490 = add nuw nsw i64 %481, 16
  %491 = and i64 %490, 8589934576
  %492 = call i8* @_Znwm(i64 %491) #11
  store i8* %492, i8** %455, align 8, !alias.scope !12
  %493 = or i64 %491, -9223372036854775808
  store i64 %493, i64* %456, align 8, !alias.scope !12
  store i64 %481, i64* %457, align 8, !alias.scope !12
  br label %497

494:                                              ; preds = %487
  %495 = trunc i64 %481 to i8
  store i8 %495, i8* %459, align 1, !alias.scope !12
  %496 = icmp eq i64 %481, 0
  br i1 %496, label %499, label %497

497:                                              ; preds = %494, %489
  %498 = phi i8* [ %492, %489 ], [ %454, %494 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %498, i8* nonnull align 1 %475, i64 %481, i1 false) #9
  br label %499

499:                                              ; preds = %497, %494
  %500 = phi i8* [ %454, %494 ], [ %498, %497 ]
  %501 = getelementptr inbounds i8, i8* %500, i64 %481
  store i8 0, i8* %501, align 1
  br label %502

502:                                              ; preds = %486, %499
  %503 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %504 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %503, i64 %463
  %505 = bitcast %"class.std::__1::basic_string"* %504 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %506 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %505, i64 0, i32 1, i32 0
  %507 = load i8, i8* %506, align 1
  %508 = icmp slt i8 %507, 0
  br i1 %508, label %509, label %512

509:                                              ; preds = %502
  %510 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %504, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = load i8*, i8** %510, align 8
  call void @_ZdlPv(i8* %511) #11
  br label %512

512:                                              ; preds = %502, %509
  %513 = bitcast %"class.std::__1::basic_string"* %504 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %513, i8* nonnull align 8 %454, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %454) #9
  %514 = getelementptr inbounds i8, i8* %475, i64 %477
  %515 = sub i64 %476, %477
  %516 = load i64, i64* %18, align 8
  %517 = load i64, i64* %17, align 8
  br label %518

518:                                              ; preds = %460, %512
  %519 = phi i64 [ %517, %512 ], [ %461, %460 ]
  %520 = phi i64 [ %516, %512 ], [ %462, %460 ]
  %521 = phi i64 [ %515, %512 ], [ %465, %460 ]
  %522 = phi i8* [ %514, %512 ], [ %464, %460 ]
  %523 = add nuw i64 %463, 1
  %524 = sub i64 %520, %519
  %525 = ashr exact i64 %524, 5
  %526 = icmp ult i64 %523, %525
  br i1 %526, label %460, label %527

527:                                              ; preds = %518, %446
  %528 = phi i64 [ %447, %446 ], [ %521, %518 ]
  %529 = icmp eq i64 %528, 0
  br label %530

530:                                              ; preds = %470, %472, %527
  %531 = phi i1 [ %529, %527 ], [ false, %472 ], [ false, %470 ]
  %532 = icmp eq i64 %449, 0
  br i1 %532, label %537, label %533

533:                                              ; preds = %435, %403, %437, %530
  %534 = phi i1 [ %531, %530 ], [ false, %437 ], [ false, %403 ], [ false, %435 ]
  %535 = phi i64 [ %449, %530 ], [ %393, %437 ], [ %393, %403 ], [ %393, %435 ]
  %536 = inttoptr i64 %535 to i8*
  call void @_ZdaPv(i8* nonnull %536) #11
  br label %537

537:                                              ; preds = %385, %383, %37, %533, %530, %378, %380
  %538 = phi i1 [ false, %380 ], [ false, %378 ], [ %531, %530 ], [ %534, %533 ], [ false, %37 ], [ false, %383 ], [ false, %385 ]
  %539 = load %"struct.quic::(anonymous namespace)::CertEntry"*, %"struct.quic::(anonymous namespace)::CertEntry"** %14, align 8
  %540 = icmp eq %"struct.quic::(anonymous namespace)::CertEntry"* %539, null
  br i1 %540, label %544, label %541

541:                                              ; preds = %537
  %542 = ptrtoint %"struct.quic::(anonymous namespace)::CertEntry"* %539 to i64
  store i64 %542, i64* %18, align 8
  %543 = bitcast %"struct.quic::(anonymous namespace)::CertEntry"* %539 to i8*
  call void @_ZdlPv(i8* %543) #11
  br label %544

544:                                              ; preds = %537, %541
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  ret i1 %538
}

declare i32 @Cr_z_inflateInit_(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #2

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

declare i32 @Cr_z_inflateSetDictionary(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #2

declare i64 @_ZN4quic9QuicUtils13FNV1a_64_HashEN4absl11string_viewE(i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare i32 @Cr_z_deflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #9
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #9
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #9
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #9
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #9
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4quic12_GLOBAL__N_110MatchCertsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4absl11string_viewESE_PKNS_14CommonCertSetsE: argument 0"}
!4 = distinct !{!4, !"_ZN4quic12_GLOBAL__N_110MatchCertsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4absl11string_viewESE_PKNS_14CommonCertSetsE"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4quic12_GLOBAL__N_19HashCertsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE: argument 0"}
!8 = distinct !{!8, !"_ZN4quic12_GLOBAL__N_19HashCertsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
