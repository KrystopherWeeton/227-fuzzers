; ModuleID = '../../third_party/skia/modules/skottie/src/effects/CornerPinEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/CornerPinEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.33, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.33 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type { %"class.sksg::Node.base", [6 x i8] }
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkV2 = type { float, float }
%"class.sksg::Matrix" = type { %"class.sksg::Transform.base", %class.SkMatrix, [4 x i8] }
%"class.sksg::Transform.base" = type { %"class.sksg::Node.base" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.sksg::TransformEffect" = type { %"class.sksg::EffectNode", %class.sk_sp.31 }
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp.33 }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.49, %struct.SkSize, %struct.SkV2, %struct.SkV2, %struct.SkV2, %struct.SkV2 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.49 = type { %"class.sksg::Matrix"* }
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque
%class.SkM44 = type { [16 x float] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4sksg6MatrixI8SkMatrixED0Ev = comdat any

$_ZN4sksg6MatrixI8SkMatrixE12onRevalidateEPNS_22InvalidationControllerERKS1_ = comdat any

$_ZNK4sksg6MatrixI8SkMatrixE4is44Ev = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZTVN4sksg6MatrixI8SkMatrixEE = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_116CornerPinAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN4sksg6MatrixI8SkMatrixEE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Node"*)* @_ZN4sksg4NodeD2Ev to i8*), i8* bitcast (void (%"class.sksg::Matrix"*)* @_ZN4sksg6MatrixI8SkMatrixED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Matrix"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg6MatrixI8SkMatrixE12onRevalidateEPNS_22InvalidationControllerERKS1_ to i8*), i8* bitcast (i1 (%"class.sksg::Matrix"*)* @_ZNK4sksg6MatrixI8SkMatrixE4is44Ev to i8*), i8* bitcast (void (%class.SkMatrix*, %"class.sksg::Matrix"*)* @_ZNK4sksg6MatrixI8SkMatrixE8asMatrixEv to i8*), i8* bitcast (void (%class.SkM44*, %"class.sksg::Matrix"*)* @_ZNK4sksg6MatrixI8SkMatrixE5asM44Ev to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder21attachCornerPinEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.33* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.33* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.33, align 8
  %6 = alloca %class.sk_sp.31, align 8
  %7 = alloca %class.sk_sp.6, align 8
  %8 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %9 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %8, align 8
  %10 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 2
  %11 = tail call i8* @_Znwm(i64 96) #9, !noalias !2
  %12 = bitcast i8* %11 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4, !noalias !2
  %15 = bitcast i8* %11 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #10, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_116CornerPinAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %11, i64 48
  %18 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10, !noalias !2
  %19 = tail call i8* @_Znwm(i64 88) #9, !noalias !7
  %20 = bitcast i8* %19 to %"class.sksg::Transform"*
  tail call void @_ZN4sksg9TransformC2Ev(%"class.sksg::Transform"* nonnull %20) #10, !noalias !7
  %21 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg6MatrixI8SkMatrixEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !noalias !7
  %22 = getelementptr inbounds i8, i8* %19, i64 44
  %23 = bitcast %class.SkMatrix* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 40, i1 false) #10, !noalias !7
  %24 = bitcast i8* %17 to i8**
  store i8* %19, i8** %24, align 8, !alias.scope !10, !noalias !2
  %25 = getelementptr inbounds i8, i8* %11, i64 56
  %26 = bitcast %struct.SkSize* %10 to i64*
  %27 = bitcast i8* %25 to i64*
  %28 = load i64, i64* %26, align 4, !noalias !2
  store i64 %28, i64* %27, align 8, !noalias !2
  %29 = getelementptr inbounds i8, i8* %11, i64 64
  %30 = bitcast i8* %29 to %struct.SkV2*
  %31 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #10, !noalias !2
  %32 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %31, i64 0, i32 0, i64 0
  %33 = load i8, i8* %32, align 8, !noalias !2
  %34 = and i8 %33, 7
  %35 = icmp eq i8 %34, 7
  %36 = bitcast %"class.skjson::Value"* %31 to %"class.skjson::ObjectValue"*
  %37 = select i1 %35, %"class.skjson::ObjectValue"* %36, %"class.skjson::ObjectValue"* null
  %38 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %12, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %9, %"class.skjson::ObjectValue"* %37, %struct.SkV2* %30) #10, !noalias !2
  %39 = getelementptr inbounds i8, i8* %11, i64 80
  %40 = bitcast i8* %39 to %struct.SkV2*
  %41 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #10, !noalias !2
  %42 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %41, i64 0, i32 0, i64 0
  %43 = load i8, i8* %42, align 8, !noalias !2
  %44 = and i8 %43, 7
  %45 = icmp eq i8 %44, 7
  %46 = bitcast %"class.skjson::Value"* %41 to %"class.skjson::ObjectValue"*
  %47 = select i1 %45, %"class.skjson::ObjectValue"* %46, %"class.skjson::ObjectValue"* null
  %48 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %12, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %9, %"class.skjson::ObjectValue"* %47, %struct.SkV2* %40) #10, !noalias !2
  %49 = getelementptr inbounds i8, i8* %11, i64 72
  %50 = bitcast i8* %49 to %struct.SkV2*
  %51 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #10, !noalias !2
  %52 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %51, i64 0, i32 0, i64 0
  %53 = load i8, i8* %52, align 8, !noalias !2
  %54 = and i8 %53, 7
  %55 = icmp eq i8 %54, 7
  %56 = bitcast %"class.skjson::Value"* %51 to %"class.skjson::ObjectValue"*
  %57 = select i1 %55, %"class.skjson::ObjectValue"* %56, %"class.skjson::ObjectValue"* null
  %58 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %12, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %9, %"class.skjson::ObjectValue"* %57, %struct.SkV2* %50) #10, !noalias !2
  %59 = getelementptr inbounds i8, i8* %11, i64 88
  %60 = bitcast i8* %59 to %struct.SkV2*
  %61 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #10, !noalias !2
  %62 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %61, i64 0, i32 0, i64 0
  %63 = load i8, i8* %62, align 8, !noalias !2
  %64 = and i8 %63, 7
  %65 = icmp eq i8 %64, 7
  %66 = bitcast %"class.skjson::Value"* %61 to %"class.skjson::ObjectValue"*
  %67 = select i1 %65, %"class.skjson::ObjectValue"* %66, %"class.skjson::ObjectValue"* null
  %68 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %12, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %9, %"class.skjson::ObjectValue"* %67, %struct.SkV2* %60) #10, !noalias !2
  %69 = ptrtoint i8* %11 to i64
  %70 = bitcast i8* %17 to %"class.sksg::Matrix"**
  %71 = load %"class.sksg::Matrix"*, %"class.sksg::Matrix"** %70, align 8, !noalias !11
  %72 = icmp eq %"class.sksg::Matrix"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %4
  %74 = getelementptr inbounds %"class.sksg::Matrix", %"class.sksg::Matrix"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  br label %76

76:                                               ; preds = %4, %73
  %77 = ptrtoint %"class.sksg::Matrix"* %71 to i64
  %78 = bitcast i8* %16 to %class.sk_sp.6**
  %79 = load %class.sk_sp.6*, %class.sk_sp.6** %78, align 8, !noalias !11
  %80 = getelementptr inbounds i8, i8* %11, i64 24
  %81 = bitcast i8* %80 to %class.sk_sp.6**
  %82 = load %class.sk_sp.6*, %class.sk_sp.6** %81, align 8, !noalias !11
  %83 = icmp eq %class.sk_sp.6* %79, %82
  br i1 %83, label %116, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %9, i64 0, i32 11
  %86 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %85, align 8, !noalias !11
  %87 = bitcast %class.sk_sp.6* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #10, !noalias !11
  %88 = bitcast %class.sk_sp.6* %7 to i64*
  store i64 %69, i64* %88, align 8, !noalias !11
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 1
  %90 = load %class.sk_sp.6*, %class.sk_sp.6** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = load %class.sk_sp.6*, %class.sk_sp.6** %91, align 8
  %93 = icmp ult %class.sk_sp.6* %90, %92
  br i1 %93, label %94, label %100

94:                                               ; preds = %84
  %95 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %7, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %95, align 8, !noalias !11
  %96 = bitcast %class.sk_sp.6* %90 to i64*
  store i64 %69, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %90, i64 1
  %98 = ptrtoint %class.sk_sp.6* %97 to i64
  %99 = bitcast %class.sk_sp.6** %89 to i64*
  store i64 %98, i64* %99, align 8
  br label %101

100:                                              ; preds = %84
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %86, %class.sk_sp.6* nonnull dereferenceable(8) %7) #10
  br label %101

101:                                              ; preds = %100, %94
  %102 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %7, i64 0, i32 0
  %103 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %102, align 8, !noalias !11
  %104 = icmp eq %"class.skottie::internal::Animator"* %103, null
  br i1 %104, label %115, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %103, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = bitcast %"class.skottie::internal::Animator"* %103 to %class.SkRefCntBase*
  %111 = bitcast %"class.skottie::internal::Animator"* %103 to void (%class.SkRefCntBase*)***
  %112 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, i64 2
  %114 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, align 8
  call void %114(%class.SkRefCntBase* nonnull %110) #10
  br label %115

115:                                              ; preds = %109, %105, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #10, !noalias !11
  br label %131

116:                                              ; preds = %76
  %117 = bitcast i8* %11 to %"class.skottie::internal::Animator"*
  %118 = bitcast i8* %11 to i1 (%"class.skottie::internal::Animator"*, float)***
  %119 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %118, align 8, !noalias !11
  %120 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %119, i64 3
  %121 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %120, align 8
  %122 = tail call zeroext i1 %121(%"class.skottie::internal::Animator"* nonnull %117, float 0.000000e+00) #10
  %123 = atomicrmw add i32* %14, i32 -1 acq_rel, !noalias !11
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %131

125:                                              ; preds = %116
  %126 = bitcast i8* %11 to %class.SkRefCntBase*
  %127 = bitcast i8* %11 to void (%class.SkRefCntBase*)***
  %128 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %127, align 8, !noalias !11
  %129 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, i64 2
  %130 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, align 8
  tail call void %130(%class.SkRefCntBase* nonnull %126) #10
  br label %131

131:                                              ; preds = %115, %116, %125
  %132 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %3, i64 0, i32 0
  %133 = bitcast %class.sk_sp.33* %3 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %132, align 8
  %135 = bitcast %class.sk_sp.33* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135)
  %136 = bitcast %class.sk_sp.31* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  %137 = icmp eq i64 %134, 0
  %138 = or i1 %72, %137
  br i1 %138, label %174, label %139

139:                                              ; preds = %131
  %140 = call i8* @_Znwm(i64 64) #9, !noalias !12
  %141 = bitcast i8* %140 to %"class.sksg::TransformEffect"*
  %142 = bitcast %class.sk_sp.33* %5 to i64*
  store i64 %134, i64* %142, align 8, !noalias !12
  %143 = bitcast %class.sk_sp.31* %6 to i64*
  store i64 %77, i64* %143, align 8, !noalias !12
  call void @_ZN4sksg15TransformEffectC1E5sk_spINS_10RenderNodeEES1_INS_9TransformEE(%"class.sksg::TransformEffect"* nonnull %141, %class.sk_sp.33* nonnull %5, %class.sk_sp.31* nonnull %6) #10, !noalias !12
  %144 = ptrtoint i8* %140 to i64
  %145 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %6, i64 0, i32 0
  %146 = load %"class.sksg::Transform"*, %"class.sksg::Transform"** %145, align 8, !noalias !12
  %147 = icmp eq %"class.sksg::Transform"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.sksg::Transform", %"class.sksg::Transform"* %146, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel, !noalias !12
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = bitcast %"class.sksg::Transform"* %146 to %class.SkRefCntBase*
  %154 = bitcast %"class.sksg::Transform"* %146 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8, !noalias !12
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8, !noalias !12
  call void %157(%class.SkRefCntBase* nonnull %153) #10, !noalias !12
  br label %158

158:                                              ; preds = %152, %148, %139
  %159 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %5, i64 0, i32 0
  %160 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %159, align 8, !noalias !12
  %161 = icmp eq %"class.sksg::RenderNode"* %160, null
  br i1 %161, label %172, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %160, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = atomicrmw add i32* %163, i32 -1 acq_rel, !noalias !12
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %172

166:                                              ; preds = %162
  %167 = bitcast %"class.sksg::RenderNode"* %160 to %class.SkRefCntBase*
  %168 = bitcast %"class.sksg::RenderNode"* %160 to void (%class.SkRefCntBase*)***
  %169 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %168, align 8, !noalias !12
  %170 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %169, i64 2
  %171 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %170, align 8, !noalias !12
  call void %171(%class.SkRefCntBase* nonnull %167) #10, !noalias !12
  br label %172

172:                                              ; preds = %162, %166, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  %173 = bitcast %class.sk_sp.33* %0 to i64*
  store i64 %144, i64* %173, align 8
  br label %200

174:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  %175 = bitcast %class.sk_sp.33* %0 to i64*
  store i64 0, i64* %175, align 8
  %176 = icmp eq %"class.sksg::Matrix"* %71, null
  br i1 %176, label %187, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.sksg::Matrix", %"class.sksg::Matrix"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw add i32* %178, i32 -1 acq_rel
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %187

181:                                              ; preds = %177
  %182 = bitcast %"class.sksg::Matrix"* %71 to %class.SkRefCntBase*
  %183 = bitcast %"class.sksg::Matrix"* %71 to void (%class.SkRefCntBase*)***
  %184 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %183, align 8
  %185 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %184, i64 2
  %186 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, align 8
  call void %186(%class.SkRefCntBase* nonnull %182) #10
  br label %187

187:                                              ; preds = %174, %177, %181
  %188 = icmp eq i64 %134, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %187
  %190 = inttoptr i64 %134 to %"class.sksg::RenderNode"*
  %191 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %190, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %200

194:                                              ; preds = %189
  %195 = inttoptr i64 %134 to %class.SkRefCntBase*
  %196 = inttoptr i64 %134 to void (%class.SkRefCntBase*)***
  %197 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %196, align 8
  %198 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, i64 2
  %199 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, align 8
  call void %199(%class.SkRefCntBase* nonnull %195) #10
  br label %200

200:                                              ; preds = %172, %194, %189, %187
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN4sksg15TransformEffectC1E5sk_spINS_10RenderNodeEES1_INS_9TransformEE(%"class.sksg::TransformEffect"*, %class.sk_sp.33*, %class.sk_sp.31*) unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_116CornerPinAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::Matrix"*, %"class.sksg::Matrix"** %3, align 8
  %5 = icmp eq %"class.sksg::Matrix"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::Matrix", %"class.sksg::Matrix"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::Matrix"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::Matrix"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #10
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #10
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_116CornerPinAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::Matrix"*, %"class.sksg::Matrix"** %3, align 8
  %5 = icmp eq %"class.sksg::Matrix"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::Matrix", %"class.sksg::Matrix"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::Matrix"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::Matrix"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #10
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #10
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca [4 x %struct.SkPoint], align 16
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = alloca %class.SkMatrix, align 16
  %5 = bitcast [4 x %struct.SkPoint]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  %6 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 0
  %7 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 0, i32 0
  %8 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 0, i32 1
  %9 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 1, i32 0
  %10 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 1, i32 1
  %11 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 2, i32 0
  %12 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 2, i32 1
  %13 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 3, i32 0
  %14 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %2, i64 0, i64 3, i32 1
  store float 0.000000e+00, float* %7, align 16
  store float 0.000000e+00, float* %8, align 4
  %15 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 2
  %16 = bitcast %struct.SkSize* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = bitcast float* %9 to i32*
  store i32 %17, i32* %18, align 8
  store float 0.000000e+00, float* %10, align 4
  %19 = bitcast float* %11 to i32*
  store i32 %17, i32* %19, align 16
  %20 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 2, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast float* %12 to i32*
  store i32 %22, i32* %23, align 4
  store float 0.000000e+00, float* %13, align 8
  %24 = bitcast float* %14 to i32*
  store i32 %22, i32* %24, align 4
  %25 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  %26 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 1
  %28 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 3, i32 1
  %29 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 3
  %30 = bitcast %struct.SkV2* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = bitcast [4 x %struct.SkPoint]* %3 to i32*
  store i32 %31, i32* %32, align 16
  %33 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 3, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = bitcast float* %27 to i32*
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1
  %38 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 5
  %39 = bitcast %struct.SkV2* %38 to <4 x i32>*
  %40 = load <4 x i32>, <4 x i32>* %39, align 8
  %41 = bitcast %struct.SkPoint* %37 to <4 x i32>*
  store <4 x i32> %40, <4 x i32>* %41, align 8
  %42 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 3
  %43 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 4
  %44 = bitcast %struct.SkV2* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = bitcast %struct.SkPoint* %42 to i32*
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 4, i32 1
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = bitcast float* %28 to i32*
  store i32 %49, i32* %50, align 4
  %51 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #10
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %53 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %53, align 16
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %55, align 16
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %56, align 16
  store i32 16, i32* %52, align 4
  %57 = call zeroext i1 @_ZN8SkMatrix13setPolyToPolyEPK7SkPointS2_i(%class.SkMatrix* nonnull %4, %struct.SkPoint* nonnull %6, %struct.SkPoint* nonnull %26, i32 4) #10
  br i1 %57, label %58, label %66

58:                                               ; preds = %1
  %59 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter", %"class.skottie::internal::(anonymous namespace)::CornerPinAdapter"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.sksg::Matrix"*, %"class.sksg::Matrix"** %59, align 8
  %61 = getelementptr inbounds %"class.sksg::Matrix", %"class.sksg::Matrix"* %60, i64 0, i32 1
  %62 = call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %61, %class.SkMatrix* nonnull dereferenceable(40) %4) #10
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = bitcast %class.SkMatrix* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 16 %51, i64 40, i1 false) #10
  %65 = bitcast %"class.sksg::Matrix"* %60 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %65, i1 zeroext true) #10
  br label %66

66:                                               ; preds = %63, %58, %1
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4sksg9TransformC2Ev(%"class.sksg::Transform"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg6MatrixI8SkMatrixED0Ev(%"class.sksg::Matrix"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.sksg::Matrix"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %2) #10
  %3 = bitcast %"class.sksg::Matrix"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZN4sksg6MatrixI8SkMatrixE12onRevalidateEPNS_22InvalidationControllerERKS1_(%"class.sksg::Matrix"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret { <2 x float>, <2 x float> } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4sksg6MatrixI8SkMatrixE4is44Ev(%"class.sksg::Matrix"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK4sksg6MatrixI8SkMatrixE8asMatrixEv(%class.SkMatrix* sret, %"class.sksg::Matrix"*) unnamed_addr #3

declare void @_ZNK4sksg6MatrixI8SkMatrixE5asM44Ev(%class.SkM44* sret, %"class.sksg::Matrix"*) unnamed_addr #3

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %struct.SkV2*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN8SkMatrix13setPolyToPolyEPK7SkPointS2_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #9
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !15

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #10
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #9
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapter4MakeERKN6skjson10ArrayValueERKNS0_16AnimationBuilderERK6SkSize: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal12_GLOBAL__N_116CornerPinAdapter4MakeERKN6skjson10ArrayValueERKNS0_16AnimationBuilderERK6SkSize"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_116CornerPinAdapterEJRKN6skjson10ArrayValueERKS1_RK6SkSizeEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSH_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_116CornerPinAdapterEJRKN6skjson10ArrayValueERKS1_RK6SkSizeEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSH_"}
!7 = !{!8, !3, !5}
!8 = distinct !{!8, !9, !"_ZN4sksg6MatrixI8SkMatrixE4MakeINSt3__19enable_ifILb1EvEEEE5sk_spIS2_ERKS1_: argument 0"}
!9 = distinct !{!9, !"_ZN4sksg6MatrixI8SkMatrixE4MakeINSt3__19enable_ifILb1EvEEEE5sk_spIS2_ERKS1_"}
!10 = !{!8}
!11 = !{!5}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4sksg15TransformEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_9TransformEE: argument 0"}
!14 = distinct !{!14, !"_ZN4sksg15TransformEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_9TransformEE"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
