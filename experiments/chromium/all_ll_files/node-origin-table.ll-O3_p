; ModuleID = '../../v8/src/compiler/node-origin-table.cc'
source_filename = "../../v8/src/compiler/node-origin-table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::NodeOriginTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::NodeOriginTable::Decorator"*, %"class.v8::internal::compiler::NodeOrigin", i8*, %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::NodeOriginTable::Decorator" = type { %"class.v8::internal::compiler::GraphDecorator", %"class.v8::internal::compiler::NodeOriginTable"* }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.v8::internal::compiler::NodeOrigin" = type { i8*, i8*, i32, i64 }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::NodeOrigin"* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8compiler15NodeOriginTable9DecoratorD0Ev = comdat any

$_ZN2v88internal8compiler15NodeOriginTable9Decorator8DecorateEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler14GraphDecoratorD2Ev = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler10NodeOriginENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_ = comdat any

$_ZTVN2v88internal8compiler15NodeOriginTable9DecoratorE = comdat any

@.str = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"\22nodeId\22 : \00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"\22bytecodePosition\22 : \00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c", \22reducer\22 : \22\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c", \22phase\22 : \22\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN2v88internal8compiler15NodeOriginTable9DecoratorE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::GraphDecorator"*)* @_ZN2v88internal8compiler14GraphDecoratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::NodeOriginTable::Decorator"*)* @_ZN2v88internal8compiler15NodeOriginTable9DecoratorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::NodeOriginTable::Decorator"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler15NodeOriginTable9Decorator8DecorateEPNS1_4NodeE to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal8compiler15NodeOriginTableC1EPNS1_5GraphE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::NodeOriginTable"*, %"class.v8::internal::compiler::Graph"*), void (%"class.v8::internal::compiler::NodeOriginTable"*, %"class.v8::internal::compiler::Graph"*)* @_ZN2v88internal8compiler15NodeOriginTableC2EPNS1_5GraphE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler10NodeOrigin9PrintJsonERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::NodeOrigin"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #9
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %10 [
    i32 1, label %6
    i32 0, label %8
  ]

6:                                                ; preds = %2
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #9
  br label %10

8:                                                ; preds = %2
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21) #9
  br label %10

10:                                               ; preds = %2, %8, %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %1, i64 %12) #9
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #9
  %15 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %0, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i64 @strlen(i8* %16) #9
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* %16, i64 %17) #9
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i64 13) #9
  %21 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i64 @strlen(i8* %22) #9
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %22, i64 %23) #9
  %25 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  %26 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15NodeOriginTableC2EPNS1_5GraphE(%"class.v8::internal::compiler::NodeOriginTable"* nocapture, %"class.v8::internal::compiler::Graph"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Graph"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::NodeOriginTable::Decorator"* null, %"class.v8::internal::compiler::NodeOriginTable::Decorator"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 2, i32 0
  %6 = bitcast i8** %5 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %6, align 8, !alias.scope !2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 2, i32 3
  store i64 -9223372036854775808, i64* %7, align 8, !alias.scope !2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 4
  %10 = bitcast %"class.v8::internal::compiler::Graph"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %12 to i64*
  %14 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  store i64 %11, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15NodeOriginTable12AddDecoratorEv(%"class.v8::internal::compiler::NodeOriginTable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = ptrtoint %"class.v8::internal::compiler::NodeOriginTable"* %0 to i64
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 16
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %1
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 16) #9
  br label %17

15:                                               ; preds = %1
  %16 = add i64 %8, 16
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::NodeOriginTable::Decorator"*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable::Decorator", %"class.v8::internal::compiler::NodeOriginTable::Decorator"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal8compiler15NodeOriginTable9DecoratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable::Decorator", %"class.v8::internal::compiler::NodeOriginTable::Decorator"* %19, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::NodeOriginTable"** %21 to i64*
  store i64 %6, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::NodeOriginTable::Decorator"* %19, %"class.v8::internal::compiler::NodeOriginTable::Decorator"** %23, align 8
  %24 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable::Decorator", %"class.v8::internal::compiler::NodeOriginTable::Decorator"* %19, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler5Graph12AddDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"* %24, %"class.v8::internal::compiler::GraphDecorator"* %25) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v88internal8compiler5Graph12AddDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::GraphDecorator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15NodeOriginTable15RemoveDecoratorEv(%"class.v8::internal::compiler::NodeOriginTable"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::NodeOriginTable::Decorator"** %4 to %"class.v8::internal::compiler::GraphDecorator"**
  %6 = load %"class.v8::internal::compiler::GraphDecorator"*, %"class.v8::internal::compiler::GraphDecorator"** %5, align 8
  tail call void @_ZN2v88internal8compiler5Graph15RemoveDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::compiler::GraphDecorator"* %6) #9
  store %"class.v8::internal::compiler::NodeOriginTable::Decorator"* null, %"class.v8::internal::compiler::NodeOriginTable::Decorator"** %4, align 8
  ret void
}

declare void @_ZN2v88internal8compiler5Graph15RemoveDecoratorEPNS1_14GraphDecoratorE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::GraphDecorator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler15NodeOriginTable13GetNodeOriginEPNS1_4NodeE(%"class.v8::internal::compiler::NodeOrigin"* noalias nocapture sret, %"class.v8::internal::compiler::NodeOriginTable"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %1, i64 0, i32 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !noalias !6
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::NodeOrigin"** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !6
  %12 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %4 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !6
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 5
  %16 = icmp ugt i64 %15, %8
  br i1 %16, label %17, label %22

17:                                               ; preds = %3
  %18 = inttoptr i64 %13 to %"class.v8::internal::compiler::NodeOrigin"*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %18, i64 %8
  %20 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %0 to i8*
  %21 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false) #9
  br label %25

22:                                               ; preds = %3
  %23 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %0 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %23, align 8, !alias.scope !9
  %24 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %0, i64 0, i32 3
  store i64 -9223372036854775808, i64* %24, align 8, !alias.scope !9
  br label %25

25:                                               ; preds = %17, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15NodeOriginTable13SetNodeOriginEPNS1_4NodeERKNS1_10NodeOriginE(%"class.v8::internal::compiler::NodeOriginTable"*, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::NodeOrigin"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::NodeOrigin", align 16
  %5 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::compiler::NodeOrigin"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 5
  %17 = icmp ugt i64 %16, %9
  %18 = inttoptr i64 %14 to %"class.v8::internal::compiler::NodeOrigin"*
  br i1 %17, label %28, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %5, i64 0, i32 0, i32 0
  %21 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #9
  %22 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %4 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %22, align 16, !alias.scope !12
  %23 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %4, i64 0, i32 3
  store i64 -9223372036854775808, i64* %23, align 8, !alias.scope !12
  %24 = add nuw nsw i64 %9, 1
  %25 = sub nsw i64 %24, %16
  call void @_ZNSt3__16vectorIN2v88internal8compiler10NodeOriginENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.12"* %20, i64 %25, %"class.v8::internal::compiler::NodeOrigin"* nonnull dereferenceable(32) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #9
  %26 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"** %26, align 8
  br label %28

28:                                               ; preds = %19, %3
  %29 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %18, %3 ], [ %27, %19 ]
  %30 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %29, i64 %9
  %31 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %29, i64 %9, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %2, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %32, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %29, i64 %9, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %2, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %36, %28
  %43 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %30 to i8*
  %44 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 32, i1 false) #9
  br label %45

45:                                               ; preds = %36, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler15NodeOriginTable9PrintJsonERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::NodeOriginTable"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::NodeOrigin", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #9
  %5 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::compiler::NodeOrigin"** %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !15
  %9 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %5 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !15
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 5
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = inttoptr i64 %10 to %"class.v8::internal::compiler::NodeOrigin"*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %3 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %3, i64 0, i32 3
  br label %21

19:                                               ; preds = %39, %2
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #9
  ret void

21:                                               ; preds = %43, %14
  %22 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %15, %14 ], [ %44, %43 ]
  %23 = phi i8 [ 0, %14 ], [ %40, %43 ]
  %24 = phi i64 [ 0, %14 ], [ %41, %43 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %22, i64 %24
  %26 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %26, i64 32, i1 false)
  %27 = load i64, i64* %18, align 8
  %28 = icmp sgt i64 %27, -1
  br i1 %28, label %29, label %39

29:                                               ; preds = %21
  %30 = and i8 %23, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #9
  br label %34

34:                                               ; preds = %29, %32
  %35 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  %36 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %24) #9
  %37 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  %38 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #9
  call void @_ZNK2v88internal8compiler10NodeOrigin9PrintJsonERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::NodeOrigin"* nonnull %3, %"class.std::__1::basic_ostream"* dereferenceable(160) %1)
  br label %39

39:                                               ; preds = %34, %21
  %40 = phi i8 [ 1, %34 ], [ %23, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  %41 = add i64 %24, 1
  %42 = icmp eq i64 %41, %12
  br i1 %42, label %19, label %43

43:                                               ; preds = %39
  %44 = load %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"** %16, align 8, !noalias !18
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !21
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #10
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15NodeOriginTable9DecoratorD0Ev(%"class.v8::internal::compiler::NodeOriginTable::Decorator"*) unnamed_addr #7 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15NodeOriginTable9Decorator8DecorateEPNS1_4NodeE(%"class.v8::internal::compiler::NodeOriginTable::Decorator"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::compiler::NodeOrigin", align 16
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable::Decorator", %"class.v8::internal::compiler::NodeOriginTable::Decorator"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::NodeOriginTable"*, %"class.v8::internal::compiler::NodeOriginTable"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %5, i64 0, i32 2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %5, i64 0, i32 4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777215
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::compiler::NodeOrigin"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 5
  %19 = icmp ugt i64 %18, %11
  %20 = inttoptr i64 %16 to %"class.v8::internal::compiler::NodeOrigin"*
  br i1 %19, label %30, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %7, i64 0, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  %24 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %3 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %24, align 16, !alias.scope !22
  %25 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %3, i64 0, i32 3
  store i64 -9223372036854775808, i64* %25, align 8, !alias.scope !22
  %26 = add nuw nsw i64 %11, 1
  %27 = sub nsw i64 %26, %18
  call void @_ZNSt3__16vectorIN2v88internal8compiler10NodeOriginENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.12"* %22, i64 %27, %"class.v8::internal::compiler::NodeOrigin"* nonnull dereferenceable(32) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  %28 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"** %28, align 8
  br label %30

30:                                               ; preds = %21, %2
  %31 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %20, %2 ], [ %29, %21 ]
  %32 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %31, i64 %11
  %33 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %31, i64 %11, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %5, i64 0, i32 2, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %31, i64 %11, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %5, i64 0, i32 2, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %40, %42
  br i1 %43, label %47, label %44

44:                                               ; preds = %38, %30
  %45 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %32 to i8*
  %46 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 32, i1 false) #9
  br label %47

47:                                               ; preds = %38, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14GraphDecoratorD2Ev(%"class.v8::internal::compiler::GraphDecorator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler10NodeOriginENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.12"*, i64, %"class.v8::internal::compiler::NodeOrigin"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.v8::internal::compiler::NodeOrigin"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::NodeOrigin"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 5
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.v8::internal::compiler::NodeOrigin"*
  %15 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %2 to i8*
  %19 = shl nsw i64 %1, 5
  %20 = add i64 %19, -32
  %21 = lshr exact i64 %20, 5
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %29, %25 ], [ %14, %17 ]
  %27 = phi i64 [ %30, %25 ], [ %23, %17 ]
  %28 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %18, i64 32, i1 false) #9
  %29 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %26, i64 1
  %30 = add i64 %27, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %25, !llvm.loop !25

32:                                               ; preds = %25, %17
  %33 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %14, %17 ], [ %29, %25 ]
  %34 = icmp ult i64 %20, 96
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %15 to i64
  br label %48

37:                                               ; preds = %32, %37
  %38 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %46, %37 ], [ %33, %32 ]
  %39 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %18, i64 32, i1 false) #9
  %40 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %38, i64 1
  %41 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %18, i64 32, i1 false) #9
  %42 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %38, i64 2
  %43 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %18, i64 32, i1 false) #9
  %44 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %38, i64 3
  %45 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %18, i64 32, i1 false) #9
  %46 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %38, i64 4
  %47 = icmp eq %"class.v8::internal::compiler::NodeOrigin"* %46, %15
  br i1 %47, label %35, label %37

48:                                               ; preds = %13, %35
  %49 = phi i64 [ %36, %35 ], [ %9, %13 ]
  store i64 %49, i64* %8, align 8
  ret void

50:                                               ; preds = %3
  %51 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %9, %52
  %54 = ashr exact i64 %53, 5
  %55 = add i64 %54, %1
  %56 = icmp ugt i64 %55, 67108863
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #11
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %6, %52
  %61 = ashr exact i64 %60, 5
  %62 = icmp ult i64 %61, 33554431
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 4
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %59, %63
  %69 = phi i64 [ %66, %63 ], [ 67108863, %59 ]
  %70 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %71 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %70, align 8
  %72 = shl i64 %69, 5
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %71, i64 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %71, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %74
  %78 = icmp ugt i64 %72, %77
  br i1 %78, label %79, label %81, !prof !5

79:                                               ; preds = %68
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %71, i64 %72) #9
  br label %83

81:                                               ; preds = %68
  %82 = add i64 %74, %72
  store i64 %82, i64* %73, align 8
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = inttoptr i64 %84 to %"class.v8::internal::compiler::NodeOrigin"*
  br label %86

86:                                               ; preds = %83, %63
  %87 = phi i64 [ %69, %83 ], [ 0, %63 ]
  %88 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %85, %83 ], [ null, %63 ]
  %89 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %88, i64 %54
  %90 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %89 to i64
  %91 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %88, i64 %87
  %92 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %89, i64 %1
  %93 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %2 to i8*
  %94 = shl nsw i64 %1, 5
  %95 = add i64 %94, -32
  %96 = lshr exact i64 %95, 5
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %86, %100
  %101 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %105, %100 ], [ %89, %86 ]
  %102 = phi i64 [ %106, %100 ], [ %90, %86 ]
  %103 = phi i64 [ %107, %100 ], [ %98, %86 ]
  %104 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %93, i64 32, i1 false) #9
  %105 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %101, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %105 to i64
  %107 = add i64 %103, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %100, !llvm.loop !27

109:                                              ; preds = %100
  %110 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %105 to i64
  br label %111

111:                                              ; preds = %86, %109
  %112 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %89, %86 ], [ %105, %109 ]
  %113 = phi i64 [ %90, %86 ], [ %110, %109 ]
  %114 = icmp ult i64 %95, 96
  br i1 %114, label %128, label %115

115:                                              ; preds = %111, %115
  %116 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %125, %115 ], [ %112, %111 ]
  %117 = phi i64 [ %126, %115 ], [ %113, %111 ]
  %118 = inttoptr i64 %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %93, i64 32, i1 false) #9
  %119 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %116, i64 1
  %120 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %93, i64 32, i1 false) #9
  %121 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %116, i64 2
  %122 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %93, i64 32, i1 false) #9
  %123 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %116, i64 3
  %124 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %93, i64 32, i1 false) #9
  %125 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %116, i64 4
  %126 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %125 to i64
  %127 = icmp eq %"class.v8::internal::compiler::NodeOrigin"* %92, %125
  br i1 %127, label %128, label %115

128:                                              ; preds = %115, %111
  %129 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %91 to i64
  %130 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %92 to i64
  %131 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %132 = load %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"** %131, align 8
  %133 = load %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"** %7, align 8
  %134 = icmp eq %"class.v8::internal::compiler::NodeOrigin"* %133, %132
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %132 to i64
  %137 = getelementptr %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %133, i64 -1, i32 0
  %138 = ptrtoint i8** %137 to i64
  %139 = sub i64 %138, %136
  %140 = lshr i64 %139, 5
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 3
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %154, label %144

144:                                              ; preds = %135, %144
  %145 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %148, %144 ], [ %89, %135 ]
  %146 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %149, %144 ], [ %133, %135 ]
  %147 = phi i64 [ %152, %144 ], [ %142, %135 ]
  %148 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %145, i64 -1
  %149 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %146, i64 -1
  %150 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %148 to i8*
  %151 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 32, i1 false) #9
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %144, !llvm.loop !28

154:                                              ; preds = %144, %135
  %155 = phi %"class.v8::internal::compiler::NodeOrigin"* [ undef, %135 ], [ %148, %144 ]
  %156 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %89, %135 ], [ %148, %144 ]
  %157 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %133, %135 ], [ %149, %144 ]
  %158 = icmp ult i64 %139, 96
  br i1 %158, label %179, label %159

159:                                              ; preds = %154, %159
  %160 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %174, %159 ], [ %156, %154 ]
  %161 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %175, %159 ], [ %157, %154 ]
  %162 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %160, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %161, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %162 to i8*
  %165 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 32, i1 false) #9
  %166 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %160, i64 -2
  %167 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %161, i64 -2
  %168 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %166 to i8*
  %169 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 32, i1 false) #9
  %170 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %160, i64 -3
  %171 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %161, i64 -3
  %172 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %170 to i8*
  %173 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 32, i1 false) #9
  %174 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %160, i64 -4
  %175 = getelementptr inbounds %"class.v8::internal::compiler::NodeOrigin", %"class.v8::internal::compiler::NodeOrigin"* %161, i64 -4
  %176 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %174 to i8*
  %177 = bitcast %"class.v8::internal::compiler::NodeOrigin"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 32, i1 false) #9
  %178 = icmp eq %"class.v8::internal::compiler::NodeOrigin"* %175, %132
  br i1 %178, label %179, label %159

179:                                              ; preds = %159, %154
  %180 = phi %"class.v8::internal::compiler::NodeOrigin"* [ %155, %154 ], [ %174, %159 ]
  %181 = ptrtoint %"class.v8::internal::compiler::NodeOrigin"* %180 to i64
  br label %182

182:                                              ; preds = %128, %179
  %183 = phi i64 [ %181, %179 ], [ %90, %128 ]
  store i64 %183, i64* %51, align 8
  store i64 %130, i64* %8, align 8
  store i64 %129, i64* %5, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv: argument 0"}
!4 = distinct !{!4, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK2v88internal8compiler11NodeAuxDataINS1_10NodeOriginEXadL_ZNS3_7UnknownEvEEE3GetEPNS1_4NodeE: argument 0"}
!8 = distinct !{!8, !"_ZNK2v88internal8compiler11NodeAuxDataINS1_10NodeOriginEXadL_ZNS3_7UnknownEvEEE3GetEPNS1_4NodeE"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv: argument 0"}
!11 = distinct !{!11, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv: argument 0"}
!14 = distinct !{!14, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK2v88internal8compiler11NodeAuxDataINS1_10NodeOriginEXadL_ZNS3_7UnknownEvEEE3endEv: argument 0"}
!17 = distinct !{!17, !"_ZNK2v88internal8compiler11NodeAuxDataINS1_10NodeOriginEXadL_ZNS3_7UnknownEvEEE3endEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK2v88internal8compiler11NodeAuxDataINS1_10NodeOriginEXadL_ZNS3_7UnknownEvEEE14const_iteratordeEv: argument 0"}
!20 = distinct !{!20, !"_ZNK2v88internal8compiler11NodeAuxDataINS1_10NodeOriginEXadL_ZNS3_7UnknownEvEEE14const_iteratordeEv"}
!21 = !{i8 0, i8 2}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv: argument 0"}
!24 = distinct !{!24, !"_ZN2v88internal8compiler10NodeOrigin7UnknownEv"}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.disable"}
!27 = distinct !{!27, !26}
!28 = distinct !{!28, !26}
