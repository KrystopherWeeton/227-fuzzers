; ModuleID = 'gen/third_party/blink/public/mojom/loader/navigation_predictor.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/loader/navigation_predictor.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter" = type { %"class.blink::mojom::AnchorElementMetricsHost"* }
%"class.blink::mojom::AnchorElementMetricsHost" = type { i32 (...)** }
%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting" = type { %"class.blink::mojom::AnchorElementMetricsHost" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::AnchorElementClick"* }
%"class.blink::mojom::AnchorElementClick" = type { i32, %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr.10"*, %"class.mojo::StructPtr.10"*, %"class.std::__1::__compressed_pair.17" }
%"class.mojo::StructPtr.10" = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::mojom::AnchorElementMetrics"* }
%"class.blink::mojom::AnchorElementMetrics" = type { i32, float, float, float, float, float, float, i8, i8, i8, i8, i8, i32, i32, %class.GURL, %class.GURL, %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.mojo::StructPtr.10"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.24" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::AnchorElementEnteredViewport", i32, [4 x i8] }>
%"class.blink::mojom::AnchorElementEnteredViewport" = type { i32, i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.mojo::InlinedStructPtr"* }

$_ZN5blink5mojom24AnchorElementMetricsHostD2Ev = comdat any

$_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom45AnchorElementMetricsHostInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::AnchorElementMetricsHost"*)* @_ZN5blink5mojom24AnchorElementMetricsHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)* @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTesting24ReportAnchorElementClickEN4mojo9StructPtrINS0_18AnchorElementClickEEE to i8*), i8* bitcast (void (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*, %"class.std::__1::vector"*)* @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTesting23ReportNewAnchorElementsENSt3__16vectorIN4mojo9StructPtrINS0_20AnchorElementMetricsEEENS2_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*, %"class.std::__1::vector.22"*)* @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTesting35ReportAnchorElementsEnteredViewportENSt3__16vectorIN4mojo16InlinedStructPtrINS0_28AnchorElementEnteredViewportEEENS2_9allocatorIS7_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom35AnchorElementMetricsHostAsyncWaiterC1EPNS0_24AnchorElementMetricsHostE = hidden unnamed_addr alias void (%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"*, %"class.blink::mojom::AnchorElementMetricsHost"*), void (%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"*, %"class.blink::mojom::AnchorElementMetricsHost"*)* @_ZN5blink5mojom35AnchorElementMetricsHostAsyncWaiterC2EPNS0_24AnchorElementMetricsHostE
@_ZN5blink5mojom35AnchorElementMetricsHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"*), void (%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"*)* @_ZN5blink5mojom35AnchorElementMetricsHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTesting24ReportAnchorElementClickEN4mojo9StructPtrINS0_18AnchorElementClickEEE(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"* %0 to %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)**, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::AnchorElementMetricsHost"* %7(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.blink::mojom::AnchorElementMetricsHost"* %8 to void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)**, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)*, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)*, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.blink::mojom::AnchorElementMetricsHost"* %8, %"class.mojo::StructPtr"* nonnull %3) #8
  %17 = load %"class.blink::mojom::AnchorElementClick"*, %"class.blink::mojom::AnchorElementClick"** %10, align 8
  store %"class.blink::mojom::AnchorElementClick"* null, %"class.blink::mojom::AnchorElementClick"** %10, align 8
  %18 = icmp eq %"class.blink::mojom::AnchorElementClick"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN5blink5mojom18AnchorElementClickD1Ev(%"class.blink::mojom::AnchorElementClick"* nonnull %17) #8
  %20 = bitcast %"class.blink::mojom::AnchorElementClick"* %17 to i8*
  call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTesting23ReportNewAnchorElementsENSt3__16vectorIN4mojo9StructPtrINS0_20AnchorElementMetricsEEENS2_9allocatorIS7_EEEE(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = bitcast %"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"* %0 to %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)**, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::AnchorElementMetricsHost"* %7(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %12, align 16
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr.10"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr.10"** %16 to i64*
  store i64 %15, i64* %17, align 16
  %18 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #8
  %19 = bitcast %"class.blink::mojom::AnchorElementMetricsHost"* %8 to void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)***
  %20 = load void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)**, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)*, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)** %20, i64 3
  %22 = load void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)*, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector"*)** %21, align 8
  call void %22(%"class.blink::mojom::AnchorElementMetricsHost"* %8, %"class.std::__1::vector"* nonnull %3) #8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.10"*, %"class.mojo::StructPtr.10"** %23, align 16
  %25 = icmp eq %"class.mojo::StructPtr.10"* %24, null
  br i1 %25, label %45, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.mojo::StructPtr.10"* %24 to i8*
  %28 = load %"class.mojo::StructPtr.10"*, %"class.mojo::StructPtr.10"** %11, align 8
  %29 = icmp eq %"class.mojo::StructPtr.10"* %28, %24
  br i1 %29, label %43, label %30

30:                                               ; preds = %26, %38
  %31 = phi %"class.mojo::StructPtr.10"* [ %32, %38 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"class.mojo::StructPtr.10", %"class.mojo::StructPtr.10"* %31, i64 -1
  %33 = getelementptr inbounds %"class.mojo::StructPtr.10", %"class.mojo::StructPtr.10"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::mojom::AnchorElementMetrics"*, %"class.blink::mojom::AnchorElementMetrics"** %33, align 8
  store %"class.blink::mojom::AnchorElementMetrics"* null, %"class.blink::mojom::AnchorElementMetrics"** %33, align 8
  %35 = icmp eq %"class.blink::mojom::AnchorElementMetrics"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  call void @_ZN5blink5mojom20AnchorElementMetricsD1Ev(%"class.blink::mojom::AnchorElementMetrics"* nonnull %34) #8
  %37 = bitcast %"class.blink::mojom::AnchorElementMetrics"* %34 to i8*
  call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %36, %30
  %39 = icmp eq %"class.mojo::StructPtr.10"* %32, %24
  br i1 %39, label %40, label %30

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector"* %3 to i8**
  %42 = load i8*, i8** %41, align 16
  br label %43

43:                                               ; preds = %40, %26
  %44 = phi i8* [ %42, %40 ], [ %27, %26 ]
  store %"class.mojo::StructPtr.10"* %24, %"class.mojo::StructPtr.10"** %11, align 8
  call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %2, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTesting35ReportAnchorElementsEnteredViewportENSt3__16vectorIN4mojo16InlinedStructPtrINS0_28AnchorElementEnteredViewportEEENS2_9allocatorIS7_EEEE(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*, %"class.std::__1::vector.22"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.22", align 16
  %4 = bitcast %"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"* %0 to %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)**, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)*, %"class.blink::mojom::AnchorElementMetricsHost"* (%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::AnchorElementMetricsHost"* %7(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"* %0) #8
  %9 = bitcast %"class.std::__1::vector.22"* %1 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %3, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.22"* %3 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %12, align 16
  %13 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.mojo::InlinedStructPtr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.mojo::InlinedStructPtr"** %16 to i64*
  store i64 %15, i64* %17, align 16
  %18 = bitcast %"class.std::__1::vector.22"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #8
  %19 = bitcast %"class.blink::mojom::AnchorElementMetricsHost"* %8 to void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)***
  %20 = load void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)**, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)*, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)** %20, i64 4
  %22 = load void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)*, void (%"class.blink::mojom::AnchorElementMetricsHost"*, %"class.std::__1::vector.22"*)** %21, align 8
  call void %22(%"class.blink::mojom::AnchorElementMetricsHost"* %8, %"class.std::__1::vector.22"* nonnull %3) #8
  %23 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %3, i64 0, i32 0, i32 0
  %24 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %23, align 16
  %25 = icmp eq %"class.mojo::InlinedStructPtr"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.mojo::InlinedStructPtr"* %24 to i8*
  %28 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %11, align 8
  %29 = icmp eq %"class.mojo::InlinedStructPtr"* %28, %24
  br i1 %29, label %38, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"class.mojo::InlinedStructPtr"* [ %32, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %31, i64 -1
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %32, i64 0, i32 0
  call void @_ZN5blink5mojom28AnchorElementEnteredViewportD1Ev(%"class.blink::mojom::AnchorElementEnteredViewport"* %33) #8
  %34 = icmp eq %"class.mojo::InlinedStructPtr"* %32, %24
  br i1 %34, label %35, label %30

35:                                               ; preds = %30
  %36 = bitcast %"class.std::__1::vector.22"* %3 to i8**
  %37 = load i8*, i8** %36, align 16
  br label %38

38:                                               ; preds = %35, %26
  %39 = phi i8* [ %37, %35 ], [ %27, %26 ]
  store %"class.mojo::InlinedStructPtr"* %24, %"class.mojo::InlinedStructPtr"** %11, align 8
  call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %2, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom35AnchorElementMetricsHostAsyncWaiterC2EPNS0_24AnchorElementMetricsHostE(%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"* nocapture, %"class.blink::mojom::AnchorElementMetricsHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter", %"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::AnchorElementMetricsHost"* %1, %"class.blink::mojom::AnchorElementMetricsHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom35AnchorElementMetricsHostAsyncWaiterD2Ev(%"class.blink::mojom::AnchorElementMetricsHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom24AnchorElementMetricsHostD2Ev(%"class.blink::mojom::AnchorElementMetricsHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom45AnchorElementMetricsHostInterceptorForTestingD0Ev(%"class.blink::mojom::AnchorElementMetricsHostInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom18AnchorElementClickD1Ev(%"class.blink::mojom::AnchorElementClick"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @_ZN5blink5mojom20AnchorElementMetricsD1Ev(%"class.blink::mojom::AnchorElementMetrics"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom28AnchorElementEnteredViewportD1Ev(%"class.blink::mojom::AnchorElementEnteredViewport"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
