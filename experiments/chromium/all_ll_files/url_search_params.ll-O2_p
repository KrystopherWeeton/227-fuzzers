; ModuleID = '../../third_party/blink/renderer/core/url/url_search_params.cc'
source_filename = "../../third_party/blink/renderer/core/url/url_search_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.231", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.231" = type { %"class.base::RefCounted.232" }
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.238", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.19", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.190", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.197", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.147" }
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair.165"*, i32, i32 }
%"struct.std::__1::pair.165" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.201" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::URLSearchParams" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::Vector", %"class.blink::WeakMember" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMURL"* }
%"class.blink::DOMURL" = type { %"class.blink::ScriptWrappable", %"class.blink::DOMURLUtils.base", %"class.blink::KURL", %"class.blink::WeakMember.2" }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::WeakMember.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::URLSearchParams"* }
%"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.WTF::Vector.6", %"class.WTF::Vector" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.WTF::Vector.9"*, i32, i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.16" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.16" = type { %"class.v8::TracedReference.17" }
%"class.v8::TracedReference.17" = type { %"class.v8::BasicTracedReference.18" }
%"class.v8::BasicTracedReference.18" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { i8*, i32, i32 }
%"class.blink::DOMURLUtils" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector.217", i64, %"class.WTF::Vector.206", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.206", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.220, i64, i64, %"class.absl::optional", %class.scoped_refptr.223 }
%class.scoped_refptr.220 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.221 }
%union.anon.221 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.222" }
%"class.base::time_internal::TimeBase.222" = type { i64 }
%class.scoped_refptr.223 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource" = type { i32 (...)** }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.230, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.230 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.241" }
%"class.blink::Persistent.241" = type { %"class.blink::PersistentBase.242" }
%"class.blink::PersistentBase.242" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::reverse_iterator" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* }
%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource" = type { %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource", %"class.blink::Member.243", i64 }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.3" }

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink15URLSearchParams18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_6DOMURLEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_6DOMURLEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_SA_SA_EEvT0_SB_T1_SC_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_PNS_15iterator_traitsISB_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_4pairIN3WTF6StringES4_EES7_EEENS_16reverse_iteratorIPS5_EESE_SE_EEvT0_SF_T1_SG_T2_T_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringES4_E15IterationSourceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8IterableIN3WTF6StringES4_E15IterationSourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE7GetNameEPKv = comdat any

$_ZN5blink8IterableIN3WTF6StringES2_E15IterationSourceD2Ev = comdat any

$_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_15URLSearchParamsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [16 x i8] c"URLSearchParams\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"Sequence initializer must only contain pair elements\00", align 1
@_ZTVN5blink15URLSearchParamsE = hidden unnamed_addr constant { [12 x i8*], [3 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::URLSearchParams"*)* @_ZN5blink15URLSearchParamsD2Ev to i8*), i8* bitcast (void (%"class.blink::URLSearchParams"*)* @_ZN5blink15URLSearchParamsD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::URLSearchParams"*, %"class.blink::Visitor"*)* @_ZNK5blink15URLSearchParams5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::URLSearchParams"*)* @_ZNK5blink15URLSearchParams18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* (%"class.blink::URLSearchParams"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink15URLSearchParams14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* (%"class.blink::URLSearchParams"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZThn16_N5blink15URLSearchParams14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink15URLSearchParams18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::String>]\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8IterableINS_6StringES3_E15IterationSourceEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Iterable<WTF::String, WTF::String>::IterationSource]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8IterableIN3WTF6StringES4_E15IterationSourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZTVN5blink12_GLOBAL__N_130URLSearchParamsIterationSourceE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*)* @_ZN5blink8IterableIN3WTF6StringES2_E15IterationSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"*)* @_ZN5blink12_GLOBAL__N_130URLSearchParamsIterationSourceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_130URLSearchParamsIterationSource4NextEPNS_11ScriptStateERN3WTF6StringES6_RNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_130URLSearchParamsIterationSource5TraceEPNS_7VisitorE to i8*)] }, align 8

@_ZN5blink15URLSearchParamsC1ERKN3WTF6StringEPNS_6DOMURLE = hidden unnamed_addr alias void (%"class.blink::URLSearchParams"*, %"class.WTF::String"*, %"class.blink::DOMURL"*), void (%"class.blink::URLSearchParams"*, %"class.WTF::String"*, %"class.blink::DOMURL"*)* @_ZN5blink15URLSearchParamsC2ERKN3WTF6StringEPNS_6DOMURLE
@_ZN5blink15URLSearchParamsD1Ev = hidden unnamed_addr alias void (%"class.blink::URLSearchParams"*), void (%"class.blink::URLSearchParams"*)* @_ZN5blink15URLSearchParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::URLSearchParams"* @_ZN5blink15URLSearchParams6CreateEPKNS_69V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecordERNS_14ExceptionStateE(%"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord", %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %80 [
    i32 0, label %6
    i32 1, label %74
    i32 2, label %77
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord", %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %53, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithEDs(%"class.WTF::StringImpl"* nonnull %9, i16 zeroext 63) #12
  br i1 %12, label %13, label %53

13:                                               ; preds = %11
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %7, i32 1, i32 -1) #12
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %18 = bitcast i8* %17 to %"class.blink::URLSearchParams"*
  %19 = bitcast i8* %17 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = bitcast i8* %20 to i64**
  store i64* null, i64** %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 16
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZN5blink15URLSearchParams21SetInputWithoutUpdateERKN3WTF6StringE(%"class.blink::URLSearchParams"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  br label %32

32:                                               ; preds = %13, %27, %31
  %33 = getelementptr inbounds i8, i8* %17, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %32, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %80

53:                                               ; preds = %6, %11
  %54 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %55 = bitcast i8* %54 to %"class.blink::URLSearchParams"*
  %56 = bitcast i8* %54 to i32 (...)***
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to i64**
  store i64* null, i64** %58, align 8
  %59 = getelementptr inbounds i8, i8* %54, i64 16
  %60 = bitcast i8* %59 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %54, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #12
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  tail call void @_ZN5blink15URLSearchParams21SetInputWithoutUpdateERKN3WTF6StringE(%"class.blink::URLSearchParams"* %55, %"class.WTF::String"* dereferenceable(8) %7) #12
  br label %69

69:                                               ; preds = %53, %64, %68
  %70 = getelementptr inbounds i8, i8* %54, i64 -4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  store atomic i16 %73, i16* %71 release, align 2
  br label %80

74:                                               ; preds = %2
  %75 = getelementptr inbounds %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord", %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord"* %0, i64 0, i32 3
  %76 = tail call %"class.blink::URLSearchParams"* @_ZN5blink15URLSearchParams6CreateERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EERNS_14ExceptionStateE(%"class.WTF::Vector.6"* dereferenceable(16) %75, %"class.blink::ExceptionState"* dereferenceable(72) %1)
  br label %80

77:                                               ; preds = %2
  %78 = getelementptr inbounds %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord", %"class.blink::V8UnionUSVStringOrUSVStringSequenceSequenceOrUSVStringUSVStringRecord"* %0, i64 0, i32 4
  %79 = tail call %"class.blink::URLSearchParams"* @_ZN5blink15URLSearchParams6CreateERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.WTF::Vector"* dereferenceable(16) %78, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  br label %80

80:                                               ; preds = %2, %52, %69, %77, %74
  %81 = phi %"class.blink::URLSearchParams"* [ %79, %77 ], [ %76, %74 ], [ %18, %52 ], [ %55, %69 ], [ null, %2 ]
  ret %"class.blink::URLSearchParams"* %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::URLSearchParams"* @_ZN5blink15URLSearchParams6CreateERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EERNS_14ExceptionStateE(%"class.WTF::Vector.6"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %9 = bitcast i8* %8 to %"class.blink::URLSearchParams"*
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i64**
  store i64* null, i64** %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 16
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #12
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  call void @_ZN5blink15URLSearchParams21SetInputWithoutUpdateERKN3WTF6StringE(%"class.blink::URLSearchParams"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  br label %23

23:                                               ; preds = %2, %18, %22
  %24 = getelementptr inbounds i8, i8* %8, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %23, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %44 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %101, label %47

47:                                               ; preds = %43, %94
  %48 = phi i32 [ %97, %94 ], [ 0, %43 ]
  %49 = call dereferenceable(16) %"class.WTF::Vector.9"* @_ZNK3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.6"* %0, i32 %48) #12
  %50 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %49, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %94, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i64 52) #12
  %56 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToConstructEPKcRKN3WTF6StringE(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %5) #12
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %59 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %59, i64 3
  %61 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %60, align 8
  call void %61(%"class.blink::ExceptionState"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %53, %73, %76
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %100

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #12
  br label %100

94:                                               ; preds = %47
  %95 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.9"* %49, i32 0) #12
  %96 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.9"* %49, i32 1) #12
  call void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"* %9, %"class.WTF::String"* dereferenceable(8) %95, %"class.WTF::String"* dereferenceable(8) %96)
  %97 = add nuw i32 %48, 1
  %98 = load i32, i32* %44, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %47, label %101

100:                                              ; preds = %77, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  br label %101

101:                                              ; preds = %94, %43, %100
  %102 = phi %"class.blink::URLSearchParams"* [ null, %100 ], [ %9, %43 ], [ %9, %94 ]
  ret %"class.blink::URLSearchParams"* %102
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::URLSearchParams"* @_ZN5blink15URLSearchParams6CreateERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %7 = bitcast i8* %6 to %"class.blink::URLSearchParams"*
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i64**
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void @_ZN5blink15URLSearchParams21SetInputWithoutUpdateERKN3WTF6StringE(%"class.blink::URLSearchParams"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  br label %21

21:                                               ; preds = %2, %16, %20
  %22 = getelementptr inbounds i8, i8* %6, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %41

41:                                               ; preds = %21, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = zext i32 %43 to i64
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 %48
  br label %50

50:                                               ; preds = %45, %50
  %51 = phi %"struct.std::__1::pair"* [ %54, %50 ], [ %47, %45 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1
  call void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"* %7, %"class.WTF::String"* dereferenceable(8) %52, %"class.WTF::String"* dereferenceable(8) %53)
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 1
  %55 = icmp eq %"struct.std::__1::pair"* %54, %49
  br i1 %55, label %56, label %50

56:                                               ; preds = %50, %41
  ret %"class.blink::URLSearchParams"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToConstructEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2
  %6 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %3
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #12
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %27, %31, %46
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %71, label %56, !prof !2

56:                                               ; preds = %48
  %57 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %58, align 8
  %60 = zext i32 %52 to i64
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 %60
  %62 = bitcast %"struct.std::__1::pair"* %61 to i64*
  store i64 %57, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 %60, i32 1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = load i32, i32* %51, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %51, align 4
  br label %87

71:                                               ; preds = %48
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"* %5, %"struct.std::__1::pair"* nonnull dereferenceable(16) %4) #12
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #12
  br label %87

87:                                               ; preds = %56, %86, %83, %71
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #12
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParamsC2ERKN3WTF6StringEPNS_6DOMURLE(%"class.blink::URLSearchParams"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::DOMURL"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2
  %8 = bitcast %"class.WTF::Vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  %9 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::DOMURL"* %2, %"class.blink::DOMURL"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZN5blink15URLSearchParams21SetInputWithoutUpdateERKN3WTF6StringE(%"class.blink::URLSearchParams"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %18

18:                                               ; preds = %3, %17, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams21SetInputWithoutUpdateERKN3WTF6StringE(%"class.blink::URLSearchParams"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %60, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = zext i32 %14 to i64
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %19
  br label %21

21:                                               ; preds = %56, %16
  %22 = phi %"struct.std::__1::pair"* [ %57, %56 ], [ %18, %16 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %38, %35, %21
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %56

56:                                               ; preds = %55, %52, %39
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1
  %58 = icmp eq %"struct.std::__1::pair"* %57, %20
  br i1 %58, label %59, label %21

59:                                               ; preds = %56
  store i32 0, i32* %13, align 4
  br label %60

60:                                               ; preds = %59, %12
  %61 = bitcast %"class.WTF::Vector"* %8 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.WTF::Vector"* %8 to i64*
  store atomic i64 0, i64* %63 monotonic, align 8
  store i32 0, i32* %9, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #12
  br label %64

64:                                               ; preds = %2, %60
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %308, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = icmp eq i32 %70, 0
  br i1 %72, label %308, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.WTF::String"* %5 to i8*
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::String"* %4 to i8*
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %78 = bitcast %"class.WTF::String"* %4 to i64*
  %79 = bitcast %"class.WTF::String"* %6 to i8*
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %81 = bitcast %"class.WTF::String"* %3 to i8*
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::String"* %3 to i64*
  %84 = bitcast %"class.WTF::String"* %6 to i64*
  %85 = bitcast %"class.WTF::String"* %7 to i8*
  %86 = bitcast %"class.WTF::String"* %7 to i64*
  br label %87

87:                                               ; preds = %306, %73
  %88 = phi %"class.WTF::StringImpl"* [ %66, %73 ], [ %307, %306 ]
  %89 = phi i64 [ 0, %73 ], [ %304, %306 ]
  %90 = trunc i64 %89 to i32
  %91 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %91, label %134, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  br i1 %96, label %113, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp ugt i32 %100, %90
  br i1 %101, label %102, label %134

102:                                              ; preds = %98
  %103 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  %104 = and i64 %89, 4294967295
  %105 = getelementptr inbounds i8, i8* %103, i64 %104
  %106 = sub i32 %100, %90
  %107 = zext i32 %106 to i64
  %108 = call i8* @memchr(i8* %105, i32 38, i64 %107) #13
  %109 = icmp eq i8* %108, null
  %110 = ptrtoint i8* %108 to i64
  %111 = ptrtoint %"class.WTF::StringImpl"* %97 to i64
  %112 = sub i64 %110, %111
  br i1 %109, label %134, label %129

113:                                              ; preds = %92
  %114 = bitcast %"class.WTF::StringImpl"* %97 to i16*
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp ugt i32 %116, %90
  br i1 %117, label %118, label %134

118:                                              ; preds = %113
  %119 = and i64 %89, 4294967295
  br label %120

120:                                              ; preds = %125, %118
  %121 = phi i64 [ %119, %118 ], [ %126, %125 ]
  %122 = getelementptr inbounds i16, i16* %114, i64 %121
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 38
  br i1 %124, label %129, label %125

125:                                              ; preds = %120
  %126 = add nuw nsw i64 %121, 1
  %127 = trunc i64 %126 to i32
  %128 = icmp eq i32 %116, %127
  br i1 %128, label %134, label %120

129:                                              ; preds = %120, %102
  %130 = phi i64 [ %112, %102 ], [ %121, %120 ]
  %131 = trunc i64 %130 to i32
  %132 = and i64 %130, 4294967295
  %133 = icmp eq i32 %131, -1
  br i1 %133, label %134, label %135

134:                                              ; preds = %125, %102, %113, %98, %87, %129
  br label %135

135:                                              ; preds = %129, %134
  %136 = phi i64 [ %71, %134 ], [ %132, %129 ]
  %137 = icmp ugt i64 %136, %89
  br i1 %137, label %138, label %303

138:                                              ; preds = %135
  br i1 %91, label %180, label %139

139:                                              ; preds = %138
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  br i1 %143, label %162, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = icmp ugt i32 %147, %90
  br i1 %148, label %149, label %180

149:                                              ; preds = %145
  %150 = bitcast %"class.WTF::StringImpl"* %144 to i8*
  %151 = and i64 %89, 4294967295
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  %153 = sub i32 %147, %90
  %154 = zext i32 %153 to i64
  %155 = call i8* @memchr(i8* %152, i32 61, i64 %154) #13
  %156 = icmp eq i8* %155, null
  %157 = ptrtoint i8* %155 to i64
  %158 = ptrtoint %"class.WTF::StringImpl"* %144 to i64
  %159 = sub i64 %157, %158
  %160 = trunc i64 %159 to i32
  %161 = select i1 %156, i32 -1, i32 %160
  br label %180

162:                                              ; preds = %139
  %163 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = icmp ugt i32 %165, %90
  br i1 %166, label %167, label %180

167:                                              ; preds = %162
  %168 = and i64 %89, 4294967295
  br label %169

169:                                              ; preds = %174, %167
  %170 = phi i64 [ %168, %167 ], [ %175, %174 ]
  %171 = getelementptr inbounds i16, i16* %163, i64 %170
  %172 = load i16, i16* %171, align 2
  %173 = icmp eq i16 %172, 61
  br i1 %173, label %178, label %174

174:                                              ; preds = %169
  %175 = add nuw nsw i64 %170, 1
  %176 = trunc i64 %175 to i32
  %177 = icmp eq i32 %165, %176
  br i1 %177, label %180, label %169

178:                                              ; preds = %169
  %179 = trunc i64 %170 to i32
  br label %180

180:                                              ; preds = %174, %138, %145, %149, %162, %178
  %181 = phi i32 [ -1, %138 ], [ -1, %145 ], [ %161, %149 ], [ -1, %162 ], [ %179, %178 ], [ -1, %174 ]
  %182 = zext i32 %181 to i64
  %183 = icmp eq i32 %181, -1
  %184 = icmp ult i64 %136, %182
  %185 = or i1 %183, %184
  %186 = select i1 %185, i64 %136, i64 %182
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %75, align 8
  %187 = sub nsw i64 %186, %89
  %188 = trunc i64 %187 to i32
  %189 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %90, i32 %188) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %77, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %206, label %191

191:                                              ; preds = %180
  %192 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %189, i16 zeroext 43, i16 zeroext 32) #12
  %193 = ptrtoint %"class.WTF::StringImpl"* %192 to i64
  store i64 %193, i64* %78, align 8
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %191
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %191
  %203 = phi i32 [ %201, %200 ], [ %199, %191 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #12
  br label %206

206:                                              ; preds = %180, %202, %205
  %207 = call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0) #12
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %223

223:                                              ; preds = %206, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %80, align 8
  %224 = icmp eq i64 %136, %186
  br i1 %224, label %269, label %225

225:                                              ; preds = %223
  %226 = trunc i64 %186 to i32
  %227 = add i32 %226, 1
  %228 = xor i64 %186, 4294967295
  %229 = add nuw nsw i64 %228, %136
  %230 = trunc i64 %229 to i32
  %231 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %227, i32 %230) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %82, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %248, label %233

233:                                              ; preds = %225
  %234 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %231, i16 zeroext 43, i16 zeroext 32) #12
  %235 = ptrtoint %"class.WTF::StringImpl"* %234 to i64
  store i64 %235, i64* %83, align 8
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %233
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %233
  %245 = phi i32 [ %243, %242 ], [ %241, %233 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #12
  br label %248

248:                                              ; preds = %225, %244, %247
  %249 = call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* nonnull dereferenceable(8) %3, i32 0) #12
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #12
  br label %265

265:                                              ; preds = %264, %261, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  %266 = ptrtoint %"class.WTF::StringImpl"* %249 to i64
  store i64 %266, i64* %84, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  call void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  br label %273

269:                                              ; preds = %265, %223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #12
  %270 = load i64, i64* %86, align 8
  store i64 %270, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #12
  %271 = inttoptr i64 %270 to %"class.WTF::StringImpl"*
  call void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %272 = icmp eq i64 %270, 0
  br i1 %272, label %287, label %273

273:                                              ; preds = %268, %269
  %274 = phi %"class.WTF::StringImpl"* [ %249, %268 ], [ %271, %269 ]
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %273
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %273
  %284 = phi i32 [ %282, %281 ], [ %280, %273 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #12
  br label %287

287:                                              ; preds = %269, %283, %286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  %288 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %287
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #12
  br label %302

302:                                              ; preds = %287, %298, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #12
  br label %303

303:                                              ; preds = %302, %135
  %304 = add nuw nsw i64 %136, 1
  %305 = icmp ult i64 %304, %71
  br i1 %305, label %306, label %308

306:                                              ; preds = %303
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  br label %87

308:                                              ; preds = %303, %64, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParamsD2Ev(%"class.blink::URLSearchParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink15URLSearchParamsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %6, null
  br i1 %7, label %59, label %8, !prof !3

8:                                                ; preds = %1
  %9 = bitcast %"struct.std::__1::pair"* %6 to i8*
  %10 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %57, label %13, !prof !2

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 %14
  br label %16

16:                                               ; preds = %13, %51
  %17 = phi %"struct.std::__1::pair"* [ %52, %51 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #12
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %51

51:                                               ; preds = %50, %47, %34
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %53 = icmp eq %"struct.std::__1::pair"* %52, %15
  br i1 %53, label %54, label %16

54:                                               ; preds = %51
  store i32 0, i32* %10, align 4
  %55 = bitcast %"class.WTF::Vector"* %4 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %8
  %58 = phi i8* [ %56, %54 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %58) #12
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  br label %59

59:                                               ; preds = %1, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParamsD0Ev(%"class.blink::URLSearchParams"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15URLSearchParamsD2Ev(%"class.blink::URLSearchParams"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15URLSearchParams5TraceEPNS_7VisitorE(%"class.blink::URLSearchParams"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::WeakMember"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember"* %3 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, i64 6
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_6DOMURLEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_6DOMURLEEEvRKNS_14LivenessBrokerEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %15, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams14RunUpdateStepsEv(%"class.blink::URLSearchParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::Vector.206", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMURL"*, %"class.blink::DOMURL"** %5, align 8
  %7 = icmp eq %"class.blink::DOMURL"* %6, null
  br i1 %7, label %50, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DOMURL", %"class.blink::DOMURL"* %6, i64 0, i32 1
  %10 = bitcast %"class.blink::DOMURLUtils.base"* %9 to %"class.blink::DOMURLUtils"*
  %11 = getelementptr inbounds %"class.blink::DOMURL", %"class.blink::DOMURL"* %6, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %50

14:                                               ; preds = %8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.WTF::Vector.206"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #12
  call void @_ZNK5blink15URLSearchParams16EncodeAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::URLSearchParams"* %0, %"class.WTF::Vector.206"* nonnull dereferenceable(16) %3) #12
  %20 = load i8*, i8** %18, align 8
  %21 = load i32, i32* %19, align 4
  call void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"* nonnull %2, i8* %20, i32 %21) #12
  %22 = load i8*, i8** %18, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %29, label %24, !prof !3

24:                                               ; preds = %14
  %25 = load i32, i32* %19, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %24
  store i32 0, i32* %19, align 4
  br label %28

28:                                               ; preds = %27, %24
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #12
  store i8* null, i8** %18, align 8
  br label %29

29:                                               ; preds = %14, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  %30 = bitcast %"class.WTF::String"* %2 to i64*
  %31 = load i64, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %31, i64* %33, align 8
  call void @_ZN5blink11DOMURLUtils17SetSearchInternalERKN3WTF6StringE(%"class.blink::DOMURLUtils"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %49

49:                                               ; preds = %29, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %50

50:                                               ; preds = %8, %1, %49
  ret void
}

declare void @_ZN5blink11DOMURLUtils17SetSearchInternalERKN3WTF6StringE(%"class.blink::DOMURLUtils"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15URLSearchParams8toStringEv(%"class.blink::URLSearchParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::Vector.206", align 8
  %4 = bitcast %"class.WTF::Vector.206"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #12
  call void @_ZNK5blink15URLSearchParams16EncodeAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::URLSearchParams"* %0, %"class.WTF::Vector.206"* nonnull dereferenceable(16) %3)
  %7 = load i8*, i8** %5, align 8
  %8 = load i32, i32* %6, align 4
  call void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"* nonnull %2, i8* %7, i32 %8) #12
  %9 = load i8*, i8** %5, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %16, label %11, !prof !3

11:                                               ; preds = %1
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %11
  store i32 0, i32* %6, align 4
  br label %15

15:                                               ; preds = %14, %11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #12
  store i8* null, i8** %5, align 8
  br label %16

16:                                               ; preds = %1, %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  ret %"class.WTF::StringImpl"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15URLSearchParams16EncodeAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::URLSearchParams"* nocapture readonly, %"class.WTF::Vector.206"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %22

21:                                               ; preds = %35, %2
  ret void

22:                                               ; preds = %12, %35
  %23 = phi %"struct.std::__1::pair"* [ %6, %12 ], [ %36, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %24, i32 0) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %25, i32 0) #12
  call void @_ZN5blink15FormDataEncoder25AddKeyValuePairAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_NS_15EncodedFormData12EncodingTypeENS0_4ModeE(%"class.WTF::Vector.206"* dereferenceable(16) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 0, i32 1) #12
  %26 = load i8, i8* %16, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %22, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %31 = load i8, i8* %19, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %37 = icmp eq %"struct.std::__1::pair"* %36, %10
  br i1 %37, label %21, label %22
}

declare void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams6appendERKN3WTF6StringES4_(%"class.blink::URLSearchParams"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  tail call void @_ZN5blink15URLSearchParams14RunUpdateStepsEv(%"class.blink::URLSearchParams"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams17deleteAllWithNameERKN3WTF6StringE(%"class.blink::URLSearchParams"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %10

9:                                                ; preds = %21, %2
  tail call void @_ZN5blink15URLSearchParams14RunUpdateStepsEv(%"class.blink::URLSearchParams"* %0)
  ret void

10:                                               ; preds = %7, %21
  %11 = phi i64 [ 0, %7 ], [ %22, %21 ]
  %12 = trunc i64 %11 to i32
  %13 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %12) #12
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %17 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %16) #12
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %3, i32 %12)
  br label %21

19:                                               ; preds = %10
  %20 = add nuw i64 %11, 1
  br label %21

21:                                               ; preds = %19, %18
  %22 = phi i64 [ %11, %18 ], [ %20, %19 ]
  %23 = load i32, i32* %4, align 4
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %10, label %9
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %42, %39, %22
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #12
  br label %60

60:                                               ; preds = %43, %56, %59
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %62 = icmp ne %"struct.std::__1::pair"* %26, null
  %63 = icmp ne %"struct.std::__1::pair"* %61, null
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %75, !prof !3

65:                                               ; preds = %60
  %66 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %67 = load i32, i32* %8, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 %68
  %70 = bitcast %"struct.std::__1::pair"* %26 to i8*
  %71 = bitcast %"struct.std::__1::pair"* %61 to i8*
  %72 = ptrtoint %"struct.std::__1::pair"* %69 to i64
  %73 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  %74 = sub i64 %72, %73
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %71, i64 %74, i1 false) #12
  br label %75

75:                                               ; preds = %60, %65
  %76 = load i32, i32* %8, align 4
  %77 = add i32 %76, -1
  store i32 %77, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15URLSearchParams3getERKN3WTF6StringE(%"class.blink::URLSearchParams"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %43, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %10, %40
  %13 = phi %"struct.std::__1::pair"* [ %4, %10 ], [ %41, %40 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %17 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %16) #12
  br i1 %17, label %18, label %40

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %22 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %22, label %43, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #12
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %28
  tail call void @llvm.trap() #12
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %43

40:                                               ; preds = %12
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 1
  %42 = icmp eq %"struct.std::__1::pair"* %41, %8
  br i1 %42, label %43, label %12

43:                                               ; preds = %40, %2, %38, %23, %18
  %44 = phi i64 [ %21, %18 ], [ %21, %23 ], [ %21, %38 ], [ 0, %2 ], [ 0, %40 ]
  %45 = inttoptr i64 %44 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15URLSearchParams6getAllERKN3WTF6StringE(%"class.WTF::Vector.9"* noalias sret, %"class.blink::URLSearchParams"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.9"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %59, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %15, %56
  %18 = phi %"struct.std::__1::pair"* [ %9, %15 ], [ %57, %56 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %22 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %21) #12
  br i1 %22, label %23, label %56

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 1
  %25 = load i32, i32* %6, align 4
  %26 = load i32, i32* %5, align 8
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %55, label %28, !prof !2

28:                                               ; preds = %23
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %30 = zext i32 %25 to i64
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %30, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = load i32, i32* %6, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %56

55:                                               ; preds = %23
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.9"* %0, %"class.WTF::String"* dereferenceable(8) %24) #12
  br label %56

56:                                               ; preds = %55, %52, %17
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %58 = icmp eq %"struct.std::__1::pair"* %57, %13
  br i1 %58, label %59, label %17

59:                                               ; preds = %56, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15URLSearchParams3hasERKN3WTF6StringE(%"class.blink::URLSearchParams"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq %"struct.std::__1::pair"* %20, %8
  br i1 %13, label %21, label %14

14:                                               ; preds = %10, %12
  %15 = phi %"struct.std::__1::pair"* [ %4, %10 ], [ %20, %12 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %19 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"* %18) #12
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  br i1 %19, label %21, label %12

21:                                               ; preds = %12, %14, %2
  %22 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %12 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams3setERKN3WTF6StringES4_(%"class.blink::URLSearchParams"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %77, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %14

11:                                               ; preds = %71
  %12 = and i8 %72, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %77, label %78

14:                                               ; preds = %8, %71
  %15 = phi i64 [ 0, %8 ], [ %73, %71 ]
  %16 = phi i8 [ 0, %8 ], [ %72, %71 ]
  %17 = trunc i64 %15 to i32
  %18 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %17) #12
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %22 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %21) #12
  br i1 %22, label %23, label %69

23:                                               ; preds = %14
  %24 = and i8 %16, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %68

26:                                               ; preds = %23
  %27 = add nuw i64 %15, 1
  %28 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %17) #12
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 1
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %47, %32, %26
  %50 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %51 = bitcast %"class.WTF::String"* %29 to i64*
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %71, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %71

68:                                               ; preds = %23
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %4, i32 %17)
  br label %71

69:                                               ; preds = %14
  %70 = add nuw i64 %15, 1
  br label %71

71:                                               ; preds = %67, %64, %49, %68, %69
  %72 = phi i8 [ %16, %68 ], [ %16, %69 ], [ 1, %49 ], [ 1, %64 ], [ 1, %67 ]
  %73 = phi i64 [ %15, %68 ], [ %70, %69 ], [ %27, %49 ], [ %27, %64 ], [ %27, %67 ]
  %74 = load i32, i32* %5, align 4
  %75 = zext i32 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %14, label %11

77:                                               ; preds = %3, %11
  tail call void @_ZN5blink15URLSearchParams19AppendWithoutUpdateERKN3WTF6StringES4_(%"class.blink::URLSearchParams"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #12
  tail call void @_ZN5blink15URLSearchParams14RunUpdateStepsEv(%"class.blink::URLSearchParams"* %0) #12
  br label %79

78:                                               ; preds = %11
  tail call void @_ZN5blink15URLSearchParams14RunUpdateStepsEv(%"class.blink::URLSearchParams"* %0)
  br label %79

79:                                               ; preds = %78, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15URLSearchParams4sortEv(%"class.blink::URLSearchParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, align 8
  %3 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %7
  %9 = bitcast i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)* @_ZN5blink12_GLOBAL__N_113CompareParamsERKNSt3__14pairIN3WTF6StringES4_EES7_, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %10 = icmp eq i32 %6, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %1, %16
  %12 = phi i64 [ %17, %16 ], [ %7, %1 ]
  %13 = shl i64 %12, 4
  %14 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %13, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = lshr i64 %12, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %11

19:                                               ; preds = %16, %1
  call void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"* %4, %"struct.std::__1::pair"* %8, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** nonnull dereferenceable(8) %2, i64 %7, %"struct.std::__1::pair"* null, i64 0) #12
  br label %22

20:                                               ; preds = %11
  %21 = bitcast i8* %14 to %"struct.std::__1::pair"*
  call void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"* %4, %"struct.std::__1::pair"* %8, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** nonnull dereferenceable(8) %2, i64 %7, %"struct.std::__1::pair"* nonnull %21, i64 %12) #12
  call void @_ZdlPv(i8* nonnull %14) #14
  br label %22

22:                                               ; preds = %19, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  call void @_ZN5blink15URLSearchParams14RunUpdateStepsEv(%"class.blink::URLSearchParams"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_113CompareParamsERKNSt3__14pairIN3WTF6StringES4_EES7_(%"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair"* dereferenceable(16)) #0 {
  %3 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4)
  ret i1 %5
}

declare void @_ZN5blink15FormDataEncoder25AddKeyValuePairAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_NS_15EncodedFormData12EncodingTypeENS0_4ModeE(%"class.WTF::Vector.206"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, i32) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.206", align 8
  %3 = bitcast %"class.WTF::Vector.206"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #12
  call void @_ZNK5blink15URLSearchParams16EncodeAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::URLSearchParams"* %0, %"class.WTF::Vector.206"* nonnull dereferenceable(16) %2)
  %6 = load i8*, i8** %4, align 8
  %7 = load i32, i32* %5, align 4
  %8 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %6, i32 %7) #12
  %9 = load i8*, i8** %4, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %16, label %11, !prof !3

11:                                               ; preds = %1
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %11
  store i32 0, i32* %5, align 4
  br label %15

15:                                               ; preds = %14, %11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #12
  store i8* null, i8** %4, align 8
  br label %16

16:                                               ; preds = %1, %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #12
  ret %"class.blink::EncodedFormData"* %8
}

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* @_ZN5blink15URLSearchParams14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::URLSearchParams"*, %"class.blink::ScriptState"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::URLSearchParams"* %0 to i64
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringES4_E15IterationSourceEEEPhm(i64 24) #12
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_130URLSearchParamsIterationSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = bitcast i8* %5 to %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*
  ret %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* @_ZThn16_N5blink15URLSearchParams14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::URLSearchParams"*, %"class.blink::ScriptState"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %0, i64 -1, i32 2, i32 0, i32 0, i32 1
  %5 = ptrtoint i32* %4 to i64
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringES4_E15IterationSourceEEEPhm(i64 24) #12
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_130URLSearchParamsIterationSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = bitcast i8* %6 to %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*
  ret %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* %16
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15URLSearchParams18GetWrapperTypeInfoEv(%"class.blink::URLSearchParams"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15URLSearchParams18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.9"* @_ZNK3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.9"*, %"class.WTF::Vector.9"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %24, i64 %25
  ret %"class.WTF::Vector.9"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.9"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_6DOMURLEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMURL"**
  %4 = load %"class.blink::DOMURL"*, %"class.blink::DOMURL"** %3, align 8
  %5 = ptrtoint %"class.blink::DOMURL"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DOMURL", %"class.blink::DOMURL"* %4, i64 -1, i32 3
  %20 = bitcast %"class.blink::WeakMember.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6DOMURLEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMURL"*
  tail call void @_ZNK5blink6DOMURL5TraceEPNS_7VisitorE(%"class.blink::DOMURL"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink6DOMURL5TraceEPNS_7VisitorE(%"class.blink::DOMURL"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 %103
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"struct.std::__1::pair"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.std::__1::pair"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 %103, i32 1
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 0, i32 1
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = load i32, i32* %3, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.9"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.9"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.9"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8), i64, %"struct.std::__1::pair"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %22 [
    i64 0, label %76
    i64 1, label %76
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %10 = tail call zeroext i1 %8(%"struct.std::__1::pair"* dereferenceable(16) %9, %"struct.std::__1::pair"* dereferenceable(16) %0) #12
  br i1 %10, label %11, label %76

11:                                               ; preds = %7
  %12 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"struct.std::__1::pair"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %18 = bitcast %"class.WTF::String"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::String"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 %19, i64* %20, align 8
  br label %76

22:                                               ; preds = %6
  %23 = icmp slt i64 %3, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  tail call void @_ZNSt3__116__insertion_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %76

25:                                               ; preds = %22
  %26 = lshr i64 %3, 1
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 %26
  %28 = icmp sgt i64 %3, %5
  br i1 %28, label %74, label %29

29:                                               ; preds = %25
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %27, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %26, %"struct.std::__1::pair"* %4)
  %30 = sub nsw i64 %3, %26
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %26
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"struct.std::__1::pair"* %27, %"struct.std::__1::pair"* %1, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %30, %"struct.std::__1::pair"* %31)
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_SA_SA_EEvT0_SB_T1_SC_T2_T_(%"struct.std::__1::pair"* %4, %"struct.std::__1::pair"* %31, %"struct.std::__1::pair"* %31, %"struct.std::__1::pair"* %32, %"struct.std::__1::pair"* %0, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  %33 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %33, label %76, label %34

34:                                               ; preds = %29, %70
  %35 = phi i64 [ %71, %70 ], [ 0, %29 ]
  %36 = phi %"struct.std::__1::pair"* [ %72, %70 ], [ %4, %29 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %52, %49, %34
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %69, %66, %53
  %71 = add nuw i64 %35, 1
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %73 = icmp eq i64 %71, %3
  br i1 %73, label %76, label %34

74:                                               ; preds = %25
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %27, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %26, %"struct.std::__1::pair"* %4, i64 %5)
  %75 = sub nsw i64 %3, %26
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"* %27, %"struct.std::__1::pair"* %1, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %75, %"struct.std::__1::pair"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %27, %"struct.std::__1::pair"* %1, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %26, i64 %75, %"struct.std::__1::pair"* %4, i64 %5)
  ret void

76:                                               ; preds = %70, %29, %7, %11, %6, %6, %24
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = icmp eq %"struct.std::__1::pair"* %0, %1
  br i1 %5, label %157, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %8 = icmp eq %"struct.std::__1::pair"* %7, %1
  br i1 %8, label %157, label %9

9:                                                ; preds = %6
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::pair"* %4 to i64*
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %15 = bitcast %"class.WTF::String"* %14 to i64*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %9, %108
  %18 = phi %"struct.std::__1::pair"* [ %7, %9 ], [ %109, %108 ]
  %19 = phi %"struct.std::__1::pair"* [ %0, %9 ], [ %18, %108 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.std::__1::pair"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1, i32 1
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::String"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %27 = icmp eq %"struct.std::__1::pair"* %18, %0
  br i1 %27, label %36, label %28

28:                                               ; preds = %17, %155
  %29 = phi %"struct.std::__1::pair"* [ %31, %155 ], [ %18, %17 ]
  %30 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 -1
  %32 = call zeroext i1 %30(%"struct.std::__1::pair"* nonnull dereferenceable(16) %4, %"struct.std::__1::pair"* dereferenceable(16) %31) #12
  br i1 %32, label %111, label %33

33:                                               ; preds = %155, %28
  %34 = phi %"struct.std::__1::pair"* [ %29, %28 ], [ %0, %155 ]
  %35 = load i64, i64* %13, align 8
  br label %36

36:                                               ; preds = %33, %17
  %37 = phi i64 [ %22, %17 ], [ %35, %33 ]
  %38 = phi %"struct.std::__1::pair"* [ %0, %17 ], [ %34, %33 ]
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %39 = bitcast %"struct.std::__1::pair"* %38 to i64*
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store i64 %37, i64* %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %56

56:                                               ; preds = %55, %52, %36
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 1
  %58 = load i64, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %59 = bitcast %"class.WTF::String"* %57 to i64*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %56, %72, %75
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %91, %88, %76
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #12
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %110 = icmp eq %"struct.std::__1::pair"* %109, %1
  br i1 %110, label %157, label %17

111:                                              ; preds = %28
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"struct.std::__1::pair"* %31 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %112, align 8
  %115 = bitcast %"struct.std::__1::pair"* %29 to i64*
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #12
  br label %132

132:                                              ; preds = %131, %128, %111
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 -1, i32 1
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 0, i32 0, i32 0
  %136 = bitcast %"class.WTF::String"* %133 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %135, align 8
  %138 = bitcast %"class.WTF::String"* %134 to i64*
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  store i64 %137, i64* %138, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %132
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #12
  br label %155

155:                                              ; preds = %132, %151, %154
  %156 = icmp eq %"struct.std::__1::pair"* %31, %0
  br i1 %156, label %33, label %28

157:                                              ; preds = %108, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8), i64, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %65 [
    i64 0, label %284
    i64 1, label %6
    i64 2, label %17
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.std::__1::pair"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.WTF::String"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  br label %284

17:                                               ; preds = %5
  %18 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %20 = tail call zeroext i1 %18(%"struct.std::__1::pair"* dereferenceable(16) %19, %"struct.std::__1::pair"* dereferenceable(16) %0) #12
  br i1 %20, label %21, label %43

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.std::__1::pair"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::pair"* %4 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.WTF::String"* %26 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"struct.std::__1::pair"* %32 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 1, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %40 = bitcast %"class.WTF::String"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  br label %284

43:                                               ; preds = %17
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.std::__1::pair"* %4 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %44, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %51 = bitcast %"class.WTF::String"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 1
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"struct.std::__1::pair"* %19 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::pair"* %54 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %55, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 1, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::String"* %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  br label %284

65:                                               ; preds = %5
  %66 = icmp slt i64 %3, 9
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @_ZNSt3__121__insertion_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_PNS_15iterator_traitsISB_E10value_typeET_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %4, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2)
  br label %284

68:                                               ; preds = %65
  %69 = lshr i64 %3, 1
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 %69
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %70, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %69, %"struct.std::__1::pair"* %4, i64 %69)
  %71 = sub nsw i64 %3, %69
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %69
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"struct.std::__1::pair"* %70, %"struct.std::__1::pair"* %1, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %2, i64 %71, %"struct.std::__1::pair"* %72, i64 %71)
  %73 = icmp eq i64 %69, 0
  br i1 %73, label %74, label %161

74:                                               ; preds = %279, %68
  %75 = phi %"struct.std::__1::pair"* [ %70, %68 ], [ %280, %279 ]
  %76 = phi %"struct.std::__1::pair"* [ %4, %68 ], [ %282, %279 ]
  %77 = icmp eq %"struct.std::__1::pair"* %75, %1
  br i1 %77, label %284, label %78

78:                                               ; preds = %74
  %79 = ptrtoint %"struct.std::__1::pair"* %75 to i64
  %80 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0, i32 0, i32 0
  %81 = ptrtoint %"class.WTF::StringImpl"** %80 to i64
  %82 = sub i64 %81, %79
  %83 = lshr i64 %82, 4
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 3
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %105, label %87

87:                                               ; preds = %78, %87
  %88 = phi %"struct.std::__1::pair"* [ %102, %87 ], [ %76, %78 ]
  %89 = phi %"struct.std::__1::pair"* [ %101, %87 ], [ %75, %78 ]
  %90 = phi i64 [ %103, %87 ], [ %85, %78 ]
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"struct.std::__1::pair"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"struct.std::__1::pair"* %88 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %91, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 0, i32 1
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 0, i32 1
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::String"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.WTF::String"* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 1
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 1
  %103 = add i64 %90, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %87, !llvm.loop !5

105:                                              ; preds = %87, %78
  %106 = phi %"struct.std::__1::pair"* [ %76, %78 ], [ %102, %87 ]
  %107 = phi %"struct.std::__1::pair"* [ %75, %78 ], [ %101, %87 ]
  %108 = icmp ult i64 %82, 48
  br i1 %108, label %284, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"struct.std::__1::pair"* [ %159, %109 ], [ %106, %105 ]
  %111 = phi %"struct.std::__1::pair"* [ %158, %109 ], [ %107, %105 ]
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"struct.std::__1::pair"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair"* %110 to i64*
  store i64 %114, i64* %115, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %112, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 0, i32 1
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 0, i32 1
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::String"* %117 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.WTF::String"* %116 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 1
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 1
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::pair"* %122 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"struct.std::__1::pair"* %123 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 1, i32 1
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 1, i32 1
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 0, i32 0, i32 0
  %131 = bitcast %"class.WTF::String"* %129 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.WTF::String"* %128 to i64*
  store i64 %132, i64* %133, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %130, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 2
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 2
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %134, i64 0, i32 0, i32 0, i32 0
  %137 = bitcast %"struct.std::__1::pair"* %134 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair"* %135 to i64*
  store i64 %138, i64* %139, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %136, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 2, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 2, i32 1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = bitcast %"class.WTF::String"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.WTF::String"* %140 to i64*
  store i64 %144, i64* %145, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %142, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 3
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 3
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"struct.std::__1::pair"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.std::__1::pair"* %147 to i64*
  store i64 %150, i64* %151, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %148, align 8
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 3, i32 1
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 3, i32 1
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %153, i64 0, i32 0, i32 0
  %155 = bitcast %"class.WTF::String"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.WTF::String"* %152 to i64*
  store i64 %156, i64* %157, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %154, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 4
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %110, i64 4
  %160 = icmp eq %"struct.std::__1::pair"* %158, %1
  br i1 %160, label %284, label %109

161:                                              ; preds = %68, %279
  %162 = phi %"struct.std::__1::pair"* [ %281, %279 ], [ %0, %68 ]
  %163 = phi %"struct.std::__1::pair"* [ %282, %279 ], [ %4, %68 ]
  %164 = phi %"struct.std::__1::pair"* [ %280, %279 ], [ %70, %68 ]
  %165 = icmp eq %"struct.std::__1::pair"* %164, %1
  br i1 %165, label %166, label %252

166:                                              ; preds = %161
  %167 = icmp eq %"struct.std::__1::pair"* %162, %70
  br i1 %167, label %284, label %168

168:                                              ; preds = %166
  %169 = ptrtoint %"struct.std::__1::pair"* %162 to i64
  %170 = add nsw i64 %69, -1
  %171 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 %170, i32 0, i32 0, i32 0
  %172 = ptrtoint %"class.WTF::StringImpl"** %171 to i64
  %173 = sub i64 %172, %169
  %174 = lshr i64 %173, 4
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 3
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %196, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"struct.std::__1::pair"* [ %192, %178 ], [ %162, %168 ]
  %180 = phi %"struct.std::__1::pair"* [ %193, %178 ], [ %163, %168 ]
  %181 = phi i64 [ %194, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"struct.std::__1::pair"* %179 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"struct.std::__1::pair"* %180 to i64*
  store i64 %184, i64* %185, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %182, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %180, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 0, i32 1
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %187, i64 0, i32 0, i32 0
  %189 = bitcast %"class.WTF::String"* %187 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.WTF::String"* %186 to i64*
  store i64 %190, i64* %191, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %188, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 1
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %180, i64 1
  %194 = add i64 %181, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %178, !llvm.loop !7

196:                                              ; preds = %178, %168
  %197 = phi %"struct.std::__1::pair"* [ %162, %168 ], [ %192, %178 ]
  %198 = phi %"struct.std::__1::pair"* [ %163, %168 ], [ %193, %178 ]
  %199 = icmp ult i64 %173, 48
  br i1 %199, label %284, label %200

200:                                              ; preds = %196, %200
  %201 = phi %"struct.std::__1::pair"* [ %249, %200 ], [ %197, %196 ]
  %202 = phi %"struct.std::__1::pair"* [ %250, %200 ], [ %198, %196 ]
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"struct.std::__1::pair"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"struct.std::__1::pair"* %202 to i64*
  store i64 %205, i64* %206, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %203, align 8
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 0, i32 1
  %209 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %208, i64 0, i32 0, i32 0
  %210 = bitcast %"class.WTF::String"* %208 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.WTF::String"* %207 to i64*
  store i64 %211, i64* %212, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %209, align 8
  %213 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 1
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 1
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %213, i64 0, i32 0, i32 0, i32 0
  %216 = bitcast %"struct.std::__1::pair"* %213 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"struct.std::__1::pair"* %214 to i64*
  store i64 %217, i64* %218, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %215, align 8
  %219 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 1, i32 1
  %220 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 1, i32 1
  %221 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %220, i64 0, i32 0, i32 0
  %222 = bitcast %"class.WTF::String"* %220 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.WTF::String"* %219 to i64*
  store i64 %223, i64* %224, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %221, align 8
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 2
  %226 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 2
  %227 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %225, i64 0, i32 0, i32 0, i32 0
  %228 = bitcast %"struct.std::__1::pair"* %225 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"struct.std::__1::pair"* %226 to i64*
  store i64 %229, i64* %230, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %227, align 8
  %231 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 2, i32 1
  %232 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 2, i32 1
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %232, i64 0, i32 0, i32 0
  %234 = bitcast %"class.WTF::String"* %232 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.WTF::String"* %231 to i64*
  store i64 %235, i64* %236, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %233, align 8
  %237 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 3
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 3
  %239 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %237, i64 0, i32 0, i32 0, i32 0
  %240 = bitcast %"struct.std::__1::pair"* %237 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"struct.std::__1::pair"* %238 to i64*
  store i64 %241, i64* %242, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %239, align 8
  %243 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 3, i32 1
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 3, i32 1
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %244, i64 0, i32 0, i32 0
  %246 = bitcast %"class.WTF::String"* %244 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.WTF::String"* %243 to i64*
  store i64 %247, i64* %248, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %245, align 8
  %249 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 4
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 4
  %251 = icmp eq %"struct.std::__1::pair"* %249, %70
  br i1 %251, label %284, label %200

252:                                              ; preds = %161
  %253 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %2, align 8
  %254 = tail call zeroext i1 %253(%"struct.std::__1::pair"* dereferenceable(16) %164, %"struct.std::__1::pair"* dereferenceable(16) %162) #12
  br i1 %254, label %255, label %267

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %164, i64 0, i32 0, i32 0, i32 0
  %257 = bitcast %"struct.std::__1::pair"* %164 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"struct.std::__1::pair"* %163 to i64*
  store i64 %258, i64* %259, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %256, align 8
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 0, i32 1
  %261 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %164, i64 0, i32 1
  %262 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %261, i64 0, i32 0, i32 0
  %263 = bitcast %"class.WTF::String"* %261 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.WTF::String"* %260 to i64*
  store i64 %264, i64* %265, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %262, align 8
  %266 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %164, i64 1
  br label %279

267:                                              ; preds = %252
  %268 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 0, i32 0, i32 0, i32 0
  %269 = bitcast %"struct.std::__1::pair"* %162 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"struct.std::__1::pair"* %163 to i64*
  store i64 %270, i64* %271, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %268, align 8
  %272 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 0, i32 1
  %273 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 0, i32 1
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %273, i64 0, i32 0, i32 0
  %275 = bitcast %"class.WTF::String"* %273 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.WTF::String"* %272 to i64*
  store i64 %276, i64* %277, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %274, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 1
  br label %279

279:                                              ; preds = %267, %255
  %280 = phi %"struct.std::__1::pair"* [ %266, %255 ], [ %164, %267 ]
  %281 = phi %"struct.std::__1::pair"* [ %162, %255 ], [ %278, %267 ]
  %282 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %163, i64 1
  %283 = icmp eq %"struct.std::__1::pair"* %281, %70
  br i1 %283, label %74, label %161

284:                                              ; preds = %196, %200, %105, %109, %166, %74, %43, %21, %5, %67, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_SA_SA_EEvT0_SB_T1_SC_T2_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"struct.std::__1::pair"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %164, %6
  %9 = phi %"struct.std::__1::pair"* [ %2, %6 ], [ %165, %164 ]
  %10 = phi %"struct.std::__1::pair"* [ %4, %6 ], [ %167, %164 ]
  %11 = icmp eq %"struct.std::__1::pair"* %9, %3
  br i1 %11, label %219, label %169

12:                                               ; preds = %6, %164
  %13 = phi %"struct.std::__1::pair"* [ %166, %164 ], [ %0, %6 ]
  %14 = phi %"struct.std::__1::pair"* [ %167, %164 ], [ %4, %6 ]
  %15 = phi %"struct.std::__1::pair"* [ %165, %164 ], [ %2, %6 ]
  %16 = icmp eq %"struct.std::__1::pair"* %15, %3
  br i1 %16, label %17, label %69

17:                                               ; preds = %12
  %18 = icmp eq %"struct.std::__1::pair"* %13, %1
  br i1 %18, label %219, label %19

19:                                               ; preds = %17, %65
  %20 = phi %"struct.std::__1::pair"* [ %66, %65 ], [ %13, %17 ]
  %21 = phi %"struct.std::__1::pair"* [ %67, %65 ], [ %14, %17 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.std::__1::pair"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %25 = bitcast %"struct.std::__1::pair"* %21 to i64*
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %42

42:                                               ; preds = %41, %38, %19
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::String"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %48 = bitcast %"class.WTF::String"* %44 to i64*
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  store i64 %47, i64* %48, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %68 = icmp eq %"struct.std::__1::pair"* %66, %1
  br i1 %68, label %219, label %19

69:                                               ; preds = %12
  %70 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %5, align 8
  %71 = tail call zeroext i1 %70(%"struct.std::__1::pair"* dereferenceable(16) %15, %"struct.std::__1::pair"* dereferenceable(16) %13) #12
  br i1 %71, label %72, label %118

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"struct.std::__1::pair"* %15 to i64*
  %75 = load i64, i64* %74, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %73, align 8
  %76 = bitcast %"struct.std::__1::pair"* %14 to i64*
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  store i64 %75, i64* %76, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %93

93:                                               ; preds = %92, %89, %72
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 1
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 0, i32 0, i32 0
  %97 = bitcast %"class.WTF::String"* %94 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %96, align 8
  %99 = bitcast %"class.WTF::String"* %95 to i64*
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store i64 %98, i64* %99, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %116

116:                                              ; preds = %93, %112, %115
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  br label %164

118:                                              ; preds = %69
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"struct.std::__1::pair"* %13 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %122 = bitcast %"struct.std::__1::pair"* %14 to i64*
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #12
  br label %139

139:                                              ; preds = %138, %135, %118
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 0, i32 0, i32 0
  %143 = bitcast %"class.WTF::String"* %140 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %142, align 8
  %145 = bitcast %"class.WTF::String"* %141 to i64*
  %146 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  store i64 %144, i64* %145, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %139
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #12
  br label %162

162:                                              ; preds = %139, %158, %161
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 1
  br label %164

164:                                              ; preds = %116, %162
  %165 = phi %"struct.std::__1::pair"* [ %117, %116 ], [ %15, %162 ]
  %166 = phi %"struct.std::__1::pair"* [ %13, %116 ], [ %163, %162 ]
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 1
  %168 = icmp eq %"struct.std::__1::pair"* %166, %1
  br i1 %168, label %8, label %12

169:                                              ; preds = %8, %215
  %170 = phi %"struct.std::__1::pair"* [ %217, %215 ], [ %10, %8 ]
  %171 = phi %"struct.std::__1::pair"* [ %216, %215 ], [ %9, %8 ]
  %172 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %172, align 8
  %175 = bitcast %"struct.std::__1::pair"* %170 to i64*
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  store i64 %174, i64* %175, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #12
  br label %192

192:                                              ; preds = %191, %188, %169
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 0, i32 1
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 0, i32 1
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %193, i64 0, i32 0, i32 0
  %196 = bitcast %"class.WTF::String"* %193 to i64*
  %197 = load i64, i64* %196, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %195, align 8
  %198 = bitcast %"class.WTF::String"* %194 to i64*
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %194, i64 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  store i64 %197, i64* %198, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %192
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #12
  br label %215

215:                                              ; preds = %192, %211, %214
  %216 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 1
  %217 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 1
  %218 = icmp eq %"struct.std::__1::pair"* %216, %3
  br i1 %218, label %219, label %169

219:                                              ; preds = %65, %215, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8), i64, i64, %"struct.std::__1::pair"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %235, label %10

10:                                               ; preds = %8, %228
  %11 = phi %"struct.std::__1::pair"* [ %233, %228 ], [ %0, %8 ]
  %12 = phi %"struct.std::__1::pair"* [ %232, %228 ], [ %1, %8 ]
  %13 = phi i64 [ %231, %228 ], [ %5, %8 ]
  %14 = phi i64 [ %230, %228 ], [ %4, %8 ]
  %15 = phi %"struct.std::__1::pair"* [ %229, %228 ], [ %2, %8 ]
  %16 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %17 = icmp sgt i64 %14, %7
  %18 = icmp sgt i64 %13, %7
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  %21 = icmp eq i64 %14, 0
  br i1 %21, label %235, label %23

22:                                               ; preds = %10
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeE(%"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"* %15, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %3, i64 %14, i64 %13, %"struct.std::__1::pair"* %6)
  br label %235

23:                                               ; preds = %20, %28
  %24 = phi %"struct.std::__1::pair"* [ %29, %28 ], [ %11, %20 ]
  %25 = phi i64 [ %30, %28 ], [ %14, %20 ]
  %26 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %27 = tail call zeroext i1 %26(%"struct.std::__1::pair"* dereferenceable(16) %12, %"struct.std::__1::pair"* dereferenceable(16) %24) #12
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %30 = add nsw i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %235, label %23

32:                                               ; preds = %23
  %33 = icmp slt i64 %25, %13
  br i1 %33, label %34, label %62

34:                                               ; preds = %32
  %35 = sdiv i64 %13, 2
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %35
  %37 = ptrtoint %"struct.std::__1::pair"* %24 to i64
  %38 = sub i64 %16, %37
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %34
  %41 = ashr exact i64 %38, 4
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ %53, %42 ], [ %41, %40 ]
  %44 = phi %"struct.std::__1::pair"* [ %52, %42 ], [ %24, %40 ]
  %45 = lshr i64 %43, 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 %45
  %47 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %48 = tail call zeroext i1 %47(%"struct.std::__1::pair"* dereferenceable(16) %36, %"struct.std::__1::pair"* dereferenceable(16) %46) #12
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add i64 %43, %50
  %52 = select i1 %48, %"struct.std::__1::pair"* %44, %"struct.std::__1::pair"* %49
  %53 = select i1 %48, i64 %45, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %42

55:                                               ; preds = %42
  %56 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  br label %57

57:                                               ; preds = %55, %34
  %58 = phi i64 [ %56, %55 ], [ %37, %34 ]
  %59 = phi %"struct.std::__1::pair"* [ %52, %55 ], [ %24, %34 ]
  %60 = sub i64 %58, %37
  %61 = ashr exact i64 %60, 4
  br label %104

62:                                               ; preds = %32
  %63 = icmp eq i64 %25, 1
  br i1 %63, label %64, label %75

64:                                               ; preds = %62
  %65 = bitcast %"struct.std::__1::pair"* %24 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"struct.std::__1::pair"* %12 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 %66, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %71 = bitcast %"class.WTF::String"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.WTF::String"* %70 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %71, align 8
  store i64 %72, i64* %73, align 8
  br label %235

75:                                               ; preds = %62
  %76 = sdiv i64 %25, 2
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %76
  %78 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  %79 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %80 = sub i64 %78, %79
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %99, label %82

82:                                               ; preds = %75
  %83 = ashr exact i64 %80, 4
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ %95, %84 ], [ %83, %82 ]
  %86 = phi %"struct.std::__1::pair"* [ %94, %84 ], [ %12, %82 ]
  %87 = lshr i64 %85, 1
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 %87
  %89 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %90 = tail call zeroext i1 %89(%"struct.std::__1::pair"* dereferenceable(16) %88, %"struct.std::__1::pair"* dereferenceable(16) %77) #12
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 1
  %92 = xor i64 %87, -1
  %93 = add i64 %85, %92
  %94 = select i1 %90, %"struct.std::__1::pair"* %91, %"struct.std::__1::pair"* %86
  %95 = select i1 %90, i64 %93, i64 %87
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %84

97:                                               ; preds = %84
  %98 = ptrtoint %"struct.std::__1::pair"* %94 to i64
  br label %99

99:                                               ; preds = %97, %75
  %100 = phi i64 [ %98, %97 ], [ %79, %75 ]
  %101 = phi %"struct.std::__1::pair"* [ %94, %97 ], [ %12, %75 ]
  %102 = sub i64 %100, %79
  %103 = ashr exact i64 %102, 4
  br label %104

104:                                              ; preds = %99, %57
  %105 = phi %"struct.std::__1::pair"* [ %59, %57 ], [ %77, %99 ]
  %106 = phi %"struct.std::__1::pair"* [ %36, %57 ], [ %101, %99 ]
  %107 = phi i64 [ %61, %57 ], [ %76, %99 ]
  %108 = phi i64 [ %35, %57 ], [ %103, %99 ]
  %109 = sub nsw i64 %25, %107
  %110 = sub nsw i64 %13, %108
  %111 = icmp eq %"struct.std::__1::pair"* %105, %12
  br i1 %111, label %221, label %112

112:                                              ; preds = %104
  %113 = icmp eq %"struct.std::__1::pair"* %12, %106
  br i1 %113, label %221, label %114

114:                                              ; preds = %112
  %115 = bitcast %"struct.std::__1::pair"* %105 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"struct.std::__1::pair"* %12 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  store i64 %116, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %121 = bitcast %"class.WTF::String"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.WTF::String"* %120 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 1
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 1
  %127 = icmp eq %"struct.std::__1::pair"* %126, %106
  %128 = icmp eq %"struct.std::__1::pair"* %125, %12
  br i1 %127, label %193, label %129

129:                                              ; preds = %114
  %130 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 -2
  %131 = ptrtoint %"struct.std::__1::pair"* %130 to i64
  %132 = sub i64 %131, %16
  %133 = and i64 %132, 16
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %150

135:                                              ; preds = %129
  %136 = select i1 %128, %"struct.std::__1::pair"* %126, %"struct.std::__1::pair"* %12
  %137 = bitcast %"struct.std::__1::pair"* %125 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair"* %126 to i64*
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %137, align 8
  store i64 %138, i64* %139, align 8
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 1, i32 1
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 1, i32 1
  %143 = bitcast %"class.WTF::String"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.WTF::String"* %142 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %143, align 8
  store i64 %144, i64* %145, align 8
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 2
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 2
  %149 = icmp eq %"struct.std::__1::pair"* %147, %136
  br label %150

150:                                              ; preds = %135, %129
  %151 = phi %"struct.std::__1::pair"* [ %136, %135 ], [ undef, %129 ]
  %152 = phi %"struct.std::__1::pair"* [ %147, %135 ], [ undef, %129 ]
  %153 = phi i1 [ %149, %135 ], [ undef, %129 ]
  %154 = phi i1 [ %149, %135 ], [ %128, %129 ]
  %155 = phi %"struct.std::__1::pair"* [ %148, %135 ], [ %126, %129 ]
  %156 = phi %"struct.std::__1::pair"* [ %147, %135 ], [ %125, %129 ]
  %157 = phi %"struct.std::__1::pair"* [ %136, %135 ], [ %12, %129 ]
  %158 = icmp ult i64 %132, 16
  br i1 %158, label %193, label %159

159:                                              ; preds = %150, %159
  %160 = phi i1 [ %192, %159 ], [ %154, %150 ]
  %161 = phi %"struct.std::__1::pair"* [ %190, %159 ], [ %155, %150 ]
  %162 = phi %"struct.std::__1::pair"* [ %189, %159 ], [ %156, %150 ]
  %163 = phi %"struct.std::__1::pair"* [ %178, %159 ], [ %157, %150 ]
  %164 = select i1 %160, %"struct.std::__1::pair"* %161, %"struct.std::__1::pair"* %163
  %165 = bitcast %"struct.std::__1::pair"* %162 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.std::__1::pair"* %161 to i64*
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %165, align 8
  store i64 %166, i64* %167, align 8
  %169 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 0, i32 1
  %170 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 0, i32 1
  %171 = bitcast %"class.WTF::String"* %169 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.WTF::String"* %170 to i64*
  %174 = load i64, i64* %173, align 8
  store i64 %174, i64* %171, align 8
  store i64 %172, i64* %173, align 8
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 1
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 1
  %177 = icmp eq %"struct.std::__1::pair"* %175, %164
  %178 = select i1 %177, %"struct.std::__1::pair"* %176, %"struct.std::__1::pair"* %164
  %179 = bitcast %"struct.std::__1::pair"* %175 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"struct.std::__1::pair"* %176 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %179, align 8
  store i64 %180, i64* %181, align 8
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 1, i32 1
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 1, i32 1
  %185 = bitcast %"class.WTF::String"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.WTF::String"* %184 to i64*
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %185, align 8
  store i64 %186, i64* %187, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 2
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 2
  %191 = icmp eq %"struct.std::__1::pair"* %190, %106
  %192 = icmp eq %"struct.std::__1::pair"* %189, %178
  br i1 %191, label %193, label %159

193:                                              ; preds = %150, %159, %114
  %194 = phi %"struct.std::__1::pair"* [ %12, %114 ], [ %151, %150 ], [ %178, %159 ]
  %195 = phi %"struct.std::__1::pair"* [ %125, %114 ], [ %152, %150 ], [ %189, %159 ]
  %196 = phi i1 [ %128, %114 ], [ %153, %150 ], [ %192, %159 ]
  br i1 %196, label %221, label %197

197:                                              ; preds = %193, %219
  %198 = phi %"struct.std::__1::pair"* [ %220, %219 ], [ %194, %193 ]
  %199 = phi %"struct.std::__1::pair"* [ %214, %219 ], [ %195, %193 ]
  %200 = phi %"struct.std::__1::pair"* [ %215, %219 ], [ %194, %193 ]
  br label %201

201:                                              ; preds = %197, %218
  %202 = phi %"struct.std::__1::pair"* [ %214, %218 ], [ %199, %197 ]
  %203 = phi %"struct.std::__1::pair"* [ %198, %218 ], [ %200, %197 ]
  %204 = bitcast %"struct.std::__1::pair"* %202 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"struct.std::__1::pair"* %203 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %204, align 8
  store i64 %205, i64* %206, align 8
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 0, i32 1
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %203, i64 0, i32 1
  %210 = bitcast %"class.WTF::String"* %208 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.WTF::String"* %209 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %210, align 8
  store i64 %211, i64* %212, align 8
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 1
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %203, i64 1
  %216 = icmp eq %"struct.std::__1::pair"* %215, %106
  %217 = icmp eq %"struct.std::__1::pair"* %214, %198
  br i1 %216, label %218, label %219

218:                                              ; preds = %201
  br i1 %217, label %221, label %201

219:                                              ; preds = %201
  %220 = select i1 %217, %"struct.std::__1::pair"* %215, %"struct.std::__1::pair"* %198
  br label %197

221:                                              ; preds = %218, %104, %112, %193
  %222 = phi %"struct.std::__1::pair"* [ %106, %104 ], [ %105, %112 ], [ %195, %193 ], [ %195, %218 ]
  %223 = add nsw i64 %108, %107
  %224 = add nsw i64 %110, %109
  %225 = icmp slt i64 %223, %224
  br i1 %225, label %226, label %227

226:                                              ; preds = %221
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %105, %"struct.std::__1::pair"* %222, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %3, i64 %107, i64 %108, %"struct.std::__1::pair"* %6, i64 %7)
  br label %228

227:                                              ; preds = %221
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"struct.std::__1::pair"* %222, %"struct.std::__1::pair"* %106, %"struct.std::__1::pair"* %15, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8) %3, i64 %109, i64 %110, %"struct.std::__1::pair"* %6, i64 %7)
  br label %228

228:                                              ; preds = %226, %227
  %229 = phi %"struct.std::__1::pair"* [ %15, %226 ], [ %222, %227 ]
  %230 = phi i64 [ %109, %226 ], [ %107, %227 ]
  %231 = phi i64 [ %110, %226 ], [ %108, %227 ]
  %232 = phi %"struct.std::__1::pair"* [ %106, %226 ], [ %105, %227 ]
  %233 = phi %"struct.std::__1::pair"* [ %222, %226 ], [ %24, %227 ]
  %234 = icmp eq i64 %231, 0
  br i1 %234, label %235, label %10

235:                                              ; preds = %228, %20, %28, %8, %64, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_PNS_15iterator_traitsISB_E10value_typeET_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.std::__1::pair"* %0, %1
  br i1 %5, label %144, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.std::__1::pair"* %2 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.WTF::String"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %18 = icmp eq %"struct.std::__1::pair"* %17, %1
  br i1 %18, label %144, label %19

19:                                               ; preds = %6, %141
  %20 = phi %"struct.std::__1::pair"* [ %142, %141 ], [ %17, %6 ]
  %21 = phi %"struct.std::__1::pair"* [ %23, %141 ], [ %2, %6 ]
  %22 = phi %"struct.std::__1::pair"* [ %20, %141 ], [ %0, %6 ]
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %24 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %25 = tail call zeroext i1 %24(%"struct.std::__1::pair"* dereferenceable(16) %20, %"struct.std::__1::pair"* dereferenceable(16) %21) #12
  br i1 %25, label %26, label %130

26:                                               ; preds = %19
  %27 = bitcast %"struct.std::__1::pair"* %21 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = bitcast %"struct.std::__1::pair"* %23 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %29, align 8
  %30 = bitcast %"struct.std::__1::pair"* %21 to <2 x %"class.WTF::StringImpl"*>*
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %30, align 8
  %31 = icmp eq %"struct.std::__1::pair"* %21, %2
  br i1 %31, label %85, label %32

32:                                               ; preds = %26, %83
  %33 = phi %"struct.std::__1::pair"* [ %35, %83 ], [ %21, %26 ]
  %34 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 -1
  %36 = tail call zeroext i1 %34(%"struct.std::__1::pair"* dereferenceable(16) %20, %"struct.std::__1::pair"* dereferenceable(16) %35) #12
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"struct.std::__1::pair"* %33 to i64*
  br label %85

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.std::__1::pair"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %43 = bitcast %"struct.std::__1::pair"* %33 to i64*
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %42, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #12
  br label %60

60:                                               ; preds = %59, %56, %39
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 -1, i32 1
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 0, i32 0, i32 0
  %64 = bitcast %"class.WTF::String"* %61 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  %66 = bitcast %"class.WTF::String"* %62 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %83

83:                                               ; preds = %60, %79, %82
  %84 = icmp eq %"struct.std::__1::pair"* %35, %2
  br i1 %84, label %85, label %32

85:                                               ; preds = %83, %37, %26
  %86 = phi i64* [ %10, %26 ], [ %38, %37 ], [ %10, %83 ]
  %87 = phi %"struct.std::__1::pair"* [ %2, %26 ], [ %33, %37 ], [ %2, %83 ]
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"struct.std::__1::pair"* %20 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  store i64 %90, i64* %86, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #12
  br label %107

107:                                              ; preds = %106, %103, %85
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %108, i64 0, i32 0, i32 0
  %111 = bitcast %"class.WTF::String"* %108 to i64*
  %112 = load i64, i64* %111, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %110, align 8
  %113 = bitcast %"class.WTF::String"* %109 to i64*
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  store i64 %112, i64* %113, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %141, label %117

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %126
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #12
  br label %141

130:                                              ; preds = %19
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"struct.std::__1::pair"* %20 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair"* %23 to i64*
  store i64 %133, i64* %134, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %131, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1, i32 1
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 1, i32 1
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %138 = bitcast %"class.WTF::String"* %136 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.WTF::String"* %135 to i64*
  store i64 %139, i64* %140, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %137, align 8
  br label %141

141:                                              ; preds = %129, %126, %107, %130
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 1
  %143 = icmp eq %"struct.std::__1::pair"* %142, %1
  br i1 %143, label %144, label %19

144:                                              ; preds = %141, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_4pairIN3WTF6StringES3_EES6_EPS4_EEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeE(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** dereferenceable(8), i64, i64, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %9 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %10 = alloca %"class.std::__1::reverse_iterator", align 8
  %11 = alloca %"class.std::__1::reverse_iterator", align 8
  %12 = icmp sgt i64 %4, %5
  br i1 %12, label %51, label %13

13:                                               ; preds = %7
  %14 = icmp eq %"struct.std::__1::pair"* %0, %1
  br i1 %14, label %410, label %15

15:                                               ; preds = %13
  %16 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0, i32 0, i32 0
  %17 = ptrtoint %"class.WTF::StringImpl"** %16 to i64
  %18 = sub i64 %17, %8
  %19 = lshr i64 %18, 4
  %20 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0, i32 0, i32 0
  %21 = ptrtoint %"class.WTF::StringImpl"** %20 to i64
  %22 = sub i64 %21, %8
  %23 = lshr i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %15, %27
  %28 = phi %"struct.std::__1::pair"* [ %41, %27 ], [ %0, %15 ]
  %29 = phi %"struct.std::__1::pair"* [ %42, %27 ], [ %6, %15 ]
  %30 = phi i64 [ %43, %27 ], [ %25, %15 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.std::__1::pair"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.std::__1::pair"* %29 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"class.WTF::String"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::String"* %35 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 1
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 1
  %43 = add i64 %30, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %27, !llvm.loop !8

45:                                               ; preds = %27, %15
  %46 = phi %"struct.std::__1::pair"* [ undef, %15 ], [ %29, %27 ]
  %47 = phi %"struct.std::__1::pair"* [ undef, %15 ], [ %42, %27 ]
  %48 = phi %"struct.std::__1::pair"* [ %0, %15 ], [ %41, %27 ]
  %49 = phi %"struct.std::__1::pair"* [ %6, %15 ], [ %42, %27 ]
  %50 = icmp ult i64 %22, 48
  br i1 %50, label %88, label %250

51:                                               ; preds = %7
  %52 = icmp eq %"struct.std::__1::pair"* %1, %2
  br i1 %52, label %305, label %53

53:                                               ; preds = %51
  %54 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 -1, i32 0, i32 0, i32 0
  %55 = ptrtoint %"class.WTF::StringImpl"** %54 to i64
  %56 = sub i64 %55, %9
  %57 = lshr i64 %56, 4
  %58 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 -1, i32 0, i32 0, i32 0
  %59 = ptrtoint %"class.WTF::StringImpl"** %58 to i64
  %60 = sub i64 %59, %9
  %61 = lshr i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %83, label %65

65:                                               ; preds = %53, %65
  %66 = phi %"struct.std::__1::pair"* [ %79, %65 ], [ %1, %53 ]
  %67 = phi %"struct.std::__1::pair"* [ %80, %65 ], [ %6, %53 ]
  %68 = phi i64 [ %81, %65 ], [ %63, %53 ]
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.std::__1::pair"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"struct.std::__1::pair"* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::String"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::String"* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 1
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 1
  %81 = add i64 %68, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %65, !llvm.loop !9

83:                                               ; preds = %65, %53
  %84 = phi %"struct.std::__1::pair"* [ undef, %53 ], [ %80, %65 ]
  %85 = phi %"struct.std::__1::pair"* [ %1, %53 ], [ %79, %65 ]
  %86 = phi %"struct.std::__1::pair"* [ %6, %53 ], [ %80, %65 ]
  %87 = icmp ult i64 %60, 48
  br i1 %87, label %302, label %313

88:                                               ; preds = %250, %45
  %89 = phi %"struct.std::__1::pair"* [ %46, %45 ], [ %288, %250 ]
  %90 = phi %"struct.std::__1::pair"* [ %47, %45 ], [ %300, %250 ]
  %91 = add nuw nsw i64 %19, 1
  %92 = icmp eq %"struct.std::__1::pair"* %90, %6
  br i1 %92, label %365, label %93

93:                                               ; preds = %88, %245
  %94 = phi %"struct.std::__1::pair"* [ %247, %245 ], [ %6, %88 ]
  %95 = phi %"struct.std::__1::pair"* [ %248, %245 ], [ %0, %88 ]
  %96 = phi %"struct.std::__1::pair"* [ %246, %245 ], [ %1, %88 ]
  %97 = icmp eq %"struct.std::__1::pair"* %96, %2
  br i1 %97, label %98, label %150

98:                                               ; preds = %93
  %99 = icmp eq %"struct.std::__1::pair"* %94, %90
  br i1 %99, label %365, label %100

100:                                              ; preds = %98, %146
  %101 = phi %"struct.std::__1::pair"* [ %148, %146 ], [ %95, %98 ]
  %102 = phi %"struct.std::__1::pair"* [ %147, %146 ], [ %94, %98 ]
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"struct.std::__1::pair"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %103, align 8
  %106 = bitcast %"struct.std::__1::pair"* %101 to i64*
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %105, i64* %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #12
  br label %123

123:                                              ; preds = %122, %119, %100
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 1
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 0, i32 1
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %124, i64 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::String"* %124 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %129 = bitcast %"class.WTF::String"* %125 to i64*
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  store i64 %128, i64* %129, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #12
  br label %146

146:                                              ; preds = %145, %142, %123
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 1
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 1
  %149 = icmp eq %"struct.std::__1::pair"* %102, %89
  br i1 %149, label %365, label %100

150:                                              ; preds = %93
  %151 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3, align 8
  %152 = tail call zeroext i1 %151(%"struct.std::__1::pair"* dereferenceable(16) %96, %"struct.std::__1::pair"* dereferenceable(16) %94) #12
  br i1 %152, label %153, label %199

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"struct.std::__1::pair"* %96 to i64*
  %156 = load i64, i64* %155, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %154, align 8
  %157 = bitcast %"struct.std::__1::pair"* %95 to i64*
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  store i64 %156, i64* %157, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #12
  br label %174

174:                                              ; preds = %173, %170, %153
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 0, i32 1
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %178 = bitcast %"class.WTF::String"* %175 to i64*
  %179 = load i64, i64* %178, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %177, align 8
  %180 = bitcast %"class.WTF::String"* %176 to i64*
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  store i64 %179, i64* %180, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #12
  br label %197

197:                                              ; preds = %174, %193, %196
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 1
  br label %245

199:                                              ; preds = %150
  %200 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 0, i32 0, i32 0, i32 0
  %201 = bitcast %"struct.std::__1::pair"* %94 to i64*
  %202 = load i64, i64* %201, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %200, align 8
  %203 = bitcast %"struct.std::__1::pair"* %95 to i64*
  %204 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  store i64 %202, i64* %203, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #12
  br label %220

220:                                              ; preds = %219, %216, %199
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 0, i32 1
  %223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %221, i64 0, i32 0, i32 0
  %224 = bitcast %"class.WTF::String"* %221 to i64*
  %225 = load i64, i64* %224, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %223, align 8
  %226 = bitcast %"class.WTF::String"* %222 to i64*
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %222, i64 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 %225, i64* %226, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %220
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #12
  br label %243

243:                                              ; preds = %220, %239, %242
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %94, i64 1
  br label %245

245:                                              ; preds = %243, %197
  %246 = phi %"struct.std::__1::pair"* [ %198, %197 ], [ %96, %243 ]
  %247 = phi %"struct.std::__1::pair"* [ %94, %197 ], [ %244, %243 ]
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 1
  %249 = icmp eq %"struct.std::__1::pair"* %247, %90
  br i1 %249, label %365, label %93

250:                                              ; preds = %45, %250
  %251 = phi %"struct.std::__1::pair"* [ %299, %250 ], [ %48, %45 ]
  %252 = phi %"struct.std::__1::pair"* [ %300, %250 ], [ %49, %45 ]
  %253 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 0, i32 0, i32 0, i32 0
  %254 = bitcast %"struct.std::__1::pair"* %251 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"struct.std::__1::pair"* %252 to i64*
  store i64 %255, i64* %256, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %253, align 8
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 0, i32 1
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 0, i32 1
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %258, i64 0, i32 0, i32 0
  %260 = bitcast %"class.WTF::String"* %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.WTF::String"* %257 to i64*
  store i64 %261, i64* %262, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %259, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1
  %264 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 1
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %263, i64 0, i32 0, i32 0, i32 0
  %266 = bitcast %"struct.std::__1::pair"* %263 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"struct.std::__1::pair"* %264 to i64*
  store i64 %267, i64* %268, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %265, align 8
  %269 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 1, i32 1
  %270 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1, i32 1
  %271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %270, i64 0, i32 0, i32 0
  %272 = bitcast %"class.WTF::String"* %270 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.WTF::String"* %269 to i64*
  store i64 %273, i64* %274, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %271, align 8
  %275 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 2
  %276 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 2
  %277 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"struct.std::__1::pair"* %275 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %"struct.std::__1::pair"* %276 to i64*
  store i64 %279, i64* %280, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %277, align 8
  %281 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 2, i32 1
  %282 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 2, i32 1
  %283 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %282, i64 0, i32 0, i32 0
  %284 = bitcast %"class.WTF::String"* %282 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.WTF::String"* %281 to i64*
  store i64 %285, i64* %286, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %283, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 3
  %288 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 3
  %289 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 0, i32 0, i32 0, i32 0
  %290 = bitcast %"struct.std::__1::pair"* %287 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %"struct.std::__1::pair"* %288 to i64*
  store i64 %291, i64* %292, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %289, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 3, i32 1
  %294 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 3, i32 1
  %295 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %294, i64 0, i32 0, i32 0
  %296 = bitcast %"class.WTF::String"* %294 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.WTF::String"* %293 to i64*
  store i64 %297, i64* %298, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %295, align 8
  %299 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 4
  %300 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %252, i64 4
  %301 = icmp eq %"struct.std::__1::pair"* %299, %1
  br i1 %301, label %88, label %250

302:                                              ; preds = %313, %83
  %303 = phi %"struct.std::__1::pair"* [ %84, %83 ], [ %363, %313 ]
  %304 = add nuw nsw i64 %57, 1
  br label %305

305:                                              ; preds = %302, %51
  %306 = phi i64 [ 0, %51 ], [ %304, %302 ]
  %307 = phi %"struct.std::__1::pair"* [ %6, %51 ], [ %303, %302 ]
  %308 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %10, i64 0, i32 0
  store %"struct.std::__1::pair"* %0, %"struct.std::__1::pair"** %308, align 8
  %309 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %10, i64 0, i32 1
  store %"struct.std::__1::pair"* %0, %"struct.std::__1::pair"** %309, align 8
  %310 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %11, i64 0, i32 0
  store %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"** %310, align 8
  %311 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %11, i64 0, i32 1
  store %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"** %311, align 8
  %312 = ptrtoint i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_4pairIN3WTF6StringES4_EES7_EEENS_16reverse_iteratorIPS5_EESE_SE_EEvT0_SF_T1_SG_T2_T_(%"struct.std::__1::pair"* %307, %"struct.std::__1::pair"* %307, %"struct.std::__1::pair"* %6, %"struct.std::__1::pair"* %6, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %1, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %10, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %11, i64 %312)
  br label %365

313:                                              ; preds = %83, %313
  %314 = phi %"struct.std::__1::pair"* [ %362, %313 ], [ %85, %83 ]
  %315 = phi %"struct.std::__1::pair"* [ %363, %313 ], [ %86, %83 ]
  %316 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 0, i32 0, i32 0, i32 0
  %317 = bitcast %"struct.std::__1::pair"* %314 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"struct.std::__1::pair"* %315 to i64*
  store i64 %318, i64* %319, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %316, align 8
  %320 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 0, i32 1
  %321 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 0, i32 1
  %322 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %321, i64 0, i32 0, i32 0
  %323 = bitcast %"class.WTF::String"* %321 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.WTF::String"* %320 to i64*
  store i64 %324, i64* %325, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %322, align 8
  %326 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 1
  %327 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 1
  %328 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %326, i64 0, i32 0, i32 0, i32 0
  %329 = bitcast %"struct.std::__1::pair"* %326 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = bitcast %"struct.std::__1::pair"* %327 to i64*
  store i64 %330, i64* %331, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %328, align 8
  %332 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 1, i32 1
  %333 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 1, i32 1
  %334 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %333, i64 0, i32 0, i32 0
  %335 = bitcast %"class.WTF::String"* %333 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.WTF::String"* %332 to i64*
  store i64 %336, i64* %337, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %334, align 8
  %338 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 2
  %339 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 2
  %340 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %338, i64 0, i32 0, i32 0, i32 0
  %341 = bitcast %"struct.std::__1::pair"* %338 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"struct.std::__1::pair"* %339 to i64*
  store i64 %342, i64* %343, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %340, align 8
  %344 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 2, i32 1
  %345 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 2, i32 1
  %346 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %345, i64 0, i32 0, i32 0
  %347 = bitcast %"class.WTF::String"* %345 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.WTF::String"* %344 to i64*
  store i64 %348, i64* %349, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %346, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 3
  %351 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 3
  %352 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %350, i64 0, i32 0, i32 0, i32 0
  %353 = bitcast %"struct.std::__1::pair"* %350 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"struct.std::__1::pair"* %351 to i64*
  store i64 %354, i64* %355, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %352, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 3, i32 1
  %357 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 3, i32 1
  %358 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %357, i64 0, i32 0, i32 0
  %359 = bitcast %"class.WTF::String"* %357 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = bitcast %"class.WTF::String"* %356 to i64*
  store i64 %360, i64* %361, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %358, align 8
  %362 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %314, i64 4
  %363 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %315, i64 4
  %364 = icmp eq %"struct.std::__1::pair"* %362, %2
  br i1 %364, label %302, label %313

365:                                              ; preds = %245, %146, %88, %98, %305
  %366 = phi i64 [ %306, %305 ], [ %91, %98 ], [ %91, %88 ], [ %91, %146 ], [ %91, %245 ]
  %367 = icmp eq %"struct.std::__1::pair"* %6, null
  %368 = icmp eq i64 %366, 0
  %369 = or i1 %367, %368
  br i1 %369, label %410, label %370

370:                                              ; preds = %365, %406
  %371 = phi i64 [ %407, %406 ], [ 0, %365 ]
  %372 = phi %"struct.std::__1::pair"* [ %408, %406 ], [ %6, %365 ]
  %373 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %372, i64 0, i32 1, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #12
  br label %389

389:                                              ; preds = %388, %385, %370
  %390 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %372, i64 0, i32 0, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  br i1 %392, label %406, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  br i1 %397, label %400, label %402

400:                                              ; preds = %393
  %401 = add i32 %399, -1
  store i32 %401, i32* %398, align 4
  br label %402

402:                                              ; preds = %400, %393
  %403 = phi i32 [ %401, %400 ], [ %399, %393 ]
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %406

405:                                              ; preds = %402
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %391) #12
  br label %406

406:                                              ; preds = %405, %402, %389
  %407 = add nuw nsw i64 %371, 1
  %408 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %372, i64 1
  %409 = icmp eq i64 %407, %366
  br i1 %409, label %410, label %370

410:                                              ; preds = %406, %13, %365
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_4pairIN3WTF6StringES4_EES7_EEENS_16reverse_iteratorIPS5_EESE_SE_EEvT0_SF_T1_SG_T2_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::reverse_iterator"* byval(%"class.std::__1::reverse_iterator") align 8, %"class.std::__1::reverse_iterator"* byval(%"class.std::__1::reverse_iterator") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = inttoptr i64 %8 to i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)**
  %11 = icmp eq %"struct.std::__1::pair"* %1, %3
  br i1 %11, label %173, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 1
  br label %15

15:                                               ; preds = %12, %167
  %16 = phi %"struct.std::__1::pair"* [ %1, %12 ], [ %169, %167 ]
  %17 = phi %"struct.std::__1::pair"* [ %5, %12 ], [ %168, %167 ]
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %17, %18
  br i1 %19, label %20, label %72

20:                                               ; preds = %15
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %22

22:                                               ; preds = %20, %70
  %23 = phi %"struct.std::__1::pair"* [ %25, %70 ], [ %16, %20 ]
  %24 = phi %"struct.std::__1::pair"* [ %26, %70 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 -1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"struct.std::__1::pair"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %30 = bitcast %"struct.std::__1::pair"* %26 to i64*
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %47

47:                                               ; preds = %46, %43, %22
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 -1, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1, i32 1
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  %51 = bitcast %"class.WTF::String"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %53 = bitcast %"class.WTF::String"* %49 to i64*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store i64 %52, i64* %53, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %69, %66, %47
  %71 = icmp eq %"struct.std::__1::pair"* %25, %3
  br i1 %71, label %173, label %22

72:                                               ; preds = %15
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 -1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 -1
  %75 = load i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)*, i1 (%"struct.std::__1::pair"*, %"struct.std::__1::pair"*)** %10, align 8
  %76 = tail call zeroext i1 %75(%"struct.std::__1::pair"* dereferenceable(16) %74, %"struct.std::__1::pair"* dereferenceable(16) %73) #12
  %77 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1
  br i1 %76, label %79, label %123

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::pair"* %73 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %80, align 8
  %83 = bitcast %"struct.std::__1::pair"* %78 to i64*
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  store i64 %82, i64* %83, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %100

100:                                              ; preds = %99, %96, %79
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 -1, i32 1
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1, i32 1
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %104 = bitcast %"class.WTF::String"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %103, align 8
  %106 = bitcast %"class.WTF::String"* %102 to i64*
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %105, i64* %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %167, label %110

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %167

122:                                              ; preds = %119
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #12
  br label %167

123:                                              ; preds = %72
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::pair"* %74 to i64*
  %126 = load i64, i64* %125, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  %127 = bitcast %"struct.std::__1::pair"* %78 to i64*
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  store i64 %126, i64* %127, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #12
  br label %144

144:                                              ; preds = %143, %140, %123
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 -1, i32 1
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1, i32 1
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %145, i64 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::String"* %145 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8
  %150 = bitcast %"class.WTF::String"* %146 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %144
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #12
  br label %167

167:                                              ; preds = %166, %163, %144, %122, %119, %100
  %168 = phi %"struct.std::__1::pair"* [ %73, %100 ], [ %73, %119 ], [ %73, %122 ], [ %17, %144 ], [ %17, %163 ], [ %17, %166 ]
  %169 = phi %"struct.std::__1::pair"* [ %16, %100 ], [ %16, %119 ], [ %16, %122 ], [ %74, %144 ], [ %74, %163 ], [ %74, %166 ]
  %170 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 -1
  store %"struct.std::__1::pair"* %171, %"struct.std::__1::pair"** %14, align 8
  %172 = icmp eq %"struct.std::__1::pair"* %169, %3
  br i1 %172, label %173, label %15

173:                                              ; preds = %167, %70, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8IterableIN3WTF6StringES4_E15IterationSourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8IterableINS_6StringES3_E15IterationSourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8IterableIN3WTF6StringES4_E15IterationSourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*
  %3 = bitcast i8* %0 to void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*)***
  %4 = load void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*)**, void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*)*** %3, align 8
  %5 = load void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*)*, void (%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*)** %4, align 8
  tail call void %5(%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8IterableIN3WTF6StringES3_E15IterationSourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringES2_E15IterationSourceD2Ev(%"class.blink::Iterable<WTF::String, WTF::String>::IterationSource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_130URLSearchParamsIterationSourceD0Ev(%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"* nocapture) unnamed_addr #11 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_130URLSearchParamsIterationSource4NextEPNS_11ScriptStateERN3WTF6StringES6_RNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"* nocapture, %"class.blink::ScriptState"* nocapture readnone, %"class.WTF::String"* nocapture dereferenceable(8), %"class.WTF::String"* nocapture dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSearchParamsIterationSource", %"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSearchParamsIterationSource", %"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::URLSearchParams"*, %"class.blink::URLSearchParams"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp ult i64 %7, %12
  br i1 %13, label %14, label %105

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %9, i64 0, i32 2
  %16 = trunc i64 %7 to i32
  %17 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %16) #12
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #12
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %14
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::String"* %2 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #12
  br label %57

57:                                               ; preds = %38, %53, %56
  %58 = load %"class.blink::URLSearchParams"*, %"class.blink::URLSearchParams"** %8, align 8
  %59 = getelementptr inbounds %"class.blink::URLSearchParams", %"class.blink::URLSearchParams"* %58, i64 0, i32 2
  %60 = load i64, i64* %6, align 8
  %61 = trunc i64 %60 to i32
  %62 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %59, i32 %61) #12
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #12
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  tail call void @llvm.trap() #12
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %57
  %84 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  %85 = bitcast %"class.WTF::String"* %3 to i64*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #12
  br label %102

102:                                              ; preds = %83, %98, %101
  %103 = load i64, i64* %6, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %6, align 8
  br label %105

105:                                              ; preds = %5, %102
  %106 = phi i1 [ true, %102 ], [ false, %5 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_130URLSearchParamsIterationSource5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::URLSearchParamsIterationSource", %"class.blink::(anonymous namespace)::URLSearchParamsIterationSource"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.243"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15URLSearchParamsEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZNK3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15URLSearchParamsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 40
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, i64 6
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %3, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_6DOMURLEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_6DOMURLEEEvRKNS_14LivenessBrokerEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #12
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
