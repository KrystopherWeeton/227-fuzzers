; ModuleID = '../../third_party/blink/renderer/core/layout/layout_tree_as_text.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_tree_as_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3211, i32, i8, i8, [2 x i8] }>
%union.anon.3211 = type { %"class.WTF::Vector.3212" }
%"class.WTF::Vector.3212" = type { %"class.WTF::VectorBuffer.3213" }
%"class.WTF::VectorBuffer.3213" = type { %"class.WTF::VectorBufferBase.3214", [16 x i8] }
%"class.WTF::VectorBufferBase.3214" = type { i8*, i32, i32 }
%"class.WTF::Vector.3217" = type { %"class.WTF::VectorBuffer.3218" }
%"class.WTF::VectorBuffer.3218" = type { %"class.WTF::VectorBufferBase.3219", [16 x i8] }
%"class.WTF::VectorBufferBase.3219" = type { i16*, i32, i32 }
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.blink::Color" = type { i32 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1745", [4 x i8] }>
%"class.WTF::RefCounted.1745" = type { %"class.base::RefCounted.1746" }
%"class.base::RefCounted.1746" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1738", i64 }
%"class.std::__1::vector.1738" = type { %"class.std::__1::__vector_base.1739" }
%"class.std::__1::__vector_base.1739" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1740" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3350 }
%class.scoped_refptr.3350 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3351", %"class.WTF::Vector.630", %"class.WTF::Vector.3353", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3351" = type { %"class.base::RefCounted.3352" }
%"class.base::RefCounted.3352" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3353" = type { %"class.WTF::VectorBuffer.3354" }
%"class.WTF::VectorBuffer.3354" = type { %"class.WTF::VectorBufferBase.3355" }
%"class.WTF::VectorBufferBase.3355" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3356 }
%union.anon.3356 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1589", i32, i8, [3 x i8], %"class.blink::HeapVector.1591", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1599", %"class.blink::Member.1601", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1610", %"class.blink::Member.1733", %"class.blink::Member.1735", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.3272" }
%"class.blink::Member.3272" = type { %"class.blink::MemberBase.3273" }
%"class.blink::MemberBase.3273" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3274" }
%"class.blink::Member.3274" = type { %"class.blink::MemberBase.3275" }
%"class.blink::MemberBase.3275" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1579", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1585", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1566", %"class.std::__1::map.1575"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1549" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1558", %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1566" = type { %"class.std::__1::__tree.1567" }
%"class.std::__1::__tree.1567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1568", %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1575" = type opaque
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1597" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1603", i32, i32 }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1613" }
%"class.std::__1::unique_ptr.1613" = type { %"class.std::__1::__compressed_pair.1614" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.1615" }
%"struct.std::__1::__compressed_pair_elem.1615" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1616" }
%"class.WTF::Vector.1616" = type { %"class.WTF::VectorBuffer.1617" }
%"class.WTF::VectorBuffer.1617" = type { %"class.WTF::VectorBufferBase.1618" }
%"class.WTF::VectorBufferBase.1618" = type { %"class.mojo::StructPtr.1619"*, i32, i32 }
%"class.mojo::StructPtr.1619" = type { %"class.std::__1::unique_ptr.1620" }
%"class.std::__1::unique_ptr.1620" = type { %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.1622" }
%"struct.std::__1::__compressed_pair_elem.1622" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1623", %"class.WTF::HashMap.1630", %"class.WTF::HashMap.1635", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1640", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type opaque
%"class.WTF::HashMap.1635" = type { %"class.WTF::HashTable.1636" }
%"class.WTF::HashTable.1636" = type <{ %"struct.WTF::KeyValuePair.1639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1639" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1640" = type { %"class.std::__1::unique_ptr.1641" }
%"class.std::__1::unique_ptr.1641" = type { %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1724" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1655", i32 }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1658", %"class.absl::optional.1659", %"class.absl::optional.1664", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1677", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1699", %"class.std::__1::map.1710", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1719", i8, %class.scoped_refptr.1669, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1720" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1658" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1659" = type { %"class.absl::optional_internal::optional_data.1660" }
%"class.absl::optional_internal::optional_data.1660" = type { %"class.absl::optional_internal::optional_data_base.1661" }
%"class.absl::optional_internal::optional_data_base.1661" = type { %"class.absl::optional_internal::optional_data_dtor_base.1662" }
%"class.absl::optional_internal::optional_data_dtor_base.1662" = type { i8, %union.anon.1663 }
%union.anon.1663 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1664" = type { %"class.absl::optional_internal::optional_data.1665" }
%"class.absl::optional_internal::optional_data.1665" = type { %"class.absl::optional_internal::optional_data_base.1666" }
%"class.absl::optional_internal::optional_data_base.1666" = type { %"class.absl::optional_internal::optional_data_dtor_base.1667" }
%"class.absl::optional_internal::optional_data_dtor_base.1667" = type { i8, %union.anon.1668 }
%union.anon.1668 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1669, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1670" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1670" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1675 }
%class.scoped_refptr.1675 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1669, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1676 }
%class.scoped_refptr.1676 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1680", %class.scoped_refptr.1681 }
%"class.base::RepeatingCallback.1680" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1681 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1682" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1686", %"class.std::__1::unique_ptr.1692", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1698" }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1698" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1699" = type { %"class.std::__1::__tree.1700" }
%"class.std::__1::__tree.1700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1701", %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1710" = type { %"class.std::__1::__tree.1711" }
%"class.std::__1::__tree.1711" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1712", %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1719" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1669 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1720" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3364 }
%class.scoped_refptr.3364 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3374" }
%"class.blink::Member.3374" = type { %"class.blink::MemberBase.3375" }
%"class.blink::MemberBase.3375" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3370" }
%"class.blink::MemberBase.3370" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3371" }
%"class.blink::MemberBase.3371" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3372" }
%"class.blink::MemberBase.3372" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3373" }
%"class.blink::MemberBase.3373" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3365", %"class.WTF::Vector.3365" }
%"class.WTF::Vector.3365" = type { %"class.WTF::VectorBuffer.3366" }
%"class.WTF::VectorBuffer.3366" = type { %"class.WTF::VectorBufferBase.3367" }
%"class.WTF::VectorBufferBase.3367" = type { %class.scoped_refptr.3364*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1848", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2068", %"class.std::__1::unique_ptr.2074", %"class.std::__1::unique_ptr.2080", %class.scoped_refptr.1844, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2086", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1807", %"class.std::__1::unique_ptr.1817" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1763, %"class.WTF::Vector.1764", %"class.std::__1::unique_ptr.1769", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1790, %"class.blink::Persistent.1791" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1763 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2738", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2886, %union.anon.2904, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2738" = type { %"class.base::RefCounted.2739" }
%"class.base::RefCounted.2739" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2740, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2740 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2741 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2741 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2775 }
%class.scoped_refptr.2775 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2776", [4 x i8], %"class.std::__1::unique_ptr.2778", i64, %"class.WTF::Vector.2782", %"class.WTF::Vector.2787", %"class.WTF::Vector.2793", %"class.WTF::Vector.2811", %class.scoped_refptr.1546, %"class.WTF::HashMap.2817", %"class.WTF::Vector.2822", %"class.WTF::Vector.2782", %"class.WTF::Vector.2828", %"class.WTF::HashMap.2833", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2776" = type { %"class.base::RefCountedThreadSafe.2777" }
%"class.base::RefCountedThreadSafe.2777" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2778" = type { %"class.std::__1::__compressed_pair.2779" }
%"class.std::__1::__compressed_pair.2779" = type { %"struct.std::__1::__compressed_pair_elem.2780" }
%"struct.std::__1::__compressed_pair_elem.2780" = type { i8* }
%"class.WTF::Vector.2787" = type { %"class.WTF::VectorBuffer.2788" }
%"class.WTF::VectorBuffer.2788" = type { %"class.WTF::VectorBufferBase.2789", [8 x i8] }
%"class.WTF::VectorBufferBase.2789" = type { %class.scoped_refptr.2790*, i32, i32 }
%class.scoped_refptr.2790 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2793" = type { %"class.WTF::VectorBuffer.2794" }
%"class.WTF::VectorBuffer.2794" = type { %"class.WTF::VectorBufferBase.2795" }
%"class.WTF::VectorBufferBase.2795" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2797", %"class.std::__1::unique_ptr.2803" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2796 }
%class.scoped_refptr.2796 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2797" = type { %"class.std::__1::__compressed_pair.2798" }
%"class.std::__1::__compressed_pair.2798" = type { %"struct.std::__1::__compressed_pair_elem.2799" }
%"struct.std::__1::__compressed_pair_elem.2799" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2803" = type { %"class.std::__1::__compressed_pair.2804" }
%"class.std::__1::__compressed_pair.2804" = type { %"struct.std::__1::__compressed_pair_elem.2805" }
%"struct.std::__1::__compressed_pair_elem.2805" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2811" = type { %"class.WTF::VectorBuffer.2812" }
%"class.WTF::VectorBuffer.2812" = type { %"class.WTF::VectorBufferBase.2813" }
%"class.WTF::VectorBufferBase.2813" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2814", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2814" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2817" = type { %"class.WTF::HashTable.2818" }
%"class.WTF::HashTable.2818" = type <{ %"struct.WTF::KeyValuePair.2821"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2821" = type opaque
%"class.WTF::Vector.2822" = type { %"class.WTF::VectorBuffer.2823" }
%"class.WTF::VectorBuffer.2823" = type { %"class.WTF::VectorBufferBase.2824" }
%"class.WTF::VectorBufferBase.2824" = type { %"class.mojo::ScopedHandleBase.2825"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2825" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.2782" = type { %"class.WTF::VectorBuffer.2783" }
%"class.WTF::VectorBuffer.2783" = type { %"class.WTF::VectorBufferBase.2784", [16 x i8] }
%"class.WTF::VectorBufferBase.2784" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2828" = type { %"class.WTF::VectorBuffer.2829" }
%"class.WTF::VectorBuffer.2829" = type { %"class.WTF::VectorBufferBase.2830" }
%"class.WTF::VectorBufferBase.2830" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.2833" = type { %"class.WTF::HashTable.2834" }
%"class.WTF::HashTable.2834" = type <{ %"struct.WTF::KeyValuePair.2837"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2837" = type { i8**, %"class.std::__1::unique_ptr.3276" }
%"class.std::__1::unique_ptr.3276" = type { %"class.std::__1::__compressed_pair.3277" }
%"class.std::__1::__compressed_pair.3277" = type { %"struct.std::__1::__compressed_pair_elem.3278" }
%"struct.std::__1::__compressed_pair_elem.3278" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2838" }
%"class.std::__1::unique_ptr.2838" = type { %"class.std::__1::__compressed_pair.2839" }
%"class.std::__1::__compressed_pair.2839" = type { %"struct.std::__1::__compressed_pair_elem.2840" }
%"struct.std::__1::__compressed_pair_elem.2840" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2841, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2858" }
%class.scoped_refptr.2841 = type { %"class.base::RefCountedData.2842"* }
%"class.base::RefCountedData.2842" = type { %"class.base::RefCountedThreadSafe.2843", %"class.WTF::Vector.2844" }
%"class.base::RefCountedThreadSafe.2843" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2844" = type { %"class.WTF::VectorBuffer.2845" }
%"class.WTF::VectorBuffer.2845" = type { %"class.WTF::VectorBufferBase.2846" }
%"class.WTF::VectorBufferBase.2846" = type { %class.scoped_refptr.2847*, i32, i32 }
%class.scoped_refptr.2847 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2848", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2850" }
%"class.WTF::RefCounted.2848" = type { %"class.base::RefCounted.2849" }
%"class.base::RefCounted.2849" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2850" = type { %"class.std::__1::__compressed_pair.2851" }
%"class.std::__1::__compressed_pair.2851" = type { %"struct.std::__1::__compressed_pair_elem.2852" }
%"struct.std::__1::__compressed_pair_elem.2852" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2858" = type { %"class.std::__1::__compressed_pair.2859" }
%"class.std::__1::__compressed_pair.2859" = type { %"struct.std::__1::__compressed_pair_elem.2860" }
%"struct.std::__1::__compressed_pair_elem.2860" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2861", %"class.WTF::Vector.2874", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2861" = type { %"class.WTF::VectorBuffer.2862" }
%"class.WTF::VectorBuffer.2862" = type { %"class.WTF::VectorBufferBase.2863", [320 x i8] }
%"class.WTF::VectorBufferBase.2863" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2864", %"class.WTF::Vector.2864", %class.scoped_refptr.2869, i8, [7 x i8] }>
%"class.WTF::Vector.2864" = type { %"class.WTF::VectorBuffer.2865" }
%"class.WTF::VectorBuffer.2865" = type { %"class.WTF::VectorBufferBase.2866", [8 x i8] }
%"class.WTF::VectorBufferBase.2866" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2869 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2870", %"class.WTF::Vector.2844", %"class.WTF::Vector.2844" }
%"class.WTF::RefCounted.2870" = type { %"class.base::RefCounted.2871" }
%"class.base::RefCounted.2871" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2874" = type { %"class.WTF::VectorBuffer.2875" }
%"class.WTF::VectorBuffer.2875" = type { %"class.WTF::VectorBufferBase.2876", [288 x i8] }
%"class.WTF::VectorBufferBase.2876" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2864", %"class.WTF::Vector.2864" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2877 }
%class.scoped_refptr.2877 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2886 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2887", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2889, %"class.std::__1::unique_ptr.2892" }
%"class.WTF::RefCounted.2887" = type { %"class.base::RefCounted.2888" }
%"class.base::RefCounted.2888" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2889 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2890", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2890" = type { %"class.base::RefCounted.2891" }
%"class.base::RefCounted.2891" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2892" = type { %"class.std::__1::__compressed_pair.2893" }
%"class.std::__1::__compressed_pair.2893" = type { %"struct.std::__1::__compressed_pair_elem.2894" }
%"struct.std::__1::__compressed_pair_elem.2894" = type { %"class.WTF::Vector.2895"* }
%"class.WTF::Vector.2895" = type { %"class.WTF::VectorBuffer.2896" }
%"class.WTF::VectorBuffer.2896" = type { %"class.WTF::VectorBufferBase.2897" }
%"class.WTF::VectorBufferBase.2897" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2898 }
%union.anon.2898 = type { %"class.blink::LineBoxList" }
%union.anon.2904 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2742", %class.scoped_refptr.2905, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2906, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2775, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2907", %"class.absl::optional.2923" }
%"class.absl::optional.2742" = type { %"class.absl::optional_internal::optional_data.2743" }
%"class.absl::optional_internal::optional_data.2743" = type { %"class.absl::optional_internal::optional_data_base.2744" }
%"class.absl::optional_internal::optional_data_base.2744" = type { %"class.absl::optional_internal::optional_data_dtor_base.2745" }
%"class.absl::optional_internal::optional_data_dtor_base.2745" = type { i8, %union.anon.2746 }
%union.anon.2746 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2905 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2928", [4 x i8], %union.anon.2930, %class.scoped_refptr.2905, i32, [4 x i8] }>
%"class.WTF::RefCounted.2928" = type { %"class.base::RefCounted.2929" }
%"class.base::RefCounted.2929" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2930 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2906 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2907" = type { %"class.std::__1::__compressed_pair.2908" }
%"class.std::__1::__compressed_pair.2908" = type { %"struct.std::__1::__compressed_pair_elem.2909" }
%"struct.std::__1::__compressed_pair_elem.2909" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2910", %"class.WTF::Vector.2915", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2910" = type { %"class.WTF::VectorBuffer.2911" }
%"class.WTF::VectorBuffer.2911" = type { %"class.WTF::VectorBufferBase.2912" }
%"class.WTF::VectorBufferBase.2912" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2915" = type { %"class.WTF::VectorBuffer.2916" }
%"class.WTF::VectorBuffer.2916" = type { %"class.WTF::VectorBufferBase.2917" }
%"class.WTF::VectorBufferBase.2917" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2923" = type { %"class.absl::optional_internal::optional_data.2924" }
%"class.absl::optional_internal::optional_data.2924" = type { %"class.absl::optional_internal::optional_data_base.2925" }
%"class.absl::optional_internal::optional_data_base.2925" = type { %"class.absl::optional_internal::optional_data_dtor_base.2926" }
%"class.absl::optional_internal::optional_data_dtor_base.2926" = type { i8, %union.anon.2927 }
%union.anon.2927 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [8 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %class.scoped_refptr.1763*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1772", %"class.absl::optional.1777", %"class.absl::optional.1782" }
%"class.absl::optional.1772" = type { %"class.absl::optional_internal::optional_data.1773" }
%"class.absl::optional_internal::optional_data.1773" = type { %"class.absl::optional_internal::optional_data_base.1774" }
%"class.absl::optional_internal::optional_data_base.1774" = type { %"class.absl::optional_internal::optional_data_dtor_base.1775" }
%"class.absl::optional_internal::optional_data_dtor_base.1775" = type { i8, %union.anon.1776 }
%union.anon.1776 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1777" = type { %"class.absl::optional_internal::optional_data.1778" }
%"class.absl::optional_internal::optional_data.1778" = type { %"class.absl::optional_internal::optional_data_base.1779" }
%"class.absl::optional_internal::optional_data_base.1779" = type { %"class.absl::optional_internal::optional_data_dtor_base.1780" }
%"class.absl::optional_internal::optional_data_dtor_base.1780" = type { i8, [3 x i8], %union.anon.1781 }
%union.anon.1781 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1782" = type { %"class.absl::optional_internal::optional_data.1783" }
%"class.absl::optional_internal::optional_data.1783" = type { %"class.absl::optional_internal::optional_data_base.1784" }
%"class.absl::optional_internal::optional_data_base.1784" = type { %"class.absl::optional_internal::optional_data_dtor_base.1785" }
%"class.absl::optional_internal::optional_data_dtor_base.1785" = type { i8, %union.anon.1786 }
%union.anon.1786 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1790 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1750", %"class.absl::optional.1755" }
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1791" = type { %"class.blink::PersistentBase.1792" }
%"class.blink::PersistentBase.1792" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1795", %"struct.blink::PhysicalRect", %"class.blink::Member.1805" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.WTF::HashSet.1798"* }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1807" = type { %"class.blink::PersistentBase.1808" }
%"class.blink::PersistentBase.1808" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2728", %"class.WTF::HashMap.2733", %"class.WTF::String" }
%"class.WTF::Vector.2728" = type { %"class.WTF::VectorBuffer.2729" }
%"class.WTF::VectorBuffer.2729" = type { %"class.WTF::VectorBufferBase.2730" }
%"class.WTF::VectorBufferBase.2730" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2733" = type { %"class.WTF::HashTable.2734" }
%"class.WTF::HashTable.2734" = type <{ %"struct.WTF::KeyValuePair.2737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2737" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1820", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1820" = type { %"class.WTF::HashTable.1823", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1823" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1826", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1829, %"class.std::__1::unique_ptr.1830", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1829 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2726", i16, %class.scoped_refptr.1829 }
%"class.WTF::ThreadSafeRefCounted.2726" = type { %"class.base::RefCountedThreadSafe.2727" }
%"class.base::RefCountedThreadSafe.2727" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.WTF::Vector.1833"* }
%"class.WTF::Vector.1833" = type { %"class.WTF::VectorBuffer.1834" }
%"class.WTF::VectorBuffer.1834" = type { %"class.WTF::VectorBufferBase.1835" }
%"class.WTF::VectorBufferBase.1835" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1844, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1852", %"class.blink::Member.1857", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1859", i8, i32, %"class.blink::Color", %"class.absl::optional.1862", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1869", %"class.std::__1::unique_ptr.1872", i32, [4 x i8], %"class.WTF::HashSet.1875", %"class.blink::Member.1882", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1884", %"class.blink::HeapHashSet.1891", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1899", i8, %"class.blink::Member.1905", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1917", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1931", i8, %"class.std::__1::unique_ptr.1937", %"class.std::__1::unique_ptr.2018", %"class.WTF::Vector.2024", i32, %class.scoped_refptr.2029, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2030", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::HeapHashSet.2036", %"class.blink::HeapHashSet.2043", %"class.std::__1::unique_ptr.2050", %"class.std::__1::unique_ptr.2057", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %class.scoped_refptr.1856*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1856 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2286", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2294", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2308", %"class.blink::FrameLoader", %"class.blink::Member.2329", %"class.blink::Member.343", %"class.blink::Member.2330", %"class.blink::Member.2332", %"class.blink::Member.2348", %"class.blink::Member.2350", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2352", %class.scoped_refptr.2576, %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::Member.2581", %"class.blink::Member.2583", %"class.blink::Member.2585", %"class.blink::Member.2589", %"class.blink::Member.2591", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2595", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2601", %"class.std::__1::unique_ptr.2602", %"class.absl::optional.2274", i32, [4 x i8], %"class.std::__1::unique_ptr.2608", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2616", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2621", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2626", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2629", %"class.blink::Member.2631", %"class.blink::Member.2633", %"class.blink::Member.2635", %"class.mojo::StructPtr.2638", %"class.blink::Member.2647", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2649", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", i8, i32, i8, i32, %"class.blink::Member.2256", %"class.blink::Member.2146", %"class.blink::FrameLifecycle", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.1857", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2267", i8, %"class.base::UnguessableToken", %"class.absl::optional.2269", %"class.absl::optional.2274", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2117", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2117", %"class.blink::Member.2146", %"class.blink::Member.2148", %"class.blink::Member.2150", i8, %"class.WTF::Vector.2152" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2139" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2127" }
%"class.blink::HeapVector.2127" = type { %"class.WTF::Vector.2130" }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132", [32 x i8] }
%"class.WTF::VectorBufferBase.2132" = type { %"struct.std::__1::pair.2133"*, i32, i32 }
%"struct.std::__1::pair.2133" = type { %"class.WTF::AtomicString", %"class.blink::Member.2134" }
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::HeapVector.2136"* }
%"class.blink::HeapVector.2136" = type opaque
%"class.std::__1::unique_ptr.2139" = type { %"class.std::__1::__compressed_pair.2140" }
%"class.std::__1::__compressed_pair.2140" = type { %"struct.std::__1::__compressed_pair_elem.2141" }
%"struct.std::__1::__compressed_pair_elem.2141" = type { %"class.WTF::Vector.2142"* }
%"class.WTF::Vector.2142" = type opaque
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2248" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.1655", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1669, i32 }>
%class.scoped_refptr.2155 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1669, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2214", %"class.absl::optional.2219", %"class.absl::optional.2172", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2239", i8, [7 x i8], %class.scoped_refptr.1669, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1669, %"class.std::__1::unique_ptr.2156", %"class.absl::optional.2166", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2172", %"class.std::__1::unique_ptr.2177", i8, i64, %class.scoped_refptr.2211, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2212", %"class.base::WeakPtrFactory.2213" }
%"class.std::__1::unique_ptr.2156" = type { %"class.std::__1::__compressed_pair.2157" }
%"class.std::__1::__compressed_pair.2157" = type { %"struct.std::__1::__compressed_pair_elem.2158" }
%"struct.std::__1::__compressed_pair_elem.2158" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1669, i8, %"class.mojo::ScopedHandleBase.2159", %class.scoped_refptr.2160, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2161", i8*, %"class.base::WeakPtrFactory.2162" }
%"class.mojo::ScopedHandleBase.2159" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2160 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2161" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2162" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2166" = type { %"class.absl::optional_internal::optional_data.2167" }
%"class.absl::optional_internal::optional_data.2167" = type { %"class.absl::optional_internal::optional_data_base.2168" }
%"class.absl::optional_internal::optional_data_base.2168" = type { %"class.absl::optional_internal::optional_data_dtor_base.2169" }
%"class.absl::optional_internal::optional_data_dtor_base.2169" = type { i8, %union.anon.2170 }
%union.anon.2170 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2171", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2171" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2180", i8, i64, %class.scoped_refptr.2181, %class.scoped_refptr.2206 }
%"class.base::RepeatingCallback.2180" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2181 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2182", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2184", %"class.std::__1::map.2195", i8, [7 x i8] }>
%"class.base::RefCounted.2182" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2183 }
%class.scoped_refptr.2183 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2184" = type { %"class.std::__1::__tree.2185" }
%"class.std::__1::__tree.2185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2186", %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2195" = type { %"class.std::__1::__tree.2196" }
%"class.std::__1::__tree.2196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2197", %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2206 = type { %"class.base::RefCountedData.2207"* }
%"class.base::RefCountedData.2207" = type opaque
%class.scoped_refptr.2211 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2212" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2213" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2214" = type { %"class.absl::optional_internal::optional_data.2215" }
%"class.absl::optional_internal::optional_data.2215" = type { %"class.absl::optional_internal::optional_data_base.2216" }
%"class.absl::optional_internal::optional_data_base.2216" = type { %"class.absl::optional_internal::optional_data_dtor_base.2217" }
%"class.absl::optional_internal::optional_data_dtor_base.2217" = type { i8, %union.anon.2218 }
%union.anon.2218 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2219" = type { %"class.absl::optional_internal::optional_data.2220" }
%"class.absl::optional_internal::optional_data.2220" = type { %"class.absl::optional_internal::optional_data_base.2221" }
%"class.absl::optional_internal::optional_data_base.2221" = type { %"class.absl::optional_internal::optional_data_dtor_base.2222" }
%"class.absl::optional_internal::optional_data_dtor_base.2222" = type { i8, [7 x i8], %union.anon.2223 }
%union.anon.2223 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2172" = type { %"class.absl::optional_internal::optional_data.2173" }
%"class.absl::optional_internal::optional_data.2173" = type { %"class.absl::optional_internal::optional_data_base.2174" }
%"class.absl::optional_internal::optional_data_base.2174" = type { %"class.absl::optional_internal::optional_data_dtor_base.2175" }
%"class.absl::optional_internal::optional_data_dtor_base.2175" = type { i8, %union.anon.2176 }
%union.anon.2176 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2224 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2224 = type { %"class.std::__1::map.2227" }
%"class.std::__1::map.2227" = type { %"class.std::__1::__tree.2228" }
%"class.std::__1::__tree.2228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2229", %"class.std::__1::__compressed_pair.2233" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2238"*, i64 }
%"class.std::__1::unique_ptr.2238" = type opaque
%"class.std::__1::map.2239" = type { %"class.std::__1::__tree.2240" }
%"class.std::__1::__tree.2240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2241", %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2241" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2117", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2258" }
%"class.base::internal::flat_tree.2258" = type { %"class.std::__1::vector.2259" }
%"class.std::__1::vector.2259" = type { %"class.std::__1::__vector_base.2260" }
%"class.std::__1::__vector_base.2260" = type { %"struct.std::__1::pair.2261"*, %"struct.std::__1::pair.2261"*, %"class.std::__1::__compressed_pair.2262" }
%"struct.std::__1::pair.2261" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"struct.std::__1::pair.2261"* }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2269" = type { %"class.absl::optional_internal::optional_data.2270" }
%"class.absl::optional_internal::optional_data.2270" = type { %"class.absl::optional_internal::optional_data_base.2271" }
%"class.absl::optional_internal::optional_data_base.2271" = type { %"class.absl::optional_internal::optional_data_dtor_base.2272" }
%"class.absl::optional_internal::optional_data_dtor_base.2272" = type { i8, %union.anon.2273 }
%union.anon.2273 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2279" }
%"class.blink::HeapHashSet.2279" = type { %"class.WTF::HashSet.2282" }
%"class.WTF::HashSet.2282" = type { %"class.WTF::HashTable.2283" }
%"class.WTF::HashTable.2283" = type <{ %"class.blink::WeakMember.2285"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2285" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2286" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2287" }
%"class.blink::HeapHashMap.2287" = type { %"class.WTF::HashMap.2290" }
%"class.WTF::HashMap.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ %"struct.WTF::KeyValuePair.2293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2293" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2294" = type { %"class.std::__1::__compressed_pair.2295" }
%"class.std::__1::__compressed_pair.2295" = type { %"struct.std::__1::__compressed_pair_elem.2296" }
%"struct.std::__1::__compressed_pair_elem.2296" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2297", %"class.base::WeakPtrFactory.2302" }
%"class.WTF::HashMap.2297" = type { %"class.WTF::HashTable.2298" }
%"class.WTF::HashTable.2298" = type <{ %"struct.WTF::KeyValuePair.2301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2301" = type opaque
%"class.base::WeakPtrFactory.2302" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2306" }
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3284" }
%"class.blink::WeakMember.3284" = type { %"class.blink::MemberBase.3285" }
%"class.blink::MemberBase.3285" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3286", i64, %"class.std::__1::map.3287", i8*, i64, %"class.base::WeakPtrFactory.3296" }
%"class.base::RepeatingCallback.3286" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3287" = type { %"class.std::__1::__tree.3288" }
%"class.std::__1::__tree.3288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3289", %"class.std::__1::__compressed_pair.3293" }
%"class.std::__1::__compressed_pair.3289" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.3293" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3296" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2308" = type { %"class.WTF::HashSet.2311" }
%"class.WTF::HashSet.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"class.blink::WeakMember.2314"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2314" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1857", %"class.blink::Member.2315", %"class.blink::Member.2317", %"class.std::__1::unique_ptr.2319", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2325" }
%"class.blink::Member.2315" = type { %"class.blink::MemberBase.2316" }
%"class.blink::MemberBase.2316" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2317" = type { %"class.blink::MemberBase.2318" }
%"class.blink::MemberBase.2318" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::HashSet.2325" = type { %"class.WTF::HashTable.2326" }
%"class.WTF::HashTable.2326" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1857", %"class.blink::Member.2336", %"class.blink::Member.2338", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2340", %"class.blink::Member.2346" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2340" = type { %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.2342" }
%"struct.std::__1::__compressed_pair_elem.2342" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2346" = type { %"class.blink::MemberBase.2347" }
%"class.blink::MemberBase.2347" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2356", %"class.blink::HeapListHashSet.2367", %"class.blink::HeapListHashSet.2378", %"class.blink::HeapListHashSet.2389", %"class.blink::HeapListHashSet.2400", %"class.blink::HeapListHashSet.2411", %"class.blink::HeapListHashSet.2422", %"class.blink::HeapListHashSet.2433", %"class.blink::HeapListHashSet.2444", %"class.blink::HeapListHashSet.2455", %"class.blink::HeapListHashSet.2466", %"class.blink::HeapListHashSet.2477", %"class.blink::HeapListHashSet.2488", %"class.blink::HeapListHashSet.2499", %"class.blink::HeapListHashSet.2510", %"class.blink::HeapListHashSet.2521", %"class.blink::HeapListHashSet.2532", %"class.blink::HeapListHashSet.2543", %"class.blink::HeapListHashSet.2554", %"class.blink::HeapListHashSet.2565" }
%"class.blink::HeapListHashSet.2356" = type { %"class.WTF::ListHashSet.base.2366", [7 x i8] }
%"class.WTF::ListHashSet.base.2366" = type <{ %"class.WTF::HashTable.2361", %"class.blink::Member.2363", %"class.blink::Member.2363", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2361" = type <{ %"class.blink::Member.2363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::HeapListHashSetNode.2365"* }
%"class.blink::HeapListHashSetNode.2365" = type { %"class.blink::Member.2579", %"class.blink::Member.2363", %"class.blink::Member.2363" }
%"class.blink::HeapListHashSet.2367" = type { %"class.WTF::ListHashSet.base.2377", [7 x i8] }
%"class.WTF::ListHashSet.base.2377" = type <{ %"class.WTF::HashTable.2372", %"class.blink::Member.2374", %"class.blink::Member.2374", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2372" = type <{ %"class.blink::Member.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::HeapListHashSetNode.2376"* }
%"class.blink::HeapListHashSetNode.2376" = type { %"class.blink::Member.2722", %"class.blink::Member.2374", %"class.blink::Member.2374" }
%"class.blink::Member.2722" = type { %"class.blink::MemberBase.2723" }
%"class.blink::MemberBase.2723" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2378" = type { %"class.WTF::ListHashSet.base.2388", [7 x i8] }
%"class.WTF::ListHashSet.base.2388" = type <{ %"class.WTF::HashTable.2383", %"class.blink::Member.2385", %"class.blink::Member.2385", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2383" = type <{ %"class.blink::Member.2385"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::HeapListHashSetNode.2387"* }
%"class.blink::HeapListHashSetNode.2387" = type { %"class.blink::Member.2718", %"class.blink::Member.2385", %"class.blink::Member.2385" }
%"class.blink::Member.2718" = type { %"class.blink::MemberBase.2719" }
%"class.blink::MemberBase.2719" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2389" = type { %"class.WTF::ListHashSet.base.2399", [7 x i8] }
%"class.WTF::ListHashSet.base.2399" = type <{ %"class.WTF::HashTable.2394", %"class.blink::Member.2396", %"class.blink::Member.2396", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2394" = type <{ %"class.blink::Member.2396"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::HeapListHashSetNode.2398"* }
%"class.blink::HeapListHashSetNode.2398" = type { %"class.blink::Member.2714", %"class.blink::Member.2396", %"class.blink::Member.2396" }
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2400" = type { %"class.WTF::ListHashSet.base.2410", [7 x i8] }
%"class.WTF::ListHashSet.base.2410" = type <{ %"class.WTF::HashTable.2405", %"class.blink::Member.2407", %"class.blink::Member.2407", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2405" = type <{ %"class.blink::Member.2407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::HeapListHashSetNode.2409"* }
%"class.blink::HeapListHashSetNode.2409" = type { %"class.blink::Member.2710", %"class.blink::Member.2407", %"class.blink::Member.2407" }
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2411" = type { %"class.WTF::ListHashSet.base.2421", [7 x i8] }
%"class.WTF::ListHashSet.base.2421" = type <{ %"class.WTF::HashTable.2416", %"class.blink::Member.2418", %"class.blink::Member.2418", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2416" = type <{ %"class.blink::Member.2418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::HeapListHashSetNode.2420"* }
%"class.blink::HeapListHashSetNode.2420" = type { %"class.blink::Member.2706", %"class.blink::Member.2418", %"class.blink::Member.2418" }
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2422" = type { %"class.WTF::ListHashSet.base.2432", [7 x i8] }
%"class.WTF::ListHashSet.base.2432" = type <{ %"class.WTF::HashTable.2427", %"class.blink::Member.2429", %"class.blink::Member.2429", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2427" = type <{ %"class.blink::Member.2429"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::HeapListHashSetNode.2431"* }
%"class.blink::HeapListHashSetNode.2431" = type { %"class.blink::Member.2702", %"class.blink::Member.2429", %"class.blink::Member.2429" }
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2433" = type { %"class.WTF::ListHashSet.base.2443", [7 x i8] }
%"class.WTF::ListHashSet.base.2443" = type <{ %"class.WTF::HashTable.2438", %"class.blink::Member.2440", %"class.blink::Member.2440", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2438" = type <{ %"class.blink::Member.2440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::HeapListHashSetNode.2442"* }
%"class.blink::HeapListHashSetNode.2442" = type { %"class.blink::Member.2698", %"class.blink::Member.2440", %"class.blink::Member.2440" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2444" = type { %"class.WTF::ListHashSet.base.2454", [7 x i8] }
%"class.WTF::ListHashSet.base.2454" = type <{ %"class.WTF::HashTable.2449", %"class.blink::Member.2451", %"class.blink::Member.2451", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2449" = type <{ %"class.blink::Member.2451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::HeapListHashSetNode.2453"* }
%"class.blink::HeapListHashSetNode.2453" = type { %"class.blink::Member.2694", %"class.blink::Member.2451", %"class.blink::Member.2451" }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2455" = type { %"class.WTF::ListHashSet.base.2465", [7 x i8] }
%"class.WTF::ListHashSet.base.2465" = type <{ %"class.WTF::HashTable.2460", %"class.blink::Member.2462", %"class.blink::Member.2462", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2460" = type <{ %"class.blink::Member.2462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2462" = type { %"class.blink::MemberBase.2463" }
%"class.blink::MemberBase.2463" = type { %"class.blink::HeapListHashSetNode.2464"* }
%"class.blink::HeapListHashSetNode.2464" = type { %"class.blink::Member.2690", %"class.blink::Member.2462", %"class.blink::Member.2462" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2466" = type { %"class.WTF::ListHashSet.base.2476", [7 x i8] }
%"class.WTF::ListHashSet.base.2476" = type <{ %"class.WTF::HashTable.2471", %"class.blink::Member.2473", %"class.blink::Member.2473", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2471" = type <{ %"class.blink::Member.2473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::HeapListHashSetNode.2475"* }
%"class.blink::HeapListHashSetNode.2475" = type { %"class.blink::Member.2583", %"class.blink::Member.2473", %"class.blink::Member.2473" }
%"class.blink::HeapListHashSet.2477" = type { %"class.WTF::ListHashSet.base.2487", [7 x i8] }
%"class.WTF::ListHashSet.base.2487" = type <{ %"class.WTF::HashTable.2482", %"class.blink::Member.2484", %"class.blink::Member.2484", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2482" = type <{ %"class.blink::Member.2484"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::HeapListHashSetNode.2486"* }
%"class.blink::HeapListHashSetNode.2486" = type { %"class.blink::Member.2684", %"class.blink::Member.2484", %"class.blink::Member.2484" }
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2488" = type { %"class.WTF::ListHashSet.base.2498", [7 x i8] }
%"class.WTF::ListHashSet.base.2498" = type <{ %"class.WTF::HashTable.2493", %"class.blink::Member.2495", %"class.blink::Member.2495", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2493" = type <{ %"class.blink::Member.2495"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::HeapListHashSetNode.2497"* }
%"class.blink::HeapListHashSetNode.2497" = type { %"class.blink::Member.2680", %"class.blink::Member.2495", %"class.blink::Member.2495" }
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2499" = type { %"class.WTF::ListHashSet.base.2509", [7 x i8] }
%"class.WTF::ListHashSet.base.2509" = type <{ %"class.WTF::HashTable.2504", %"class.blink::Member.2506", %"class.blink::Member.2506", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2504" = type <{ %"class.blink::Member.2506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2506" = type { %"class.blink::MemberBase.2507" }
%"class.blink::MemberBase.2507" = type { %"class.blink::HeapListHashSetNode.2508"* }
%"class.blink::HeapListHashSetNode.2508" = type { %"class.blink::Member.2676", %"class.blink::Member.2506", %"class.blink::Member.2506" }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2510" = type { %"class.WTF::ListHashSet.base.2520", [7 x i8] }
%"class.WTF::ListHashSet.base.2520" = type <{ %"class.WTF::HashTable.2515", %"class.blink::Member.2517", %"class.blink::Member.2517", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2515" = type <{ %"class.blink::Member.2517"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::HeapListHashSetNode.2519"* }
%"class.blink::HeapListHashSetNode.2519" = type { %"class.blink::Member.2672", %"class.blink::Member.2517", %"class.blink::Member.2517" }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2521" = type { %"class.WTF::ListHashSet.base.2531", [7 x i8] }
%"class.WTF::ListHashSet.base.2531" = type <{ %"class.WTF::HashTable.2526", %"class.blink::Member.2528", %"class.blink::Member.2528", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2526" = type <{ %"class.blink::Member.2528"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2528" = type { %"class.blink::MemberBase.2529" }
%"class.blink::MemberBase.2529" = type { %"class.blink::HeapListHashSetNode.2530"* }
%"class.blink::HeapListHashSetNode.2530" = type { %"class.blink::Member.2668", %"class.blink::Member.2528", %"class.blink::Member.2528" }
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2532" = type { %"class.WTF::ListHashSet.base.2542", [7 x i8] }
%"class.WTF::ListHashSet.base.2542" = type <{ %"class.WTF::HashTable.2537", %"class.blink::Member.2539", %"class.blink::Member.2539", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2537" = type <{ %"class.blink::Member.2539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2539" = type { %"class.blink::MemberBase.2540" }
%"class.blink::MemberBase.2540" = type { %"class.blink::HeapListHashSetNode.2541"* }
%"class.blink::HeapListHashSetNode.2541" = type { %"class.blink::Member.2664", %"class.blink::Member.2539", %"class.blink::Member.2539" }
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2543" = type { %"class.WTF::ListHashSet.base.2553", [7 x i8] }
%"class.WTF::ListHashSet.base.2553" = type <{ %"class.WTF::HashTable.2548", %"class.blink::Member.2550", %"class.blink::Member.2550", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2548" = type <{ %"class.blink::Member.2550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::HeapListHashSetNode.2552"* }
%"class.blink::HeapListHashSetNode.2552" = type { %"class.blink::Member.2660", %"class.blink::Member.2550", %"class.blink::Member.2550" }
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2554" = type { %"class.WTF::ListHashSet.base.2564", [7 x i8] }
%"class.WTF::ListHashSet.base.2564" = type <{ %"class.WTF::HashTable.2559", %"class.blink::Member.2561", %"class.blink::Member.2561", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2559" = type <{ %"class.blink::Member.2561"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2561" = type { %"class.blink::MemberBase.2562" }
%"class.blink::MemberBase.2562" = type { %"class.blink::HeapListHashSetNode.2563"* }
%"class.blink::HeapListHashSetNode.2563" = type { %"class.blink::Member.2585", %"class.blink::Member.2561", %"class.blink::Member.2561" }
%"class.blink::HeapListHashSet.2565" = type { %"class.WTF::ListHashSet.base.2575", [7 x i8] }
%"class.WTF::ListHashSet.base.2575" = type <{ %"class.WTF::HashTable.2570", %"class.blink::Member.2572", %"class.blink::Member.2572", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2570" = type <{ %"class.blink::Member.2572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2572" = type { %"class.blink::MemberBase.2573" }
%"class.blink::MemberBase.2573" = type { %"class.blink::HeapListHashSetNode.2574"* }
%"class.blink::HeapListHashSetNode.2574" = type { %"class.blink::Member.2577", %"class.blink::Member.2572", %"class.blink::Member.2572" }
%class.scoped_refptr.2576 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2589" = type { %"class.blink::MemberBase.2590" }
%"class.blink::MemberBase.2590" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2591" = type { %"class.blink::MemberBase.2592" }
%"class.blink::MemberBase.2592" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2593" }
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3299" }
%"class.mojo::Remote.3299" = type { %"class.mojo::internal::InterfacePtrState.3300" }
%"class.mojo::internal::InterfacePtrState.3300" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3301" }
%"class.std::__1::unique_ptr.3301" = type { %"class.std::__1::__compressed_pair.3302" }
%"class.std::__1::__compressed_pair.3302" = type { %"struct.std::__1::__compressed_pair_elem.3303" }
%"struct.std::__1::__compressed_pair_elem.3303" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2595" = type { %"class.std::__1::__compressed_pair.2596" }
%"class.std::__1::__compressed_pair.2596" = type { %"struct.std::__1::__compressed_pair_elem.2597" }
%"struct.std::__1::__compressed_pair_elem.2597" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2601" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2602" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2274" = type { %"class.absl::optional_internal::optional_data.2275" }
%"class.absl::optional_internal::optional_data.2275" = type { %"class.absl::optional_internal::optional_data_base.2276" }
%"class.absl::optional_internal::optional_data_base.2276" = type { %"class.absl::optional_internal::optional_data_dtor_base.2277" }
%"class.absl::optional_internal::optional_data_dtor_base.2277" = type { i8, %union.anon.2278 }
%union.anon.2278 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2608" = type { %"class.std::__1::__compressed_pair.2609" }
%"class.std::__1::__compressed_pair.2609" = type { %"struct.std::__1::__compressed_pair_elem.2610" }
%"struct.std::__1::__compressed_pair_elem.2610" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2614" }
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3309" }
%"class.mojo::AssociatedRemote.3309" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3310" }
%"class.mojo::internal::AssociatedInterfacePtrState.3310" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3311" }
%"class.std::__1::unique_ptr.3311" = type { %"class.std::__1::__compressed_pair.3312" }
%"class.std::__1::__compressed_pair.3312" = type { %"struct.std::__1::__compressed_pair_elem.3313" }
%"struct.std::__1::__compressed_pair_elem.3313" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2616" = type { %"class.blink::Member.2617" }
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3319" }
%"class.mojo::AssociatedRemote.3319" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3320" }
%"class.mojo::internal::AssociatedInterfacePtrState.3320" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3321" }
%"class.std::__1::unique_ptr.3321" = type { %"class.std::__1::__compressed_pair.3322" }
%"class.std::__1::__compressed_pair.3322" = type { %"struct.std::__1::__compressed_pair_elem.3323" }
%"struct.std::__1::__compressed_pair_elem.3323" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2619" }
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3329", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3329" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3330" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1655" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3330" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2621" = type { %"class.blink::Member.2622" }
%"class.blink::Member.2622" = type { %"class.blink::MemberBase.2623" }
%"class.blink::MemberBase.2623" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3333", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3334" }
%"class.blink::ThreadState::PrefinalizerRegistration.3333" = type { i8 }
%"class.mojo::AssociatedReceiver.3334" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3335" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2624" }
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3338", %"class.blink::Member.1857", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3338" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.1655", %"class.base::WeakPtrFactory.3339" }
%"class.base::WeakPtrFactory.3339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2626" = type { %"class.blink::Member.2627" }
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3342", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3343" }
%"class.blink::ThreadState::PrefinalizerRegistration.3342" = type { i8 }
%"class.mojo::AssociatedReceiver.3343" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3344" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3344" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapHashMap.2637"* }
%"class.blink::HeapHashMap.2637" = type opaque
%"class.mojo::StructPtr.2638" = type { %"class.std::__1::unique_ptr.2639" }
%"class.std::__1::unique_ptr.2639" = type { %"class.std::__1::__compressed_pair.2640" }
%"class.std::__1::__compressed_pair.2640" = type { %"struct.std::__1::__compressed_pair_elem.2641" }
%"struct.std::__1::__compressed_pair_elem.2641" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2642", %"class.mojo::InlinedStructPtr.2643" }
%"class.mojo::InlinedStructPtr.2642" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2643" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2649" = type { %"class.absl::optional_internal::optional_data.2650" }
%"class.absl::optional_internal::optional_data.2650" = type { %"class.absl::optional_internal::optional_data_base.2651" }
%"class.absl::optional_internal::optional_data_base.2651" = type { %"class.absl::optional_internal::optional_data_dtor_base.2652" }
%"class.absl::optional_internal::optional_data_dtor_base.2652" = type { i8, %union.anon.2653 }
%union.anon.2653 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1859" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1860", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1860" = type { %"class.blink::MemberBase.1861" }
%"class.absl::optional.1862" = type { %"class.absl::optional_internal::optional_data.1863" }
%"class.absl::optional_internal::optional_data.1863" = type { %"class.absl::optional_internal::optional_data_base.1864" }
%"class.absl::optional_internal::optional_data_base.1864" = type { %"class.absl::optional_internal::optional_data_dtor_base.1865" }
%"class.absl::optional_internal::optional_data_dtor_base.1865" = type { i8, %union.anon.1866 }
%union.anon.1866 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HeapHashSet.1871"* }
%"class.blink::HeapHashSet.1871" = type opaque
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.WTF::HashSet.1875"* }
%"class.WTF::HashSet.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::Member.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1890" = type opaque
%"class.blink::HeapHashSet.1891" = type { %"class.WTF::HashSet.1894" }
%"class.WTF::HashSet.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"class.blink::Member.1897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2103", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2113", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2105", %"class.blink::Member.2107", %"class.blink::Member.2109", %"class.blink::Member.2111", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2113" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2114", { i64, i64 } }
%"class.blink::WeakMember.2114" = type { %"class.blink::MemberBase.1898" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1899" = type { %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1909", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"struct.WTF::KeyValuePair.1912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1912" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1913", i32, i32 }
%"class.WTF::Vector.1913" = type { %"class.WTF::VectorBuffer.1914" }
%"class.WTF::VectorBuffer.1914" = type { %"class.WTF::VectorBufferBase.1915" }
%"class.WTF::VectorBufferBase.1915" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1917" = type { %"class.WTF::LinkedHashSet.1920" }
%"class.WTF::LinkedHashSet.1920" = type { %"class.WTF::HashMap.1921", %"class.WTF::VectorBackedLinkedList.1925" }
%"class.WTF::HashMap.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"struct.WTF::KeyValuePair.1924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1924" = type opaque
%"class.WTF::VectorBackedLinkedList.1925" = type { %"class.WTF::Vector.1926", i32, i32 }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %"class.WTF::VectorBackedLinkedListNode.1929"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1929" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1937" = type { %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1940, %class.scoped_refptr.1940, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1995", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2000", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1940 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1941", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1948" }
%"class.WTF::RefCounted.1941" = type { %"class.base::RefCounted.1942" }
%"class.base::RefCounted.1942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1943", i32, [4 x i8] }>
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1948" = type { %"class.WTF::VectorBuffer.1949" }
%"class.WTF::VectorBuffer.1949" = type { %"class.WTF::VectorBufferBase.1950" }
%"class.WTF::VectorBufferBase.1950" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1951", %"class.std::__1::unique_ptr.1967", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1954", %"class.WTF::Vector.1959", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1970", %"class.absl::optional.1970" }
%"class.absl::optional.1970" = type { %"class.absl::optional_internal::optional_data.1971" }
%"class.absl::optional_internal::optional_data.1971" = type { %"class.absl::optional_internal::optional_data_base.1972" }
%"class.absl::optional_internal::optional_data_base.1972" = type { %"class.absl::optional_internal::optional_data_dtor_base.1973" }
%"class.absl::optional_internal::optional_data_dtor_base.1973" = type { i8, [3 x i8], %union.anon.1974 }
%union.anon.1974 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1948"*, %"class.absl::optional.1980", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1980" = type { %"class.absl::optional_internal::optional_data.1981" }
%"class.absl::optional_internal::optional_data.1981" = type { %"class.absl::optional_internal::optional_data_base.1982" }
%"class.absl::optional_internal::optional_data_base.1982" = type { %"class.absl::optional_internal::optional_data_dtor_base.1983" }
%"class.absl::optional_internal::optional_data_dtor_base.1983" = type { i8, %union.anon.1984 }
%union.anon.1984 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1985", %"class.WTF::Vector.1990" }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987", [128 x i8] }
%"class.WTF::VectorBufferBase.1987" = type { i32*, i32, i32 }
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992", [128 x i8] }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1995" = type { %"class.WTF::VectorBuffer.1996" }
%"class.WTF::VectorBuffer.1996" = type { %"class.WTF::VectorBufferBase.1997" }
%"class.WTF::VectorBufferBase.1997" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2005", %"class.WTF::Vector.2010" }
%"class.WTF::HashMap.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"struct.WTF::KeyValuePair.2009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2009" = type opaque
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2024" = type { %"class.WTF::VectorBuffer.2025" }
%"class.WTF::VectorBuffer.2025" = type { %"class.WTF::VectorBufferBase.2026" }
%"class.WTF::VectorBufferBase.2026" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2029 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2036" = type { %"class.WTF::HashSet.2039" }
%"class.WTF::HashSet.2039" = type { %"class.WTF::HashTable.2040" }
%"class.WTF::HashTable.2040" = type <{ %"class.blink::WeakMember.2042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2042" = type opaque
%"class.blink::HeapHashSet.2043" = type { %"class.WTF::HashSet.2046" }
%"class.WTF::HashSet.2046" = type { %"class.WTF::HashTable.2047" }
%"class.WTF::HashTable.2047" = type <{ %"class.blink::WeakMember.2049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2049" = type opaque
%"class.std::__1::unique_ptr.2050" = type { %"class.std::__1::__compressed_pair.2051" }
%"class.std::__1::__compressed_pair.2051" = type { %"struct.std::__1::__compressed_pair_elem.2052" }
%"struct.std::__1::__compressed_pair_elem.2052" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2053" }
%"class.base::time_internal::TimeBase.2053" = type { i64 }
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2060", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2060" = type { %"class.absl::optional_internal::optional_data.2061" }
%"class.absl::optional_internal::optional_data.2061" = type { %"class.absl::optional_internal::optional_data_base.2062" }
%"class.absl::optional_internal::optional_data_base.2062" = type { %"class.absl::optional_internal::optional_data_dtor_base.2063" }
%"class.absl::optional_internal::optional_data_dtor_base.2063" = type { i8, %union.anon.2064 }
%union.anon.2064 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2068" = type { %"class.std::__1::__compressed_pair.2069" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.2070" }
%"struct.std::__1::__compressed_pair_elem.2070" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2074" = type { %"class.std::__1::__compressed_pair.2075" }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2080" = type { %"class.std::__1::__compressed_pair.2081" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.2082" }
%"struct.std::__1::__compressed_pair_elem.2082" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1844 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2086" = type { %"class.blink::PersistentBase.2087" }
%"class.blink::PersistentBase.2087" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2090", i64 }
%"class.blink::HeapVector.2090" = type { %"class.WTF::Vector.2093" }
%"class.WTF::Vector.2093" = type { %"class.WTF::VectorBuffer.2094" }
%"class.WTF::VectorBuffer.2094" = type { %"class.WTF::VectorBufferBase.2095", [368 x i8] }
%"class.WTF::VectorBufferBase.2095" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1897", i8, %"class.blink::Member.2096", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::HeapLinkedHashSet.2098"* }
%"class.blink::HeapLinkedHashSet.2098" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3345" }
%"class.WTF::Vector.3345" = type { %"class.WTF::VectorBuffer.3346" }
%"class.WTF::VectorBuffer.3346" = type { %"class.WTF::VectorBufferBase.3347" }
%"class.WTF::VectorBufferBase.3347" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2747", %"class.absl::optional.2747", %"class.absl::optional.2747" }
%"class.absl::optional.2747" = type { %"class.absl::optional_internal::optional_data.2748" }
%"class.absl::optional_internal::optional_data.2748" = type { %"class.absl::optional_internal::optional_data_base.2749" }
%"class.absl::optional_internal::optional_data_base.2749" = type { %"class.absl::optional_internal::optional_data_dtor_base.2750" }
%"class.absl::optional_internal::optional_data_dtor_base.2750" = type { i8, %union.anon.2751 }
%union.anon.2751 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3360" }
%"class.WTF::VectorBuffer.3360" = type { %"class.WTF::VectorBufferBase.3361", [32 x i8] }
%"class.WTF::VectorBufferBase.3361" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2931", %"class.blink::Persistent.2937", %"class.std::__1::unique_ptr.2961", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2977" }
%"class.std::__1::unique_ptr.2931" = type { %"class.std::__1::__compressed_pair.2932" }
%"class.std::__1::__compressed_pair.2932" = type { %"struct.std::__1::__compressed_pair_elem.2933" }
%"struct.std::__1::__compressed_pair_elem.2933" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2937" = type { %"class.blink::PersistentBase.2938" }
%"class.blink::PersistentBase.2938" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2943", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2956" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2941", %"class.blink::Member.1897", %"class.blink::Member.1897", i8, [7 x i8] }>
%"class.blink::Member.2941" = type { %"class.blink::MemberBase.2942" }
%"class.blink::MemberBase.2942" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2103", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2943" = type { %"class.std::__1::__compressed_pair.2944" }
%"class.std::__1::__compressed_pair.2944" = type { %"struct.std::__1::__compressed_pair_elem.2945" }
%"struct.std::__1::__compressed_pair_elem.2945" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2946", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1959" }
%"class.WTF::HashMap.2946" = type { %"class.WTF::HashTable.2947" }
%"class.WTF::HashTable.2947" = type <{ %"struct.WTF::KeyValuePair.2950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2950" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2954" }
%"class.blink::Member.2954" = type { %"class.blink::MemberBase.2955" }
%"class.blink::MemberBase.2955" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2954" }
%"class.absl::optional.2956" = type { %"class.absl::optional_internal::optional_data.2957" }
%"class.absl::optional_internal::optional_data.2957" = type { %"class.absl::optional_internal::optional_data_base.2958" }
%"class.absl::optional_internal::optional_data_base.2958" = type { %"class.absl::optional_internal::optional_data_dtor_base.2959" }
%"class.absl::optional_internal::optional_data_dtor_base.2959" = type { i8, %union.anon.2960 }
%union.anon.2960 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.2961" = type { %"class.std::__1::__compressed_pair.2962" }
%"class.std::__1::__compressed_pair.2962" = type { %"struct.std::__1::__compressed_pair_elem.2963" }
%"struct.std::__1::__compressed_pair_elem.2963" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2964", %"class.WTF::Vector.2964", %"class.WTF::HashMap.2969", %"class.WTF::Vector.2964", i8, [7 x i8] }>
%"class.WTF::HashMap.2969" = type { %"class.WTF::HashTable.2970" }
%"class.WTF::HashTable.2970" = type <{ %"struct.WTF::KeyValuePair.2973"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2973" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2964" }
%"class.WTF::Vector.2964" = type { %"class.WTF::VectorBuffer.2965" }
%"class.WTF::VectorBuffer.2965" = type { %"class.WTF::VectorBufferBase.2966" }
%"class.WTF::VectorBufferBase.2966" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2977" = type { %"class.std::__1::__compressed_pair.2978" }
%"class.std::__1::__compressed_pair.2978" = type { %"struct.std::__1::__compressed_pair_elem.2979" }
%"struct.std::__1::__compressed_pair_elem.2979" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2980", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2986", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2992", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2980" = type { %"class.std::__1::__compressed_pair.2981" }
%"class.std::__1::__compressed_pair.2981" = type { %"struct.std::__1::__compressed_pair_elem.2982" }
%"struct.std::__1::__compressed_pair_elem.2982" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2986" = type { %"class.std::__1::__compressed_pair.2987" }
%"class.std::__1::__compressed_pair.2987" = type { %"struct.std::__1::__compressed_pair_elem.2988" }
%"struct.std::__1::__compressed_pair_elem.2988" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type <{ %"class.blink::GraphicsLayerClient", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.blink::IntSize", %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.std::__1::unique_ptr.2999", %"class.blink::IntSize", %"class.WTF::Vector.3206", %"class.WTF::Vector.3206", %"struct.blink::PhysicalRect", i8, [7 x i8] }>
%"class.blink::GraphicsLayerClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2999" = type { %"class.std::__1::__compressed_pair.3000" }
%"class.std::__1::__compressed_pair.3000" = type { %"struct.std::__1::__compressed_pair_elem.3001" }
%"struct.std::__1::__compressed_pair_elem.3001" = type { %"class.blink::GraphicsLayer"* }
%"class.blink::GraphicsLayer" = type { %"class.blink::DisplayItemClient.base", %"class.blink::LayerAsJSONClient", %"class.cc::ContentLayerClient", %"class.blink::GraphicsLayerClient"*, %"class.blink::IntSize", %"class.blink::TransformationMatrix", i8, i32, %"class.WTF::Vector.3002", %"class.blink::GraphicsLayer"*, %"class.blink::IntRect", %class.scoped_refptr.3007, %class.scoped_refptr.3008, %class.scoped_refptr.3067, i32, %"class.std::__1::unique_ptr.1937", %"class.blink::IntRect", %"class.std::__1::unique_ptr.3163", %"class.std::__1::unique_ptr.3163", %"class.std::__1::unique_ptr.3169", %"class.base::RepeatingCallback.3202", i32, i64 }
%"class.blink::LayerAsJSONClient" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.WTF::Vector.3002" = type { %"class.WTF::VectorBuffer.3003" }
%"class.WTF::VectorBuffer.3003" = type { %"class.WTF::VectorBufferBase.3004" }
%"class.WTF::VectorBufferBase.3004" = type { %"class.blink::GraphicsLayer"**, i32, i32 }
%class.scoped_refptr.3007 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.3008 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.3009", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.3027", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.3047" }>
%"class.base::RefCounted.3009" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.3010", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.3010" = type { %"class.std::__1::__vector_base.3011" }
%"class.std::__1::__vector_base.3011" = type { %class.scoped_refptr.3008*, %class.scoped_refptr.3008*, %"class.std::__1::__compressed_pair.3012" }
%"class.std::__1::__compressed_pair.3012" = type { %"struct.std::__1::__compressed_pair_elem.3013" }
%"struct.std::__1::__compressed_pair_elem.3013" = type { %class.scoped_refptr.3008* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.3017" }
%"class.base::flat_map.3017" = type { %"class.base::internal::flat_tree.3018" }
%"class.base::internal::flat_tree.3018" = type { %"class.std::__1::vector.3019" }
%"class.std::__1::vector.3019" = type { %"class.std::__1::__vector_base.3020" }
%"class.std::__1::__vector_base.3020" = type { %"struct.std::__1::pair.3021"*, %"struct.std::__1::pair.3021"*, %"class.std::__1::__compressed_pair.3022" }
%"struct.std::__1::pair.3021" = type opaque
%"class.std::__1::__compressed_pair.3022" = type { %"struct.std::__1::__compressed_pair_elem.3023" }
%"struct.std::__1::__compressed_pair_elem.3023" = type { %"struct.std::__1::pair.3021"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.3027" = type { %"class.std::__1::__compressed_pair.3028" }
%"class.std::__1::__compressed_pair.3028" = type { %"struct.std::__1::__compressed_pair_elem.3029" }
%"struct.std::__1::__compressed_pair_elem.3029" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.3030", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.3035", %"class.std::__1::vector.3036" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.3030" = type { %"class.absl::optional_internal::optional_data.3031" }
%"class.absl::optional_internal::optional_data.3031" = type { %"class.absl::optional_internal::optional_data_base.3032" }
%"class.absl::optional_internal::optional_data_base.3032" = type { %"class.absl::optional_internal::optional_data_dtor_base.3033" }
%"class.absl::optional_internal::optional_data_dtor_base.3033" = type { i8, %union.anon.3034 }
%union.anon.3034 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.3035" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.3036" = type { %"class.std::__1::__vector_base.3037" }
%"class.std::__1::__vector_base.3037" = type { %"class.std::__1::unique_ptr.3038"*, %"class.std::__1::unique_ptr.3038"*, %"class.std::__1::__compressed_pair.3039" }
%"class.std::__1::unique_ptr.3038" = type opaque
%"class.std::__1::__compressed_pair.3039" = type { %"struct.std::__1::__compressed_pair_elem.3040" }
%"struct.std::__1::__compressed_pair_elem.3040" = type { %"class.std::__1::unique_ptr.3038"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.3047" = type { %"class.std::__1::__compressed_pair.3048" }
%"class.std::__1::__compressed_pair.3048" = type { %"struct.std::__1::__compressed_pair_elem.3049" }
%"struct.std::__1::__compressed_pair_elem.3049" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.3050", %"class.std::__1::vector.3050", %"class.std::__1::vector.3057" }
%"class.std::__1::vector.3050" = type { %"class.std::__1::__vector_base.3051" }
%"class.std::__1::__vector_base.3051" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3052" }
%"class.std::__1::__compressed_pair.3052" = type { %"struct.std::__1::__compressed_pair_elem.3053" }
%"struct.std::__1::__compressed_pair_elem.3053" = type { i8** }
%"class.std::__1::vector.3057" = type { %"class.std::__1::__vector_base.3058" }
%"class.std::__1::__vector_base.3058" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.3059" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3059" = type { %"struct.std::__1::__compressed_pair_elem.3060" }
%"struct.std::__1::__compressed_pair_elem.3060" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%class.scoped_refptr.3067 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.3068", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.824", %"class.std::__1::vector.3149", %"class.std::__1::vector.3156", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.3068" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.3069", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.3069" = type { %"class.std::__1::__vector_base.3070" }
%"class.std::__1::__vector_base.3070" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.3071" }
%"class.std::__1::__compressed_pair.3071" = type { %"struct.std::__1::__compressed_pair_elem.3072" }
%"struct.std::__1::__compressed_pair_elem.3072" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.3076", %"class.std::__1::vector.3086", %"class.base::flat_map.3100", i8, i8, [6 x i8], %"class.cc::RTree.3110", %"class.std::__1::vector.3141" }
%"class.base::flat_map.3076" = type { %"class.base::internal::flat_tree.3077" }
%"class.base::internal::flat_tree.3077" = type { %"class.std::__1::vector.3078" }
%"class.std::__1::vector.3078" = type { %"class.std::__1::__vector_base.3079" }
%"class.std::__1::__vector_base.3079" = type { %"struct.std::__1::pair.3080"*, %"struct.std::__1::pair.3080"*, %"class.std::__1::__compressed_pair.3081" }
%"struct.std::__1::pair.3080" = type opaque
%"class.std::__1::__compressed_pair.3081" = type { %"struct.std::__1::__compressed_pair_elem.3082" }
%"struct.std::__1::__compressed_pair_elem.3082" = type { %"struct.std::__1::pair.3080"* }
%"class.std::__1::vector.3086" = type { %"class.std::__1::__vector_base.3087" }
%"class.std::__1::__vector_base.3087" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.3095" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.3088", i32, i32 }
%"class.std::__1::vector.3088" = type { %"class.std::__1::__vector_base.3089" }
%"class.std::__1::__vector_base.3089" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.3090" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.3090" = type { %"struct.std::__1::__compressed_pair_elem.3091" }
%"struct.std::__1::__compressed_pair_elem.3091" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.3095" = type { %"struct.std::__1::__compressed_pair_elem.3096" }
%"struct.std::__1::__compressed_pair_elem.3096" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.3100" = type { %"class.base::internal::flat_tree.3101" }
%"class.base::internal::flat_tree.3101" = type { %"class.std::__1::vector.3102" }
%"class.std::__1::vector.3102" = type { %"class.std::__1::__vector_base.3103" }
%"class.std::__1::__vector_base.3103" = type { %"struct.std::__1::pair.3104"*, %"struct.std::__1::pair.3104"*, %"class.std::__1::__compressed_pair.3105" }
%"struct.std::__1::pair.3104" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3105" = type { %"struct.std::__1::__compressed_pair_elem.3106" }
%"struct.std::__1::__compressed_pair_elem.3106" = type { %"struct.std::__1::pair.3104"* }
%"class.cc::RTree.3110" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.3133", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.3123", %"class.absl::optional.3128", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.3111, %class.sk_sp.3114, %"class.gfx::Rect", i32, %class.sk_sp.3119, %class.sk_sp.3120, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.3111, %class.scoped_refptr.3121 }
%class.sk_sp.3114 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.3119 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.3088" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3112, i32, i32 }
%class.sk_sp.3112 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.3113, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.3113 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.3120 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3111 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.3121 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3122", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3122" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.3123" = type { %"class.absl::optional_internal::optional_data.3124" }
%"class.absl::optional_internal::optional_data.3124" = type { %"class.absl::optional_internal::optional_data_base.3125" }
%"class.absl::optional_internal::optional_data_base.3125" = type { %"class.absl::optional_internal::optional_data_dtor_base.3126" }
%"class.absl::optional_internal::optional_data_dtor_base.3126" = type { i8, %union.anon.3127 }
%union.anon.3127 = type { i64 }
%"class.absl::optional.3128" = type { %"class.absl::optional_internal::optional_data.3129" }
%"class.absl::optional_internal::optional_data.3129" = type { %"class.absl::optional_internal::optional_data_base.3130" }
%"class.absl::optional_internal::optional_data_base.3130" = type { %"class.absl::optional_internal::optional_data_dtor_base.3131" }
%"class.absl::optional_internal::optional_data_dtor_base.3131" = type { i8, %union.anon.3132 }
%union.anon.3132 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.3133" = type { %"class.std::__1::__vector_base.3134" }
%"class.std::__1::__vector_base.3134" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.3135" }
%"class.std::__1::__compressed_pair.3135" = type { %"struct.std::__1::__compressed_pair_elem.3136" }
%"struct.std::__1::__compressed_pair_elem.3136" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.3141" = type { %"class.std::__1::__vector_base.3142" }
%"class.std::__1::__vector_base.3142" = type { %"struct.std::__1::pair.3143"*, %"struct.std::__1::pair.3143"*, %"class.std::__1::__compressed_pair.3144" }
%"struct.std::__1::pair.3143" = type opaque
%"class.std::__1::__compressed_pair.3144" = type { %"struct.std::__1::__compressed_pair_elem.3145" }
%"struct.std::__1::__compressed_pair_elem.3145" = type { %"struct.std::__1::pair.3143"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.3115", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.3115" = type { %"class.std::__1::__compressed_pair.3116" }
%"class.std::__1::__compressed_pair.3116" = type { %"struct.std::__1::__compressed_pair_elem.3117" }
%"struct.std::__1::__compressed_pair_elem.3117" = type { i8* }
%"class.std::__1::vector.3149" = type { %"class.std::__1::__vector_base.3150" }
%"class.std::__1::__vector_base.3150" = type { i64*, i64*, %"class.std::__1::__compressed_pair.3151" }
%"class.std::__1::__compressed_pair.3151" = type { %"struct.std::__1::__compressed_pair_elem.3152" }
%"struct.std::__1::__compressed_pair_elem.3152" = type { i64* }
%"class.std::__1::vector.3156" = type { %"class.std::__1::__vector_base.3157" }
%"class.std::__1::__vector_base.3157" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.3158" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.3158" = type { %"struct.std::__1::__compressed_pair_elem.3159" }
%"struct.std::__1::__compressed_pair_elem.3159" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.std::__1::unique_ptr.3163" = type { %"class.std::__1::__compressed_pair.3164" }
%"class.std::__1::__compressed_pair.3164" = type { %"struct.std::__1::__compressed_pair_elem.3165" }
%"struct.std::__1::__compressed_pair_elem.3165" = type { %"struct.blink::GraphicsLayer::LayerState"* }
%"struct.blink::GraphicsLayer::LayerState" = type { %"class.blink::RefCountedPropertyTreeState", %"class.blink::IntPoint" }
%"class.std::__1::unique_ptr.3169" = type { %"class.std::__1::__compressed_pair.3170" }
%"class.std::__1::__compressed_pair.3170" = type { %"struct.std::__1::__compressed_pair_elem.3171" }
%"struct.std::__1::__compressed_pair_elem.3171" = type { %"class.blink::RasterInvalidator"* }
%"class.blink::RasterInvalidator" = type { %"class.gfx::Rect", %"class.WTF::Vector.3172", %class.scoped_refptr.3177, %"class.std::__1::unique_ptr.3178" }
%"class.WTF::Vector.3172" = type { %"class.WTF::VectorBuffer.3173" }
%"class.WTF::VectorBuffer.3173" = type { %"class.WTF::VectorBufferBase.3174" }
%"class.WTF::VectorBufferBase.3174" = type { %"struct.blink::RasterInvalidator::PaintChunkInfo"*, i32, i32 }
%"struct.blink::RasterInvalidator::PaintChunkInfo" = type { i32, %"class.blink::IntRect", %"class.blink::FloatClipRect", %class.SkMatrix }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.scoped_refptr.3177 = type { %"class.blink::PaintArtifact"* }
%"class.std::__1::unique_ptr.3178" = type { %"class.std::__1::__compressed_pair.3179" }
%"class.std::__1::__compressed_pair.3179" = type { %"struct.std::__1::__compressed_pair_elem.3180" }
%"struct.std::__1::__compressed_pair_elem.3180" = type { %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* }
%"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo" = type { %"class.WTF::HashMap.3181", %"class.blink::RasterInvalidationTracking" }
%"class.WTF::HashMap.3181" = type { %"class.WTF::HashTable.3182" }
%"class.WTF::HashTable.3182" = type <{ %"struct.WTF::KeyValuePair.3185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3185" = type opaque
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector.3186", %class.sk_sp.3114, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.3191", %class.sk_sp.3114 }
%"class.WTF::Vector.3186" = type { %"class.WTF::VectorBuffer.3187" }
%"class.WTF::VectorBuffer.3187" = type { %"class.WTF::VectorBufferBase.3188" }
%"class.WTF::VectorBufferBase.3188" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.WTF::Vector.3191" = type { %"class.WTF::VectorBuffer.3192" }
%"class.WTF::VectorBuffer.3192" = type { %"class.WTF::VectorBufferBase.3193" }
%"class.WTF::VectorBufferBase.3193" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%"class.base::RepeatingCallback.3202" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.WTF::Vector.3206" = type { %"class.WTF::VectorBuffer.3207" }
%"class.WTF::VectorBuffer.3207" = type { %"class.WTF::VectorBufferBase.3208" }
%"class.WTF::VectorBufferBase.3208" = type { %"struct.blink::GraphicsLayerPaintInfo"*, i32, i32 }
%"struct.blink::GraphicsLayerPaintInfo" = type <{ %"class.blink::PaintLayer"*, %"struct.blink::PhysicalRect", %"class.blink::ClipRect", [4 x i8], %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::IntSize", i8, [7 x i8] }>
%"class.blink::ClipRect" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.blink::Persistent.2992" = type { %"class.blink::PersistentBase.2993" }
%"class.blink::PersistentBase.2993" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.3222", i8* }
%"class.WTF::StringAppend.3222" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutFileUploadControl" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3384" }
%"class.WTF::Vector.3384" = type { %"class.WTF::VectorBuffer.3385" }
%"class.WTF::VectorBuffer.3385" = type { %"class.WTF::VectorBufferBase.3386", [64 x i8] }
%"class.WTF::VectorBufferBase.3386" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.3392", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.3393", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.3392" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.3393" = type { %"class.absl::optional_internal::optional_data.3394" }
%"class.absl::optional_internal::optional_data.3394" = type { %"class.absl::optional_internal::optional_data_base.3395" }
%"class.absl::optional_internal::optional_data_base.3395" = type { %"class.absl::optional_internal::optional_data_dtor_base.3396" }
%"class.absl::optional_internal::optional_data_dtor_base.3396" = type { i8, %union.anon.3397 }
%union.anon.3397 = type { %"class.blink::FloatSize" }
%"class.WTF::StringTypeAdapter.3430" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.3248, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.3248 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.3249, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.3249 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.3250", %class.scoped_refptr.3252, i32, i32, i32, i32, float, i32, [0 x %struct.anon.3253] }
%"class.WTF::RefCounted.3250" = type { %"class.base::RefCounted.3251" }
%"class.base::RefCounted.3251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3252 = type { %"class.blink::SimpleFontData"* }
%struct.anon.3253 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.3262 }
%union.anon.3262 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::LayoutSVGShape" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::FloatRect", %"class.blink::FloatRect", %"class.blink::AffineTransform", %"class.std::__1::unique_ptr.666", %"class.std::__1::unique_ptr.3223", %"class.std::__1::unique_ptr.666", i8, i8, [6 x i8] }>
%"class.blink::LayoutSVGModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.std::__1::unique_ptr.3223" = type { %"class.std::__1::__compressed_pair.3224" }
%"class.std::__1::__compressed_pair.3224" = type { %"struct.std::__1::__compressed_pair_elem.3225" }
%"struct.std::__1::__compressed_pair_elem.3225" = type { %"struct.blink::LayoutSVGShapeRareData"* }
%"struct.blink::LayoutSVGShapeRareData" = type { %"class.blink::Path", %"class.blink::AffineTransform" }
%"class.blink::LayoutSVGRoot" = type <{ %"class.blink::LayoutReplaced", %"class.blink::SVGContentContainer", %"class.blink::LayoutSize", %"class.blink::AffineTransform", i8, [7 x i8] }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::SVGContentContainer" = type { %"class.blink::LayoutObjectChildList", %"class.blink::FloatRect", %"class.blink::FloatRect" }
%"class.blink::LayoutSVGText" = type { %"class.blink::LayoutSVGBlock.base", i8, %"class.WTF::Vector.3229" }
%"class.blink::LayoutSVGBlock.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.blink::AffineTransform", i8 }>
%"class.WTF::Vector.3229" = type { %"class.WTF::VectorBuffer.3230" }
%"class.WTF::VectorBuffer.3230" = type { %"class.WTF::VectorBufferBase.3231" }
%"class.WTF::VectorBufferBase.3231" = type { %"class.blink::LayoutSVGInlineText"**, i32, i32 }
%"class.blink::LayoutSVGInlineText" = type { %"class.blink::LayoutText", float, %"class.blink::Font", %"class.WTF::HashMap.3234", %"class.WTF::Vector.3239" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.3232 }
%union.anon.3232 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.3233" }
%"class.blink::InlineBoxList.3233" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.WTF::HashMap.3234" = type { %"class.WTF::HashTable.3235" }
%"class.WTF::HashTable.3235" = type <{ %"struct.WTF::KeyValuePair.3238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3238" = type opaque
%"class.WTF::Vector.3239" = type { %"class.WTF::VectorBuffer.3240" }
%"class.WTF::VectorBuffer.3240" = type { %"class.WTF::VectorBufferBase.3241" }
%"class.WTF::VectorBufferBase.3241" = type { %"class.blink::SVGTextMetrics"*, i32, i32 }
%"class.blink::SVGTextMetrics" = type { float, float, i32 }
%"class.blink::LayoutSVGInline" = type { %"class.blink::LayoutInline" }
%"class.blink::LayoutSVGImage" = type { %"class.blink::LayoutSVGModelObject", i8, %"class.blink::AffineTransform", %"class.blink::FloatRect", %"class.blink::Persistent.3246" }
%"class.blink::Persistent.3246" = type { %"class.blink::PersistentBase.3247" }
%"class.blink::PersistentBase.3247" = type { %"class.blink::LayoutImageResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::LayoutImageResource" = type opaque
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type <{ %"class.blink::LayoutReplaced", i32, [4 x i8] }>
%"class.blink::FrameView" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8, i8 }>
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::PaintLayerPaintOrderIterator" = type { %"class.blink::PaintLayer"*, i32, i32, %"class.blink::PaintLayer"* }
%"class.blink::ClipRectsContext" = type { %"class.blink::PaintLayer"*, %"class.blink::FragmentData"*, i32, %"struct.blink::PhysicalOffset", i32 }
%"class.blink::PaintLayerClipper" = type <{ %"class.blink::PaintLayer"*, i8, [7 x i8] }>
%"class.blink::PrintContext" = type <{ i32 (...)**, %"class.blink::Member.1857", %"class.WTF::Vector.1959", i8, i8, [6 x i8], %"class.blink::HeapHashMap.3265", i8, [7 x i8] }>
%"class.blink::HeapHashMap.3265" = type { %"class.WTF::HashMap.3268" }
%"class.WTF::HashMap.3268" = type { %"class.WTF::HashTable.3269" }
%"class.WTF::HashTable.3269" = type <{ %"struct.WTF::KeyValuePair.3271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3271" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3402", %"class.blink::Member.3404", %"class.blink::Member.3406", %"class.blink::Member.3425", %"class.blink::Member.3427" }
%"class.blink::Member.3402" = type { %"class.blink::MemberBase.3403" }
%"class.blink::MemberBase.3403" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3404" = type { %"class.blink::MemberBase.3405" }
%"class.blink::MemberBase.3405" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3406" = type { %"class.blink::MemberBase.3407" }
%"class.blink::MemberBase.3407" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3410", %"class.blink::HeapHashSet.3419" }
%"class.blink::HeapVector.3410" = type { %"class.WTF::Vector.3413" }
%"class.WTF::Vector.3413" = type { %"class.WTF::VectorBuffer.3414" }
%"class.WTF::VectorBuffer.3414" = type { %"class.WTF::VectorBufferBase.3415" }
%"class.WTF::VectorBufferBase.3415" = type { %"class.blink::Member.3416"*, i32, i32 }
%"class.blink::Member.3416" = type { %"class.blink::MemberBase.3417" }
%"class.blink::MemberBase.3417" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3419" = type { %"class.WTF::HashSet.3422" }
%"class.WTF::HashSet.3422" = type { %"class.WTF::HashTable.3423" }
%"class.WTF::HashTable.3423" = type <{ %"class.blink::Member.3416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3425" = type { %"class.blink::MemberBase.3426" }
%"class.blink::MemberBase.3426" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3427" = type { %"class.blink::MemberBase.3428" }
%"class.blink::MemberBase.3428" = type { %"class.blink::HeapHashSet.3429"* }
%"class.blink::HeapHashSet.3429" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.WTF::StringTypeAdapter.3431" = type { %"class.WTF::StringTypeAdapter.3432" }
%"class.WTF::StringTypeAdapter.3432" = type { %"class.WTF::StringView" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

@.str = private unnamed_addr constant [7 x i8] c"\5Cx{%X}\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c" zI: \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c" {\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c" [color=\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c" [bgcolor=\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c" [textFillColor=\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c" [textStrokeColor=\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c" [textStrokeWidth=\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c" [border:\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c" none\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"px \00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c" [r=\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c" c=\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c" rs=\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c" cs=\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"bullet\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"black square\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"white bullet\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c" id=\22\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c" class=\22\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c" (needs layout:\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c" self\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c" positioned movement\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c" child\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c" positioned child\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c" (display-locked)\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c" negative z-order list(\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c" normal flow list(\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c" positive z-order list(\00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.40 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.43 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.44 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.46 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"+ \00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c" pos=(\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c" size=(\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c" baseline=\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"\5C\22\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c" range=(\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c" \22\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.57 = private unnamed_addr constant [12 x i8] c"fragments:\0A\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c" paint_offset=(\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c" state=(\00", align 1
@.str.61 = private unnamed_addr constant [13 x i8] c" cull_rect=(\00", align 1
@.str.62 = private unnamed_addr constant [23 x i8] c") contents_cull_rect=(\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase28is_cull_rect_update_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E = external local_unnamed_addr global i8, align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"text run at (\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c") width \00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c" RTL\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c" LTR\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c" override\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c" + hyphen string \00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PaintLayer *]\00", align 1
@.str.69 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"hidden \00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"layer \00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c" backgroundClip \00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c" clip \00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c" transparent\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c" scrollX \00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c" scrollY \00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c" scrollWidth \00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c" scrollHeight \00", align 1
@.str.79 = private unnamed_addr constant [28 x i8] c" layerType: background only\00", align 1
@.str.80 = private unnamed_addr constant [28 x i8] c" layerType: foreground only\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c" blendMode: \00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c" (composited, bounds=\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c", drawsContent=\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c", isolatesCompositedBlending\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c" needsRepaint\00", align 1
@.str.86 = private unnamed_addr constant [17 x i8] c"caret: position \00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c" (upstream affinity)\00", align 1
@.str.89 = private unnamed_addr constant [27 x i8] c"selection start: position \00", align 1
@.str.90 = private unnamed_addr constant [27 x i8] c"selection end:   position \00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"child \00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"document\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.95 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.96 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %7 = bitcast %union.anon.3211* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %10, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 34) #8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %12 = bitcast i16* %2 to i8*
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %union.anon.3211* %6 to i16**
  %16 = bitcast %union.anon.3211* %6 to %"class.WTF::Vector.3217"*
  br label %17

17:                                               ; preds = %102, %1
  %18 = phi i32 [ 0, %1 ], [ %103, %102 ]
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i32 [ %23, %21 ], [ 0, %17 ]
  %26 = icmp eq i32 %18, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %24
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 34) #8
  %28 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %27, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #8
  ret %"class.WTF::StringImpl"* %28

45:                                               ; preds = %24
  br i1 %20, label %100, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %48, %18
  br i1 %49, label %50, label %100

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  br i1 %54, label %62, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.WTF::StringImpl"* %55 to i8*
  %58 = zext i32 %18 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  br label %67

62:                                               ; preds = %50
  %63 = bitcast %"class.WTF::StringImpl"* %55 to i16*
  %64 = zext i32 %18 to i64
  %65 = getelementptr inbounds i16, i16* %63, i64 %64
  %66 = load i16, i16* %65, align 2
  br label %67

67:                                               ; preds = %56, %62
  %68 = phi i16 [ %61, %56 ], [ %66, %62 ]
  switch i16 %68, label %72 [
    i16 92, label %69
    i16 34, label %70
    i16 10, label %71
    i16 160, label %71
  ]

69:                                               ; preds = %67
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 92) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 92) #8
  br label %102

70:                                               ; preds = %67
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 92) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 34) #8
  br label %102

71:                                               ; preds = %67, %67
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 32) #8
  br label %102

72:                                               ; preds = %67
  %73 = zext i16 %68 to i32
  %74 = add i16 %68, -32
  %75 = icmp ult i16 %74, 95
  br i1 %75, label %76, label %100

76:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12)
  store i16 %68, i16* %2, align 2
  %77 = load i8, i8* %9, align 4, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = trunc i16 %68 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext %80) #8
  br label %99

81:                                               ; preds = %76
  %82 = load i8, i8* %10, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %3, i32 1) #8
  br label %85

85:                                               ; preds = %81, %84
  %86 = load i32, i32* %13, align 4
  %87 = load i32, i32* %14, align 8
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %95, label %89, !prof !3

89:                                               ; preds = %85
  %90 = load i16*, i16** %15, align 8
  %91 = zext i32 %86 to i64
  %92 = getelementptr inbounds i16, i16* %90, i64 %91
  store i16 %68, i16* %92, align 2
  %93 = load i32, i32* %13, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %13, align 4
  br label %96

95:                                               ; preds = %85
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3217"* %16, i16* nonnull dereferenceable(2) %2) #8
  br label %96

96:                                               ; preds = %95, %89
  %97 = load i32, i32* %8, align 8
  %98 = add i32 %97, 1
  store i32 %98, i32* %8, align 8
  br label %99

99:                                               ; preds = %79, %96
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12)
  br label %102

100:                                              ; preds = %46, %45, %72
  %101 = phi i32 [ %73, %72 ], [ 0, %45 ], [ 0, %46 ]
  call void (%"class.WTF::StringBuilder"*, i8*, ...) @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %101) #8
  br label %102

102:                                              ; preds = %70, %99, %100, %71, %69
  %103 = add i32 %18, 1
  br label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_5ColorE(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* %1) #8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret %"class.WTF::TextStream"* %7
}

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16LayoutTreeAsText17WriteLayoutObjectERN3WTF10TextStreamERKNS_12LayoutObjectEj(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %"struct.blink::PhysicalRect"*
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::Color", align 4
  %20 = alloca %"class.blink::Color", align 4
  %21 = alloca %"class.blink::Color", align 4
  %22 = alloca %"class.blink::Color", align 4
  %23 = alloca %"class.blink::LayoutUnit", align 4
  %24 = alloca %"class.blink::Color", align 4
  %25 = alloca %"class.blink::LayoutUnit", align 4
  %26 = alloca %"class.blink::Color", align 4
  %27 = alloca %"class.blink::LayoutUnit", align 4
  %28 = alloca %"class.blink::Color", align 4
  %29 = alloca %"class.blink::LayoutUnit", align 4
  %30 = alloca %"class.blink::Color", align 4
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::StringAppend", align 8
  %37 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject13DecoratedNameEv(%"class.blink::LayoutObject"* %1) #8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %13) #8
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #8
  br label %56

56:                                               ; preds = %3, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %57 = and i32 %2, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %61 = bitcast %"class.blink::LayoutObject"* %1 to i8*
  %62 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKv(%"class.WTF::TextStream"* %60, i8* %61) #8
  br label %63

63:                                               ; preds = %56, %59
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %66 = icmp eq %"class.blink::ComputedStyle"* %65, null
  br i1 %66, label %82, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 5, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %69, i64 0, i32 10
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %67
  %74 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #8
  %75 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %76 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %76, i64 0, i32 5, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %78, i64 0, i32 10
  %80 = load i32, i32* %79, align 4
  %81 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %74, i32 %80) #8
  br label %82

82:                                               ; preds = %67, %63, %73
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to i96*
  %85 = load i96, i96* %84, align 4
  %86 = and i96 %85, 16777216
  %87 = icmp eq i96 %86, 0
  br i1 %87, label %88, label %147

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %147, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %94, align 8
  %95 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95)
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %97, i64 0, i32 2, i32 0, i32 0
  %99 = load %"class.blink::Document"*, %"class.blink::Document"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %99, i64 0, i32 0, i32 0
  %101 = icmp eq %"class.blink::Node"* %100, %90
  br i1 %101, label %102, label %103

102:                                              ; preds = %92
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.44, i64 0, i64 0), i64 0) #8
  br label %118

103:                                              ; preds = %92
  %104 = bitcast %"class.blink::Node"* %90 to i32 (%"class.blink::Node"*)***
  %105 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %104, align 8
  %106 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %105, i64 30
  %107 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %106, align 8
  %108 = call i32 %107(%"class.blink::Node"* nonnull %90) #8
  %109 = icmp eq i32 %108, 8
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i64 7) #8
  br label %118

111:                                              ; preds = %103
  %112 = bitcast %"class.blink::Node"* %90 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %113 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %112, align 8
  %114 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %113, i64 27
  %115 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %114, align 8
  %116 = call %"class.WTF::StringImpl"* %115(%"class.blink::Node"* nonnull %90) #8
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %117, align 8
  br label %118

118:                                              ; preds = %102, %110, %111
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95)
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %94, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %146, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %122
  %127 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #8
  %128 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %127, %"class.WTF::String"* nonnull dereferenceable(8) %14) #8
  %129 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #8
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %122, %126
  %133 = phi %"class.WTF::StringImpl"* [ %130, %126 ], [ %120, %122 ]
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %132
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i32 [ %141, %140 ], [ %139, %132 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %146

146:                                              ; preds = %118, %126, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %147

147:                                              ; preds = %82, %88, %146
  %148 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #8
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %150 = bitcast %"class.blink::LayoutObject"* %1 to { i64, i64 } (%"class.blink::LayoutObject"*)***
  %151 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 16, i1 false)
  %152 = load { i64, i64 } (%"class.blink::LayoutObject"*)**, { i64, i64 } (%"class.blink::LayoutObject"*)*** %150, align 8
  %153 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutObject"*)*, { i64, i64 } (%"class.blink::LayoutObject"*)** %152, i64 90
  %154 = load { i64, i64 } (%"class.blink::LayoutObject"*)*, { i64, i64 } (%"class.blink::LayoutObject"*)** %153, align 8
  %155 = call { i64, i64 } %154(%"class.blink::LayoutObject"* %1) #8
  %156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %157 = extractvalue { i64, i64 } %155, 0
  store i64 %157, i64* %156, align 8
  %158 = extractvalue { i64, i64 } %155, 1
  store i64 %158, i64* %149, align 8
  %159 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %160 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_12PhysicalRectE(%"class.WTF::TextStream"* dereferenceable(48) %159, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %16) #8
  %161 = load i96, i96* %84, align 4
  %162 = and i96 %161, 33554432
  %163 = icmp eq i96 %162, 0
  %164 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  br i1 %163, label %170, label %165

165:                                              ; preds = %147
  %166 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %164, align 8
  %167 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, i64 92
  %168 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %167, align 8
  %169 = call zeroext i1 %168(%"class.blink::LayoutObject"* %1, i32 0) #8
  br i1 %169, label %170, label %784

170:                                              ; preds = %147, %165
  %171 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %164, align 8
  %172 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, i64 92
  %173 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %172, align 8
  %174 = call zeroext i1 %173(%"class.blink::LayoutObject"* %1, i32 7) #8
  br i1 %174, label %175, label %216

175:                                              ; preds = %170
  %176 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %177 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #8
  %178 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #8
  %179 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutFileUploadControl"*
  %180 = call %"class.WTF::StringImpl"* @_ZNK5blink23LayoutFileUploadControl13FileTextValueEv(%"class.blink::LayoutFileUploadControl"* %179) #8
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %181, align 8
  %182 = call %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %18)
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %183, align 8
  %184 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %176, %"class.WTF::String"* nonnull dereferenceable(8) %17) #8
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %175
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #8
  br label %200

200:                                              ; preds = %175, %196, %199
  %201 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #8
  br label %215

215:                                              ; preds = %200, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #8
  br label %216

216:                                              ; preds = %215, %170
  %217 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 7
  %218 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %217, align 8
  %219 = icmp eq %"class.blink::LayoutObject"* %218, null
  br i1 %219, label %404, label %220

220:                                              ; preds = %216
  %221 = bitcast %"class.blink::Color"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #8
  %222 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %19, i64 0, i32 0
  store i32 -1431655766, i32* %222, align 4
  %223 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #8
  %224 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %225 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %224, %"class.blink::CSSProperty"* dereferenceable(24) %223) #8
  store i32 %225, i32* %222, align 4
  %226 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %217, align 8
  %227 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #8
  %228 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %226, i64 0, i32 5, i32 0
  %229 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %228, align 8
  %230 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %229, %"class.blink::CSSProperty"* dereferenceable(24) %227) #8
  %231 = load i32, i32* %222, align 4
  %232 = icmp eq i32 %230, %231
  br i1 %232, label %256, label %233

233:                                              ; preds = %220
  %234 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #8
  %235 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #8
  %236 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %19) #8
  %237 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %237, align 8
  %238 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %234, %"class.WTF::String"* nonnull dereferenceable(8) %11) #8
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %233
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #8
  br label %254

254:                                              ; preds = %233, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #8
  %255 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %238, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %256

256:                                              ; preds = %220, %254
  %257 = bitcast %"class.blink::Color"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257) #8
  %258 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %20, i64 0, i32 0
  store i32 -1431655766, i32* %258, align 4
  %259 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #8
  %260 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %261 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %260, %"class.blink::CSSProperty"* dereferenceable(24) %259) #8
  store i32 %261, i32* %258, align 4
  %262 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %217, align 8
  %263 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #8
  %264 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %262, i64 0, i32 5, i32 0
  %265 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %264, align 8
  %266 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %265, %"class.blink::CSSProperty"* dereferenceable(24) %263) #8
  %267 = load i32, i32* %258, align 4
  %268 = icmp eq i32 %266, %267
  %269 = icmp eq i32 %267, 0
  %270 = or i1 %268, %269
  br i1 %270, label %294, label %271

271:                                              ; preds = %256
  %272 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)) #8
  %273 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #8
  %274 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %20) #8
  %275 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %275, align 8
  %276 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %272, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %271
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #8
  br label %292

292:                                              ; preds = %271, %288, %291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #8
  %293 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %276, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %294

294:                                              ; preds = %256, %292
  %295 = bitcast %"class.blink::Color"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #8
  %296 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %21, i64 0, i32 0
  store i32 -1431655766, i32* %296, align 4
  %297 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink33GetCSSPropertyWebkitTextFillColorEv() #8
  %298 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %299 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %298, %"class.blink::CSSProperty"* dereferenceable(24) %297) #8
  store i32 %299, i32* %296, align 4
  %300 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %217, align 8
  %301 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink33GetCSSPropertyWebkitTextFillColorEv() #8
  %302 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %300, i64 0, i32 5, i32 0
  %303 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %302, align 8
  %304 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %303, %"class.blink::CSSProperty"* dereferenceable(24) %301) #8
  %305 = load i32, i32* %296, align 4
  %306 = icmp eq i32 %304, %305
  %307 = load i32, i32* %222, align 4
  %308 = icmp eq i32 %305, %307
  %309 = or i1 %306, %308
  %310 = icmp eq i32 %305, 0
  %311 = or i1 %310, %309
  br i1 %311, label %335, label %312

312:                                              ; preds = %294
  %313 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #8
  %314 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #8
  %315 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %21) #8
  %316 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %316, align 8
  %317 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %313, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %312
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #8
  br label %333

333:                                              ; preds = %312, %329, %332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #8
  %334 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %317, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %335

335:                                              ; preds = %294, %333
  %336 = bitcast %"class.blink::Color"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %336) #8
  %337 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %22, i64 0, i32 0
  store i32 -1431655766, i32* %337, align 4
  %338 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink35GetCSSPropertyWebkitTextStrokeColorEv() #8
  %339 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %340 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %339, %"class.blink::CSSProperty"* dereferenceable(24) %338) #8
  store i32 %340, i32* %337, align 4
  %341 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %217, align 8
  %342 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink35GetCSSPropertyWebkitTextStrokeColorEv() #8
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %341, i64 0, i32 5, i32 0
  %344 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %343, align 8
  %345 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %344, %"class.blink::CSSProperty"* dereferenceable(24) %342) #8
  %346 = load i32, i32* %337, align 4
  %347 = icmp eq i32 %345, %346
  %348 = load i32, i32* %222, align 4
  %349 = icmp eq i32 %346, %348
  %350 = or i1 %347, %349
  %351 = icmp eq i32 %346, 0
  %352 = or i1 %351, %350
  br i1 %352, label %376, label %353

353:                                              ; preds = %335
  %354 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #8
  %355 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #8
  %356 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %22) #8
  %357 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %356, %"class.WTF::StringImpl"** %357, align 8
  %358 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %354, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #8
  br label %374

374:                                              ; preds = %353, %370, %373
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #8
  %375 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %358, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %376

376:                                              ; preds = %335, %374
  %377 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %217, align 8
  %378 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %377, i64 0, i32 5, i32 0
  %379 = bitcast %"class.blink::ComputedStyle"** %378 to %"class.blink::ComputedStyleBase"**
  %380 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %379, align 8
  %381 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %380, i64 0, i32 1, i32 0, i32 0
  %382 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %382, i64 0, i32 16
  %384 = load float, float* %383, align 8
  %385 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %386 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %385, align 8
  %387 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %386, i64 0, i32 1, i32 0, i32 0
  %388 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %387, align 8
  %389 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %388, i64 0, i32 16
  %390 = load float, float* %389, align 8
  %391 = fcmp une float %384, %390
  %392 = fcmp ogt float %390, 0.000000e+00
  %393 = and i1 %391, %392
  br i1 %393, label %394, label %403

394:                                              ; preds = %376
  %395 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)) #8
  %396 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %385, align 8
  %397 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %396, i64 0, i32 1, i32 0, i32 0
  %398 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %397, align 8
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %398, i64 0, i32 16
  %400 = load float, float* %399, align 8
  %401 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %395, float %400) #8
  %402 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %403

403:                                              ; preds = %394, %376
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %336) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #8
  br label %404

404:                                              ; preds = %216, %403
  %405 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %406 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %405, align 8
  %407 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %406, i64 20
  %408 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %407, align 8
  %409 = call zeroext i1 %408(%"class.blink::LayoutObject"* %1) #8
  br i1 %409, label %410, label %1389

410:                                              ; preds = %404
  %411 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBoxModelObject"*
  %412 = bitcast %"class.blink::LayoutObject"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %413 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %414 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %413, i64 122
  %415 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %414, align 8
  %416 = call i32 %415(%"class.blink::LayoutBoxModelObject"* %411) #8
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %436

418:                                              ; preds = %410
  %419 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %420 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %419, i64 125
  %421 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %420, align 8
  %422 = call i32 %421(%"class.blink::LayoutBoxModelObject"* %411) #8
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %436

424:                                              ; preds = %418
  %425 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %426 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %425, i64 123
  %427 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %426, align 8
  %428 = call i32 %427(%"class.blink::LayoutBoxModelObject"* %411) #8
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %436

430:                                              ; preds = %424
  %431 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %432 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %431, i64 124
  %433 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %432, align 8
  %434 = call i32 %433(%"class.blink::LayoutBoxModelObject"* %411) #8
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %784, label %436

436:                                              ; preds = %430, %424, %418, %410
  %437 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #8
  %438 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %439 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %438, i64 0, i32 0, i32 7, i32 0, i32 0
  %440 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %440, i64 0, i32 27
  %442 = load i16, i16* %441, align 8
  %443 = lshr i16 %442, 12
  %444 = zext i16 %443 to i32
  %445 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %440, i64 0, i32 22
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %440, i64 0, i32 26, i32 0
  %447 = load i32, i32* %446, align 4
  %448 = bitcast %"class.blink::StyleColor"* %445 to i64*
  %449 = load i64, i64* %448, align 4
  %450 = shl nuw nsw i32 %444, 26
  %451 = icmp slt i32 %447, 67108863
  %452 = select i1 %451, i32 %447, i32 67108863
  %453 = and i32 %452, 67108863
  %454 = or i32 %453, %450
  %455 = trunc i64 %449 to i32
  %456 = lshr i64 %449, 32
  %457 = trunc i64 %456 to i32
  %458 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %459 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %458, i64 122
  %460 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %459, align 8
  %461 = call i32 %460(%"class.blink::LayoutBoxModelObject"* %411) #8
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %465

463:                                              ; preds = %436
  %464 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %513

465:                                              ; preds = %436
  %466 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #8
  %467 = bitcast %"class.blink::LayoutUnit"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %467) #8
  %468 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %469 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %468, i64 122
  %470 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %469, align 8
  %471 = call i32 %470(%"class.blink::LayoutBoxModelObject"* %411) #8
  %472 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %23, i64 0, i32 0
  store i32 %471, i32* %472, align 4
  %473 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %466, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %23) #8
  %474 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %473, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %467) #8
  %475 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %476 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %475, align 8
  %477 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %476, i64 0, i32 7, i32 0, i32 0
  %478 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %477, align 8
  %479 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %478, i64 0, i32 27
  %480 = load i16, i16* %479, align 8
  %481 = lshr i16 %480, 12
  %482 = add nuw nsw i16 %481, 3
  %483 = zext i16 %482 to i32
  %484 = call i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32 %483) #8
  %485 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* %484) #8
  %486 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %487 = bitcast %"class.blink::Color"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %487) #8
  %488 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBorderTopColorEv() #8
  %489 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %490 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %489, %"class.blink::CSSProperty"* dereferenceable(24) %488) #8
  %491 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %24, i64 0, i32 0
  store i32 %490, i32* %491, align 4
  %492 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %492) #8
  %493 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %24) #8
  %494 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %493, %"class.WTF::StringImpl"** %494, align 8
  %495 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %494, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %511, label %498

498:                                              ; preds = %465
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #8
  br label %511

511:                                              ; preds = %465, %507, %510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %492) #8
  %512 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %495, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %487) #8
  br label %513

513:                                              ; preds = %511, %463
  %514 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %515 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %514, i64 0, i32 0, i32 7, i32 0, i32 0
  %516 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %515, align 8
  %517 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %516, i64 0, i32 25, i32 0
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, %453
  %520 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %516, i64 0, i32 27
  %521 = load i16, i16* %520, align 8
  %522 = lshr i16 %521, 8
  %523 = and i16 %522, 15
  %524 = icmp eq i16 %443, %523
  %525 = and i1 %519, %524
  br i1 %525, label %526, label %534

526:                                              ; preds = %513
  %527 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %516, i64 0, i32 21, i32 0, i32 0
  %528 = load i32, i32* %527, align 4
  %529 = icmp eq i32 %528, %455
  br i1 %529, label %530, label %534

530:                                              ; preds = %526
  %531 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %516, i64 0, i32 21, i32 1
  %532 = load i32, i32* %531, align 4
  %533 = icmp eq i32 %532, %457
  br i1 %533, label %603, label %534

534:                                              ; preds = %513, %526, %530
  %535 = zext i16 %523 to i32
  %536 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %516, i64 0, i32 21
  %537 = bitcast %"class.blink::StyleColor"* %536 to i64*
  %538 = load i64, i64* %537, align 4
  %539 = shl nuw nsw i32 %535, 26
  %540 = icmp slt i32 %518, 67108863
  %541 = select i1 %540, i32 %518, i32 67108863
  %542 = and i32 %541, 67108863
  %543 = or i32 %539, %542
  %544 = trunc i64 %538 to i32
  %545 = lshr i64 %538, 32
  %546 = trunc i64 %545 to i32
  %547 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %548 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %547, i64 125
  %549 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %548, align 8
  %550 = call i32 %549(%"class.blink::LayoutBoxModelObject"* %411) #8
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %554

552:                                              ; preds = %534
  %553 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %603

554:                                              ; preds = %534
  %555 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #8
  %556 = bitcast %"class.blink::LayoutUnit"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %556) #8
  %557 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %558 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %557, i64 125
  %559 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %558, align 8
  %560 = call i32 %559(%"class.blink::LayoutBoxModelObject"* %411) #8
  %561 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %25, i64 0, i32 0
  store i32 %560, i32* %561, align 4
  %562 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %555, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %25) #8
  %563 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %562, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %556) #8
  %564 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %565 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %565, i64 0, i32 7, i32 0, i32 0
  %567 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %566, align 8
  %568 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %567, i64 0, i32 27
  %569 = load i16, i16* %568, align 8
  %570 = lshr i16 %569, 8
  %571 = and i16 %570, 15
  %572 = add nuw nsw i16 %571, 3
  %573 = zext i16 %572 to i32
  %574 = call i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32 %573) #8
  %575 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* %574) #8
  %576 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %575, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %577 = bitcast %"class.blink::Color"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %577) #8
  %578 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink30GetCSSPropertyBorderRightColorEv() #8
  %579 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %580 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %579, %"class.blink::CSSProperty"* dereferenceable(24) %578) #8
  %581 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %26, i64 0, i32 0
  store i32 %580, i32* %581, align 4
  %582 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %582) #8
  %583 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %26) #8
  %584 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %583, %"class.WTF::StringImpl"** %584, align 8
  %585 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %586 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %584, align 8
  %587 = icmp eq %"class.WTF::StringImpl"* %586, null
  br i1 %587, label %601, label %588

588:                                              ; preds = %554
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %586, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %590 = load atomic i32, i32* %589 monotonic, align 4
  %591 = and i32 %590, 2
  %592 = icmp eq i32 %591, 0
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %586, i64 0, i32 0
  %594 = load i32, i32* %593, align 4
  br i1 %592, label %595, label %597

595:                                              ; preds = %588
  %596 = add i32 %594, -1
  store i32 %596, i32* %593, align 4
  br label %597

597:                                              ; preds = %595, %588
  %598 = phi i32 [ %596, %595 ], [ %594, %588 ]
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %600, label %601

600:                                              ; preds = %597
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %586) #8
  br label %601

601:                                              ; preds = %554, %597, %600
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %582) #8
  %602 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %585, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %577) #8
  br label %603

603:                                              ; preds = %552, %601, %530
  %604 = phi i32 [ %454, %530 ], [ %543, %601 ], [ %543, %552 ]
  %605 = phi i32 [ %455, %530 ], [ %544, %601 ], [ %544, %552 ]
  %606 = phi i32 [ %457, %530 ], [ %546, %601 ], [ %546, %552 ]
  %607 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %608 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %607, i64 0, i32 0, i32 7, i32 0, i32 0
  %609 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %608, align 8
  %610 = and i32 %604, 67108863
  %611 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %609, i64 0, i32 23, i32 0
  %612 = load i32, i32* %611, align 4
  %613 = icmp eq i32 %612, %610
  %614 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %609, i64 0, i32 27
  %615 = load i16, i16* %614, align 8
  %616 = and i16 %615, 15
  %617 = zext i16 %616 to i32
  br i1 %613, label %618, label %630

618:                                              ; preds = %603
  %619 = lshr i32 %604, 26
  %620 = and i32 %619, 15
  %621 = icmp eq i32 %620, %617
  br i1 %621, label %622, label %630

622:                                              ; preds = %618
  %623 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %609, i64 0, i32 19, i32 0, i32 0
  %624 = load i32, i32* %623, align 4
  %625 = icmp eq i32 %624, %605
  br i1 %625, label %626, label %630

626:                                              ; preds = %622
  %627 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %609, i64 0, i32 19, i32 1
  %628 = load i32, i32* %627, align 4
  %629 = icmp eq i32 %628, %606
  br i1 %629, label %697, label %630

630:                                              ; preds = %603, %622, %618, %626
  %631 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %609, i64 0, i32 19
  %632 = bitcast %"class.blink::StyleColor"* %631 to i64*
  %633 = load i64, i64* %632, align 4
  %634 = shl nuw nsw i32 %617, 26
  %635 = icmp slt i32 %612, 67108863
  %636 = select i1 %635, i32 %612, i32 67108863
  %637 = and i32 %636, 67108863
  %638 = or i32 %637, %634
  %639 = trunc i64 %633 to i32
  %640 = lshr i64 %633, 32
  %641 = trunc i64 %640 to i32
  %642 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %643 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %642, i64 123
  %644 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %643, align 8
  %645 = call i32 %644(%"class.blink::LayoutBoxModelObject"* %411) #8
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %647, label %649

647:                                              ; preds = %630
  %648 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %697

649:                                              ; preds = %630
  %650 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #8
  %651 = bitcast %"class.blink::LayoutUnit"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %651) #8
  %652 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %653 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %652, i64 123
  %654 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %653, align 8
  %655 = call i32 %654(%"class.blink::LayoutBoxModelObject"* %411) #8
  %656 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %27, i64 0, i32 0
  store i32 %655, i32* %656, align 4
  %657 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %650, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %27) #8
  %658 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %657, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %651) #8
  %659 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %660 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %659, align 8
  %661 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %660, i64 0, i32 7, i32 0, i32 0
  %662 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %661, align 8
  %663 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %662, i64 0, i32 27
  %664 = load i16, i16* %663, align 8
  %665 = and i16 %664, 15
  %666 = add nuw nsw i16 %665, 3
  %667 = zext i16 %666 to i32
  %668 = call i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32 %667) #8
  %669 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* %668) #8
  %670 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %669, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %671 = bitcast %"class.blink::Color"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %671) #8
  %672 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink31GetCSSPropertyBorderBottomColorEv() #8
  %673 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %674 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %673, %"class.blink::CSSProperty"* dereferenceable(24) %672) #8
  %675 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %28, i64 0, i32 0
  store i32 %674, i32* %675, align 4
  %676 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %676) #8
  %677 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %28) #8
  %678 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %677, %"class.WTF::StringImpl"** %678, align 8
  %679 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %680 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %678, align 8
  %681 = icmp eq %"class.WTF::StringImpl"* %680, null
  br i1 %681, label %695, label %682

682:                                              ; preds = %649
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load atomic i32, i32* %683 monotonic, align 4
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 0
  %688 = load i32, i32* %687, align 4
  br i1 %686, label %689, label %691

689:                                              ; preds = %682
  %690 = add i32 %688, -1
  store i32 %690, i32* %687, align 4
  br label %691

691:                                              ; preds = %689, %682
  %692 = phi i32 [ %690, %689 ], [ %688, %682 ]
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %691
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %680) #8
  br label %695

695:                                              ; preds = %649, %691, %694
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %676) #8
  %696 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %679, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %671) #8
  br label %697

697:                                              ; preds = %647, %695, %626
  %698 = phi i32 [ %604, %626 ], [ %638, %695 ], [ %638, %647 ]
  %699 = phi i32 [ %605, %626 ], [ %639, %695 ], [ %639, %647 ]
  %700 = phi i32 [ %606, %626 ], [ %641, %695 ], [ %641, %647 ]
  %701 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %702 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %701, i64 0, i32 0, i32 7, i32 0, i32 0
  %703 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %702, align 8
  %704 = and i32 %698, 67108863
  %705 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %703, i64 0, i32 24, i32 0
  %706 = load i32, i32* %705, align 4
  %707 = icmp eq i32 %706, %704
  br i1 %707, label %708, label %725

708:                                              ; preds = %697
  %709 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %703, i64 0, i32 27
  %710 = load i16, i16* %709, align 8
  %711 = lshr i16 %710, 4
  %712 = and i16 %711, 15
  %713 = zext i16 %712 to i32
  %714 = lshr i32 %698, 26
  %715 = and i32 %714, 15
  %716 = icmp eq i32 %715, %713
  br i1 %716, label %717, label %725

717:                                              ; preds = %708
  %718 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %703, i64 0, i32 20, i32 0, i32 0
  %719 = load i32, i32* %718, align 4
  %720 = icmp eq i32 %719, %699
  br i1 %720, label %721, label %725

721:                                              ; preds = %717
  %722 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %703, i64 0, i32 20, i32 1
  %723 = load i32, i32* %722, align 4
  %724 = icmp eq i32 %723, %700
  br i1 %724, label %782, label %725

725:                                              ; preds = %717, %697, %708, %721
  %726 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %727 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %726, i64 124
  %728 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %727, align 8
  %729 = call i32 %728(%"class.blink::LayoutBoxModelObject"* %411) #8
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %731, label %733

731:                                              ; preds = %725
  %732 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %782

733:                                              ; preds = %725
  %734 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #8
  %735 = bitcast %"class.blink::LayoutUnit"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %735) #8
  %736 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %412, align 8
  %737 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %736, i64 124
  %738 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %737, align 8
  %739 = call i32 %738(%"class.blink::LayoutBoxModelObject"* %411) #8
  %740 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %29, i64 0, i32 0
  store i32 %739, i32* %740, align 4
  %741 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %734, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %29) #8
  %742 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %741, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %735) #8
  %743 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %744 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %743, align 8
  %745 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %744, i64 0, i32 7, i32 0, i32 0
  %746 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %745, align 8
  %747 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %746, i64 0, i32 27
  %748 = load i16, i16* %747, align 8
  %749 = lshr i16 %748, 4
  %750 = and i16 %749, 15
  %751 = add nuw nsw i16 %750, 3
  %752 = zext i16 %751 to i32
  %753 = call i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32 %752) #8
  %754 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* %753) #8
  %755 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %754, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %756 = bitcast %"class.blink::Color"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %756) #8
  %757 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBorderLeftColorEv() #8
  %758 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %759 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %758, %"class.blink::CSSProperty"* dereferenceable(24) %757) #8
  %760 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %30, i64 0, i32 0
  store i32 %759, i32* %760, align 4
  %761 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %761) #8
  %762 = call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* nonnull %30) #8
  %763 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %762, %"class.WTF::StringImpl"** %763, align 8
  %764 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %763, align 8
  %766 = icmp eq %"class.WTF::StringImpl"* %765, null
  br i1 %766, label %780, label %767

767:                                              ; preds = %733
  %768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load atomic i32, i32* %768 monotonic, align 4
  %770 = and i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  br i1 %771, label %774, label %776

774:                                              ; preds = %767
  %775 = add i32 %773, -1
  store i32 %775, i32* %772, align 4
  br label %776

776:                                              ; preds = %774, %767
  %777 = phi i32 [ %775, %774 ], [ %773, %767 ]
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %780

779:                                              ; preds = %776
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %765) #8
  br label %780

780:                                              ; preds = %733, %776, %779
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %761) #8
  %781 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %764, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %756) #8
  br label %782

782:                                              ; preds = %731, %780, %721
  %783 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %784

784:                                              ; preds = %430, %782, %165
  %785 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %164, align 8
  %786 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %785, i64 92
  %787 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %786, align 8
  %788 = call zeroext i1 %787(%"class.blink::LayoutObject"* %1, i32 46) #8
  br i1 %788, label %789, label %821

789:                                              ; preds = %784
  %790 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %791 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %790, align 8
  %792 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %791, i64 32
  %793 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %792, align 8
  %794 = call %"class.blink::LayoutNGTableCellInterface"* %793(%"class.blink::LayoutObject"* %1) #8
  %795 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #8
  %796 = bitcast %"class.blink::LayoutNGTableCellInterface"* %794 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %797 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %796, align 8
  %798 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %797, i64 8
  %799 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %798, align 8
  %800 = call i32 %799(%"class.blink::LayoutNGTableCellInterface"* %794) #8
  %801 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %795, i32 %800) #8
  %802 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %801, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0)) #8
  %803 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %796, align 8
  %804 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %803, i64 10
  %805 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %804, align 8
  %806 = call i32 %805(%"class.blink::LayoutNGTableCellInterface"* %794) #8
  %807 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %802, i32 %806) #8
  %808 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %807, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #8
  %809 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %796, align 8
  %810 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %809, i64 9
  %811 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %810, align 8
  %812 = call i32 %811(%"class.blink::LayoutNGTableCellInterface"* %794) #8
  %813 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %808, i32 %812) #8
  %814 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %813, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)) #8
  %815 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %796, align 8
  %816 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %815, i64 11
  %817 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %816, align 8
  %818 = call i32 %817(%"class.blink::LayoutNGTableCellInterface"* %794) #8
  %819 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %814, i32 %818) #8
  %820 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %819, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %821

821:                                              ; preds = %789, %784
  %822 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %164, align 8
  %823 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %822, i64 92
  %824 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %823, align 8
  %825 = call zeroext i1 %824(%"class.blink::LayoutObject"* %1, i32 15) #8
  br i1 %825, label %826, label %1043

826:                                              ; preds = %821
  %827 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %827) #8
  %828 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %829 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 2, i32 6
  %830 = bitcast %"class.blink::UntracedMember"* %829 to %"class.WTF::StringImpl"**
  %831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %830, align 8
  store %"class.WTF::StringImpl"* %831, %"class.WTF::StringImpl"** %828, align 8
  %832 = icmp eq %"class.WTF::StringImpl"* %831, null
  br i1 %832, label %1042, label %833

833:                                              ; preds = %826
  %834 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %835 = load atomic i32, i32* %834 monotonic, align 4
  %836 = and i32 %835, 2
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %838, label %852

838:                                              ; preds = %833
  %839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 0
  %840 = load i32, i32* %839, align 4
  %841 = zext i32 %840 to i33
  %842 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %841, i33 1) #8
  %843 = extractvalue { i33, i1 } %842, 1
  %844 = extractvalue { i33, i1 } %842, 0
  %845 = icmp slt i33 %844, 0
  %846 = or i1 %843, %845
  br i1 %846, label %847, label %848, !prof !3

847:                                              ; preds = %838
  call void @llvm.trap() #8
  unreachable

848:                                              ; preds = %838
  %849 = trunc i33 %844 to i32
  store i32 %849, i32* %839, align 4
  %850 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  %851 = icmp eq %"class.WTF::StringImpl"* %850, null
  br i1 %851, label %1042, label %852

852:                                              ; preds = %833, %848
  %853 = phi %"class.WTF::StringImpl"* [ %850, %848 ], [ %831, %833 ]
  %854 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 0, i32 1
  %855 = load i32, i32* %854, align 4
  switch i32 %855, label %856 [
    i32 0, label %1028
    i32 1, label %875
  ]

856:                                              ; preds = %852
  %857 = call %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %31)
  %858 = ptrtoint %"class.WTF::StringImpl"* %857 to i64
  %859 = bitcast %"class.WTF::String"* %31 to i64*
  %860 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  store i64 %858, i64* %859, align 8
  %861 = icmp eq %"class.WTF::StringImpl"* %860, null
  br i1 %861, label %1023, label %862

862:                                              ; preds = %856
  %863 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %860, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = load atomic i32, i32* %863 monotonic, align 4
  %865 = and i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %860, i64 0, i32 0
  %868 = load i32, i32* %867, align 4
  br i1 %866, label %869, label %871

869:                                              ; preds = %862
  %870 = add i32 %868, -1
  store i32 %870, i32* %867, align 4
  br label %871

871:                                              ; preds = %869, %862
  %872 = phi i32 [ %870, %869 ], [ %868, %862 ]
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %874, label %1023

874:                                              ; preds = %871
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %860) #8
  br label %1023

875:                                              ; preds = %852
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %877 = load atomic i32, i32* %876 monotonic, align 4
  %878 = and i32 %877, 1
  %879 = icmp eq i32 %878, 0
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 1
  br i1 %879, label %885, label %881

881:                                              ; preds = %875
  %882 = bitcast %"class.WTF::StringImpl"* %880 to i8*
  %883 = load i8, i8* %882, align 1
  %884 = zext i8 %883 to i16
  br label %888

885:                                              ; preds = %875
  %886 = bitcast %"class.WTF::StringImpl"* %880 to i16*
  %887 = load i16, i16* %886, align 2
  br label %888

888:                                              ; preds = %881, %885
  %889 = phi i16 [ %884, %881 ], [ %887, %885 ]
  switch i16 %889, label %1004 [
    i16 8226, label %890
    i16 9632, label %928
    i16 9702, label %966
  ]

890:                                              ; preds = %888
  %891 = bitcast %"class.WTF::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %891) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i64 6) #8
  %892 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %893 = bitcast %"class.WTF::String"* %32 to i64*
  %894 = load i64, i64* %893, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %892, align 8
  %895 = bitcast %"class.WTF::String"* %31 to i64*
  %896 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  store i64 %894, i64* %895, align 8
  %897 = icmp eq %"class.WTF::StringImpl"* %896, null
  br i1 %897, label %927, label %898

898:                                              ; preds = %890
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %900 = load atomic i32, i32* %899 monotonic, align 4
  %901 = and i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %896, i64 0, i32 0
  %904 = load i32, i32* %903, align 4
  br i1 %902, label %905, label %907

905:                                              ; preds = %898
  %906 = add i32 %904, -1
  store i32 %906, i32* %903, align 4
  br label %907

907:                                              ; preds = %905, %898
  %908 = phi i32 [ %906, %905 ], [ %904, %898 ]
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %911

910:                                              ; preds = %907
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %896) #8
  br label %911

911:                                              ; preds = %907, %910
  %912 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %892, align 8
  %913 = icmp eq %"class.WTF::StringImpl"* %912, null
  br i1 %913, label %927, label %914

914:                                              ; preds = %911
  %915 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %912, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %916 = load atomic i32, i32* %915 monotonic, align 4
  %917 = and i32 %916, 2
  %918 = icmp eq i32 %917, 0
  %919 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %912, i64 0, i32 0
  %920 = load i32, i32* %919, align 4
  br i1 %918, label %921, label %923

921:                                              ; preds = %914
  %922 = add i32 %920, -1
  store i32 %922, i32* %919, align 4
  br label %923

923:                                              ; preds = %921, %914
  %924 = phi i32 [ %922, %921 ], [ %920, %914 ]
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %926, label %927

926:                                              ; preds = %923
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %912) #8
  br label %927

927:                                              ; preds = %890, %911, %923, %926
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %891) #8
  br label %1023

928:                                              ; preds = %888
  %929 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %929) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i64 12) #8
  %930 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %931 = bitcast %"class.WTF::String"* %33 to i64*
  %932 = load i64, i64* %931, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %930, align 8
  %933 = bitcast %"class.WTF::String"* %31 to i64*
  %934 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  store i64 %932, i64* %933, align 8
  %935 = icmp eq %"class.WTF::StringImpl"* %934, null
  br i1 %935, label %965, label %936

936:                                              ; preds = %928
  %937 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %934, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %938 = load atomic i32, i32* %937 monotonic, align 4
  %939 = and i32 %938, 2
  %940 = icmp eq i32 %939, 0
  %941 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %934, i64 0, i32 0
  %942 = load i32, i32* %941, align 4
  br i1 %940, label %943, label %945

943:                                              ; preds = %936
  %944 = add i32 %942, -1
  store i32 %944, i32* %941, align 4
  br label %945

945:                                              ; preds = %943, %936
  %946 = phi i32 [ %944, %943 ], [ %942, %936 ]
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %948, label %949

948:                                              ; preds = %945
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %934) #8
  br label %949

949:                                              ; preds = %945, %948
  %950 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %930, align 8
  %951 = icmp eq %"class.WTF::StringImpl"* %950, null
  br i1 %951, label %965, label %952

952:                                              ; preds = %949
  %953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %954 = load atomic i32, i32* %953 monotonic, align 4
  %955 = and i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  br i1 %956, label %959, label %961

959:                                              ; preds = %952
  %960 = add i32 %958, -1
  store i32 %960, i32* %957, align 4
  br label %961

961:                                              ; preds = %959, %952
  %962 = phi i32 [ %960, %959 ], [ %958, %952 ]
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %964, label %965

964:                                              ; preds = %961
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %950) #8
  br label %965

965:                                              ; preds = %928, %949, %961, %964
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %929) #8
  br label %1023

966:                                              ; preds = %888
  %967 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %967) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i64 12) #8
  %968 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %969 = bitcast %"class.WTF::String"* %34 to i64*
  %970 = load i64, i64* %969, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %968, align 8
  %971 = bitcast %"class.WTF::String"* %31 to i64*
  %972 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  store i64 %970, i64* %971, align 8
  %973 = icmp eq %"class.WTF::StringImpl"* %972, null
  br i1 %973, label %1003, label %974

974:                                              ; preds = %966
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %976 = load atomic i32, i32* %975 monotonic, align 4
  %977 = and i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 0
  %980 = load i32, i32* %979, align 4
  br i1 %978, label %981, label %983

981:                                              ; preds = %974
  %982 = add i32 %980, -1
  store i32 %982, i32* %979, align 4
  br label %983

983:                                              ; preds = %981, %974
  %984 = phi i32 [ %982, %981 ], [ %980, %974 ]
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %986, label %987

986:                                              ; preds = %983
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %972) #8
  br label %987

987:                                              ; preds = %983, %986
  %988 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %968, align 8
  %989 = icmp eq %"class.WTF::StringImpl"* %988, null
  br i1 %989, label %1003, label %990

990:                                              ; preds = %987
  %991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %988, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %992 = load atomic i32, i32* %991 monotonic, align 4
  %993 = and i32 %992, 2
  %994 = icmp eq i32 %993, 0
  %995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %988, i64 0, i32 0
  %996 = load i32, i32* %995, align 4
  br i1 %994, label %997, label %999

997:                                              ; preds = %990
  %998 = add i32 %996, -1
  store i32 %998, i32* %995, align 4
  br label %999

999:                                              ; preds = %997, %990
  %1000 = phi i32 [ %998, %997 ], [ %996, %990 ]
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %999
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %988) #8
  br label %1003

1003:                                             ; preds = %966, %987, %999, %1002
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %967) #8
  br label %1023

1004:                                             ; preds = %888
  %1005 = call %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %31)
  %1006 = ptrtoint %"class.WTF::StringImpl"* %1005 to i64
  %1007 = bitcast %"class.WTF::String"* %31 to i64*
  %1008 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  store i64 %1006, i64* %1007, align 8
  %1009 = icmp eq %"class.WTF::StringImpl"* %1008, null
  br i1 %1009, label %1023, label %1010

1010:                                             ; preds = %1004
  %1011 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1008, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1012 = load atomic i32, i32* %1011 monotonic, align 4
  %1013 = and i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1008, i64 0, i32 0
  %1016 = load i32, i32* %1015, align 4
  br i1 %1014, label %1017, label %1019

1017:                                             ; preds = %1010
  %1018 = add i32 %1016, -1
  store i32 %1018, i32* %1015, align 4
  br label %1019

1019:                                             ; preds = %1017, %1010
  %1020 = phi i32 [ %1018, %1017 ], [ %1016, %1010 ]
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1019
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1008) #8
  br label %1023

1023:                                             ; preds = %1003, %965, %927, %874, %871, %856, %1022, %1019, %1004
  %1024 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0)) #8
  %1025 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %1024, %"class.WTF::String"* nonnull dereferenceable(8) %31) #8
  %1026 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  %1027 = icmp eq %"class.WTF::StringImpl"* %1026, null
  br i1 %1027, label %1042, label %1028

1028:                                             ; preds = %852, %1023
  %1029 = phi %"class.WTF::StringImpl"* [ %1026, %1023 ], [ %853, %852 ]
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1029, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1031 = load atomic i32, i32* %1030 monotonic, align 4
  %1032 = and i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1029, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  br i1 %1033, label %1036, label %1038

1036:                                             ; preds = %1028
  %1037 = add i32 %1035, -1
  store i32 %1037, i32* %1034, align 4
  br label %1038

1038:                                             ; preds = %1036, %1028
  %1039 = phi i32 [ %1037, %1036 ], [ %1035, %1028 ]
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1041, label %1042

1041:                                             ; preds = %1038
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1029) #8
  br label %1042

1042:                                             ; preds = %848, %826, %1023, %1038, %1041
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %827) #8
  br label %1043

1043:                                             ; preds = %1042, %821
  %1044 = and i32 %2, 16
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1307, label %1046

1046:                                             ; preds = %1043
  %1047 = load i96, i96* %84, align 4
  %1048 = and i96 %1047, 16777216
  %1049 = icmp eq i96 %1048, 0
  br i1 %1049, label %1050, label %1307

1050:                                             ; preds = %1046
  %1051 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %1052 = load %"class.blink::Node"*, %"class.blink::Node"** %1051, align 8
  %1053 = icmp eq %"class.blink::Node"* %1052, null
  br i1 %1053, label %1307, label %1054

1054:                                             ; preds = %1050
  %1055 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1052, i64 0, i32 1
  %1056 = load i32, i32* %1055, align 8
  %1057 = and i32 %1056, 12
  %1058 = icmp eq i32 %1057, 0
  br i1 %1058, label %1059, label %1307

1059:                                             ; preds = %1054
  %1060 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1052, i64 1, i32 3
  %1061 = bitcast %"class.blink::Member.320"* %1060 to %"class.blink::ElementData"**
  %1062 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %1061, align 8
  %1063 = icmp eq %"class.blink::ElementData"* %1062, null
  br i1 %1063, label %1307, label %1064

1064:                                             ; preds = %1059
  %1065 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1062, i64 0, i32 3, i32 0, i32 0, i32 0
  %1066 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1065, align 8
  %1067 = icmp eq %"class.WTF::StringImpl"* %1066, null
  br i1 %1067, label %1272, label %1068

1068:                                             ; preds = %1064
  %1069 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1069) #8
  %1070 = bitcast %"class.WTF::StringAppend"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1070) #8
  %1071 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %1072 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1062, i64 0, i32 0, i32 0, i32 0
  %1073 = load i32, i32* %1072, align 4
  %1074 = and i32 %1073, 1
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1083, label %1076

1076:                                             ; preds = %1068
  %1077 = bitcast %"class.blink::ElementData"* %1062 to %"class.blink::UniqueElementData"*
  %1078 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1062, i64 1, i32 1
  %1079 = bitcast %"class.blink::Member.354"* %1078 to %"class.blink::Attribute"**
  %1080 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1079, align 8
  %1081 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %1077, i64 0, i32 2, i32 0, i32 0, i32 2
  %1082 = load i32, i32* %1081, align 4
  br label %1088

1083:                                             ; preds = %1068
  %1084 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1062, i64 1
  %1085 = bitcast %"class.blink::ElementData"* %1084 to %"class.blink::Attribute"*
  %1086 = lshr i32 %1073, 1
  %1087 = and i32 %1086, 268435455
  br label %1088

1088:                                             ; preds = %1083, %1076
  %1089 = phi %"class.blink::Attribute"* [ %1085, %1083 ], [ %1080, %1076 ]
  %1090 = phi i32 [ %1087, %1083 ], [ %1082, %1076 ]
  %1091 = zext i32 %1090 to i64
  %1092 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1089, i64 %1091
  %1093 = icmp eq i32 %1090, 0
  br i1 %1093, label %1121, label %1094

1094:                                             ; preds = %1088
  %1095 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1071, i64 0, i32 0, i32 0
  %1096 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1095, align 8
  %1097 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1096, i64 0, i32 3, i32 0, i32 0, i32 0
  %1098 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1096, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %1099

1099:                                             ; preds = %1114, %1094
  %1100 = phi %"class.blink::Attribute"* [ %1089, %1094 ], [ %1115, %1114 ]
  %1101 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1100, i64 0, i32 0, i32 0, i32 0
  %1102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1101, align 8
  %1103 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1102, %1096
  br i1 %1103, label %1117, label %1104

1104:                                             ; preds = %1099
  %1105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1102, i64 0, i32 3, i32 0, i32 0, i32 0
  %1106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1105, align 8
  %1107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1097, align 8
  %1108 = icmp eq %"class.WTF::StringImpl"* %1106, %1107
  br i1 %1108, label %1109, label %1114

1109:                                             ; preds = %1104
  %1110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1102, i64 0, i32 4, i32 0, i32 0, i32 0
  %1111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1110, align 8
  %1112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1098, align 8
  %1113 = icmp eq %"class.WTF::StringImpl"* %1111, %1112
  br i1 %1113, label %1117, label %1114

1114:                                             ; preds = %1109, %1104
  %1115 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1100, i64 1
  %1116 = icmp eq %"class.blink::Attribute"* %1115, %1092
  br i1 %1116, label %1121, label %1099

1117:                                             ; preds = %1109, %1099
  %1118 = icmp eq %"class.blink::Attribute"* %1100, null
  br i1 %1118, label %1121, label %1119

1119:                                             ; preds = %1117
  %1120 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1100, i64 0, i32 1
  br label %1123

1121:                                             ; preds = %1114, %1117, %1088
  %1122 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %1123

1123:                                             ; preds = %1119, %1121
  %1124 = phi %"class.WTF::AtomicString"* [ %1122, %1121 ], [ %1120, %1119 ]
  %1125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1124, i64 0, i32 0, i32 0, i32 0
  %1126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1125, align 8
  %1127 = icmp eq %"class.WTF::StringImpl"* %1126, null
  br i1 %1127, label %1203, label %1128

1128:                                             ; preds = %1123
  %1129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1130 = load atomic i32, i32* %1129 monotonic, align 4
  %1131 = and i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  %1133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 0
  %1134 = load i32, i32* %1133, align 4
  br i1 %1132, label %1135, label %1145

1135:                                             ; preds = %1128
  %1136 = zext i32 %1134 to i33
  %1137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1136, i33 1) #8
  %1138 = extractvalue { i33, i1 } %1137, 1
  %1139 = extractvalue { i33, i1 } %1137, 0
  %1140 = icmp slt i33 %1139, 0
  %1141 = or i1 %1138, %1140
  br i1 %1141, label %1142, label %1143, !prof !3

1142:                                             ; preds = %1135
  call void @llvm.trap() #8
  unreachable

1143:                                             ; preds = %1135
  %1144 = trunc i33 %1139 to i32
  store i32 %1144, i32* %1133, align 4
  br label %1145

1145:                                             ; preds = %1143, %1128
  %1146 = phi i32 [ %1144, %1143 ], [ %1134, %1128 ]
  %1147 = load atomic i32, i32* %1129 monotonic, align 4
  %1148 = and i32 %1147, 2
  %1149 = icmp eq i32 %1148, 0
  br i1 %1149, label %1150, label %1160

1150:                                             ; preds = %1145
  %1151 = zext i32 %1146 to i33
  %1152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1151, i33 1) #8
  %1153 = extractvalue { i33, i1 } %1152, 1
  %1154 = extractvalue { i33, i1 } %1152, 0
  %1155 = icmp slt i33 %1154, 0
  %1156 = or i1 %1153, %1155
  br i1 %1156, label %1157, label %1158, !prof !3

1157:                                             ; preds = %1150
  call void @llvm.trap() #8
  unreachable

1158:                                             ; preds = %1150
  %1159 = trunc i33 %1154 to i32
  store i32 %1159, i32* %1133, align 4
  br label %1160

1160:                                             ; preds = %1158, %1145
  %1161 = phi i32 [ %1159, %1158 ], [ %1146, %1145 ]
  %1162 = load atomic i32, i32* %1129 monotonic, align 4
  %1163 = and i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  br i1 %1164, label %1165, label %1167

1165:                                             ; preds = %1160
  %1166 = add i32 %1161, -1
  store i32 %1166, i32* %1133, align 4
  br label %1167

1167:                                             ; preds = %1165, %1160
  %1168 = phi i32 [ %1166, %1165 ], [ %1161, %1160 ]
  %1169 = icmp eq i32 %1168, 0
  br i1 %1169, label %1170, label %1171

1170:                                             ; preds = %1167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1126) #8
  br label %1171

1171:                                             ; preds = %1167, %1170
  %1172 = load atomic i32, i32* %1129 monotonic, align 4
  %1173 = and i32 %1172, 2
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1175, label %1186

1175:                                             ; preds = %1171
  %1176 = load i32, i32* %1133, align 4
  %1177 = zext i32 %1176 to i33
  %1178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1177, i33 1) #8
  %1179 = extractvalue { i33, i1 } %1178, 1
  %1180 = extractvalue { i33, i1 } %1178, 0
  %1181 = icmp slt i33 %1180, 0
  %1182 = or i1 %1179, %1181
  br i1 %1182, label %1183, label %1184, !prof !3

1183:                                             ; preds = %1175
  call void @llvm.trap() #8
  unreachable

1184:                                             ; preds = %1175
  %1185 = trunc i33 %1180 to i32
  store i32 %1185, i32* %1133, align 4
  br label %1186

1186:                                             ; preds = %1171, %1184
  %1187 = bitcast %"class.WTF::StringAppend"* %36 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.24 to i64), i64* %1187, align 8
  %1188 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1126, %"class.WTF::StringImpl"** %1188, align 8
  %1189 = load atomic i32, i32* %1129 monotonic, align 4
  %1190 = and i32 %1189, 2
  %1191 = icmp eq i32 %1190, 0
  br i1 %1191, label %1192, label %1207

1192:                                             ; preds = %1186
  %1193 = load i32, i32* %1133, align 4
  %1194 = zext i32 %1193 to i33
  %1195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1194, i33 1) #8
  %1196 = extractvalue { i33, i1 } %1195, 1
  %1197 = extractvalue { i33, i1 } %1195, 0
  %1198 = icmp slt i33 %1197, 0
  %1199 = or i1 %1196, %1198
  br i1 %1199, label %1200, label %1201, !prof !3

1200:                                             ; preds = %1192
  call void @llvm.trap() #8
  unreachable

1201:                                             ; preds = %1192
  %1202 = trunc i33 %1197 to i32
  store i32 %1202, i32* %1133, align 4
  br label %1207

1203:                                             ; preds = %1123
  %1204 = bitcast %"class.WTF::StringAppend"* %36 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.24 to i64), i64* %1204, align 8
  %1205 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1205, align 8
  %1206 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8** %1206, align 8
  br label %1219

1207:                                             ; preds = %1201, %1186
  %1208 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8** %1208, align 8
  %1209 = load atomic i32, i32* %1129 monotonic, align 4
  %1210 = and i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = load i32, i32* %1133, align 4
  br i1 %1211, label %1213, label %1215

1213:                                             ; preds = %1207
  %1214 = add i32 %1212, -1
  store i32 %1214, i32* %1133, align 4
  br label %1215

1215:                                             ; preds = %1213, %1207
  %1216 = phi i32 [ %1214, %1213 ], [ %1212, %1207 ]
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1219

1218:                                             ; preds = %1215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1126) #8
  br label %1219

1219:                                             ; preds = %1203, %1215, %1218
  %1220 = phi %"class.WTF::StringImpl"** [ %1205, %1203 ], [ %1188, %1215 ], [ %1188, %1218 ]
  %1221 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %36)
  %1222 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1221, %"class.WTF::StringImpl"** %1222, align 8
  %1223 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %35) #8
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8
  %1225 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1225, label %1239, label %1226

1226:                                             ; preds = %1219
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  br i1 %1230, label %1233, label %1235

1233:                                             ; preds = %1226
  %1234 = add i32 %1232, -1
  store i32 %1234, i32* %1231, align 4
  br label %1235

1235:                                             ; preds = %1233, %1226
  %1236 = phi i32 [ %1234, %1233 ], [ %1232, %1226 ]
  %1237 = icmp eq i32 %1236, 0
  br i1 %1237, label %1238, label %1239

1238:                                             ; preds = %1235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #8
  br label %1239

1239:                                             ; preds = %1219, %1235, %1238
  %1240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1220, align 8
  %1241 = icmp eq %"class.WTF::StringImpl"* %1240, null
  br i1 %1241, label %1255, label %1242

1242:                                             ; preds = %1239
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1244 = load atomic i32, i32* %1243 monotonic, align 4
  %1245 = and i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 0
  %1248 = load i32, i32* %1247, align 4
  br i1 %1246, label %1249, label %1251

1249:                                             ; preds = %1242
  %1250 = add i32 %1248, -1
  store i32 %1250, i32* %1247, align 4
  br label %1251

1251:                                             ; preds = %1249, %1242
  %1252 = phi i32 [ %1250, %1249 ], [ %1248, %1242 ]
  %1253 = icmp eq i32 %1252, 0
  br i1 %1253, label %1254, label %1255

1254:                                             ; preds = %1251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1240) #8
  br label %1255

1255:                                             ; preds = %1239, %1251, %1254
  br i1 %1127, label %1269, label %1256

1256:                                             ; preds = %1255
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1258 = load atomic i32, i32* %1257 monotonic, align 4
  %1259 = and i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 0
  %1262 = load i32, i32* %1261, align 4
  br i1 %1260, label %1263, label %1265

1263:                                             ; preds = %1256
  %1264 = add i32 %1262, -1
  store i32 %1264, i32* %1261, align 4
  br label %1265

1265:                                             ; preds = %1263, %1256
  %1266 = phi i32 [ %1264, %1263 ], [ %1262, %1256 ]
  %1267 = icmp eq i32 %1266, 0
  br i1 %1267, label %1268, label %1269

1268:                                             ; preds = %1265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1126) #8
  br label %1269

1269:                                             ; preds = %1268, %1265, %1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1070) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1069) #8
  %1270 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %1061, align 8
  %1271 = icmp eq %"class.blink::ElementData"* %1270, null
  br i1 %1271, label %1307, label %1272

1272:                                             ; preds = %1064, %1269
  %1273 = phi %"class.blink::ElementData"* [ %1270, %1269 ], [ %1062, %1064 ]
  %1274 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1273, i64 0, i32 2, i32 0, i32 0
  %1275 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %1274, align 8
  %1276 = icmp eq %"class.blink::SpaceSplitString::Data"* %1275, null
  br i1 %1276, label %1307, label %1277

1277:                                             ; preds = %1272
  %1278 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #8
  br label %1279

1279:                                             ; preds = %1300, %1277
  %1280 = phi i32 [ 0, %1277 ], [ %1306, %1300 ]
  %1281 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %1061, align 8
  %1282 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1281, i64 0, i32 2, i32 0, i32 0
  %1283 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %1282, align 8
  %1284 = icmp eq %"class.blink::SpaceSplitString::Data"* %1283, null
  br i1 %1284, label %1288, label %1285

1285:                                             ; preds = %1279
  %1286 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %1283, i64 0, i32 2, i32 0, i32 0, i32 2
  %1287 = load i32, i32* %1286, align 4
  br label %1288

1288:                                             ; preds = %1279, %1285
  %1289 = phi i32 [ %1287, %1285 ], [ 0, %1279 ]
  %1290 = icmp ult i32 %1280, %1289
  br i1 %1290, label %1293, label %1291

1291:                                             ; preds = %1288
  %1292 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #8
  br label %1307

1293:                                             ; preds = %1288
  %1294 = icmp eq i32 %1280, 0
  br i1 %1294, label %1300, label %1295

1295:                                             ; preds = %1293
  %1296 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %1297 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %1061, align 8
  %1298 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1297, i64 0, i32 2, i32 0, i32 0
  %1299 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %1298, align 8
  br label %1300

1300:                                             ; preds = %1293, %1295
  %1301 = phi %"class.blink::SpaceSplitString::Data"* [ %1283, %1293 ], [ %1299, %1295 ]
  %1302 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %1301, i64 0, i32 2
  %1303 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"* %1302, i32 %1280) #8
  %1304 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1303, i64 0, i32 0
  %1305 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* dereferenceable(8) %1304) #8
  %1306 = add nuw i32 %1280, 1
  br label %1279

1307:                                             ; preds = %1272, %1054, %1059, %1269, %1046, %1050, %1291, %1043
  %1308 = trunc i32 %2 to i8
  %1309 = icmp slt i8 %1308, 0
  br i1 %1309, label %1310, label %1365

1310:                                             ; preds = %1307
  %1311 = load i96, i96* %84, align 4
  %1312 = and i96 %1311, 31
  %1313 = icmp eq i96 %1312, 0
  br i1 %1313, label %1317, label %1314

1314:                                             ; preds = %1310
  %1315 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0)) #8
  %1316 = load i96, i96* %84, align 4
  br label %1317

1317:                                             ; preds = %1310, %1314
  %1318 = phi i96 [ %1316, %1314 ], [ %1311, %1310 ]
  %1319 = phi i1 [ true, %1314 ], [ false, %1310 ]
  %1320 = and i96 %1318, 3
  %1321 = icmp eq i96 %1320, 0
  br i1 %1321, label %1325, label %1322

1322:                                             ; preds = %1317
  %1323 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #8
  %1324 = load i96, i96* %84, align 4
  br label %1325

1325:                                             ; preds = %1317, %1322
  %1326 = phi i96 [ %1324, %1322 ], [ %1318, %1317 ]
  %1327 = phi i8 [ 1, %1322 ], [ 0, %1317 ]
  %1328 = and i96 %1326, 4
  %1329 = icmp eq i96 %1328, 0
  br i1 %1329, label %1337, label %1330

1330:                                             ; preds = %1325
  %1331 = icmp eq i8 %1327, 0
  br i1 %1331, label %1334, label %1332

1332:                                             ; preds = %1330
  %1333 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  br label %1334

1334:                                             ; preds = %1330, %1332
  %1335 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)) #8
  %1336 = load i96, i96* %84, align 4
  br label %1337

1337:                                             ; preds = %1325, %1334
  %1338 = phi i96 [ %1336, %1334 ], [ %1326, %1325 ]
  %1339 = phi i8 [ 1, %1334 ], [ %1327, %1325 ]
  %1340 = and i96 %1338, 8
  %1341 = icmp eq i96 %1340, 0
  br i1 %1341, label %1350, label %1342

1342:                                             ; preds = %1337
  %1343 = and i8 %1339, 1
  %1344 = icmp eq i8 %1343, 0
  br i1 %1344, label %1347, label %1345

1345:                                             ; preds = %1342
  %1346 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  br label %1347

1347:                                             ; preds = %1342, %1345
  %1348 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #8
  %1349 = load i96, i96* %84, align 4
  br label %1350

1350:                                             ; preds = %1337, %1347
  %1351 = phi i96 [ %1349, %1347 ], [ %1338, %1337 ]
  %1352 = phi i8 [ 1, %1347 ], [ %1339, %1337 ]
  %1353 = and i96 %1351, 16
  %1354 = icmp eq i96 %1353, 0
  br i1 %1354, label %1362, label %1355

1355:                                             ; preds = %1350
  %1356 = and i8 %1352, 1
  %1357 = icmp eq i8 %1356, 0
  br i1 %1357, label %1360, label %1358

1358:                                             ; preds = %1355
  %1359 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  br label %1360

1360:                                             ; preds = %1355, %1358
  %1361 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0)) #8
  br label %1362

1362:                                             ; preds = %1350, %1360
  br i1 %1319, label %1363, label %1365

1363:                                             ; preds = %1362
  %1364 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %1365

1365:                                             ; preds = %1362, %1363, %1307
  %1366 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %1367 = icmp eq i8 %1366, 0
  br i1 %1367, label %1389, label %1368

1368:                                             ; preds = %1365
  %1369 = load i96, i96* %84, align 4
  %1370 = and i96 %1369, 16777216
  %1371 = icmp eq i96 %1370, 0
  br i1 %1371, label %1372, label %1389

1372:                                             ; preds = %1368
  %1373 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %1374 = load %"class.blink::Node"*, %"class.blink::Node"** %1373, align 8
  %1375 = icmp eq %"class.blink::Node"* %1374, null
  br i1 %1375, label %1389, label %1376

1376:                                             ; preds = %1372
  %1377 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1374, i64 0, i32 1
  %1378 = load i32, i32* %1377, align 8
  %1379 = and i32 %1378, 67108876
  %1380 = icmp eq i32 %1379, 67108864
  br i1 %1380, label %1381, label %1389, !prof !4

1381:                                             ; preds = %1376
  %1382 = bitcast %"class.blink::Node"* %1374 to %"class.blink::Element"*
  %1383 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %1382) #8
  %1384 = icmp eq %"class.blink::DisplayLockContext"* %1383, null
  br i1 %1384, label %1389, label %1385

1385:                                             ; preds = %1381
  %1386 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %1383) #8
  br i1 %1386, label %1389, label %1387

1387:                                             ; preds = %1385
  %1388 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0)) #8
  br label %1389

1389:                                             ; preds = %1385, %1368, %1372, %1376, %1365, %1381, %1387, %404
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject13DecoratedNameEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKv(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"*, i32) local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_12PhysicalRectE(%"class.WTF::TextStream"* dereferenceable(48), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink23LayoutFileUploadControl13FileTextValueEv(%"class.blink::LayoutFileUploadControl"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink33GetCSSPropertyWebkitTextFillColorEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink35GetCSSPropertyWebkitTextStrokeColorEv() local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBorderTopColorEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink30GetCSSPropertyBorderRightColorEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink31GetCSSPropertyBorderBottomColorEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBorderLeftColorEv() local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.3430"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #8
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %3, i8* %8) #8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3430"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %2, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #8
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #8
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #8
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #8
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #8
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16LayoutTreeAsText16WriteLineBoxTreeERN3WTF10TextStreamERKNS_15LayoutBlockFlowEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutBlockFlow"* nocapture readonly dereferenceable(280), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %4, align 8
  %6 = icmp eq %"class.blink::InlineFlowBox"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %3
  ret void

8:                                                ; preds = %3, %8
  %9 = phi %"class.blink::InlineFlowBox"* [ %11, %8 ], [ %5, %3 ]
  tail call fastcc void @_ZN5blinkL18WriteInlineFlowBoxERN3WTF10TextStreamERKNS_13InlineFlowBoxEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::InlineFlowBox"* nonnull dereferenceable(112) %9, i32 %2)
  %10 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %9, i64 0, i32 5
  %11 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %12 = icmp eq %"class.blink::InlineFlowBox"* %11, null
  br i1 %12, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL18WriteInlineFlowBoxERN3WTF10TextStreamERKNS_13InlineFlowBoxEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::InlineFlowBox"* dereferenceable(112), i32) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1, i64 0, i32 0
  tail call fastcc void @_ZN5blinkL14WriteInlineBoxERN3WTF10TextStreamERKNS_9InlineBoxEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::InlineBox"* dereferenceable(64) %8, i32 %2)
  %9 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %10 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1, i64 0, i32 2
  %11 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %10, align 8
  %12 = icmp eq %"class.blink::InlineBox"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = add nsw i32 %2, 1
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %17 = bitcast %"class.WTF::StringView"* %5 to i8*
  %18 = bitcast %"class.WTF::StringView"* %5 to i64*
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %21 = bitcast %"class.WTF::String"* %4 to i64*
  %22 = bitcast %"class.WTF::StringView"* %6 to i8*
  %23 = bitcast %"class.WTF::StringView"* %6 to i64*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %7 to i8*
  %27 = bitcast %"class.WTF::StringView"* %7 to i64*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  br label %31

30:                                               ; preds = %152, %3
  ret void

31:                                               ; preds = %13, %152
  %32 = phi %"class.blink::InlineBox"* [ %11, %13 ], [ %154, %152 ]
  %33 = bitcast %"class.blink::InlineBox"* %32 to i1 (%"class.blink::InlineBox"*)***
  %34 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %34, i64 14
  %36 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %35, align 8
  %37 = call zeroext i1 %36(%"class.blink::InlineBox"* nonnull %32) #8
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::InlineBox"* %32 to %"class.blink::InlineFlowBox"*
  call fastcc void @_ZN5blinkL18WriteInlineFlowBoxERN3WTF10TextStreamERKNS_13InlineFlowBoxEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::InlineFlowBox"* nonnull dereferenceable(112) %39, i32 %14)
  br label %152

40:                                               ; preds = %31
  %41 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %33, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %41, i64 15
  %43 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.blink::InlineBox"* nonnull %32) #8
  br i1 %44, label %45, label %149

45:                                               ; preds = %40
  %46 = bitcast %"class.blink::InlineBox"* %32 to %"class.blink::InlineTextBox"*
  call fastcc void @_ZN5blinkL14WriteInlineBoxERN3WTF10TextStreamERKNS_9InlineBoxEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::InlineBox"* nonnull dereferenceable(64) %32, i32 %14) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %47 = call %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox7GetTextEv(%"class.blink::InlineTextBox"* nonnull %46) #8
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %48, i64* %18, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i64 0, i64 0), i8** %19, align 8
  store i32 2, i32* %20, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %68, label %50

50:                                               ; preds = %45
  %51 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %47, i16 zeroext 92, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  %52 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %52, i64* %21, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %70, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #8
  br label %68

68:                                               ; preds = %45, %64, %67
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %70

70:                                               ; preds = %68, %50
  %71 = phi %"class.WTF::StringImpl"* [ %69, %68 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %72, i64* %23, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0), i8** %24, align 8
  store i32 2, i32* %25, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %92, label %74

74:                                               ; preds = %70
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %71, i16 zeroext 10, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  %76 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %76, i64* %21, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %94, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #8
  br label %92

92:                                               ; preds = %70, %88, %91
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %94

94:                                               ; preds = %92, %74
  %95 = phi %"class.WTF::StringImpl"* [ %93, %92 ], [ %75, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %96, i64* %27, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** %28, align 8
  store i32 2, i32* %29, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %97, label %116, label %98

98:                                               ; preds = %94
  %99 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %95, i16 zeroext 34, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  %100 = ptrtoint %"class.WTF::StringImpl"* %99 to i64
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %100, i64* %21, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #8
  br label %116

116:                                              ; preds = %115, %112, %98, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %117 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0)) #8
  %118 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %32, i64 1, i32 1
  %119 = bitcast %"class.blink::InlineBox"** %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %117, i32 %120) #8
  %122 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  %123 = load i32, i32* %119, align 8
  %124 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %46, i64 0, i32 4
  %125 = load i16, i16* %124, align 4
  %126 = zext i16 %125 to i32
  %127 = add i32 %123, %126
  %128 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %122, i32 %127) #8
  %129 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %130 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #8
  %131 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %130, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %132 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #8
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %116
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %148

148:                                              ; preds = %116, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %150

149:                                              ; preds = %40
  call fastcc void @_ZN5blinkL14WriteInlineBoxERN3WTF10TextStreamERKNS_9InlineBoxEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::InlineBox"* nonnull dereferenceable(64) %32, i32 %14)
  br label %150

150:                                              ; preds = %149, %148
  %151 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  br label %152

152:                                              ; preds = %150, %38
  %153 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %32, i64 0, i32 1
  %154 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %153, align 8
  %155 = icmp eq %"class.blink::InlineBox"* %154, null
  br i1 %155, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_12LayoutObjectEij(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutObject"* dereferenceable(88), i32, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::PropertyTreeStateOrAlias", align 16
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca <2 x i64>, align 16
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca <2 x i64>, align 16
  %21 = alloca %"class.blink::NGInlineCursor", align 8
  %22 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %1, i32 68) #8
  br i1 %26, label %27, label %29

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutSVGShape"*
  tail call void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_14LayoutSVGShapeEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutSVGShape"* dereferenceable(200) %28, i32 %2) #8
  br label %755

29:                                               ; preds = %4
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, i64 92
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %1, i32 66) #8
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink25WriteSVGResourceContainerERN3WTF10TextStreamERKNS_12LayoutObjectEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutObject"* dereferenceable(88) %1, i32 %2) #8
  br label %755

35:                                               ; preds = %29
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, i64 92
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* %1, i32 59) #8
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  tail call void @_ZN5blink17WriteSVGContainerERN3WTF10TextStreamERKNS_12LayoutObjectEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutObject"* dereferenceable(88) %1, i32 %2) #8
  br label %755

41:                                               ; preds = %35
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %1, i32 67) #8
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutSVGRoot"*
  tail call void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_13LayoutSVGRootEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutSVGRoot"* dereferenceable(336) %47, i32 %2) #8
  br label %755

48:                                               ; preds = %41
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %1, i32 69) #8
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutSVGText"*
  tail call void @_ZN5blink12WriteSVGTextERN3WTF10TextStreamERKNS_13LayoutSVGTextEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutSVGText"* dereferenceable(352) %54, i32 %2) #8
  br label %755

55:                                               ; preds = %48
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %1, i32 64) #8
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutSVGInline"*
  tail call void @_ZN5blink14WriteSVGInlineERN3WTF10TextStreamERKNS_15LayoutSVGInlineEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutSVGInline"* dereferenceable(120) %61, i32 %2) #8
  br label %755

62:                                               ; preds = %55
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %1, i32 65) #8
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutSVGInlineText"*
  tail call void @_ZN5blink18WriteSVGInlineTextERN3WTF10TextStreamERKNS_19LayoutSVGInlineTextEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutSVGInlineText"* dereferenceable(280) %68, i32 %2) #8
  br label %755

69:                                               ; preds = %62
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, i64 92
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::LayoutObject"* %1, i32 63) #8
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutSVGImage"*
  tail call void @_ZN5blink13WriteSVGImageERN3WTF10TextStreamERKNS_14LayoutSVGImageEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutSVGImage"* dereferenceable(176) %75, i32 %2) #8
  br label %755

76:                                               ; preds = %69
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %2) #8
  tail call void @_ZN5blink16LayoutTreeAsText17WriteLayoutObjectERN3WTF10TextStreamERKNS_12LayoutObjectEj(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutObject"* dereferenceable(88) %1, i32 %3)
  %77 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %78 = and i32 %3, 512
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %256, label %80

80:                                               ; preds = %76
  %81 = add nsw i32 %2, 1
  %82 = bitcast i64* %14 to %"struct.blink::PhysicalOffset"*
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 10
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %84, align 8
  %86 = icmp eq %"struct.blink::FragmentData::RareData"* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %85, i64 0, i32 11, i32 0, i32 0, i32 0
  %89 = load %"class.blink::FragmentData"*, %"class.blink::FragmentData"** %88, align 8
  %90 = icmp eq %"class.blink::FragmentData"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %81) #8
  %92 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0)) #8
  br label %93

93:                                               ; preds = %91, %87, %80
  %94 = phi i1 [ true, %91 ], [ false, %87 ], [ false, %80 ]
  %95 = bitcast %"class.WTF::String"* %13 to i8*
  %96 = bitcast i64* %14 to i8*
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::String"* %15 to i8*
  %99 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %16 to i8*
  %100 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %16, i64 0, i32 2
  %101 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %100 to i64*
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %103 = bitcast %"class.WTF::String"* %17 to i8*
  %104 = bitcast <2 x i64>* %18 to i8*
  %105 = bitcast <2 x i64>* %18 to %"class.blink::IntRect"*
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::String"* %19 to i8*
  %108 = bitcast <2 x i64>* %20 to i8*
  %109 = bitcast <2 x i64>* %20 to %"class.blink::IntRect"*
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %111 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %16 to <2 x i64>*
  br label %112

112:                                              ; preds = %251, %93
  %113 = phi %"class.blink::FragmentData"* [ %83, %93 ], [ %253, %251 ]
  %114 = phi i32 [ 0, %93 ], [ %254, %251 ]
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %81) #8
  br i1 %94, label %115, label %119

115:                                              ; preds = %112
  %116 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  %117 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %116, i32 %114) #8
  %118 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0)) #8
  br label %119

119:                                              ; preds = %115, %112
  %120 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #8
  %121 = bitcast %"class.blink::FragmentData"* %113 to i64*
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %14, align 8
  %123 = call %"class.WTF::StringImpl"* @_ZNK5blink14PhysicalOffset8ToStringEv(%"struct.blink::PhysicalOffset"* nonnull %82) #8
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %97, align 8
  %124 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %120, %"class.WTF::String"* nonnull dereferenceable(8) %13) #8
  %125 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %124, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #8
  br label %141

141:                                              ; preds = %140, %137, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  %142 = getelementptr inbounds %"class.blink::FragmentData", %"class.blink::FragmentData"* %113, i64 0, i32 1, i32 0, i32 0, i32 0
  %143 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %142, align 8
  %144 = icmp eq %"struct.blink::FragmentData::RareData"* %143, null
  br i1 %144, label %186, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %143, i64 0, i32 5, i32 0, i32 0, i32 0
  %147 = load %"class.blink::RefCountedPropertyTreeState"*, %"class.blink::RefCountedPropertyTreeState"** %146, align 8
  %148 = icmp eq %"class.blink::RefCountedPropertyTreeState"* %147, null
  br i1 %148, label %186, label %149

149:                                              ; preds = %145
  %150 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #8
  %151 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %142, align 8, !noalias !5
  %152 = icmp eq %"struct.blink::FragmentData::RareData"* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %151, i64 0, i32 5, i32 0, i32 0, i32 0
  %155 = load %"class.blink::RefCountedPropertyTreeState"*, %"class.blink::RefCountedPropertyTreeState"** %154, align 8, !noalias !5
  %156 = icmp eq %"class.blink::RefCountedPropertyTreeState"* %155, null
  br i1 %156, label %157, label %160

157:                                              ; preds = %153, %149
  %158 = call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #8, !noalias !5
  %159 = bitcast %"class.blink::PropertyTreeState"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %99, i8* align 8 %159, i64 24, i1 false) #8
  br label %166

160:                                              ; preds = %153
  %161 = bitcast %"class.blink::RefCountedPropertyTreeState"* %155 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !noalias !8
  %163 = getelementptr inbounds %"class.blink::RefCountedPropertyTreeState", %"class.blink::RefCountedPropertyTreeState"* %155, i64 0, i32 2, i32 0
  %164 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %163 to i64*
  %165 = load i64, i64* %164, align 8, !noalias !8
  store <2 x i64> %162, <2 x i64>* %111, align 16, !alias.scope !8
  store i64 %165, i64* %101, align 16, !alias.scope !8
  br label %166

166:                                              ; preds = %160, %157
  %167 = call %"class.WTF::StringImpl"* @_ZNK5blink24PropertyTreeStateOrAlias8ToStringEv(%"class.blink::PropertyTreeStateOrAlias"* nonnull %16) #8
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %102, align 8
  %168 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %150, %"class.WTF::String"* nonnull dereferenceable(8) %15) #8
  %169 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #8
  br label %185

185:                                              ; preds = %184, %181, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #8
  br label %186

186:                                              ; preds = %185, %145, %141
  %187 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E, align 1, !range !2
  %188 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_cull_rect_update_enabled_E, align 1
  %189 = or i8 %188, %187
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %247, label %191

191:                                              ; preds = %186
  %192 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.61, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #8
  %193 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %142, align 8
  %194 = icmp eq %"struct.blink::FragmentData::RareData"* %193, null
  br i1 %194, label %199, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %193, i64 0, i32 9
  %197 = bitcast %"class.blink::CullRect"* %196 to <2 x i64>*
  %198 = load <2 x i64>, <2 x i64>* %197, align 8
  br label %199

199:                                              ; preds = %195, %191
  %200 = phi <2 x i64> [ %198, %195 ], [ zeroinitializer, %191 ]
  store <2 x i64> %200, <2 x i64>* %18, align 16
  %201 = call %"class.WTF::StringImpl"* @_ZNK5blink7IntRect8ToStringEv(%"class.blink::IntRect"* nonnull %105) #8
  store %"class.WTF::StringImpl"* %201, %"class.WTF::StringImpl"** %106, align 8
  %202 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %192, %"class.WTF::String"* nonnull dereferenceable(8) %17) #8
  %203 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %202, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #8
  %204 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %142, align 8
  %205 = icmp eq %"struct.blink::FragmentData::RareData"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %204, i64 0, i32 10
  %208 = bitcast %"class.blink::CullRect"* %207 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8
  br label %210

210:                                              ; preds = %206, %199
  %211 = phi <2 x i64> [ %209, %206 ], [ zeroinitializer, %199 ]
  store <2 x i64> %211, <2 x i64>* %20, align 16
  %212 = call %"class.WTF::StringImpl"* @_ZNK5blink7IntRect8ToStringEv(%"class.blink::IntRect"* nonnull %109) #8
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %110, align 8
  %213 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %203, %"class.WTF::String"* nonnull dereferenceable(8) %19) #8
  %214 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #8
  br label %230

230:                                              ; preds = %229, %226, %210
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %246, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #8
  br label %246

246:                                              ; preds = %245, %242, %230
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #8
  br label %247

247:                                              ; preds = %246, %186
  %248 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %249 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %142, align 8
  %250 = icmp eq %"struct.blink::FragmentData::RareData"* %249, null
  br i1 %250, label %256, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %249, i64 0, i32 11, i32 0, i32 0, i32 0
  %253 = load %"class.blink::FragmentData"*, %"class.blink::FragmentData"** %252, align 8
  %254 = add nuw nsw i32 %114, 1
  %255 = icmp eq %"class.blink::FragmentData"* %253, null
  br i1 %255, label %256, label %112

256:                                              ; preds = %251, %247, %76
  %257 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %258 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %257, align 8
  %259 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %258, i64 24
  %260 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %259, align 8
  %261 = call zeroext i1 %260(%"class.blink::LayoutObject"* %1) #8
  %262 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBlockFlow"*
  %263 = select i1 %261, %"class.blink::LayoutBlockFlow"* %262, %"class.blink::LayoutBlockFlow"* null
  %264 = and i32 %3, 256
  %265 = icmp ne i32 %264, 0
  %266 = icmp ne %"class.blink::LayoutBlockFlow"* %263, null
  %267 = and i1 %265, %266
  br i1 %267, label %268, label %278

268:                                              ; preds = %256
  %269 = add nsw i32 %2, 1
  %270 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %263, i64 0, i32 1, i32 0, i32 0
  %271 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %270, align 8
  %272 = icmp eq %"class.blink::InlineFlowBox"* %271, null
  br i1 %272, label %278, label %273

273:                                              ; preds = %268, %273
  %274 = phi %"class.blink::InlineFlowBox"* [ %276, %273 ], [ %271, %268 ]
  call fastcc void @_ZN5blinkL18WriteInlineFlowBoxERN3WTF10TextStreamERKNS_13InlineFlowBoxEi(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::InlineFlowBox"* nonnull dereferenceable(112) %274, i32 %269) #8
  %275 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %274, i64 0, i32 5
  %276 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %275, align 8
  %277 = icmp eq %"class.blink::InlineFlowBox"* %276, null
  br i1 %277, label %278, label %273

278:                                              ; preds = %273, %268, %256
  %279 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %280 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %279 to i96*
  %281 = load i96, i96* %280, align 4
  %282 = and i96 %281, 33554432
  %283 = icmp eq i96 %282, 0
  br i1 %283, label %660, label %284

284:                                              ; preds = %278
  %285 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %286 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %285, i64 92
  %287 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %286, align 8
  %288 = call zeroext i1 %287(%"class.blink::LayoutObject"* %1, i32 0) #8
  br i1 %288, label %660, label %289

289:                                              ; preds = %284
  %290 = call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %1) #8
  %291 = icmp eq %"class.blink::LayoutBlockFlow"* %290, null
  br i1 %291, label %448, label %292

292:                                              ; preds = %289
  %293 = bitcast %"class.blink::NGInlineCursor"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %293) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"* nonnull %21, %"class.blink::LayoutBlockFlow"* nonnull dereferenceable(280) %290) #8
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %21, %"class.blink::LayoutObject"* dereferenceable(88) %1) #8
  %294 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %21, i64 0, i32 0, i32 0
  %295 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %294, align 8
  %296 = icmp eq %"class.blink::NGFragmentItem"* %295, null
  br i1 %296, label %447, label %297

297:                                              ; preds = %292
  %298 = add nsw i32 %2, 1
  %299 = bitcast %"class.WTF::StringView"* %12 to i8*
  %300 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %21, i64 0, i32 2
  %301 = bitcast %"class.WTF::StringView"* %11 to i8*
  %302 = bitcast %"class.WTF::String"* %9 to i8*
  %303 = bitcast %"class.WTF::String"* %10 to i8*
  %304 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  br label %306

306:                                              ; preds = %297, %443
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %298) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299)
  %307 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %294, align 8
  %308 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %307, i64 0, i32 0
  %309 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %307, i64 0, i32 6
  %311 = load i16, i16* %310, align 8
  %312 = lshr i16 %311, 6
  %313 = and i16 %312, 3
  %314 = icmp eq i16 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %306
  %316 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %309, i64 0, i32 5, i32 0
  %317 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %316, align 8
  br label %324

318:                                              ; preds = %306
  %319 = zext i16 %313 to i32
  %320 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %309, i32 %319) #8
  %321 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %308, align 8
  %322 = load i16, i16* %310, align 8
  %323 = lshr i16 %322, 6
  br label %324

324:                                              ; preds = %318, %315
  %325 = phi i16 [ %312, %315 ], [ %323, %318 ]
  %326 = phi %"class.blink::LayoutObject"* [ %309, %315 ], [ %321, %318 ]
  %327 = phi %"class.blink::ComputedStyle"* [ %317, %315 ], [ %320, %318 ]
  %328 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %327, i64 0, i32 0, i32 9
  %329 = bitcast [20 x i8]* %328 to i160*
  %330 = load i160, i160* %329, align 8
  %331 = and i160 %330, 15211807202738752817960438464512
  %332 = icmp eq i160 %331, 0
  %333 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %307, i64 0, i32 2, i32 1, i32 0
  %334 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %307, i64 0, i32 2, i32 1, i32 1
  %335 = select i1 %332, %"class.blink::LayoutUnit"* %333, %"class.blink::LayoutUnit"* %334
  %336 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %335, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %307, i64 0, i32 2
  %339 = bitcast %"struct.blink::PhysicalRect"* %338 to i64*
  %340 = load i64, i64* %339, align 4
  %341 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %307, i64 0, i32 2, i32 1
  %342 = bitcast %"struct.blink::PhysicalSize"* %341 to i64*
  %343 = load i64, i64* %342, align 4
  %344 = and i16 %325, 3
  %345 = icmp eq i16 %344, 0
  br i1 %345, label %346, label %349

346:                                              ; preds = %324
  %347 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %326, i64 0, i32 5, i32 0
  %348 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %347, align 8
  br label %352

349:                                              ; preds = %324
  %350 = zext i16 %344 to i32
  %351 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %326, i32 %350) #8
  br label %352

352:                                              ; preds = %349, %346
  %353 = phi %"class.blink::ComputedStyle"* [ %348, %346 ], [ %351, %349 ]
  %354 = load %"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItems"** %300, align 8
  call void @_ZNK5blink14NGFragmentItem4TextERKNS_15NGFragmentItemsE(%"class.WTF::StringView"* nonnull sret %12, %"class.blink::NGFragmentItem"* %307, %"class.blink::NGFragmentItems"* dereferenceable(24) %354) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %301) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %301, i8* nonnull align 8 %299, i64 24, i1 false) #8
  %355 = trunc i64 %340 to i32
  %356 = trunc i64 %343 to i32
  %357 = lshr i64 %340, 32
  %358 = trunc i64 %357 to i32
  %359 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %353, i64 0, i32 0, i32 9
  %360 = bitcast [20 x i8]* %359 to i160*
  %361 = load i160, i160* %360, align 8
  %362 = and i160 %361, 15211807202738752817960438464512
  %363 = icmp eq i160 %362, 5070602400912917605986812821504
  %364 = icmp ne %"class.blink::LayoutObject"* %326, null
  %365 = and i1 %364, %363
  br i1 %365, label %366, label %382

366:                                              ; preds = %352
  %367 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %326, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #8
  %368 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %367, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %369 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %368, align 8
  %370 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %369, i64 0, i32 0, i32 9
  %371 = bitcast [20 x i8]* %370 to i160*
  %372 = load i160, i160* %371, align 8
  %373 = and i160 %372, 15211807202738752817960438464512
  %374 = icmp eq i160 %373, 5070602400912917605986812821504
  br i1 %374, label %375, label %382, !prof !3

375:                                              ; preds = %366
  %376 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %367, i64 0, i32 0, i32 0, i32 0
  %377 = bitcast %"class.blink::LayoutBlock"* %367 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %378 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %377, align 8
  %379 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %378, i64 106
  %380 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %379, align 8
  %381 = call i32 %380(%"class.blink::LayoutObject"* %376, i32 %355, i32 %356, %"class.blink::LayoutBox"* null) #8
  br label %382

382:                                              ; preds = %375, %366, %352
  %383 = phi i32 [ %355, %352 ], [ %381, %375 ], [ %355, %366 ]
  %384 = sdiv i32 %383, 64
  %385 = sdiv i32 %358, 64
  %386 = icmp slt i32 %337, 0
  %387 = select i1 %386, i32 -2147483648, i32 2147483647
  %388 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %383, i32 %337) #8
  %389 = extractvalue { i32, i1 } %388, 1
  %390 = extractvalue { i32, i1 } %388, 0
  %391 = select i1 %389, i32 %387, i32 %390, !prof !3
  %392 = icmp sgt i32 %391, 2147483583
  br i1 %392, label %400, label %393, !prof !3

393:                                              ; preds = %382
  %394 = icmp sgt i32 %391, -1
  br i1 %394, label %395, label %398

395:                                              ; preds = %393
  %396 = add nuw nsw i32 %391, 63
  %397 = sdiv i32 %396, 64
  br label %400

398:                                              ; preds = %393
  %399 = sdiv i32 %391, 64
  br label %400

400:                                              ; preds = %398, %395, %382
  %401 = phi i32 [ %397, %395 ], [ %399, %398 ], [ 33554431, %382 ]
  %402 = sub nsw i32 %401, %384
  %403 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #8
  %404 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %403, i32 %384) #8
  %405 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  %406 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %405, i32 %385) #8
  %407 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %406, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i64 0, i64 0)) #8
  %408 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %407, i32 %402) #8
  %409 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #8
  %410 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %11) #8
  store %"class.WTF::StringImpl"* %410, %"class.WTF::StringImpl"** %304, align 8
  %411 = call %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  store %"class.WTF::StringImpl"* %411, %"class.WTF::StringImpl"** %305, align 8
  %412 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %409, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %400
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #8
  br label %428

428:                                              ; preds = %427, %424, %400
  %429 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %428
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %410) #8
  br label %443

443:                                              ; preds = %428, %439, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #8
  %444 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %301) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299)
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %21) #8
  %445 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %294, align 8
  %446 = icmp eq %"class.blink::NGFragmentItem"* %445, null
  br i1 %446, label %447, label %306

447:                                              ; preds = %443, %292
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %293) #8
  br label %660

448:                                              ; preds = %289
  %449 = load i96, i96* %280, align 4
  %450 = and i96 %449, 268435456
  %451 = icmp eq i96 %450, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %448
  %453 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #8
  br label %457

454:                                              ; preds = %448
  %455 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 6
  %456 = bitcast %"class.blink::UntracedMember"* %455 to %"class.blink::InlineTextBoxList"*
  br label %457

457:                                              ; preds = %452, %454
  %458 = phi %"class.blink::InlineTextBoxList"* [ %453, %452 ], [ %456, %454 ]
  %459 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %458, i64 0, i32 0, i32 0
  %460 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %459, align 8
  %461 = icmp eq %"class.blink::InlineTextBox"* %460, null
  br i1 %461, label %660, label %462

462:                                              ; preds = %457
  %463 = add nsw i32 %2, 1
  %464 = bitcast %"class.WTF::String"* %5 to i8*
  %465 = bitcast %"class.WTF::String"* %6 to i8*
  %466 = bitcast %"class.WTF::String"* %7 to i8*
  %467 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 4, i32 0, i64 4
  %468 = bitcast i8* %467 to %"class.WTF::StringImpl"**
  %469 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %470 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %471 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %472 = bitcast %"class.WTF::String"* %8 to i8*
  %473 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %474 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  br label %475

475:                                              ; preds = %462, %655
  %476 = phi %"class.blink::InlineTextBox"* [ %460, %462 ], [ %658, %655 ]
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %463) #8
  %477 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 0, i32 5, i32 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = sdiv i32 %478, 64
  %480 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 0, i32 5, i32 1, i32 0
  %481 = load i32, i32* %480, align 4
  %482 = sdiv i32 %481, 64
  %483 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 0, i32 6, i32 0
  %484 = load i32, i32* %483, align 8
  %485 = icmp slt i32 %484, 0
  %486 = select i1 %485, i32 -2147483648, i32 2147483647
  %487 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %478, i32 %484) #8
  %488 = extractvalue { i32, i1 } %487, 1
  %489 = extractvalue { i32, i1 } %487, 0
  %490 = select i1 %488, i32 %486, i32 %489, !prof !3
  %491 = icmp sgt i32 %490, 2147483583
  br i1 %491, label %499, label %492, !prof !3

492:                                              ; preds = %475
  %493 = icmp sgt i32 %490, -1
  br i1 %493, label %494, label %497

494:                                              ; preds = %492
  %495 = add nuw nsw i32 %490, 63
  %496 = sdiv i32 %495, 64
  br label %499

497:                                              ; preds = %492
  %498 = sdiv i32 %490, 64
  br label %499

499:                                              ; preds = %497, %494, %475
  %500 = phi i32 [ %496, %494 ], [ %498, %497 ], [ 33554431, %475 ]
  %501 = sub nsw i32 %500, %479
  %502 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #8
  %503 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %502, i64 0, i32 0, i32 0, i32 0
  %504 = bitcast %"class.blink::LayoutBlock"* %502 to i1 (%"class.blink::LayoutObject"*, i32)***
  %505 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %504, align 8
  %506 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %505, i64 92
  %507 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %506, align 8
  %508 = call zeroext i1 %507(%"class.blink::LayoutObject"* %503, i32 46) #8
  br i1 %508, label %509, label %527

509:                                              ; preds = %499
  %510 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #8
  %511 = icmp eq %"class.blink::LayoutBlock"* %510, null
  br i1 %511, label %519, label %512

512:                                              ; preds = %509
  %513 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %510, i64 0, i32 0, i32 0, i32 0
  %514 = bitcast %"class.blink::LayoutBlock"* %510 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %515 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %514, align 8
  %516 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %515, i64 32
  %517 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %516, align 8
  %518 = call %"class.blink::LayoutNGTableCellInterface"* %517(%"class.blink::LayoutObject"* %513) #8
  br label %519

519:                                              ; preds = %512, %509
  %520 = phi %"class.blink::LayoutNGTableCellInterface"* [ %518, %512 ], [ null, %509 ]
  %521 = bitcast %"class.blink::LayoutNGTableCellInterface"* %520 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %522 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %521, align 8
  %523 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %522, i64 6
  %524 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %523, align 8
  %525 = call i32 %524(%"class.blink::LayoutNGTableCellInterface"* %520) #8
  %526 = sub nsw i32 %482, %525
  br label %527

527:                                              ; preds = %519, %499
  %528 = phi i32 [ %526, %519 ], [ %482, %499 ]
  %529 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #8
  %530 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %529, i32 %479) #8
  %531 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %530, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  %532 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %531, i32 %528) #8
  %533 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %532, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i64 0, i64 0)) #8
  %534 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %533, i32 %501) #8
  %535 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 0, i32 7, i32 0
  %536 = load i32, i32* %535, align 4
  %537 = and i32 %536, 4
  %538 = icmp eq i32 %537, 0
  %539 = xor i1 %538, true
  %540 = and i32 %536, 65536
  %541 = icmp ne i32 %540, 0
  %542 = or i1 %541, %539
  br i1 %542, label %543, label %552

543:                                              ; preds = %527
  %544 = select i1 %538, [5 x i8]* @.str.66, [5 x i8]* @.str.65
  %545 = getelementptr inbounds [5 x i8], [5 x i8]* %544, i64 0, i64 0
  %546 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* nonnull %545) #8
  %547 = load i32, i32* %535, align 4
  %548 = and i32 %547, 65536
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %552, label %550

550:                                              ; preds = %543
  %551 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i64 0, i64 0)) #8
  br label %552

552:                                              ; preds = %550, %543, %527
  %553 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %465) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %466) #8
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8
  store %"class.WTF::StringImpl"* %554, %"class.WTF::StringImpl"** %469, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %573, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %573

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %563 = load i32, i32* %562, align 4
  %564 = zext i32 %563 to i33
  %565 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %564, i33 1) #8
  %566 = extractvalue { i33, i1 } %565, 1
  %567 = extractvalue { i33, i1 } %565, 0
  %568 = icmp slt i33 %567, 0
  %569 = or i1 %566, %568
  br i1 %569, label %570, label %571, !prof !3

570:                                              ; preds = %561
  call void @llvm.trap() #8
  unreachable

571:                                              ; preds = %561
  %572 = trunc i33 %567 to i32
  store i32 %572, i32* %562, align 4
  br label %573

573:                                              ; preds = %571, %556, %552
  %574 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 3
  %575 = load i32, i32* %574, align 8
  %576 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 4
  %577 = load i16, i16* %576, align 4
  %578 = zext i16 %577 to i32
  %579 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 %575, i32 %578) #8
  store %"class.WTF::StringImpl"* %579, %"class.WTF::StringImpl"** %470, align 8
  %580 = call %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  store %"class.WTF::StringImpl"* %580, %"class.WTF::StringImpl"** %471, align 8
  %581 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %553, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %582 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %583 = icmp eq %"class.WTF::StringImpl"* %582, null
  br i1 %583, label %597, label %584

584:                                              ; preds = %573
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load atomic i32, i32* %585 monotonic, align 4
  %587 = and i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  br i1 %588, label %591, label %593

591:                                              ; preds = %584
  %592 = add i32 %590, -1
  store i32 %592, i32* %589, align 4
  br label %593

593:                                              ; preds = %591, %584
  %594 = phi i32 [ %592, %591 ], [ %590, %584 ]
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %597

596:                                              ; preds = %593
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %582) #8
  br label %597

597:                                              ; preds = %596, %593, %573
  %598 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %598, label %612, label %599

599:                                              ; preds = %597
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %579) #8
  br label %612

612:                                              ; preds = %611, %608, %597
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %628, label %615

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  br i1 %619, label %622, label %624

622:                                              ; preds = %615
  %623 = add i32 %621, -1
  store i32 %623, i32* %620, align 4
  br label %624

624:                                              ; preds = %622, %615
  %625 = phi i32 [ %623, %622 ], [ %621, %615 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #8
  br label %628

628:                                              ; preds = %627, %624, %612
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %466) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %465) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #8
  %629 = load i32, i32* %535, align 4
  %630 = trunc i32 %629 to i16
  %631 = icmp slt i16 %630, 0
  br i1 %631, label %632, label %655

632:                                              ; preds = %628
  %633 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0)) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #8
  %634 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %473, align 8
  %635 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %634) #8
  %636 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %635, i64 0, i32 0
  %637 = call %"class.WTF::StringImpl"* @_ZN5blink27QuoteAndEscapeNonPrintablesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %636) #8
  store %"class.WTF::StringImpl"* %637, %"class.WTF::StringImpl"** %474, align 8
  %638 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %633, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %654, label %641

641:                                              ; preds = %632
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load atomic i32, i32* %642 monotonic, align 4
  %644 = and i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  br i1 %645, label %648, label %650

648:                                              ; preds = %641
  %649 = add i32 %647, -1
  store i32 %649, i32* %646, align 4
  br label %650

650:                                              ; preds = %648, %641
  %651 = phi i32 [ %649, %648 ], [ %647, %641 ]
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %654

653:                                              ; preds = %650
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %639) #8
  br label %654

654:                                              ; preds = %653, %650, %632
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #8
  br label %655

655:                                              ; preds = %628, %654
  %656 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %657 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %476, i64 0, i32 2
  %658 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %657, align 8
  %659 = icmp eq %"class.blink::InlineTextBox"* %658, null
  br i1 %659, label %660, label %475

660:                                              ; preds = %655, %457, %278, %447, %284
  %661 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %662 = icmp eq i8 %661, 0
  br i1 %662, label %682, label %663

663:                                              ; preds = %660
  %664 = load i96, i96* %280, align 4
  %665 = and i96 %664, 16777216
  %666 = icmp eq i96 %665, 0
  br i1 %666, label %667, label %682

667:                                              ; preds = %663
  %668 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %669 = load %"class.blink::Node"*, %"class.blink::Node"** %668, align 8
  %670 = icmp eq %"class.blink::Node"* %669, null
  br i1 %670, label %682, label %671

671:                                              ; preds = %667
  %672 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %669, i64 0, i32 1
  %673 = load i32, i32* %672, align 8
  %674 = and i32 %673, 67108876
  %675 = icmp eq i32 %674, 67108864
  br i1 %675, label %676, label %682, !prof !4

676:                                              ; preds = %671
  %677 = bitcast %"class.blink::Node"* %669 to %"class.blink::Element"*
  %678 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %677) #8
  %679 = icmp eq %"class.blink::DisplayLockContext"* %678, null
  br i1 %679, label %682, label %680

680:                                              ; preds = %676
  %681 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %678) #8
  br i1 %681, label %682, label %755

682:                                              ; preds = %680, %663, %667, %671, %660, %676
  %683 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %684 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %683, align 8
  %685 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %684, i64 13
  %686 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %685, align 8
  %687 = call %"class.blink::LayoutObjectChildList"* %686(%"class.blink::LayoutObject"* %1) #8
  %688 = icmp eq %"class.blink::LayoutObjectChildList"* %687, null
  br i1 %688, label %695, label %689

689:                                              ; preds = %682
  %690 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %687, i64 0, i32 0
  %691 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %690, align 8
  %692 = icmp eq %"class.blink::LayoutObject"* %691, null
  br i1 %692, label %695, label %693

693:                                              ; preds = %689
  %694 = add nsw i32 %2, 1
  br label %700

695:                                              ; preds = %708, %682, %689
  %696 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %257, align 8
  %697 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %696, i64 27
  %698 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %697, align 8
  %699 = call zeroext i1 %698(%"class.blink::LayoutObject"* %1) #8
  br i1 %699, label %712, label %755

700:                                              ; preds = %693, %708
  %701 = phi %"class.blink::LayoutObject"* [ %691, %693 ], [ %710, %708 ]
  %702 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %701, i64 0, i32 4
  %703 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %702 to i96*
  %704 = load i96, i96* %703, align 4
  %705 = and i96 %704, 4294967296
  %706 = icmp eq i96 %705, 0
  br i1 %706, label %707, label %708

707:                                              ; preds = %700
  call void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_12LayoutObjectEij(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %701, i32 %694, i32 %3)
  br label %708

708:                                              ; preds = %700, %707
  %709 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %701, i64 0, i32 9
  %710 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %709, align 8
  %711 = icmp eq %"class.blink::LayoutObject"* %710, null
  br i1 %711, label %695, label %700

712:                                              ; preds = %695
  %713 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutEmbeddedContent"*
  %714 = call %"class.blink::FrameView"* @_ZNK5blink21LayoutEmbeddedContent14ChildFrameViewEv(%"class.blink::LayoutEmbeddedContent"* %713) #8
  %715 = icmp eq %"class.blink::FrameView"* %714, null
  br i1 %715, label %755, label %716

716:                                              ; preds = %712
  %717 = bitcast %"class.blink::FrameView"* %714 to %"class.blink::EmbeddedContentView"*
  %718 = bitcast %"class.blink::FrameView"* %714 to i1 (%"class.blink::EmbeddedContentView"*)***
  %719 = load i1 (%"class.blink::EmbeddedContentView"*)**, i1 (%"class.blink::EmbeddedContentView"*)*** %718, align 8
  %720 = getelementptr inbounds i1 (%"class.blink::EmbeddedContentView"*)*, i1 (%"class.blink::EmbeddedContentView"*)** %719, i64 4
  %721 = load i1 (%"class.blink::EmbeddedContentView"*)*, i1 (%"class.blink::EmbeddedContentView"*)** %720, align 8
  %722 = call zeroext i1 %721(%"class.blink::EmbeddedContentView"* nonnull %717) #8
  br i1 %722, label %723, label %755

723:                                              ; preds = %716
  %724 = bitcast %"class.blink::FrameView"* %714 to %"class.blink::LocalFrameView"*
  %725 = call %"class.blink::LayoutView"* @_ZNK5blink14LocalFrameView13GetLayoutViewEv(%"class.blink::LocalFrameView"* nonnull %724) #8
  %726 = icmp eq %"class.blink::LayoutView"* %725, null
  br i1 %726, label %755, label %727

727:                                              ; preds = %723
  %728 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %725, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %729 = load %"class.blink::Node"*, %"class.blink::Node"** %728, align 8
  %730 = icmp eq %"class.blink::Node"* %729, null
  br i1 %730, label %731, label %740

731:                                              ; preds = %727
  %732 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %725, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %733

733:                                              ; preds = %731, %733
  %734 = phi %"class.blink::LayoutObject"* [ %736, %733 ], [ %732, %731 ]
  %735 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %734, i64 0, i32 7
  %736 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %735, align 8
  %737 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %736, i64 0, i32 6, i32 0, i32 0
  %738 = load %"class.blink::Node"*, %"class.blink::Node"** %737, align 8
  %739 = icmp eq %"class.blink::Node"* %738, null
  br i1 %739, label %733, label %740

740:                                              ; preds = %733, %727
  %741 = phi %"class.blink::Node"* [ %729, %727 ], [ %738, %733 ]
  %742 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %741, i64 0, i32 3, i32 0, i32 0
  %743 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %742, align 8
  %744 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %743, i64 0, i32 2, i32 0, i32 0
  %745 = load %"class.blink::Document"*, %"class.blink::Document"** %744, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %745, i32 27) #8
  %746 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %725, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %747 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %746, align 8
  %748 = icmp eq %"struct.blink::FragmentData::RareData"* %747, null
  br i1 %748, label %755, label %749

749:                                              ; preds = %740
  %750 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %747, i64 0, i32 0, i32 0, i32 0, i32 0
  %751 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %750, align 8
  %752 = icmp eq %"class.blink::PaintLayer"* %751, null
  br i1 %752, label %755, label %753

753:                                              ; preds = %749
  %754 = add nsw i32 %2, 1
  call void @_ZN5blink16LayoutTreeAsText11WriteLayersERN3WTF10TextStreamEPKNS_10PaintLayerEPS4_ijS6_(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::PaintLayer"* nonnull %751, %"class.blink::PaintLayer"* nonnull %751, i32 %754, i32 %3, %"class.blink::PaintLayer"* null)
  br label %755

755:                                              ; preds = %680, %716, %740, %712, %695, %723, %749, %753, %74, %67, %60, %53, %46, %40, %34, %27
  ret void
}

declare void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_14LayoutSVGShapeEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutSVGShape"* dereferenceable(200), i32) local_unnamed_addr #2

declare void @_ZN5blink25WriteSVGResourceContainerERN3WTF10TextStreamERKNS_12LayoutObjectEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #2

declare void @_ZN5blink17WriteSVGContainerERN3WTF10TextStreamERKNS_12LayoutObjectEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #2

declare void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_13LayoutSVGRootEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutSVGRoot"* dereferenceable(336), i32) local_unnamed_addr #2

declare void @_ZN5blink12WriteSVGTextERN3WTF10TextStreamERKNS_13LayoutSVGTextEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutSVGText"* dereferenceable(352), i32) local_unnamed_addr #2

declare void @_ZN5blink14WriteSVGInlineERN3WTF10TextStreamERKNS_15LayoutSVGInlineEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutSVGInline"* dereferenceable(120), i32) local_unnamed_addr #2

declare void @_ZN5blink18WriteSVGInlineTextERN3WTF10TextStreamERKNS_19LayoutSVGInlineTextEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutSVGInlineText"* dereferenceable(280), i32) local_unnamed_addr #2

declare void @_ZN5blink13WriteSVGImageERN3WTF10TextStreamERKNS_14LayoutSVGImageEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutSVGImage"* dereferenceable(176), i32) local_unnamed_addr #2

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #2

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutBlockFlow"* dereferenceable(280)) unnamed_addr #2

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

declare %"class.blink::FrameView"* @_ZNK5blink21LayoutEmbeddedContent14ChildFrameViewEv(%"class.blink::LayoutEmbeddedContent"*) local_unnamed_addr #2

declare %"class.blink::LayoutView"* @_ZNK5blink14LocalFrameView13GetLayoutViewEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16LayoutTreeAsText11WriteLayersERN3WTF10TextStreamEPKNS_10PaintLayerEPS4_ijS6_(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, i32, i32, %"class.blink::PaintLayer"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::PaintLayerPaintOrderIterator", align 8
  %8 = alloca %"class.blink::PaintLayer"*, align 8
  %9 = alloca %"class.blink::PaintLayerPaintOrderIterator", align 8
  %10 = alloca %"class.blink::PaintLayer"*, align 8
  %11 = alloca %"class.blink::PaintLayerPaintOrderIterator", align 8
  %12 = alloca %"class.blink::PaintLayer"*, align 8
  %13 = alloca %"struct.blink::PhysicalRect", align 4
  %14 = alloca %"class.blink::ClipRect", align 4
  %15 = alloca %"class.blink::ClipRect", align 4
  %16 = alloca { %"class.blink::PaintLayer"*, i8 }, align 8
  %17 = alloca %"class.blink::ClipRectsContext", align 8
  %18 = alloca { %"class.blink::PaintLayer"*, i8 }, align 8
  %19 = alloca %"class.blink::ClipRectsContext", align 8
  %20 = alloca %"struct.blink::PhysicalOffset", align 4
  %21 = alloca %"class.WTF::Vector.2964", align 8
  %22 = alloca %"class.WTF::Vector.2964", align 8
  %23 = alloca %"class.WTF::Vector.2964", align 8
  %24 = bitcast %"struct.blink::PhysicalRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 0, i64 16, i1 false) #8
  %25 = bitcast %"class.blink::ClipRect"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %25) #8
  %26 = bitcast %"class.blink::ClipRect"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -86, i64 20, i1 false)
  call void @_ZN5blink8ClipRectC1Ev(%"class.blink::ClipRect"* nonnull %14) #8
  %27 = bitcast %"class.blink::ClipRect"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %27) #8
  %28 = bitcast %"class.blink::ClipRect"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -86, i64 20, i1 false)
  call void @_ZN5blink8ClipRectC1Ev(%"class.blink::ClipRect"* nonnull %15) #8
  %29 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 2
  %30 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %30, i64 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %31, align 8
  %33 = icmp eq %"struct.blink::FragmentData::RareData"* %32, null
  br i1 %33, label %58, label %34

34:                                               ; preds = %6
  %35 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %32, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::RefCountedPropertyTreeState"*, %"class.blink::RefCountedPropertyTreeState"** %35, align 8
  %37 = icmp eq %"class.blink::RefCountedPropertyTreeState"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = bitcast { %"class.blink::PaintLayer"*, i8 }* %16 to %"class.blink::PaintLayerClipper"*
  %40 = bitcast { %"class.blink::PaintLayer"*, i8 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8
  %41 = call { %"class.blink::PaintLayer"*, i8 } @_ZNK5blink10PaintLayer7ClipperENS0_20GeometryMapperOptionE(%"class.blink::PaintLayer"* %2, i32 0) #8
  %42 = getelementptr inbounds { %"class.blink::PaintLayer"*, i8 }, { %"class.blink::PaintLayer"*, i8 }* %16, i64 0, i32 0
  %43 = extractvalue { %"class.blink::PaintLayer"*, i8 } %41, 0
  store %"class.blink::PaintLayer"* %43, %"class.blink::PaintLayer"** %42, align 8
  %44 = getelementptr inbounds { %"class.blink::PaintLayer"*, i8 }, { %"class.blink::PaintLayer"*, i8 }* %16, i64 0, i32 1
  %45 = extractvalue { %"class.blink::PaintLayer"*, i8 } %41, 1
  store i8 %45, i8* %44, align 8
  %46 = bitcast %"class.blink::ClipRectsContext"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #8
  %47 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 2
  %48 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %48, i64 0, i32 0, i32 10
  %50 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %17, i64 0, i32 0
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %17, i64 0, i32 1
  store %"class.blink::FragmentData"* %49, %"class.blink::FragmentData"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %17, i64 0, i32 2
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %17, i64 0, i32 3
  %54 = bitcast %"struct.blink::PhysicalOffset"* %53 to i64*
  store i64 0, i64* %54, align 4
  %55 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %17, i64 0, i32 4
  store i32 1, i32* %55, align 4
  %56 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %29, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %56, i64 0, i32 0, i32 10
  call void @_ZNK5blink17PaintLayerClipper14CalculateRectsERKNS_16ClipRectsContextEPKNS_12FragmentDataEPKNS_8CullRectERNS_12PhysicalRectERNS_8ClipRectESD_PKNS_14PhysicalOffsetE(%"class.blink::PaintLayerClipper"* nonnull %39, %"class.blink::ClipRectsContext"* nonnull dereferenceable(32) %17, %"class.blink::FragmentData"* %57, %"class.blink::CullRect"* null, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13, %"class.blink::ClipRect"* nonnull dereferenceable(20) %14, %"class.blink::ClipRect"* nonnull dereferenceable(20) %15, %"struct.blink::PhysicalOffset"* null) #8
  br label %71

58:                                               ; preds = %34, %6
  %59 = bitcast { %"class.blink::PaintLayer"*, i8 }* %18 to %"class.blink::PaintLayerClipper"*
  %60 = bitcast { %"class.blink::PaintLayer"*, i8 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  %61 = call { %"class.blink::PaintLayer"*, i8 } @_ZNK5blink10PaintLayer7ClipperENS0_20GeometryMapperOptionE(%"class.blink::PaintLayer"* %2, i32 1) #8
  %62 = getelementptr inbounds { %"class.blink::PaintLayer"*, i8 }, { %"class.blink::PaintLayer"*, i8 }* %18, i64 0, i32 0
  %63 = extractvalue { %"class.blink::PaintLayer"*, i8 } %61, 0
  store %"class.blink::PaintLayer"* %63, %"class.blink::PaintLayer"** %62, align 8
  %64 = getelementptr inbounds { %"class.blink::PaintLayer"*, i8 }, { %"class.blink::PaintLayer"*, i8 }* %18, i64 0, i32 1
  %65 = extractvalue { %"class.blink::PaintLayer"*, i8 } %61, 1
  store i8 %65, i8* %64, align 8
  %66 = bitcast %"class.blink::ClipRectsContext"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #8
  %67 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %19, i64 0, i32 0
  store %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"** %67, align 8
  %68 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %19, i64 0, i32 1
  %69 = getelementptr inbounds %"class.blink::ClipRectsContext", %"class.blink::ClipRectsContext"* %19, i64 0, i32 4
  %70 = bitcast %"class.blink::FragmentData"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 20, i1 false)
  store i32 1, i32* %69, align 4
  call void @_ZNK5blink17PaintLayerClipper14CalculateRectsERKNS_16ClipRectsContextEPKNS_12FragmentDataEPKNS_8CullRectERNS_12PhysicalRectERNS_8ClipRectESD_PKNS_14PhysicalOffsetE(%"class.blink::PaintLayerClipper"* nonnull %59, %"class.blink::ClipRectsContext"* nonnull dereferenceable(32) %19, %"class.blink::FragmentData"* null, %"class.blink::CullRect"* null, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13, %"class.blink::ClipRect"* nonnull dereferenceable(20) %14, %"class.blink::ClipRect"* nonnull dereferenceable(20) %15, %"struct.blink::PhysicalOffset"* null) #8
  br label %71

71:                                               ; preds = %58, %38
  %72 = phi i8* [ %66, %58 ], [ %46, %38 ]
  %73 = phi i8* [ %60, %58 ], [ %40, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #8
  %74 = bitcast %"struct.blink::PhysicalOffset"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  %75 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %20, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %20, i64 0, i32 1, i32 0
  store i32 0, i32* %75, align 4
  store i32 0, i32* %76, align 4
  call void @_ZNK5blink10PaintLayer20ConvertToLayerCoordsEPKS0_RNS_14PhysicalOffsetE(%"class.blink::PaintLayer"* %2, %"class.blink::PaintLayer"* %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %20) #8
  %77 = and i32 %4, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.blink::ClipRect", %"class.blink::ClipRect"* %14, i64 0, i32 0
  %81 = call zeroext i1 @_ZNK5blink10PaintLayer20IntersectsDamageRectERKNS_12PhysicalRectES3_RKNS_14PhysicalOffsetE(%"class.blink::PaintLayer"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %80, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %20) #8
  %82 = zext i1 %81 to i8
  br label %83

83:                                               ; preds = %71, %79
  %84 = phi i8 [ %82, %79 ], [ 1, %71 ]
  %85 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %29, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %85, i64 0, i32 0
  %87 = bitcast %"class.blink::LayoutBoxModelObject"* %85 to i1 (%"class.blink::LayoutObject"*)***
  %88 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, i64 27
  %90 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = call zeroext i1 %90(%"class.blink::LayoutObject"* %86) #8
  %92 = icmp eq %"class.blink::LayoutBoxModelObject"* %85, null
  %93 = xor i1 %91, true
  %94 = or i1 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %83
  %96 = bitcast %"class.blink::LayoutBoxModelObject"* %85 to %"class.blink::LayoutEmbeddedContent"*
  %97 = call zeroext i1 @_ZNK5blink21LayoutEmbeddedContent20IsThrottledFrameViewEv(%"class.blink::LayoutEmbeddedContent"* nonnull %96) #8
  %98 = select i1 %97, i8 0, i8 %84
  br label %99

99:                                               ; preds = %95, %83
  %100 = phi i8 [ %84, %83 ], [ %98, %95 ]
  %101 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %29, align 8
  %102 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %126, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %101, i64 0, i32 0, i32 4
  %106 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %105 to i96*
  %107 = load i96, i96* %106, align 4
  %108 = and i96 %107, 16777216
  %109 = icmp eq i96 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %101, i64 0, i32 0, i32 6, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %126, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %112, i64 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 67108876
  %118 = icmp eq i32 %117, 67108864
  br i1 %118, label %119, label %126, !prof !4

119:                                              ; preds = %114
  %120 = bitcast %"class.blink::Node"* %112 to %"class.blink::Element"*
  %121 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %120) #8
  %122 = icmp eq %"class.blink::DisplayLockContext"* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %121) #8
  %125 = xor i1 %124, true
  br label %126

126:                                              ; preds = %99, %104, %110, %114, %119, %123
  %127 = phi i1 [ false, %119 ], [ %125, %123 ], [ false, %99 ], [ false, %114 ], [ false, %110 ], [ false, %104 ]
  %128 = bitcast %"class.WTF::Vector.2964"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #8
  %129 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %21, i64 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %21, i64 0, i32 0, i32 0, i32 1
  %131 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %21, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 16, i1 false) #8, !alias.scope !11
  %132 = bitcast %"class.blink::PaintLayerPaintOrderIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #8, !noalias !11
  %133 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %11, i64 0, i32 0
  %134 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %11, i64 0, i32 1
  %135 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %11, i64 0, i32 2
  %136 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %11, i64 0, i32 3
  store %"class.blink::PaintLayer"* %2, %"class.blink::PaintLayer"** %133, align 8, !noalias !11
  store i32 1, i32* %134, align 8, !noalias !11
  store i32 0, i32* %135, align 4, !noalias !11
  %137 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %2, i64 0, i32 6
  %138 = bitcast %"class.blink::PaintLayer"** %137 to i64*
  %139 = load i64, i64* %138, align 8, !noalias !11
  %140 = bitcast %"class.blink::PaintLayer"** %136 to i64*
  store i64 %139, i64* %140, align 8, !noalias !11
  %141 = bitcast %"class.blink::PaintLayer"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #8, !noalias !11
  %142 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %11) #8, !noalias !11
  store %"class.blink::PaintLayer"* %142, %"class.blink::PaintLayer"** %12, align 8, !noalias !11
  %143 = icmp eq %"class.blink::PaintLayer"* %142, null
  br i1 %143, label %164, label %144

144:                                              ; preds = %126, %161
  %145 = phi %"class.blink::PaintLayer"* [ %159, %161 ], [ %142, %126 ]
  %146 = phi i32 [ %163, %161 ], [ 0, %126 ]
  %147 = phi i32 [ %162, %161 ], [ 0, %126 ]
  %148 = icmp eq i32 %147, %146
  br i1 %148, label %157, label %149, !prof !3

149:                                              ; preds = %144
  %150 = ptrtoint %"class.blink::PaintLayer"* %145 to i64
  %151 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %129, align 8, !alias.scope !11
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %151, i64 %152
  %154 = bitcast %"class.blink::PaintLayer"** %153 to i64*
  store i64 %150, i64* %154, align 8
  %155 = load i32, i32* %131, align 4, !alias.scope !11
  %156 = add i32 %155, 1
  store i32 %156, i32* %131, align 4, !alias.scope !11
  br label %158

157:                                              ; preds = %144
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2964"* nonnull %21, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %12) #8
  br label %158

158:                                              ; preds = %157, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #8, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #8, !noalias !11
  store %"class.blink::PaintLayer"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintLayer"*), %"class.blink::PaintLayer"** %12, align 8, !noalias !11
  %159 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %11) #8
  store %"class.blink::PaintLayer"* %159, %"class.blink::PaintLayer"** %12, align 8, !noalias !11
  %160 = icmp eq %"class.blink::PaintLayer"* %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %131, align 4, !alias.scope !11
  %163 = load i32, i32* %130, align 8, !alias.scope !11
  br label %144

164:                                              ; preds = %158, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #8, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #8, !noalias !11
  %165 = load i32, i32* %131, align 4
  %166 = icmp eq i32 %165, 0
  %167 = xor i1 %166, true
  %168 = and i8 %100, 1
  %169 = icmp ne i8 %168, 0
  %170 = xor i1 %169, true
  %171 = or i1 %166, %170
  br i1 %171, label %176, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.blink::ClipRect", %"class.blink::ClipRect"* %14, i64 0, i32 0
  %174 = getelementptr inbounds %"class.blink::ClipRect", %"class.blink::ClipRect"* %15, i64 0, i32 0
  call fastcc void @_ZN5blinkL5WriteERN3WTF10TextStreamERNS_10PaintLayerERKNS_12PhysicalRectES7_S7_NS_15LayerPaintPhaseEijPKS3_(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::PaintLayer"* dereferenceable(152) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %173, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %174, i32 -1, i32 %3, i32 %4, %"class.blink::PaintLayer"* %5)
  %175 = load i32, i32* %131, align 4
  br label %176

176:                                              ; preds = %164, %172
  %177 = phi i32 [ %165, %164 ], [ %175, %172 ]
  %178 = icmp eq i32 %177, 0
  %179 = or i1 %127, %178
  br i1 %179, label %207, label %180

180:                                              ; preds = %176
  %181 = and i32 %4, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %180
  %184 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %129, align 8
  %185 = zext i32 %177 to i64
  %186 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %184, i64 %185
  br label %198

187:                                              ; preds = %180
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %3) #8
  %188 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i64 0, i64 0)) #8
  %189 = load i32, i32* %131, align 4
  %190 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %188, i32 %189) #8
  %191 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %190, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #8
  %192 = add nsw i32 %3, 1
  %193 = load i32, i32* %131, align 4
  %194 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %129, align 8
  %195 = zext i32 %193 to i64
  %196 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %194, i64 %195
  %197 = icmp eq i32 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %183, %187
  %199 = phi %"class.blink::PaintLayer"** [ %186, %183 ], [ %196, %187 ]
  %200 = phi %"class.blink::PaintLayer"** [ %184, %183 ], [ %194, %187 ]
  %201 = phi i32 [ %3, %183 ], [ %192, %187 ]
  br label %202

202:                                              ; preds = %198, %202
  %203 = phi %"class.blink::PaintLayer"** [ %205, %202 ], [ %200, %198 ]
  %204 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %203, align 8
  call void @_ZN5blink16LayoutTreeAsText11WriteLayersERN3WTF10TextStreamEPKNS_10PaintLayerEPS4_ijS6_(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"* %204, i32 %201, i32 %4, %"class.blink::PaintLayer"* %5)
  %205 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %203, i64 1
  %206 = icmp eq %"class.blink::PaintLayer"** %205, %199
  br i1 %206, label %207, label %202

207:                                              ; preds = %202, %187, %176
  br i1 %169, label %208, label %212

208:                                              ; preds = %207
  %209 = getelementptr inbounds %"class.blink::ClipRect", %"class.blink::ClipRect"* %14, i64 0, i32 0
  %210 = getelementptr inbounds %"class.blink::ClipRect", %"class.blink::ClipRect"* %15, i64 0, i32 0
  %211 = zext i1 %167 to i32
  call fastcc void @_ZN5blinkL5WriteERN3WTF10TextStreamERNS_10PaintLayerERKNS_12PhysicalRectES7_S7_NS_15LayerPaintPhaseEijPKS3_(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::PaintLayer"* dereferenceable(152) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %209, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %210, i32 %211, i32 %3, i32 %4, %"class.blink::PaintLayer"* %5)
  br label %212

212:                                              ; preds = %208, %207
  %213 = bitcast %"class.WTF::Vector.2964"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %213) #8
  %214 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %22, i64 0, i32 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %22, i64 0, i32 0, i32 0, i32 1
  %216 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %22, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 0, i64 16, i1 false) #8, !alias.scope !14
  %217 = bitcast %"class.blink::PaintLayerPaintOrderIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #8, !noalias !14
  %218 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %9, i64 0, i32 0
  %219 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %9, i64 0, i32 1
  %220 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %9, i64 0, i32 2
  %221 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %9, i64 0, i32 3
  store %"class.blink::PaintLayer"* %2, %"class.blink::PaintLayer"** %218, align 8, !noalias !14
  store i32 2, i32* %219, align 8, !noalias !14
  store i32 0, i32* %220, align 4, !noalias !14
  %222 = load i64, i64* %138, align 8, !noalias !14
  %223 = bitcast %"class.blink::PaintLayer"** %221 to i64*
  store i64 %222, i64* %223, align 8, !noalias !14
  %224 = bitcast %"class.blink::PaintLayer"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #8, !noalias !14
  %225 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %9) #8, !noalias !14
  store %"class.blink::PaintLayer"* %225, %"class.blink::PaintLayer"** %10, align 8, !noalias !14
  %226 = icmp eq %"class.blink::PaintLayer"* %225, null
  br i1 %226, label %247, label %227

227:                                              ; preds = %212, %244
  %228 = phi %"class.blink::PaintLayer"* [ %242, %244 ], [ %225, %212 ]
  %229 = phi i32 [ %246, %244 ], [ 0, %212 ]
  %230 = phi i32 [ %245, %244 ], [ 0, %212 ]
  %231 = icmp eq i32 %230, %229
  br i1 %231, label %240, label %232, !prof !3

232:                                              ; preds = %227
  %233 = ptrtoint %"class.blink::PaintLayer"* %228 to i64
  %234 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %214, align 8, !alias.scope !14
  %235 = zext i32 %230 to i64
  %236 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %234, i64 %235
  %237 = bitcast %"class.blink::PaintLayer"** %236 to i64*
  store i64 %233, i64* %237, align 8
  %238 = load i32, i32* %216, align 4, !alias.scope !14
  %239 = add i32 %238, 1
  store i32 %239, i32* %216, align 4, !alias.scope !14
  br label %241

240:                                              ; preds = %227
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2964"* nonnull %22, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %10) #8
  br label %241

241:                                              ; preds = %240, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #8, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #8, !noalias !14
  store %"class.blink::PaintLayer"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintLayer"*), %"class.blink::PaintLayer"** %10, align 8, !noalias !14
  %242 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %9) #8
  store %"class.blink::PaintLayer"* %242, %"class.blink::PaintLayer"** %10, align 8, !noalias !14
  %243 = icmp eq %"class.blink::PaintLayer"* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %241
  %245 = load i32, i32* %216, align 4, !alias.scope !14
  %246 = load i32, i32* %215, align 8, !alias.scope !14
  br label %227

247:                                              ; preds = %241, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #8, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #8, !noalias !14
  %248 = load i32, i32* %216, align 4
  %249 = icmp eq i32 %248, 0
  %250 = or i1 %127, %249
  br i1 %250, label %278, label %251

251:                                              ; preds = %247
  %252 = and i32 %4, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %214, align 8
  %256 = zext i32 %248 to i64
  %257 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %255, i64 %256
  br label %269

258:                                              ; preds = %251
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %3) #8
  %259 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0)) #8
  %260 = load i32, i32* %216, align 4
  %261 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %259, i32 %260) #8
  %262 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %261, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #8
  %263 = add nsw i32 %3, 1
  %264 = load i32, i32* %216, align 4
  %265 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %214, align 8
  %266 = zext i32 %264 to i64
  %267 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %265, i64 %266
  %268 = icmp eq i32 %264, 0
  br i1 %268, label %278, label %269

269:                                              ; preds = %254, %258
  %270 = phi %"class.blink::PaintLayer"** [ %257, %254 ], [ %267, %258 ]
  %271 = phi %"class.blink::PaintLayer"** [ %255, %254 ], [ %265, %258 ]
  %272 = phi i32 [ %3, %254 ], [ %263, %258 ]
  br label %273

273:                                              ; preds = %269, %273
  %274 = phi %"class.blink::PaintLayer"** [ %276, %273 ], [ %271, %269 ]
  %275 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %274, align 8
  call void @_ZN5blink16LayoutTreeAsText11WriteLayersERN3WTF10TextStreamEPKNS_10PaintLayerEPS4_ijS6_(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"* %275, i32 %272, i32 %4, %"class.blink::PaintLayer"* %5)
  %276 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %274, i64 1
  %277 = icmp eq %"class.blink::PaintLayer"** %276, %270
  br i1 %277, label %278, label %273

278:                                              ; preds = %273, %258, %247
  %279 = bitcast %"class.WTF::Vector.2964"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %279) #8
  %280 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %23, i64 0, i32 0, i32 0, i32 0
  %281 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %23, i64 0, i32 0, i32 0, i32 1
  %282 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %23, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 0, i64 16, i1 false) #8, !alias.scope !17
  %283 = bitcast %"class.blink::PaintLayerPaintOrderIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %283) #8, !noalias !17
  %284 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %7, i64 0, i32 0
  %285 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %7, i64 0, i32 1
  %286 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %7, i64 0, i32 2
  %287 = getelementptr inbounds %"class.blink::PaintLayerPaintOrderIterator", %"class.blink::PaintLayerPaintOrderIterator"* %7, i64 0, i32 3
  store %"class.blink::PaintLayer"* %2, %"class.blink::PaintLayer"** %284, align 8, !noalias !17
  store i32 4, i32* %285, align 8, !noalias !17
  store i32 0, i32* %286, align 4, !noalias !17
  %288 = load i64, i64* %138, align 8, !noalias !17
  %289 = bitcast %"class.blink::PaintLayer"** %287 to i64*
  store i64 %288, i64* %289, align 8, !noalias !17
  %290 = bitcast %"class.blink::PaintLayer"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #8, !noalias !17
  %291 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %7) #8, !noalias !17
  store %"class.blink::PaintLayer"* %291, %"class.blink::PaintLayer"** %8, align 8, !noalias !17
  %292 = icmp eq %"class.blink::PaintLayer"* %291, null
  br i1 %292, label %293, label %294

293:                                              ; preds = %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #8, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %283) #8, !noalias !17
  br label %344

294:                                              ; preds = %278, %312
  %295 = phi %"class.blink::PaintLayer"* [ %309, %312 ], [ %291, %278 ]
  %296 = phi i32 [ %313, %312 ], [ 0, %278 ]
  %297 = phi i32 [ %311, %312 ], [ 0, %278 ]
  %298 = icmp eq i32 %297, %296
  br i1 %298, label %307, label %299, !prof !3

299:                                              ; preds = %294
  %300 = ptrtoint %"class.blink::PaintLayer"* %295 to i64
  %301 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %280, align 8, !alias.scope !17
  %302 = zext i32 %297 to i64
  %303 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %301, i64 %302
  %304 = bitcast %"class.blink::PaintLayer"** %303 to i64*
  store i64 %300, i64* %304, align 8
  %305 = load i32, i32* %282, align 4, !alias.scope !17
  %306 = add i32 %305, 1
  store i32 %306, i32* %282, align 4, !alias.scope !17
  br label %308

307:                                              ; preds = %294
  call void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2964"* nonnull %23, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %8) #8
  br label %308

308:                                              ; preds = %307, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #8, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #8, !noalias !17
  store %"class.blink::PaintLayer"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintLayer"*), %"class.blink::PaintLayer"** %8, align 8, !noalias !17
  %309 = call %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"* nonnull %7) #8
  store %"class.blink::PaintLayer"* %309, %"class.blink::PaintLayer"** %8, align 8, !noalias !17
  %310 = icmp eq %"class.blink::PaintLayer"* %309, null
  %311 = load i32, i32* %282, align 4
  br i1 %310, label %314, label %312

312:                                              ; preds = %308
  %313 = load i32, i32* %281, align 8, !alias.scope !17
  br label %294

314:                                              ; preds = %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #8, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %283) #8, !noalias !17
  %315 = icmp eq i32 %311, 0
  %316 = or i1 %127, %315
  br i1 %316, label %344, label %317

317:                                              ; preds = %314
  %318 = and i32 %4, 2
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %324

320:                                              ; preds = %317
  %321 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %280, align 8
  %322 = zext i32 %311 to i64
  %323 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %321, i64 %322
  br label %335

324:                                              ; preds = %317
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %3) #8
  %325 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0)) #8
  %326 = load i32, i32* %282, align 4
  %327 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEj(%"class.WTF::TextStream"* %325, i32 %326) #8
  %328 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %327, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #8
  %329 = add nsw i32 %3, 1
  %330 = load i32, i32* %282, align 4
  %331 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %280, align 8
  %332 = zext i32 %330 to i64
  %333 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %331, i64 %332
  %334 = icmp eq i32 %330, 0
  br i1 %334, label %346, label %335

335:                                              ; preds = %320, %324
  %336 = phi %"class.blink::PaintLayer"** [ %323, %320 ], [ %333, %324 ]
  %337 = phi %"class.blink::PaintLayer"** [ %321, %320 ], [ %331, %324 ]
  %338 = phi i32 [ %3, %320 ], [ %329, %324 ]
  br label %339

339:                                              ; preds = %335, %339
  %340 = phi %"class.blink::PaintLayer"** [ %342, %339 ], [ %337, %335 ]
  %341 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %340, align 8
  call void @_ZN5blink16LayoutTreeAsText11WriteLayersERN3WTF10TextStreamEPKNS_10PaintLayerEPS4_ijS6_(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::PaintLayer"* %1, %"class.blink::PaintLayer"* %341, i32 %338, i32 %4, %"class.blink::PaintLayer"* %5)
  %342 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %340, i64 1
  %343 = icmp eq %"class.blink::PaintLayer"** %342, %336
  br i1 %343, label %344, label %339

344:                                              ; preds = %339, %314, %293
  %345 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %280, align 8
  br label %346

346:                                              ; preds = %344, %324
  %347 = phi %"class.blink::PaintLayer"** [ %345, %344 ], [ %331, %324 ]
  %348 = icmp eq %"class.blink::PaintLayer"** %347, null
  %349 = bitcast %"class.blink::PaintLayer"** %347 to i8*
  br i1 %348, label %355, label %350, !prof !20

350:                                              ; preds = %346
  %351 = load i32, i32* %282, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %354, label %353, !prof !3

353:                                              ; preds = %350
  store i32 0, i32* %282, align 4
  br label %354

354:                                              ; preds = %353, %350
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %349) #8
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %280, align 8
  br label %355

355:                                              ; preds = %346, %354
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %279) #8
  %356 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %214, align 8
  %357 = icmp eq %"class.blink::PaintLayer"** %356, null
  %358 = bitcast %"class.blink::PaintLayer"** %356 to i8*
  br i1 %357, label %364, label %359, !prof !20

359:                                              ; preds = %355
  %360 = load i32, i32* %216, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %363, label %362, !prof !3

362:                                              ; preds = %359
  store i32 0, i32* %216, align 4
  br label %363

363:                                              ; preds = %362, %359
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %358) #8
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %214, align 8
  br label %364

364:                                              ; preds = %355, %363
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %213) #8
  %365 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %129, align 8
  %366 = icmp eq %"class.blink::PaintLayer"** %365, null
  %367 = bitcast %"class.blink::PaintLayer"** %365 to i8*
  br i1 %366, label %373, label %368, !prof !20

368:                                              ; preds = %364
  %369 = load i32, i32* %131, align 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %372, label %371, !prof !3

371:                                              ; preds = %368
  store i32 0, i32* %131, align 4
  br label %372

372:                                              ; preds = %371, %368
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %367) #8
  store %"class.blink::PaintLayer"** null, %"class.blink::PaintLayer"*** %129, align 8
  br label %373

373:                                              ; preds = %364, %372
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  ret void
}

declare void @_ZN5blink8ClipRectC1Ev(%"class.blink::ClipRect"*) unnamed_addr #2

declare { %"class.blink::PaintLayer"*, i8 } @_ZNK5blink10PaintLayer7ClipperENS0_20GeometryMapperOptionE(%"class.blink::PaintLayer"*, i32) local_unnamed_addr #2

declare void @_ZNK5blink17PaintLayerClipper14CalculateRectsERKNS_16ClipRectsContextEPKNS_12FragmentDataEPKNS_8CullRectERNS_12PhysicalRectERNS_8ClipRectESD_PKNS_14PhysicalOffsetE(%"class.blink::PaintLayerClipper"*, %"class.blink::ClipRectsContext"* dereferenceable(32), %"class.blink::FragmentData"*, %"class.blink::CullRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ClipRect"* dereferenceable(20), %"class.blink::ClipRect"* dereferenceable(20), %"struct.blink::PhysicalOffset"*) local_unnamed_addr #2

declare void @_ZNK5blink10PaintLayer20ConvertToLayerCoordsEPKS0_RNS_14PhysicalOffsetE(%"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10PaintLayer20IntersectsDamageRectERKNS_12PhysicalRectES3_RKNS_14PhysicalOffsetE(%"class.blink::PaintLayer"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink21LayoutEmbeddedContent20IsThrottledFrameViewEv(%"class.blink::LayoutEmbeddedContent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL5WriteERN3WTF10TextStreamERNS_10PaintLayerERKNS_12PhysicalRectES7_S7_NS_15LayerPaintPhaseEijPKS3_(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::PaintLayer"* dereferenceable(152), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i32, i32, i32, %"class.blink::PaintLayer"* readnone) unnamed_addr #3 {
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.blink::IntRect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.blink::IntRect"*
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"class.blink::IntRect"*
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %"struct.blink::PhysicalRect"*
  %19 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %21 = bitcast i64* %20 to i32*
  %22 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %11, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i32, i32* %23, align 4
  %26 = sdiv i32 %25, 64
  %27 = srem i32 %25, 64
  %28 = add nsw i32 %27, 32
  %29 = ashr i32 %28, 6
  %30 = add nsw i32 %29, %26
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sdiv i32 %32, 64
  %34 = srem i32 %32, 64
  %35 = add nsw i32 %34, 32
  %36 = ashr i32 %35, 6
  %37 = add nsw i32 %36, %33
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %30 to i64
  %41 = or i64 %39, %40
  %42 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %43) #8
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !3
  %50 = sdiv i32 %49, 64
  %51 = srem i32 %49, 64
  %52 = add nsw i32 %51, 32
  %53 = ashr i32 %52, 6
  %54 = sub nsw i32 %50, %29
  %55 = add nsw i32 %53, %54
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %9
  %58 = add i32 %43, 4
  %59 = icmp ugt i32 %58, 8
  br i1 %59, label %60, label %63, !prof !21

60:                                               ; preds = %57
  %61 = icmp sgt i32 %43, 0
  %62 = select i1 %61, i32 1, i32 -1
  br label %63

63:                                               ; preds = %60, %57, %9
  %64 = phi i32 [ %62, %60 ], [ %55, %9 ], [ 0, %57 ]
  %65 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %66) #8
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !3
  %73 = sdiv i32 %72, 64
  %74 = srem i32 %72, 64
  %75 = add nsw i32 %74, 32
  %76 = ashr i32 %75, 6
  %77 = sub nsw i32 %73, %36
  %78 = add nsw i32 %76, %77
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %63
  %81 = add i32 %66, 4
  %82 = icmp ugt i32 %81, 8
  br i1 %82, label %83, label %86, !prof !21

83:                                               ; preds = %80
  %84 = icmp sgt i32 %66, 0
  %85 = select i1 %84, i32 1, i32 -1
  br label %86

86:                                               ; preds = %63, %80, %83
  %87 = phi i32 [ %85, %83 ], [ %78, %63 ], [ 0, %80 ]
  %88 = zext i32 %87 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %64 to i64
  %91 = or i64 %89, %90
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %41, i64* %92, align 8
  store i64 %91, i64* %20, align 8
  %93 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #8
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 16, i1 false)
  %97 = load i32, i32* %95, align 4
  %98 = sdiv i32 %97, 64
  %99 = srem i32 %97, 64
  %100 = add nsw i32 %99, 32
  %101 = ashr i32 %100, 6
  %102 = add nsw i32 %101, %98
  %103 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = sdiv i32 %104, 64
  %106 = srem i32 %104, 64
  %107 = add nsw i32 %106, 32
  %108 = ashr i32 %107, 6
  %109 = add nsw i32 %108, %105
  %110 = zext i32 %109 to i64
  %111 = shl nuw i64 %110, 32
  %112 = zext i32 %102 to i64
  %113 = or i64 %111, %112
  %114 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %115) #8
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !3
  %122 = sdiv i32 %121, 64
  %123 = srem i32 %121, 64
  %124 = add nsw i32 %123, 32
  %125 = ashr i32 %124, 6
  %126 = sub nsw i32 %122, %101
  %127 = add nsw i32 %125, %126
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %135

129:                                              ; preds = %86
  %130 = add i32 %115, 4
  %131 = icmp ugt i32 %130, 8
  br i1 %131, label %132, label %135, !prof !21

132:                                              ; preds = %129
  %133 = icmp sgt i32 %115, 0
  %134 = select i1 %133, i32 1, i32 -1
  br label %135

135:                                              ; preds = %132, %129, %86
  %136 = phi i32 [ %134, %132 ], [ %127, %86 ], [ 0, %129 ]
  %137 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %138, 0
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %138) #8
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !3
  %145 = sdiv i32 %144, 64
  %146 = srem i32 %144, 64
  %147 = add nsw i32 %146, 32
  %148 = ashr i32 %147, 6
  %149 = sub nsw i32 %145, %108
  %150 = add nsw i32 %148, %149
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %158

152:                                              ; preds = %135
  %153 = add i32 %138, 4
  %154 = icmp ugt i32 %153, 8
  br i1 %154, label %155, label %158, !prof !21

155:                                              ; preds = %152
  %156 = icmp sgt i32 %138, 0
  %157 = select i1 %156, i32 1, i32 -1
  br label %158

158:                                              ; preds = %135, %152, %155
  %159 = phi i32 [ %157, %155 ], [ %150, %135 ], [ 0, %152 ]
  %160 = zext i32 %159 to i64
  %161 = shl nuw i64 %160, 32
  %162 = zext i32 %136 to i64
  %163 = or i64 %161, %162
  %164 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %113, i64* %164, align 8
  store i64 %163, i64* %94, align 8
  %165 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #8
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %167 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %168 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 16, i1 false)
  %169 = load i32, i32* %167, align 4
  %170 = sdiv i32 %169, 64
  %171 = srem i32 %169, 64
  %172 = add nsw i32 %171, 32
  %173 = ashr i32 %172, 6
  %174 = add nsw i32 %173, %170
  %175 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = sdiv i32 %176, 64
  %178 = srem i32 %176, 64
  %179 = add nsw i32 %178, 32
  %180 = ashr i32 %179, 6
  %181 = add nsw i32 %180, %177
  %182 = zext i32 %181 to i64
  %183 = shl nuw i64 %182, 32
  %184 = zext i32 %174 to i64
  %185 = or i64 %183, %184
  %186 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp slt i32 %187, 0
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %187) #8
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !3
  %194 = sdiv i32 %193, 64
  %195 = srem i32 %193, 64
  %196 = add nsw i32 %195, 32
  %197 = ashr i32 %196, 6
  %198 = sub nsw i32 %194, %173
  %199 = add nsw i32 %197, %198
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %207

201:                                              ; preds = %158
  %202 = add i32 %187, 4
  %203 = icmp ugt i32 %202, 8
  br i1 %203, label %204, label %207, !prof !21

204:                                              ; preds = %201
  %205 = icmp sgt i32 %187, 0
  %206 = select i1 %205, i32 1, i32 -1
  br label %207

207:                                              ; preds = %204, %201, %158
  %208 = phi i32 [ %206, %204 ], [ %199, %158 ], [ 0, %201 ]
  %209 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = icmp slt i32 %210, 0
  %212 = select i1 %211, i32 -2147483648, i32 2147483647
  %213 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %178, i32 %210) #8
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %212, i32 %215, !prof !3
  %217 = sdiv i32 %216, 64
  %218 = srem i32 %216, 64
  %219 = add nsw i32 %218, 32
  %220 = ashr i32 %219, 6
  %221 = sub nsw i32 %217, %180
  %222 = add nsw i32 %220, %221
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %230

224:                                              ; preds = %207
  %225 = add i32 %210, 4
  %226 = icmp ugt i32 %225, 8
  br i1 %226, label %227, label %230, !prof !21

227:                                              ; preds = %224
  %228 = icmp sgt i32 %210, 0
  %229 = select i1 %228, i32 1, i32 -1
  br label %230

230:                                              ; preds = %207, %224, %227
  %231 = phi i32 [ %229, %227 ], [ %222, %207 ], [ 0, %224 ]
  %232 = zext i32 %231 to i64
  %233 = shl nuw i64 %232, 32
  %234 = zext i32 %208 to i64
  %235 = or i64 %233, %234
  %236 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %185, i64* %236, align 8
  store i64 %235, i64* %166, align 8
  %237 = icmp eq %"class.blink::PaintLayer"* %8, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %230
  %239 = icmp eq %"class.blink::PaintLayer"* %8, %1
  %240 = select i1 %239, [2 x i8]* @.str.69, [2 x i8]* @.str.1
  %241 = getelementptr inbounds [2 x i8], [2 x i8]* %240, i64 0, i64 0
  %242 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* nonnull %241) #8
  br label %243

243:                                              ; preds = %230, %238
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %6) #8
  %244 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 2
  %245 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %246 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %245, i64 0, i32 0, i32 5, i32 0
  %247 = bitcast %"class.blink::ComputedStyle"** %246 to %"class.blink::ComputedStyleBase"**
  %248 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %248, i64 0, i32 9
  %250 = bitcast [20 x i8]* %249 to i160*
  %251 = load i160, i160* %250, align 8
  %252 = and i160 %251, 3802951800684688204490109616128
  %253 = icmp eq i160 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %243
  %255 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0)) #8
  br label %256

256:                                              ; preds = %254, %243
  %257 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i64 0, i64 0)) #8
  %258 = and i32 %7, 8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %256
  %261 = bitcast %"class.blink::PaintLayer"* %1 to i8*
  %262 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKv(%"class.WTF::TextStream"* %0, i8* %261) #8
  %263 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %264

264:                                              ; preds = %256, %260
  %265 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_7IntRectE(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::IntRect"* nonnull dereferenceable(16) %11) #8
  %266 = load i32, i32* %21, align 8
  %267 = icmp slt i32 %266, 1
  %268 = load i32, i32* %22, align 4
  %269 = icmp slt i32 %268, 1
  %270 = or i1 %267, %269
  br i1 %270, label %281, label %271

271:                                              ; preds = %264
  %272 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* nonnull %13, %"class.blink::IntRect"* nonnull dereferenceable(16) %11) #8
  br i1 %272, label %276, label %273

273:                                              ; preds = %271
  %274 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #8
  %275 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_7IntRectE(%"class.WTF::TextStream"* dereferenceable(48) %274, %"class.blink::IntRect"* nonnull dereferenceable(16) %13) #8
  br label %276

276:                                              ; preds = %273, %271
  %277 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* nonnull %15, %"class.blink::IntRect"* nonnull dereferenceable(16) %11) #8
  br i1 %277, label %281, label %278

278:                                              ; preds = %276
  %279 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0)) #8
  %280 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_7IntRectE(%"class.WTF::TextStream"* dereferenceable(48) %279, %"class.blink::IntRect"* nonnull dereferenceable(16) %15) #8
  br label %281

281:                                              ; preds = %264, %276, %278
  %282 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %283 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %282, i64 0, i32 0, i32 5, i32 0
  %284 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %284, i64 0, i32 0, i32 3, i32 0, i32 0
  %286 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %286, i64 0, i32 9
  %288 = load float, float* %287, align 8
  %289 = fcmp olt float %288, 1.000000e+00
  br i1 %289, label %323, label %290

290:                                              ; preds = %281
  %291 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %286, i64 0, i32 2, i32 0, i32 0
  %292 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %292, i64 0, i32 2, i32 0, i32 0
  %294 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %294, i64 0, i32 45
  %296 = load i32, i32* %295, align 4
  %297 = and i32 %296, 480
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %323

299:                                              ; preds = %290
  %300 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %286, i64 0, i32 3, i32 0, i32 0
  %301 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %301, i64 0, i32 13, i32 5
  %303 = bitcast [7 x i8]* %302 to i56*
  %304 = load i56, i56* %303, align 8
  %305 = and i56 %304, 281474976710656
  %306 = icmp eq i56 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %299
  %308 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %301, i64 0, i32 13
  call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %308) #8
  %309 = load i56, i56* %303, align 8
  br label %310

310:                                              ; preds = %307, %299
  %311 = phi i56 [ %304, %299 ], [ %309, %307 ]
  %312 = and i56 %311, 8796093022208
  %313 = icmp eq i56 %312, 0
  br i1 %313, label %314, label %323

314:                                              ; preds = %310
  %315 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %285, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %315, i64 0, i32 3, i32 0, i32 0
  %317 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %316, align 8
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %317, i64 0, i32 14, i32 0, i32 0, i32 0
  %319 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %319, i64 0, i32 2, i32 0, i32 0
  %321 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %320, align 8
  %322 = icmp eq %"class.blink::StyleImage"* %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %314, %310, %281, %290
  %324 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i64 0, i64 0)) #8
  br label %325

325:                                              ; preds = %314, %323
  %326 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %327 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %326, i64 0, i32 0, i32 4
  %328 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %327 to i96*
  %329 = load i96, i96* %328, align 4
  %330 = and i96 %329, 8589934592
  %331 = icmp eq i96 %330, 0
  br i1 %331, label %450, label %332

332:                                              ; preds = %325
  %333 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %326, i64 0, i32 0, i32 5, i32 0
  %334 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %333, align 8
  %335 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %334, i64 0, i32 0, i32 9
  %336 = bitcast [20 x i8]* %335 to i160*
  %337 = load i160, i160* %336, align 8
  %338 = lshr i160 %337, 74
  %339 = trunc i160 %338 to i32
  %340 = and i32 %339, 7
  switch i32 %340, label %341 [
    i32 5, label %450
    i32 2, label %450
  ]

341:                                              ; preds = %332
  %342 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 14, i32 0, i32 0
  %343 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %342, align 8
  %344 = call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %343) #8
  %345 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %343, i64 0, i32 3
  %346 = bitcast %"class.blink::IntPoint"* %345 to i64*
  %347 = load i64, i64* %346, align 4
  %348 = trunc i64 %347 to i32
  %349 = lshr i64 %347, 32
  %350 = trunc i64 %349 to i32
  %351 = sitofp i32 %348 to float
  %352 = sitofp i32 %350 to float
  %353 = extractelement <2 x float> %344, i32 0
  %354 = fadd float %353, %351
  %355 = extractelement <2 x float> %344, i32 1
  %356 = fadd float %355, %352
  %357 = fcmp une float %354, 0.000000e+00
  br i1 %357, label %358, label %361

358:                                              ; preds = %341
  %359 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i64 0, i64 0)) #8
  %360 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %359, float %354) #8
  br label %361

361:                                              ; preds = %358, %341
  %362 = fcmp une float %356, 0.000000e+00
  br i1 %362, label %363, label %366

363:                                              ; preds = %361
  %364 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i64 0, i64 0)) #8
  %365 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %364, float %356) #8
  br label %366

366:                                              ; preds = %363, %361
  %367 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %368 = icmp eq %"class.blink::LayoutBoxModelObject"* %367, null
  br i1 %368, label %450, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %367, i64 0, i32 0, i32 4
  %371 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %370 to i96*
  %372 = load i96, i96* %371, align 4
  %373 = and i96 %372, 67108864
  %374 = icmp eq i96 %373, 0
  br i1 %374, label %408, label %375

375:                                              ; preds = %369
  %376 = bitcast %"class.blink::LayoutBoxModelObject"* %367 to %"class.blink::LayoutBox"*
  %377 = call i32 @_ZNK5blink9LayoutBox23PixelSnappedClientWidthEv(%"class.blink::LayoutBox"* nonnull %376) #8
  %378 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %379 = icmp eq %"class.blink::LayoutBoxModelObject"* %378, null
  br i1 %379, label %388, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %378, i64 0, i32 0, i32 4
  %382 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %381 to i96*
  %383 = load i96, i96* %382, align 4
  %384 = and i96 %383, 67108864
  %385 = icmp eq i96 %384, 0
  %386 = bitcast %"class.blink::LayoutBoxModelObject"* %378 to %"class.blink::LayoutBox"*
  %387 = select i1 %385, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %386
  br label %388

388:                                              ; preds = %375, %380
  %389 = phi %"class.blink::LayoutBox"* [ %387, %380 ], [ null, %375 ]
  %390 = call i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"* %389) #8
  %391 = icmp eq i32 %377, %390
  br i1 %391, label %408, label %392

392:                                              ; preds = %388
  %393 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0)) #8
  %394 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %395 = icmp eq %"class.blink::LayoutBoxModelObject"* %394, null
  br i1 %395, label %404, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %394, i64 0, i32 0, i32 4
  %398 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %397 to i96*
  %399 = load i96, i96* %398, align 4
  %400 = and i96 %399, 67108864
  %401 = icmp eq i96 %400, 0
  %402 = bitcast %"class.blink::LayoutBoxModelObject"* %394 to %"class.blink::LayoutBox"*
  %403 = select i1 %401, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %402
  br label %404

404:                                              ; preds = %392, %396
  %405 = phi %"class.blink::LayoutBox"* [ %403, %396 ], [ null, %392 ]
  %406 = call i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"* %405) #8
  %407 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %393, i32 %406) #8
  br label %408

408:                                              ; preds = %369, %388, %404
  %409 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %410 = icmp eq %"class.blink::LayoutBoxModelObject"* %409, null
  br i1 %410, label %450, label %411

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %409, i64 0, i32 0, i32 4
  %413 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %412 to i96*
  %414 = load i96, i96* %413, align 4
  %415 = and i96 %414, 67108864
  %416 = icmp eq i96 %415, 0
  br i1 %416, label %450, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.blink::LayoutBoxModelObject"* %409 to %"class.blink::LayoutBox"*
  %419 = call i32 @_ZNK5blink9LayoutBox24PixelSnappedClientHeightEv(%"class.blink::LayoutBox"* nonnull %418) #8
  %420 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %421 = icmp eq %"class.blink::LayoutBoxModelObject"* %420, null
  br i1 %421, label %430, label %422

422:                                              ; preds = %417
  %423 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %420, i64 0, i32 0, i32 4
  %424 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %423 to i96*
  %425 = load i96, i96* %424, align 4
  %426 = and i96 %425, 67108864
  %427 = icmp eq i96 %426, 0
  %428 = bitcast %"class.blink::LayoutBoxModelObject"* %420 to %"class.blink::LayoutBox"*
  %429 = select i1 %427, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %428
  br label %430

430:                                              ; preds = %417, %422
  %431 = phi %"class.blink::LayoutBox"* [ %429, %422 ], [ null, %417 ]
  %432 = call i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"* %431) #8
  %433 = icmp eq i32 %419, %432
  br i1 %433, label %450, label %434

434:                                              ; preds = %430
  %435 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0)) #8
  %436 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %437 = icmp eq %"class.blink::LayoutBoxModelObject"* %436, null
  br i1 %437, label %446, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %436, i64 0, i32 0, i32 4
  %440 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %439 to i96*
  %441 = load i96, i96* %440, align 4
  %442 = and i96 %441, 67108864
  %443 = icmp eq i96 %442, 0
  %444 = bitcast %"class.blink::LayoutBoxModelObject"* %436 to %"class.blink::LayoutBox"*
  %445 = select i1 %443, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %444
  br label %446

446:                                              ; preds = %434, %438
  %447 = phi %"class.blink::LayoutBox"* [ %445, %438 ], [ null, %434 ]
  %448 = call i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"* %447) #8
  %449 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %435, i32 %448) #8
  br label %450

450:                                              ; preds = %332, %332, %366, %411, %408, %325, %446, %430
  switch i32 %5, label %455 [
    i32 -1, label %452
    i32 1, label %451
  ]

451:                                              ; preds = %450
  br label %452

452:                                              ; preds = %450, %451
  %453 = phi i8* [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80, i64 0, i64 0), %451 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79, i64 0, i64 0), %450 ]
  %454 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* %453) #8
  br label %455

455:                                              ; preds = %452, %450
  %456 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %457 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %456, i64 0, i32 0, i32 5, i32 0
  %458 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %457, align 8
  %459 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %458, i64 0, i32 0, i32 3, i32 0, i32 0
  %460 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %459, align 8
  %461 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %460, i64 0, i32 2, i32 0, i32 0
  %462 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %461, align 8
  %463 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %462, i64 0, i32 2, i32 0, i32 0
  %464 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %463, align 8
  %465 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %464, i64 0, i32 45
  %466 = load i32, i32* %465, align 4
  %467 = and i32 %466, 480
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %505, label %469

469:                                              ; preds = %455
  %470 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0)) #8
  %471 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %471) #8
  %472 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %473 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %472, i64 0, i32 0, i32 5, i32 0
  %474 = bitcast %"class.blink::ComputedStyle"** %473 to %"class.blink::ComputedStyleBase"**
  %475 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %474, align 8
  %476 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %475, i64 0, i32 3, i32 0, i32 0
  %477 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %476, align 8
  %478 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %477, i64 0, i32 2, i32 0, i32 0
  %479 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %479, i64 0, i32 2, i32 0, i32 0
  %481 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %480, align 8
  %482 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %481, i64 0, i32 45
  %483 = load i32, i32* %482, align 4
  %484 = lshr i32 %483, 5
  %485 = and i32 %484, 15
  %486 = call %"class.WTF::StringImpl"* @_ZN5blink21CompositeOperatorNameENS_17CompositeOperatorENS_9BlendModeE(i32 2, i32 %485) #8
  %487 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %486, %"class.WTF::StringImpl"** %487, align 8
  %488 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %470, %"class.WTF::String"* nonnull dereferenceable(8) %16) #8
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %487, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %489, null
  br i1 %490, label %504, label %491

491:                                              ; preds = %469
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %489, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load atomic i32, i32* %492 monotonic, align 4
  %494 = and i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %489, i64 0, i32 0
  %497 = load i32, i32* %496, align 4
  br i1 %495, label %498, label %500

498:                                              ; preds = %491
  %499 = add i32 %497, -1
  store i32 %499, i32* %496, align 4
  br label %500

500:                                              ; preds = %498, %491
  %501 = phi i32 [ %499, %498 ], [ %497, %491 ]
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %500
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %489) #8
  br label %504

504:                                              ; preds = %469, %500, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471) #8
  br label %505

505:                                              ; preds = %455, %504
  %506 = and i32 %7, 4
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %541, label %508

508:                                              ; preds = %505
  %509 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 17, i32 0, i32 0, i32 0
  %510 = load %"struct.blink::PaintLayerRareData"*, %"struct.blink::PaintLayerRareData"** %509, align 8
  %511 = icmp eq %"struct.blink::PaintLayerRareData"* %510, null
  br i1 %511, label %541, label %512

512:                                              ; preds = %508
  %513 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %510, i64 0, i32 7, i32 0, i32 0, i32 0
  %514 = load %"class.blink::CompositedLayerMapping"*, %"class.blink::CompositedLayerMapping"** %513, align 8
  %515 = icmp eq %"class.blink::CompositedLayerMapping"* %514, null
  br i1 %515, label %541, label %516

516:                                              ; preds = %512
  %517 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0)) #8
  %518 = bitcast <2 x i64>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %518) #8
  %519 = call %"class.blink::CompositedLayerMapping"* @_ZNK5blink10PaintLayer25GetCompositedLayerMappingEv(%"class.blink::PaintLayer"* %1) #8
  %520 = getelementptr inbounds %"class.blink::CompositedLayerMapping", %"class.blink::CompositedLayerMapping"* %519, i64 0, i32 15
  %521 = bitcast %"struct.blink::PhysicalRect"* %520 to <2 x i64>*
  %522 = load <2 x i64>, <2 x i64>* %521, align 8
  store <2 x i64> %522, <2 x i64>* %17, align 16
  %523 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_12PhysicalRectE(%"class.WTF::TextStream"* dereferenceable(48) %517, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %18) #8
  %524 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %523, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0)) #8
  %525 = call %"class.blink::CompositedLayerMapping"* @_ZNK5blink10PaintLayer25GetCompositedLayerMappingEv(%"class.blink::PaintLayer"* %1) #8
  %526 = getelementptr inbounds %"class.blink::CompositedLayerMapping", %"class.blink::CompositedLayerMapping"* %525, i64 0, i32 2, i32 0, i32 0, i32 0
  %527 = load %"class.blink::GraphicsLayer"*, %"class.blink::GraphicsLayer"** %526, align 8
  %528 = getelementptr inbounds %"class.blink::GraphicsLayer", %"class.blink::GraphicsLayer"* %527, i64 0, i32 6
  %529 = load i8, i8* %528, align 8
  %530 = and i8 %529, 1
  %531 = icmp ne i8 %530, 0
  %532 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEb(%"class.WTF::TextStream"* %524, i1 zeroext %531) #8
  %533 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 1
  %534 = bitcast [6 x i8]* %533 to i48*
  %535 = load i48, i48* %534, align 1
  %536 = and i48 %535, 1024
  %537 = icmp eq i48 %536, 0
  %538 = select i1 %537, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i64 0, i64 0)
  %539 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %532, i8* %538) #8
  %540 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %539, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %518) #8
  br label %541

541:                                              ; preds = %512, %508, %505, %516
  %542 = and i32 %7, 512
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %552, label %544

544:                                              ; preds = %541
  %545 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %1, i64 0, i32 1
  %546 = bitcast [6 x i8]* %545 to i48*
  %547 = load i48, i48* %546, align 1
  %548 = and i48 %547, 4096
  %549 = icmp eq i48 %548, 0
  br i1 %549, label %552, label %550

550:                                              ; preds = %544
  %551 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.85, i64 0, i64 0)) #8
  br label %552

552:                                              ; preds = %544, %541, %550
  %553 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %554 = icmp eq i32 %5, -1
  br i1 %554, label %559, label %555

555:                                              ; preds = %552
  %556 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %244, align 8
  %557 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %556, i64 0, i32 0
  %558 = add nsw i32 %6, 1
  call void @_ZN5blink5WriteERN3WTF10TextStreamERKNS_12LayoutObjectEij(%"class.WTF::TextStream"* dereferenceable(48) %0, %"class.blink::LayoutObject"* dereferenceable(88) %557, i32 %558, i32 %7)
  br label %559

559:                                              ; preds = %552, %555
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22ExternalRepresentationEPNS_10LocalFrameEjPKNS_10PaintLayerE(%"class.blink::LocalFrame"*, i32, %"class.blink::PaintLayer"*) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::PrintContext", align 8
  %5 = and i32 %1, 64
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 11, i32 0, i32 0
  %9 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %8, align 8
  %10 = tail call zeroext i1 @_ZN5blink14LocalFrameView35UpdateAllLifecyclePhasesExceptPaintENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"* %9, i32 27) #8
  br label %11

11:                                               ; preds = %7, %3
  %12 = tail call %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"* %0) #8
  %13 = icmp eq %"class.blink::LayoutView"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 67108864
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %41, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %12, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::PrintContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 72, i1 false)
  call void @_ZN5blink12PrintContextC1EPNS_10LocalFrameEb(%"class.blink::PrintContext"* nonnull %4, %"class.blink::LocalFrame"* %0, i1 zeroext true) #8
  %23 = and i32 %1, 32
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %21) #8
  %27 = sitofp i32 %26 to float
  %28 = fmul float %27, 1.562500e-02
  %29 = call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %21) #8
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 1.562500e-02
  call void @_ZN5blink12PrintContext14BeginPrintModeEff(%"class.blink::PrintContext"* nonnull %4, float %28, float %31) #8
  br i1 %6, label %37, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 11, i32 0, i32 0
  %34 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %33, align 8
  call void @_ZN5blink14LocalFrameView32UpdateLifecyclePhasesForPrintingEv(%"class.blink::LocalFrameView"* %34) #8
  br label %37

35:                                               ; preds = %20
  %36 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL22ExternalRepresentationEPNS_9LayoutBoxEjPKNS_10PaintLayerE(%"class.blink::LayoutBox"* %21, i32 %1, %"class.blink::PaintLayer"* %2)
  br label %39

37:                                               ; preds = %25, %32
  %38 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL22ExternalRepresentationEPNS_9LayoutBoxEjPKNS_10PaintLayerE(%"class.blink::LayoutBox"* %21, i32 %1, %"class.blink::PaintLayer"* %2)
  call void @_ZN5blink12PrintContext12EndPrintModeEv(%"class.blink::PrintContext"* nonnull %4) #8
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi %"class.WTF::StringImpl"* [ %38, %37 ], [ %36, %35 ]
  call void @_ZN5blink12PrintContextD1Ev(%"class.blink::PrintContext"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #8
  br label %41

41:                                               ; preds = %14, %11, %39
  %42 = phi %"class.WTF::StringImpl"* [ %40, %39 ], [ null, %11 ], [ null, %14 ]
  ret %"class.WTF::StringImpl"* %42
}

declare zeroext i1 @_ZN5blink14LocalFrameView35UpdateAllLifecyclePhasesExceptPaintENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #2

declare %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink12PrintContextC1EPNS_10LocalFrameEb(%"class.blink::PrintContext"*, %"class.blink::LocalFrame"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink12PrintContext14BeginPrintModeEff(%"class.blink::PrintContext"*, float, float) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZN5blink14LocalFrameView32UpdateLifecyclePhasesForPrintingEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL22ExternalRepresentationEPNS_9LayoutBoxEjPKNS_10PaintLayerE(%"class.blink::LayoutBox"* nocapture readonly, i32, %"class.blink::PaintLayer"*) unnamed_addr #0 {
  %4 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.WTF::TextStream", align 8
  %15 = bitcast %"class.WTF::TextStream"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  %16 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %14, i64 0, i32 0, i32 1
  %18 = bitcast %union.anon.3211* %17 to i8*
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %14, i64 0, i32 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %14, i64 0, i32 0, i32 3
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %14, i64 0, i32 0, i32 4
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 4294967296
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %157, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %28, align 8
  %30 = icmp eq %"struct.blink::FragmentData::RareData"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %32, align 8
  br label %34

34:                                               ; preds = %27, %31
  %35 = phi %"class.blink::PaintLayer"* [ %33, %31 ], [ null, %27 ]
  call void @_ZN5blink16LayoutTreeAsText11WriteLayersERN3WTF10TextStreamEPKNS_10PaintLayerEPS4_ijS6_(%"class.WTF::TextStream"* nonnull dereferenceable(48) %14, %"class.blink::PaintLayer"* %35, %"class.blink::PaintLayer"* %35, i32 0, i32 %1, %"class.blink::PaintLayer"* %2)
  %36 = load i96, i96* %23, align 4
  %37 = and i96 %36, 16777216
  %38 = icmp eq i96 %37, 0
  br i1 %38, label %39, label %157

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %157, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 0, i32 0
  %49 = icmp eq %"class.blink::Node"* %48, %41
  br i1 %49, label %50, label %157

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::Node"* %41 to %"class.blink::Document"*
  %52 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %51) #8
  %53 = icmp eq %"class.blink::LocalFrame"* %52, null
  br i1 %53, label %157, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::VisibleSelectionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55) #8
  %56 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %52, i64 0, i32 14, i32 0, i32 0
  %57 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %56, align 8
  call void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %4, %"class.blink::FrameSelection"* %57) #8
  %58 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  br i1 %58, label %59, label %95

59:                                               ; preds = %54
  %60 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* nonnull %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.86, i64 0, i64 0)) #8
  %61 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #8
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  %62 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* nonnull %5) #8
  %63 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %60, i32 %62) #8
  %64 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0)) #8
  %65 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #8
  %66 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  %67 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL12NodePositionEPNS_4NodeE(%"class.blink::Node"* %68) #8
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %64, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #8
  br label %87

87:                                               ; preds = %86, %83, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #8
  %88 = getelementptr inbounds %"class.blink::VisibleSelectionTemplate", %"class.blink::VisibleSelectionTemplate"* %4, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* nonnull %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i64 0, i64 0)) #8
  br label %93

93:                                               ; preds = %91, %87
  %94 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  br label %156

95:                                               ; preds = %54
  %96 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsRangeEv(%"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  br i1 %96, label %97, label %156

97:                                               ; preds = %95
  %98 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* nonnull %14, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.89, i64 0, i64 0)) #8
  %99 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #8
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  %100 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* nonnull %8) #8
  %101 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %98, i32 %100) #8
  %102 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0)) #8
  %103 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #8
  %104 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #8
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  %105 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL12NodePositionEPNS_4NodeE(%"class.blink::Node"* %106) #8
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %108, align 8
  %109 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %102, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %110 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %111 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %110, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0)) #8
  %112 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #8
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  %113 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* nonnull %11) #8
  %114 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %111, i32 %113) #8
  %115 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0)) #8
  %116 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  %117 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #8
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %13, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #8
  %118 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL12NodePositionEPNS_4NodeE(%"class.blink::Node"* %119) #8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %121, align 8
  %122 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %115, %"class.WTF::String"* nonnull dereferenceable(8) %12) #8
  %123 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #8
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %97
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #8
  br label %139

139:                                              ; preds = %138, %135, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #8
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #8
  br label %155

155:                                              ; preds = %154, %151, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #8
  br label %156

156:                                              ; preds = %155, %95, %93
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #8
  br label %157

157:                                              ; preds = %156, %50, %43, %39, %34, %3
  %158 = call %"class.WTF::StringImpl"* @_ZN3WTF10TextStream7ReleaseEv(%"class.WTF::TextStream"* nonnull %14) #8
  %159 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %14, i64 0, i32 0
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %159) #8
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #8
  br label %175

175:                                              ; preds = %157, %171, %174
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #8
  ret %"class.WTF::StringImpl"* %158
}

declare void @_ZN5blink12PrintContext12EndPrintModeEv(%"class.blink::PrintContext"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink12PrintContextD1Ev(%"class.blink::PrintContext"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22ExternalRepresentationEPNS_7ElementEj(%"class.blink::Element"* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = and i32 %1, 64
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, i32 27) #8
  br label %10

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 67108864
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::LayoutObject"* %26 to %"class.blink::LayoutBox"*
  %36 = or i32 %1, 1
  %37 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL22ExternalRepresentationEPNS_9LayoutBoxEjPKNS_10PaintLayerE(%"class.blink::LayoutBox"* nonnull %35, i32 %36, %"class.blink::PaintLayer"* null)
  br label %38

38:                                               ; preds = %28, %22, %34
  %39 = phi %"class.WTF::StringImpl"* [ %37, %34 ], [ null, %22 ], [ null, %28 ]
  ret %"class.WTF::StringImpl"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink22CounterValueForElementEPNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::TextStream", align 8
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %7, i32 27) #8
  %8 = bitcast %"class.WTF::TextStream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %union.anon.3211* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %2, i64 0, i32 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %2, i64 0, i32 0, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %2, i64 0, i32 0, i32 4
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 1, i8* %3, align 1
  %15 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %0, i8 zeroext 5) #8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %1
  call fastcc void @_ZN5blinkL30WriteCounterValuesFromChildrenERN3WTF10TextStreamEPNS_12LayoutObjectERb(%"class.WTF::TextStream"* nonnull dereferenceable(48) %2, %"class.blink::LayoutObject"* nonnull %15, i8* nonnull dereferenceable(1) %3)
  br label %18

18:                                               ; preds = %1, %17
  %19 = call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %0, i8 zeroext 3) #8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  call fastcc void @_ZN5blinkL30WriteCounterValuesFromChildrenERN3WTF10TextStreamEPNS_12LayoutObjectERb(%"class.WTF::TextStream"* nonnull dereferenceable(48) %2, %"class.blink::LayoutObject"* nonnull %19, i8* nonnull dereferenceable(1) %3)
  br label %22

22:                                               ; preds = %18, %21
  %23 = call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %0, i8 zeroext 4) #8
  %24 = icmp eq %"class.blink::LayoutObject"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  call fastcc void @_ZN5blinkL30WriteCounterValuesFromChildrenERN3WTF10TextStreamEPNS_12LayoutObjectERb(%"class.WTF::TextStream"* nonnull dereferenceable(48) %2, %"class.blink::LayoutObject"* nonnull %23, i8* nonnull dereferenceable(1) %3)
  br label %26

26:                                               ; preds = %22, %25
  %27 = call %"class.WTF::StringImpl"* @_ZN3WTF10TextStream7ReleaseEv(%"class.WTF::TextStream"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  %28 = getelementptr inbounds %"class.WTF::TextStream", %"class.WTF::TextStream"* %2, i64 0, i32 0
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %28) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %26, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #8
  ret %"class.WTF::StringImpl"* %27
}

declare %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL30WriteCounterValuesFromChildrenERN3WTF10TextStreamEPNS_12LayoutObjectERb(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::LayoutObject"*, i8* nocapture dereferenceable(1)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %6 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %6, i64 13
  %8 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %7, align 8
  %9 = tail call %"class.blink::LayoutObjectChildList"* %8(%"class.blink::LayoutObject"* %1) #8
  %10 = icmp eq %"class.blink::LayoutObjectChildList"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %9, i64 0, i32 0
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.WTF::String"* %4 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %71, %3, %11
  ret void

19:                                               ; preds = %15, %71
  %20 = phi %"class.blink::LayoutObject"* [ %13, %15 ], [ %73, %71 ]
  %21 = bitcast %"class.blink::LayoutObject"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, i64 92
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, align 8
  %25 = call zeroext i1 %24(%"class.blink::LayoutObject"* nonnull %20, i32 3) #8
  br i1 %25, label %26, label %71

26:                                               ; preds = %19
  %27 = load i8, i8* %2, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %31

31:                                               ; preds = %26, %29
  store i8 0, i8* %2, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 1, i32 4, i32 0, i64 4
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"**
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %17, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %31, %36, %51
  %54 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #8
  br label %70

70:                                               ; preds = %53, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %71

71:                                               ; preds = %19, %70
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 9
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = icmp eq %"class.blink::LayoutObject"* %73, null
  br i1 %74, label %18, label %19
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10TextStream7ReleaseEv(%"class.WTF::TextStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21MarkerTextForListItemEPNS_7ElementE(%"class.blink::Element"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %5, i32 27) #8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = tail call %"class.blink::LayoutObject"* @_ZN5blink10ListMarker18MarkerFromListItemEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %21) #8
  %23 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %22) #8
  %24 = icmp eq %"class.blink::ListMarker"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %17
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink10ListMarker23MarkerTextWithoutSuffixERKNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %23, %"class.blink::LayoutObject"* dereferenceable(88) %22) #8
  %27 = ptrtoint %"class.WTF::StringImpl"* %26 to i64
  br label %59

28:                                               ; preds = %17
  %29 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.blink::LayoutObject"* %22 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %22, i32 15) #8
  br i1 %35, label %36, label %59

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 2, i32 6
  %38 = bitcast %"class.blink::UntracedMember"* %37 to %"class.WTF::StringImpl"**
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #8
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %47
  tail call void @llvm.trap() #8
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %30, %28, %57, %42, %36, %25
  %60 = phi i64 [ %27, %25 ], [ %40, %36 ], [ %40, %42 ], [ %40, %57 ], [ 0, %28 ], [ 0, %30 ]
  %61 = inttoptr i64 %60 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %61
}

declare %"class.blink::LayoutObject"* @_ZN5blink10ListMarker18MarkerFromListItemEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink10ListMarker23MarkerTextWithoutSuffixERKNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.3211* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.3211* %16 to %"class.WTF::Vector.3217"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3217"* %30, i16* nonnull dereferenceable(2) %3) #8
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3212"* %41, i8* nonnull dereferenceable(1) %4) #8
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3212"*, i8* dereferenceable(1)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3212"* %0, i32 %5) #8
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3212"* %0, i32 %5) #8
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3212"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !20

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3212"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.3212"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3212"* %0, i32 %27) #8
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3212"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.3212"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.3212"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #8
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3213"* %18, i8* nonnull %6) #8
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !20

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #8
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !20

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3213"* %46, i8* %42) #8
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.3212"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.3212", %"class.WTF::Vector.3212"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.43, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3213"*, i8*) local_unnamed_addr #5 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3217"*, i16* dereferenceable(2)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3217"* %0, i32 %5) #8
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3217"* %0, i32 %5) #8
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3217"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !20

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3217"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3217"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3217"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3217"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3217"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3217"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3218"* %19, i16* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !20

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #8
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !20

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3218"* %53, i16* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3217"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3217", %"class.WTF::Vector.3217"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.43, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3218"*, i16*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #2

declare i8* @_ZN5blink12getValueNameENS_10CSSValueIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #2

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL14WriteInlineBoxERN3WTF10TextStreamERKNS_9InlineBoxEi(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::InlineBox"* dereferenceable(64), i32) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = alloca %"class.blink::LayoutUnit", align 4
  %9 = alloca %"class.blink::LayoutUnit", align 4
  %10 = alloca %"class.blink::LayoutUnit", align 4
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %0, i32 %2) #8
  %11 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::InlineBox"* %1 to i8* (%"class.blink::InlineBox"*)***
  %13 = load i8* (%"class.blink::InlineBox"*)**, i8* (%"class.blink::InlineBox"*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%"class.blink::InlineBox"*)*, i8* (%"class.blink::InlineBox"*)** %13, i64 13
  %15 = load i8* (%"class.blink::InlineBox"*)*, i8* (%"class.blink::InlineBox"*)** %14, align 8
  %16 = tail call i8* %15(%"class.blink::InlineBox"* %1) #8
  %17 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* %16) #8
  %18 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #8
  %19 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 4, i32 0
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"* %21) #8
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %25 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #8
  %26 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0)) #8
  %27 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 %29, i32* %30, align 4
  %31 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %26, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %5) #8
  %32 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  %33 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 %35, i32* %36, align 4
  %37 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %32, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6) #8
  %38 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %39 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0)) #8
  %40 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #8
  %41 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 2048
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 6, i32 0
  %47 = load i32, i32* %46, align 8
  br label %50

48:                                               ; preds = %3
  %49 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %1) #8
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi i32 [ %47, %45 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  store i32 %51, i32* %52, align 4
  %53 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %39, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7) #8
  %54 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #8
  %55 = bitcast %"class.blink::LayoutUnit"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #8
  %56 = load i32, i32* %41, align 4
  %57 = and i32 %56, 2048
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %50
  %60 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %1) #8
  br label %64

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 6, i32 0
  %63 = load i32, i32* %62, align 8
  br label %64

64:                                               ; preds = %59, %61
  %65 = phi i32 [ %60, %59 ], [ %63, %61 ]
  %66 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %8, i64 0, i32 0
  store i32 %65, i32* %66, align 4
  %67 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %54, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %8) #8
  %68 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %69 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %68, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i64 0, i64 0)) #8
  %70 = bitcast %"class.blink::LayoutUnit"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #8
  %71 = bitcast %"class.blink::InlineBox"* %1 to i32 (%"class.blink::InlineBox"*, i32)***
  %72 = load i32 (%"class.blink::InlineBox"*, i32)**, i32 (%"class.blink::InlineBox"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %72, i64 23
  %74 = load i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %73, align 8
  %75 = call i32 %74(%"class.blink::InlineBox"* %1, i32 0) #8
  %76 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  store i32 %75, i32* %76, align 4
  %77 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %69, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %9) #8
  %78 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0)) #8
  %79 = bitcast %"class.blink::LayoutUnit"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #8
  %80 = load i32 (%"class.blink::InlineBox"*, i32)**, i32 (%"class.blink::InlineBox"*, i32)*** %71, align 8
  %81 = getelementptr inbounds i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %80, i64 23
  %82 = load i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %81, align 8
  %83 = call i32 %82(%"class.blink::InlineBox"* %1, i32 1) #8
  %84 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  store i32 %83, i32* %84, align 4
  %85 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_10LayoutUnitE(%"class.WTF::TextStream"* dereferenceable(48) %78, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #8
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %64
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #8
  br label %101

101:                                              ; preds = %64, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #2

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox7GetTextEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"*, i16 zeroext, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14PhysicalOffset8ToStringEv(%"struct.blink::PhysicalOffset"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink24PropertyTreeStateOrAlias8ToStringEv(%"class.blink::PropertyTreeStateOrAlias"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink7IntRect8ToStringEv(%"class.blink::IntRect"*) local_unnamed_addr #2

declare void @_ZNK5blink14NGFragmentItem4TextERKNS_15NGFragmentItemsE(%"class.WTF::StringView"* sret, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItems"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare %"class.blink::PaintLayer"* @_ZN5blink28PaintLayerPaintOrderIterator4NextEv(%"class.blink::PaintLayerPaintOrderIterator"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink10PaintLayerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2964"*, %"class.blink::PaintLayer"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %8 = icmp ugt %"class.blink::PaintLayer"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %7, i64 %10
  %12 = icmp ugt %"class.blink::PaintLayer"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !20

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::PaintLayer"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2964"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::PaintLayer"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::PaintLayer"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !20

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.2964"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.2964"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::PaintLayer"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::PaintLayer"** %1 to i64
  %56 = ptrtoint %"class.blink::PaintLayer"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2964", %"class.WTF::Vector.2964"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !20

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::PaintLayer"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink10PaintLayerEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2964"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::PaintLayer"**, %"class.blink::PaintLayer"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::PaintLayer"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::PaintLayer"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !20

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.2964"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.2964"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::PaintLayer"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::PaintLayer"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::PaintLayer"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::PaintLayer"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %100, i64 %103
  %105 = bitcast %"class.blink::PaintLayer"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::PaintLayer"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink10PaintLayerEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.43, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_7IntRectE(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink21CompositeOperatorNameENS_17CompositeOperatorENS_9BlendModeE(i32, i32) local_unnamed_addr #2

declare %"class.blink::CompositedLayerMapping"* @_ZNK5blink10PaintLayer25GetCompositedLayerMappingEv(%"class.blink::PaintLayer"*) local_unnamed_addr #2

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEb(%"class.WTF::TextStream"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL12NodePositionEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %16 = bitcast %union.anon.3211* %15 to i8*
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %23) #8
  %25 = icmp eq %"class.blink::Node"* %0, null
  br i1 %25, label %232, label %26

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::StringView"* %6 to i8*
  %28 = bitcast %"class.WTF::StringView"* %6 to i64*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %31 = icmp ne %"class.blink::HTMLElement"* %24, null
  %32 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::StringView"* %9 to i8*
  %34 = bitcast %"class.WTF::StringView"* %9 to i64*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %41 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %42 = ptrtoint i8* %38 to i64
  %43 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  %44 = bitcast i8** %39 to i64*
  %45 = ptrtoint i8* %41 to i64
  %46 = bitcast %"class.WTF::StringView"* %10 to i8*
  %47 = bitcast %"class.WTF::StringView"* %10 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %50 = bitcast %"class.WTF::StringView"* %11 to i8*
  %51 = bitcast %"class.WTF::String"* %2 to i8*
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %57 = bitcast %"class.WTF::StringView"* %11 to i64*
  %58 = bitcast %"class.WTF::StringView"* %8 to i8*
  %59 = bitcast %"class.WTF::String"* %4 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %63 = bitcast i8** %62 to %"class.WTF::StringImpl"**
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %65 = bitcast %"class.WTF::StringView"* %8 to i64*
  %66 = bitcast %"class.WTF::StringView"* %12 to i8*
  %67 = bitcast %"class.WTF::StringView"* %12 to i64*
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %70 = ptrtoint i8* %43 to i64
  %71 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  br label %72

72:                                               ; preds = %26, %230
  %73 = phi %"class.blink::Node"* [ %0, %26 ], [ %77, %230 ]
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = bitcast %"class.blink::Node"** %74 to %"class.blink::ContainerNode"**
  %76 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %76, i64 0, i32 0
  %78 = icmp eq %"class.blink::Node"* %73, %0
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %80, i64* %28, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8** %29, align 8
  store i32 4, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  br label %81

81:                                               ; preds = %72, %79
  %82 = icmp eq %"class.blink::ContainerNode"* %76, null
  br i1 %82, label %228, label %83

83:                                               ; preds = %81
  %84 = icmp eq %"class.blink::Node"* %73, %32
  %85 = and i1 %31, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %83
  %87 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #8
  %88 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %89 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i64 0, i64 0), i8** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %91, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #8
  br label %232

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 12
  %96 = icmp eq i32 %95, 8
  br i1 %96, label %97, label %148

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %99, i64 0, i32 1, i32 0, i32 0
  %101 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %101, i64 0, i32 0
  %103 = icmp eq %"class.blink::Node"* %102, %73
  br i1 %103, label %104, label %148

104:                                              ; preds = %97
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 123) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %105 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %98, align 8
  %106 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %105, i64 0, i32 2, i32 0, i32 0
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %107, i64 0, i32 0, i32 0
  %109 = icmp eq %"class.blink::Node"* %108, %73
  br i1 %109, label %110, label %111

110:                                              ; preds = %104
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.44, i64 0, i64 0), i64 0) #8
  br label %125

111:                                              ; preds = %104
  %112 = bitcast %"class.blink::Node"* %73 to i32 (%"class.blink::Node"*)***
  %113 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %112, align 8
  %114 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %113, i64 30
  %115 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %114, align 8
  %116 = call i32 %115(%"class.blink::Node"* nonnull %73) #8
  %117 = icmp eq i32 %116, 8
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i64 7) #8
  br label %125

119:                                              ; preds = %111
  %120 = bitcast %"class.blink::Node"* %73 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %121 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %120, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %121, i64 27
  %123 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %122, align 8
  %124 = call %"class.WTF::StringImpl"* %123(%"class.blink::Node"* nonnull %73) #8
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %60, align 8
  br label %127

125:                                              ; preds = %118, %110
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  br label %127

127:                                              ; preds = %125, %119
  %128 = phi %"class.WTF::StringImpl"* [ %126, %125 ], [ %124, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  store i8* null, i8** %62, align 8
  %131 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %131, i64* %65, align 8
  store i32 0, i32* %64, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %230

132:                                              ; preds = %127
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %61, align 8
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 1
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %63, align 8
  store i32 %134, i32* %64, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %132
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %132
  %145 = phi i32 [ %143, %142 ], [ %141, %132 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %230

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #8
  br label %230

148:                                              ; preds = %92, %97
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %149 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %149, i64* %34, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0), i8** %35, align 8
  store i32 6, i32* %36, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  %150 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %73) #8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false) #8
  store i8* %38, i8** %39, align 8
  %151 = urem i32 %150, 10
  %152 = udiv i32 %150, 10
  %153 = trunc i32 %151 to i8
  %154 = or i8 %153, 48
  store i8 %154, i8* %38, align 1
  %155 = icmp ugt i32 %150, 9
  br i1 %155, label %156, label %178

156:                                              ; preds = %148
  store i8* %43, i8** %39, align 8
  %157 = urem i32 %152, 10
  %158 = trunc i32 %157 to i8
  %159 = or i8 %158, 48
  store i8 %159, i8* %43, align 2
  %160 = icmp ugt i32 %150, 99
  br i1 %160, label %161, label %178

161:                                              ; preds = %156
  %162 = udiv i32 %150, 100
  store i8* %71, i8** %39, align 8
  %163 = urem i32 %162, 10
  %164 = trunc i32 %163 to i8
  %165 = or i8 %164, 48
  store i8 %165, i8* %71, align 1
  %166 = icmp ugt i32 %150, 999
  br i1 %166, label %167, label %176

167:                                              ; preds = %161, %167
  %168 = phi i32 [ %170, %167 ], [ %162, %161 ]
  %169 = load i8*, i8** %39, align 8
  %170 = udiv i32 %168, 10
  %171 = getelementptr inbounds i8, i8* %169, i64 -1
  store i8* %171, i8** %39, align 8
  %172 = urem i32 %170, 10
  %173 = trunc i32 %172 to i8
  %174 = or i8 %173, 48
  store i8 %174, i8* %171, align 1
  %175 = icmp ugt i32 %168, 99
  br i1 %175, label %167, label %176

176:                                              ; preds = %167, %161
  %177 = load i64, i64* %44, align 8
  br label %178

178:                                              ; preds = %156, %176, %148
  %179 = phi i64 [ %42, %148 ], [ %177, %176 ], [ %70, %156 ]
  %180 = sub i64 %45, %179
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %40, align 8
  %182 = inttoptr i64 %179 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %5, i8* %182, i32 %181) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %183 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %183, i64* %47, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %48, align 8
  store i32 2, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %184 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 3, i32 0, i32 0
  %185 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %185, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::Document"*, %"class.blink::Document"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %187, i64 0, i32 0, i32 0
  %189 = icmp eq %"class.blink::Node"* %188, %73
  br i1 %189, label %190, label %191

190:                                              ; preds = %178
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.44, i64 0, i64 0), i64 0) #8
  br label %205

191:                                              ; preds = %178
  %192 = bitcast %"class.blink::Node"* %73 to i32 (%"class.blink::Node"*)***
  %193 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %192, align 8
  %194 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %193, i64 30
  %195 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %194, align 8
  %196 = call i32 %195(%"class.blink::Node"* nonnull %73) #8
  %197 = icmp eq i32 %196, 8
  br i1 %197, label %198, label %199

198:                                              ; preds = %191
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i64 7) #8
  br label %205

199:                                              ; preds = %191
  %200 = bitcast %"class.blink::Node"* %73 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %201 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %200, align 8
  %202 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %201, i64 27
  %203 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %202, align 8
  %204 = call %"class.WTF::StringImpl"* %203(%"class.blink::Node"* nonnull %73) #8
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %52, align 8
  br label %207

205:                                              ; preds = %198, %190
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  br label %207

207:                                              ; preds = %205, %199
  %208 = phi %"class.WTF::StringImpl"* [ %206, %205 ], [ %204, %199 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  store i8* null, i8** %54, align 8
  %211 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %211, i64* %57, align 8
  store i32 0, i32* %56, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  br label %230

212:                                              ; preds = %207
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %53, align 8
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 1
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %55, align 8
  store i32 %214, i32* %56, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %212
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %212
  %225 = phi i32 [ %223, %222 ], [ %221, %212 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #8
  br label %230

228:                                              ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  %229 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %229, i64* %67, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0), i8** %68, align 8
  store i32 8, i32* %69, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  br label %232

230:                                              ; preds = %227, %224, %210, %147, %144, %130
  %231 = phi i8* [ %58, %130 ], [ %58, %144 ], [ %58, %147 ], [ %50, %210 ], [ %50, %224 ], [ %50, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %5, i8 zeroext 125) #8
  br i1 %82, label %232, label %72

232:                                              ; preds = %230, %228, %1, %86
  %233 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #8
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #8
  br label %249

249:                                              ; preds = %232, %245, %248
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #8
  ret %"class.WTF::StringImpl"* %233
}

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsRangeEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3430"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3430", %"class.WTF::StringTypeAdapter.3430"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3430"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3222"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3222"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.95, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.96, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.95, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3431", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3430"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3430"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.3430"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3430", %"class.WTF::StringTypeAdapter.3430"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.3431"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3431", %"class.WTF::StringTypeAdapter.3431"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3431", %"class.WTF::StringTypeAdapter.3431"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3431"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3430"* nonnull %3, i8* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3431", %"class.WTF::StringTypeAdapter.3431"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3432"* nonnull %34, i8* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3222"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3430"* nonnull %5, i8* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3431", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3430"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3430"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.3430"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3430", %"class.WTF::StringTypeAdapter.3430"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.3431"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3431", %"class.WTF::StringTypeAdapter.3431"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3431", %"class.WTF::StringTypeAdapter.3431"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3431"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3430"* nonnull %3, i16* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3431", %"class.WTF::StringTypeAdapter.3431"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3432"* nonnull %34, i16* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3222"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3430"* nonnull %5, i16* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.3222"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3430", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3430"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3430", %"class.WTF::StringTypeAdapter.3430"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3222", %"class.WTF::StringAppend.3222"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3430"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3430"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3222", %"class.WTF::StringAppend.3222"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.95, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.96, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.95, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3430"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3432"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3430"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3432"*, i16*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 4001}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink12FragmentData24LocalBorderBoxPropertiesEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink12FragmentData24LocalBorderBoxPropertiesEv"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blinkL11ChildLayersEPKNS_10PaintLayerENS_19PaintLayerIterationE: argument 0"}
!13 = distinct !{!13, !"_ZN5blinkL11ChildLayersEPKNS_10PaintLayerENS_19PaintLayerIterationE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blinkL11ChildLayersEPKNS_10PaintLayerENS_19PaintLayerIterationE: argument 0"}
!16 = distinct !{!16, !"_ZN5blinkL11ChildLayersEPKNS_10PaintLayerENS_19PaintLayerIterationE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blinkL11ChildLayersEPKNS_10PaintLayerENS_19PaintLayerIterationE: argument 0"}
!19 = distinct !{!19, !"_ZN5blinkL11ChildLayersEPKNS_10PaintLayerENS_19PaintLayerIterationE"}
!20 = !{!"branch_weights", i32 2000, i32 1}
!21 = !{!"branch_weights", i32 4001, i32 4000000}
