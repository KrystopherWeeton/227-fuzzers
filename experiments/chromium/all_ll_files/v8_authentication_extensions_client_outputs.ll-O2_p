; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_authentication_extensions_client_outputs.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_authentication_extensions_client_outputs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.330" }
%"struct.std::__1::atomic.330" = type { %"struct.std::__1::__atomic_base.331" }
%"struct.std::__1::__atomic_base.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.92", i32, [4 x i8], %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.269", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.208", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__cxx_atomic_impl.131" }
%"struct.std::__1::__cxx_atomic_impl.131" = type { %"struct.std::__1::__cxx_atomic_base_impl.132" }
%"struct.std::__1::__cxx_atomic_base_impl.132" = type { i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.128" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.202", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { i64 }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { float }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.211", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.220" }
%"class.WTF::Vector.220" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237" }
%"class.WTF::VectorBufferBase.237" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.250" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.160"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.167"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.302" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.268 }
%class.scoped_refptr.268 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.269" = type { %"struct.std::__1::__atomic_base.270" }
%"struct.std::__1::__atomic_base.270" = type { %"struct.std::__1::__cxx_atomic_impl.271" }
%"struct.std::__1::__cxx_atomic_impl.271" = type { %"struct.std::__1::__cxx_atomic_base_impl.272" }
%"struct.std::__1::__cxx_atomic_base_impl.272" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::AuthenticationExtensionsClientOutputs" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member", %"class.blink::Member.0", i8, %"class.blink::Member.4", %"class.WTF::Vector" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CredentialPropertiesOutput"* }
%"class.blink::CredentialPropertiesOutput" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* }
%"class.blink::AuthenticationExtensionsLargeBlobOutputs" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.blink::Member.0", i8, i8, [6 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::Vector.6"*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { i32*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.12" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference.12" = type { %"class.v8::TracedReference.13" }
%"class.v8::TracedReference.13" = type { %"class.v8::BasicTracedReference.14" }
%"class.v8::BasicTracedReference.14" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.36", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.86", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.273", %"class.std::__1::unique_ptr.278", %"class.blink::Persistent.284", %"class.blink::Persistent.288", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.40"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.40" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.49", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.44", i8* }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.48"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.48" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.49" = type { %"class.v8::PersistentValueMapBase.50" }
%"class.v8::PersistentValueMapBase.50" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.51", i8* }
%"class.WTF::HashMap.51" = type { %"class.WTF::HashTable.52" }
%"class.WTF::HashTable.52" = type <{ %"struct.WTF::KeyValuePair.55"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.55" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.56" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.70", %"class.WTF::Vector.76", i8, i32 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.WTF::Vector.62"* }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.64", [32 x i8] }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.309, %"class.blink::Member.323", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.309 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.310", i32, i32, %"class.blink::Persistent.312" }
%"class.WTF::RefCounted.310" = type { %"class.base::RefCounted.311" }
%"class.base::RefCounted.311" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.312" = type { %"class.blink::PersistentBase.313" }
%"class.blink::PersistentBase.313" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.318" }
%"class.WTF::HashMap.318" = type { %"class.WTF::HashTable.319" }
%"class.WTF::HashTable.319" = type <{ %"struct.WTF::KeyValuePair.321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.321" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.284" = type { %"class.blink::PersistentBase.285" }
%"class.blink::PersistentBase.285" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.288" = type { %"class.blink::PersistentBase.289" }
%"class.blink::PersistentBase.289" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"struct.std::__1::pair.297"*, i32, i32 }
%"struct.std::__1::pair.297" = type { %"class.blink::UntracedMember", %"class.blink::Member.299" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.325" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.15", %"class.v8::Local", %"class.v8::Local.360", %"class.v8::Local.360", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.15" = type { %"class.v8::Object"* }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Local.360" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ExecutionContext" = type opaque
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.v8::Integer" = type { i8 }

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS2_IjLj0ENS1_18PartitionAllocatorEEELj0ES3_EEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"member getCredBlob is not of type ArrayBuffer.\00", align 1
@_ZZN5blinkL50eternalV8AuthenticationExtensionsClientOutputsKeysEPN2v87IsolateEE5kKeys = internal constant [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [6 x i8] c"appid\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"credBlob\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"credProps\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"getCredBlob\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"hmacCreateSecret\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"largeBlob\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"uvm\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 7, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @_ZZN5blinkL50eternalV8AuthenticationExtensionsClientOutputsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink26RuntimeEnabledFeaturesBase51is_web_authentication_large_blob_extension_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.9 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.15 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned int, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink39V8AuthenticationExtensionsClientOutputs6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37AuthenticationExtensionsClientOutputsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = icmp eq %"class.v8::Value"* %1, null
  br i1 %7, label %440, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %440
    i32 3, label %440
  ]

29:                                               ; preds = %24, %13, %8
  %30 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %440

32:                                               ; preds = %29
  %33 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %34 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to %"class.blink::V8PerIsolateData"**
  %37 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %36, align 8
  %38 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %37, i8* bitcast ([7 x i8*]* @_ZZN5blinkL50eternalV8AuthenticationExtensionsClientOutputsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.325"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.325"*)) #7
  %39 = extractvalue { i64, %"class.v8::Eternal"* } %38, 1
  %40 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %42 = bitcast %"class.v8::Eternal"* %39 to %"class.v8::Value"**
  %43 = load %"class.v8::Value"*, %"class.v8::Value"** %42, align 8
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %43) #7
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %32
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #7
  br label %439

52:                                               ; preds = %32
  %53 = bitcast %"class.v8::Value"* %44 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 3
  %56 = icmp eq i64 %55, 1
  br i1 %56, label %57, label %74

57:                                               ; preds = %52
  %58 = add i64 %54, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = and i64 %54, -4294967296
  %62 = zext i32 %60 to i64
  %63 = or i64 %61, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 67
  br i1 %67, label %68, label %74

68:                                               ; preds = %57
  %69 = add i64 %54, 23
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -2
  %73 = icmp eq i32 %72, 10
  br i1 %73, label %90, label %74

74:                                               ; preds = %57, %52, %68
  %75 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %44) #7
  br i1 %75, label %76, label %79, !prof !2

76:                                               ; preds = %74
  %77 = bitcast %"class.v8::Value"* %44 to %"class.v8::Boolean"*
  %78 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %77) #7
  br label %81

79:                                               ; preds = %74
  %80 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %44, %"class.v8::Isolate"* %0) #7
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i1 [ %78, %76 ], [ %80, %79 ]
  %83 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %439

86:                                               ; preds = %81
  %87 = zext i1 %82 to i8
  %88 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 6
  store i8 %87, i8* %88, align 1
  %89 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 1
  store i8 1, i8* %89, align 8
  br label %90

90:                                               ; preds = %86, %68
  %91 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %39, i64 1, i32 0
  %92 = bitcast %"class.v8::Name"** %91 to %"class.v8::Value"**
  %93 = load %"class.v8::Value"*, %"class.v8::Value"** %92, align 8
  %94 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %93) #7
  %95 = icmp eq %"class.v8::Value"* %94, null
  br i1 %95, label %96, label %102

96:                                               ; preds = %90
  %97 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %98 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %99 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %99, i64 5
  %101 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %100, align 8
  call void %101(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %97) #7
  br label %439

102:                                              ; preds = %90
  %103 = bitcast %"class.v8::Value"* %94 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = and i64 %104, 3
  %106 = icmp eq i64 %105, 1
  br i1 %106, label %107, label %124

107:                                              ; preds = %102
  %108 = add i64 %104, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = and i64 %104, -4294967296
  %112 = zext i32 %110 to i64
  %113 = or i64 %111, %112
  %114 = add i64 %113, 7
  %115 = inttoptr i64 %114 to i16*
  %116 = load i16, i16* %115, align 2
  %117 = icmp eq i16 %116, 67
  br i1 %117, label %118, label %124

118:                                              ; preds = %107
  %119 = add i64 %104, 23
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, -2
  %123 = icmp eq i32 %122, 10
  br i1 %123, label %140, label %124

124:                                              ; preds = %107, %102, %118
  %125 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %94) #7
  br i1 %125, label %126, label %129, !prof !2

126:                                              ; preds = %124
  %127 = bitcast %"class.v8::Value"* %94 to %"class.v8::Boolean"*
  %128 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %127) #7
  br label %131

129:                                              ; preds = %124
  %130 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %94, %"class.v8::Isolate"* %0) #7
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi i1 [ %128, %126 ], [ %130, %129 ]
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %439

136:                                              ; preds = %131
  %137 = zext i1 %132 to i8
  %138 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 7
  store i8 %137, i8* %138, align 2
  %139 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 2
  store i8 1, i8* %139, align 1
  br label %140

140:                                              ; preds = %136, %118
  %141 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %39, i64 2, i32 0
  %142 = bitcast %"class.v8::Name"** %141 to %"class.v8::Value"**
  %143 = load %"class.v8::Value"*, %"class.v8::Value"** %142, align 8
  %144 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %143) #7
  %145 = icmp eq %"class.v8::Value"* %144, null
  br i1 %145, label %146, label %152

146:                                              ; preds = %140
  %147 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %148 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %149 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %149, i64 5
  %151 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %150, align 8
  call void %151(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %147) #7
  br label %439

152:                                              ; preds = %140
  %153 = bitcast %"class.v8::Value"* %144 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, 3
  %156 = icmp eq i64 %155, 1
  br i1 %156, label %157, label %174

157:                                              ; preds = %152
  %158 = add i64 %154, -1
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = and i64 %154, -4294967296
  %162 = zext i32 %160 to i64
  %163 = or i64 %161, %162
  %164 = add i64 %163, 7
  %165 = inttoptr i64 %164 to i16*
  %166 = load i16, i16* %165, align 2
  %167 = icmp eq i16 %166, 67
  br i1 %167, label %168, label %174

168:                                              ; preds = %157
  %169 = add i64 %154, 23
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = and i32 %171, -2
  %173 = icmp eq i32 %172, 10
  br i1 %173, label %180, label %174

174:                                              ; preds = %157, %152, %168
  %175 = call %"class.blink::CredentialPropertiesOutput"* @_ZN5blink17NativeValueTraitsINS_26CredentialPropertiesOutputEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %144, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %176 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %439

179:                                              ; preds = %174
  call void @_ZN5blink37AuthenticationExtensionsClientOutputs12setCredPropsEPNS_26CredentialPropertiesOutputE(%"class.blink::AuthenticationExtensionsClientOutputs"* %2, %"class.blink::CredentialPropertiesOutput"* %175) #7
  br label %180

180:                                              ; preds = %179, %168
  %181 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %39, i64 3, i32 0
  %182 = bitcast %"class.v8::Name"** %181 to %"class.v8::Value"**
  %183 = load %"class.v8::Value"*, %"class.v8::Value"** %182, align 8
  %184 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %183) #7
  %185 = icmp eq %"class.v8::Value"* %184, null
  br i1 %185, label %186, label %192

186:                                              ; preds = %180
  %187 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %188 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %189 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %189, i64 5
  %191 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %190, align 8
  call void %191(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %187) #7
  br label %439

192:                                              ; preds = %180
  %193 = bitcast %"class.v8::Value"* %184 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 1
  br i1 %196, label %197, label %227

197:                                              ; preds = %192
  %198 = add i64 %194, -1
  %199 = inttoptr i64 %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = and i64 %194, -4294967296
  %202 = zext i32 %200 to i64
  %203 = or i64 %201, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load i16, i16* %205, align 2
  %207 = icmp eq i16 %206, 67
  br i1 %207, label %208, label %227

208:                                              ; preds = %197
  %209 = add i64 %194, 23
  %210 = inttoptr i64 %209 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, -2
  %213 = icmp eq i32 %212, 10
  br i1 %213, label %242, label %214

214:                                              ; preds = %208
  %215 = add i64 %194, 23
  %216 = inttoptr i64 %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, -2
  %219 = icmp eq i32 %218, 6
  br i1 %219, label %220, label %227

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 9
  %222 = bitcast %"class.blink::Member.0"* %221 to i64*
  store atomic i64 0, i64* %222 monotonic, align 8
  %223 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %240, label %225

225:                                              ; preds = %220
  %226 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #7
  br label %240

227:                                              ; preds = %197, %192, %214
  %228 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %184) #7
  %229 = icmp eq %"class.blink::DOMArrayBuffer"* %228, null
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %439

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 9
  %233 = ptrtoint %"class.blink::DOMArrayBuffer"* %228 to i64
  %234 = bitcast %"class.blink::Member.0"* %232 to i64*
  store atomic i64 %233, i64* %234 monotonic, align 8
  %235 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %240, label %237

237:                                              ; preds = %231
  %238 = bitcast %"class.blink::DOMArrayBuffer"* %228 to i8*
  %239 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %238) #7
  br label %240

240:                                              ; preds = %237, %231, %225, %220
  %241 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 3
  store i8 1, i8* %241, align 2
  br label %242

242:                                              ; preds = %240, %208
  %243 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %39, i64 4, i32 0
  %244 = bitcast %"class.v8::Name"** %243 to %"class.v8::Value"**
  %245 = load %"class.v8::Value"*, %"class.v8::Value"** %244, align 8
  %246 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %245) #7
  %247 = icmp eq %"class.v8::Value"* %246, null
  br i1 %247, label %248, label %254

248:                                              ; preds = %242
  %249 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %250 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %251 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %250, align 8
  %252 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %251, i64 5
  %253 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %252, align 8
  call void %253(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %249) #7
  br label %439

254:                                              ; preds = %242
  %255 = bitcast %"class.v8::Value"* %246 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = and i64 %256, 3
  %258 = icmp eq i64 %257, 1
  br i1 %258, label %259, label %276

259:                                              ; preds = %254
  %260 = add i64 %256, -1
  %261 = inttoptr i64 %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = and i64 %256, -4294967296
  %264 = zext i32 %262 to i64
  %265 = or i64 %263, %264
  %266 = add i64 %265, 7
  %267 = inttoptr i64 %266 to i16*
  %268 = load i16, i16* %267, align 2
  %269 = icmp eq i16 %268, 67
  br i1 %269, label %270, label %276

270:                                              ; preds = %259
  %271 = add i64 %256, 23
  %272 = inttoptr i64 %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = and i32 %273, -2
  %275 = icmp eq i32 %274, 10
  br i1 %275, label %292, label %276

276:                                              ; preds = %259, %254, %270
  %277 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %246) #7
  br i1 %277, label %278, label %281, !prof !2

278:                                              ; preds = %276
  %279 = bitcast %"class.v8::Value"* %246 to %"class.v8::Boolean"*
  %280 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %279) #7
  br label %283

281:                                              ; preds = %276
  %282 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %246, %"class.v8::Isolate"* %0) #7
  br label %283

283:                                              ; preds = %278, %281
  %284 = phi i1 [ %280, %278 ], [ %282, %281 ]
  %285 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %286 = load i32, i32* %285, align 8
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %439

288:                                              ; preds = %283
  %289 = zext i1 %284 to i8
  %290 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 10
  store i8 %289, i8* %290, align 8
  %291 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %2, i64 0, i32 4
  store i8 1, i8* %291, align 1
  br label %292

292:                                              ; preds = %288, %270
  %293 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %39, i64 6, i32 0
  %294 = bitcast %"class.v8::Name"** %293 to %"class.v8::Value"**
  %295 = load %"class.v8::Value"*, %"class.v8::Value"** %294, align 8
  %296 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %295) #7
  %297 = icmp eq %"class.v8::Value"* %296, null
  br i1 %297, label %298, label %304

298:                                              ; preds = %292
  %299 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %300 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %301 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %301, i64 5
  %303 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %302, align 8
  call void %303(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %299) #7
  br label %439

304:                                              ; preds = %292
  %305 = bitcast %"class.v8::Value"* %296 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = and i64 %306, 3
  %308 = icmp eq i64 %307, 1
  br i1 %308, label %309, label %326

309:                                              ; preds = %304
  %310 = add i64 %306, -1
  %311 = inttoptr i64 %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = and i64 %306, -4294967296
  %314 = zext i32 %312 to i64
  %315 = or i64 %313, %314
  %316 = add i64 %315, 7
  %317 = inttoptr i64 %316 to i16*
  %318 = load i16, i16* %317, align 2
  %319 = icmp eq i16 %318, 67
  br i1 %319, label %320, label %326

320:                                              ; preds = %309
  %321 = add i64 %306, 23
  %322 = inttoptr i64 %321 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = and i32 %323, -2
  %325 = icmp eq i32 %324, 10
  br i1 %325, label %396, label %326

326:                                              ; preds = %309, %304, %320
  %327 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %327) #7
  %328 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %330 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %330, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %6, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %296, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %331 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %332 = load i32, i32* %331, align 8
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %365

334:                                              ; preds = %326
  call void @_ZN5blink37AuthenticationExtensionsClientOutputs6setUvmERKN3WTF6VectorINS2_IjLj0ENS1_18PartitionAllocatorEEELj0ES3_EE(%"class.blink::AuthenticationExtensionsClientOutputs"* %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %6) #7
  %335 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %328, align 8
  %336 = icmp eq %"class.WTF::Vector.6"* %335, null
  br i1 %336, label %364, label %337, !prof !2

337:                                              ; preds = %334
  %338 = bitcast %"class.WTF::Vector.6"* %335 to i8*
  %339 = load i32, i32* %329, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %362, label %341, !prof !3

341:                                              ; preds = %337
  %342 = zext i32 %339 to i64
  %343 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %335, i64 %342
  br label %344

344:                                              ; preds = %356, %341
  %345 = phi %"class.WTF::Vector.6"* [ %357, %356 ], [ %335, %341 ]
  %346 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %345, i64 0, i32 0, i32 0, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  %349 = bitcast i32* %347 to i8*
  br i1 %348, label %356, label %350, !prof !2

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %345, i64 0, i32 0, i32 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %355, label %354, !prof !3

354:                                              ; preds = %350
  store i32 0, i32* %351, align 4
  br label %355

355:                                              ; preds = %354, %350
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %349) #7
  store i32* null, i32** %346, align 8
  br label %356

356:                                              ; preds = %355, %344
  %357 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %345, i64 1
  %358 = icmp eq %"class.WTF::Vector.6"* %357, %343
  br i1 %358, label %359, label %344

359:                                              ; preds = %356
  store i32 0, i32* %329, align 4
  %360 = bitcast %"class.WTF::Vector"* %6 to i8**
  %361 = load i8*, i8** %360, align 8
  br label %362

362:                                              ; preds = %359, %337
  %363 = phi i8* [ %361, %359 ], [ %338, %337 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %363) #7
  store %"class.WTF::Vector.6"* null, %"class.WTF::Vector.6"** %328, align 8
  br label %364

364:                                              ; preds = %334, %362
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #7
  br label %396

365:                                              ; preds = %326
  %366 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %328, align 8
  %367 = icmp eq %"class.WTF::Vector.6"* %366, null
  br i1 %367, label %395, label %368, !prof !2

368:                                              ; preds = %365
  %369 = bitcast %"class.WTF::Vector.6"* %366 to i8*
  %370 = load i32, i32* %329, align 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %393, label %372, !prof !3

372:                                              ; preds = %368
  %373 = zext i32 %370 to i64
  %374 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %366, i64 %373
  br label %375

375:                                              ; preds = %387, %372
  %376 = phi %"class.WTF::Vector.6"* [ %388, %387 ], [ %366, %372 ]
  %377 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %376, i64 0, i32 0, i32 0, i32 0
  %378 = load i32*, i32** %377, align 8
  %379 = icmp eq i32* %378, null
  %380 = bitcast i32* %378 to i8*
  br i1 %379, label %387, label %381, !prof !2

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %376, i64 0, i32 0, i32 0, i32 2
  %383 = load i32, i32* %382, align 4
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %386, label %385, !prof !3

385:                                              ; preds = %381
  store i32 0, i32* %382, align 4
  br label %386

386:                                              ; preds = %385, %381
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %380) #7
  store i32* null, i32** %377, align 8
  br label %387

387:                                              ; preds = %386, %375
  %388 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %376, i64 1
  %389 = icmp eq %"class.WTF::Vector.6"* %388, %374
  br i1 %389, label %390, label %375

390:                                              ; preds = %387
  store i32 0, i32* %329, align 4
  %391 = bitcast %"class.WTF::Vector"* %6 to i8**
  %392 = load i8*, i8** %391, align 8
  br label %393

393:                                              ; preds = %390, %368
  %394 = phi i8* [ %392, %390 ], [ %369, %368 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %394) #7
  store %"class.WTF::Vector.6"* null, %"class.WTF::Vector.6"** %328, align 8
  br label %395

395:                                              ; preds = %365, %393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #7
  br label %439

396:                                              ; preds = %364, %320
  %397 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase51is_web_authentication_large_blob_extension_enabled_E, align 1, !range !4
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %439, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %39, i64 5, i32 0
  %401 = bitcast %"class.v8::Name"** %400 to %"class.v8::Value"**
  %402 = load %"class.v8::Value"*, %"class.v8::Value"** %401, align 8
  %403 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %33, %"class.v8::Context"* %41, %"class.v8::Value"* %402) #7
  %404 = icmp eq %"class.v8::Value"* %403, null
  br i1 %404, label %405, label %411

405:                                              ; preds = %399
  %406 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %407 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %408 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %407, align 8
  %409 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %408, i64 5
  %410 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %409, align 8
  call void %410(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %406) #7
  br label %439

411:                                              ; preds = %399
  %412 = bitcast %"class.v8::Value"* %403 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 3
  %415 = icmp eq i64 %414, 1
  br i1 %415, label %416, label %433

416:                                              ; preds = %411
  %417 = add i64 %413, -1
  %418 = inttoptr i64 %417 to i32*
  %419 = load i32, i32* %418, align 4
  %420 = and i64 %413, -4294967296
  %421 = zext i32 %419 to i64
  %422 = or i64 %420, %421
  %423 = add i64 %422, 7
  %424 = inttoptr i64 %423 to i16*
  %425 = load i16, i16* %424, align 2
  %426 = icmp eq i16 %425, 67
  br i1 %426, label %427, label %433

427:                                              ; preds = %416
  %428 = add i64 %413, 23
  %429 = inttoptr i64 %428 to i32*
  %430 = load i32, i32* %429, align 4
  %431 = and i32 %430, -2
  %432 = icmp eq i32 %431, 10
  br i1 %432, label %439, label %433

433:                                              ; preds = %416, %411, %427
  %434 = call %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* @_ZN5blink17NativeValueTraitsINS_40AuthenticationExtensionsLargeBlobOutputsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %403, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %435 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %436 = load i32, i32* %435, align 8
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %439

438:                                              ; preds = %433
  call void @_ZN5blink37AuthenticationExtensionsClientOutputs12setLargeBlobEPNS_40AuthenticationExtensionsLargeBlobOutputsE(%"class.blink::AuthenticationExtensionsClientOutputs"* %2, %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %434) #7
  br label %439

439:                                              ; preds = %433, %396, %283, %174, %131, %81, %96, %186, %230, %298, %395, %438, %427, %405, %248, %146, %46
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #7
  br label %440

440:                                              ; preds = %24, %24, %4, %439, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare %"class.blink::CredentialPropertiesOutput"* @_ZN5blink17NativeValueTraitsINS_26CredentialPropertiesOutputEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink37AuthenticationExtensionsClientOutputs12setCredPropsEPNS_26CredentialPropertiesOutputE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.blink::CredentialPropertiesOutput"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #7
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #7
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0)) #7
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #7
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #7
  %26 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #7
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #7
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink37AuthenticationExtensionsClientOutputs6setUvmERKN3WTF6VectorINS2_IjLj0ENS1_18PartitionAllocatorEEELj0ES3_EE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* @_ZN5blink17NativeValueTraitsINS_40AuthenticationExtensionsLargeBlobOutputsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink37AuthenticationExtensionsClientOutputs12setLargeBlobEPNS_40AuthenticationExtensionsLargeBlobOutputsE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.blink::AuthenticationExtensionsLargeBlobOutputs"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink37AuthenticationExtensionsClientOutputs8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink41toV8AuthenticationExtensionsClientOutputsEPKNS_37AuthenticationExtensionsClientOutputsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::AuthenticationExtensionsClientOutputs"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink41toV8AuthenticationExtensionsClientOutputsEPKNS_37AuthenticationExtensionsClientOutputsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %6 to %"class.blink::V8PerIsolateData"**
  %8 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %7, align 8
  %9 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %8, i8* bitcast ([7 x i8*]* @_ZZN5blinkL50eternalV8AuthenticationExtensionsClientOutputsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.325"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.325"*)) #7
  %10 = extractvalue { i64, %"class.v8::Eternal"* } %9, 1
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %12 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 6
  %17 = load i8, i8* %16, align 1, !range !4
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i64 192, i64 184
  %20 = add i64 %19, %5
  %21 = inttoptr i64 %20 to %"class.v8::Value"*
  %22 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 0, i32 0
  %23 = load %"class.v8::Name"*, %"class.v8::Name"** %22, align 8
  %24 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %23, %"class.v8::Value"* %21) #7
  %25 = trunc i16 %24 to i8
  %26 = icmp ne i8 %25, 0
  %27 = icmp ugt i16 %24, 255
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %157

29:                                               ; preds = %4, %15
  %30 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 2
  %31 = load i8, i8* %30, align 1, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 7
  %35 = load i8, i8* %34, align 2, !range !4
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i64 192, i64 184
  %38 = add i64 %37, %5
  %39 = inttoptr i64 %38 to %"class.v8::Value"*
  %40 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 1, i32 0
  %41 = load %"class.v8::Name"*, %"class.v8::Name"** %40, align 8
  %42 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %41, %"class.v8::Value"* %39) #7
  %43 = trunc i16 %42 to i8
  %44 = icmp ne i8 %43, 0
  %45 = icmp ugt i16 %42, 255
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %157

47:                                               ; preds = %29, %33
  %48 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 8, i32 0, i32 0
  %49 = load %"class.blink::CredentialPropertiesOutput"*, %"class.blink::CredentialPropertiesOutput"** %48, align 8
  %50 = icmp eq %"class.blink::CredentialPropertiesOutput"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::CredentialPropertiesOutput", %"class.blink::CredentialPropertiesOutput"* %49, i64 0, i32 0
  %53 = bitcast %"class.blink::CredentialPropertiesOutput"* %49 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %54 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %54, i64 2
  %56 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %55, align 8
  %57 = tail call %"class.v8::Value"* %56(%"class.blink::IDLDictionaryBase"* nonnull %52, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %58 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 2, i32 0
  %59 = load %"class.v8::Name"*, %"class.v8::Name"** %58, align 8
  %60 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %59, %"class.v8::Value"* %57) #7
  %61 = trunc i16 %60 to i8
  %62 = icmp ne i8 %61, 0
  %63 = icmp ugt i16 %60, 255
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %157

65:                                               ; preds = %47, %51
  %66 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 3
  %67 = load i8, i8* %66, align 2, !range !4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 9, i32 0, i32 0
  %71 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %71, i64 0, i32 0, i32 0
  %73 = icmp eq %"class.blink::DOMArrayBuffer"* %71, null
  br i1 %73, label %74, label %76, !prof !3

74:                                               ; preds = %69
  %75 = add i64 %5, 176
  br label %92

76:                                               ; preds = %69
  %77 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %72, %"class.v8::Isolate"* %3) #7
  %78 = ptrtoint %"class.v8::Object"* %77 to i64
  %79 = icmp eq %"class.v8::Object"* %77, null
  br i1 %79, label %80, label %92

80:                                               ; preds = %76
  %81 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %2) #7
  %82 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %81) #7
  %83 = bitcast %"class.blink::DOMArrayBuffer"* %71 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %84 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %84, i64 7
  %86 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %85, align 8
  %87 = tail call %"class.v8::Value"* %86(%"class.blink::ScriptWrappable"* nonnull %72, %"class.blink::ScriptState"* %82) #7
  %88 = icmp eq %"class.v8::Value"* %87, null
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %80
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %90

90:                                               ; preds = %89, %80
  %91 = ptrtoint %"class.v8::Value"* %87 to i64
  br label %92

92:                                               ; preds = %74, %76, %90
  %93 = phi i64 [ %75, %74 ], [ %91, %90 ], [ %78, %76 ]
  %94 = inttoptr i64 %93 to %"class.v8::Value"*
  %95 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 3, i32 0
  %96 = load %"class.v8::Name"*, %"class.v8::Name"** %95, align 8
  %97 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %96, %"class.v8::Value"* %94) #7
  %98 = trunc i16 %97 to i8
  %99 = icmp ne i8 %98, 0
  %100 = icmp ugt i16 %97, 255
  %101 = and i1 %100, %99
  br i1 %101, label %102, label %157

102:                                              ; preds = %65, %92
  %103 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 4
  %104 = load i8, i8* %103, align 1, !range !4
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 10
  %108 = load i8, i8* %107, align 8, !range !4
  %109 = icmp eq i8 %108, 0
  %110 = select i1 %109, i64 192, i64 184
  %111 = add i64 %110, %5
  %112 = inttoptr i64 %111 to %"class.v8::Value"*
  %113 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 4, i32 0
  %114 = load %"class.v8::Name"*, %"class.v8::Name"** %113, align 8
  %115 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %114, %"class.v8::Value"* %112) #7
  %116 = trunc i16 %115 to i8
  %117 = icmp ne i8 %116, 0
  %118 = icmp ugt i16 %115, 255
  %119 = and i1 %118, %117
  br i1 %119, label %120, label %157

120:                                              ; preds = %102, %106
  %121 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 5
  %122 = load i8, i8* %121, align 4, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %135, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 12
  %126 = tail call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS2_IjLj0ENS1_18PartitionAllocatorEEELj0ES3_EEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %125, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %127 = bitcast %"class.v8::Array"* %126 to %"class.v8::Value"*
  %128 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 6, i32 0
  %129 = load %"class.v8::Name"*, %"class.v8::Name"** %128, align 8
  %130 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %129, %"class.v8::Value"* %127) #7
  %131 = trunc i16 %130 to i8
  %132 = icmp ne i8 %131, 0
  %133 = icmp ugt i16 %130, 255
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %157

135:                                              ; preds = %120, %124
  %136 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase51is_web_authentication_large_blob_extension_enabled_E, align 1, !range !4
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %157, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 11, i32 0, i32 0
  %140 = load %"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::AuthenticationExtensionsLargeBlobOutputs"** %139, align 8
  %141 = icmp eq %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %140, null
  br i1 %141, label %156, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::AuthenticationExtensionsLargeBlobOutputs", %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %140, i64 0, i32 0
  %144 = bitcast %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %140 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %145 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %144, align 8
  %146 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %145, i64 2
  %147 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %146, align 8
  %148 = tail call %"class.v8::Value"* %147(%"class.blink::IDLDictionaryBase"* nonnull %143, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %149 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 5, i32 0
  %150 = load %"class.v8::Name"*, %"class.v8::Name"** %149, align 8
  %151 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %150, %"class.v8::Value"* %148) #7
  %152 = trunc i16 %151 to i8
  %153 = icmp ne i8 %152, 0
  %154 = icmp ugt i16 %151, 255
  %155 = and i1 %154, %153
  br i1 %155, label %156, label %157

156:                                              ; preds = %138, %142
  br label %157

157:                                              ; preds = %135, %33, %92, %124, %156, %142, %106, %51, %15
  %158 = phi i1 [ false, %15 ], [ false, %33 ], [ false, %51 ], [ false, %92 ], [ false, %106 ], [ false, %124 ], [ true, %156 ], [ true, %135 ], [ false, %142 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AuthenticationExtensionsClientOutputs"* @_ZN5blink17NativeValueTraitsINS_37AuthenticationExtensionsClientOutputsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.blink::AuthenticationExtensionsClientOutputs"*
  tail call void @_ZN5blink37AuthenticationExtensionsClientOutputsC1Ev(%"class.blink::AuthenticationExtensionsClientOutputs"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink39V8AuthenticationExtensionsClientOutputs6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37AuthenticationExtensionsClientOutputsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::AuthenticationExtensionsClientOutputs"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::AuthenticationExtensionsClientOutputs"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.325"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #7
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #7
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #7
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.318", %"class.WTF::HashMap.318"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.319"* %47, %"class.blink::ScriptWrappable"* %0) #7
  %49 = extractvalue { %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.318", %"class.WTF::HashMap.318"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.321"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.319"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.319", %"class.WTF::HashTable.319"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.321"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.319", %"class.WTF::HashTable.319"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.321"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.321"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.321", %"struct.WTF::KeyValuePair.321"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.321"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.321"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"* } undef, %"struct.WTF::KeyValuePair.321"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"* } %78, %"struct.WTF::KeyValuePair.321"* %77, 1
  ret { %"struct.WTF::KeyValuePair.321"*, %"struct.WTF::KeyValuePair.321"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN5blink37AuthenticationExtensionsClientOutputsC1Ev(%"class.blink::AuthenticationExtensionsClientOutputs"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::Vector.6", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #7
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 134086656
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #7
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #7
  br label %140

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #7
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64 %9) #7
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 4
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #7
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector"* %0 to i8*
  br label %100

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::Vector.6"* %7 to i8*
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %40 = bitcast %"class.WTF::Vector"* %0 to i8*
  %41 = bitcast %"class.WTF::Vector.6"* %7 to i64*
  %42 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %7, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %7, i64 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %7, i64 0, i32 0, i32 0, i32 0
  br label %48

45:                                               ; preds = %92
  %46 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #7
  %47 = icmp ult i32 %94, %46
  br i1 %47, label %48, label %95

48:                                               ; preds = %36, %45
  %49 = phi i32 [ 0, %36 ], [ %94, %45 ]
  %50 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %49) #7
  %51 = icmp eq %"class.v8::Value"* %50, null
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %54 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %55, i64 5
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %56, align 8
  call void %57(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %53) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #7
  br label %109

58:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #7
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* nonnull sret %7, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %50, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %59 = load i32, i32* %39, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #7
  br label %82

62:                                               ; preds = %58
  %63 = load i32, i32* %17, align 4
  %64 = load i32, i32* %16, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %81, label %66, !prof !3

66:                                               ; preds = %62
  %67 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %15, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %67, i64 %68
  %70 = bitcast %"class.WTF::Vector.6"* %69 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %67, i64 %68, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %67, i64 %68, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #7
  %73 = load i64, i64* %41, align 8
  %74 = bitcast %"class.WTF::Vector.6"* %69 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load i32, i32* %71, align 4
  %76 = load i32, i32* %42, align 8
  store i32 %76, i32* %71, align 4
  store i32 %75, i32* %42, align 8
  %77 = load i32, i32* %72, align 4
  %78 = load i32, i32* %43, align 4
  store i32 %78, i32* %72, align 4
  store i32 %77, i32* %43, align 4
  %79 = load i32, i32* %17, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %17, align 4
  br label %82

81:                                               ; preds = %62
  call void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::Vector.6"* nonnull dereferenceable(16) %7) #7
  br label %82

82:                                               ; preds = %81, %66, %61
  %83 = phi i32 [ 1, %61 ], [ 0, %66 ], [ 0, %81 ]
  %84 = load i32*, i32** %44, align 8
  %85 = icmp eq i32* %84, null
  %86 = bitcast i32* %84 to i8*
  br i1 %85, label %92, label %87, !prof !2

87:                                               ; preds = %82
  %88 = load i32, i32* %43, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %91, label %90, !prof !3

90:                                               ; preds = %87
  store i32 0, i32* %43, align 4
  br label %91

91:                                               ; preds = %90, %87
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %86) #7
  store i32* null, i32** %44, align 8
  br label %92

92:                                               ; preds = %91, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #7
  %93 = icmp eq i32 %83, 0
  %94 = add nuw i32 %49, 1
  br i1 %93, label %45, label %109

95:                                               ; preds = %45
  %96 = bitcast %"class.WTF::Vector"* %5 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = load i32, i32* %16, align 8
  %99 = load i32, i32* %17, align 4
  br label %100

100:                                              ; preds = %33, %95
  %101 = phi i8* [ %35, %33 ], [ %40, %95 ]
  %102 = phi i64* [ %34, %33 ], [ %96, %95 ]
  %103 = phi i32 [ 0, %33 ], [ %99, %95 ]
  %104 = phi i32 [ %27, %33 ], [ %98, %95 ]
  %105 = phi i64 [ %28, %33 ], [ %97, %95 ]
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #7
  %108 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %102 monotonic, align 8
  store atomic i64 %105, i64* %108 monotonic, align 8
  store i32 %104, i32* %106, align 8
  store i32 0, i32* %16, align 8
  store i32 %103, i32* %107, align 4
  store i32 0, i32* %17, align 4
  br label %109

109:                                              ; preds = %92, %52, %100
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #7
  %110 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %15, align 8
  %111 = icmp eq %"class.WTF::Vector.6"* %110, null
  br i1 %111, label %139, label %112, !prof !2

112:                                              ; preds = %109
  %113 = bitcast %"class.WTF::Vector.6"* %110 to i8*
  %114 = load i32, i32* %17, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %137, label %116, !prof !3

116:                                              ; preds = %112
  %117 = zext i32 %114 to i64
  %118 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %110, i64 %117
  br label %119

119:                                              ; preds = %131, %116
  %120 = phi %"class.WTF::Vector.6"* [ %132, %131 ], [ %110, %116 ]
  %121 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  %124 = bitcast i32* %122 to i8*
  br i1 %123, label %131, label %125, !prof !2

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 0, i32 0, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %130, label %129, !prof !3

129:                                              ; preds = %125
  store i32 0, i32* %126, align 4
  br label %130

130:                                              ; preds = %129, %125
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %124) #7
  store i32* null, i32** %121, align 8
  br label %131

131:                                              ; preds = %130, %119
  %132 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 1
  %133 = icmp eq %"class.WTF::Vector.6"* %132, %118
  br i1 %133, label %134, label %119

134:                                              ; preds = %131
  store i32 0, i32* %17, align 4
  %135 = bitcast %"class.WTF::Vector"* %5 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %112
  %138 = phi i8* [ %136, %134 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %138) #7
  store %"class.WTF::Vector.6"* null, %"class.WTF::Vector.6"** %15, align 8
  br label %139

139:                                              ; preds = %109, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %140

140:                                              ; preds = %139, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::Vector.6", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #7
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #7
  br i1 %13, label %14, label %71

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::Vector.6"* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = bitcast %"class.WTF::Vector.6"* %6 to i64*
  %19 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 0, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %14, %69
  %23 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %24 = icmp eq %"class.v8::Value"* %23, null
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %22
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %26

26:                                               ; preds = %22, %25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #7
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* nonnull sret %6, %"class.v8::Isolate"* %1, %"class.v8::Value"* %23, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %27 = load i32, i32* %17, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #7
  %31 = load i32*, i32** %21, align 8
  %32 = icmp eq i32* %31, null
  %33 = bitcast i32* %31 to i8*
  br i1 %32, label %39, label %34, !prof !2

34:                                               ; preds = %29
  %35 = load i32, i32* %20, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %34
  store i32 0, i32* %20, align 4
  br label %38

38:                                               ; preds = %37, %34
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #7
  store i32* null, i32** %21, align 8
  br label %39

39:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7
  br label %86

40:                                               ; preds = %26
  %41 = load i32, i32* %12, align 4
  %42 = load i32, i32* %11, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %59, label %44, !prof !3

44:                                               ; preds = %40
  %45 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %10, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %45, i64 %46
  %48 = bitcast %"class.WTF::Vector.6"* %47 to i8*
  %49 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %45, i64 %46, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %45, i64 %46, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #7
  %51 = load i64, i64* %18, align 8
  %52 = bitcast %"class.WTF::Vector.6"* %47 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load i32, i32* %49, align 4
  %54 = load i32, i32* %19, align 8
  store i32 %54, i32* %49, align 4
  store i32 %53, i32* %19, align 8
  %55 = load i32, i32* %50, align 4
  %56 = load i32, i32* %20, align 4
  store i32 %56, i32* %50, align 4
  store i32 %55, i32* %20, align 4
  %57 = load i32, i32* %12, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %12, align 4
  br label %60

59:                                               ; preds = %40
  call void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::Vector.6"* nonnull dereferenceable(16) %6) #7
  br label %60

60:                                               ; preds = %44, %59
  %61 = load i32*, i32** %21, align 8
  %62 = icmp eq i32* %61, null
  %63 = bitcast i32* %61 to i8*
  br i1 %62, label %69, label %64, !prof !2

64:                                               ; preds = %60
  %65 = load i32, i32* %20, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %64
  store i32 0, i32* %20, align 4
  br label %68

68:                                               ; preds = %67, %64
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #7
  store i32* null, i32** %21, align 8
  br label %69

69:                                               ; preds = %60, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7
  %70 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #7
  br i1 %70, label %22, label %71

71:                                               ; preds = %69, %4
  %72 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #7
  br label %86

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %80 = bitcast %"class.WTF::Vector"* %5 to i64*
  %81 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %81, align 8
  %82 = load i64, i64* %80, align 8
  %83 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = load i32, i32* %11, align 8
  store i32 %84, i32* %78, align 8
  store i32 0, i32* %11, align 8
  %85 = load i32, i32* %12, align 4
  store i32 %85, i32* %79, align 4
  store i32 0, i32* %12, align 4
  br label %86

86:                                               ; preds = %39, %77, %75
  %87 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %10, align 8
  %88 = icmp eq %"class.WTF::Vector.6"* %87, null
  br i1 %88, label %116, label %89, !prof !2

89:                                               ; preds = %86
  %90 = bitcast %"class.WTF::Vector.6"* %87 to i8*
  %91 = load i32, i32* %12, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %114, label %93, !prof !3

93:                                               ; preds = %89
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %87, i64 %94
  br label %96

96:                                               ; preds = %108, %93
  %97 = phi %"class.WTF::Vector.6"* [ %109, %108 ], [ %87, %93 ]
  %98 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  %101 = bitcast i32* %99 to i8*
  br i1 %100, label %108, label %102, !prof !2

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %97, i64 0, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106, !prof !3

106:                                              ; preds = %102
  store i32 0, i32* %103, align 4
  br label %107

107:                                              ; preds = %106, %102
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %101) #7
  store i32* null, i32** %98, align 8
  br label %108

108:                                              ; preds = %107, %96
  %109 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %97, i64 1
  %110 = icmp eq %"class.WTF::Vector.6"* %109, %95
  br i1 %110, label %111, label %96

111:                                              ; preds = %108
  store i32 0, i32* %12, align 4
  %112 = bitcast %"class.WTF::Vector"* %5 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %89
  %115 = phi i8* [ %113, %111 ], [ %90, %89 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %115) #7
  store %"class.WTF::Vector.6"* null, %"class.WTF::Vector.6"** %10, align 8
  br label %116

116:                                              ; preds = %86, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #7
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #7
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0)) #7
  %12 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #7
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #7
  %26 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #7
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.6"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #7
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.6"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.6", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca i32, align 4
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #7
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 536346624
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #7
  %12 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #7
  br label %107

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #7
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %9) #7
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.6"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #7
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.6"* %5 to i64*
  br label %88

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast i32* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %79
  %40 = phi i32 [ 0, %35 ], [ %80, %79 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #7
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #7
  %49 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #7
  br label %97

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #7
  %51 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %41) #7
  br i1 %51, label %52, label %55, !prof !2

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::Value"* %41 to %"class.v8::Uint32"*
  %54 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %53) #7
  br label %62

55:                                               ; preds = %50
  %56 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %41) #7
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %55
  %58 = bitcast %"class.v8::Value"* %41 to %"class.v8::Int32"*
  %59 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %58) #7
  br label %62

60:                                               ; preds = %55
  %61 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %62

62:                                               ; preds = %52, %57, %60
  %63 = phi i32 [ %54, %52 ], [ %59, %57 ], [ %61, %60 ]
  store i32 %63, i32* %7, align 4
  %64 = load i32, i32* %38, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %62
  %67 = load i32, i32* %17, align 4
  %68 = load i32, i32* %16, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %76, label %70, !prof !3

70:                                               ; preds = %66
  %71 = load i32*, i32** %15, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds i32, i32* %71, i64 %72
  store i32 %63, i32* %73, align 4
  %74 = load i32, i32* %17, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %17, align 4
  br label %79

76:                                               ; preds = %66
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.6"* nonnull %5, i32* nonnull dereferenceable(4) %7) #7
  br label %79

77:                                               ; preds = %62
  %78 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #7
  br label %97

79:                                               ; preds = %70, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #7
  %80 = add nuw i32 %40, 1
  %81 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #7
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %39, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.WTF::Vector.6"* %5 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = load i32, i32* %16, align 8
  %87 = load i32, i32* %17, align 4
  br label %88

88:                                               ; preds = %33, %83
  %89 = phi i64* [ %34, %33 ], [ %84, %83 ]
  %90 = phi i32 [ 0, %33 ], [ %87, %83 ]
  %91 = phi i32 [ %27, %33 ], [ %86, %83 ]
  %92 = phi i64 [ %28, %33 ], [ %85, %83 ]
  %93 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store i64 0, i64* %95, align 8
  %96 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  store atomic i64 %92, i64* %96 monotonic, align 8
  store i32 %91, i32* %93, align 8
  store i32 0, i32* %16, align 8
  store i32 %90, i32* %94, align 4
  store i32 0, i32* %17, align 4
  br label %97

97:                                               ; preds = %43, %77, %88
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #7
  %98 = load i32*, i32** %15, align 8
  %99 = icmp eq i32* %98, null
  %100 = bitcast i32* %98 to i8*
  br i1 %99, label %106, label %101, !prof !2

101:                                              ; preds = %97
  %102 = load i32, i32* %17, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104, !prof !3

104:                                              ; preds = %101
  store i32 0, i32* %17, align 4
  br label %105

105:                                              ; preds = %104, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #7
  store i32* null, i32** %15, align 8
  br label %106

106:                                              ; preds = %97, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %107

107:                                              ; preds = %106, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18IDLIntegerTypeBaseIjLNS0_18IDLIntegerConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.6"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.6", align 8
  %6 = alloca i32, align 4
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #7
  %9 = bitcast %"class.WTF::Vector.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #7
  br i1 %13, label %14, label %53

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast i32* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %51
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #7
  %23 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %19) #7
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::Value"* %19 to %"class.v8::Uint32"*
  %26 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %25) #7
  br label %34

27:                                               ; preds = %22
  %28 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %19) #7
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %27
  %30 = bitcast %"class.v8::Value"* %19 to %"class.v8::Int32"*
  %31 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %30) #7
  br label %34

32:                                               ; preds = %27
  %33 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %34

34:                                               ; preds = %24, %29, %32
  %35 = phi i32 [ %26, %24 ], [ %31, %29 ], [ %33, %32 ]
  store i32 %35, i32* %6, align 4
  %36 = load i32, i32* %17, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #7
  br label %68

40:                                               ; preds = %34
  %41 = load i32, i32* %12, align 4
  %42 = load i32, i32* %11, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %50, label %44, !prof !3

44:                                               ; preds = %40
  %45 = load i32*, i32** %10, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  store i32 %35, i32* %47, align 4
  %48 = load i32, i32* %12, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %12, align 4
  br label %51

50:                                               ; preds = %40
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.6"* nonnull %5, i32* nonnull dereferenceable(4) %6) #7
  br label %51

51:                                               ; preds = %44, %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #7
  %52 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #7
  br i1 %52, label %18, label %53

53:                                               ; preds = %51, %4
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.WTF::Vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #7
  br label %68

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.WTF::Vector.6"* %5 to i64*
  %63 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store i64 0, i64* %63, align 8
  %64 = load i64, i64* %62, align 8
  %65 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = load i32, i32* %11, align 8
  store i32 %66, i32* %60, align 8
  store i32 0, i32* %11, align 8
  %67 = load i32, i32* %12, align 4
  store i32 %67, i32* %61, align 4
  store i32 0, i32* %12, align 4
  br label %68

68:                                               ; preds = %38, %59, %57
  %69 = load i32*, i32** %10, align 8
  %70 = icmp eq i32* %69, null
  %71 = bitcast i32* %69 to i8*
  br i1 %70, label %77, label %72, !prof !2

72:                                               ; preds = %68
  %73 = load i32, i32* %12, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %72
  store i32 0, i32* %12, align 4
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #7
  store i32* null, i32** %10, align 8
  br label %77

77:                                               ; preds = %68, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.6"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %6, align 8
  %8 = icmp ugt %"class.WTF::Vector.6"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::Vector.6"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::Vector.6"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64 %27) #7
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::Vector.6"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #7
  %36 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::Vector.6"* %1 to i64
  %39 = ptrtoint %"class.WTF::Vector.6"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::Vector.6"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64 %55) #7
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::Vector.6"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #7
  %64 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::Vector.6"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::Vector.6"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::Vector.6"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %69, i64 %72
  %74 = bitcast %"class.WTF::Vector.6"* %73 to i8*
  %75 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %69, i64 %72, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %69, i64 %72, i32 0, i32 0, i32 2
  %77 = bitcast %"class.WTF::Vector.6"* %70 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #7
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::Vector.6"* %73 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %70, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %75, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %75, align 4
  store i32 %81, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %70, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %76, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %76, align 4
  store i32 %84, i32* %83, align 4
  %86 = load i32, i32* %3, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %4, %37
  %15 = phi %"class.WTF::Vector.6"* [ %39, %37 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.6"* [ %38, %37 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.6"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.6"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #7
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.6"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  %32 = bitcast i32* %30 to i8*
  br i1 %31, label %37, label %33, !prof !2

33:                                               ; preds = %14
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %33
  store i32 0, i32* %26, align 4
  br label %36

36:                                               ; preds = %35, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #7
  store i32* null, i32** %29, align 8
  br label %37

37:                                               ; preds = %36, %14
  %38 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 1
  %39 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 1
  %40 = icmp eq %"class.WTF::Vector.6"* %39, %10
  br i1 %40, label %41, label %14

41:                                               ; preds = %37, %4
  %42 = bitcast %"class.WTF::Vector.6"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #7
  br label %95

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64 %44) #7
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  %47 = lshr i64 %45, 4
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %50, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %43
  %57 = bitcast %"class.WTF::Vector.6"* %50 to i8*
  br label %90

58:                                               ; preds = %43
  %59 = bitcast i8* %46 to %"class.WTF::Vector.6"*
  br label %60

60:                                               ; preds = %58, %83
  %61 = phi %"class.WTF::Vector.6"* [ %85, %83 ], [ %50, %58 ]
  %62 = phi %"class.WTF::Vector.6"* [ %84, %83 ], [ %59, %58 ]
  %63 = bitcast %"class.WTF::Vector.6"* %62 to i8*
  %64 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %62, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %62, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.6"* %61 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #7
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::Vector.6"* %62 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %64, align 4
  %71 = load i32, i32* %69, align 4
  store i32 %71, i32* %64, align 4
  store i32 %70, i32* %69, align 4
  %72 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %65, align 4
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %65, align 4
  store i32 %73, i32* %72, align 4
  %75 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 0, i32 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  %78 = bitcast i32* %76 to i8*
  br i1 %77, label %83, label %79, !prof !2

79:                                               ; preds = %60
  %80 = icmp eq i32 %73, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %79
  store i32 0, i32* %72, align 4
  br label %82

82:                                               ; preds = %81, %79
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #7
  store i32* null, i32** %75, align 8
  br label %83

83:                                               ; preds = %82, %60
  %84 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %62, i64 1
  %85 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 1
  %86 = icmp eq %"class.WTF::Vector.6"* %85, %54
  br i1 %86, label %87, label %60

87:                                               ; preds = %83
  %88 = bitcast %"class.WTF::Vector"* %0 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %56, %87
  %91 = phi i8* [ %89, %87 ], [ %57, %56 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #7
  %92 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %48, i64* %92 monotonic, align 8
  %93 = trunc i64 %47 to i32
  %94 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %93, i32* %94, align 8
  br label %95

95:                                               ; preds = %90, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS2_IjLj0ENS1_18PartitionAllocatorEEELj0ES3_EEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #5 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #7
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.371* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !2

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #7
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #7
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #7
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #7
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %25
  call void @llvm.trap() #7
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #7
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #7
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #7
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 160
  br label %45

45:                                               ; preds = %41, %58
  %46 = phi i32 [ 0, %41 ], [ %59, %58 ]
  %47 = phi %"class.WTF::Vector.6"* [ %36, %41 ], [ %60, %58 ]
  %48 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector.6"* dereferenceable(16) %47, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #7
  %49 = ptrtoint %"class.v8::Array"* %48 to i64
  %50 = icmp eq %"class.v8::Array"* %48, null
  %51 = select i1 %50, i64 %44, i64 %49
  %52 = inttoptr i64 %51 to %"class.v8::Value"*
  %53 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %46, %"class.v8::Value"* %52) #7
  %54 = trunc i16 %53 to i8
  %55 = icmp eq i8 %54, 0
  %56 = icmp ult i16 %53, 256
  %57 = or i1 %56, %55
  br i1 %57, label %62, label %58, !prof !5

58:                                               ; preds = %45
  %59 = add i32 %46, 1
  %60 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %47, i64 1
  %61 = icmp eq %"class.WTF::Vector.6"* %60, %39
  br i1 %61, label %62, label %45

62:                                               ; preds = %58, %45, %31
  %63 = phi i64 [ %33, %31 ], [ 0, %45 ], [ %33, %58 ]
  %64 = load i8, i8* %5, align 8, !range !4
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %67, align 8
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %70 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %69) #7
  %71 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %68, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %70, %"class.blink::RuntimeCallTimer"** %71, align 8
  store i8 0, i8* %5, align 8
  br label %72

72:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #7
  %73 = inttoptr i64 %63 to %"class.v8::Array"*
  ret %"class.v8::Array"* %73
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS5_5ArrayEEERKT_NS6_INS5_6ObjectEEEPNS5_7IsolateE(%"class.WTF::Vector.6"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #5 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #7
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.371* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !2

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #7
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #7
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #7
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #7
  %27 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %25
  call void @llvm.trap() #7
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #7
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #7
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #7
  %35 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %63, label %41

41:                                               ; preds = %31
  %42 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %43 = add i64 %42, 160
  %44 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  br label %45

45:                                               ; preds = %41, %59
  %46 = phi i32 [ 0, %41 ], [ %60, %59 ]
  %47 = phi i32* [ %36, %41 ], [ %61, %59 ]
  %48 = load i32, i32* %47, align 4
  %49 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %2, i32 %48) #7
  %50 = ptrtoint %"class.v8::Integer"* %49 to i64
  %51 = icmp eq %"class.v8::Integer"* %49, null
  %52 = select i1 %51, i64 %43, i64 %50
  %53 = inttoptr i64 %52 to %"class.v8::Value"*
  %54 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %44, %"class.v8::Context"* %34, i32 %46, %"class.v8::Value"* %53) #7
  %55 = trunc i16 %54 to i8
  %56 = icmp eq i8 %55, 0
  %57 = icmp ult i16 %54, 256
  %58 = or i1 %57, %56
  br i1 %58, label %63, label %59, !prof !5

59:                                               ; preds = %45
  %60 = add i32 %46, 1
  %61 = getelementptr inbounds i32, i32* %47, i64 1
  %62 = icmp eq i32* %61, %39
  br i1 %62, label %63, label %45

63:                                               ; preds = %59, %45, %31
  %64 = phi i64 [ %33, %31 ], [ 0, %45 ], [ %33, %59 ]
  %65 = load i8, i8* %5, align 8, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %68, align 8
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %70) #7
  %72 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %69, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %71, %"class.blink::RuntimeCallTimer"** %72, align 8
  store i8 0, i8* %5, align 8
  br label %73

73:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #7
  %74 = inttoptr i64 %64 to %"class.v8::Array"*
  ret %"class.v8::Array"* %74
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2002, i32 2000}
