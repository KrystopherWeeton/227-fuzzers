; ModuleID = '../../content/browser/renderer_host/input/touch_timeout_handler.cc'
source_filename = "../../content/browser/renderer_host/input/touch_timeout_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.content::TouchTimeoutHandler" = type <{ %"class.content::PassthroughTouchEventQueue"*, %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.content::EventWithLatencyInfo", %"class.content::TimeoutMonitor", i8, i8, i8, i8, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.content::EventWithLatencyInfo" = type { %"class.blink::WebTouchEvent", %"class.ui::LatencyInfo" }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair"* }
%"class.content::TimeoutMonitor" = type { %"class.base::RepeatingCallback", %"class.base::TimeTicks", %"class.base::OneShotTimer" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.24, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.27", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.content::PassthroughTouchEventQueue" = type { %"class.content::PassthroughTouchEventQueueClient"*, i8, i8, i8, %"class.std::__1::unique_ptr", i8, i8, %"class.std::__1::unique_ptr.1", %"class.std::__1::set", i8, %"class.std::__1::basic_string" }
%"class.content::PassthroughTouchEventQueueClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::TouchTimeoutHandler"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::WebTouchEvent"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.38", [4 x i8] }>
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.43", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.45", i64, i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.56" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.11" }

$_ZN20trace_event_internal13AddTraceEventIRA12_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink13WebTouchEventC2Ev = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [18 x i8] c"TouchEventTimeout\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"CancelEvent\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Event.Touch.TimedOutOnMobileSite\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"Event.Touch.TimedOutOnDesktopSite\00", align 1
@_ZTVN5blink13WebTouchEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN7content19TouchTimeoutHandlerC1EPNS_26PassthroughTouchEventQueueEN4base9TimeDeltaES4_ = hidden unnamed_addr alias void (%"class.content::TouchTimeoutHandler"*, %"class.content::PassthroughTouchEventQueue"*, i64, i64), void (%"class.content::TouchTimeoutHandler"*, %"class.content::PassthroughTouchEventQueue"*, i64, i64)* @_ZN7content19TouchTimeoutHandlerC2EPNS_26PassthroughTouchEventQueueEN4base9TimeDeltaES4_
@_ZN7content19TouchTimeoutHandlerD1Ev = hidden unnamed_addr alias void (%"class.content::TouchTimeoutHandler"*), void (%"class.content::TouchTimeoutHandler"*)* @_ZN7content19TouchTimeoutHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandlerC2EPNS_26PassthroughTouchEventQueueEN4base9TimeDeltaES4_(%"class.content::TouchTimeoutHandler"*, %"class.content::PassthroughTouchEventQueue"*, i64, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 0
  store %"class.content::PassthroughTouchEventQueue"* %1, %"class.content::PassthroughTouchEventQueue"** %6, align 8
  %7 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 2, i32 0
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 3
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN5blink13WebTouchEventC2Ev(%"class.blink::WebTouchEvent"* %11) #10
  %12 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 1
  tail call void @_ZN2ui11LatencyInfoC1Ev(%"class.ui::LatencyInfo"* %12) #10
  %13 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 7
  %14 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %16 = tail call i8* @_Znwm(i64 56) #11, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::TouchTimeoutHandler"*)* @_ZN7content19TouchTimeoutHandler9OnTimeOutEv to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8, !noalias !2
  %22 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %16, i8** %22, align 8, !alias.scope !2
  call void @_ZN7content14TimeoutMonitorC1ERKN4base17RepeatingCallbackIFvvEEE(%"class.content::TimeoutMonitor"* %13, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %5) #10
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %24 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 8
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 9
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  store i8 0, i8* %27, align 1
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler9OnTimeOutEv(%"class.content::TouchTimeoutHandler"*) #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 2, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 2
  %7 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 1, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %12 = inttoptr i64 %11 to %"class.base::HistogramBase"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %16 = ptrtoint %"class.base::HistogramBase"* %15 to i64
  store atomic i64 %16, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %24

17:                                               ; preds = %6
  %18 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %24

24:                                               ; preds = %17, %21, %10, %14
  %25 = phi %"class.base::HistogramBase"* [ %12, %10 ], [ %15, %14 ], [ %19, %17 ], [ %22, %21 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %25, i1 zeroext true) #10
  br label %26

26:                                               ; preds = %24, %1
  %27 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %28 = and i8 %27, 25
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %37, label %30, !prof !8

30:                                               ; preds = %26
  %31 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %32 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %33 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %35 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %35, i64* %34, align 8
  %36 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 83, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %31, i64 0, i32 %32, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  br label %37

37:                                               ; preds = %26, %30
  %38 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  store i32 1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 0
  %40 = load %"class.content::PassthroughTouchEventQueue"*, %"class.content::PassthroughTouchEventQueue"** %39, align 8
  call void @_ZN7content26PassthroughTouchEventQueue10FlushQueueEv(%"class.content::PassthroughTouchEventQueue"* %40) #10
  ret void
}

declare void @_ZN7content14TimeoutMonitorC1ERKN4base17RepeatingCallbackIFvvEEE(%"class.content::TimeoutMonitor"*, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content19TouchTimeoutHandler19SetUseMobileTimeoutEb(%"class.content::TouchTimeoutHandler"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 3
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandlerD2Ev(%"class.content::TouchTimeoutHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 2, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 1, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %23

16:                                               ; preds = %5
  %17 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %18 = inttoptr i64 %17 to %"class.base::HistogramBase"*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %22 = ptrtoint %"class.base::HistogramBase"* %21 to i64
  store atomic i64 %22, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %23

23:                                               ; preds = %16, %20, %9, %13
  %24 = phi %"class.base::HistogramBase"* [ %11, %9 ], [ %14, %13 ], [ %18, %16 ], [ %21, %20 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %24, i1 zeroext false) #10
  br label %25

25:                                               ; preds = %23, %1
  %26 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 7
  tail call void @_ZN7content14TimeoutMonitorD1Ev(%"class.content::TimeoutMonitor"* %26) #10
  %27 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %27) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEb(%"class.content::TouchTimeoutHandler"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 2, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  store i8 0, i8* %3, align 2
  %7 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 1, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %12 = inttoptr i64 %11 to %"class.base::HistogramBase"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %16 = ptrtoint %"class.base::HistogramBase"* %15 to i64
  store atomic i64 %16, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %24

17:                                               ; preds = %6
  %18 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %24

24:                                               ; preds = %21, %17, %14, %10
  %25 = phi %"class.base::HistogramBase"* [ %12, %10 ], [ %15, %14 ], [ %19, %17 ], [ %22, %21 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %25, i1 zeroext %1) #10
  br label %26

26:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content14TimeoutMonitorD1Ev(%"class.content::TimeoutMonitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler16StartIfNecessaryERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::TouchTimeoutHandler"*, %"class.content::EventWithLatencyInfo"* dereferenceable(1336)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %77

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 8
  %8 = load i8, i8* %7, align 8, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %77, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !7
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 1
  %16 = select i1 %13, %"class.base::TimeDelta"* %15, %"class.base::TimeDelta"* %14
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %77, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, -2
  %24 = icmp eq i32 %23, 28
  %25 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  %28 = and i1 %24, %27
  br i1 %28, label %29, label %77

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %30) #10
  br i1 %31, label %32, label %60

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  %34 = load i8, i8* %33, align 2, !range !7
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %56, label %36

36:                                               ; preds = %32
  store i8 0, i8* %33, align 2
  %37 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  %38 = load i8, i8* %37, align 1, !range !7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %42 = inttoptr i64 %41 to %"class.base::HistogramBase"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %40
  %45 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %46 = ptrtoint %"class.base::HistogramBase"* %45 to i64
  store atomic i64 %46, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %54

47:                                               ; preds = %36
  %48 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %49 = inttoptr i64 %48 to %"class.base::HistogramBase"*
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %53 = ptrtoint %"class.base::HistogramBase"* %52 to i64
  store atomic i64 %53, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %54

54:                                               ; preds = %47, %51, %40, %44
  %55 = phi %"class.base::HistogramBase"* [ %42, %40 ], [ %45, %44 ], [ %49, %47 ], [ %52, %51 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %55, i1 zeroext false) #10
  br label %56

56:                                               ; preds = %54, %32
  store i8 1, i8* %33, align 2
  %57 = load i8, i8* %11, align 8, !range !7
  %58 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  store i8 %57, i8* %58, align 1
  %59 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 9
  store i8 1, i8* %59, align 1
  br label %64

60:                                               ; preds = %29
  %61 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 9
  %62 = load i8, i8* %61, align 1, !range !7
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %56, %60
  %65 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast float* %65 to i8*
  %68 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 32, i1 false) #10
  %69 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 0, i32 1
  %70 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %71 = bitcast i32* %69 to i8*
  %72 = bitcast i32* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 1232, i1 false) #10
  %73 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 1
  %74 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 1
  %75 = tail call dereferenceable(64) %"class.ui::LatencyInfo"* @_ZN2ui11LatencyInfoaSERKS0_(%"class.ui::LatencyInfo"* %73, %"class.ui::LatencyInfo"* dereferenceable(64) %74) #10
  %76 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 7
  tail call void @_ZN7content14TimeoutMonitor7RestartEN4base9TimeDeltaE(%"class.content::TimeoutMonitor"* %76, i64 %18) #10
  br label %77

77:                                               ; preds = %64, %10, %20, %60, %6, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content19TouchTimeoutHandler15GetTimeoutDelayEv(%"class.content::TouchTimeoutHandler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 1
  %7 = select i1 %4, %"class.base::TimeDelta"* %6, %"class.base::TimeDelta"* %5
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  ret i64 %9
}

declare zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler22LogSequenceStartForUMAEv(%"class.content::TouchTimeoutHandler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 2, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 1, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %23

16:                                               ; preds = %5
  %17 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %18 = inttoptr i64 %17 to %"class.base::HistogramBase"*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %22 = ptrtoint %"class.base::HistogramBase"* %21 to i64
  store atomic i64 %22, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %23

23:                                               ; preds = %16, %20, %9, %13
  %24 = phi %"class.base::HistogramBase"* [ %11, %9 ], [ %14, %13 ], [ %18, %16 ], [ %21, %20 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %24, i1 zeroext false) #10
  br label %25

25:                                               ; preds = %23, %1
  store i8 1, i8* %2, align 2
  %26 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !7
  %28 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  store i8 %27, i8* %28, align 1
  ret void
}

declare void @_ZN7content14TimeoutMonitor7RestartEN4base9TimeDeltaE(%"class.content::TimeoutMonitor"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content19TouchTimeoutHandler17ConfirmTouchEventEjN5blink5mojom21InputEventResultStateEb(%"class.content::TouchTimeoutHandler"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %63

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %63 [
    i32 0, label %15
    i32 1, label %22
    i32 2, label %51
  ]

15:                                               ; preds = %12
  %16 = icmp eq i32 %2, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 9
  store i8 0, i8* %18, align 1
  br label %19

19:                                               ; preds = %17, %15
  br i1 %3, label %20, label %63

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 7
  tail call void @_ZN7content14TimeoutMonitor4StopEv(%"class.content::TimeoutMonitor"* %21) #10
  br label %63

22:                                               ; preds = %12
  %23 = icmp eq i32 %2, 3
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 0
  %26 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %25) #10
  br i1 %26, label %37, label %27

27:                                               ; preds = %24, %22
  %28 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %29 = and i8 %28, 25
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31, !prof !8

31:                                               ; preds = %27
  %32 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %33 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRA12_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext 84, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %32, i32 2048, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), [12 x i8]* nonnull dereferenceable(12) @.str.2) #10
  br label %34

34:                                               ; preds = %27, %31
  store i32 2, i32* %13, align 4
  %35 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 0
  %36 = load %"class.content::PassthroughTouchEventQueue"*, %"class.content::PassthroughTouchEventQueue"** %35, align 8
  tail call void @_ZN7content26PassthroughTouchEventQueue33SendTouchCancelEventForTouchEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::PassthroughTouchEventQueue"* %36, %"class.content::EventWithLatencyInfo"* dereferenceable(1336) %7) #10
  br label %63

37:                                               ; preds = %24
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %39 = and i8 %38, 25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %48, label %41, !prof !8

41:                                               ; preds = %37
  %42 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %43 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %44 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %46 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %46, i64* %45, align 8
  %47 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 70, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %42, i64 0, i32 %43, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %48

48:                                               ; preds = %37, %41
  store i32 0, i32* %13, align 4
  %49 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 0
  %50 = load %"class.content::PassthroughTouchEventQueue"*, %"class.content::PassthroughTouchEventQueue"** %49, align 8
  call void @_ZN7content26PassthroughTouchEventQueue25UpdateTouchConsumerStatesERKN5blink13WebTouchEventENS1_5mojom21InputEventResultStateE(%"class.content::PassthroughTouchEventQueue"* %50, %"class.blink::WebTouchEvent"* dereferenceable(1272) %8, i32 3) #10
  br label %63

51:                                               ; preds = %12
  %52 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %53 = and i8 %52, 25
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %62, label %55, !prof !8

55:                                               ; preds = %51
  %56 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %57 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %58 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  %59 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %60 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %60, i64* %59, align 8
  %61 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 70, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %56, i64 0, i32 %57, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %62

62:                                               ; preds = %51, %55
  store i32 0, i32* %13, align 4
  br label %63

63:                                               ; preds = %12, %34, %48, %19, %20, %4, %62
  %64 = phi i1 [ true, %62 ], [ false, %4 ], [ false, %20 ], [ false, %19 ], [ true, %48 ], [ true, %34 ], [ false, %12 ]
  ret i1 %64
}

declare void @_ZN7content14TimeoutMonitor4StopEv(%"class.content::TimeoutMonitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content19TouchTimeoutHandler31AckedTimeoutEventRequiresCancelEN5blink5mojom21InputEventResultStateE(%"class.content::TouchTimeoutHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 3
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 6, i32 0
  %6 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %5) #10
  %7 = xor i1 %6, true
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i1 [ %7, %4 ], [ true, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler18SetPendingAckStateENS0_15PendingAckStateE(%"class.content::TouchTimeoutHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  switch i32 %1, label %34 [
    i32 1, label %5
    i32 2, label %16
    i32 0, label %23
  ]

5:                                                ; preds = %2
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %34, label %9, !prof !8

9:                                                ; preds = %5
  %10 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %12 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 83, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %10, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %34

16:                                               ; preds = %2
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %34, label %20, !prof !8

20:                                               ; preds = %16
  %21 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %22 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRA12_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext 84, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %21, i32 2048, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), [12 x i8]* nonnull dereferenceable(12) @.str.2)
  br label %34

23:                                               ; preds = %2
  %24 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %25 = and i8 %24, 25
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %34, label %27, !prof !8

27:                                               ; preds = %23
  %28 = ptrtoint %"class.content::TouchTimeoutHandler"* %0 to i64
  %29 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %30 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %32 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %32, i64* %31, align 8
  %33 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 70, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null, i64 %28, i64 0, i32 %29, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br label %34

34:                                               ; preds = %27, %23, %20, %16, %9, %5, %2
  %35 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  store i32 %1, i32* %35, align 4
  ret void
}

declare void @_ZN7content26PassthroughTouchEventQueue33SendTouchCancelEventForTouchEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::PassthroughTouchEventQueue"*, %"class.content::EventWithLatencyInfo"* dereferenceable(1336)) local_unnamed_addr #2

declare void @_ZN7content26PassthroughTouchEventQueue25UpdateTouchConsumerStatesERKN5blink13WebTouchEventENS1_5mojom21InputEventResultStateE(%"class.content::PassthroughTouchEventQueue"*, %"class.blink::WebTouchEvent"* dereferenceable(1272), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content19TouchTimeoutHandler11FilterEventERKN5blink13WebTouchEventE(%"class.content::TouchTimeoutHandler"* nocapture, %"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #10
  br i1 %7, label %8, label %55

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 2, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %8
  store i8 0, i8* %9, align 2
  %13 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  %14 = load i8, i8* %13, align 1, !range !7
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %18 = inttoptr i64 %17 to %"class.base::HistogramBase"*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %16
  %21 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %22 = ptrtoint %"class.base::HistogramBase"* %21 to i64
  store atomic i64 %22, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %30

23:                                               ; preds = %12
  %24 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.base::HistogramBase"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %29 = ptrtoint %"class.base::HistogramBase"* %28 to i64
  store atomic i64 %29, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %30

30:                                               ; preds = %23, %27, %16, %20
  %31 = phi %"class.base::HistogramBase"* [ %18, %16 ], [ %21, %20 ], [ %25, %23 ], [ %28, %27 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %31, i1 zeroext false) #10
  br label %32

32:                                               ; preds = %30, %8
  %33 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 8, !range !7
  %35 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 11
  store i8 %34, i8* %35, align 1
  store i8 0, i8* %9, align 2
  %36 = icmp eq i8 %34, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %43 = ptrtoint %"class.base::HistogramBase"* %42 to i64
  store atomic i64 %43, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %44

44:                                               ; preds = %41, %37
  %45 = phi %"class.base::HistogramBase"* [ %39, %37 ], [ %42, %41 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %45, i1 zeroext true) #10
  br label %55

46:                                               ; preds = %32
  %47 = load atomic i64, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %48 = inttoptr i64 %47 to %"class.base::HistogramBase"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 1) #10
  %52 = ptrtoint %"class.base::HistogramBase"* %51 to i64
  store atomic i64 %52, i64* @_ZZN7content19TouchTimeoutHandler31LogSequenceEndForUMAIfNecessaryEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %53

53:                                               ; preds = %50, %46
  %54 = phi %"class.base::HistogramBase"* [ %48, %46 ], [ %51, %50 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %54, i1 zeroext true) #10
  br label %55

55:                                               ; preds = %2, %53, %44, %6
  %56 = phi i1 [ false, %2 ], [ true, %6 ], [ true, %44 ], [ true, %53 ]
  ret i1 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content19TouchTimeoutHandler15HasTimeoutEventEv(%"class.content::TouchTimeoutHandler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler18StopTimeoutMonitorEv(%"class.content::TouchTimeoutHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 7
  tail call void @_ZN7content14TimeoutMonitor4StopEv(%"class.content::TimeoutMonitor"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19TouchTimeoutHandler10SetEnabledEb(%"class.content::TouchTimeoutHandler"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 8
  br i1 %1, label %16, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 9
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 7
  %13 = tail call zeroext i1 @_ZNK7content14TimeoutMonitor9IsRunningEv(%"class.content::TimeoutMonitor"* %12) #10
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %0, i64 0, i32 5
  store i32 0, i32* %15, align 4
  tail call void @_ZN7content14TimeoutMonitor4StopEv(%"class.content::TimeoutMonitor"* %12) #10
  br label %16

16:                                               ; preds = %8, %2, %14, %10
  ret void
}

declare void @_ZN7content26PassthroughTouchEventQueue10FlushQueueEv(%"class.content::PassthroughTouchEventQueue"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA12_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [12 x i8]* dereferenceable(12)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 6, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 0
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %20, i8** %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #3

declare dereferenceable(64) %"class.ui::LatencyInfo"* @_ZN2ui11LatencyInfoaSERKS0_(%"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZNK7content14TimeoutMonitor9IsRunningEv(%"class.content::TimeoutMonitor"*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.content::TouchTimeoutHandler"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.content::TouchTimeoutHandler"*)**
  %21 = load void (%"class.content::TouchTimeoutHandler"*)*, void (%"class.content::TouchTimeoutHandler"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.content::TouchTimeoutHandler"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.content::TouchTimeoutHandler"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.content::TouchTimeoutHandler"* %12) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebTouchEventC2Ev(%"class.blink::WebTouchEvent"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 2
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false) #10
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 6
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 7
  %14 = bitcast i32* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 13, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 11
  %16 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %17 = bitcast %"class.gfx::PointF"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %16, align 4
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 2
  %19 = bitcast i32* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 6
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 7
  %22 = bitcast i32* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 13, i1 false) #10
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 11
  %24 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %25 = bitcast %"class.gfx::PointF"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %24, align 4
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 2
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 16, i1 false) #10
  %28 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 6
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 7
  %30 = bitcast i32* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 13, i1 false) #10
  %31 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 11
  %32 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %32, align 4
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 2
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 16, i1 false) #10
  %36 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 6
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 7
  %38 = bitcast i32* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 13, i1 false) #10
  %39 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 11
  %40 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 1
  %41 = bitcast %"class.gfx::PointF"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 2
  %43 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 16, i1 false) #10
  %44 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 6
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 7
  %46 = bitcast i32* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 13, i1 false) #10
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 11
  %48 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 1
  %49 = bitcast %"class.gfx::PointF"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %48, align 4
  %50 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 2
  %51 = bitcast i32* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 16, i1 false) #10
  %52 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 6
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 7
  %54 = bitcast i32* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 13, i1 false) #10
  %55 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 11
  %56 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 1
  %57 = bitcast %"class.gfx::PointF"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %56, align 4
  %58 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 2
  %59 = bitcast i32* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #10
  %60 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 6
  store i32 -1, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 7
  %62 = bitcast i32* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 13, i1 false) #10
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 11
  %64 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 1
  %65 = bitcast %"class.gfx::PointF"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %64, align 4
  %66 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 2
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 16, i1 false) #10
  %68 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 6
  store i32 -1, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 7
  %70 = bitcast i32* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 13, i1 false) #10
  %71 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 11
  %72 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 1
  %73 = bitcast %"class.gfx::PointF"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %72, align 4
  %74 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 2
  %75 = bitcast i32* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 16, i1 false) #10
  %76 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 6
  store i32 -1, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 7
  %78 = bitcast i32* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 13, i1 false) #10
  %79 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 11
  %80 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 1
  %81 = bitcast %"class.gfx::PointF"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %80, align 4
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 2
  %83 = bitcast i32* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false) #10
  %84 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 6
  store i32 -1, i32* %84, align 4
  %85 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 7
  %86 = bitcast i32* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 13, i1 false) #10
  %87 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 11
  %88 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 1
  %89 = bitcast %"class.gfx::PointF"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 2
  %91 = bitcast i32* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 16, i1 false) #10
  %92 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 6
  store i32 -1, i32* %92, align 4
  %93 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 7
  %94 = bitcast i32* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 13, i1 false) #10
  %95 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 11
  %96 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 1
  %97 = bitcast %"class.gfx::PointF"* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %96, align 4
  %98 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 2
  %99 = bitcast i32* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 16, i1 false) #10
  %100 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 6
  store i32 -1, i32* %100, align 4
  %101 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 7
  %102 = bitcast i32* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 13, i1 false) #10
  %103 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 11
  %104 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 1
  %105 = bitcast %"class.gfx::PointF"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %104, align 4
  %106 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 2
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 16, i1 false) #10
  %108 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 6
  store i32 -1, i32* %108, align 4
  %109 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 7
  %110 = bitcast i32* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 13, i1 false) #10
  %111 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 11
  %112 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 1
  %113 = bitcast %"class.gfx::PointF"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %112, align 4
  %114 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 2
  %115 = bitcast i32* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %115, i8 0, i64 16, i1 false) #10
  %116 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 6
  store i32 -1, i32* %116, align 4
  %117 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 7
  %118 = bitcast i32* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 13, i1 false) #10
  %119 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 11
  %120 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 1
  %121 = bitcast %"class.gfx::PointF"* %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %120, align 4
  %122 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 2
  %123 = bitcast i32* %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 16, i1 false) #10
  %124 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 6
  store i32 -1, i32* %124, align 4
  %125 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 7
  %126 = bitcast i32* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 13, i1 false) #10
  %127 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 11
  %128 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 1
  %129 = bitcast %"class.gfx::PointF"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %128, align 4
  %130 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 2
  %131 = bitcast i32* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %131, i8 0, i64 16, i1 false) #10
  %132 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 6
  store i32 -1, i32* %132, align 4
  %133 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 7
  %134 = bitcast i32* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 13, i1 false) #10
  %135 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 11
  %136 = bitcast %"class.gfx::PointF"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 32, i1 false) #10
  %137 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  %138 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 0, i32* %138, align 4
  %139 = bitcast i32* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %139, i8 0, i64 7, i1 false)
  ret void
}

declare void @_ZN2ui11LatencyInfoC1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7content19TouchTimeoutHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN7content19TouchTimeoutHandlerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN7content19TouchTimeoutHandlerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 2000, i32 1}
