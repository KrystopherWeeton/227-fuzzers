; ModuleID = '../../cc/debug/rendering_stats.cc'
source_filename = "../../cc/debug/rendering_stats.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::TimeDelta"* }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

$_ZNSt3__16vectorIN4base9TimeDeltaENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_ = comdat any

@.str = private unnamed_addr constant [12 x i8] c"frame_count\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"visible_content_area\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"approximated_visible_content_area\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"checkerboarded_visible_content_area\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"checkerboarded_no_recording_content_area\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"checkerboarded_needs_raster_content_area\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"draw_duration_ms\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"draw_duration_estimate_ms\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"begin_main_frame_to_commit_duration_ms\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"commit_to_activate_duration_ms\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"commit_to_activate_duration_estimate_ms\00", align 1

@_ZN2cc14RenderingStats13TimeDeltaListC1Ev = hidden unnamed_addr alias void (%"class.cc::RenderingStats::TimeDeltaList"*), void (%"class.cc::RenderingStats::TimeDeltaList"*)* @_ZN2cc14RenderingStats13TimeDeltaListC2Ev
@_ZN2cc14RenderingStats13TimeDeltaListC1ERKS1_ = hidden unnamed_addr alias void (%"class.cc::RenderingStats::TimeDeltaList"*, %"class.cc::RenderingStats::TimeDeltaList"*), void (%"class.cc::RenderingStats::TimeDeltaList"*, %"class.cc::RenderingStats::TimeDeltaList"*)* @_ZN2cc14RenderingStats13TimeDeltaListC2ERKS1_
@_ZN2cc14RenderingStats13TimeDeltaListD1Ev = hidden unnamed_addr alias void (%"class.cc::RenderingStats::TimeDeltaList"*), void (%"class.cc::RenderingStats::TimeDeltaList"*)* @_ZN2cc14RenderingStats13TimeDeltaListD2Ev
@_ZN2cc14RenderingStatsC1Ev = hidden unnamed_addr alias void (%"struct.cc::RenderingStats"*), void (%"struct.cc::RenderingStats"*)* @_ZN2cc14RenderingStatsC2Ev
@_ZN2cc14RenderingStatsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::RenderingStats"*, %"struct.cc::RenderingStats"*), void (%"struct.cc::RenderingStats"*, %"struct.cc::RenderingStats"*)* @_ZN2cc14RenderingStatsC2ERKS0_
@_ZN2cc14RenderingStatsD1Ev = hidden unnamed_addr alias void (%"struct.cc::RenderingStats"*), void (%"struct.cc::RenderingStats"*)* @_ZN2cc14RenderingStatsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStats13TimeDeltaListC2Ev(%"class.cc::RenderingStats::TimeDeltaList"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStats13TimeDeltaListC2ERKS1_(%"class.cc::RenderingStats::TimeDeltaList"*, %"class.cc::RenderingStats::TimeDeltaList"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  %4 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.base::TimeDelta"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 2305843009213693951
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #9
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #10
  %18 = bitcast i8* %17 to %"class.base::TimeDelta"*
  %19 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.base::TimeDelta"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %18, i64 %10
  %23 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::TimeDelta"* %22, %"class.base::TimeDelta"** %23, align 8
  %24 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast %"class.base::TimeDelta"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint %"class.base::TimeDelta"* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 3
  %34 = bitcast %"class.base::TimeDelta"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %34, i64 %30, i1 false) #8
  %35 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %18, i64 %33
  %36 = ptrtoint %"class.base::TimeDelta"* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStats13TimeDeltaListD2Ev(%"class.cc::RenderingStats::TimeDeltaList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %2, align 8
  %4 = icmp eq %"class.base::TimeDelta"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.base::TimeDelta"* %3 to i64
  %7 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.base::TimeDelta"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.base::TimeDelta"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStats13TimeDeltaList6AppendEN4base9TimeDeltaE(%"class.cc::RenderingStats::TimeDeltaList"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %5, align 8
  %7 = icmp eq %"class.base::TimeDelta"* %4, %6
  %8 = ptrtoint %"class.base::TimeDelta"* %6 to i64
  br i1 %7, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 1
  %12 = ptrtoint %"class.base::TimeDelta"* %11 to i64
  %13 = bitcast %"class.base::TimeDelta"** %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %71

14:                                               ; preds = %2
  %15 = ptrtoint %"class.base::TimeDelta"* %4 to i64
  %16 = bitcast %"class.base::TimeDelta"** %3 to i64*
  %17 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 2305843009213693951
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #9
  unreachable

25:                                               ; preds = %14
  %26 = bitcast %"class.base::TimeDelta"** %5 to i64*
  %27 = sub i64 %8, %18
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 1152921504606846975
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 2
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 2305843009213693951
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #9
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 2305843009213693951, %25 ]
  %40 = shl i64 %39, 3
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to %"class.base::TimeDelta"*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi %"class.base::TimeDelta"* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %45, i64 %20
  %47 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %45, i64 %44
  %48 = ptrtoint %"class.base::TimeDelta"* %47 to i64
  %49 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %46, i64 0, i32 0
  store i64 %1, i64* %49, align 8
  %50 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %46, i64 1
  %51 = ptrtoint %"class.base::TimeDelta"* %50 to i64
  %52 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %52, align 8
  %54 = load i64, i64* %16, align 8
  %55 = ptrtoint %"class.base::TimeDelta"* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = sub nsw i64 0, %57
  %59 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %46, i64 %58
  %60 = ptrtoint %"class.base::TimeDelta"* %59 to i64
  %61 = icmp sgt i64 %56, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %43
  %63 = bitcast %"class.base::TimeDelta"* %59 to i8*
  %64 = bitcast %"class.base::TimeDelta"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %56, i1 false) #8
  %65 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %52, align 8
  br label %66

66:                                               ; preds = %62, %43
  %67 = phi %"class.base::TimeDelta"* [ %53, %43 ], [ %65, %62 ]
  store i64 %60, i64* %17, align 8
  store i64 %51, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %68 = icmp eq %"class.base::TimeDelta"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.base::TimeDelta"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %9, %66, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc14RenderingStats13TimeDeltaList16AddToTracedValueEPKcPN4base11trace_event11TracedValueE(%"class.cc::RenderingStats::TimeDeltaList"* nocapture readonly, i8*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %2, i8* %1) #8
  %4 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %6, align 8
  %8 = icmp eq %"class.base::TimeDelta"* %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %3
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %2) #8
  ret void

10:                                               ; preds = %3, %10
  %11 = phi %"class.base::TimeDelta"* [ %13, %10 ], [ %5, %3 ]
  %12 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %11) #8
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %2, double %12) #8
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 1
  %14 = icmp eq %"class.base::TimeDelta"* %13, %7
  br i1 %14, label %9, label %10
}

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"*, double) local_unnamed_addr #1

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStats13TimeDeltaList3AddERKS1_(%"class.cc::RenderingStats::TimeDeltaList"*, %"class.cc::RenderingStats::TimeDeltaList"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %8, align 8
  %10 = tail call %"class.base::TimeDelta"* @_ZNSt3__16vectorIN4base9TimeDeltaENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector"* %3, %"class.base::TimeDelta"* %5, %"class.base::TimeDelta"* %7, %"class.base::TimeDelta"* %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::TimeDelta"* @_ZNSt3__16vectorIN4base9TimeDeltaENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector"*, %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.base::TimeDelta"*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.base::TimeDelta"* %2 to i8*
  %6 = bitcast %"class.base::TimeDelta"* %1 to i8*
  %7 = ptrtoint %"class.base::TimeDelta"* %1 to i64
  %8 = ptrtoint %"class.base::TimeDelta"* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.base::TimeDelta"* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %720

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::TimeDelta"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %18, align 8
  %20 = ptrtoint %"class.base::TimeDelta"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.base::TimeDelta"** %18 to i64*
  br i1 %23, label %345, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %200

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %27
  %31 = icmp eq %"class.base::TimeDelta"* %30, %3
  br i1 %31, label %195, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 %33, i32 0
  %35 = ptrtoint i64* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 %41, i32 0
  %43 = ptrtoint i64* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %49
  %51 = icmp ult %"class.base::TimeDelta"* %19, %50
  %52 = icmp ult %"class.base::TimeDelta"* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %55
  %57 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %30, i64 %66
  %69 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %66, i32 0
  %70 = bitcast %"class.base::TimeDelta"* %68 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !2
  %72 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %68, i64 2
  %73 = bitcast %"class.base::TimeDelta"* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !2
  %75 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !5, !noalias !2
  %76 = getelementptr i64, i64* %69, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %30, i64 %78
  %80 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %78, i32 0
  %81 = bitcast %"class.base::TimeDelta"* %79 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !2
  %83 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %79, i64 2
  %84 = bitcast %"class.base::TimeDelta"* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !2
  %86 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !5, !noalias !2
  %87 = getelementptr i64, i64* %80, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %30, i64 %89
  %91 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %89, i32 0
  %92 = bitcast %"class.base::TimeDelta"* %90 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !2
  %94 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %90, i64 2
  %95 = bitcast %"class.base::TimeDelta"* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !2
  %97 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !5, !noalias !2
  %98 = getelementptr i64, i64* %91, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %30, i64 %100
  %102 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %100, i32 0
  %103 = bitcast %"class.base::TimeDelta"* %101 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !2
  %105 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %101, i64 2
  %106 = bitcast %"class.base::TimeDelta"* %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !2
  %108 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !5, !noalias !2
  %109 = getelementptr i64, i64* %102, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %30, i64 %118
  %121 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %118, i32 0
  %122 = bitcast %"class.base::TimeDelta"* %120 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !2
  %124 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %120, i64 2
  %125 = bitcast %"class.base::TimeDelta"* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !2
  %127 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !5, !noalias !2
  %128 = getelementptr i64, i64* %121, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %192, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.base::TimeDelta"* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.base::TimeDelta"* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.base::TimeDelta"* %137 to i64
  %139 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 -1, i32 0
  %140 = ptrtoint i64* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.base::TimeDelta"* [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.base::TimeDelta"* [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %148, i64 0, i32 0
  %151 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %147, i64 0, i32 0
  %152 = load i64, i64* %150, align 8
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %148, i64 1
  %154 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !11

157:                                              ; preds = %146, %135
  %158 = phi %"class.base::TimeDelta"* [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.base::TimeDelta"* [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.base::TimeDelta"* [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %192, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.base::TimeDelta"* [ %190, %162 ], [ %159, %157 ]
  %164 = phi %"class.base::TimeDelta"* [ %189, %162 ], [ %160, %157 ]
  %165 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 0, i32 0
  %166 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 0, i32 0
  %167 = load i64, i64* %165, align 8
  store i64 %167, i64* %166, align 8
  %168 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 1, i32 0
  %169 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 1, i32 0
  %170 = load i64, i64* %168, align 8
  store i64 %170, i64* %169, align 8
  %171 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 2, i32 0
  %172 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 2, i32 0
  %173 = load i64, i64* %171, align 8
  store i64 %173, i64* %172, align 8
  %174 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 3, i32 0
  %175 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 3, i32 0
  %176 = load i64, i64* %174, align 8
  store i64 %176, i64* %175, align 8
  %177 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 4, i32 0
  %178 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 4, i32 0
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %178, align 8
  %180 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 5, i32 0
  %181 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 5, i32 0
  %182 = load i64, i64* %180, align 8
  store i64 %182, i64* %181, align 8
  %183 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 6, i32 0
  %184 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 6, i32 0
  %185 = load i64, i64* %183, align 8
  store i64 %185, i64* %184, align 8
  %186 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 7, i32 0
  %187 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 7, i32 0
  %188 = load i64, i64* %186, align 8
  store i64 %188, i64* %187, align 8
  %189 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %164, i64 8
  %190 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %163, i64 8
  %191 = icmp eq %"class.base::TimeDelta"* %189, %3
  br i1 %191, label %192, label %162, !llvm.loop !12

192:                                              ; preds = %157, %162, %133
  %193 = phi %"class.base::TimeDelta"* [ %56, %133 ], [ %158, %157 ], [ %190, %162 ]
  %194 = ptrtoint %"class.base::TimeDelta"* %193 to i64
  br label %195

195:                                              ; preds = %192, %29
  %196 = phi i64 [ %20, %29 ], [ %194, %192 ]
  store i64 %196, i64* %24, align 8
  %197 = icmp sgt i64 %26, 0
  br i1 %197, label %198, label %720

198:                                              ; preds = %195
  %199 = inttoptr i64 %196 to %"class.base::TimeDelta"*
  br label %200

200:                                              ; preds = %198, %25
  %201 = phi i64 [ %196, %198 ], [ %20, %25 ]
  %202 = phi %"class.base::TimeDelta"* [ %199, %198 ], [ %19, %25 ]
  %203 = phi %"class.base::TimeDelta"* [ %30, %198 ], [ %3, %25 ]
  %204 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %12
  %205 = ptrtoint %"class.base::TimeDelta"* %204 to i64
  %206 = sub i64 %201, %205
  %207 = ashr exact i64 %206, 3
  %208 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %207
  %209 = icmp ult %"class.base::TimeDelta"* %208, %19
  br i1 %209, label %210, label %323

210:                                              ; preds = %200
  %211 = sub nsw i64 0, %207
  %212 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %211, i32 0
  %213 = bitcast i64* %212 to i8*
  %214 = xor i64 %7, -1
  %215 = getelementptr i8, i8* %213, i64 %214
  %216 = ptrtoint i8* %215 to i64
  %217 = lshr i64 %216, 3
  %218 = add nuw nsw i64 %217, 1
  %219 = icmp ult i64 %218, 4
  br i1 %219, label %220, label %223

220:                                              ; preds = %318, %223, %210
  %221 = phi %"class.base::TimeDelta"* [ %202, %223 ], [ %202, %210 ], [ %241, %318 ]
  %222 = phi %"class.base::TimeDelta"* [ %208, %223 ], [ %208, %210 ], [ %242, %318 ]
  br label %331

223:                                              ; preds = %210
  %224 = sub nsw i64 0, %207
  %225 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 %224, i32 0
  %226 = bitcast i64* %225 to i8*
  %227 = xor i64 %7, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %231
  %233 = add nsw i64 %207, %230
  %234 = add nsw i64 %233, 1
  %235 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %234
  %236 = icmp ult %"class.base::TimeDelta"* %202, %235
  %237 = icmp ult %"class.base::TimeDelta"* %208, %232
  %238 = and i1 %236, %237
  br i1 %238, label %220, label %239

239:                                              ; preds = %223
  %240 = and i64 %218, 4611686018427387900
  %241 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %240
  %242 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 %240
  %243 = add nsw i64 %240, -4
  %244 = lshr exact i64 %243, 2
  %245 = add nuw nsw i64 %244, 1
  %246 = and i64 %245, 3
  %247 = icmp ult i64 %243, 12
  br i1 %247, label %299, label %248

248:                                              ; preds = %239
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 0, %248 ], [ %296, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %297, %250 ]
  %253 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 %251
  %254 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %251, i32 0
  %255 = bitcast %"class.base::TimeDelta"* %253 to <2 x i64>*
  %256 = load <2 x i64>, <2 x i64>* %255, align 8, !alias.scope !13
  %257 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %253, i64 2
  %258 = bitcast %"class.base::TimeDelta"* %257 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !alias.scope !13
  %260 = bitcast i64* %254 to <2 x i64>*
  store <2 x i64> %256, <2 x i64>* %260, align 8, !alias.scope !16, !noalias !13
  %261 = getelementptr i64, i64* %254, i64 2
  %262 = bitcast i64* %261 to <2 x i64>*
  store <2 x i64> %259, <2 x i64>* %262, align 8, !alias.scope !16, !noalias !13
  %263 = or i64 %251, 4
  %264 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 %263
  %265 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %263, i32 0
  %266 = bitcast %"class.base::TimeDelta"* %264 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !13
  %268 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %264, i64 2
  %269 = bitcast %"class.base::TimeDelta"* %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !13
  %271 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %271, align 8, !alias.scope !16, !noalias !13
  %272 = getelementptr i64, i64* %265, i64 2
  %273 = bitcast i64* %272 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %273, align 8, !alias.scope !16, !noalias !13
  %274 = or i64 %251, 8
  %275 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 %274
  %276 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %274, i32 0
  %277 = bitcast %"class.base::TimeDelta"* %275 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8, !alias.scope !13
  %279 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %275, i64 2
  %280 = bitcast %"class.base::TimeDelta"* %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !13
  %282 = bitcast i64* %276 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %282, align 8, !alias.scope !16, !noalias !13
  %283 = getelementptr i64, i64* %276, i64 2
  %284 = bitcast i64* %283 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %284, align 8, !alias.scope !16, !noalias !13
  %285 = or i64 %251, 12
  %286 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 %285
  %287 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %285, i32 0
  %288 = bitcast %"class.base::TimeDelta"* %286 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !alias.scope !13
  %290 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %286, i64 2
  %291 = bitcast %"class.base::TimeDelta"* %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !13
  %293 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %293, align 8, !alias.scope !16, !noalias !13
  %294 = getelementptr i64, i64* %287, i64 2
  %295 = bitcast i64* %294 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %295, align 8, !alias.scope !16, !noalias !13
  %296 = add i64 %251, 16
  %297 = add i64 %252, -4
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %250, !llvm.loop !18

299:                                              ; preds = %250, %239
  %300 = phi i64 [ 0, %239 ], [ %296, %250 ]
  %301 = icmp eq i64 %246, 0
  br i1 %301, label %318, label %302

302:                                              ; preds = %299, %302
  %303 = phi i64 [ %315, %302 ], [ %300, %299 ]
  %304 = phi i64 [ %316, %302 ], [ %246, %299 ]
  %305 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 %303
  %306 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %303, i32 0
  %307 = bitcast %"class.base::TimeDelta"* %305 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !13
  %309 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %305, i64 2
  %310 = bitcast %"class.base::TimeDelta"* %309 to <2 x i64>*
  %311 = load <2 x i64>, <2 x i64>* %310, align 8, !alias.scope !13
  %312 = bitcast i64* %306 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %312, align 8, !alias.scope !16, !noalias !13
  %313 = getelementptr i64, i64* %306, i64 2
  %314 = bitcast i64* %313 to <2 x i64>*
  store <2 x i64> %311, <2 x i64>* %314, align 8, !alias.scope !16, !noalias !13
  %315 = add i64 %303, 4
  %316 = add i64 %304, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %302, !llvm.loop !19

318:                                              ; preds = %302, %299
  %319 = icmp eq i64 %218, %240
  br i1 %319, label %320, label %220

320:                                              ; preds = %331, %318
  %321 = phi %"class.base::TimeDelta"* [ %241, %318 ], [ %338, %331 ]
  %322 = ptrtoint %"class.base::TimeDelta"* %321 to i64
  br label %323

323:                                              ; preds = %320, %200
  %324 = phi i64 [ %322, %320 ], [ %201, %200 ]
  store i64 %324, i64* %24, align 8
  %325 = icmp eq i64 %206, 0
  br i1 %325, label %340, label %326

326:                                              ; preds = %323
  %327 = sub nsw i64 0, %207
  %328 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %202, i64 %327
  %329 = bitcast %"class.base::TimeDelta"* %328 to i8*
  %330 = bitcast %"class.base::TimeDelta"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %329, i8* align 8 %330, i64 %206, i1 false) #8
  br label %340

331:                                              ; preds = %220, %331
  %332 = phi %"class.base::TimeDelta"* [ %338, %331 ], [ %221, %220 ]
  %333 = phi %"class.base::TimeDelta"* [ %337, %331 ], [ %222, %220 ]
  %334 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %333, i64 0, i32 0
  %335 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %332, i64 0, i32 0
  %336 = load i64, i64* %334, align 8
  store i64 %336, i64* %335, align 8
  %337 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %333, i64 1
  %338 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %332, i64 1
  %339 = icmp ult %"class.base::TimeDelta"* %337, %19
  br i1 %339, label %331, label %320, !llvm.loop !20

340:                                              ; preds = %323, %326
  %341 = ptrtoint %"class.base::TimeDelta"* %203 to i64
  %342 = sub i64 %341, %8
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %720, label %344

344:                                              ; preds = %340
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %342, i1 false) #8
  br label %720

345:                                              ; preds = %14
  %346 = bitcast %"class.std::__1::vector"* %0 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = sub i64 %20, %347
  %349 = ashr exact i64 %348, 3
  %350 = add nsw i64 %349, %12
  %351 = icmp ugt i64 %350, 2305843009213693951
  br i1 %351, label %352, label %354

352:                                              ; preds = %345
  %353 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %353) #9
  unreachable

354:                                              ; preds = %345
  %355 = sub i64 %17, %347
  %356 = ashr exact i64 %355, 3
  %357 = icmp ult i64 %356, 1152921504606846975
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = sub i64 %7, %347
  %360 = ashr exact i64 %359, 3
  br label %371

361:                                              ; preds = %354
  %362 = ashr exact i64 %355, 2
  %363 = icmp ult i64 %362, %350
  %364 = select i1 %363, i64 %350, i64 %362
  %365 = sub i64 %7, %347
  %366 = ashr exact i64 %365, 3
  %367 = icmp eq i64 %364, 0
  br i1 %367, label %377, label %368

368:                                              ; preds = %361
  %369 = icmp ugt i64 %364, 2305843009213693951
  br i1 %369, label %370, label %371

370:                                              ; preds = %368
  tail call void @abort() #9
  unreachable

371:                                              ; preds = %358, %368
  %372 = phi i64 [ 2305843009213693951, %358 ], [ %364, %368 ]
  %373 = phi i64 [ %360, %358 ], [ %366, %368 ]
  %374 = shl i64 %372, 3
  %375 = tail call i8* @_Znwm(i64 %374) #10
  %376 = bitcast i8* %375 to %"class.base::TimeDelta"*
  br label %377

377:                                              ; preds = %371, %361
  %378 = phi i64 [ %373, %371 ], [ %366, %361 ]
  %379 = phi i64 [ %372, %371 ], [ 0, %361 ]
  %380 = phi %"class.base::TimeDelta"* [ %376, %371 ], [ null, %361 ]
  %381 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %380, i64 %378
  %382 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %380, i64 %379
  %383 = ptrtoint %"class.base::TimeDelta"* %382 to i64
  %384 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %12
  %385 = add i64 %11, -8
  %386 = lshr i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = icmp ult i64 %387, 4
  br i1 %388, label %481, label %389

389:                                              ; preds = %377
  %390 = add i64 %11, -8
  %391 = lshr i64 %390, 3
  %392 = add nsw i64 %378, %391
  %393 = add nsw i64 %392, 1
  %394 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %380, i64 %393
  %395 = add nuw nsw i64 %391, 1
  %396 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %395
  %397 = icmp ult %"class.base::TimeDelta"* %381, %396
  %398 = icmp ugt %"class.base::TimeDelta"* %394, %2
  %399 = and i1 %397, %398
  br i1 %399, label %481, label %400

400:                                              ; preds = %389
  %401 = and i64 %387, 4611686018427387900
  %402 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %401
  %403 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %401
  %404 = add nsw i64 %401, -4
  %405 = lshr exact i64 %404, 2
  %406 = add nuw nsw i64 %405, 1
  %407 = and i64 %406, 3
  %408 = icmp ult i64 %404, 12
  br i1 %408, label %460, label %409

409:                                              ; preds = %400
  %410 = sub nsw i64 %406, %407
  br label %411

411:                                              ; preds = %411, %409
  %412 = phi i64 [ 0, %409 ], [ %457, %411 ]
  %413 = phi i64 [ %410, %409 ], [ %458, %411 ]
  %414 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %412
  %415 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %412, i32 0
  %416 = bitcast i64* %415 to <2 x i64>*
  %417 = load <2 x i64>, <2 x i64>* %416, align 8, !alias.scope !21
  %418 = getelementptr i64, i64* %415, i64 2
  %419 = bitcast i64* %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !21
  %421 = bitcast %"class.base::TimeDelta"* %414 to <2 x i64>*
  store <2 x i64> %417, <2 x i64>* %421, align 8, !alias.scope !24, !noalias !21
  %422 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %414, i64 2
  %423 = bitcast %"class.base::TimeDelta"* %422 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %423, align 8, !alias.scope !24, !noalias !21
  %424 = or i64 %412, 4
  %425 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %424
  %426 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %424, i32 0
  %427 = bitcast i64* %426 to <2 x i64>*
  %428 = load <2 x i64>, <2 x i64>* %427, align 8, !alias.scope !21
  %429 = getelementptr i64, i64* %426, i64 2
  %430 = bitcast i64* %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !21
  %432 = bitcast %"class.base::TimeDelta"* %425 to <2 x i64>*
  store <2 x i64> %428, <2 x i64>* %432, align 8, !alias.scope !24, !noalias !21
  %433 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %425, i64 2
  %434 = bitcast %"class.base::TimeDelta"* %433 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %434, align 8, !alias.scope !24, !noalias !21
  %435 = or i64 %412, 8
  %436 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %435
  %437 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %435, i32 0
  %438 = bitcast i64* %437 to <2 x i64>*
  %439 = load <2 x i64>, <2 x i64>* %438, align 8, !alias.scope !21
  %440 = getelementptr i64, i64* %437, i64 2
  %441 = bitcast i64* %440 to <2 x i64>*
  %442 = load <2 x i64>, <2 x i64>* %441, align 8, !alias.scope !21
  %443 = bitcast %"class.base::TimeDelta"* %436 to <2 x i64>*
  store <2 x i64> %439, <2 x i64>* %443, align 8, !alias.scope !24, !noalias !21
  %444 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %436, i64 2
  %445 = bitcast %"class.base::TimeDelta"* %444 to <2 x i64>*
  store <2 x i64> %442, <2 x i64>* %445, align 8, !alias.scope !24, !noalias !21
  %446 = or i64 %412, 12
  %447 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %446
  %448 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %446, i32 0
  %449 = bitcast i64* %448 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8, !alias.scope !21
  %451 = getelementptr i64, i64* %448, i64 2
  %452 = bitcast i64* %451 to <2 x i64>*
  %453 = load <2 x i64>, <2 x i64>* %452, align 8, !alias.scope !21
  %454 = bitcast %"class.base::TimeDelta"* %447 to <2 x i64>*
  store <2 x i64> %450, <2 x i64>* %454, align 8, !alias.scope !24, !noalias !21
  %455 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %447, i64 2
  %456 = bitcast %"class.base::TimeDelta"* %455 to <2 x i64>*
  store <2 x i64> %453, <2 x i64>* %456, align 8, !alias.scope !24, !noalias !21
  %457 = add i64 %412, 16
  %458 = add i64 %413, -4
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %460, label %411, !llvm.loop !26

460:                                              ; preds = %411, %400
  %461 = phi i64 [ 0, %400 ], [ %457, %411 ]
  %462 = icmp eq i64 %407, 0
  br i1 %462, label %479, label %463

463:                                              ; preds = %460, %463
  %464 = phi i64 [ %476, %463 ], [ %461, %460 ]
  %465 = phi i64 [ %477, %463 ], [ %407, %460 ]
  %466 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %464
  %467 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 %464, i32 0
  %468 = bitcast i64* %467 to <2 x i64>*
  %469 = load <2 x i64>, <2 x i64>* %468, align 8, !alias.scope !21
  %470 = getelementptr i64, i64* %467, i64 2
  %471 = bitcast i64* %470 to <2 x i64>*
  %472 = load <2 x i64>, <2 x i64>* %471, align 8, !alias.scope !21
  %473 = bitcast %"class.base::TimeDelta"* %466 to <2 x i64>*
  store <2 x i64> %469, <2 x i64>* %473, align 8, !alias.scope !24, !noalias !21
  %474 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %466, i64 2
  %475 = bitcast %"class.base::TimeDelta"* %474 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %475, align 8, !alias.scope !24, !noalias !21
  %476 = add i64 %464, 4
  %477 = add i64 %465, -1
  %478 = icmp eq i64 %477, 0
  br i1 %478, label %479, label %463, !llvm.loop !27

479:                                              ; preds = %463, %460
  %480 = icmp eq i64 %387, %401
  br i1 %480, label %539, label %481

481:                                              ; preds = %479, %389, %377
  %482 = phi %"class.base::TimeDelta"* [ %381, %389 ], [ %381, %377 ], [ %402, %479 ]
  %483 = phi %"class.base::TimeDelta"* [ %2, %389 ], [ %2, %377 ], [ %403, %479 ]
  %484 = ptrtoint %"class.base::TimeDelta"* %482 to i64
  %485 = add nsw i64 %378, %12
  %486 = add nsw i64 %485, -1
  %487 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %380, i64 %486, i32 0
  %488 = ptrtoint i64* %487 to i64
  %489 = sub i64 %488, %484
  %490 = lshr i64 %489, 3
  %491 = add nuw nsw i64 %490, 1
  %492 = and i64 %491, 7
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %505, label %494

494:                                              ; preds = %481, %494
  %495 = phi %"class.base::TimeDelta"* [ %501, %494 ], [ %482, %481 ]
  %496 = phi %"class.base::TimeDelta"* [ %502, %494 ], [ %483, %481 ]
  %497 = phi i64 [ %503, %494 ], [ %492, %481 ]
  %498 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %496, i64 0, i32 0
  %499 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %495, i64 0, i32 0
  %500 = load i64, i64* %498, align 8
  store i64 %500, i64* %499, align 8
  %501 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %495, i64 1
  %502 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %496, i64 1
  %503 = add i64 %497, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %494, !llvm.loop !28

505:                                              ; preds = %494, %481
  %506 = phi %"class.base::TimeDelta"* [ %482, %481 ], [ %501, %494 ]
  %507 = phi %"class.base::TimeDelta"* [ %483, %481 ], [ %502, %494 ]
  %508 = icmp ult i64 %489, 56
  br i1 %508, label %539, label %509

509:                                              ; preds = %505, %509
  %510 = phi %"class.base::TimeDelta"* [ %536, %509 ], [ %506, %505 ]
  %511 = phi %"class.base::TimeDelta"* [ %537, %509 ], [ %507, %505 ]
  %512 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 0, i32 0
  %513 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 0, i32 0
  %514 = load i64, i64* %512, align 8
  store i64 %514, i64* %513, align 8
  %515 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 1, i32 0
  %516 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 1, i32 0
  %517 = load i64, i64* %515, align 8
  store i64 %517, i64* %516, align 8
  %518 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 2, i32 0
  %519 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 2, i32 0
  %520 = load i64, i64* %518, align 8
  store i64 %520, i64* %519, align 8
  %521 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 3, i32 0
  %522 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 3, i32 0
  %523 = load i64, i64* %521, align 8
  store i64 %523, i64* %522, align 8
  %524 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 4, i32 0
  %525 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 4, i32 0
  %526 = load i64, i64* %524, align 8
  store i64 %526, i64* %525, align 8
  %527 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 5, i32 0
  %528 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 5, i32 0
  %529 = load i64, i64* %527, align 8
  store i64 %529, i64* %528, align 8
  %530 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 6, i32 0
  %531 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 6, i32 0
  %532 = load i64, i64* %530, align 8
  store i64 %532, i64* %531, align 8
  %533 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 7, i32 0
  %534 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 7, i32 0
  %535 = load i64, i64* %533, align 8
  store i64 %535, i64* %534, align 8
  %536 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %510, i64 8
  %537 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %511, i64 8
  %538 = icmp eq %"class.base::TimeDelta"* %384, %536
  br i1 %538, label %539, label %509, !llvm.loop !29

539:                                              ; preds = %505, %509, %479
  %540 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %9, align 8
  %541 = ptrtoint %"class.base::TimeDelta"* %540 to i64
  %542 = sub i64 %7, %541
  %543 = ashr exact i64 %542, 3
  %544 = sub nsw i64 0, %543
  %545 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %381, i64 %544
  %546 = ptrtoint %"class.base::TimeDelta"* %545 to i64
  %547 = icmp sgt i64 %542, 0
  br i1 %547, label %548, label %551

548:                                              ; preds = %539
  %549 = bitcast %"class.base::TimeDelta"* %545 to i8*
  %550 = bitcast %"class.base::TimeDelta"* %540 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %549, i8* align 8 %550, i64 %542, i1 false) #8
  br label %551

551:                                              ; preds = %548, %539
  %552 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %18, align 8
  %553 = icmp eq %"class.base::TimeDelta"* %552, %1
  br i1 %553, label %713, label %554

554:                                              ; preds = %551
  %555 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %552, i64 -1, i32 0
  %556 = ptrtoint i64* %555 to i64
  %557 = sub i64 %556, %7
  %558 = lshr i64 %557, 3
  %559 = add nuw nsw i64 %558, 1
  %560 = icmp ult i64 %559, 4
  br i1 %560, label %656, label %561

561:                                              ; preds = %554
  %562 = add nsw i64 %378, %12
  %563 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %552, i64 -1, i32 0
  %564 = ptrtoint i64* %563 to i64
  %565 = sub i64 %564, %7
  %566 = lshr i64 %565, 3
  %567 = add nsw i64 %562, %566
  %568 = add nsw i64 %567, 1
  %569 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %380, i64 %568
  %570 = add nuw nsw i64 %566, 1
  %571 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %570
  %572 = icmp ult %"class.base::TimeDelta"* %384, %571
  %573 = icmp ugt %"class.base::TimeDelta"* %569, %1
  %574 = and i1 %572, %573
  br i1 %574, label %656, label %575

575:                                              ; preds = %561
  %576 = and i64 %559, 4611686018427387900
  %577 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %384, i64 %576
  %578 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %576
  %579 = add nsw i64 %576, -4
  %580 = lshr exact i64 %579, 2
  %581 = add nuw nsw i64 %580, 1
  %582 = and i64 %581, 3
  %583 = icmp ult i64 %579, 12
  br i1 %583, label %635, label %584

584:                                              ; preds = %575
  %585 = sub nsw i64 %581, %582
  br label %586

586:                                              ; preds = %586, %584
  %587 = phi i64 [ 0, %584 ], [ %632, %586 ]
  %588 = phi i64 [ %585, %584 ], [ %633, %586 ]
  %589 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %384, i64 %587
  %590 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %587, i32 0
  %591 = bitcast i64* %590 to <2 x i64>*
  %592 = load <2 x i64>, <2 x i64>* %591, align 8, !alias.scope !30
  %593 = getelementptr i64, i64* %590, i64 2
  %594 = bitcast i64* %593 to <2 x i64>*
  %595 = load <2 x i64>, <2 x i64>* %594, align 8, !alias.scope !30
  %596 = bitcast %"class.base::TimeDelta"* %589 to <2 x i64>*
  store <2 x i64> %592, <2 x i64>* %596, align 8, !alias.scope !33, !noalias !30
  %597 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %589, i64 2
  %598 = bitcast %"class.base::TimeDelta"* %597 to <2 x i64>*
  store <2 x i64> %595, <2 x i64>* %598, align 8, !alias.scope !33, !noalias !30
  %599 = or i64 %587, 4
  %600 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %384, i64 %599
  %601 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %599, i32 0
  %602 = bitcast i64* %601 to <2 x i64>*
  %603 = load <2 x i64>, <2 x i64>* %602, align 8, !alias.scope !30
  %604 = getelementptr i64, i64* %601, i64 2
  %605 = bitcast i64* %604 to <2 x i64>*
  %606 = load <2 x i64>, <2 x i64>* %605, align 8, !alias.scope !30
  %607 = bitcast %"class.base::TimeDelta"* %600 to <2 x i64>*
  store <2 x i64> %603, <2 x i64>* %607, align 8, !alias.scope !33, !noalias !30
  %608 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %600, i64 2
  %609 = bitcast %"class.base::TimeDelta"* %608 to <2 x i64>*
  store <2 x i64> %606, <2 x i64>* %609, align 8, !alias.scope !33, !noalias !30
  %610 = or i64 %587, 8
  %611 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %384, i64 %610
  %612 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %610, i32 0
  %613 = bitcast i64* %612 to <2 x i64>*
  %614 = load <2 x i64>, <2 x i64>* %613, align 8, !alias.scope !30
  %615 = getelementptr i64, i64* %612, i64 2
  %616 = bitcast i64* %615 to <2 x i64>*
  %617 = load <2 x i64>, <2 x i64>* %616, align 8, !alias.scope !30
  %618 = bitcast %"class.base::TimeDelta"* %611 to <2 x i64>*
  store <2 x i64> %614, <2 x i64>* %618, align 8, !alias.scope !33, !noalias !30
  %619 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %611, i64 2
  %620 = bitcast %"class.base::TimeDelta"* %619 to <2 x i64>*
  store <2 x i64> %617, <2 x i64>* %620, align 8, !alias.scope !33, !noalias !30
  %621 = or i64 %587, 12
  %622 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %384, i64 %621
  %623 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %621, i32 0
  %624 = bitcast i64* %623 to <2 x i64>*
  %625 = load <2 x i64>, <2 x i64>* %624, align 8, !alias.scope !30
  %626 = getelementptr i64, i64* %623, i64 2
  %627 = bitcast i64* %626 to <2 x i64>*
  %628 = load <2 x i64>, <2 x i64>* %627, align 8, !alias.scope !30
  %629 = bitcast %"class.base::TimeDelta"* %622 to <2 x i64>*
  store <2 x i64> %625, <2 x i64>* %629, align 8, !alias.scope !33, !noalias !30
  %630 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %622, i64 2
  %631 = bitcast %"class.base::TimeDelta"* %630 to <2 x i64>*
  store <2 x i64> %628, <2 x i64>* %631, align 8, !alias.scope !33, !noalias !30
  %632 = add i64 %587, 16
  %633 = add i64 %588, -4
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %586, !llvm.loop !35

635:                                              ; preds = %586, %575
  %636 = phi i64 [ 0, %575 ], [ %632, %586 ]
  %637 = icmp eq i64 %582, 0
  br i1 %637, label %654, label %638

638:                                              ; preds = %635, %638
  %639 = phi i64 [ %651, %638 ], [ %636, %635 ]
  %640 = phi i64 [ %652, %638 ], [ %582, %635 ]
  %641 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %384, i64 %639
  %642 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 %639, i32 0
  %643 = bitcast i64* %642 to <2 x i64>*
  %644 = load <2 x i64>, <2 x i64>* %643, align 8, !alias.scope !30
  %645 = getelementptr i64, i64* %642, i64 2
  %646 = bitcast i64* %645 to <2 x i64>*
  %647 = load <2 x i64>, <2 x i64>* %646, align 8, !alias.scope !30
  %648 = bitcast %"class.base::TimeDelta"* %641 to <2 x i64>*
  store <2 x i64> %644, <2 x i64>* %648, align 8, !alias.scope !33, !noalias !30
  %649 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %641, i64 2
  %650 = bitcast %"class.base::TimeDelta"* %649 to <2 x i64>*
  store <2 x i64> %647, <2 x i64>* %650, align 8, !alias.scope !33, !noalias !30
  %651 = add i64 %639, 4
  %652 = add i64 %640, -1
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %654, label %638, !llvm.loop !36

654:                                              ; preds = %638, %635
  %655 = icmp eq i64 %559, %576
  br i1 %655, label %713, label %656

656:                                              ; preds = %654, %561, %554
  %657 = phi %"class.base::TimeDelta"* [ %384, %561 ], [ %384, %554 ], [ %577, %654 ]
  %658 = phi %"class.base::TimeDelta"* [ %1, %561 ], [ %1, %554 ], [ %578, %654 ]
  %659 = ptrtoint %"class.base::TimeDelta"* %658 to i64
  %660 = getelementptr %"class.base::TimeDelta", %"class.base::TimeDelta"* %552, i64 -1, i32 0
  %661 = ptrtoint i64* %660 to i64
  %662 = sub i64 %661, %659
  %663 = lshr i64 %662, 3
  %664 = add nuw nsw i64 %663, 1
  %665 = and i64 %664, 7
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %678, label %667

667:                                              ; preds = %656, %667
  %668 = phi %"class.base::TimeDelta"* [ %675, %667 ], [ %657, %656 ]
  %669 = phi %"class.base::TimeDelta"* [ %674, %667 ], [ %658, %656 ]
  %670 = phi i64 [ %676, %667 ], [ %665, %656 ]
  %671 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %669, i64 0, i32 0
  %672 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %668, i64 0, i32 0
  %673 = load i64, i64* %671, align 8
  store i64 %673, i64* %672, align 8
  %674 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %669, i64 1
  %675 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %668, i64 1
  %676 = add i64 %670, -1
  %677 = icmp eq i64 %676, 0
  br i1 %677, label %678, label %667, !llvm.loop !37

678:                                              ; preds = %667, %656
  %679 = phi %"class.base::TimeDelta"* [ undef, %656 ], [ %675, %667 ]
  %680 = phi %"class.base::TimeDelta"* [ %657, %656 ], [ %675, %667 ]
  %681 = phi %"class.base::TimeDelta"* [ %658, %656 ], [ %674, %667 ]
  %682 = icmp ult i64 %662, 56
  br i1 %682, label %713, label %683

683:                                              ; preds = %678, %683
  %684 = phi %"class.base::TimeDelta"* [ %711, %683 ], [ %680, %678 ]
  %685 = phi %"class.base::TimeDelta"* [ %710, %683 ], [ %681, %678 ]
  %686 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 0, i32 0
  %687 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 0, i32 0
  %688 = load i64, i64* %686, align 8
  store i64 %688, i64* %687, align 8
  %689 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 1, i32 0
  %690 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 1, i32 0
  %691 = load i64, i64* %689, align 8
  store i64 %691, i64* %690, align 8
  %692 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 2, i32 0
  %693 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 2, i32 0
  %694 = load i64, i64* %692, align 8
  store i64 %694, i64* %693, align 8
  %695 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 3, i32 0
  %696 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 3, i32 0
  %697 = load i64, i64* %695, align 8
  store i64 %697, i64* %696, align 8
  %698 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 4, i32 0
  %699 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 4, i32 0
  %700 = load i64, i64* %698, align 8
  store i64 %700, i64* %699, align 8
  %701 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 5, i32 0
  %702 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 5, i32 0
  %703 = load i64, i64* %701, align 8
  store i64 %703, i64* %702, align 8
  %704 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 6, i32 0
  %705 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 6, i32 0
  %706 = load i64, i64* %704, align 8
  store i64 %706, i64* %705, align 8
  %707 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 7, i32 0
  %708 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 7, i32 0
  %709 = load i64, i64* %707, align 8
  store i64 %709, i64* %708, align 8
  %710 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %685, i64 8
  %711 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %684, i64 8
  %712 = icmp eq %"class.base::TimeDelta"* %710, %552
  br i1 %712, label %713, label %683, !llvm.loop !38

713:                                              ; preds = %678, %683, %654, %551
  %714 = phi %"class.base::TimeDelta"* [ %384, %551 ], [ %577, %654 ], [ %679, %678 ], [ %711, %683 ]
  %715 = ptrtoint %"class.base::TimeDelta"* %714 to i64
  %716 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %9, align 8
  store i64 %546, i64* %346, align 8
  store i64 %715, i64* %24, align 8
  store i64 %383, i64* %16, align 8
  %717 = icmp eq %"class.base::TimeDelta"* %716, null
  br i1 %717, label %720, label %718

718:                                              ; preds = %713
  %719 = bitcast %"class.base::TimeDelta"* %716 to i8*
  tail call void @_ZdlPv(i8* %719) #10
  br label %720

720:                                              ; preds = %718, %713, %195, %340, %344, %4
  %721 = phi %"class.base::TimeDelta"* [ %1, %4 ], [ %1, %344 ], [ %1, %340 ], [ %1, %195 ], [ %381, %713 ], [ %381, %718 ]
  ret %"class.base::TimeDelta"* %721
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc14RenderingStats13TimeDeltaList16GetLastTimeDeltaEv(%"class.cc::RenderingStats::TimeDeltaList"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %4, align 8
  %6 = icmp eq %"class.base::TimeDelta"* %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 -1, i32 0
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStatsC2Ev(%"struct.cc::RenderingStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::RenderingStats"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 168, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStatsC2ERKS0_(%"struct.cc::RenderingStats"*, %"struct.cc::RenderingStats"* nocapture readonly dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::RenderingStats"* %0 to i8*
  %4 = bitcast %"struct.cc::RenderingStats"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  %5 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 6
  %7 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %9 = bitcast %"class.base::TimeDelta"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #9
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #10
  %22 = bitcast i8* %21 to %"class.base::TimeDelta"*
  %23 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %24 = bitcast %"class.base::TimeDelta"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %22, i64 %14
  %27 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::TimeDelta"* %26, %"class.base::TimeDelta"** %27, align 8
  %28 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"class.base::TimeDelta"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"class.base::TimeDelta"* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 3
  %38 = bitcast %"class.base::TimeDelta"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %38, i64 %34, i1 false) #8
  %39 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %22, i64 %37
  %40 = ptrtoint %"class.base::TimeDelta"* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7
  %45 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 7
  %46 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #8
  %47 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 7, i32 0, i32 0, i32 1
  %48 = bitcast %"class.base::TimeDelta"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %45 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %43
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #9
  unreachable

59:                                               ; preds = %55
  %60 = tail call i8* @_Znwm(i64 %52) #10
  %61 = bitcast i8* %60 to %"class.base::TimeDelta"*
  %62 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %63 = bitcast %"class.base::TimeDelta"** %62 to i8**
  store i8* %60, i8** %63, align 8
  %64 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %44 to i8**
  store i8* %60, i8** %64, align 8
  %65 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %61, i64 %53
  %66 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::TimeDelta"* %65, %"class.base::TimeDelta"** %66, align 8
  %67 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %45, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %67, align 8
  %69 = load i64, i64* %48, align 8
  %70 = bitcast %"class.base::TimeDelta"** %62 to i64*
  %71 = ptrtoint i8* %60 to i64
  %72 = ptrtoint %"class.base::TimeDelta"* %68 to i64
  %73 = sub i64 %69, %72
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %59
  %76 = lshr exact i64 %73, 3
  %77 = bitcast %"class.base::TimeDelta"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 %77, i64 %73, i1 false) #8
  %78 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %61, i64 %76
  %79 = ptrtoint %"class.base::TimeDelta"* %78 to i64
  br label %80

80:                                               ; preds = %75, %59
  %81 = phi i64 [ %79, %75 ], [ %71, %59 ]
  store i64 %81, i64* %70, align 8
  br label %82

82:                                               ; preds = %43, %80
  %83 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8
  %84 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 8
  %85 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #8
  %86 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %87 = bitcast %"class.base::TimeDelta"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %84 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %121, label %94

94:                                               ; preds = %82
  %95 = icmp ugt i64 %92, 2305843009213693951
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %83 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %97) #9
  unreachable

98:                                               ; preds = %94
  %99 = tail call i8* @_Znwm(i64 %91) #10
  %100 = bitcast i8* %99 to %"class.base::TimeDelta"*
  %101 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %102 = bitcast %"class.base::TimeDelta"** %101 to i8**
  store i8* %99, i8** %102, align 8
  %103 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %83 to i8**
  store i8* %99, i8** %103, align 8
  %104 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %100, i64 %92
  %105 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::TimeDelta"* %104, %"class.base::TimeDelta"** %105, align 8
  %106 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %84, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %106, align 8
  %108 = load i64, i64* %87, align 8
  %109 = bitcast %"class.base::TimeDelta"** %101 to i64*
  %110 = ptrtoint i8* %99 to i64
  %111 = ptrtoint %"class.base::TimeDelta"* %107 to i64
  %112 = sub i64 %108, %111
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %114, label %119

114:                                              ; preds = %98
  %115 = lshr exact i64 %112, 3
  %116 = bitcast %"class.base::TimeDelta"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 %116, i64 %112, i1 false) #8
  %117 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %100, i64 %115
  %118 = ptrtoint %"class.base::TimeDelta"* %117 to i64
  br label %119

119:                                              ; preds = %114, %98
  %120 = phi i64 [ %118, %114 ], [ %110, %98 ]
  store i64 %120, i64* %109, align 8
  br label %121

121:                                              ; preds = %82, %119
  %122 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9
  %123 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 9
  %124 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #8
  %125 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %126 = bitcast %"class.base::TimeDelta"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %123 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = ashr exact i64 %130, 3
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %160, label %133

133:                                              ; preds = %121
  %134 = icmp ugt i64 %131, 2305843009213693951
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %122 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #9
  unreachable

137:                                              ; preds = %133
  %138 = tail call i8* @_Znwm(i64 %130) #10
  %139 = bitcast i8* %138 to %"class.base::TimeDelta"*
  %140 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %141 = bitcast %"class.base::TimeDelta"** %140 to i8**
  store i8* %138, i8** %141, align 8
  %142 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %122 to i8**
  store i8* %138, i8** %142, align 8
  %143 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %139, i64 %131
  %144 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::TimeDelta"* %143, %"class.base::TimeDelta"** %144, align 8
  %145 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %123, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %145, align 8
  %147 = load i64, i64* %126, align 8
  %148 = bitcast %"class.base::TimeDelta"** %140 to i64*
  %149 = ptrtoint i8* %138 to i64
  %150 = ptrtoint %"class.base::TimeDelta"* %146 to i64
  %151 = sub i64 %147, %150
  %152 = icmp sgt i64 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %137
  %154 = lshr exact i64 %151, 3
  %155 = bitcast %"class.base::TimeDelta"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %138, i8* align 8 %155, i64 %151, i1 false) #8
  %156 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %139, i64 %154
  %157 = ptrtoint %"class.base::TimeDelta"* %156 to i64
  br label %158

158:                                              ; preds = %153, %137
  %159 = phi i64 [ %157, %153 ], [ %149, %137 ]
  store i64 %159, i64* %148, align 8
  br label %160

160:                                              ; preds = %121, %158
  %161 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10
  %162 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 10
  %163 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %161 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 24, i1 false) #8
  %164 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %1, i64 0, i32 10, i32 0, i32 0, i32 1
  %165 = bitcast %"class.base::TimeDelta"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %162 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %166, %168
  %170 = ashr exact i64 %169, 3
  %171 = icmp eq i64 %169, 0
  br i1 %171, label %199, label %172

172:                                              ; preds = %160
  %173 = icmp ugt i64 %170, 2305843009213693951
  br i1 %173, label %174, label %176

174:                                              ; preds = %172
  %175 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %161 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #9
  unreachable

176:                                              ; preds = %172
  %177 = tail call i8* @_Znwm(i64 %169) #10
  %178 = bitcast i8* %177 to %"class.base::TimeDelta"*
  %179 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %180 = bitcast %"class.base::TimeDelta"** %179 to i8**
  store i8* %177, i8** %180, align 8
  %181 = bitcast %"class.cc::RenderingStats::TimeDeltaList"* %161 to i8**
  store i8* %177, i8** %181, align 8
  %182 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %178, i64 %170
  %183 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.base::TimeDelta"* %182, %"class.base::TimeDelta"** %183, align 8
  %184 = getelementptr inbounds %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList"* %162, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %184, align 8
  %186 = load i64, i64* %165, align 8
  %187 = bitcast %"class.base::TimeDelta"** %179 to i64*
  %188 = ptrtoint i8* %177 to i64
  %189 = ptrtoint %"class.base::TimeDelta"* %185 to i64
  %190 = sub i64 %186, %189
  %191 = icmp sgt i64 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %176
  %193 = lshr exact i64 %190, 3
  %194 = bitcast %"class.base::TimeDelta"* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %177, i8* align 8 %194, i64 %190, i1 false) #8
  %195 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %178, i64 %193
  %196 = ptrtoint %"class.base::TimeDelta"* %195 to i64
  br label %197

197:                                              ; preds = %192, %176
  %198 = phi i64 [ %196, %192 ], [ %188, %176 ]
  store i64 %198, i64* %187, align 8
  br label %199

199:                                              ; preds = %160, %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14RenderingStatsD2Ev(%"struct.cc::RenderingStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %2, align 8
  %4 = icmp eq %"class.base::TimeDelta"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.base::TimeDelta"* %3 to i64
  %7 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %8 = bitcast %"class.base::TimeDelta"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.base::TimeDelta"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %11, align 8
  %13 = icmp eq %"class.base::TimeDelta"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.base::TimeDelta"* %12 to i64
  %16 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %17 = bitcast %"class.base::TimeDelta"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.base::TimeDelta"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %21 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %20, align 8
  %22 = icmp eq %"class.base::TimeDelta"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::TimeDelta"* %21 to i64
  %25 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::TimeDelta"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::TimeDelta"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %30 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %29, align 8
  %31 = icmp eq %"class.base::TimeDelta"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint %"class.base::TimeDelta"* %30 to i64
  %34 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::TimeDelta"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"class.base::TimeDelta"* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %28, %32
  %38 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %38, align 8
  %40 = icmp eq %"class.base::TimeDelta"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"class.base::TimeDelta"* %39 to i64
  %43 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %44 = bitcast %"class.base::TimeDelta"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast %"class.base::TimeDelta"* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::trace_event::ConvertableToTraceFormat"* @_ZNK2cc14RenderingStats15AsTraceableDataEv(%"struct.cc::RenderingStats"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to %"class.base::trace_event::TracedValue"*
  tail call void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"* nonnull %3, i64 0) #8
  %4 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 %6) #8
  %7 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 %9) #8
  %10 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 %12) #8
  %13 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 %15) #8
  %16 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i32 %18) #8
  %19 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i32 %21) #8
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #8
  %22 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %23 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %22, align 8
  %24 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %25 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %24, align 8
  %26 = icmp eq %"class.base::TimeDelta"* %23, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %1, %27
  %28 = phi %"class.base::TimeDelta"* [ %30, %27 ], [ %23, %1 ]
  %29 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %28) #8
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* nonnull %3, double %29) #8
  %30 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %28, i64 1
  %31 = icmp eq %"class.base::TimeDelta"* %30, %25
  br i1 %31, label %32, label %27

32:                                               ; preds = %27, %1
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* nonnull %3) #8
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #8
  %33 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %34 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %33, align 8
  %35 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %36 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %35, align 8
  %37 = icmp eq %"class.base::TimeDelta"* %34, %36
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %38
  %39 = phi %"class.base::TimeDelta"* [ %41, %38 ], [ %34, %32 ]
  %40 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %39) #8
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* nonnull %3, double %40) #8
  %41 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %39, i64 1
  %42 = icmp eq %"class.base::TimeDelta"* %41, %36
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %32
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* nonnull %3) #8
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #8
  %44 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %45 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %44, align 8
  %46 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %47 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %46, align 8
  %48 = icmp eq %"class.base::TimeDelta"* %45, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %43, %49
  %50 = phi %"class.base::TimeDelta"* [ %52, %49 ], [ %45, %43 ]
  %51 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %50) #8
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* nonnull %3, double %51) #8
  %52 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %50, i64 1
  %53 = icmp eq %"class.base::TimeDelta"* %52, %47
  br i1 %53, label %54, label %49

54:                                               ; preds = %49, %43
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* nonnull %3) #8
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0)) #8
  %55 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %56 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %55, align 8
  %57 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %58 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %57, align 8
  %59 = icmp eq %"class.base::TimeDelta"* %56, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %54, %60
  %61 = phi %"class.base::TimeDelta"* [ %63, %60 ], [ %56, %54 ]
  %62 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %61) #8
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* nonnull %3, double %62) #8
  %63 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %61, i64 1
  %64 = icmp eq %"class.base::TimeDelta"* %63, %58
  br i1 %64, label %65, label %60

65:                                               ; preds = %60, %54
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* nonnull %3) #8
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* nonnull %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0)) #8
  %66 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %67 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %66, align 8
  %68 = getelementptr inbounds %"struct.cc::RenderingStats", %"struct.cc::RenderingStats"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %69 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %68, align 8
  %70 = icmp eq %"class.base::TimeDelta"* %67, %69
  br i1 %70, label %76, label %71

71:                                               ; preds = %65, %71
  %72 = phi %"class.base::TimeDelta"* [ %74, %71 ], [ %67, %65 ]
  %73 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %72) #8
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* nonnull %3, double %73) #8
  %74 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %72, i64 1
  %75 = icmp eq %"class.base::TimeDelta"* %74, %69
  br i1 %75, label %76, label %71

76:                                               ; preds = %71, %65
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* nonnull %3) #8
  %77 = bitcast i8* %2 to %"class.base::trace_event::ConvertableToTraceFormat"*
  ret %"class.base::trace_event::ConvertableToTraceFormat"* %77
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"*, i64) unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !8}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !8}
!36 = distinct !{!36, !10}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !8}
