; ModuleID = '../../third_party/blink/renderer/platform/graphics/deferred_image_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/deferred_image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" = type { [8 x i8] }
%"class.blink::DeferredImageDecoder" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.11", %"class.WTF::String", %"class.blink::IntSize", i32, i8, i8, i8, i8, i8, i8, %class.sk_sp.17, %"class.blink::IntPoint", i32, %"class.absl::optional", i8, i8, %"class.absl::optional.58", %"class.WTF::Vector.68", i64, %class.scoped_refptr.73 }
%class.scoped_refptr = type { %"class.blink::ParkableImage"* }
%"class.blink::ParkableImage" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.WTF::Mutex", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.5", i64, i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::RWBuffer"* }
%"class.blink::RWBuffer" = type { %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferBlock"*, i64 }
%"struct.blink::RWBuffer::BufferHead" = type opaque
%"struct.blink::RWBuffer::BufferBlock" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ImageDecoder"* }
%"class.WTF::String" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.WTF::StringImpl"* }
%"class.blink::IntSize" = type { i32, i32 }
%class.sk_sp.17 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, [3 x i8], %union.anon.62 }
%union.anon.62 = type { %"struct.cc::ImageHeaderMetadata" }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional.63", i8, i8, %"class.absl::optional", %"class.absl::optional", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.gfx::Size" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"struct.blink::DeferredFrameData"*, i32, i32 }
%"struct.blink::DeferredFrameData" = type <{ %"class.blink::ImageOrientation", [3 x i8], %"class.blink::IntSize", [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.blink::ImageOrientation" = type { i8 }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.73 = type { %"class.blink::ImageFrameGenerator"* }
%"class.blink::ImageFrameGenerator" = type { %"class.WTF::ThreadSafeRefCounted.74", %struct.SkISize, %"class.blink::ColorBehavior", i8, %"class.WTF::Vector.76", %"class.WTF::Mutex", i8, i8, i64, %"class.WTF::Vector.81", %"class.WTF::HashMap", %"class.std::__1::unique_ptr.88" }
%"class.WTF::ThreadSafeRefCounted.74" = type { %"class.base::RefCountedThreadSafe.75" }
%"class.base::RefCountedThreadSafe.75" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkISize = type { i32, i32 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %struct.SkISize*, i32, i32 }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { i8*, i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::ImageDecoderFactory"* }
%"class.blink::ImageDecoderFactory" = type { i32 (...)** }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr.14, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.24", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.30", %class.sk_sp.17, i8, %"class.std::__1::unique_ptr.43" }
%class.scoped_refptr.14 = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.15", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.15" = type { %"class.base::RefCountedThreadSafe.16" }
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.23 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.17, i32, i32 }
%class.sk_sp.23 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.34" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.33, [8 x i8] }
%struct.anon.33 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i8* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.98", %"class.WTF::Vector.103" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { i8*, i32, i32 }
%"class.WTF::Vector.103" = type { %"class.WTF::VectorBuffer.104" }
%"class.WTF::VectorBuffer.104" = type { %"class.WTF::VectorBufferBase.105" }
%"class.WTF::VectorBufferBase.105" = type { %"class.std::__1::unique_ptr.106"*, i32, i32 }
%"class.std::__1::unique_ptr.106" = type opaque
%class.sk_sp.109 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.110" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.cc::FrameMetadata"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.146 }
%union.anon.146 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.sk_sp.113 = type { %"class.blink::DecodingImageGenerator"* }
%"class.blink::DecodingImageGenerator" = type <{ %"class.cc::PaintImageGenerator", %class.scoped_refptr.73, %class.scoped_refptr.14, i8, i8, [2 x i8], i32, %"struct.cc::ImageHeaderMetadata", [4 x i8] }>
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.53", [4 x i8] }>
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17DeferredFrameDataEEEmm = comdat any

@.str = private unnamed_addr constant [4 x i8] c"jpg\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"webp\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"Blink.ImageDecoders.IncrementalDecodeNeeded\00", align 1
@_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram = internal global i64 0, align 8
@_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram = internal global i64 0, align 8
@_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram = internal global i64 0, align 8
@_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [54 x i8] c"Blink.ImageDecoders.IncrementallyDecodedByteSize.Jpeg\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"Blink.ImageDecoders.InitiallyFullyDecodedByteSize.Jpeg\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"Blink.ImageDecoders.IncrementallyDecodedByteSize.WebP\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"Blink.ImageDecoders.InitiallyFullyDecodedByteSize.WebP\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17DeferredFrameDataEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DeferredFrameData]\00", align 1
@_ZZN5blink12_GLOBAL__N_129ReportIncrementalDecodeNeededEbRKN3WTF6StringEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink20DeferredImageDecoderC1ENSt3__110unique_ptrINS_12ImageDecoderENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.blink::DeferredImageDecoder"*, %"class.blink::ImageDecoder"*), void (%"class.blink::DeferredImageDecoder"*, %"class.blink::ImageDecoder"*)* @_ZN5blink20DeferredImageDecoderC2ENSt3__110unique_ptrINS_12ImageDecoderENS1_14default_deleteIS3_EEEE
@_ZN5blink20DeferredImageDecoderD1Ev = hidden unnamed_addr alias void (%"class.blink::DeferredImageDecoder"*), void (%"class.blink::DeferredImageDecoder"*)* @_ZN5blink20DeferredImageDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DeferredImageDecoder"* @_ZN5blink20DeferredImageDecoder6CreateE13scoped_refptrIN3WTF12SharedBufferEEbNS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorE(%"class.WTF::SharedBuffer"*, i1 zeroext, i32, %"class.blink::ColorBehavior"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.SkISize*
  %7 = icmp eq %"class.WTF::SharedBuffer"* %0, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #13
  br label %10

10:                                               ; preds = %4, %8
  %11 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  store i64 0, i64* %5, align 8
  %12 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %0) #13
  %13 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %12, i1 zeroext %1, i32 %2, i32 0, %"class.blink::ColorBehavior"* dereferenceable(4) %3, %struct.SkISize* nonnull dereferenceable(8) %6, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  %14 = icmp eq %"class.blink::ImageDecoder"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = ptrtoint %"class.blink::ImageDecoder"* %13 to i64
  %17 = call noalias i8* @malloc(i64 144) #13
  %18 = bitcast i8* %17 to %"class.blink::DeferredImageDecoder"*
  %19 = bitcast i8* %17 to %"class.blink::ParkableImage"**
  store %"class.blink::ParkableImage"* null, %"class.blink::ParkableImage"** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 16
  %23 = getelementptr inbounds i8, i8* %17, i64 32
  %24 = bitcast i8* %23 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #13
  store i32 -2, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 36
  %26 = getelementptr inbounds i8, i8* %17, i64 48
  %27 = getelementptr inbounds i8, i8* %17, i64 64
  %28 = bitcast i8* %27 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 6, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %29 = call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #13
  store i32 %29, i32* %28, align 8
  %30 = getelementptr inbounds i8, i8* %17, i64 68
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %17, i64 70
  store i8 0, i8* %31, align 2
  %32 = getelementptr inbounds i8, i8* %17, i64 72
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds i8, i8* %17, i64 76
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 68, i1 false) #13
  call void @_ZN5blink20DeferredImageDecoder15SetDataInternalE13scoped_refptrIN3WTF12SharedBufferEEbb(%"class.blink::DeferredImageDecoder"* %18, %"class.WTF::SharedBuffer"* %0, i1 zeroext %1, i1 zeroext false)
  br label %42

34:                                               ; preds = %10
  br i1 %7, label %42, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %0) #13
  %41 = bitcast %"class.WTF::SharedBuffer"* %0 to i8*
  call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %15, %34, %35, %40
  %43 = phi %"class.blink::DeferredImageDecoder"* [ %18, %15 ], [ null, %34 ], [ null, %35 ], [ null, %40 ]
  ret %"class.blink::DeferredImageDecoder"* %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoder15SetDataInternalE13scoped_refptrIN3WTF12SharedBufferEEbb(%"class.blink::DeferredImageDecoder"*, %"class.WTF::SharedBuffer"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %5, align 8
  %7 = icmp eq %"class.blink::ImageDecoder"* %6, null
  br i1 %7, label %61, label %8

8:                                                ; preds = %4
  %9 = zext i1 %2 to i8
  %10 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 6
  store i8 %9, i8* %10, align 1
  br i1 %3, label %11, label %60

11:                                               ; preds = %8
  %12 = icmp eq %"class.WTF::SharedBuffer"* %1, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #13
  br label %15

15:                                               ; preds = %11, %13
  %16 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %1) #13
  %17 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %6, i64 0, i32 15
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %46

20:                                               ; preds = %15
  %21 = ptrtoint %"class.blink::SegmentReader"* %16 to i64
  %22 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %6, i64 0, i32 1
  %23 = bitcast %class.scoped_refptr.14* %22 to i64*
  %24 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %22, i64 0, i32 0
  %25 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %24, align 8
  store i64 %21, i64* %23, align 8
  %26 = icmp eq %"class.blink::SegmentReader"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %25, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.16", %"class.base::RefCountedThreadSafe.16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.16", %"class.base::RefCountedThreadSafe.16"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe.16"* %33 to %"class.blink::SegmentReader"*
  %35 = bitcast %"class.base::RefCountedThreadSafe.16"* %33 to void (%"class.blink::SegmentReader"*)***
  %36 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %36, i64 1
  %38 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %37, align 8
  tail call void %38(%"class.blink::SegmentReader"* nonnull %34) #13
  br label %39

39:                                               ; preds = %32, %27, %20
  %40 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %6, i64 0, i32 14
  store i8 %9, i8* %40, align 1
  %41 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %24, align 8
  %42 = bitcast %"class.blink::ImageDecoder"* %6 to void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)***
  %43 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)**, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %43, i64 4
  %45 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %44, align 8
  tail call void %45(%"class.blink::ImageDecoder"* nonnull %6, %"class.blink::SegmentReader"* %41) #13
  br label %60

46:                                               ; preds = %15
  %47 = icmp eq %"class.blink::SegmentReader"* %16, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %16, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.16", %"class.base::RefCountedThreadSafe.16"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.16", %"class.base::RefCountedThreadSafe.16"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe.16"* %54 to %"class.blink::SegmentReader"*
  %56 = bitcast %"class.base::RefCountedThreadSafe.16"* %54 to void (%"class.blink::SegmentReader"*)***
  %57 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %57, i64 1
  %59 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %58, align 8
  tail call void %59(%"class.blink::SegmentReader"* nonnull %55) #13
  br label %60

60:                                               ; preds = %53, %48, %46, %39, %8
  tail call void @_ZN5blink20DeferredImageDecoder24PrepareLazyDecodedFramesEv(%"class.blink::DeferredImageDecoder"* %0)
  br label %61

61:                                               ; preds = %4, %60
  %62 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 20, i32 0
  %63 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %62, align 8
  %64 = icmp eq %"class.blink::ImageFrameGenerator"* %63, null
  br i1 %64, label %86, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %66, align 8
  %68 = icmp eq %"class.blink::ParkableImage"* %67, null
  br i1 %68, label %69, label %83

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = tail call %"class.blink::ParkableImage"* @_ZN5blink13ParkableImage6CreateEm(i64 %71) #13
  %73 = ptrtoint %"class.blink::ParkableImage"* %72 to i64
  %74 = bitcast %"class.blink::DeferredImageDecoder"* %0 to i64*
  %75 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %66, align 8
  store i64 %73, i64* %74, align 8
  %76 = icmp eq %"class.blink::ParkableImage"* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  tail call void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"* nonnull %75) #13
  %82 = bitcast %"class.blink::ParkableImage"* %75 to i8*
  tail call void @free(i8* %82) #13
  br label %83

83:                                               ; preds = %65, %81, %77, %69
  %84 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %66, align 8
  %85 = tail call i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"* %84) #13
  tail call void @_ZN5blink13ParkableImage6AppendEPN3WTF12SharedBufferEm(%"class.blink::ParkableImage"* %84, %"class.WTF::SharedBuffer"* %1, i64 %85) #13
  br label %86

86:                                               ; preds = %61, %83
  br i1 %2, label %87, label %92

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 0, i32 0
  %89 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %88, align 8
  %90 = icmp eq %"class.blink::ParkableImage"* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZN5blink13ParkableImage6FreezeEv(%"class.blink::ParkableImage"* nonnull %89) #13
  br label %92

92:                                               ; preds = %87, %91, %86
  %93 = icmp eq %"class.WTF::SharedBuffer"* %1, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %95) #13
  %96 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %1) #13
  %100 = bitcast %"class.WTF::SharedBuffer"* %1 to i8*
  tail call void @free(i8* %100) #13
  br label %101

101:                                              ; preds = %92, %94, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::DeferredImageDecoder"* @_ZN5blink20DeferredImageDecoder16CreateForTestingENSt3__110unique_ptrINS_12ImageDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.blink::ImageDecoder"* %0 to i64
  %3 = tail call noalias i8* @malloc(i64 144) #13
  %4 = bitcast i8* %3 to %"class.blink::DeferredImageDecoder"*
  %5 = bitcast i8* %3 to %"class.blink::ParkableImage"**
  store %"class.blink::ParkableImage"* null, %"class.blink::ParkableImage"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = getelementptr inbounds i8, i8* %3, i64 32
  %10 = bitcast i8* %9 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #13
  store i32 -2, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 36
  %12 = getelementptr inbounds i8, i8* %3, i64 48
  %13 = getelementptr inbounds i8, i8* %3, i64 64
  %14 = bitcast i8* %13 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 6, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #13
  %15 = tail call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #13
  store i32 %15, i32* %14, align 8
  %16 = getelementptr inbounds i8, i8* %3, i64 68
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %3, i64 70
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds i8, i8* %3, i64 72
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %3, i64 76
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 68, i1 false) #13
  ret %"class.blink::DeferredImageDecoder"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoderC2ENSt3__110unique_ptrINS_12ImageDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::DeferredImageDecoder"* nocapture, %"class.blink::ImageDecoder"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::ImageDecoder"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 0, i32 0
  store %"class.blink::ParkableImage"* null, %"class.blink::ParkableImage"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.11"* %5 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 4
  %9 = bitcast %"class.WTF::StringImpl"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  store i32 -2, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 11, i32 0
  %12 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 13
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 6, i1 false)
  %13 = bitcast %class.SkColorSpace** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  %14 = tail call i32 @_ZN2cc10PaintImage16GetNextContentIdEv() #13
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 15
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %union.anon.62* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 68, i1 false)
  ret void
}

declare i32 @_ZN2cc10PaintImage16GetNextContentIdEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoderD2Ev(%"class.blink::DeferredImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 20, i32 0
  %3 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %2, align 8
  %4 = icmp eq %"class.blink::ImageFrameGenerator"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink19ImageFrameGeneratorD1Ev(%"class.blink::ImageFrameGenerator"* nonnull %3) #13
  %10 = bitcast %"class.blink::ImageFrameGenerator"* %3 to i8*
  tail call void @free(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %5, %9
  %12 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %13 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %12, align 8
  %14 = icmp eq %"struct.blink::DeferredFrameData"* %13, null
  br i1 %14, label %22, label %15, !prof !3

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19, !prof !4

19:                                               ; preds = %15
  store i32 0, i32* %16, align 4
  br label %20

20:                                               ; preds = %19, %15
  %21 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %13, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #13
  store %"struct.blink::DeferredFrameData"* null, %"struct.blink::DeferredFrameData"** %12, align 8
  br label %22

22:                                               ; preds = %11, %20
  %23 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2cc19ImageHeaderMetadataD1Ev(%"struct.cc::ImageHeaderMetadata"* %27) #13
  store i8 0, i8* %23, align 4
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 11, i32 0
  %30 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %31 = icmp eq %class.SkColorSpace* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = bitcast %class.SkColorSpace* %30 to i8*
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %28, %32, %36
  %39 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %56, align 8
  store %"class.blink::ImageDecoder"* null, %"class.blink::ImageDecoder"** %56, align 8
  %58 = icmp eq %"class.blink::ImageDecoder"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::ImageDecoder"* %57 to void (%"class.blink::ImageDecoder"*)***
  %61 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %61, i64 1
  %63 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %62, align 8
  tail call void %63(%"class.blink::ImageDecoder"* nonnull %57) #13
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %65, align 8
  %67 = icmp eq %"class.blink::ParkableImage"* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw sub i32* %69, i32 1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  tail call void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"* nonnull %66) #13
  %73 = bitcast %"class.blink::ParkableImage"* %66 to i8*
  tail call void @free(i8* %73) #13
  br label %74

74:                                               ; preds = %64, %68, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink20DeferredImageDecoder17FilenameExtensionEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ImageDecoder"* %3 to %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)**, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %7, i64 2
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::ImageDecoder"* nonnull %3) #13
  br label %32

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !4

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %11, %5
  %33 = phi %"class.WTF::StringImpl"* [ %10, %5 ], [ null, %11 ], [ %13, %15 ], [ %13, %30 ]
  ret %"class.WTF::StringImpl"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoder15CreateGeneratorEv(%class.sk_sp.109* noalias nocapture sret, %"class.blink::DeferredImageDecoder"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %struct.SkImageInfo, align 8
  %19 = alloca %class.sk_sp.113, align 8
  %20 = alloca %"class.blink::WebVector", align 8
  %21 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 20, i32 0
  %22 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %21, align 8
  %23 = icmp eq %"class.blink::ImageFrameGenerator"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %22, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #13
  %26 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %22, i64 0, i32 6
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #13
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.sk_sp.109, %class.sk_sp.109* %0, i64 0, i32 0
  store %"class.cc::PaintImageGenerator"* null, %"class.cc::PaintImageGenerator"** %30, align 8
  br label %552

31:                                               ; preds = %24, %2
  %32 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 15
  %33 = load i8, i8* %32, align 2, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 18
  %37 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 18, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %31, %35
  %41 = getelementptr inbounds %class.sk_sp.109, %class.sk_sp.109* %0, i64 0, i32 0
  store %"class.cc::PaintImageGenerator"* null, %"class.cc::PaintImageGenerator"** %41, align 8
  br label %552

42:                                               ; preds = %35
  %43 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %21, align 8
  %44 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 0, i32 0
  %45 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %44, align 8
  %46 = tail call %"class.blink::SegmentReader"* @_ZN5blink13ParkableImage14MakeROSnapshotEv(%"class.blink::ParkableImage"* %45) #13
  %47 = bitcast %struct.SkImageInfo* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %48 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %43, i64 0, i32 1, i32 0
  %51 = bitcast %struct.SkImageInfo* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false)
  %52 = load i32, i32* %50, align 4
  %53 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %43, i64 0, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = load i32, i32* %37, align 4
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %61

57:                                               ; preds = %42
  %58 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %21, align 8
  %59 = tail call zeroext i1 @_ZN5blink19ImageFrameGenerator8HasAlphaEm(%"class.blink::ImageFrameGenerator"* %58, i64 0) #13
  %60 = select i1 %59, i64 8589934592, i64 4294967296
  br label %61

61:                                               ; preds = %42, %57
  %62 = phi i64 [ %60, %57 ], [ 8589934592, %42 ]
  %63 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 11, i32 0
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %63, align 8
  %65 = icmp eq %class.SkColorSpace* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic
  br label %69

69:                                               ; preds = %66, %61
  %70 = ptrtoint %class.SkColorSpace* %64 to i64
  %71 = zext i32 %54 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %52 to i64
  %74 = or i64 %72, %73
  %75 = or i64 %62, 6
  %76 = bitcast %struct.SkImageInfo* %18 to i64*
  store i64 %70, i64* %76, align 8, !alias.scope !5
  %77 = bitcast i32* %49 to i64*
  store i64 %75, i64* %77, align 8, !alias.scope !5
  %78 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 1
  %79 = bitcast %struct.SkISize* %78 to i64*
  store i64 %74, i64* %79, align 8, !alias.scope !5
  %80 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 10
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %69
  br i1 %65, label %84, label %86

84:                                               ; preds = %83
  %85 = or i64 %62, 13
  store i64 0, i64* %76, align 8
  br label %98

86:                                               ; preds = %83
  %87 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic, !noalias !10
  %89 = load %class.SkColorSpace*, %class.SkColorSpace** %48, align 8
  %90 = or i64 %62, 13
  store i64 %70, i64* %76, align 8
  %91 = icmp eq %class.SkColorSpace* %89, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = bitcast %class.SkColorSpace* %89 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %96, %92, %86, %84
  %99 = phi i64 [ %85, %84 ], [ %90, %86 ], [ %90, %92 ], [ %90, %96 ]
  store i64 %99, i64* %77, align 8
  store i64 %74, i64* %79, align 8
  br label %100

100:                                              ; preds = %69, %98
  %101 = load i32, i32* %37, align 4
  %102 = zext i32 %101 to i64
  %103 = icmp eq i32 %101, 0
  br i1 %103, label %152, label %104

104:                                              ; preds = %100
  %105 = shl nuw nsw i64 %102, 4
  %106 = tail call i8* @_Znwm(i64 %105) #14
  %107 = bitcast i8* %106 to %"struct.cc::FrameMetadata"*
  %108 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %107, i64 %102
  %109 = shl nuw nsw i64 %102, 4
  %110 = add nsw i64 %109, -16
  %111 = lshr exact i64 %110, 4
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 7
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %104, %115
  %116 = phi %"struct.cc::FrameMetadata"* [ %119, %115 ], [ %107, %104 ]
  %117 = phi i64 [ %120, %115 ], [ %113, %104 ]
  %118 = bitcast %"struct.cc::FrameMetadata"* %116 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %118, align 8
  %119 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %116, i64 1
  %120 = add i64 %117, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %115, !llvm.loop !17

122:                                              ; preds = %115, %104
  %123 = phi %"struct.cc::FrameMetadata"* [ %107, %104 ], [ %119, %115 ]
  %124 = icmp ult i64 %110, 112
  br i1 %124, label %144, label %125

125:                                              ; preds = %122, %125
  %126 = phi %"struct.cc::FrameMetadata"* [ %142, %125 ], [ %123, %122 ]
  %127 = bitcast %"struct.cc::FrameMetadata"* %126 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %127, align 8
  %128 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 1
  %129 = bitcast %"struct.cc::FrameMetadata"* %128 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %129, align 8
  %130 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 2
  %131 = bitcast %"struct.cc::FrameMetadata"* %130 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %131, align 8
  %132 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 3
  %133 = bitcast %"struct.cc::FrameMetadata"* %132 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %133, align 8
  %134 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 4
  %135 = bitcast %"struct.cc::FrameMetadata"* %134 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %135, align 8
  %136 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 5
  %137 = bitcast %"struct.cc::FrameMetadata"* %136 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %137, align 8
  %138 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 6
  %139 = bitcast %"struct.cc::FrameMetadata"* %138 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %139, align 8
  %140 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 7
  %141 = bitcast %"struct.cc::FrameMetadata"* %140 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %141, align 8
  %142 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %126, i64 8
  %143 = icmp eq %"struct.cc::FrameMetadata"* %142, %108
  br i1 %143, label %144, label %125

144:                                              ; preds = %125, %122
  %145 = ptrtoint i8* %106 to i64
  %146 = ptrtoint %"struct.cc::FrameMetadata"* %108 to i64
  %147 = load i32, i32* %37, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = bitcast i8* %106 to %"struct.cc::FrameMetadata"*
  %151 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %190

152:                                              ; preds = %214, %100, %144
  %153 = phi i64 [ %145, %144 ], [ 0, %100 ], [ %145, %214 ]
  %154 = phi i64 [ %146, %144 ], [ 0, %100 ], [ %146, %214 ]
  %155 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %156 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %155, align 8
  %157 = icmp eq %"class.blink::ImageDecoder"* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %152
  %159 = bitcast %"class.blink::ImageDecoder"* %156 to %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)***
  %160 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)**, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*** %159, align 8
  %161 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %160, i64 2
  %162 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %161, align 8
  %163 = tail call %"class.WTF::StringImpl"* %162(%"class.blink::ImageDecoder"* nonnull %156) #13
  br label %185

164:                                              ; preds = %152
  %165 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 2, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %185, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i33
  %177 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %176, i33 1) #13
  %178 = extractvalue { i33, i1 } %177, 1
  %179 = extractvalue { i33, i1 } %177, 0
  %180 = icmp slt i33 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %182, label %183, !prof !4

182:                                              ; preds = %173
  tail call void @llvm.trap() #13
  unreachable

183:                                              ; preds = %173
  %184 = trunc i33 %179 to i32
  store i32 %184, i32* %174, align 4
  br label %185

185:                                              ; preds = %158, %164, %168, %183
  %186 = phi %"class.WTF::StringImpl"* [ %163, %158 ], [ null, %164 ], [ %166, %168 ], [ %166, %183 ]
  %187 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 7
  %188 = load i8, i8* %187, align 2, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %223, label %344

190:                                              ; preds = %149, %214
  %191 = phi i64 [ 0, %149 ], [ %219, %214 ]
  %192 = trunc i64 %191 to i32
  %193 = tail call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %36, i32 %192) #13
  %194 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %193, i64 0, i32 5
  %195 = load i8, i8* %194, align 8, !range !2
  %196 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %150, i64 %191, i32 0
  store i8 %195, i8* %196, align 8
  %197 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %151, align 8
  %198 = icmp eq %"class.blink::ImageDecoder"* %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %190
  %200 = bitcast %"class.blink::ImageDecoder"* %197 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %201 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %200, align 8
  %202 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %201, i64 19
  %203 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %202, align 8
  %204 = tail call i64 %203(%"class.blink::ImageDecoder"* nonnull %197, i64 %191) #13
  br label %205

205:                                              ; preds = %199, %190
  %206 = phi i64 [ %204, %199 ], [ 0, %190 ]
  %207 = load i32, i32* %37, align 4
  %208 = zext i32 %207 to i64
  %209 = icmp ult i64 %191, %208
  br i1 %209, label %210, label %214

210:                                              ; preds = %205
  %211 = tail call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %36, i32 %192) #13
  %212 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %211, i64 0, i32 4, i32 0
  %213 = load i64, i64* %212, align 8
  br label %214

214:                                              ; preds = %205, %210
  %215 = phi i64 [ %213, %210 ], [ %206, %205 ]
  %216 = icmp slt i64 %215, 10001
  %217 = select i1 %216, i64 100000, i64 %215
  %218 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %150, i64 %191, i32 1, i32 0
  store i64 %217, i64* %218, align 8
  %219 = add nuw nsw i64 %191, 1
  %220 = load i32, i32* %37, align 4
  %221 = zext i32 %220 to i64
  %222 = icmp ult i64 %219, %221
  br i1 %222, label %190, label %152

223:                                              ; preds = %185
  %224 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 6
  %225 = load i8, i8* %224, align 1, !range !2
  %226 = xor i8 %225, 1
  %227 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %228 = bitcast i8* %227 to i16*
  %229 = zext i8 %226 to i16
  %230 = shl nuw nsw i16 %229, 8
  %231 = or i16 %230, 1
  store i16 %231, i16* %228, align 4
  %232 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #13
  %233 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %233, label %234, label %238

234:                                              ; preds = %223
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %235, align 8
  %236 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %237 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %236, i64* %237, align 8
  br label %246

238:                                              ; preds = %223
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %244 = bitcast i8** %243 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %244, align 8
  %245 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %246

246:                                              ; preds = %238, %234
  %247 = phi i64 [ %245, %238 ], [ %236, %234 ]
  %248 = phi i32 [ %241, %238 ], [ 0, %234 ]
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %248, i32* %249, align 8
  %250 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #13
  %251 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %247, i64* %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 3, i32* %253, align 8
  %254 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #13
  br i1 %254, label %278, label %255

255:                                              ; preds = %246
  %256 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %256) #13
  br i1 %233, label %257, label %261

257:                                              ; preds = %255
  %258 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %258, align 8
  %259 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %260 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %259, i64* %260, align 8
  br label %269

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %262, align 8
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %267 = bitcast i8** %266 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %265, %"class.WTF::StringImpl"** %267, align 8
  %268 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %269

269:                                              ; preds = %261, %257
  %270 = phi i64 [ %268, %261 ], [ %259, %257 ]
  %271 = phi i32 [ %264, %261 ], [ 0, %257 ]
  %272 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %271, i32* %272, align 8
  %273 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #13
  %274 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %270, i64* %274, align 8
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 4, i32* %276, align 8
  %277 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %256) #13
  br i1 %277, label %278, label %344

278:                                              ; preds = %269, %246
  %279 = load i8, i8* %224, align 1, !range !2
  %280 = icmp eq i8 %279, 0
  %281 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #13
  br i1 %233, label %282, label %286

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %283, align 8
  %284 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %285 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %284, i64* %285, align 8
  br label %294

286:                                              ; preds = %278
  %287 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %291 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %292 = bitcast i8** %291 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %290, %"class.WTF::StringImpl"** %292, align 8
  %293 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %294

294:                                              ; preds = %286, %282
  %295 = phi i64 [ %293, %286 ], [ %284, %282 ]
  %296 = phi i32 [ %289, %286 ], [ 0, %282 ]
  %297 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %296, i32* %297, align 8
  %298 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %298) #13
  %299 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %295, i64* %299, align 8
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %300, align 8
  %301 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 3, i32* %301, align 8
  %302 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %298) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #13
  br i1 %302, label %303, label %305

303:                                              ; preds = %294
  %304 = zext i8 %279 to i32
  br label %330

305:                                              ; preds = %294
  %306 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #13
  br i1 %233, label %307, label %311

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %308, align 8
  %309 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %310 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %309, i64* %310, align 8
  br label %319

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %312, align 8
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %317 = bitcast i8** %316 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %317, align 8
  %318 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %319

319:                                              ; preds = %311, %307
  %320 = phi i64 [ %318, %311 ], [ %309, %307 ]
  %321 = phi i32 [ %314, %311 ], [ 0, %307 ]
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %321, i32* %322, align 8
  %323 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #13
  %324 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %320, i64* %324, align 8
  %325 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %325, align 8
  %326 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 4, i32* %326, align 8
  %327 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #13
  br i1 %327, label %328, label %344

328:                                              ; preds = %319
  %329 = select i1 %280, i32 2, i32 3
  br label %330

330:                                              ; preds = %328, %303
  %331 = phi i32 [ %329, %328 ], [ %304, %303 ]
  %332 = load atomic i64, i64* @_ZZN5blink12_GLOBAL__N_129ReportIncrementalDecodeNeededEbRKN3WTF6StringEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %333 = inttoptr i64 %332 to %"class.base::HistogramBase"*
  %334 = icmp eq i64 %332, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %330
  %336 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #13
  %337 = ptrtoint %"class.base::HistogramBase"* %336 to i64
  store atomic i64 %337, i64* @_ZZN5blink12_GLOBAL__N_129ReportIncrementalDecodeNeededEbRKN3WTF6StringEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %338

338:                                              ; preds = %335, %330
  %339 = phi %"class.base::HistogramBase"* [ %333, %330 ], [ %336, %335 ]
  %340 = bitcast %"class.base::HistogramBase"* %339 to void (%"class.base::HistogramBase"*, i32)***
  %341 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %341, i64 6
  %343 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %342, align 8
  call void %343(%"class.base::HistogramBase"* %339, i32 %331) #13
  br label %344

344:                                              ; preds = %338, %319, %185, %269
  %345 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %346 = load i8, i8* %345, align 1, !range !2
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %344
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %351 = load i8, i8* %350, align 1, !range !2
  %352 = xor i8 %351, 1
  %353 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 8
  %354 = load i8, i8* %353, align 1, !range !2
  %355 = and i8 %354, %352
  store i8 %355, i8* %353, align 1
  %356 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %357 = load i8, i8* %356, align 4, !range !2
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %359, label %360, !prof !4

359:                                              ; preds = %349
  call void @llvm.trap() #13
  unreachable

360:                                              ; preds = %349
  %361 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0
  %362 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  store i8 %352, i8* %362, align 1
  %363 = bitcast %class.sk_sp.113* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #13
  %364 = getelementptr inbounds %class.sk_sp.113, %class.sk_sp.113* %19, i64 0, i32 0
  store %"class.blink::DecodingImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.blink::DecodingImageGenerator"*), %"class.blink::DecodingImageGenerator"** %364, align 8
  %365 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %21, align 8
  %366 = icmp eq %"class.blink::ImageFrameGenerator"* %365, null
  br i1 %366, label %374, label %367

367:                                              ; preds = %360
  %368 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %365, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = atomicrmw add i32* %368, i32 1 monotonic
  %370 = icmp sgt i32 %369, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %367
  %372 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %372) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #13
  %373 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %372) #13
  br label %374

374:                                              ; preds = %360, %367, %371
  %375 = bitcast %"class.blink::WebVector"* %20 to i64*
  store i64 %153, i64* %375, align 8
  %376 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %20, i64 0, i32 0, i32 0, i32 1
  %377 = bitcast %"struct.cc::FrameMetadata"** %376 to i64*
  store i64 %154, i64* %377, align 8
  %378 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %20, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %379 = bitcast %"struct.cc::FrameMetadata"** %378 to i64*
  store i64 %154, i64* %379, align 8
  %380 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 6
  %381 = load i8, i8* %356, align 4, !range !2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %383, label %384, !prof !4

383:                                              ; preds = %374
  call void @llvm.trap() #13
  unreachable

384:                                              ; preds = %374
  %385 = load i8, i8* %353, align 1, !range !2
  %386 = icmp ne i8 %385, 0
  %387 = load i8, i8* %380, align 1, !range !2
  %388 = icmp ne i8 %387, 0
  %389 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %1, i64 0, i32 13
  %390 = load i32, i32* %389, align 8
  call void @_ZN5blink22DecodingImageGenerator6CreateE13scoped_refptrINS_19ImageFrameGeneratorEERK11SkImageInfoS1_INS_13SegmentReaderEENS_9WebVectorIN2cc13FrameMetadataEEEibbRKNSA_19ImageHeaderMetadataE(%class.sk_sp.113* nonnull sret %19, %"class.blink::ImageFrameGenerator"* %365, %struct.SkImageInfo* nonnull dereferenceable(24) %18, %"class.blink::SegmentReader"* %46, %"class.blink::WebVector"* nonnull %20, i32 %390, i1 zeroext %388, i1 zeroext %386, %"struct.cc::ImageHeaderMetadata"* dereferenceable(36) %361) #13
  %391 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %20, i64 0, i32 0, i32 0, i32 0
  %392 = load %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"** %391, align 8
  %393 = icmp eq %"struct.cc::FrameMetadata"* %392, null
  br i1 %393, label %397, label %394

394:                                              ; preds = %384
  %395 = ptrtoint %"struct.cc::FrameMetadata"* %392 to i64
  store i64 %395, i64* %377, align 8
  %396 = getelementptr inbounds %"struct.cc::FrameMetadata", %"struct.cc::FrameMetadata"* %392, i64 0, i32 0
  call void @_ZdlPv(i8* %396) #14
  br label %397

397:                                              ; preds = %384, %394
  store i8 1, i8* %187, align 2
  %398 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %44, align 8
  %399 = icmp eq %"class.blink::ParkableImage"* %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  %401 = call i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"* nonnull %398) #13
  br label %402

402:                                              ; preds = %397, %400
  %403 = phi i64 [ %401, %400 ], [ 0, %397 ]
  %404 = load i8, i8* %380, align 1, !range !2
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %524, label %406

406:                                              ; preds = %402
  %407 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %407) #13
  %408 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %408, label %409, label %413

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %410, align 8
  %411 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %412 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %411, i64* %412, align 8
  br label %421

413:                                              ; preds = %406
  %414 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %414, align 8
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %418 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %419 = bitcast i8** %418 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %417, %"class.WTF::StringImpl"** %419, align 8
  %420 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %421

421:                                              ; preds = %413, %409
  %422 = phi i64 [ %420, %413 ], [ %411, %409 ]
  %423 = phi i32 [ %416, %413 ], [ 0, %409 ]
  %424 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %423, i32* %424, align 8
  %425 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %425) #13
  %426 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %422, i64* %426, align 8
  %427 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %427, align 8
  %428 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %428, align 8
  %429 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %425) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %407) #13
  br i1 %429, label %453, label %430

430:                                              ; preds = %421
  %431 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %431) #13
  br i1 %408, label %432, label %436

432:                                              ; preds = %430
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %433, align 8
  %434 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %435 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %434, i64* %435, align 8
  br label %444

436:                                              ; preds = %430
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %437, align 8
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %439 = load i32, i32* %438, align 4
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %441 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %442 = bitcast i8** %441 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %440, %"class.WTF::StringImpl"** %442, align 8
  %443 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %444

444:                                              ; preds = %436, %432
  %445 = phi i64 [ %443, %436 ], [ %434, %432 ]
  %446 = phi i32 [ %439, %436 ], [ 0, %432 ]
  %447 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %446, i32* %447, align 8
  %448 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %448) #13
  %449 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %445, i64* %449, align 8
  %450 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %450, align 8
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %451, align 8
  %452 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %448) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %431) #13
  br i1 %452, label %453, label %524

453:                                              ; preds = %444, %421
  %454 = load i8, i8* %345, align 1, !range !2
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %453
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

457:                                              ; preds = %453
  %458 = load i8, i8* %350, align 1, !range !2
  %459 = icmp ne i8 %458, 0
  %460 = call i1 @llvm.is.constant.i64(i64 %403) #13
  %461 = icmp ult i64 %403, 2147483648
  %462 = trunc i64 %403 to i32
  %463 = select i1 %461, i32 %462, i32 2147483647
  %464 = icmp ult i64 %403, 2147483647
  %465 = select i1 %464, i64 %403, i64 2147483647
  %466 = trunc i64 %465 to i32
  %467 = select i1 %460, i32 %466, i32 %463
  %468 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %468) #13
  br i1 %408, label %469, label %473

469:                                              ; preds = %457
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %470, align 8
  %471 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %472 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %471, i64* %472, align 8
  br label %481

473:                                              ; preds = %457
  %474 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %474, align 8
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %478 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %479 = bitcast i8** %478 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %477, %"class.WTF::StringImpl"** %479, align 8
  %480 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %481

481:                                              ; preds = %473, %469
  %482 = phi i64 [ %480, %473 ], [ %471, %469 ]
  %483 = phi i32 [ %476, %473 ], [ 0, %469 ]
  %484 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %483, i32* %484, align 8
  %485 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %485) #13
  %486 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %482, i64* %486, align 8
  %487 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %487, align 8
  %488 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 3, i32* %488, align 8
  %489 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %485) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %468) #13
  br i1 %489, label %490, label %507

490:                                              ; preds = %481
  br i1 %459, label %491, label %499

491:                                              ; preds = %490
  %492 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram to i8*) acquire, align 8
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %494, label %498, !prof !19

494:                                              ; preds = %491
  %495 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram) #13
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %498, label %497

497:                                              ; preds = %494
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 125, i32 15000000, i32 100) #13
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram) #13
  br label %498

498:                                              ; preds = %497, %494, %491
  call void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_jpeg_byte_size_incrementally_decoded_histogram to %"class.blink::CustomCountHistogram"*), i32 %467) #13
  br label %524

499:                                              ; preds = %490
  %500 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram to i8*) acquire, align 8
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %502, label %506, !prof !19

502:                                              ; preds = %499
  %503 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram) #13
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %506, label %505

505:                                              ; preds = %502
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 125, i32 15000000, i32 100) #13
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram) #13
  br label %506

506:                                              ; preds = %505, %502, %499
  call void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_jpeg_byte_size_initially_fully_decoded_histogram to %"class.blink::CustomCountHistogram"*), i32 %467) #13
  br label %524

507:                                              ; preds = %481
  br i1 %459, label %508, label %516

508:                                              ; preds = %507
  %509 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram to i8*) acquire, align 8
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %511, label %515, !prof !19

511:                                              ; preds = %508
  %512 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram) #13
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %515, label %514

514:                                              ; preds = %511
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0), i32 125, i32 15000000, i32 100) #13
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram) #13
  br label %515

515:                                              ; preds = %514, %511, %508
  call void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE48s_webp_byte_size_incrementally_decoded_histogram to %"class.blink::CustomCountHistogram"*), i32 %467) #13
  br label %524

516:                                              ; preds = %507
  %517 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram to i8*) acquire, align 8
  %518 = icmp eq i8 %517, 0
  br i1 %518, label %519, label %523, !prof !19

519:                                              ; preds = %516
  %520 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram) #13
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %523, label %522

522:                                              ; preds = %519
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 125, i32 15000000, i32 100) #13
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram) #13
  br label %523

523:                                              ; preds = %522, %519, %516
  call void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_141RecordByteSizeAndWhetherIncrementalDecodeERKN3WTF6StringEbmE50s_webp_byte_size_initially_fully_decoded_histogram to %"class.blink::CustomCountHistogram"*), i32 %467) #13
  br label %524

524:                                              ; preds = %444, %402, %498, %506, %515, %523
  %525 = getelementptr inbounds %class.sk_sp.109, %class.sk_sp.109* %0, i64 0, i32 0
  %526 = load %"class.blink::DecodingImageGenerator"*, %"class.blink::DecodingImageGenerator"** %364, align 8
  %527 = getelementptr inbounds %"class.blink::DecodingImageGenerator", %"class.blink::DecodingImageGenerator"* %526, i64 0, i32 0
  store %"class.cc::PaintImageGenerator"* %527, %"class.cc::PaintImageGenerator"** %525, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #13
  %528 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %524
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #13
  br label %542

542:                                              ; preds = %541, %538, %524
  %543 = load %class.SkColorSpace*, %class.SkColorSpace** %48, align 8
  %544 = icmp eq %class.SkColorSpace* %543, null
  br i1 %544, label %551, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = atomicrmw add i32* %546, i32 -1 acq_rel
  %548 = icmp eq i32 %547, 1
  br i1 %548, label %549, label %551

549:                                              ; preds = %545
  %550 = bitcast %class.SkColorSpace* %543 to i8*
  call void @_ZdlPv(i8* %550) #14
  br label %551

551:                                              ; preds = %549, %545, %542
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  br label %552

552:                                              ; preds = %551, %40, %29
  ret void
}

declare %"class.blink::SegmentReader"* @_ZN5blink13ParkableImage14MakeROSnapshotEv(%"class.blink::ParkableImage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20DeferredImageDecoder9AlphaTypeEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 20, i32 0
  %7 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %6, align 8
  %8 = tail call zeroext i1 @_ZN5blink19ImageFrameGenerator8HasAlphaEm(%"class.blink::ImageFrameGenerator"* %7, i64 0) #13
  %9 = select i1 %8, i32 2, i32 1
  ret i32 %9

10:                                               ; preds = %1
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20DeferredImageDecoder20FrameDurationAtIndexEm(%"class.blink::DeferredImageDecoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ImageDecoder"* %4 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %8 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %8, i64 19
  %10 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %9, align 8
  %11 = tail call i64 %10(%"class.blink::ImageDecoder"* nonnull %4, i64 %1) #13
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i64 [ %11, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = icmp ugt i64 %16, %1
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18
  %20 = trunc i64 %1 to i32
  %21 = tail call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %19, i32 %20) #13
  %22 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %21, i64 0, i32 4, i32 0
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %18, %12
  %25 = phi i64 [ %23, %18 ], [ %13, %12 ]
  %26 = icmp slt i64 %25, 10001
  %27 = select i1 %26, i64 100000, i64 %25
  ret i64 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink22DecodingImageGenerator6CreateE13scoped_refptrINS_19ImageFrameGeneratorEERK11SkImageInfoS1_INS_13SegmentReaderEENS_9WebVectorIN2cc13FrameMetadataEEEibbRKNSA_19ImageHeaderMetadataE(%class.sk_sp.113* sret, %"class.blink::ImageFrameGenerator"*, %struct.SkImageInfo* dereferenceable(24), %"class.blink::SegmentReader"*, %"class.blink::WebVector"*, i32, i1 zeroext, i1 zeroext, %"struct.cc::ImageHeaderMetadata"* dereferenceable(36)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20DeferredImageDecoder8ByteSizeEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableImage"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"* nonnull %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::SharedBuffer"* @_ZN5blink20DeferredImageDecoder4DataEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableImage"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::SharedBuffer"* @_ZN5blink13ParkableImage4DataEv(%"class.blink::ParkableImage"* nonnull %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.WTF::SharedBuffer"* [ %6, %5 ], [ null, %1 ]
  ret %"class.WTF::SharedBuffer"* %8
}

declare %"class.WTF::SharedBuffer"* @_ZN5blink13ParkableImage4DataEv(%"class.blink::ParkableImage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoder7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::DeferredImageDecoder"*, %"class.WTF::SharedBuffer"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20DeferredImageDecoder15SetDataInternalE13scoped_refptrIN3WTF12SharedBufferEEbb(%"class.blink::DeferredImageDecoder"* %0, %"class.WTF::SharedBuffer"* %1, i1 zeroext %2, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoder24PrepareLazyDecodedFramesEv(%"class.blink::DeferredImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.cc::ImageHeaderMetadata", align 4
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %272, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* nonnull %4) #13
  br i1 %7, label %8, label %272

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 15
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %272

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = bitcast %"struct.cc::ImageHeaderMetadata"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %17) #13
  %18 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %19 = bitcast %"class.blink::ImageDecoder"* %18 to void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)***
  %20 = load void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)**, void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)*, void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)** %20, i64 13
  %22 = load void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)*, void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)** %21, align 8
  call void %22(%"struct.cc::ImageHeaderMetadata"* nonnull sret %2, %"class.blink::ImageDecoder"* %18) #13
  %23 = load i8, i8* %13, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %24, label %28, label %26

26:                                               ; preds = %16
  %27 = call dereferenceable(36) %"struct.cc::ImageHeaderMetadata"* @_ZN2cc19ImageHeaderMetadataaSERKS0_(%"struct.cc::ImageHeaderMetadata"* %25, %"struct.cc::ImageHeaderMetadata"* nonnull dereferenceable(36) %2) #13
  br label %29

28:                                               ; preds = %16
  call void @_ZN2cc19ImageHeaderMetadataC1ERKS0_(%"struct.cc::ImageHeaderMetadata"* %25, %"struct.cc::ImageHeaderMetadata"* nonnull dereferenceable(36) %2) #13
  store i8 1, i8* %13, align 4
  br label %29

29:                                               ; preds = %28, %26
  call void @_ZN2cc19ImageHeaderMetadataD1Ev(%"struct.cc::ImageHeaderMetadata"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %17) #13
  %30 = load i8, i8* %13, align 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %33, !prof !4

32:                                               ; preds = %29
  call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %12, %29
  %34 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %37, %41
  store i8 1, i8* %9, align 2
  br label %272

46:                                               ; preds = %33, %41
  call void @_ZN5blink20DeferredImageDecoder20ActivateLazyDecodingEv(%"class.blink::DeferredImageDecoder"* %0)
  %47 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18
  %48 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %52 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %51) #13
  %53 = trunc i64 %52 to i32
  %54 = load i32, i32* %48, align 4
  %55 = icmp ult i32 %54, %53
  br i1 %55, label %56, label %170

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp ult i32 %58, %53
  br i1 %59, label %60, label %99

60:                                               ; preds = %56
  %61 = lshr i32 %58, 2
  %62 = add nuw i32 %58, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %53
  %67 = select i1 %66, i32 %65, i32 %53
  %68 = icmp ult i32 %58, %67
  br i1 %68, label %69, label %99, !prof !3

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %47, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %70, align 8
  %72 = icmp eq %"struct.blink::DeferredFrameData"* %71, null
  %73 = zext i32 %67 to i64
  %74 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17DeferredFrameDataEEEmm(i64 %73) #13
  %75 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17DeferredFrameDataEEEPKcv, i64 0, i64 0)) #13
  br i1 %72, label %76, label %81

76:                                               ; preds = %69
  %77 = ptrtoint i8* %75 to i64
  %78 = bitcast %"class.WTF::Vector.68"* %47 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = lshr i64 %74, 5
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %57, align 8
  br label %99

81:                                               ; preds = %69
  %82 = lshr i64 %74, 5
  %83 = ptrtoint i8* %75 to i64
  %84 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %70, align 8
  %85 = icmp ne i8* %75, null
  %86 = icmp ne %"struct.blink::DeferredFrameData"* %84, null
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %94, !prof !3

88:                                               ; preds = %81
  %89 = load i32, i32* %48, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %84, i64 0, i32 0, i32 0
  %92 = shl nuw nsw i64 %90, 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 %91, i64 %92, i1 false) #13
  %93 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %70, align 8
  br label %94

94:                                               ; preds = %88, %81
  %95 = phi %"struct.blink::DeferredFrameData"* [ %84, %81 ], [ %93, %88 ]
  %96 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %95, i64 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %96) #13
  %97 = bitcast %"class.WTF::Vector.68"* %47 to i64*
  store atomic i64 %83, i64* %97 monotonic, align 8
  %98 = trunc i64 %82 to i32
  store i32 %98, i32* %57, align 8
  br label %99

99:                                               ; preds = %94, %76, %60, %56
  %100 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %47, i64 0, i32 0, i32 0, i32 0
  %101 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %100, align 8
  %102 = load i32, i32* %48, align 4
  %103 = and i64 %52, 4294967295
  %104 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %101, i64 %103
  %105 = icmp eq i32 %102, %53
  br i1 %105, label %170, label %106

106:                                              ; preds = %99
  %107 = zext i32 %102 to i64
  %108 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %101, i64 %107
  %109 = shl nuw nsw i64 %103, 5
  %110 = add nsw i64 %109, -32
  %111 = shl nuw nsw i64 %107, 5
  %112 = sub nsw i64 %110, %111
  %113 = lshr exact i64 %112, 5
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %131, label %117

117:                                              ; preds = %106, %117
  %118 = phi %"struct.blink::DeferredFrameData"* [ %128, %117 ], [ %108, %106 ]
  %119 = phi i64 [ %129, %117 ], [ %115, %106 ]
  %120 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %118, i64 0, i32 0, i32 0
  store i8 1, i8* %120, align 1
  %121 = getelementptr inbounds i8, i8* %120, i64 4
  %122 = bitcast i8* %121 to i32*
  store i32 0, i32* %122, align 4
  %123 = getelementptr inbounds i8, i8* %120, i64 8
  %124 = bitcast i8* %123 to i32*
  store i32 0, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %120, i64 16
  %126 = bitcast i8* %125 to i64*
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %120, i64 24
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %118, i64 1
  %129 = add i64 %119, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %117, !llvm.loop !20

131:                                              ; preds = %117, %106
  %132 = phi %"struct.blink::DeferredFrameData"* [ %108, %106 ], [ %128, %117 ]
  %133 = icmp ult i64 %112, 96
  br i1 %133, label %170, label %134

134:                                              ; preds = %131, %134
  %135 = phi %"struct.blink::DeferredFrameData"* [ %168, %134 ], [ %132, %131 ]
  %136 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %135, i64 0, i32 0, i32 0
  store i8 1, i8* %136, align 1
  %137 = getelementptr inbounds i8, i8* %136, i64 4
  %138 = bitcast i8* %137 to i32*
  store i32 0, i32* %138, align 4
  %139 = getelementptr inbounds i8, i8* %136, i64 8
  %140 = bitcast i8* %139 to i32*
  store i32 0, i32* %140, align 4
  %141 = getelementptr inbounds i8, i8* %136, i64 16
  %142 = bitcast i8* %141 to i64*
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds i8, i8* %136, i64 24
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %135, i64 1, i32 0, i32 0
  store i8 1, i8* %144, align 1
  %145 = getelementptr inbounds i8, i8* %144, i64 4
  %146 = bitcast i8* %145 to i32*
  store i32 0, i32* %146, align 4
  %147 = getelementptr inbounds i8, i8* %144, i64 8
  %148 = bitcast i8* %147 to i32*
  store i32 0, i32* %148, align 4
  %149 = getelementptr inbounds i8, i8* %144, i64 16
  %150 = bitcast i8* %149 to i64*
  store i64 0, i64* %150, align 8
  %151 = getelementptr inbounds i8, i8* %144, i64 24
  store i8 0, i8* %151, align 8
  %152 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %135, i64 2, i32 0, i32 0
  store i8 1, i8* %152, align 1
  %153 = getelementptr inbounds i8, i8* %152, i64 4
  %154 = bitcast i8* %153 to i32*
  store i32 0, i32* %154, align 4
  %155 = getelementptr inbounds i8, i8* %152, i64 8
  %156 = bitcast i8* %155 to i32*
  store i32 0, i32* %156, align 4
  %157 = getelementptr inbounds i8, i8* %152, i64 16
  %158 = bitcast i8* %157 to i64*
  store i64 0, i64* %158, align 8
  %159 = getelementptr inbounds i8, i8* %152, i64 24
  store i8 0, i8* %159, align 8
  %160 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %135, i64 3, i32 0, i32 0
  store i8 1, i8* %160, align 1
  %161 = getelementptr inbounds i8, i8* %160, i64 4
  %162 = bitcast i8* %161 to i32*
  store i32 0, i32* %162, align 4
  %163 = getelementptr inbounds i8, i8* %160, i64 8
  %164 = bitcast i8* %163 to i32*
  store i32 0, i32* %164, align 4
  %165 = getelementptr inbounds i8, i8* %160, i64 16
  %166 = bitcast i8* %165 to i64*
  store i64 0, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %160, i64 24
  store i8 0, i8* %167, align 8
  %168 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %135, i64 4
  %169 = icmp eq %"struct.blink::DeferredFrameData"* %168, %104
  br i1 %169, label %170, label %134

170:                                              ; preds = %131, %134, %46, %99
  store i32 %53, i32* %48, align 4
  %171 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %172 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %171, i64 0, i32 15
  %173 = load i8, i8* %172, align 2, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %170
  store i8 1, i8* %9, align 2
  br label %272

176:                                              ; preds = %170
  %177 = icmp ugt i32 %49, %53
  br i1 %177, label %182, label %178

178:                                              ; preds = %176
  %179 = icmp ult i32 %49, %53
  br i1 %179, label %190, label %180

180:                                              ; preds = %178
  %181 = and i64 %52, 4294967295
  br label %185

182:                                              ; preds = %176
  store i8 1, i8* %9, align 2
  br label %272

183:                                              ; preds = %190
  %184 = zext i32 %214 to i64
  br label %185

185:                                              ; preds = %183, %180
  %186 = phi i64 [ %181, %180 ], [ %184, %183 ]
  %187 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 19
  %188 = load i64, i64* %187, align 8
  %189 = icmp ult i64 %188, %186
  br i1 %189, label %219, label %237

190:                                              ; preds = %178, %217
  %191 = phi %"class.blink::ImageDecoder"* [ %218, %217 ], [ %171, %178 ]
  %192 = phi i64 [ %213, %217 ], [ %50, %178 ]
  %193 = bitcast %"class.blink::ImageDecoder"* %191 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %194 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %193, align 8
  %195 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %194, i64 19
  %196 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %195, align 8
  %197 = call i64 %196(%"class.blink::ImageDecoder"* %191, i64 %192) #13
  %198 = trunc i64 %192 to i32
  %199 = call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %47, i32 %198) #13
  %200 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %199, i64 0, i32 4, i32 0
  store i64 %197, i64* %200, align 8
  %201 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %202 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %201, i64 0, i32 6, i32 0
  %203 = load i8, i8* %202, align 4
  %204 = call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %47, i32 %198) #13
  %205 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %204, i64 0, i32 0, i32 0
  store i8 %203, i8* %205, align 8
  %206 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %207 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %206, i64 0, i32 7
  %208 = bitcast %"class.blink::IntSize"* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %47, i32 %198) #13
  %211 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %210, i64 0, i32 2
  %212 = bitcast %"class.blink::IntSize"* %211 to i64*
  store i64 %209, i64* %212, align 4
  %213 = add nuw nsw i64 %192, 1
  %214 = load i32, i32* %48, align 4
  %215 = zext i32 %214 to i64
  %216 = icmp ult i64 %213, %215
  br i1 %216, label %217, label %183

217:                                              ; preds = %190
  %218 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  br label %190

219:                                              ; preds = %185, %227
  %220 = phi i64 [ %233, %227 ], [ %188, %185 ]
  %221 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %222 = bitcast %"class.blink::ImageDecoder"* %221 to i1 (%"class.blink::ImageDecoder"*, i64)***
  %223 = load i1 (%"class.blink::ImageDecoder"*, i64)**, i1 (%"class.blink::ImageDecoder"*, i64)*** %222, align 8
  %224 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*, i64)*, i1 (%"class.blink::ImageDecoder"*, i64)** %223, i64 18
  %225 = load i1 (%"class.blink::ImageDecoder"*, i64)*, i1 (%"class.blink::ImageDecoder"*, i64)** %224, align 8
  %226 = call zeroext i1 %225(%"class.blink::ImageDecoder"* %221, i64 %220) #13
  br i1 %226, label %227, label %237

227:                                              ; preds = %219
  %228 = load i64, i64* %187, align 8
  %229 = add i64 %228, 1
  store i64 %229, i64* %187, align 8
  %230 = trunc i64 %228 to i32
  %231 = call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %47, i32 %230) #13
  %232 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %231, i64 0, i32 5
  store i8 1, i8* %232, align 8
  %233 = load i64, i64* %187, align 8
  %234 = load i32, i32* %48, align 4
  %235 = zext i32 %234 to i64
  %236 = icmp ult i64 %233, %235
  br i1 %236, label %219, label %237

237:                                              ; preds = %219, %227, %185
  %238 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %239 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %238, i64 0, i32 9
  %240 = load i8, i8* %239, align 8, !range !2
  %241 = icmp eq i8 %240, 0
  %242 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 6
  %243 = load i8, i8* %242, align 1, !range !2
  br i1 %241, label %255, label %244

244:                                              ; preds = %237
  %245 = icmp eq i8 %243, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 8
  store i8 0, i8* %247, align 1
  br label %272

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 20, i32 0
  %250 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %250, i64 0, i32 3
  %252 = load i8, i8* %251, align 8, !range !2
  %253 = xor i8 %252, 1
  %254 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 8
  store i8 %253, i8* %254, align 1
  br label %258

255:                                              ; preds = %237
  %256 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 8
  store i8 0, i8* %256, align 1
  %257 = icmp eq i8 %243, 0
  br i1 %257, label %272, label %258

258:                                              ; preds = %248, %255
  %259 = bitcast %"class.blink::ImageDecoder"* %238 to i32 (%"class.blink::ImageDecoder"*)***
  %260 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %259, align 8
  %261 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %260, i64 16
  %262 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %261, align 8
  %263 = call i32 %262(%"class.blink::ImageDecoder"* %238) #13
  %264 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 4
  store i32 %263, i32* %264, align 8
  %265 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  store %"class.blink::ImageDecoder"* null, %"class.blink::ImageDecoder"** %3, align 8
  %266 = icmp eq %"class.blink::ImageDecoder"* %265, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %258
  %268 = bitcast %"class.blink::ImageDecoder"* %265 to void (%"class.blink::ImageDecoder"*)***
  %269 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %269, i64 1
  %271 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %270, align 8
  call void %271(%"class.blink::ImageDecoder"* nonnull %265) #13
  br label %272

272:                                              ; preds = %246, %1, %267, %258, %175, %182, %255, %8, %6, %45
  ret void
}

declare %"class.blink::ParkableImage"* @_ZN5blink13ParkableImage6CreateEm(i64) local_unnamed_addr #2

declare void @_ZN5blink13ParkableImage6AppendEPN3WTF12SharedBufferEm(%"class.blink::ParkableImage"*, %"class.WTF::SharedBuffer"*, i64) local_unnamed_addr #2

declare i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"*) local_unnamed_addr #2

declare void @_ZN5blink13ParkableImage6FreezeEv(%"class.blink::ParkableImage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20DeferredImageDecoder15IsSizeAvailableEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* nonnull %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ %6, %5 ], [ true, %1 ]
  ret i1 %8
}

declare zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20DeferredImageDecoder23HasEmbeddedColorProfileEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %6, align 8
  %8 = icmp ne %"class.blink::ColorProfile"* %7, null
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %9, %5
  %14 = phi i1 [ %8, %5 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20DeferredImageDecoder4SizeEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ImageDecoder"* %3 to i64 (%"class.blink::ImageDecoder"*)***
  %7 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %7, i64 5
  %9 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %8, align 8
  %10 = tail call i64 %9(%"class.blink::ImageDecoder"* nonnull %3) #13
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 3
  %13 = bitcast %"class.blink::IntSize"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i64 [ %10, %5 ], [ %14, %11 ]
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20DeferredImageDecoder16FrameSizeAtIndexEm(%"class.blink::DeferredImageDecoder"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ImageDecoder"* %4 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %8 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %8, i64 14
  %10 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %9, align 8
  %11 = tail call i64 %10(%"class.blink::ImageDecoder"* nonnull %4, i64 %1) #13
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 3
  %14 = bitcast %"class.blink::IntSize"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i64 [ %11, %6 ], [ %15, %12 ]
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink20DeferredImageDecoder10FrameCountEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* nonnull %3) #13
  br label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi i64 [ %6, %5 ], [ %10, %7 ]
  ret i64 %12
}

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20DeferredImageDecoder15RepetitionCountEv(%"class.blink::DeferredImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ImageDecoder"* %3 to i32 (%"class.blink::ImageDecoder"*)***
  %7 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %7, i64 16
  %9 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::ImageDecoder"* nonnull %3) #13
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi i32 [ %10, %5 ], [ %13, %11 ]
  ret i32 %15
}

declare zeroext i1 @_ZN5blink19ImageFrameGenerator8HasAlphaEm(%"class.blink::ImageFrameGenerator"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20DeferredImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::DeferredImageDecoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ImageDecoder"* %4 to i1 (%"class.blink::ImageDecoder"*, i64)***
  %8 = load i1 (%"class.blink::ImageDecoder"*, i64)**, i1 (%"class.blink::ImageDecoder"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*, i64)*, i1 (%"class.blink::ImageDecoder"*, i64)** %8, i64 18
  %10 = load i1 (%"class.blink::ImageDecoder"*, i64)*, i1 (%"class.blink::ImageDecoder"*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::ImageDecoder"* nonnull %4, i64 %1) #13
  br label %24

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = icmp ugt i64 %15, %1
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18
  %19 = trunc i64 %1 to i32
  %20 = tail call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %18, i32 %19) #13
  %21 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %20, i64 0, i32 5
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp ne i8 %22, 0
  br label %24

24:                                               ; preds = %12, %17, %6
  %25 = phi i1 [ %11, %6 ], [ %23, %17 ], [ false, %12 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZNK5blink20DeferredImageDecoder18OrientationAtIndexEm(%"class.blink::DeferredImageDecoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %4, i64 0, i32 6, i32 0
  %8 = load i8, i8* %7, align 4
  br label %20

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp ugt i64 %12, %1
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18
  %16 = trunc i64 %1 to i32
  %17 = tail call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %15, i32 %16) #13
  %18 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %17, i64 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8
  br label %20

20:                                               ; preds = %9, %14, %6
  %21 = phi i8 [ %8, %6 ], [ %19, %14 ], [ 1, %9 ]
  ret i8 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20DeferredImageDecoder27DensityCorrectedSizeAtIndexEm(%"class.blink::DeferredImageDecoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %4, i64 0, i32 7
  br label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = icmp ugt i64 %11, %1
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 18
  %15 = trunc i64 %1 to i32
  %16 = tail call dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"* %14, i32 %15) #13
  %17 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %16, i64 0, i32 2
  br label %20

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 3
  br label %20

20:                                               ; preds = %18, %13, %6
  %21 = phi %"class.blink::IntSize"* [ %7, %6 ], [ %17, %13 ], [ %19, %18 ]
  %22 = bitcast %"class.blink::IntSize"* %21 to i64*
  %23 = load i64, i64* %22, align 4
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DeferredImageDecoder20ActivateLazyDecodingEv(%"class.blink::DeferredImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.76", align 8
  %3 = alloca %class.sk_sp.17, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.SkISize*
  %6 = alloca %"class.WTF::Vector.76", align 8
  %7 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 20
  %8 = getelementptr inbounds %class.scoped_refptr.73, %class.scoped_refptr.73* %7, i64 0, i32 0
  %9 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %8, align 8
  %10 = icmp eq %"class.blink::ImageFrameGenerator"* %9, null
  br i1 %10, label %11, label %179

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %14 = bitcast %"class.blink::ImageDecoder"* %13 to i64 (%"class.blink::ImageDecoder"*)***
  %15 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %15, i64 5
  %17 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %16, align 8
  %18 = tail call i64 %17(%"class.blink::ImageDecoder"* %13) #13
  %19 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 3
  %20 = bitcast %"class.blink::IntSize"* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %22 = bitcast %"class.blink::ImageDecoder"* %21 to i1 (%"class.blink::ImageDecoder"*)***
  %23 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %23, i64 3
  %25 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ImageDecoder"* %21) #13
  %27 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 10
  %28 = zext i1 %26 to i8
  store i8 %28, i8* %27, align 1
  %29 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %30 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 12
  %31 = bitcast %"class.blink::ImageDecoder"* %29 to i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)***
  %32 = load i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)**, i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)*, i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)** %32, i64 23
  %34 = load i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)*, i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::ImageDecoder"* %29, %"class.blink::IntPoint"* dereferenceable(8) %30) #13
  %36 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 9
  %37 = zext i1 %35 to i8
  store i8 %37, i8* %36, align 8
  %38 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %39 = bitcast %"class.blink::ImageDecoder"* %38 to %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)***
  %40 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)**, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %40, i64 2
  %42 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %41, align 8
  %43 = tail call %"class.WTF::StringImpl"* %42(%"class.blink::ImageDecoder"* %38) #13
  %44 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  %45 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 2
  %46 = bitcast %"class.WTF::String"* %45 to i64*
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %44, i64* %46, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %11
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #13
  br label %63

63:                                               ; preds = %62, %59, %11
  %64 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %65 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %64, i64 0, i32 16, i32 0, i32 0, i32 0
  %66 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %65, align 8
  %67 = icmp ne %"class.blink::ColorProfile"* %66, null
  %68 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 5
  %69 = zext i1 %67 to i8
  store i8 %69, i8* %68, align 4
  %70 = bitcast %class.sk_sp.17* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  call void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.17* nonnull sret %3, %"class.blink::ImageDecoder"* %64) #13
  %71 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 11
  %72 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %3, i64 0, i32 0
  %73 = bitcast %class.sk_sp.17* %3 to i64*
  %74 = load i64, i64* %73, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %72, align 8
  %75 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %71, i64 0, i32 0
  %76 = load %class.SkColorSpace*, %class.SkColorSpace** %75, align 8
  %77 = bitcast %class.sk_sp.17* %71 to i64*
  store i64 %74, i64* %77, align 8
  %78 = icmp eq %class.SkColorSpace* %76, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %63
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %76 to i8*
  call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %63, %79, %83
  %86 = load %class.SkColorSpace*, %class.SkColorSpace** %72, align 8
  %87 = icmp eq %class.SkColorSpace* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = bitcast %class.SkColorSpace* %86 to i8*
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %85, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #13
  %95 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %96 = bitcast %"class.blink::ImageDecoder"* %95 to i32 (%"class.blink::ImageDecoder"*)***
  %97 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %96, align 8
  %98 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %97, i64 16
  %99 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %98, align 8
  %100 = call i32 %99(%"class.blink::ImageDecoder"* %95) #13
  %101 = icmp eq i32 %100, -2
  br i1 %101, label %110, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 6
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %108 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %107) #13
  %109 = icmp ne i64 %108, 1
  br label %110

110:                                              ; preds = %102, %106, %94
  %111 = phi i1 [ false, %94 ], [ true, %102 ], [ %109, %106 ]
  %112 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  %113 = bitcast i64* %4 to i32*
  store i32 -1431655766, i32* %113, align 8
  %114 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %5, i64 0, i32 1
  store i32 -1431655766, i32* %114, align 4
  %115 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %116 = bitcast %"class.blink::ImageDecoder"* %115 to i64 (%"class.blink::ImageDecoder"*)***
  %117 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %116, align 8
  %118 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %117, i64 7
  %119 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %118, align 8
  %120 = call i64 %119(%"class.blink::ImageDecoder"* %115) #13
  %121 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %122 = bitcast %"class.blink::ImageDecoder"* %121 to i64 (%"class.blink::ImageDecoder"*)***
  %123 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %122, align 8
  %124 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %123, i64 7
  %125 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %124, align 8
  %126 = call i64 %125(%"class.blink::ImageDecoder"* %121) #13
  %127 = and i64 %126, -4294967296
  %128 = and i64 %120, 4294967295
  %129 = or i64 %127, %128
  store i64 %129, i64* %4, align 8
  %130 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %12, align 8
  %131 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %130, i64 0, i32 5
  %132 = bitcast %"class.blink::ImageDecoder"* %130 to void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)***
  %133 = load void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)**, void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)*, void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)** %133, i64 6
  %135 = load void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)*, void (%"class.WTF::Vector.76"*, %"class.blink::ImageDecoder"*)** %134, align 8
  call void %135(%"class.WTF::Vector.76"* nonnull sret %6, %"class.blink::ImageDecoder"* %130) #13
  %136 = bitcast %"class.WTF::Vector.76"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136)
  %137 = call noalias i8* @malloc(i64 144) #13
  %138 = bitcast i8* %137 to %"class.blink::ImageFrameGenerator"*
  %139 = getelementptr inbounds %"class.WTF::Vector.76", %"class.WTF::Vector.76"* %2, i64 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.WTF::Vector.76", %"class.WTF::Vector.76"* %2, i64 0, i32 0, i32 0, i32 2
  %141 = bitcast %"class.WTF::Vector.76"* %6 to i64*
  %142 = bitcast %"class.WTF::Vector.76"* %2 to i64*
  store i64 0, i64* %142, align 8
  %143 = load i64, i64* %141, align 8
  store atomic i64 0, i64* %141 monotonic, align 8
  store atomic i64 %143, i64* %142 monotonic, align 8
  %144 = getelementptr inbounds %"class.WTF::Vector.76", %"class.WTF::Vector.76"* %6, i64 0, i32 0, i32 0, i32 1
  %145 = load i32, i32* %144, align 8
  store i32 %145, i32* %139, align 8
  store i32 0, i32* %144, align 8
  %146 = getelementptr inbounds %"class.WTF::Vector.76", %"class.WTF::Vector.76"* %6, i64 0, i32 0, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %140, align 4
  store i32 0, i32* %146, align 4
  call void @_ZN5blink19ImageFrameGeneratorC1ERK7SkISizebRKNS_13ColorBehaviorEN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ImageFrameGenerator"* %138, %struct.SkISize* nonnull dereferenceable(8) %5, i1 zeroext %111, %"class.blink::ColorBehavior"* dereferenceable(4) %131, %"class.WTF::Vector.76"* nonnull %2) #13
  %148 = getelementptr inbounds %"class.WTF::Vector.76", %"class.WTF::Vector.76"* %2, i64 0, i32 0, i32 0, i32 0
  %149 = load %struct.SkISize*, %struct.SkISize** %148, align 8
  %150 = icmp eq %struct.SkISize* %149, null
  %151 = bitcast %struct.SkISize* %149 to i8*
  br i1 %150, label %157, label %152, !prof !3

152:                                              ; preds = %110
  %153 = load i32, i32* %140, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %156, label %155, !prof !4

155:                                              ; preds = %152
  store i32 0, i32* %140, align 4
  br label %156

156:                                              ; preds = %155, %152
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %151) #13
  store %struct.SkISize* null, %struct.SkISize** %148, align 8
  br label %157

157:                                              ; preds = %110, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136)
  %158 = ptrtoint i8* %137 to i64
  %159 = bitcast %class.scoped_refptr.73* %7 to i64*
  %160 = load %"class.blink::ImageFrameGenerator"*, %"class.blink::ImageFrameGenerator"** %8, align 8
  store i64 %158, i64* %159, align 8
  %161 = icmp eq %"class.blink::ImageFrameGenerator"* %160, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::ImageFrameGenerator", %"class.blink::ImageFrameGenerator"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = atomicrmw sub i32* %163, i32 1 acq_rel
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  call void @_ZN5blink19ImageFrameGeneratorD1Ev(%"class.blink::ImageFrameGenerator"* nonnull %160) #13
  %167 = bitcast %"class.blink::ImageFrameGenerator"* %160 to i8*
  call void @free(i8* %167) #13
  br label %168

168:                                              ; preds = %157, %162, %166
  %169 = getelementptr inbounds %"class.WTF::Vector.76", %"class.WTF::Vector.76"* %6, i64 0, i32 0, i32 0, i32 0
  %170 = load %struct.SkISize*, %struct.SkISize** %169, align 8
  %171 = icmp eq %struct.SkISize* %170, null
  %172 = bitcast %struct.SkISize* %170 to i8*
  br i1 %171, label %178, label %173, !prof !3

173:                                              ; preds = %168
  %174 = load i32, i32* %146, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %177, label %176, !prof !4

176:                                              ; preds = %173
  store i32 0, i32* %146, align 4
  br label %177

177:                                              ; preds = %176, %173
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %172) #13
  store %struct.SkISize* null, %struct.SkISize** %169, align 8
  br label %178

178:                                              ; preds = %168, %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br label %179

179:                                              ; preds = %1, %178
  ret void
}

declare void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.17* sret, %"class.blink::ImageDecoder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19ImageHeaderMetadataD1Ev(%"struct.cc::ImageHeaderMetadata"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20DeferredImageDecoder7HotSpotERNS_8IntPointE(%"class.blink::DeferredImageDecoder"* nocapture readonly, %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %3, align 8
  %5 = icmp eq %"class.blink::ImageDecoder"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::ImageDecoder"* %4 to i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)***
  %8 = load i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)**, i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)*, i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)** %8, i64 23
  %10 = load i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)*, i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::ImageDecoder"* nonnull %4, %"class.blink::IntPoint"* dereferenceable(8) %1) #13
  br label %23

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 9
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::DeferredImageDecoder", %"class.blink::DeferredImageDecoder"* %0, i64 0, i32 12
  %18 = bitcast %"class.blink::IntPoint"* %17 to i64*
  %19 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = load i8, i8* %13, align 8, !range !2
  %22 = icmp ne i8 %21, 0
  br label %23

23:                                               ; preds = %16, %12, %6
  %24 = phi i1 [ %11, %6 ], [ false, %12 ], [ %22, %16 ]
  ret i1 %24
}

declare %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"*, i1 zeroext, i32, i32, %"class.blink::ColorBehavior"* dereferenceable(4), %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #2

declare %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #10

declare void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"*, i8*, i32, i32, i32) unnamed_addr #2

declare void @_ZN5blink19ImageFrameGeneratorC1ERK7SkISizebRKNS_13ColorBehaviorEN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEE(%"class.blink::ImageFrameGenerator"*, %struct.SkISize* dereferenceable(8), i1 zeroext, %"class.blink::ColorBehavior"* dereferenceable(4), %"class.WTF::Vector.76"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink19ImageFrameGeneratorD1Ev(%"class.blink::ImageFrameGenerator"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZN3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %24, i64 %25
  ret %"struct.blink::DeferredFrameData"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #12

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::DeferredFrameData"* @_ZNK3WTF6VectorIN5blink17DeferredFrameDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.68"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::DeferredFrameData"*, %"struct.blink::DeferredFrameData"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::DeferredFrameData", %"struct.blink::DeferredFrameData"* %24, i64 %25
  ret %"struct.blink::DeferredFrameData"* %26
}

declare dereferenceable(36) %"struct.cc::ImageHeaderMetadata"* @_ZN2cc19ImageHeaderMetadataaSERKS0_(%"struct.cc::ImageHeaderMetadata"*, %"struct.cc::ImageHeaderMetadata"* dereferenceable(36)) local_unnamed_addr #2

declare void @_ZN2cc19ImageHeaderMetadataC1ERKS0_(%"struct.cc::ImageHeaderMetadata"*, %"struct.cc::ImageHeaderMetadata"* dereferenceable(36)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink17DeferredFrameDataEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!8 = distinct !{!8, !9, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!9 = distinct !{!9, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!12 = distinct !{!12, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!13 = distinct !{!13, !14, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!14 = distinct !{!14, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!15 = distinct !{!15, !16, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!16 = distinct !{!16, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!"branch_weights", i32 1, i32 1048575}
!20 = distinct !{!20, !18}
