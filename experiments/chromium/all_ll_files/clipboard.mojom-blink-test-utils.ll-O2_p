; ModuleID = 'gen/third_party/blink/public/mojom/clipboard/clipboard.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/clipboard/clipboard.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ClipboardHostAsyncWaiter" = type { %"class.blink::mojom::blink::ClipboardHost"* }
%"class.blink::mojom::blink::ClipboardHost" = type { i32 (...)** }
%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting" = type { %"class.blink::mojom::blink::ClipboardHost" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.1" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.2" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.3" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.4" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.5" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.6" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::String" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.20 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.20 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.31, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.24", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.26" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.31 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.32" }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.34", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::mojom::blink::ClipboardFiles"* }
%"class.blink::mojom::blink::ClipboardFiles" = type { %"class.WTF::Vector.54", %"class.WTF::String" }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.mojo::StructPtr.57"*, i32, i32 }
%"class.mojo::StructPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::mojom::blink::DataTransferFile"* }
%"class.blink::mojom::blink::DataTransferFile" = type { %"class.base::FilePath", %"class.base::FilePath", %"class.mojo::PendingRemote" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink13ClipboardHostD2Ev = comdat any

$_ZN5blink5mojom5blink34ClipboardHostInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@.str = private unnamed_addr constant [18 x i8] c"GetSequenceNumber\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"gen/third_party/blink/public/mojom/clipboard/clipboard.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"IsFormatAvailable\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"ReadAvailableTypes\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"ReadText\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ReadHtml\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"ReadSvg\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"ReadRtf\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"ReadImage\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"ReadFiles\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ReadCustomData\00", align 1
@_ZTVN5blink5mojom5blink34ClipboardHostInterceptorForTestingE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHost"*)* @_ZN5blink5mojom5blink13ClipboardHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTestingD0Ev to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, i64*)* @_ZN5blink5mojom5blink13ClipboardHost17GetSequenceNumberENS0_15ClipboardBufferEPm to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting17GetSequenceNumberENS0_15ClipboardBufferEN4base12OnceCallbackIFvmEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, i8*)* @_ZN5blink5mojom5blink13ClipboardHost17IsFormatAvailableENS0_15ClipboardFormatENS0_15ClipboardBufferEPb to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, i32, %"class.base::OnceCallback.1"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting17IsFormatAvailableENS0_15ClipboardFormatENS0_15ClipboardBufferEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::Vector"*)* @_ZN5blink5mojom5blink13ClipboardHost18ReadAvailableTypesENS0_15ClipboardBufferEPN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.2"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting18ReadAvailableTypesENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*)* @_ZN5blink5mojom5blink13ClipboardHost8ReadTextENS0_15ClipboardBufferEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting8ReadTextENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.blink::KURL"*, i32*, i32*)* @_ZN5blink5mojom5blink13ClipboardHost8ReadHtmlENS0_15ClipboardBufferEPN3WTF6StringEPNS_4KURLEPjS9_ to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.4"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting8ReadHtmlENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringERKNS_4KURLEjjEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting7ReadSvgENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*)* @_ZN5blink5mojom5blink13ClipboardHost7ReadRtfENS0_15ClipboardBufferEPN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting7ReadRtfENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %class.SkBitmap*)* @_ZN5blink5mojom5blink13ClipboardHost9ReadImageENS0_15ClipboardBufferEP8SkBitmap to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.5"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9ReadImageENS0_15ClipboardBufferEN4base12OnceCallbackIFvRK8SkBitmapEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.mojo::StructPtr"*)* @_ZN5blink5mojom5blink13ClipboardHost9ReadFilesENS0_15ClipboardBufferEPN4mojo9StructPtrINS1_14ClipboardFilesEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.6"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9ReadFilesENS0_15ClipboardBufferEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_14ClipboardFilesEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink13ClipboardHost14ReadCustomDataENS0_15ClipboardBufferERKN3WTF6StringEPS5_ to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting14ReadCustomDataENS0_15ClipboardBufferERKN3WTF6StringEN4base12OnceCallbackIFvS7_EEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9WriteTextERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"*, %"class.blink::KURL"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9WriteHtmlERKN3WTF6StringERKNS_4KURLE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting8WriteSvgERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting21WriteSmartPasteMarkerEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::HashMap"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting15WriteCustomDataERKN3WTF7HashMapINS3_6StringES5_NS3_10StringHashENS3_10HashTraitsIS5_EES8_NS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting13WriteBookmarkERKN3WTF6StringES6_ to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %class.SkBitmap*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting10WriteImageERK8SkBitmap to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting11CommitWriteEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink5mojom5blink24ClipboardHostAsyncWaiterC1EPNS1_13ClipboardHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"*, %"class.blink::mojom::blink::ClipboardHost"*), void (%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"*, %"class.blink::mojom::blink::ClipboardHost"*)* @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiterC2EPNS1_13ClipboardHostE
@_ZN5blink5mojom5blink24ClipboardHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"*), void (%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"*)* @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting17GetSequenceNumberENS0_15ClipboardBufferEN4base12OnceCallbackIFvmEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting17IsFormatAvailableENS0_15ClipboardFormatENS0_15ClipboardBufferEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, i32, %"class.base::OnceCallback.1"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.1", align 8
  %6 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, i64 29
  %9 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ClipboardHost"* %9(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.1"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.1"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)***
  %16 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %16, i64 5
  %18 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, i32 %2, %"class.base::OnceCallback.1"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting18ReadAvailableTypesENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.2"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.2", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.2"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.2"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %15, i64 7
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.2"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting8ReadTextENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.3", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.3"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.3"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %15, i64 9
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.3"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting8ReadHtmlENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringERKNS_4KURLEjjEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.4"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.4", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.4"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %15, i64 11
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.4"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting7ReadSvgENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.3", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.3"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.3"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %15, i64 12
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.3"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting7ReadRtfENS0_15ClipboardBufferEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.3", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.3"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.3"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %15, i64 14
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.3"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9ReadImageENS0_15ClipboardBufferEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.5"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.5", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.5"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.5"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %15, i64 16
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.5"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9ReadFilesENS0_15ClipboardBufferEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_14ClipboardFilesEEEEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.6"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.6", align 8
  %5 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ClipboardHost"* %8(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.6", %"class.base::OnceCallback.6"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.6"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.6"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %9 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)***
  %15 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %15, i64 18
  %17 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.6"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.6", %"class.base::OnceCallback.6"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting14ReadCustomDataENS0_15ClipboardBufferERKN3WTF6StringEN4base12OnceCallbackIFvS7_EEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %7, i64 29
  %9 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ClipboardHost"* %9(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.3"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.3"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)***
  %16 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)** %16, i64 20
  %18 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback.3"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9WriteTextERKN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ClipboardHost"* %6(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %7 to void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)***
  %9 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)** %9, i64 21
  %11 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ClipboardHost"* %7, %"class.WTF::String"* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting9WriteHtmlERKN3WTF6StringERKNS_4KURLE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %5, i64 29
  %7 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ClipboardHost"* %7(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %9 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %8 to void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)***
  %10 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)** %10, i64 22
  %12 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.blink::KURL"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::ClipboardHost"* %8, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::KURL"* dereferenceable(112) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting8WriteSvgERKN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ClipboardHost"* %6(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %7 to void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)***
  %9 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)** %9, i64 23
  %11 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ClipboardHost"* %7, %"class.WTF::String"* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting21WriteSmartPasteMarkerEv(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %3, i64 29
  %5 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::ClipboardHost"* %5(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %6 to void (%"class.blink::mojom::blink::ClipboardHost"*)***
  %8 = load void (%"class.blink::mojom::blink::ClipboardHost"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*)** %8, i64 24
  %10 = load void (%"class.blink::mojom::blink::ClipboardHost"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::ClipboardHost"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting15WriteCustomDataERKN3WTF7HashMapINS3_6StringES5_NS3_10StringHashENS3_10HashTraitsIS5_EES8_NS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::HashMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ClipboardHost"* %6(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %7 to void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)***
  %9 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)** %9, i64 25
  %11 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::HashMap"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ClipboardHost"* %7, %"class.WTF::HashMap"* dereferenceable(24) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting13WriteBookmarkERKN3WTF6StringES6_(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %5, i64 29
  %7 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ClipboardHost"* %7(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %9 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %8 to void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)***
  %10 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)** %10, i64 26
  %12 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %"class.WTF::String"*, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::ClipboardHost"* %8, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting10WriteImageERK8SkBitmap(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ClipboardHost"* %6(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %7 to void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)***
  %9 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)** %9, i64 27
  %11 = load void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, %class.SkBitmap*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ClipboardHost"* %7, %class.SkBitmap* dereferenceable(56) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTesting11CommitWriteEv(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %3, i64 29
  %5 = load %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ClipboardHost"* (%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::ClipboardHost"* %5(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %6 to void (%"class.blink::mojom::blink::ClipboardHost"*)***
  %8 = load void (%"class.blink::mojom::blink::ClipboardHost"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*)** %8, i64 28
  %10 = load void (%"class.blink::mojom::blink::ClipboardHost"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::ClipboardHost"* %6) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiterC2EPNS1_13ClipboardHostE(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ClipboardHost"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ClipboardHost"* %1, %"class.blink::mojom::blink::ClipboardHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS0_15ClipboardBufferEPm(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i64* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !2
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i64)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS4_15ClipboardBufferEPmE3$_0JPNS_7RunLoopES8_EEEFvmEE7RunOnceEPNS0_13BindStateBaseEm" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS3_15ClipboardBufferEPmE3$_0JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !2
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !2
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %20, i64 3
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 110) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS0_15ClipboardFormatENS0_15ClipboardBufferEPb(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.1", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i8* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #12, !noalias !7
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatENS4_15ClipboardBufferEPbE3$_1JPNS_7RunLoopES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS3_15ClipboardFormatENS3_15ClipboardBufferEPbE3$_1JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !7
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !7
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !7
  %19 = bitcast %"class.base::OnceCallback.1"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !7
  %20 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %11 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)***
  %21 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %21, i64 5
  %23 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::ClipboardHost"* %11, i32 %1, i32 %2, %"class.base::OnceCallback.1"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 125) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS0_15ClipboardBufferEPN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.WTF::Vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.2", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::Vector"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !12
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS4_15ClipboardBufferEPN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopESD_EEEFvRKSC_EE7RunOnceEPNS0_13BindStateBaseESJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS3_15ClipboardBufferEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopESC_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !12
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !12
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !12
  %18 = bitcast %"class.base::OnceCallback.2"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !12
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %20, i64 7
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.2"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 140) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS0_15ClipboardBufferEPN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::String"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !17
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS4_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopESA_EEEFvRKS9_EE7RunOnceEPNS0_13BindStateBaseESG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS3_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !17
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !17
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !17
  %18 = bitcast %"class.base::OnceCallback.3"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !17
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %20, i64 9
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.3"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 155) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS0_15ClipboardBufferEPN3WTF6StringEPNS_4KURLEPjS9_(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.WTF::String"*, %"class.blink::KURL"*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.base::OnceCallback.4", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = ptrtoint %"class.WTF::String"* %2 to i64
  %11 = ptrtoint %"class.blink::KURL"* %3 to i64
  %12 = ptrtoint i32* %4 to i64
  %13 = ptrtoint i32* %5 to i64
  %14 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %15 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %16 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %15, align 8
  %17 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %18 = call i8* @_Znwm(i64 80) #12, !noalias !22
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*, %"class.blink::KURL"*, i32, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS4_15ClipboardBufferEPN3WTF6StringEPNS3_4KURLEPjSD_E3$_4JPNS_7RunLoopESA_SC_SD_SD_EEEFvRKS9_RKSB_jjEE7RunOnceEPNS0_13BindStateBaseESJ_SL_jj" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS3_15ClipboardBufferEPN3WTF6StringEPNS2_4KURLEPjSC_E3$_4JPNS_7RunLoopES9_SB_SC_SC_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !22
  %20 = getelementptr inbounds i8, i8* %18, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8, !noalias !22
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %10, i64* %23, align 8, !noalias !22
  %24 = getelementptr inbounds i8, i8* %18, i64 56
  %25 = bitcast i8* %24 to i64*
  store i64 %11, i64* %25, align 8, !noalias !22
  %26 = getelementptr inbounds i8, i8* %18, i64 64
  %27 = bitcast i8* %26 to i64*
  store i64 %12, i64* %27, align 8, !noalias !22
  %28 = getelementptr inbounds i8, i8* %18, i64 72
  %29 = bitcast i8* %28 to i64*
  store i64 %13, i64* %29, align 8, !noalias !22
  %30 = bitcast %"class.base::OnceCallback.4"* %8 to i8**
  store i8* %18, i8** %30, align 8, !alias.scope !22
  %31 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %16 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)***
  %32 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %32, i64 11
  %34 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::ClipboardHost"* %16, i32 %1, %"class.base::OnceCallback.4"* nonnull %8) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  %36 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 182) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS0_15ClipboardBufferEPN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::String"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !27
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS4_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopESA_EEEFvRKS9_EE7RunOnceEPNS0_13BindStateBaseESG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS3_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !27
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !27
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !27
  %18 = bitcast %"class.base::OnceCallback.3"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !27
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %20, i64 12
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.3"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 197) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS0_15ClipboardBufferEPN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::String"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !32
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS4_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopESA_EEEFvRKS9_EE7RunOnceEPNS0_13BindStateBaseESG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS3_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !32
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !32
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !32
  %18 = bitcast %"class.base::OnceCallback.3"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !32
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %20, i64 14
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.3"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 212) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS0_15ClipboardBufferEP8SkBitmap(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.5", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %class.SkBitmap* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !37
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS4_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS3_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !37
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !37
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !37
  %18 = bitcast %"class.base::OnceCallback.5"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !37
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %20, i64 16
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.5"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 227) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS0_15ClipboardBufferEPN4mojo9StructPtrINS1_14ClipboardFilesEEE(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.mojo::StructPtr"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.6", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.mojo::StructPtr"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !42
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS4_15ClipboardBufferEPN4mojo9StructPtrINS5_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS3_15ClipboardBufferEPN4mojo9StructPtrINS4_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !42
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !42
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !42
  %18 = bitcast %"class.base::OnceCallback.6"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !42
  %19 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %10 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)***
  %20 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %20, i64 18
  %22 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.6"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.6", %"class.base::OnceCallback.6"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 242) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS0_15ClipboardBufferERKN3WTF6StringEPS5_(%"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.3", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.WTF::String"* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardHostAsyncWaiter", %"class.blink::mojom::blink::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::ClipboardHost"*, %"class.blink::mojom::blink::ClipboardHost"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #12, !noalias !47
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS4_15ClipboardBufferERKN3WTF6StringEPS9_E3$_9JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS3_15ClipboardBufferERKN3WTF6StringEPS8_E3$_9JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !47
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !47
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !47
  %19 = bitcast %"class.base::OnceCallback.3"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !47
  %20 = bitcast %"class.blink::mojom::blink::ClipboardHost"* %11 to void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)***
  %21 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)** %21, i64 20
  %23 = load void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.base::OnceCallback.3"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::ClipboardHost"* %11, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback.3"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 257) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink13ClipboardHostD2Ev(%"class.blink::mojom::blink::ClipboardHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink34ClipboardHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ClipboardHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost17GetSequenceNumberENS0_15ClipboardBufferEPm(%"class.blink::mojom::blink::ClipboardHost"*, i32, i64*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost17IsFormatAvailableENS0_15ClipboardFormatENS0_15ClipboardBufferEPb(%"class.blink::mojom::blink::ClipboardHost"*, i32, i32, i8*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost18ReadAvailableTypesENS0_15ClipboardBufferEPN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE(%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::Vector"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost8ReadTextENS0_15ClipboardBufferEPN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost8ReadHtmlENS0_15ClipboardBufferEPN3WTF6StringEPNS_4KURLEPjS9_(%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*, %"class.blink::KURL"*, i32*, i32*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost7ReadRtfENS0_15ClipboardBufferEPN3WTF6StringE(%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost9ReadImageENS0_15ClipboardBufferEP8SkBitmap(%"class.blink::mojom::blink::ClipboardHost"*, i32, %class.SkBitmap*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost9ReadFilesENS0_15ClipboardBufferEPN4mojo9StructPtrINS1_14ClipboardFilesEEE(%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.mojo::StructPtr"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom5blink13ClipboardHost14ReadCustomDataENS0_15ClipboardBufferERKN3WTF6StringEPS5_(%"class.blink::mojom::blink::ClipboardHost"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS4_15ClipboardBufferEPmE3$_0JPNS_7RunLoopES8_EEEFvmEE7RunOnceEPNS0_13BindStateBaseEm"(%"class.base::internal::BindStateBase"* nocapture readonly, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i64**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i64*, i64** %6, align 8
  store i64 %1, i64* %8, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS3_15ClipboardBufferEPmE3$_0JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatENS4_15ClipboardBufferEPbE3$_1JPNS_7RunLoopES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS3_15ClipboardFormatENS3_15ClipboardBufferEPbE3$_1JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS4_15ClipboardBufferEPN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopESD_EEEFvRKSC_EE7RunOnceEPNS0_13BindStateBaseESJ_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %9 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"* %8, %"class.WTF::Vector"* dereferenceable(16) %1) #11
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %219, label %4, !prof !52

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #11
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !53

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #11
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !53

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #11
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #11
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #11
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !52

145:                                              ; preds = %136
  tail call void @llvm.trap() #11
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #11
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !52

208:                                              ; preds = %199
  tail call void @llvm.trap() #11
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS3_15ClipboardBufferEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopESC_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS4_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopESA_EEEFvRKS9_EE7RunOnceEPNS0_13BindStateBaseESG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::String"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !52

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %29, %44, %47
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS3_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS4_15ClipboardBufferEPN3WTF6StringEPNS3_4KURLEPjSD_E3$_4JPNS_7RunLoopESA_SC_SD_SD_EEEFvRKS9_RKSB_jjEE7RunOnceEPNS0_13BindStateBaseESJ_SL_jj"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i32, i32) #0 align 2 {
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to %"class.WTF::String"**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to %"class.blink::KURL"**
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %13 = bitcast void ()** %12 to i32**
  %14 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %15 = bitcast void ()** %14 to i32**
  %16 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %18 = load %"class.blink::KURL"*, %"class.blink::KURL"** %11, align 8
  %19 = load i32*, i32** %13, align 8
  %20 = load i32*, i32** %15, align 8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #11
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !52

38:                                               ; preds = %29
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %5
  %42 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %43 = bitcast %"class.WTF::String"* %17 to i64*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %42, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #11
  br label %60

60:                                               ; preds = %41, %56, %59
  %61 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %18, %"class.blink::KURL"* dereferenceable(112) %2) #11
  store i32 %3, i32* %19, align 4
  store i32 %4, i32* %20, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %16) #11
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS3_15ClipboardBufferEPN3WTF6StringEPNS2_4KURLEPjSC_E3$_4JPNS_7RunLoopES9_SB_SC_SC_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS4_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopESA_EEEFvRKS9_EE7RunOnceEPNS0_13BindStateBaseESG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::String"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !52

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %29, %44, %47
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS3_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS4_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopESA_EEEFvRKS9_EE7RunOnceEPNS0_13BindStateBaseESG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::String"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !52

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %29, %44, %47
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS3_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS4_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %class.SkBitmap* dereferenceable(56)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %class.SkBitmap**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %class.SkBitmap*, %class.SkBitmap** %6, align 8
  %9 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %8, %class.SkBitmap* dereferenceable(56) %1) #11
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS3_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS4_15ClipboardBufferEPN4mojo9StructPtrINS5_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::ClipboardFiles"*, %"class.blink::mojom::blink::ClipboardFiles"** %11, align 8
  store %"class.blink::mojom::blink::ClipboardFiles"* null, %"class.blink::mojom::blink::ClipboardFiles"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::ClipboardFiles"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink14ClipboardFilesD1Ev(%"class.blink::mojom::blink::ClipboardFiles"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::ClipboardFiles"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::ClipboardFiles"*, %"class.blink::mojom::blink::ClipboardFiles"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::ClipboardFiles"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::ClipboardFiles"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink14ClipboardFilesD1Ev(%"class.blink::mojom::blink::ClipboardFiles"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14ClipboardFilesD1Ev(%"class.blink::mojom::blink::ClipboardFiles"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS3_15ClipboardBufferEPN4mojo9StructPtrINS4_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS4_15ClipboardBufferERKN3WTF6StringEPS9_E3$_9JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::String"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !52

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %29, %44, %47
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS3_15ClipboardBufferERKN3WTF6StringEPS8_E3$_9JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS4_15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS4_15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS2_15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17GetSequenceNumberENS2_15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatENS4_15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatENS4_15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS2_15ClipboardFormatENS2_15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter17IsFormatAvailableENS2_15ClipboardFormatENS2_15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS4_15ClipboardBufferEPN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERSD_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS4_15ClipboardBufferEPN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERSD_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS2_15ClipboardBufferEPN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter18ReadAvailableTypesENS2_15ClipboardBufferEPN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS4_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS4_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS2_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadTextENS2_15ClipboardBufferEPN3WTF6StringEE3$_3JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS4_15ClipboardBufferEPN3WTF6StringEPNS3_4KURLEPjSD_E3$_4JPNS_7RunLoopERSA_RSC_RSD_SJ_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS4_15ClipboardBufferEPN3WTF6StringEPNS3_4KURLEPjSD_E3$_4JPNS_7RunLoopERSA_RSC_RSD_SJ_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS2_15ClipboardBufferEPN3WTF6StringEPNS1_4KURLEPjSB_E3$_4JPNS_7RunLoopERS8_RSA_RSB_SH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter8ReadHtmlENS2_15ClipboardBufferEPN3WTF6StringEPNS1_4KURLEPjSB_E3$_4JPNS_7RunLoopERS8_RSA_RSB_SH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS4_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS4_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS2_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadSvgENS2_15ClipboardBufferEPN3WTF6StringEE3$_5JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS4_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS4_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS2_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter7ReadRtfENS2_15ClipboardBufferEPN3WTF6StringEE3$_6JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS4_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS4_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS2_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadImageENS2_15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS4_15ClipboardBufferEPN4mojo9StructPtrINS5_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS4_15ClipboardBufferEPN4mojo9StructPtrINS5_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS2_15ClipboardBufferEPN4mojo9StructPtrINS3_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter9ReadFilesENS2_15ClipboardBufferEPN4mojo9StructPtrINS3_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS4_15ClipboardBufferERKN3WTF6StringEPS9_E3$_9JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS4_15ClipboardBufferERKN3WTF6StringEPS9_E3$_9JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS2_15ClipboardBufferERKN3WTF6StringEPS7_E3$_9JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8BindOnceIZN5blink5mojom5blink24ClipboardHostAsyncWaiter14ReadCustomDataENS2_15ClipboardBufferERKN3WTF6StringEPS7_E3$_9JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!52 = !{!"branch_weights", i32 1, i32 2000}
!53 = !{!"branch_weights", i32 2000, i32 1}
