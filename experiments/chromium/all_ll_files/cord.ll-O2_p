; ModuleID = '../../third_party/abseil-cpp/absl/strings/cord.cc'
source_filename = "../../third_party/abseil-cpp/absl/strings/cord.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::base_internal::AtomicHook" = type { %"struct.std::__1::atomic.22", void (i32, i8*, i32, %"class.std::__1::basic_string"*)* }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { void (i32, i8*, i32, %"class.std::__1::basic_string"*)* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }
%"class.absl::Cord" = type { %"class.absl::Cord::InlineRep" }
%"class.absl::Cord::InlineRep" = type { %"class.absl::cord_internal::InlineData" }
%"class.absl::cord_internal::InlineData" = type { %union.anon }
%union.anon = type { %"struct.absl::cord_internal::InlineData::AsTree" }
%"struct.absl::cord_internal::InlineData::AsTree" = type { %union.anon.0, i64 }
%union.anon.0 = type { %"struct.absl::cord_internal::CordRep"* }
%"struct.absl::cord_internal::CordRep" = type <{ i64, %"class.absl::cord_internal::Refcount", i8, [1 x i8], [2 x i8] }>
%"class.absl::cord_internal::Refcount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.absl::cord_internal::CordRepExternal" = type { %"struct.absl::cord_internal::CordRep.base", i8*, void (%"struct.absl::cord_internal::CordRepExternal"*)* }
%"struct.absl::cord_internal::CordRep.base" = type <{ i64, %"class.absl::cord_internal::Refcount", i8, [1 x i8] }>
%"class.absl::cord_internal::CordRepRing" = type { %"struct.absl::cord_internal::CordRep.base", i32, i32, i32, i64, [8 x i8] }
%"class.absl::CordForest" = type { i64, %"class.absl::InlinedVector", %"struct.absl::cord_internal::CordRepConcat"* }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.28" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.28" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Allocated", [360 x i8] }
%"struct.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Allocated" = type { %"struct.absl::cord_internal::CordRep"**, i64 }
%"struct.absl::cord_internal::CordRepConcat" = type { %"struct.absl::cord_internal::CordRep.base", %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"* }
%"class.absl::cord_internal::CordzInfo" = type { %"class.absl::cord_internal::CordzHandle", %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.std::__1::atomic.13", %"struct.std::__1::atomic.13", %"class.absl::Mutex", %"struct.absl::cord_internal::CordRep"*, [64 x i8*], [64 x i8*], i32, i32, i32, i32, %"class.absl::cord_internal::CordzUpdateTracker", %"class.absl::Time" }
%"class.absl::cord_internal::CordzHandle" = type { i32 (...)**, %"struct.absl::cord_internal::CordzHandle::Queue"*, i8, %"class.absl::cord_internal::CordzHandle"*, %"class.absl::cord_internal::CordzHandle"* }
%"struct.absl::cord_internal::CordzHandle::Queue" = type { %"class.absl::base_internal::SpinLock", %"struct.std::__1::atomic.9" }
%"class.absl::base_internal::SpinLock" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i32 }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { %"class.absl::cord_internal::CordzHandle"* }
%"struct.absl::cord_internal::CordzInfo::List" = type { %"class.absl::base_internal::SpinLock", %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { %"class.absl::cord_internal::CordzInfo"* }
%"class.absl::Mutex" = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i64 }
%"class.absl::cord_internal::CordzUpdateTracker" = type { [21 x %"class.absl::cord_internal::CordzUpdateTracker::Counter"] }
%"class.absl::cord_internal::CordzUpdateTracker::Counter" = type { %"struct.std::__1::atomic.17" }
%"class.absl::Time" = type { %"class.absl::Duration" }
%"class.absl::Duration" = type <{ i64, i32, [4 x i8] }>
%"class.absl::FixedArray" = type { %"class.absl::FixedArray<absl::cord_internal::CordRep *, 18446744073709551615, std::__1::allocator<absl::cord_internal::CordRep *> >::Storage" }
%"class.absl::FixedArray<absl::cord_internal::CordRep *, 18446744073709551615, std::__1::allocator<absl::cord_internal::CordRep *> >::Storage" = type { %"class.absl::FixedArray<absl::cord_internal::CordRep *, 18446744073709551615, std::__1::allocator<absl::cord_internal::CordRep *> >::NonEmptyInlinedStorage", %"class.absl::container_internal::CompressedTuple.81", %"struct.absl::cord_internal::CordRep"** }
%"class.absl::FixedArray<absl::cord_internal::CordRep *, 18446744073709551615, std::__1::allocator<absl::cord_internal::CordRep *> >::NonEmptyInlinedStorage" = type { [256 x i8] }
%"class.absl::container_internal::CompressedTuple.81" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.82" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.82" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.83" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.83" = type { i64 }
%"struct.absl::cord_internal::CordRepFlat" = type { %"struct.absl::cord_internal::CordRep.base", [2 x i8] }
%"class.absl::Cord::ChunkIterator" = type { %"class.absl::string_view", %"struct.absl::cord_internal::CordRep"*, i64, %"class.absl::cord_internal::CordRepRingReader", %"class.absl::InlinedVector" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::cord_internal::CordRepRingReader" = type <{ %"class.absl::cord_internal::CordRepRing"*, i32, [4 x i8] }>
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.absl::InlinedVector.97" = type { %"class.absl::inlined_vector_internal::Storage.98" }
%"class.absl::inlined_vector_internal::Storage.98" = type { %"class.absl::container_internal::CompressedTuple.99", %"union.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Data" }
%"class.absl::container_internal::CompressedTuple.99" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.100" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.100" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.28" }
%"union.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Allocated", [1112 x i8] }
%"struct.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Allocated" = type { %"struct.absl::SubRange"*, i64 }
%"struct.absl::SubRange" = type { %"struct.absl::cord_internal::CordRep"*, i64, i64 }
%"class.absl::InlinedVector.33" = type { %"class.absl::inlined_vector_internal::Storage.34" }
%"class.absl::inlined_vector_internal::Storage.34" = type { %"class.absl::container_internal::CompressedTuple.35", %"union.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Data" }
%"class.absl::container_internal::CompressedTuple.35" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.36" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.36" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.28" }
%"union.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Allocated", [360 x i8] }
%"struct.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Allocated" = type { %"struct.absl::cord_internal::CordRep"**, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"**, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.absl::cord_internal::CordRep"** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4absl4CordC5INSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEOT_ = comdat any

$_ZN4absl4Cord6AppendINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEvOT_ = comdat any

$_ZN4absl4Cord7PrependINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEvOT_ = comdat any

$_ZN4absl4Cord10AppendImplIRKS0_EEvOT_ = comdat any

$_ZN4absl4Cord10AppendImplIS0_EEvOT_ = comdat any

$_ZNK4absl4Cord4sizeEv = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

$_ZN4absl8AlphaNumC2EPKc = comdat any

$_ZN4absl8AlphaNumC2Em = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_ = comdat any

$_ZN4absl17SharedCompareImplINS_11string_viewEEEiRKNS_4CordERKT_ = comdat any

$_ZN4absl17SharedCompareImplINS_4CordEEEiRKS1_RKT_ = comdat any

$_ZNK4absl4Cord9InlineRep6CopyToEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = comdat any

$_ZN4absl10CordForest5BuildEPNS_13cord_internal7CordRepE = comdat any

$_ZN4absl10CordForest11ConcatNodesEv = comdat any

$_ZN4absl10CordForest9CheckNodeEPNS_13cord_internal7CordRepE = comdat any

$_ZN4absl10CordForest7AddNodeEPNS_13cord_internal7CordRepE = comdat any

$_ZN4absl10CordForest10MakeConcatEPNS_13cord_internal7CordRepES3_ = comdat any

$_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE = comdat any

$_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJS4_EEERS4_DpOT_ = comdat any

$_ZN4absl13cord_internal17CordRepRingReader4SeekEm = comdat any

$_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_ = comdat any

$_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm = comdat any

$_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv = comdat any

$_ZNK4absl4Cord15CompareSlowPathERKS0_mm = comdat any

$_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRKS5_EEERS5_DpOT_ = comdat any

@_ZN4absl4Cord9InlineRep10kMaxInlineE = hidden local_unnamed_addr constant i8 15, align 1
@.str = private unnamed_addr constant [27 x i8] c"Check n <= size() failed: \00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"Requested prefix size \00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c" exceeds Cord's size \00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"../../third_party/abseil-cpp/absl/strings/cord.cc\00", align 1
@_ZN4absl20raw_logging_internal21internal_log_functionE = external local_unnamed_addr global %"class.absl::base_internal::AtomicHook", align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"Requested suffix size \00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"Check s <= kMaxFlatLength failed: \00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Invalid length \00", align 1
@_ZN4absl13cord_internal17cordz_next_sampleE = external thread_local global i64, align 8
@.str.10 = private unnamed_addr constant [47 x i8] c"Check node->concat()->left != nullptr failed: \00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"Check node->concat()->right != nullptr failed: \00", align 1
@.str.23 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN4abslL10min_lengthE = internal unnamed_addr constant [47 x i64] [i64 1, i64 2, i64 3, i64 5, i64 8, i64 13, i64 21, i64 34, i64 55, i64 89, i64 144, i64 233, i64 377, i64 610, i64 987, i64 1597, i64 2584, i64 4181, i64 6765, i64 10946, i64 17711, i64 28657, i64 46368, i64 75025, i64 121393, i64 196418, i64 317811, i64 514229, i64 832040, i64 1346269, i64 2178309, i64 3524578, i64 5702887, i64 9227465, i64 14930352, i64 24157817, i64 39088169, i64 63245986, i64 102334155, i64 165580141, i64 267914296, i64 433494437, i64 701408733, i64 1134903170, i64 1836311903, i64 2971215073, i64 -1], align 16
@_ZN4absl13cord_internal24cord_ring_buffer_enabledE = external local_unnamed_addr global %"struct.std::__1::atomic.70", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"Check node->length != 0u failed: \00", align 1
@.str.33 = private unnamed_addr constant [94 x i8] c"Check node->length == (node->concat()->left->length + node->concat()->right->length) failed: \00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"Check sum != nullptr failed: \00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"Failed to locate sum node\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1

@_ZN4absl4CordC1INSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEOT_ = weak_odr hidden unnamed_addr alias void (%"class.absl::Cord"*, %"class.std::__1::basic_string"*), void (%"class.absl::Cord"*, %"class.std::__1::basic_string"*)* @_ZN4absl4CordC2INSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEOT_
@_ZN4absl4CordC1ENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE = hidden unnamed_addr alias void (%"class.absl::Cord"*, i8*, i64, i32), void (%"class.absl::Cord"*, i8*, i64, i32)* @_ZN4absl4CordC2ENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4absl4CordC2INSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEOT_(%"class.absl::Cord"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat($_ZN4absl4CordC5INSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEOT_) align 2 {
  %3 = alloca [15 x i8], align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp ult i64 %11, 16
  br i1 %12, label %13, label %68

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = select i1 %7, i8* %15, i8* %16
  %18 = bitcast %"class.absl::Cord"* %0 to i8*
  %19 = icmp ugt i64 %11, 7
  br i1 %19, label %20, label %32

20:                                               ; preds = %13
  %21 = bitcast i8* %17 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = getelementptr inbounds i8, i8* %17, i64 %11
  %24 = getelementptr inbounds i8, i8* %23, i64 -8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 1
  %27 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %27, align 1
  %28 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %22, i64* %28, align 1
  %29 = getelementptr inbounds i8, i8* %18, i64 %11
  %30 = getelementptr inbounds i8, i8* %29, i64 -8
  %31 = bitcast i8* %30 to i64*
  store i64 %26, i64* %31, align 1
  br label %64

32:                                               ; preds = %13
  %33 = icmp ugt i64 %11, 3
  br i1 %33, label %34, label %48

34:                                               ; preds = %32
  %35 = bitcast i8* %17 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = getelementptr inbounds i8, i8* %17, i64 %11
  %38 = getelementptr inbounds i8, i8* %37, i64 -4
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = getelementptr inbounds i8, i8* %18, i64 4
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 1
  %43 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %43, align 1
  %44 = bitcast %"class.absl::Cord"* %0 to i32*
  store i32 %36, i32* %44, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 %11
  %46 = getelementptr inbounds i8, i8* %45, i64 -4
  %47 = bitcast i8* %46 to i32*
  store i32 %40, i32* %47, align 1
  br label %64

48:                                               ; preds = %32
  %49 = icmp eq i64 %11, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %48
  %51 = load i8, i8* %17, align 1
  store i8 %51, i8* %18, align 1
  %52 = lshr i64 %11, 1
  %53 = getelementptr inbounds i8, i8* %17, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %18, i64 %52
  store i8 %54, i8* %55, align 1
  %56 = add nsw i64 %11, -1
  %57 = getelementptr inbounds i8, i8* %17, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %18, i64 %56
  store i8 %58, i8* %59, align 1
  br label %60

60:                                               ; preds = %50, %48
  %61 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %61, align 1
  %62 = getelementptr inbounds i8, i8* %18, i64 %11
  %63 = bitcast i8* %62 to i64*
  store i64 0, i64* %63, align 1
  br label %64

64:                                               ; preds = %20, %34, %60
  %65 = trunc i64 %11 to i8
  %66 = shl i8 %65, 1
  %67 = getelementptr inbounds i8, i8* %18, i64 15
  store i8 %66, i8* %67, align 1
  br label %128

68:                                               ; preds = %2
  br i1 %7, label %69, label %81

69:                                               ; preds = %68
  %70 = icmp ult i64 %9, 512
  br i1 %70, label %78, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 9223372036854775807
  %75 = add nsw i64 %74, -1
  %76 = lshr i64 %75, 1
  %77 = icmp ult i64 %9, %76
  br i1 %77, label %78, label %87

78:                                               ; preds = %71, %69
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  br label %83

81:                                               ; preds = %68
  %82 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i8* [ %80, %78 ], [ %82, %81 ]
  %85 = phi i64 [ %9, %78 ], [ %10, %81 ]
  %86 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %84, i64 %85, i64 0) #18
  br label %110

87:                                               ; preds = %71
  %88 = icmp sgt i64 %9, -1
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %87
  tail call void @llvm.trap() #18
  unreachable

90:                                               ; preds = %87
  %91 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %93)
  %94 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %95 = bitcast i64* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %95, i64 15, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #18
  %96 = tail call i8* @_Znwm(i64 56) #19
  %97 = getelementptr inbounds i8, i8* %96, i64 8
  %98 = bitcast i8* %97 to i32*
  store i32 2, i32* %98, align 4
  %99 = getelementptr inbounds i8, i8* %96, i64 32
  %100 = bitcast i8* %99 to i64*
  store i64 %92, i64* %100, align 8
  %101 = getelementptr inbounds i8, i8* %96, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* nonnull align 8 %93, i64 15, i1 false) #18
  %102 = getelementptr inbounds i8, i8* %96, i64 55
  store i8 %6, i8* %102, align 1
  %103 = getelementptr inbounds i8, i8* %96, i64 24
  %104 = bitcast i8* %103 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  store void (%"struct.absl::cord_internal::CordRepExternal"*)* @_ZN4absl13cord_internal19CordRepExternalImplIZNS_L17CordRepFromStringEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE14StringReleaserE7ReleaseEPNS0_15CordRepExternalE, void (%"struct.absl::cord_internal::CordRepExternal"*)** %104, align 8
  %105 = bitcast i8* %96 to i64*
  store i64 %9, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %96, i64 12
  store i8 1, i8* %106, align 4
  %107 = getelementptr inbounds i8, i8* %96, i64 16
  %108 = bitcast i8* %96 to %"struct.absl::cord_internal::CordRep"*
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %93)
  %109 = bitcast i8* %107 to i64*
  store i64 %92, i64* %109, align 8
  br label %110

110:                                              ; preds = %83, %90
  %111 = phi %"struct.absl::cord_internal::CordRep"* [ %86, %83 ], [ %108, %90 ]
  %112 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %111, %"struct.absl::cord_internal::CordRep"** %113, align 8
  %114 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %114, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %115, label %116

115:                                              ; preds = %110
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %116

116:                                              ; preds = %115, %110
  %117 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %118 = icmp sgt i64 %117, 1
  br i1 %118, label %119, label %125, !prof !2

119:                                              ; preds = %116
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %120, label %122

120:                                              ; preds = %119
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %121 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %122

122:                                              ; preds = %120, %119
  %123 = phi i64 [ %117, %119 ], [ %121, %120 ]
  %124 = add nsw i64 %123, -1
  store i64 %124, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %128

125:                                              ; preds = %116
  %126 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %125
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %112, i32 8) #18
  br label %128

128:                                              ; preds = %127, %125, %122, %64
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4absl4Cord6AppendINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEvOT_(%"class.absl::Cord"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca [15 x i8], align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, 512
  br i1 %11, label %15, label %23

12:                                               ; preds = %2
  %13 = zext i8 %6 to i64
  %14 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %18

15:                                               ; preds = %8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi i64 [ %17, %15 ], [ %14, %12 ]
  %20 = phi i64 [ %10, %15 ], [ %13, %12 ]
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  tail call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %22, i8* %21, i64 %20, i32 3) #18
  br label %68

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 9223372036854775807
  %27 = add nsw i64 %26, -1
  %28 = lshr i64 %27, 1
  %29 = icmp ult i64 %10, %28
  br i1 %29, label %53, label %30

30:                                               ; preds = %23
  %31 = icmp sgt i64 %10, -1
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %30
  tail call void @llvm.trap() #18
  unreachable

33:                                               ; preds = %30
  %34 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %36)
  %37 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %38 = bitcast i64* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %38, i64 15, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #18
  %39 = tail call i8* @_Znwm(i64 56) #19
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 2, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %39, i64 32
  %43 = bitcast i8* %42 to i64*
  store i64 %35, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %39, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %36, i64 15, i1 false) #18
  %45 = getelementptr inbounds i8, i8* %39, i64 55
  store i8 %6, i8* %45, align 1
  %46 = getelementptr inbounds i8, i8* %39, i64 24
  %47 = bitcast i8* %46 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  store void (%"struct.absl::cord_internal::CordRepExternal"*)* @_ZN4absl13cord_internal19CordRepExternalImplIZNS_L17CordRepFromStringEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE14StringReleaserE7ReleaseEPNS0_15CordRepExternalE, void (%"struct.absl::cord_internal::CordRepExternal"*)** %47, align 8
  %48 = bitcast i8* %39 to i64*
  store i64 %10, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %39, i64 12
  store i8 1, i8* %49, align 4
  %50 = getelementptr inbounds i8, i8* %39, i64 16
  %51 = bitcast i8* %39 to %"struct.absl::cord_internal::CordRep"*
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %36)
  %52 = bitcast i8* %50 to i64*
  store i64 %35, i64* %52, align 8
  br label %58

53:                                               ; preds = %23
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %55, i64 %10, i64 0) #18
  %57 = icmp eq %"struct.absl::cord_internal::CordRep"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %33, %53
  %59 = phi %"struct.absl::cord_internal::CordRep"* [ %51, %33 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %61 = bitcast %"class.absl::Cord"* %0 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 15
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %58
  tail call void @_ZN4absl4Cord9InlineRep16AppendTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %60, %"struct.absl::cord_internal::CordRep"* nonnull %59, i32 3) #18
  br label %68

67:                                               ; preds = %58
  tail call void @_ZN4absl4Cord9InlineRep19AppendTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %60, %"struct.absl::cord_internal::CordRep"* nonnull %59, i32 3) #18
  br label %68

68:                                               ; preds = %67, %66, %53, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep10AppendTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"*, %"struct.absl::cord_internal::CordRep"*, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"struct.absl::cord_internal::CordRep"* %1, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 15
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void @_ZN4absl4Cord9InlineRep16AppendTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %0, %"struct.absl::cord_internal::CordRep"* nonnull %1, i32 %2)
  br label %13

12:                                               ; preds = %5
  tail call void @_ZN4absl4Cord9InlineRep19AppendTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %0, %"struct.absl::cord_internal::CordRep"* nonnull %1, i32 %2)
  br label %13

13:                                               ; preds = %3, %12, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN4absl4Cord7PrependINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELi0EEEvOT_(%"class.absl::Cord"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca [15 x i8], align 8
  %4 = alloca [16 x i8], align 16
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 512
  br i1 %12, label %16, label %51

13:                                               ; preds = %2
  %14 = zext i8 %7 to i64
  %15 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %19

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi i64 [ %18, %16 ], [ %15, %13 ]
  %21 = phi i64 [ %11, %16 ], [ %14, %13 ]
  %22 = inttoptr i64 %20 to i8*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %95, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %26 = bitcast %"class.absl::Cord"* %0 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 15
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %24
  %32 = ashr i8 %28, 1
  %33 = sext i8 %32 to i64
  %34 = add nsw i64 %21, %33
  %35 = icmp ult i64 %34, 16
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #18
  %38 = icmp ugt i64 %21, 15
  %39 = sub nsw i64 16, %21
  %40 = select i1 %38, i64 0, i64 %39
  %41 = getelementptr [16 x i8], [16 x i8]* %4, i64 0, i64 %21
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %40, i1 false) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %37, i8* align 1 %22, i64 %21, i1 false) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %26, i64 %33, i1 false) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* nonnull align 16 %37, i64 15, i1 false) #18
  %42 = trunc i64 %34 to i8
  %43 = shl i8 %42, 1
  store i8 %43, i8* %27, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #18
  br label %95

44:                                               ; preds = %31, %24
  %45 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %22, i64 %21, i64 0) #18
  %46 = load i8, i8* %27, align 1
  %47 = and i8 %46, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %25, %"struct.absl::cord_internal::CordRep"* %45, i32 17) #18
  br label %95

50:                                               ; preds = %44
  tail call void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %25, %"struct.absl::cord_internal::CordRep"* %45, i32 17) #18
  br label %95

51:                                               ; preds = %9
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 9223372036854775807
  %55 = add nsw i64 %54, -1
  %56 = lshr i64 %55, 1
  %57 = icmp ult i64 %11, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %60, i64 %11, i64 0) #18
  br label %85

62:                                               ; preds = %51
  %63 = icmp sgt i64 %11, -1
  br i1 %63, label %65, label %64, !prof !2

64:                                               ; preds = %62
  tail call void @llvm.trap() #18
  unreachable

65:                                               ; preds = %62
  %66 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %68)
  %69 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %70 = bitcast i64* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %70, i64 15, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #18
  %71 = tail call i8* @_Znwm(i64 56) #19
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to i32*
  store i32 2, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %71, i64 32
  %75 = bitcast i8* %74 to i64*
  store i64 %67, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %71, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %68, i64 15, i1 false) #18
  %77 = getelementptr inbounds i8, i8* %71, i64 55
  store i8 %7, i8* %77, align 1
  %78 = getelementptr inbounds i8, i8* %71, i64 24
  %79 = bitcast i8* %78 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  store void (%"struct.absl::cord_internal::CordRepExternal"*)* @_ZN4absl13cord_internal19CordRepExternalImplIZNS_L17CordRepFromStringEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE14StringReleaserE7ReleaseEPNS0_15CordRepExternalE, void (%"struct.absl::cord_internal::CordRepExternal"*)** %79, align 8
  %80 = bitcast i8* %71 to i64*
  store i64 %11, i64* %80, align 8
  %81 = getelementptr inbounds i8, i8* %71, i64 12
  store i8 1, i8* %81, align 4
  %82 = getelementptr inbounds i8, i8* %71, i64 16
  %83 = bitcast i8* %71 to %"struct.absl::cord_internal::CordRep"*
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %68)
  %84 = bitcast i8* %82 to i64*
  store i64 %67, i64* %84, align 8
  br label %85

85:                                               ; preds = %58, %65
  %86 = phi %"struct.absl::cord_internal::CordRep"* [ %61, %58 ], [ %83, %65 ]
  %87 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %88 = bitcast %"class.absl::Cord"* %0 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 15
  %90 = load i8, i8* %89, align 1
  %91 = and i8 %90, 1
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %85
  tail call void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %87, %"struct.absl::cord_internal::CordRep"* %86, i32 17) #18
  br label %95

94:                                               ; preds = %85
  tail call void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %87, %"struct.absl::cord_internal::CordRep"* %86, i32 17) #18
  br label %95

95:                                               ; preds = %94, %93, %50, %49, %36, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord7PrependENS_11string_viewE(%"class.absl::Cord"*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca [16 x i8], align 16
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %34, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %8 = bitcast %"class.absl::Cord"* %0 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 15
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  %14 = ashr i8 %10, 1
  %15 = sext i8 %14 to i64
  %16 = add i64 %15, %2
  %17 = icmp ult i64 %16, 16
  br i1 %17, label %18, label %27

18:                                               ; preds = %13
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #18
  %20 = icmp ugt i64 %2, 15
  %21 = sub i64 16, %2
  %22 = select i1 %20, i64 0, i64 %21
  %23 = getelementptr [16 x i8], [16 x i8]* %4, i64 0, i64 %2
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %22, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %19, i8* align 1 %1, i64 %2, i1 false)
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %8, i64 %15, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* nonnull align 16 %19, i64 15, i1 false)
  %25 = trunc i64 %16 to i8
  %26 = shl i8 %25, 1
  store i8 %26, i8* %9, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #18
  br label %34

27:                                               ; preds = %6, %13
  %28 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %1, i64 %2, i64 0)
  %29 = load i8, i8* %9, align 1
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %7, %"struct.absl::cord_internal::CordRep"* %28, i32 17) #18
  br label %34

33:                                               ; preds = %27
  tail call void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %7, %"struct.absl::cord_internal::CordRep"* %28, i32 17) #18
  br label %34

34:                                               ; preds = %33, %32, %18, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep11PrependTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"*, %"struct.absl::cord_internal::CordRep"*, i32) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 15
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %0, %"struct.absl::cord_internal::CordRep"* %1, i32 %2)
  br label %11

10:                                               ; preds = %3
  tail call void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %0, %"struct.absl::cord_internal::CordRep"* %1, i32 %2)
  br label %11

11:                                               ; preds = %10, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4absl13cord_internal25InitializeCordRepExternalENS_11string_viewEPNS0_15CordRepExternalE(i8*, i64, %"struct.absl::cord_internal::CordRepExternal"* nocapture) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %2, i64 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %2, i64 0, i32 0, i32 2
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %2, i64 0, i32 1
  store i8* %0, i8** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep19AppendTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"*, %"struct.absl::cord_internal::CordRep"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0
  %5 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 15
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %45, label %9

9:                                                ; preds = %3
  %10 = ashr i8 %7, 1
  %11 = sext i8 %10 to i64
  %12 = icmp ult i8 %10, 20
  %13 = icmp ult i64 %11, 4083
  %14 = select i1 %13, i64 %11, i64 4083
  %15 = add nuw nsw i64 %14, 13
  %16 = select i1 %12, i64 32, i64 %15
  %17 = icmp ult i64 %16, 1025
  %18 = select i1 %17, i64 8, i64 32
  %19 = add nsw i64 %16, -1
  %20 = add nuw nsw i64 %19, %18
  %21 = sub nsw i64 0, %18
  %22 = and i64 %20, %21
  %23 = tail call i8* @_Znwm(i64 %22) #18
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 2, i32* %25, align 4
  %26 = icmp ult i64 %22, 1025
  %27 = lshr exact i64 %22, 3
  %28 = lshr i64 %22, 5
  %29 = add nuw nsw i64 %28, 96
  %30 = select i1 %26, i64 %27, i64 %29
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds i8, i8* %23, i64 12
  store i8 %31, i8* %32, align 4
  %33 = bitcast i8* %23 to i64*
  store i64 %11, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %23, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %5, i64 16, i1 false) #18
  %35 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70"* @_ZN4absl13cord_internal24cord_ring_buffer_enabledE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  %38 = bitcast i8* %23 to %"struct.absl::cord_internal::CordRep"*
  br i1 %37, label %43, label %39

39:                                               ; preds = %9
  %40 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* nonnull %38, i64 1) #18
  %41 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"* %40, %"struct.absl::cord_internal::CordRep"* %1) #18
  %42 = bitcast %"class.absl::cord_internal::CordRepRing"* %41 to %"struct.absl::cord_internal::CordRep"*
  br label %45

43:                                               ; preds = %9
  %44 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* nonnull %38, %"struct.absl::cord_internal::CordRep"* %1)
  br label %45

45:                                               ; preds = %39, %43, %3
  %46 = phi %"struct.absl::cord_internal::CordRep"* [ %1, %3 ], [ %42, %39 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %46, %"struct.absl::cord_internal::CordRep"** %47, align 8
  %48 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %48, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %49, label %50

49:                                               ; preds = %45
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %50

50:                                               ; preds = %49, %45
  %51 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %52 = icmp sgt i64 %51, 1
  br i1 %52, label %53, label %59, !prof !2

53:                                               ; preds = %50
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %54, label %56

54:                                               ; preds = %53
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %55 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %56

56:                                               ; preds = %54, %53
  %57 = phi i64 [ %51, %53 ], [ %55, %54 ]
  %58 = add nsw i64 %57, -1
  store i64 %58, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %62

59:                                               ; preds = %50
  %60 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %59
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %4, i32 %2) #18
  br label %62

62:                                               ; preds = %56, %59, %61
  ret void
}

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #5

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"*) unnamed_addr #2 {
  %3 = alloca %"class.absl::CordForest", align 8
  %4 = icmp eq %"struct.absl::cord_internal::CordRep"* %0, null
  %5 = icmp eq %"struct.absl::cord_internal::CordRep"* %1, null
  br i1 %4, label %60, label %6

6:                                                ; preds = %2
  br i1 %5, label %61, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 2 acq_rel
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %61, !prof !3

15:                                               ; preds = %11
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %0) #18
  br label %61

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 2 acq_rel
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %61, !prof !3

24:                                               ; preds = %20
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %1) #18
  br label %61

25:                                               ; preds = %16
  %26 = tail call i8* @_Znwm(i64 32) #19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 16, i1 false) #18
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 2, i32* %28, align 4
  %29 = bitcast i8* %26 to %"struct.absl::cord_internal::CordRep"*
  %30 = getelementptr inbounds i8, i8* %26, i64 12
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds i8, i8* %26, i64 16
  %32 = bitcast i8* %31 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %0, %"struct.absl::cord_internal::CordRep"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 24
  %34 = bitcast i8* %33 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %34, align 8
  %35 = add i64 %18, %9
  %36 = bitcast i8* %26 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 2
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 3, i64 0
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  br label %44

44:                                               ; preds = %40, %25
  %45 = phi i32 [ %43, %40 ], [ 0, %25 ]
  %46 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %47 = load i8, i8* %46, align 4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 3, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  br label %53

53:                                               ; preds = %44, %49
  %54 = phi i32 [ %52, %49 ], [ 0, %44 ]
  %55 = icmp ult i32 %45, %54
  %56 = select i1 %55, i32 %54, i32 %45
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, 1
  %59 = getelementptr inbounds i8, i8* %26, i64 13
  store i8 %58, i8* %59, align 1
  br label %61

60:                                               ; preds = %2
  br i1 %5, label %98, label %61

61:                                               ; preds = %24, %20, %15, %11, %6, %53, %60
  %62 = phi %"struct.absl::cord_internal::CordRep"* [ %1, %60 ], [ %0, %24 ], [ %0, %20 ], [ %1, %15 ], [ %1, %11 ], [ %0, %6 ], [ %29, %53 ]
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %62, i64 0, i32 2
  %64 = load i8, i8* %63, align 4
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %98

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %62, i64 0, i32 3, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp ult i8 %68, 16
  br i1 %69, label %98, label %70

70:                                               ; preds = %66
  %71 = icmp ugt i8 %68, 47
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %62, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  br i1 %71, label %80, label %74

74:                                               ; preds = %70
  %75 = lshr i8 %68, 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [47 x i64], [47 x i64]* @_ZN4abslL10min_lengthE, i64 0, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = icmp ult i64 %73, %78
  br i1 %79, label %80, label %98

80:                                               ; preds = %70, %74
  %81 = icmp eq i64 %73, 0
  br i1 %81, label %98, label %82

82:                                               ; preds = %80
  %83 = bitcast %"class.absl::CordForest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %83) #18
  %84 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %3, i64 0, i32 0
  store i64 %73, i64* %84, align 8
  %85 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds i64, i64* %85, i64 1
  %87 = bitcast i64* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 376, i1 false) #18
  store i64 94, i64* %85, align 8
  %88 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %3, i64 0, i32 2
  store %"struct.absl::cord_internal::CordRepConcat"* null, %"struct.absl::cord_internal::CordRepConcat"** %88, align 8
  call void @_ZN4absl10CordForest5BuildEPNS_13cord_internal7CordRepE(%"class.absl::CordForest"* nonnull %3, %"struct.absl::cord_internal::CordRep"* nonnull %62) #18
  %89 = call %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest11ConcatNodesEv(%"class.absl::CordForest"* nonnull %3) #18
  %90 = load i64, i64* %85, align 8
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %82
  %94 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %95 = bitcast %"struct.absl::cord_internal::CordRep"*** %94 to i8**
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #19
  br label %97

97:                                               ; preds = %93, %82
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %83) #18
  br label %98

98:                                               ; preds = %74, %66, %61, %97, %80, %60
  %99 = phi %"struct.absl::cord_internal::CordRep"* [ %62, %74 ], [ null, %60 ], [ %89, %97 ], [ null, %80 ], [ %62, %61 ], [ %62, %66 ]
  ret %"struct.absl::cord_internal::CordRep"* %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep16AppendTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* nocapture, %"struct.absl::cord_internal::CordRep"*, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @llvm.bswap.i64(i64 %5) #18
  %7 = add nsw i64 %6, -1
  %8 = inttoptr i64 %7 to %"class.absl::cord_internal::CordzInfo"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %3
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %8, i32 %2) #18
  br label %11

11:                                               ; preds = %3, %10
  %12 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70"* @_ZN4absl13cord_internal24cord_ring_buffer_enabledE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %15, align 8
  br i1 %14, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %16, i64 0, i32 2
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 3
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %"struct.absl::cord_internal::CordRep"* %16 to %"class.absl::cord_internal::CordRepRing"*
  br label %25

23:                                               ; preds = %17
  %24 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* %16, i64 1) #18
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi %"class.absl::cord_internal::CordRepRing"* [ %22, %21 ], [ %24, %23 ]
  %27 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"* %26, %"struct.absl::cord_internal::CordRep"* %1) #18
  %28 = bitcast %"class.absl::cord_internal::CordRepRing"* %27 to %"struct.absl::cord_internal::CordRep"*
  br label %31

29:                                               ; preds = %11
  %30 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %16, %"struct.absl::cord_internal::CordRep"* %1)
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"struct.absl::cord_internal::CordRep"* [ %28, %25 ], [ %30, %29 ]
  store %"struct.absl::cord_internal::CordRep"* %32, %"struct.absl::cord_internal::CordRep"** %15, align 8
  br i1 %9, label %35, label %33, !prof !2

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %8, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* %32, %"struct.absl::cord_internal::CordRep"** %34, align 8
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %8) #18
  br label %35

35:                                               ; preds = %31, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"*, %"struct.absl::cord_internal::CordRep"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0
  %5 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 15
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %45, label %9

9:                                                ; preds = %3
  %10 = ashr i8 %7, 1
  %11 = sext i8 %10 to i64
  %12 = icmp ult i8 %10, 20
  %13 = icmp ult i64 %11, 4083
  %14 = select i1 %13, i64 %11, i64 4083
  %15 = add nuw nsw i64 %14, 13
  %16 = select i1 %12, i64 32, i64 %15
  %17 = icmp ult i64 %16, 1025
  %18 = select i1 %17, i64 8, i64 32
  %19 = add nsw i64 %16, -1
  %20 = add nuw nsw i64 %19, %18
  %21 = sub nsw i64 0, %18
  %22 = and i64 %20, %21
  %23 = tail call i8* @_Znwm(i64 %22) #18
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 2, i32* %25, align 4
  %26 = icmp ult i64 %22, 1025
  %27 = lshr exact i64 %22, 3
  %28 = lshr i64 %22, 5
  %29 = add nuw nsw i64 %28, 96
  %30 = select i1 %26, i64 %27, i64 %29
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds i8, i8* %23, i64 12
  store i8 %31, i8* %32, align 4
  %33 = bitcast i8* %23 to i64*
  store i64 %11, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %23, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %5, i64 16, i1 false) #18
  %35 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70"* @_ZN4absl13cord_internal24cord_ring_buffer_enabledE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  %38 = bitcast i8* %23 to %"struct.absl::cord_internal::CordRep"*
  br i1 %37, label %43, label %39

39:                                               ; preds = %9
  %40 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* nonnull %38, i64 1) #18
  %41 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7PrependEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"* %40, %"struct.absl::cord_internal::CordRep"* %1) #18
  %42 = bitcast %"class.absl::cord_internal::CordRepRing"* %41 to %"struct.absl::cord_internal::CordRep"*
  br label %45

43:                                               ; preds = %9
  %44 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"* nonnull %38)
  br label %45

45:                                               ; preds = %39, %43, %3
  %46 = phi %"struct.absl::cord_internal::CordRep"* [ %1, %3 ], [ %42, %39 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %46, %"struct.absl::cord_internal::CordRep"** %47, align 8
  %48 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %48, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %49, label %50

49:                                               ; preds = %45
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %50

50:                                               ; preds = %49, %45
  %51 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %52 = icmp sgt i64 %51, 1
  br i1 %52, label %53, label %59, !prof !2

53:                                               ; preds = %50
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %54, label %56

54:                                               ; preds = %53
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %55 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %56

56:                                               ; preds = %54, %53
  %57 = phi i64 [ %51, %53 ], [ %55, %54 ]
  %58 = add nsw i64 %57, -1
  store i64 %58, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %62

59:                                               ; preds = %50
  %60 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %59
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %4, i32 %2) #18
  br label %62

62:                                               ; preds = %56, %59, %61
  ret void
}

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7PrependEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* nocapture, %"struct.absl::cord_internal::CordRep"*, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @llvm.bswap.i64(i64 %5) #18
  %7 = add nsw i64 %6, -1
  %8 = inttoptr i64 %7 to %"class.absl::cord_internal::CordzInfo"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %3
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %8, i32 %2) #18
  br label %11

11:                                               ; preds = %3, %10
  %12 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70"* @_ZN4absl13cord_internal24cord_ring_buffer_enabledE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %15, align 8
  br i1 %14, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %16, i64 0, i32 2
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 3
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %"struct.absl::cord_internal::CordRep"* %16 to %"class.absl::cord_internal::CordRepRing"*
  br label %25

23:                                               ; preds = %17
  %24 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* %16, i64 1) #18
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi %"class.absl::cord_internal::CordRepRing"* [ %22, %21 ], [ %24, %23 ]
  %27 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7PrependEPS1_PNS0_7CordRepE(%"class.absl::cord_internal::CordRepRing"* %26, %"struct.absl::cord_internal::CordRep"* %1) #18
  %28 = bitcast %"class.absl::cord_internal::CordRepRing"* %27 to %"struct.absl::cord_internal::CordRep"*
  br label %31

29:                                               ; preds = %11
  %30 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"* %16)
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"struct.absl::cord_internal::CordRep"* [ %28, %25 ], [ %30, %29 ]
  store %"struct.absl::cord_internal::CordRep"* %32, %"struct.absl::cord_internal::CordRep"** %15, align 8
  br i1 %9, label %35, label %33, !prof !2

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %8, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* %32, %"struct.absl::cord_internal::CordRep"** %34, align 8
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %8) #18
  br label %35

35:                                               ; preds = %31, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep10AssignSlowERKS1_(%"class.absl::Cord::InlineRep"*, %"class.absl::Cord::InlineRep"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %22, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 2 monotonic
  %13 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %10, %"struct.absl::cord_internal::CordRep"** %13, align 8
  %14 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %14, align 8
  %15 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -72057594037927937
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %60, label %19, !prof !2

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %1, i64 0, i32 0
  %21 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0
  tail call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %21, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %20, i32 4) #18
  br label %60

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %23, align 8
  %25 = bitcast %"class.absl::Cord::InlineRep"* %1 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 15
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %31, align 8
  %33 = icmp eq %"struct.absl::cord_internal::CordRep"* %32, null
  %34 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0
  br i1 %33, label %46, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 2 monotonic
  store %"struct.absl::cord_internal::CordRep"* %32, %"struct.absl::cord_internal::CordRep"** %23, align 8
  %38 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = or i64 %41, %39
  %43 = icmp eq i64 %42, 72057594037927936
  br i1 %43, label %55, label %44, !prof !2

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %1, i64 0, i32 0
  tail call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %34, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %45, i32 4) #18
  br label %55

46:                                               ; preds = %22, %30
  %47 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call i64 @llvm.bswap.i64(i64 %48) #18
  %50 = add nsw i64 %49, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %46
  %53 = inttoptr i64 %50 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %53) #18
  br label %54

54:                                               ; preds = %46, %52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %25, i64 16, i1 false)
  br label %55

55:                                               ; preds = %44, %35, %54
  %56 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 2 acq_rel
  %58 = icmp eq i32 %57, 2
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %55
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %24) #18
  br label %60

60:                                               ; preds = %59, %55, %19, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep9UnrefTreeEv(%"class.absl::Cord::InlineRep"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 15
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @llvm.bswap.i64(i64 %9) #18
  %11 = add nsw i64 %10, -1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13, !prof !2

13:                                               ; preds = %7
  %14 = inttoptr i64 %11 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %14) #18
  %15 = load i8, i8* %3, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %7, %13
  %19 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %19, align 8
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi %"struct.absl::cord_internal::CordRep"* [ %20, %18 ], [ null, %13 ]
  %23 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 2 acq_rel
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %21
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %22) #18
  br label %27

27:                                               ; preds = %1, %26, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4CordC2ENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord"*, i8*, i64, i32) unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 16
  br i1 %5, label %6, label %57

6:                                                ; preds = %4
  %7 = bitcast %"class.absl::Cord"* %0 to i8*
  %8 = icmp ugt i64 %2, 7
  br i1 %8, label %9, label %21

9:                                                ; preds = %6
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = getelementptr inbounds i8, i8* %1, i64 %2
  %13 = getelementptr inbounds i8, i8* %12, i64 -8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %16, align 1
  %17 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %11, i64* %17, align 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %2
  %19 = getelementptr inbounds i8, i8* %18, i64 -8
  %20 = bitcast i8* %19 to i64*
  store i64 %15, i64* %20, align 1
  br label %53

21:                                               ; preds = %6
  %22 = icmp ugt i64 %2, 3
  br i1 %22, label %23, label %37

23:                                               ; preds = %21
  %24 = bitcast i8* %1 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = getelementptr inbounds i8, i8* %26, i64 -4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = getelementptr inbounds i8, i8* %7, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 1
  %32 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %32, align 1
  %33 = bitcast %"class.absl::Cord"* %0 to i32*
  store i32 %25, i32* %33, align 1
  %34 = getelementptr inbounds i8, i8* %7, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  store i32 %29, i32* %36, align 1
  br label %53

37:                                               ; preds = %21
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %37
  %40 = load i8, i8* %1, align 1
  store i8 %40, i8* %7, align 1
  %41 = lshr i64 %2, 1
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %7, i64 %41
  store i8 %43, i8* %44, align 1
  %45 = add nsw i64 %2, -1
  %46 = getelementptr inbounds i8, i8* %1, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %45
  store i8 %47, i8* %48, align 1
  br label %49

49:                                               ; preds = %39, %37
  %50 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %50, align 1
  %51 = getelementptr inbounds i8, i8* %7, i64 %2
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 1
  br label %53

53:                                               ; preds = %9, %23, %49
  %54 = trunc i64 %2 to i8
  %55 = shl i8 %54, 1
  %56 = getelementptr inbounds i8, i8* %7, i64 15
  store i8 %55, i8* %56, align 1
  br label %75

57:                                               ; preds = %4
  %58 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %1, i64 %2, i64 0)
  %59 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %58, %"struct.absl::cord_internal::CordRep"** %60, align 8
  %61 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %61, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %62, label %63

62:                                               ; preds = %57
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %63

63:                                               ; preds = %62, %57
  %64 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %65 = icmp sgt i64 %64, 1
  br i1 %65, label %66, label %72, !prof !2

66:                                               ; preds = %63
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %67, label %69

67:                                               ; preds = %66
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %68 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %69

69:                                               ; preds = %67, %66
  %70 = phi i64 [ %64, %66 ], [ %68, %67 ]
  %71 = add nsw i64 %70, -1
  store i64 %71, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %75

72:                                               ; preds = %63
  %73 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %72
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %59, i32 %3) #18
  br label %75

75:                                               ; preds = %74, %72, %69, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8*, i64, i64) unnamed_addr #2 {
  %4 = alloca %"class.absl::FixedArray", align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %146, label %6

6:                                                ; preds = %3
  %7 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70"* @_ZN4absl13cord_internal24cord_ring_buffer_enabledE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %6
  %11 = icmp ult i64 %1, 4084
  br i1 %11, label %12, label %38

12:                                               ; preds = %10
  %13 = add i64 %2, %1
  %14 = icmp ult i64 %13, 20
  %15 = icmp ult i64 %13, 4083
  %16 = select i1 %15, i64 %13, i64 4083
  %17 = add nuw nsw i64 %16, 13
  %18 = select i1 %14, i64 32, i64 %17
  %19 = icmp ult i64 %18, 1025
  %20 = select i1 %19, i64 8, i64 32
  %21 = add nsw i64 %18, -1
  %22 = add nuw nsw i64 %21, %20
  %23 = sub nsw i64 0, %20
  %24 = and i64 %22, %23
  %25 = tail call i8* @_Znwm(i64 %24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #18
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 2, i32* %27, align 4
  %28 = icmp ult i64 %24, 1025
  %29 = lshr exact i64 %24, 3
  %30 = lshr i64 %24, 5
  %31 = add nuw nsw i64 %30, 96
  %32 = select i1 %28, i64 %29, i64 %31
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds i8, i8* %25, i64 12
  store i8 %33, i8* %34, align 4
  %35 = bitcast i8* %25 to i64*
  store i64 %1, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %0, i64 %1, i1 false) #18
  %37 = bitcast i8* %25 to %"struct.absl::cord_internal::CordRep"*
  br label %146

38:                                               ; preds = %10
  %39 = tail call i8* @_Znwm(i64 4096) #18
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 2, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %39, i64 12
  store i8 -32, i8* %42, align 4
  %43 = bitcast i8* %39 to i64*
  store i64 4083, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %39, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %0, i64 4083, i1 false) #18
  %45 = add i64 %1, -4083
  %46 = add i64 %1, -4084
  %47 = udiv i64 %46, 4083
  %48 = add nuw nsw i64 %47, 1
  %49 = bitcast i8* %39 to %"struct.absl::cord_internal::CordRep"*
  %50 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* nonnull %49, i64 %48) #18
  %51 = icmp sgt i64 %45, -1
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %38
  tail call void @llvm.trap() #18
  unreachable

53:                                               ; preds = %38
  %54 = getelementptr inbounds i8, i8* %0, i64 4083
  %55 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_NS_11string_viewEm(%"class.absl::cord_internal::CordRepRing"* %50, i8* %54, i64 %45, i64 %2) #18
  %56 = bitcast %"class.absl::cord_internal::CordRepRing"* %55 to %"struct.absl::cord_internal::CordRep"*
  br label %146

57:                                               ; preds = %6
  %58 = getelementptr inbounds %"class.absl::FixedArray", %"class.absl::FixedArray"* %4, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %58) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 272, i1 false)
  %59 = add i64 %1, -1
  %60 = udiv i64 %59, 4083
  %61 = add nuw nsw i64 %60, 1
  %62 = getelementptr inbounds %"class.absl::FixedArray", %"class.absl::FixedArray"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.absl::FixedArray", %"class.absl::FixedArray"* %4, i64 0, i32 0, i32 2
  %64 = icmp ult i64 %61, 33
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = bitcast %"class.absl::FixedArray"* %4 to %"struct.absl::cord_internal::CordRep"**
  br label %71

67:                                               ; preds = %57
  %68 = shl nuw nsw i64 %61, 3
  %69 = tail call i8* @_Znwm(i64 %68) #19
  %70 = bitcast i8* %69 to %"struct.absl::cord_internal::CordRep"**
  br label %71

71:                                               ; preds = %65, %67
  %72 = phi %"struct.absl::cord_internal::CordRep"** [ %66, %65 ], [ %70, %67 ]
  store %"struct.absl::cord_internal::CordRep"** %72, %"struct.absl::cord_internal::CordRep"*** %63, align 8
  br label %73

73:                                               ; preds = %107, %71
  %74 = phi i64 [ %1, %71 ], [ %112, %107 ]
  %75 = phi i64 [ 0, %71 ], [ %103, %107 ]
  %76 = phi i8* [ %0, %71 ], [ %111, %107 ]
  %77 = icmp ult i64 %74, 4083
  %78 = select i1 %77, i64 %74, i64 4083
  %79 = add i64 %78, %2
  %80 = icmp ult i64 %79, 20
  %81 = icmp ult i64 %79, 4083
  %82 = select i1 %81, i64 %79, i64 4083
  %83 = add nuw nsw i64 %82, 13
  %84 = select i1 %80, i64 32, i64 %83
  %85 = icmp ult i64 %84, 1025
  %86 = select i1 %85, i64 8, i64 32
  %87 = add nsw i64 %84, -1
  %88 = add nuw nsw i64 %87, %86
  %89 = sub nsw i64 0, %86
  %90 = and i64 %88, %89
  %91 = call i8* @_Znwm(i64 %90) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 16, i1 false) #18
  %92 = getelementptr inbounds i8, i8* %91, i64 8
  %93 = bitcast i8* %92 to i32*
  store i32 2, i32* %93, align 4
  %94 = icmp ult i64 %90, 1025
  %95 = lshr exact i64 %90, 3
  %96 = lshr i64 %90, 5
  %97 = add nuw nsw i64 %96, 96
  %98 = select i1 %94, i64 %95, i64 %97
  %99 = trunc i64 %98 to i8
  %100 = getelementptr inbounds i8, i8* %91, i64 12
  store i8 %99, i8* %100, align 4
  %101 = bitcast i8* %91 to i64*
  store i64 %78, i64* %101, align 8
  %102 = getelementptr inbounds i8, i8* %91, i64 13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %76, i64 %78, i1 false)
  %103 = add i64 %75, 1
  %104 = load i64, i64* %62, align 8
  %105 = icmp ugt i64 %104, %75
  br i1 %105, label %107, label %106, !prof !2

106:                                              ; preds = %73
  call void @llvm.trap() #18
  unreachable

107:                                              ; preds = %73
  %108 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %63, align 8
  %109 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %108, i64 %75
  %110 = bitcast %"struct.absl::cord_internal::CordRep"** %109 to i8**
  store i8* %91, i8** %110, align 8
  %111 = getelementptr inbounds i8, i8* %76, i64 %78
  %112 = sub i64 %74, %78
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %73

114:                                              ; preds = %107
  %115 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %63, align 8
  %116 = icmp ugt i64 %103, 1
  br i1 %116, label %119, label %138

117:                                              ; preds = %132
  %118 = icmp ugt i64 %135, 1
  br i1 %118, label %119, label %138

119:                                              ; preds = %114, %117
  %120 = phi i64 [ %135, %117 ], [ %103, %114 ]
  br label %121

121:                                              ; preds = %132, %119
  %122 = phi i64 [ %136, %132 ], [ 0, %119 ]
  %123 = phi i64 [ %135, %132 ], [ 0, %119 ]
  %124 = or i64 %122, 1
  %125 = icmp ult i64 %124, %120
  %126 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %115, i64 %122
  %127 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %126, align 8
  br i1 %125, label %128, label %132

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %115, i64 %124
  %130 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %129, align 8
  %131 = call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %127, %"struct.absl::cord_internal::CordRep"* %130) #18
  br label %132

132:                                              ; preds = %128, %121
  %133 = phi %"struct.absl::cord_internal::CordRep"* [ %131, %128 ], [ %127, %121 ]
  %134 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %115, i64 %123
  store %"struct.absl::cord_internal::CordRep"* %133, %"struct.absl::cord_internal::CordRep"** %134, align 8
  %135 = add i64 %123, 1
  %136 = add i64 %122, 2
  %137 = icmp ult i64 %136, %120
  br i1 %137, label %121, label %117

138:                                              ; preds = %117, %114
  %139 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %115, align 8
  %140 = load i64, i64* %62, align 8
  %141 = icmp ult i64 %140, 33
  br i1 %141, label %145, label %142

142:                                              ; preds = %138
  %143 = bitcast %"struct.absl::cord_internal::CordRep"*** %63 to i8**
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #19
  br label %145

145:                                              ; preds = %138, %142
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %58) #18
  br label %146

146:                                              ; preds = %53, %12, %3, %145
  %147 = phi %"struct.absl::cord_internal::CordRep"* [ %139, %145 ], [ null, %3 ], [ %37, %12 ], [ %56, %53 ]
  ret %"struct.absl::cord_internal::CordRep"* %147
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord15DestroyCordSlowEv(%"class.absl::Cord"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @llvm.bswap.i64(i64 %3) #18
  %5 = add nsw i64 %4, -1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = inttoptr i64 %5 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %8) #18
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %10, align 8
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 2 acq_rel
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %9
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %11) #18
  br label %16

16:                                               ; preds = %9, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord5ClearEv(%"class.absl::Cord"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.absl::Cord"* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 15
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @llvm.bswap.i64(i64 %9) #18
  %11 = add nsw i64 %10, -1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %7
  %14 = inttoptr i64 %11 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %14) #18
  %15 = load i8, i8* %3, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %13, %1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #18
  br label %28

19:                                               ; preds = %7, %13
  %20 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %20, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #18
  %22 = icmp eq %"struct.absl::cord_internal::CordRep"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 2 acq_rel
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %23
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %21) #18
  br label %28

28:                                               ; preds = %27, %23, %18, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.absl::Cord"* @_ZN4absl4Cord17AssignLargeStringEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.absl::Cord"* returned, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %22

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, 512
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 9223372036854775807
  %16 = add nsw i64 %15, -1
  %17 = lshr i64 %16, 1
  %18 = icmp ult i64 %10, %17
  br i1 %18, label %19, label %29

19:                                               ; preds = %12, %8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  br label %25

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %24 = zext i8 %6 to i64
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i8* [ %21, %19 ], [ %23, %22 ]
  %27 = phi i64 [ %10, %19 ], [ %24, %22 ]
  %28 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %26, i64 %27, i64 0) #18
  br label %52

29:                                               ; preds = %12
  %30 = icmp sgt i64 %10, -1
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %29
  tail call void @llvm.trap() #18
  unreachable

32:                                               ; preds = %29
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %35)
  %36 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %37 = bitcast i64* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %37, i64 15, i1 false) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #18
  %38 = tail call i8* @_Znwm(i64 56) #19
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 2, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %38, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 %34, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %35, i64 15, i1 false) #18
  %44 = getelementptr inbounds i8, i8* %38, i64 55
  store i8 %6, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %38, i64 24
  %46 = bitcast i8* %45 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  store void (%"struct.absl::cord_internal::CordRepExternal"*)* @_ZN4absl13cord_internal19CordRepExternalImplIZNS_L17CordRepFromStringEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE14StringReleaserE7ReleaseEPNS0_15CordRepExternalE, void (%"struct.absl::cord_internal::CordRepExternal"*)** %46, align 8
  %47 = bitcast i8* %38 to i64*
  store i64 %10, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %38, i64 12
  store i8 1, i8* %48, align 4
  %49 = getelementptr inbounds i8, i8* %38, i64 16
  %50 = bitcast i8* %38 to %"struct.absl::cord_internal::CordRep"*
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %35)
  %51 = bitcast i8* %49 to i64*
  store i64 %34, i64* %51, align 8
  br label %52

52:                                               ; preds = %25, %32
  %53 = phi %"struct.absl::cord_internal::CordRep"* [ %28, %25 ], [ %50, %32 ]
  %54 = bitcast %"class.absl::Cord"* %0 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 15
  %56 = load i8, i8* %55, align 1
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %80, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %60, align 8
  %62 = icmp eq %"struct.absl::cord_internal::CordRep"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = tail call i64 @llvm.bswap.i64(i64 %65) #18
  %67 = add nsw i64 %66, -1
  %68 = inttoptr i64 %67 to %"class.absl::cord_internal::CordzInfo"*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %72, label %70, !prof !2

70:                                               ; preds = %63
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %68, i32 5) #18
  store %"struct.absl::cord_internal::CordRep"* %53, %"struct.absl::cord_internal::CordRep"** %60, align 8
  %71 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %68, i64 0, i32 5
  br label %72

72:                                               ; preds = %63, %70
  %73 = phi %"struct.absl::cord_internal::CordRep"** [ %71, %70 ], [ %60, %63 ]
  store %"struct.absl::cord_internal::CordRep"* %53, %"struct.absl::cord_internal::CordRep"** %73, align 8
  %74 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %61, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 2 acq_rel
  %76 = icmp eq i32 %75, 2
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %72
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %61) #18
  br label %78

78:                                               ; preds = %72, %77
  br i1 %69, label %97, label %79, !prof !2

79:                                               ; preds = %78
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %68) #18
  br label %97

80:                                               ; preds = %52, %59
  %81 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %53, %"struct.absl::cord_internal::CordRep"** %82, align 8
  %83 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %83, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %84, label %85

84:                                               ; preds = %80
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %85

85:                                               ; preds = %84, %80
  %86 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %87 = icmp sgt i64 %86, 1
  br i1 %87, label %88, label %94, !prof !2

88:                                               ; preds = %85
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %89, label %91

89:                                               ; preds = %88
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %90 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %91

91:                                               ; preds = %89, %88
  %92 = phi i64 [ %86, %88 ], [ %90, %89 ]
  %93 = add nsw i64 %92, -1
  store i64 %93, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %97

94:                                               ; preds = %85
  %95 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %94
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %81, i32 5) #18
  br label %97

97:                                               ; preds = %96, %94, %91, %79, %78
  ret %"class.absl::Cord"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.absl::Cord"* @_ZN4absl4CordaSENS_11string_viewE(%"class.absl::Cord"* returned, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.absl::Cord"* %0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 15
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %10, align 8
  %12 = bitcast %"struct.absl::cord_internal::CordRep"* %11 to %"struct.absl::cord_internal::CordRepFlat"*
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi %"struct.absl::cord_internal::CordRepFlat"* [ %12, %9 ], [ null, %3 ]
  %15 = phi %"struct.absl::cord_internal::CordRep"* [ %11, %9 ], [ null, %3 ]
  %16 = icmp ult i64 %2, 16
  %17 = icmp ne %"struct.absl::cord_internal::CordRep"* %15, null
  br i1 %16, label %18, label %126

18:                                               ; preds = %13
  br i1 %17, label %19, label %77

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64 @llvm.bswap.i64(i64 %21) #18
  %23 = add nsw i64 %22, -1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %27, label %25, !prof !2

25:                                               ; preds = %19
  %26 = inttoptr i64 %23 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %26) #18
  br label %27

27:                                               ; preds = %19, %25
  %28 = icmp ugt i64 %2, 7
  br i1 %28, label %29, label %40

29:                                               ; preds = %27
  %30 = bitcast i8* %1 to i64*
  %31 = load i64, i64* %30, align 1
  %32 = getelementptr inbounds i8, i8* %1, i64 %2
  %33 = getelementptr inbounds i8, i8* %32, i64 -8
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 1
  store i64 0, i64* %20, align 1
  %36 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %31, i64* %36, align 1
  %37 = getelementptr inbounds i8, i8* %4, i64 %2
  %38 = getelementptr inbounds i8, i8* %37, i64 -8
  %39 = bitcast i8* %38 to i64*
  store i64 %35, i64* %39, align 1
  br label %70

40:                                               ; preds = %27
  %41 = icmp ugt i64 %2, 3
  br i1 %41, label %42, label %55

42:                                               ; preds = %40
  %43 = bitcast i8* %1 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = getelementptr inbounds i8, i8* %1, i64 %2
  %46 = getelementptr inbounds i8, i8* %45, i64 -4
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 1
  %49 = getelementptr inbounds i8, i8* %4, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 1
  store i64 0, i64* %20, align 1
  %51 = bitcast %"class.absl::Cord"* %0 to i32*
  store i32 %44, i32* %51, align 1
  %52 = getelementptr inbounds i8, i8* %4, i64 %2
  %53 = getelementptr inbounds i8, i8* %52, i64 -4
  %54 = bitcast i8* %53 to i32*
  store i32 %48, i32* %54, align 1
  br label %70

55:                                               ; preds = %40
  %56 = icmp eq i64 %2, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %55
  %58 = load i8, i8* %1, align 1
  store i8 %58, i8* %4, align 1
  %59 = lshr i64 %2, 1
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %4, i64 %59
  store i8 %61, i8* %62, align 1
  %63 = add nsw i64 %2, -1
  %64 = getelementptr inbounds i8, i8* %1, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %4, i64 %63
  store i8 %65, i8* %66, align 1
  br label %67

67:                                               ; preds = %57, %55
  store i64 0, i64* %20, align 1
  %68 = getelementptr inbounds i8, i8* %4, i64 %2
  %69 = bitcast i8* %68 to i64*
  store i64 0, i64* %69, align 1
  br label %70

70:                                               ; preds = %29, %42, %67
  %71 = trunc i64 %2 to i8
  %72 = shl i8 %71, 1
  store i8 %72, i8* %5, align 1
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 2 acq_rel
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %189, !prof !3

76:                                               ; preds = %70
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %15) #18
  br label %189

77:                                               ; preds = %18
  %78 = icmp ugt i64 %2, 7
  br i1 %78, label %79, label %91

79:                                               ; preds = %77
  %80 = bitcast i8* %1 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = getelementptr inbounds i8, i8* %1, i64 %2
  %83 = getelementptr inbounds i8, i8* %82, i64 -8
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 1
  %86 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %86, align 1
  %87 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %81, i64* %87, align 1
  %88 = getelementptr inbounds i8, i8* %4, i64 %2
  %89 = getelementptr inbounds i8, i8* %88, i64 -8
  %90 = bitcast i8* %89 to i64*
  store i64 %85, i64* %90, align 1
  br label %123

91:                                               ; preds = %77
  %92 = icmp ugt i64 %2, 3
  br i1 %92, label %93, label %107

93:                                               ; preds = %91
  %94 = bitcast i8* %1 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds i8, i8* %1, i64 %2
  %97 = getelementptr inbounds i8, i8* %96, i64 -4
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %98, align 1
  %100 = getelementptr inbounds i8, i8* %4, i64 4
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 1
  %102 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %102, align 1
  %103 = bitcast %"class.absl::Cord"* %0 to i32*
  store i32 %95, i32* %103, align 1
  %104 = getelementptr inbounds i8, i8* %4, i64 %2
  %105 = getelementptr inbounds i8, i8* %104, i64 -4
  %106 = bitcast i8* %105 to i32*
  store i32 %99, i32* %106, align 1
  br label %123

107:                                              ; preds = %91
  %108 = icmp eq i64 %2, 0
  br i1 %108, label %119, label %109

109:                                              ; preds = %107
  %110 = load i8, i8* %1, align 1
  store i8 %110, i8* %4, align 1
  %111 = lshr i64 %2, 1
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = getelementptr inbounds i8, i8* %4, i64 %111
  store i8 %113, i8* %114, align 1
  %115 = add nsw i64 %2, -1
  %116 = getelementptr inbounds i8, i8* %1, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = getelementptr inbounds i8, i8* %4, i64 %115
  store i8 %117, i8* %118, align 1
  br label %119

119:                                              ; preds = %109, %107
  %120 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %120, align 1
  %121 = getelementptr inbounds i8, i8* %4, i64 %2
  %122 = bitcast i8* %121 to i64*
  store i64 0, i64* %122, align 1
  br label %123

123:                                              ; preds = %79, %93, %119
  %124 = trunc i64 %2 to i8
  %125 = shl i8 %124, 1
  store i8 %125, i8* %5, align 1
  br label %189

126:                                              ; preds = %13
  br i1 %17, label %127, label %171

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = tail call i64 @llvm.bswap.i64(i64 %129) #18
  %131 = add nsw i64 %130, -1
  %132 = inttoptr i64 %131 to %"class.absl::cord_internal::CordzInfo"*
  %133 = icmp eq i64 %131, 0
  br i1 %133, label %135, label %134, !prof !2

134:                                              ; preds = %127
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %132, i32 5) #18
  br label %135

135:                                              ; preds = %127, %134
  %136 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %15, i64 0, i32 2
  %137 = load i8, i8* %136, align 4
  %138 = icmp ugt i8 %137, 3
  br i1 %138, label %139, label %159

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"struct.absl::cord_internal::CordRepFlat", %"struct.absl::cord_internal::CordRepFlat"* %14, i64 0, i32 0, i32 2
  %141 = load i8, i8* %140, align 4
  %142 = zext i8 %141 to i32
  %143 = icmp ult i8 %141, -127
  %144 = shl nuw nsw i32 %142, 3
  %145 = shl nuw nsw i32 %142, 5
  %146 = add nsw i32 %145, -3072
  %147 = select i1 %143, i32 %144, i32 %146
  %148 = add nsw i32 %147, -13
  %149 = sext i32 %148 to i64
  %150 = icmp ult i64 %149, %2
  br i1 %150, label %159, label %151

151:                                              ; preds = %139
  %152 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 acquire, align 4
  %154 = icmp eq i32 %153, 2
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"struct.absl::cord_internal::CordRepFlat", %"struct.absl::cord_internal::CordRepFlat"* %14, i64 0, i32 0, i32 3, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %1, i64 %2, i1 false)
  %157 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %15, i64 0, i32 0
  store i64 %2, i64* %157, align 8
  br i1 %133, label %189, label %158, !prof !2

158:                                              ; preds = %155
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %132) #18
  br label %189

159:                                              ; preds = %139, %151, %135
  %160 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %1, i64 %2, i64 0)
  %161 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %160, %"struct.absl::cord_internal::CordRep"** %161, align 8
  br i1 %133, label %164, label %162, !prof !2

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %132, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* %160, %"struct.absl::cord_internal::CordRep"** %163, align 8
  br label %164

164:                                              ; preds = %159, %162
  %165 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw sub i32* %165, i32 2 acq_rel
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %169, !prof !3

168:                                              ; preds = %164
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %15) #18
  br label %169

169:                                              ; preds = %164, %168
  br i1 %133, label %189, label %170, !prof !2

170:                                              ; preds = %169
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %132) #18
  br label %189

171:                                              ; preds = %126
  %172 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %1, i64 %2, i64 0)
  %173 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %172, %"struct.absl::cord_internal::CordRep"** %174, align 8
  %175 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %175, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %176, label %177

176:                                              ; preds = %171
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %177

177:                                              ; preds = %176, %171
  %178 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %179 = icmp sgt i64 %178, 1
  br i1 %179, label %180, label %186, !prof !2

180:                                              ; preds = %177
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %181, label %183

181:                                              ; preds = %180
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %182 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %183

183:                                              ; preds = %181, %180
  %184 = phi i64 [ %178, %180 ], [ %182, %181 ]
  %185 = add nsw i64 %184, -1
  store i64 %185, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %189

186:                                              ; preds = %177
  %187 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %187, label %188, label %189, !prof !3

188:                                              ; preds = %186
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %173, i32 5) #18
  br label %189

189:                                              ; preds = %188, %186, %183, %170, %169, %158, %155, %76, %70, %123
  ret %"class.absl::Cord"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"*, i8*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %256, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 15
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %106, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %13, align 8
  %15 = icmp eq %"struct.absl::cord_internal::CordRep"* %14, null
  br i1 %15, label %106, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = tail call i64 @llvm.bswap.i64(i64 %18) #18
  %20 = add nsw i64 %19, -1
  %21 = inttoptr i64 %20 to %"class.absl::cord_internal::CordzInfo"*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %16
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %21, i32 %3) #18
  br label %24

24:                                               ; preds = %16, %23
  %25 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 2
  %26 = load i8, i8* %25, align 4
  %27 = icmp eq i8 %26, 3
  br i1 %27, label %28, label %39

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = bitcast %"struct.absl::cord_internal::CordRep"* %14 to %"class.absl::cord_internal::CordRepRing"*
  %34 = tail call { i8*, i64 } @_ZN4absl13cord_internal11CordRepRing15GetAppendBufferEm(%"class.absl::cord_internal::CordRepRing"* nonnull %33, i64 %2) #18
  %35 = extractvalue { i8*, i64 } %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %161

37:                                               ; preds = %32, %28
  %38 = load i8, i8* %25, align 4
  br label %39

39:                                               ; preds = %37, %24
  %40 = phi i8 [ %38, %37 ], [ %26, %24 ]
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %64

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 acquire, align 4
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %50, label %60

46:                                               ; preds = %50
  %47 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %54, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 acquire, align 4
  %49 = icmp eq i32 %48, 2
  br i1 %49, label %50, label %58

50:                                               ; preds = %42, %46
  %51 = phi %"struct.absl::cord_internal::CordRep"* [ %54, %46 ], [ %14, %42 ]
  %52 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %51, i64 1, i32 1
  %53 = bitcast %"class.absl::cord_internal::Refcount"* %52 to %"struct.absl::cord_internal::CordRep"**
  %54 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %53, align 8
  %55 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %54, i64 0, i32 2
  %56 = load i8, i8* %55, align 4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %46, label %64

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %54, i64 0, i32 2
  br label %60

60:                                               ; preds = %58, %42
  %61 = phi i8* [ %25, %42 ], [ %59, %58 ]
  %62 = phi %"struct.absl::cord_internal::CordRep"* [ %14, %42 ], [ %54, %58 ]
  %63 = load i8, i8* %61, align 4
  br label %64

64:                                               ; preds = %50, %60, %39
  %65 = phi %"struct.absl::cord_internal::CordRep"* [ %62, %60 ], [ %14, %39 ], [ %54, %50 ]
  %66 = phi i8 [ %63, %60 ], [ %40, %39 ], [ %56, %50 ]
  %67 = icmp ult i8 %66, 4
  br i1 %67, label %165, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 acquire, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %165

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %65, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %65, i64 0, i32 2
  %76 = load i8, i8* %75, align 4
  %77 = zext i8 %76 to i32
  %78 = icmp ult i8 %76, -127
  %79 = shl nuw nsw i32 %77, 3
  %80 = shl nuw nsw i32 %77, 5
  %81 = add nsw i32 %80, -3072
  %82 = select i1 %78, i32 %79, i32 %81
  %83 = add nsw i32 %82, -13
  %84 = sext i32 %83 to i64
  %85 = icmp eq i64 %74, %84
  br i1 %85, label %165, label %86

86:                                               ; preds = %72
  %87 = sub i64 %84, %74
  %88 = icmp ugt i64 %87, %2
  %89 = select i1 %88, i64 %2, i64 %87
  %90 = icmp eq %"struct.absl::cord_internal::CordRep"* %65, %14
  br i1 %90, label %93, label %97

91:                                               ; preds = %97
  %92 = load i64, i64* %73, align 8
  br label %93

93:                                               ; preds = %86, %91
  %94 = phi i64 [ %92, %91 ], [ %74, %86 ]
  %95 = add i64 %94, %89
  store i64 %95, i64* %73, align 8
  %96 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %65, i64 0, i32 3, i64 %74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %1, i64 %89, i1 false)
  br label %165

97:                                               ; preds = %86, %97
  %98 = phi %"struct.absl::cord_internal::CordRep"* [ %104, %97 ], [ %14, %86 ]
  %99 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, %89
  store i64 %101, i64* %99, align 8
  %102 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 1, i32 1
  %103 = bitcast %"class.absl::cord_internal::Refcount"* %102 to %"struct.absl::cord_internal::CordRep"**
  %104 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %103, align 8
  %105 = icmp eq %"struct.absl::cord_internal::CordRep"* %104, %65
  br i1 %105, label %91, label %97

106:                                              ; preds = %12, %6
  %107 = ashr i8 %9, 1
  %108 = sext i8 %107 to i64
  %109 = sub nsw i64 15, %108
  %110 = icmp ult i64 %109, %2
  br i1 %110, label %111, label %156

111:                                              ; preds = %106
  %112 = shl nsw i64 %108, 1
  %113 = add i64 %112, %2
  %114 = udiv i64 %2, 10
  %115 = add nsw i64 %114, %108
  %116 = icmp ult i64 %113, %115
  %117 = select i1 %116, i64 %115, i64 %113
  %118 = icmp ult i64 %117, 20
  %119 = icmp ult i64 %117, 4083
  %120 = select i1 %119, i64 %117, i64 4083
  %121 = add nuw nsw i64 %120, 13
  %122 = select i1 %118, i64 32, i64 %121
  %123 = icmp ult i64 %122, 1025
  %124 = select i1 %123, i64 8, i64 32
  %125 = add nsw i64 %122, -1
  %126 = add nsw i64 %125, %124
  %127 = sub nsw i64 0, %124
  %128 = and i64 %126, %127
  %129 = tail call i8* @_Znwm(i64 %128) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 16, i1 false) #18
  %130 = getelementptr inbounds i8, i8* %129, i64 8
  %131 = bitcast i8* %130 to i32*
  store i32 2, i32* %131, align 4
  %132 = icmp ult i64 %128, 1025
  %133 = lshr exact i64 %128, 3
  %134 = lshr i64 %128, 5
  %135 = add nuw nsw i64 %134, 96
  %136 = select i1 %132, i64 %133, i64 %135
  %137 = trunc i64 %136 to i8
  %138 = getelementptr inbounds i8, i8* %129, i64 12
  store i8 %137, i8* %138, align 4
  %139 = bitcast i8* %129 to %"struct.absl::cord_internal::CordRep"*
  %140 = trunc i64 %136 to i32
  %141 = and i32 %140, 255
  %142 = icmp ult i8 %137, -127
  %143 = shl nuw nsw i32 %141, 3
  %144 = shl nuw nsw i32 %141, 5
  %145 = add nsw i32 %144, -3072
  %146 = select i1 %142, i32 %143, i32 %145
  %147 = add nsw i32 %146, -13
  %148 = sext i32 %147 to i64
  %149 = sub nsw i64 %148, %108
  %150 = icmp ult i64 %149, %2
  %151 = select i1 %150, i64 %149, i64 %2
  %152 = getelementptr inbounds i8, i8* %129, i64 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %152, i8* align 1 %7, i64 %108, i1 false)
  %153 = getelementptr inbounds i8, i8* %152, i64 %108
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 1 %1, i64 %151, i1 false)
  %154 = add i64 %151, %108
  %155 = bitcast i8* %129 to i64*
  store i64 %154, i64* %155, align 8
  br label %165

156:                                              ; preds = %106
  %157 = getelementptr inbounds i8, i8* %7, i64 %108
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %1, i64 %2, i1 false)
  %158 = trunc i64 %2 to i8
  %159 = add i8 %107, %158
  %160 = shl i8 %159, 1
  store i8 %160, i8* %8, align 1
  br label %256

161:                                              ; preds = %32
  %162 = extractvalue { i8*, i64 } %34, 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 1 %1, i64 %35, i1 false)
  %163 = icmp ugt i64 %35, %2
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %161
  tail call void @llvm.trap() #18
  unreachable

165:                                              ; preds = %72, %64, %68, %111, %93, %161
  %166 = phi %"struct.absl::cord_internal::CordRep"* [ %14, %161 ], [ %14, %93 ], [ %139, %111 ], [ %14, %68 ], [ %14, %64 ], [ %14, %72 ]
  %167 = phi i64 [ %35, %161 ], [ %89, %93 ], [ %151, %111 ], [ 0, %68 ], [ 0, %64 ], [ 0, %72 ]
  %168 = phi %"class.absl::cord_internal::CordzInfo"* [ %21, %161 ], [ %21, %93 ], [ null, %111 ], [ %21, %68 ], [ %21, %64 ], [ %21, %72 ]
  %169 = phi %"struct.absl::cord_internal::CordRep"* [ %14, %161 ], [ %14, %93 ], [ null, %111 ], [ %14, %68 ], [ %14, %64 ], [ %14, %72 ]
  %170 = getelementptr inbounds i8, i8* %1, i64 %167
  %171 = sub i64 %2, %167
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %195

173:                                              ; preds = %165
  %174 = icmp eq %"struct.absl::cord_internal::CordRep"* %169, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %166, %"struct.absl::cord_internal::CordRep"** %176, align 8
  %177 = icmp eq %"class.absl::cord_internal::CordzInfo"* %168, null
  br i1 %177, label %256, label %252, !prof !2

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0
  %180 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %166, %"struct.absl::cord_internal::CordRep"** %180, align 8
  %181 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %181, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %182, label %183

182:                                              ; preds = %178
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %183

183:                                              ; preds = %182, %178
  %184 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %185 = icmp sgt i64 %184, 1
  br i1 %185, label %186, label %192, !prof !2

186:                                              ; preds = %183
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %187, label %189

187:                                              ; preds = %186
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %188 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %189

189:                                              ; preds = %187, %186
  %190 = phi i64 [ %184, %186 ], [ %188, %187 ]
  %191 = add nsw i64 %190, -1
  store i64 %191, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %250

192:                                              ; preds = %183
  %193 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %193, label %194, label %250, !prof !3

194:                                              ; preds = %192
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %179, i32 %3) #18
  br label %250

195:                                              ; preds = %165
  %196 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70"* @_ZN4absl13cord_internal24cord_ring_buffer_enabledE, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %197 = and i8 %196, 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %214, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %166, i64 0, i32 2
  %201 = load i8, i8* %200, align 4
  %202 = icmp eq i8 %201, 3
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = bitcast %"struct.absl::cord_internal::CordRep"* %166 to %"class.absl::cord_internal::CordRepRing"*
  br label %210

205:                                              ; preds = %199
  %206 = add i64 %171, -1
  %207 = udiv i64 %206, 4083
  %208 = add nuw nsw i64 %207, 1
  %209 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6CreateEPNS0_7CordRepEm(%"struct.absl::cord_internal::CordRep"* %166, i64 %208) #18
  br label %210

210:                                              ; preds = %203, %205
  %211 = phi %"class.absl::cord_internal::CordRepRing"* [ %204, %203 ], [ %209, %205 ]
  %212 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_NS_11string_viewEm(%"class.absl::cord_internal::CordRepRing"* %211, i8* %170, i64 %171, i64 0) #18
  %213 = bitcast %"class.absl::cord_internal::CordRepRing"* %212 to %"struct.absl::cord_internal::CordRep"*
  br label %227

214:                                              ; preds = %195
  %215 = icmp ult i64 %171, 4083
  br i1 %215, label %216, label %222

216:                                              ; preds = %214
  %217 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %166, i64 0, i32 0
  %218 = load i64, i64* %217, align 8
  %219 = udiv i64 %218, 10
  %220 = icmp ult i64 %219, %171
  %221 = select i1 %220, i64 %171, i64 %219
  br label %222

222:                                              ; preds = %216, %214
  %223 = phi i64 [ %221, %216 ], [ %171, %214 ]
  %224 = sub i64 %223, %171
  %225 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %170, i64 %171, i64 %224)
  %226 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %166, %"struct.absl::cord_internal::CordRep"* %225)
  br label %227

227:                                              ; preds = %222, %210
  %228 = phi %"struct.absl::cord_internal::CordRep"* [ %213, %210 ], [ %226, %222 ]
  %229 = icmp eq %"struct.absl::cord_internal::CordRep"* %169, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %228, %"struct.absl::cord_internal::CordRep"** %231, align 8
  %232 = icmp eq %"class.absl::cord_internal::CordzInfo"* %168, null
  br i1 %232, label %256, label %252, !prof !2

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0
  %235 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %228, %"struct.absl::cord_internal::CordRep"** %235, align 8
  %236 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %236, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %237, label %238

237:                                              ; preds = %233
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %238

238:                                              ; preds = %237, %233
  %239 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %240 = icmp sgt i64 %239, 1
  br i1 %240, label %241, label %247, !prof !2

241:                                              ; preds = %238
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %242, label %244

242:                                              ; preds = %241
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %243 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %244

244:                                              ; preds = %242, %241
  %245 = phi i64 [ %239, %241 ], [ %243, %242 ]
  %246 = add nsw i64 %245, -1
  store i64 %246, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %250

247:                                              ; preds = %238
  %248 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %248, label %249, label %250, !prof !3

249:                                              ; preds = %247
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %234, i32 %3) #18
  br label %250

250:                                              ; preds = %249, %247, %244, %194, %192, %189
  %251 = icmp eq %"class.absl::cord_internal::CordzInfo"* %168, null
  br i1 %251, label %256, label %255, !prof !2

252:                                              ; preds = %230, %175
  %253 = phi %"struct.absl::cord_internal::CordRep"* [ %166, %175 ], [ %228, %230 ]
  %254 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %168, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* %253, %"struct.absl::cord_internal::CordRep"** %254, align 8
  br label %255

255:                                              ; preds = %252, %250
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %168) #18
  br label %256

256:                                              ; preds = %230, %175, %156, %255, %250, %4
  ret void
}

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing6AppendEPS1_NS_11string_viewEm(%"class.absl::cord_internal::CordRepRing"*, i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord6AppendERKS0_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  tail call void @_ZN4absl4Cord10AppendImplIRKS0_EEvOT_(%"class.absl::Cord"* %0, %"class.absl::Cord"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl4Cord10AppendImplIRKS0_EEvOT_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.absl::Cord", align 8
  %4 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %5 = bitcast %"class.absl::Cord"* %0 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 15
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = bitcast %"class.absl::Cord"* %1 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 15
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %8, label %14, label %37

14:                                               ; preds = %2
  br i1 %13, label %36, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, align 8
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 2 monotonic
  %20 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %17, %"struct.absl::cord_internal::CordRep"** %21, align 8
  %22 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %22, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %23, label %24

23:                                               ; preds = %15
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %24

24:                                               ; preds = %23, %15
  %25 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %26 = icmp sgt i64 %25, 1
  br i1 %26, label %27, label %33, !prof !2

27:                                               ; preds = %24
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %28, label %30

28:                                               ; preds = %27
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %29 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %30

30:                                               ; preds = %28, %27
  %31 = phi i64 [ %25, %27 ], [ %29, %28 ]
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %248

33:                                               ; preds = %24
  %34 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %34, label %35, label %248, !prof !3

35:                                               ; preds = %33
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %20, i32 1) #18
  br label %248

36:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %9, i64 16, i1 false)
  br label %248

37:                                               ; preds = %2
  br i1 %13, label %43, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %39, align 8
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %37
  %44 = ashr i8 %11, 1
  %45 = sext i8 %44 to i64
  br label %46

46:                                               ; preds = %38, %43
  %47 = phi i64 [ %42, %38 ], [ %45, %43 ]
  %48 = icmp ult i64 %47, 512
  br i1 %48, label %49, label %232

49:                                               ; preds = %46
  br i1 %13, label %54, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %51, align 8
  %53 = icmp eq %"struct.absl::cord_internal::CordRep"* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %49, %50
  %55 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %56 = select i1 %13, i8* %9, i8* null
  tail call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %55, i8* %56, i64 %47, i32 1)
  br label %248

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 2
  %59 = load i8, i8* %58, align 4
  %60 = icmp ugt i8 %59, 3
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 3, i64 0
  tail call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %62, i8* %63, i64 %47, i32 1)
  br label %248

64:                                               ; preds = %57
  %65 = icmp eq %"class.absl::Cord"* %1, %0
  br i1 %65, label %66, label %108

66:                                               ; preds = %64
  %67 = bitcast %"class.absl::Cord"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #18
  %68 = and i8 %7, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %71, align 8
  %73 = icmp eq %"struct.absl::cord_internal::CordRep"* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %72, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 2 monotonic
  %77 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %72, %"struct.absl::cord_internal::CordRep"** %77, align 8
  %78 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %78, align 8
  %79 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -72057594037927937
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %87, label %83, !prof !2

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0
  call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nonnull dereferenceable(16) %85, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %84, i32 7) #18
  br label %87

86:                                               ; preds = %70, %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %5, i64 16, i1 false) #18
  br label %87

87:                                               ; preds = %74, %83, %86
  call void @_ZN4absl4Cord10AppendImplIS0_EEvOT_(%"class.absl::Cord"* %0, %"class.absl::Cord"* nonnull dereferenceable(16) %3) #18
  %88 = getelementptr inbounds i8, i8* %67, i64 15
  %89 = load i8, i8* %88, align 1
  %90 = and i8 %89, 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %107, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = call i64 @llvm.bswap.i64(i64 %94) #18
  %96 = add nsw i64 %95, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %100, label %98, !prof !2

98:                                               ; preds = %92
  %99 = inttoptr i64 %96 to %"class.absl::cord_internal::CordzInfo"*
  call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %99) #18
  br label %100

100:                                              ; preds = %98, %92
  %101 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %101, align 8
  %103 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %102, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 2 acq_rel
  %105 = icmp eq i32 %104, 2
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %100
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %102) #18
  br label %107

107:                                              ; preds = %87, %100, %106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #18
  br label %248

108:                                              ; preds = %64
  %109 = bitcast %"class.absl::Cord::ChunkIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %109) #18
  %110 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  %111 = bitcast i32* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 392, i1 false)
  %112 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #18, !alias.scope !4
  %113 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 0
  %114 = load i64, i64* %113, align 8, !noalias !4
  store i64 %114, i64* %112, align 8, !alias.scope !4
  %115 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %115, align 8, !alias.scope !4
  %116 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %116, align 8, !alias.scope !4
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %4, %"struct.absl::cord_internal::CordRep"* nonnull %52) #18
  %117 = load i64, i64* %112, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %123 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  %124 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  br label %135

125:                                              ; preds = %229, %228, %108
  %126 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %132 = bitcast %"struct.absl::cord_internal::CordRep"*** %131 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #19
  br label %134

134:                                              ; preds = %125, %130
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %109) #18
  br label %248

135:                                              ; preds = %119, %229
  %136 = load i8*, i8** %120, align 8
  %137 = load i64, i64* %121, align 8
  call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %122, i8* %136, i64 %137, i32 3) #18
  %138 = load i64, i64* %112, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %135
  call void @llvm.trap() #18
  unreachable

141:                                              ; preds = %135
  %142 = load i64, i64* %121, align 8
  %143 = sub i64 %138, %142
  store i64 %143, i64* %112, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %228, label %145

145:                                              ; preds = %141
  %146 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %123, align 8
  %147 = icmp eq %"class.absl::cord_internal::CordRepRing"* %146, null
  br i1 %147, label %225, label %148

148:                                              ; preds = %145
  %149 = load i32, i32* %124, align 8
  %150 = add i32 %149, 1
  %151 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 3
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %150, %152
  %154 = select i1 %153, i32 0, i32 %150
  store i32 %154, i32* %124, align 8
  %155 = load i32, i32* %151, align 8
  %156 = zext i32 %155 to i64
  %157 = shl nuw nsw i64 %156, 4
  %158 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 5, i64 %157
  %159 = bitcast i8* %158 to i32*
  %160 = zext i32 %154 to i64
  %161 = getelementptr inbounds i32, i32* %159, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %156, 3
  %165 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 5, i64 %164
  %166 = bitcast i8* %165 to %"struct.absl::cord_internal::CordRep"**
  %167 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %166, i64 %160
  %168 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %167, align 8
  %169 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 0, i32 2
  %170 = load i8, i8* %169, align 4
  %171 = icmp ugt i8 %170, 3
  br i1 %171, label %172, label %174

172:                                              ; preds = %148
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 0, i32 3, i64 0
  br label %198

174:                                              ; preds = %148
  %175 = icmp eq i8 %170, 1
  br i1 %175, label %176, label %180

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 1
  %178 = bitcast %"struct.absl::cord_internal::CordRep"* %177 to i8**
  %179 = load i8*, i8** %178, align 8
  br label %198

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 1, i32 1
  %182 = bitcast %"class.absl::cord_internal::Refcount"* %181 to %"struct.absl::cord_internal::CordRep"**
  %183 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %182, align 8
  %184 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %183, i64 0, i32 2
  %185 = load i8, i8* %184, align 4
  %186 = icmp eq i8 %185, 1
  br i1 %186, label %189, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %183, i64 0, i32 3, i64 0
  br label %193

189:                                              ; preds = %180
  %190 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %183, i64 1
  %191 = bitcast %"struct.absl::cord_internal::CordRep"* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %189, %187
  %194 = phi i8* [ %188, %187 ], [ %192, %189 ]
  %195 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 1, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds i8, i8* %194, i64 %196
  br label %198

198:                                              ; preds = %193, %176, %172
  %199 = phi i8* [ %173, %172 ], [ %179, %176 ], [ %197, %193 ]
  %200 = getelementptr inbounds i8, i8* %199, i64 %163
  %201 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, %154
  br i1 %203, label %204, label %206

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 4
  br label %214

206:                                              ; preds = %198
  %207 = icmp eq i32 %154, 0
  %208 = select i1 %207, i32 %155, i32 %154
  %209 = add i32 %208, -1
  %210 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 5, i64 0
  %211 = bitcast i8* %210 to i64*
  %212 = zext i32 %209 to i64
  %213 = getelementptr inbounds i64, i64* %211, i64 %212
  br label %214

214:                                              ; preds = %206, %204
  %215 = phi i64* [ %205, %204 ], [ %213, %206 ]
  %216 = load i64, i64* %215, align 8
  %217 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %146, i64 0, i32 5, i64 0
  %218 = bitcast i8* %217 to i64*
  %219 = getelementptr inbounds i64, i64* %218, i64 %160
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %220, %216
  %222 = icmp sgt i64 %221, -1
  br i1 %222, label %224, label %223, !prof !2

223:                                              ; preds = %214
  call void @llvm.trap() #18
  unreachable

224:                                              ; preds = %214
  store i8* %200, i8** %120, align 8
  store i64 %221, i64* %121, align 8
  br label %229

225:                                              ; preds = %145
  %226 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %4) #18
  %227 = load i64, i64* %112, align 8
  br label %229

228:                                              ; preds = %141
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #18
  br label %125

229:                                              ; preds = %224, %225
  %230 = phi i64 [ %143, %224 ], [ %227, %225 ]
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %125, label %135

232:                                              ; preds = %46
  br i1 %13, label %233, label %235

233:                                              ; preds = %232
  %234 = atomicrmw add i32* inttoptr (i64 8 to i32*), i32 2 monotonic
  br label %248

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %236, align 8
  %238 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %237, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = atomicrmw add i32* %238, i32 2 monotonic
  %240 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %241 = icmp eq %"struct.absl::cord_internal::CordRep"* %237, null
  br i1 %241, label %248, label %242

242:                                              ; preds = %235
  %243 = load i8, i8* %6, align 1
  %244 = and i8 %243, 1
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %242
  tail call void @_ZN4absl4Cord9InlineRep16AppendTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %240, %"struct.absl::cord_internal::CordRep"* nonnull %237, i32 1) #18
  br label %248

247:                                              ; preds = %242
  tail call void @_ZN4absl4Cord9InlineRep19AppendTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %240, %"struct.absl::cord_internal::CordRep"* nonnull %237, i32 1) #18
  br label %248

248:                                              ; preds = %247, %246, %235, %233, %35, %33, %30, %134, %107, %61, %54, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord6AppendEOS0_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  tail call void @_ZN4absl4Cord10AppendImplIS0_EEvOT_(%"class.absl::Cord"* %0, %"class.absl::Cord"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl4Cord10AppendImplIS0_EEvOT_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.absl::Cord", align 8
  %4 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %5 = bitcast %"class.absl::Cord"* %0 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 15
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = bitcast %"class.absl::Cord"* %1 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 15
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %8, label %14, label %43

14:                                               ; preds = %2
  br i1 %13, label %42, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.absl::Cord"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = tail call i64 @llvm.bswap.i64(i64 %19) #18
  %21 = add nsw i64 %20, -1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = inttoptr i64 %21 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %24) #18
  br label %25

25:                                               ; preds = %15, %23
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #18
  %26 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %17, i64* %27, align 8
  %28 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %28, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %30

30:                                               ; preds = %29, %25
  %31 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %32 = icmp sgt i64 %31, 1
  br i1 %32, label %33, label %39, !prof !2

33:                                               ; preds = %30
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %34, label %36

34:                                               ; preds = %33
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %35 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %36

36:                                               ; preds = %34, %33
  %37 = phi i64 [ %31, %33 ], [ %35, %34 ]
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %259

39:                                               ; preds = %30
  %40 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %40, label %41, label %259, !prof !3

41:                                               ; preds = %39
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %26, i32 1) #18
  br label %259

42:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %9, i64 16, i1 false)
  br label %259

43:                                               ; preds = %2
  br i1 %13, label %49, label %44

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %45, align 8
  %47 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %46, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  br label %52

49:                                               ; preds = %43
  %50 = ashr i8 %11, 1
  %51 = sext i8 %50 to i64
  br label %52

52:                                               ; preds = %44, %49
  %53 = phi i64 [ %48, %44 ], [ %51, %49 ]
  %54 = icmp ult i64 %53, 512
  br i1 %54, label %55, label %238

55:                                               ; preds = %52
  br i1 %13, label %60, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %57, align 8
  %59 = icmp eq %"struct.absl::cord_internal::CordRep"* %58, null
  br i1 %59, label %60, label %63

60:                                               ; preds = %55, %56
  %61 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %62 = select i1 %13, i8* %9, i8* null
  tail call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %61, i8* %62, i64 %53, i32 1)
  br label %259

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 2
  %65 = load i8, i8* %64, align 4
  %66 = icmp ugt i8 %65, 3
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 3, i64 0
  tail call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %68, i8* %69, i64 %53, i32 1)
  br label %259

70:                                               ; preds = %63
  %71 = icmp eq %"class.absl::Cord"* %1, %0
  br i1 %71, label %72, label %114

72:                                               ; preds = %70
  %73 = bitcast %"class.absl::Cord"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #18
  %74 = and i8 %7, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %92, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %77, align 8
  %79 = icmp eq %"struct.absl::cord_internal::CordRep"* %78, null
  br i1 %79, label %92, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %78, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 2 monotonic
  %83 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %78, %"struct.absl::cord_internal::CordRep"** %83, align 8
  %84 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 72057594037927936, i64* %84, align 8
  %85 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, -72057594037927937
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %93, label %89, !prof !2

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0
  call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nonnull dereferenceable(16) %91, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %90, i32 7) #18
  br label %93

92:                                               ; preds = %76, %72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %5, i64 16, i1 false) #18
  br label %93

93:                                               ; preds = %80, %89, %92
  call void @_ZN4absl4Cord10AppendImplIS0_EEvOT_(%"class.absl::Cord"* %0, %"class.absl::Cord"* nonnull dereferenceable(16) %3) #18
  %94 = getelementptr inbounds i8, i8* %73, i64 15
  %95 = load i8, i8* %94, align 1
  %96 = and i8 %95, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = call i64 @llvm.bswap.i64(i64 %100) #18
  %102 = add nsw i64 %101, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %106, label %104, !prof !2

104:                                              ; preds = %98
  %105 = inttoptr i64 %102 to %"class.absl::cord_internal::CordzInfo"*
  call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %105) #18
  br label %106

106:                                              ; preds = %104, %98
  %107 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %107, align 8
  %109 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 2 acq_rel
  %111 = icmp eq i32 %110, 2
  br i1 %111, label %112, label %113, !prof !3

112:                                              ; preds = %106
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %108) #18
  br label %113

113:                                              ; preds = %93, %106, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #18
  br label %259

114:                                              ; preds = %70
  %115 = bitcast %"class.absl::Cord::ChunkIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %115) #18
  %116 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  %117 = bitcast i32* %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 392, i1 false)
  %118 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 24, i1 false) #18, !alias.scope !9
  %119 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 0
  %120 = load i64, i64* %119, align 8, !noalias !9
  store i64 %120, i64* %118, align 8, !alias.scope !9
  %121 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %121, align 8, !alias.scope !9
  %122 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %122, align 8, !alias.scope !9
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %4, %"struct.absl::cord_internal::CordRep"* nonnull %58) #18
  %123 = load i64, i64* %118, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %114
  %126 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %129 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  %130 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  br label %141

131:                                              ; preds = %235, %234, %114
  %132 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %138 = bitcast %"struct.absl::cord_internal::CordRep"*** %137 to i8**
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %131, %136
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %115) #18
  br label %259

141:                                              ; preds = %125, %235
  %142 = load i8*, i8** %126, align 8
  %143 = load i64, i64* %127, align 8
  call void @_ZN4absl4Cord9InlineRep11AppendArrayENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %128, i8* %142, i64 %143, i32 3) #18
  %144 = load i64, i64* %118, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %147, !prof !3

146:                                              ; preds = %141
  call void @llvm.trap() #18
  unreachable

147:                                              ; preds = %141
  %148 = load i64, i64* %127, align 8
  %149 = sub i64 %144, %148
  store i64 %149, i64* %118, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %234, label %151

151:                                              ; preds = %147
  %152 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %129, align 8
  %153 = icmp eq %"class.absl::cord_internal::CordRepRing"* %152, null
  br i1 %153, label %231, label %154

154:                                              ; preds = %151
  %155 = load i32, i32* %130, align 8
  %156 = add i32 %155, 1
  %157 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 3
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %156, %158
  %160 = select i1 %159, i32 0, i32 %156
  store i32 %160, i32* %130, align 8
  %161 = load i32, i32* %157, align 8
  %162 = zext i32 %161 to i64
  %163 = shl nuw nsw i64 %162, 4
  %164 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 5, i64 %163
  %165 = bitcast i8* %164 to i32*
  %166 = zext i32 %160 to i64
  %167 = getelementptr inbounds i32, i32* %165, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = shl nuw nsw i64 %162, 3
  %171 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 5, i64 %170
  %172 = bitcast i8* %171 to %"struct.absl::cord_internal::CordRep"**
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %172, i64 %166
  %174 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %173, align 8
  %175 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %174, i64 0, i32 2
  %176 = load i8, i8* %175, align 4
  %177 = icmp ugt i8 %176, 3
  br i1 %177, label %178, label %180

178:                                              ; preds = %154
  %179 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %174, i64 0, i32 3, i64 0
  br label %204

180:                                              ; preds = %154
  %181 = icmp eq i8 %176, 1
  br i1 %181, label %182, label %186

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %174, i64 1
  %184 = bitcast %"struct.absl::cord_internal::CordRep"* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %204

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %174, i64 1, i32 1
  %188 = bitcast %"class.absl::cord_internal::Refcount"* %187 to %"struct.absl::cord_internal::CordRep"**
  %189 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %188, align 8
  %190 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %189, i64 0, i32 2
  %191 = load i8, i8* %190, align 4
  %192 = icmp eq i8 %191, 1
  br i1 %192, label %195, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %189, i64 0, i32 3, i64 0
  br label %199

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %189, i64 1
  %197 = bitcast %"struct.absl::cord_internal::CordRep"* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i8* [ %194, %193 ], [ %198, %195 ]
  %201 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %174, i64 1, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds i8, i8* %200, i64 %202
  br label %204

204:                                              ; preds = %199, %182, %178
  %205 = phi i8* [ %179, %178 ], [ %185, %182 ], [ %203, %199 ]
  %206 = getelementptr inbounds i8, i8* %205, i64 %169
  %207 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, %160
  br i1 %209, label %210, label %212

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 4
  br label %220

212:                                              ; preds = %204
  %213 = icmp eq i32 %160, 0
  %214 = select i1 %213, i32 %161, i32 %160
  %215 = add i32 %214, -1
  %216 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 5, i64 0
  %217 = bitcast i8* %216 to i64*
  %218 = zext i32 %215 to i64
  %219 = getelementptr inbounds i64, i64* %217, i64 %218
  br label %220

220:                                              ; preds = %212, %210
  %221 = phi i64* [ %211, %210 ], [ %219, %212 ]
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %152, i64 0, i32 5, i64 0
  %224 = bitcast i8* %223 to i64*
  %225 = getelementptr inbounds i64, i64* %224, i64 %166
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %226, %222
  %228 = icmp sgt i64 %227, -1
  br i1 %228, label %230, label %229, !prof !2

229:                                              ; preds = %220
  call void @llvm.trap() #18
  unreachable

230:                                              ; preds = %220
  store i8* %206, i8** %126, align 8
  store i64 %227, i64* %127, align 8
  br label %235

231:                                              ; preds = %151
  %232 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %4) #18
  %233 = load i64, i64* %118, align 8
  br label %235

234:                                              ; preds = %147
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 16, i1 false) #18
  br label %131

235:                                              ; preds = %230, %231
  %236 = phi i64 [ %149, %230 ], [ %233, %231 ]
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %131, label %141

238:                                              ; preds = %52
  br i1 %13, label %239, label %240

239:                                              ; preds = %238
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #18
  br label %259

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %241, align 8
  %243 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = tail call i64 @llvm.bswap.i64(i64 %244) #18
  %246 = add nsw i64 %245, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %250, label %248, !prof !2

248:                                              ; preds = %240
  %249 = inttoptr i64 %246 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %249) #18
  br label %250

250:                                              ; preds = %240, %248
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #18
  %251 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %252 = icmp eq %"struct.absl::cord_internal::CordRep"* %242, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %250
  %254 = load i8, i8* %6, align 1
  %255 = and i8 %254, 1
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %258, label %257

257:                                              ; preds = %253
  tail call void @_ZN4absl4Cord9InlineRep16AppendTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %251, %"struct.absl::cord_internal::CordRep"* nonnull %242, i32 1) #18
  br label %259

258:                                              ; preds = %253
  tail call void @_ZN4absl4Cord9InlineRep19AppendTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %251, %"struct.absl::cord_internal::CordRep"* nonnull %242, i32 1) #18
  br label %259

259:                                              ; preds = %258, %257, %250, %239, %41, %39, %36, %140, %113, %67, %60, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord7PrependERKS0_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = bitcast %"class.absl::Cord"* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 15
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %10, align 8
  %12 = icmp eq %"struct.absl::cord_internal::CordRep"* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 2 monotonic
  %16 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %17 = bitcast %"class.absl::Cord"* %0 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 15
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %13
  tail call void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %16, %"struct.absl::cord_internal::CordRep"* nonnull %11, i32 16) #18
  br label %63

23:                                               ; preds = %13
  tail call void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %16, %"struct.absl::cord_internal::CordRep"* nonnull %11, i32 16) #18
  br label %63

24:                                               ; preds = %9
  %25 = load i64, i64* null, align 536870912
  br label %29

26:                                               ; preds = %2
  %27 = ashr i8 %6, 1
  %28 = sext i8 %27 to i64
  br label %29

29:                                               ; preds = %24, %26
  %30 = phi i8* [ null, %24 ], [ %4, %26 ]
  %31 = phi i64 [ %25, %24 ], [ %28, %26 ]
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %29
  tail call void @llvm.trap() #18
  unreachable

34:                                               ; preds = %29
  %35 = icmp eq i64 %31, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %38 = bitcast %"class.absl::Cord"* %0 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 15
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %56

43:                                               ; preds = %36
  %44 = ashr i8 %40, 1
  %45 = sext i8 %44 to i64
  %46 = add i64 %31, %45
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #18
  %50 = icmp ugt i64 %31, 15
  %51 = sub nsw i64 16, %31
  %52 = select i1 %50, i64 0, i64 %51
  %53 = getelementptr [16 x i8], [16 x i8]* %3, i64 0, i64 %31
  call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 %52, i1 false) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %49, i8* align 1 %30, i64 %31, i1 false) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %38, i64 %45, i1 false) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* nonnull align 16 %49, i64 15, i1 false) #18
  %54 = trunc i64 %46 to i8
  %55 = shl i8 %54, 1
  store i8 %55, i8* %39, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #18
  br label %63

56:                                               ; preds = %43, %36
  %57 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL7NewTreeEPKcmm(i8* %30, i64 %31, i64 0) #18
  %58 = load i8, i8* %39, align 1
  %59 = and i8 %58, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void @_ZN4absl4Cord9InlineRep17PrependTreeToTreeEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %37, %"struct.absl::cord_internal::CordRep"* %57, i32 17) #18
  br label %63

62:                                               ; preds = %56
  tail call void @_ZN4absl4Cord9InlineRep20PrependTreeToInlinedEPNS_13cord_internal7CordRepENS2_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord::InlineRep"* %37, %"struct.absl::cord_internal::CordRep"* %57, i32 17) #18
  br label %63

63:                                               ; preds = %62, %61, %48, %34, %23, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord12RemovePrefixEm(%"class.absl::Cord"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.absl::InlinedVector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = bitcast %"class.absl::Cord"* %0 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 15
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, align 8
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  br label %23

20:                                               ; preds = %2
  %21 = ashr i8 %12, 1
  %22 = sext i8 %21 to i64
  br label %23

23:                                               ; preds = %15, %20
  %24 = phi i64 [ %19, %15 ], [ %22, %20 ]
  %25 = icmp ult i64 %24, %1
  br i1 %25, label %26, label %38, !prof !3

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #18
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0))
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #18
  %30 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #18
  call void @_ZN4absl8AlphaNumC2EPKc(%"class.absl::AlphaNum"* nonnull %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0))
  %31 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #18
  call void @_ZN4absl8AlphaNumC2Em(%"class.absl::AlphaNum"* nonnull %7, i64 %1)
  %32 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #18
  call void @_ZN4absl8AlphaNumC2EPKc(%"class.absl::AlphaNum"* nonnull %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  %33 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #18
  %34 = call i64 @_ZNK4absl4Cord4sizeEv(%"class.absl::Cord"* %0)
  call void @_ZN4absl8AlphaNumC2Em(%"class.absl::AlphaNum"* nonnull %9, i64 %34)
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9) #18
  %35 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  %36 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %37 = inttoptr i64 %36 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %37(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 919, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #18
  unreachable

38:                                               ; preds = %23
  br i1 %14, label %43, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %40, align 8
  %42 = icmp eq %"struct.absl::cord_internal::CordRep"* %41, null
  br i1 %42, label %43, label %93

43:                                               ; preds = %38, %39
  %44 = getelementptr inbounds i8, i8* %10, i64 %1
  %45 = ashr i8 %12, 1
  %46 = sext i8 %45 to i64
  %47 = sub i64 %46, %1
  %48 = icmp ugt i64 %47, 7
  br i1 %48, label %49, label %60

49:                                               ; preds = %43
  %50 = bitcast i8* %44 to i64*
  %51 = load i64, i64* %50, align 1
  %52 = getelementptr inbounds i8, i8* %10, i64 %46
  %53 = getelementptr inbounds i8, i8* %52, i64 -8
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %51, i64* %56, align 1
  %57 = getelementptr inbounds i8, i8* %10, i64 %47
  %58 = getelementptr inbounds i8, i8* %57, i64 -8
  %59 = bitcast i8* %58 to i64*
  store i64 %55, i64* %59, align 1
  br label %85

60:                                               ; preds = %43
  %61 = icmp ugt i64 %47, 3
  br i1 %61, label %62, label %73

62:                                               ; preds = %60
  %63 = bitcast i8* %44 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = getelementptr inbounds i8, i8* %10, i64 %46
  %66 = getelementptr inbounds i8, i8* %65, i64 -4
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = bitcast %"class.absl::Cord"* %0 to i32*
  store i32 %64, i32* %69, align 1
  %70 = getelementptr inbounds i8, i8* %10, i64 %47
  %71 = getelementptr inbounds i8, i8* %70, i64 -4
  %72 = bitcast i8* %71 to i32*
  store i32 %68, i32* %72, align 1
  br label %85

73:                                               ; preds = %60
  %74 = icmp eq i64 %47, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %73
  %76 = load i8, i8* %44, align 1
  store i8 %76, i8* %10, align 1
  %77 = lshr i64 %47, 1
  %78 = getelementptr inbounds i8, i8* %44, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %10, i64 %77
  store i8 %79, i8* %80, align 1
  %81 = add nsw i64 %47, -1
  %82 = getelementptr inbounds i8, i8* %44, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %10, i64 %81
  store i8 %83, i8* %84, align 1
  br label %85

85:                                               ; preds = %49, %62, %73, %75
  %86 = load i8, i8* %11, align 1
  %87 = ashr i8 %86, 1
  %88 = sext i8 %87 to i64
  %89 = sub i64 %88, %1
  %90 = getelementptr inbounds i8, i8* %10, i64 %89
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %90, i8 0, i64 %1, i1 false) #18
  %91 = trunc i64 %89 to i8
  %92 = shl i8 %91, 1
  store i8 %92, i8* %11, align 1
  br label %266

93:                                               ; preds = %39
  %94 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = tail call i64 @llvm.bswap.i64(i64 %95) #18
  %97 = add nsw i64 %96, -1
  %98 = inttoptr i64 %97 to %"class.absl::cord_internal::CordzInfo"*
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %101, label %100, !prof !2

100:                                              ; preds = %93
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %98, i32 18) #18
  br label %101

101:                                              ; preds = %93, %100
  %102 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 2
  %103 = load i8, i8* %102, align 4
  %104 = icmp eq i8 %103, 3
  br i1 %104, label %105, label %109

105:                                              ; preds = %101
  %106 = bitcast %"struct.absl::cord_internal::CordRep"* %41 to %"class.absl::cord_internal::CordRepRing"*
  %107 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing12RemovePrefixEPS1_mm(%"class.absl::cord_internal::CordRepRing"* nonnull %106, i64 %1, i64 0) #18
  %108 = bitcast %"class.absl::cord_internal::CordRepRing"* %107 to %"struct.absl::cord_internal::CordRep"*
  br label %258

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp ugt i64 %111, %1
  br i1 %112, label %113, label %252

113:                                              ; preds = %109
  %114 = icmp eq i64 %1, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 2 monotonic
  br label %252

118:                                              ; preds = %113
  %119 = bitcast %"class.absl::InlinedVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %119) #18
  %120 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1
  %121 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 376, i1 false) #18
  %122 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %122, align 8
  %123 = load i8, i8* %102, align 4
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %178

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %127 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %120 to i64
  %128 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %129 = bitcast %"struct.absl::cord_internal::CordRep"*** %128 to i64*
  %130 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0
  br label %131

131:                                              ; preds = %166, %125
  %132 = phi i64 [ %1, %125 ], [ %168, %166 ]
  %133 = phi %"struct.absl::cord_internal::CordRep"* [ %41, %125 ], [ %169, %166 ]
  %134 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %133, i64 1
  %135 = bitcast %"struct.absl::cord_internal::CordRep"* %134 to %"struct.absl::cord_internal::CordRep"**
  %136 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %135, align 8
  %137 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %136, i64 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = icmp ult i64 %132, %138
  br i1 %139, label %140, label %162

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %133, i64 1, i32 1
  %142 = load i64, i64* %122, align 8, !noalias !14
  %143 = and i64 %142, 1
  %144 = icmp eq i64 %143, 0
  %145 = load i64, i64* %126, align 8
  %146 = select i1 %144, i64 47, i64 %145
  %147 = lshr i64 %142, 1
  %148 = icmp eq i64 %147, %146
  br i1 %148, label %159, label %149, !prof !3

149:                                              ; preds = %140
  %150 = load i64, i64* %129, align 8
  %151 = select i1 %144, i64 %127, i64 %150
  %152 = inttoptr i64 %151 to %"struct.absl::cord_internal::CordRep"**
  %153 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %152, i64 %147
  %154 = bitcast %"struct.absl::cord_internal::CordRep"** %153 to i64*
  %155 = bitcast %"class.absl::cord_internal::Refcount"* %141 to i64*
  %156 = load i64, i64* %155, align 8
  store i64 %156, i64* %154, align 8
  %157 = load i64, i64* %122, align 8
  %158 = add i64 %157, 2
  store i64 %158, i64* %122, align 8
  br label %166

159:                                              ; preds = %140
  %160 = bitcast %"class.absl::cord_internal::Refcount"* %141 to %"struct.absl::cord_internal::CordRep"**
  %161 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %130, %"struct.absl::cord_internal::CordRep"** dereferenceable(8) %160) #18
  br label %166

162:                                              ; preds = %131
  %163 = sub i64 %132, %138
  %164 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %133, i64 1, i32 1
  %165 = bitcast %"class.absl::cord_internal::Refcount"* %164 to %"struct.absl::cord_internal::CordRep"**
  br label %166

166:                                              ; preds = %162, %159, %149
  %167 = phi %"struct.absl::cord_internal::CordRep"** [ %165, %162 ], [ %135, %149 ], [ %135, %159 ]
  %168 = phi i64 [ %163, %162 ], [ %132, %149 ], [ %132, %159 ]
  %169 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %167, align 8
  %170 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %169, i64 0, i32 2
  %171 = load i8, i8* %170, align 4
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %131, label %173

173:                                              ; preds = %166
  %174 = icmp eq i64 %168, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %169, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 2 monotonic
  br label %214

178:                                              ; preds = %173, %118
  %179 = phi i8 [ %171, %173 ], [ %123, %118 ]
  %180 = phi i64 [ %168, %173 ], [ %1, %118 ]
  %181 = phi %"struct.absl::cord_internal::CordRep"* [ %169, %173 ], [ %41, %118 ]
  %182 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %181, i64 0, i32 0
  %183 = load i64, i64* %182, align 8
  %184 = sub i64 %183, %180
  %185 = icmp eq i8 %179, 2
  br i1 %185, label %186, label %193

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %181, i64 1, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, %180
  %190 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %181, i64 1, i32 1
  %191 = bitcast %"class.absl::cord_internal::Refcount"* %190 to %"struct.absl::cord_internal::CordRep"**
  %192 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %191, align 8
  br label %193

193:                                              ; preds = %186, %178
  %194 = phi %"struct.absl::cord_internal::CordRep"* [ %192, %186 ], [ %181, %178 ]
  %195 = phi i64 [ %189, %186 ], [ %180, %178 ]
  %196 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %194, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = atomicrmw add i32* %196, i32 2 monotonic
  %198 = icmp eq i64 %184, 0
  br i1 %198, label %199, label %203

199:                                              ; preds = %193
  %200 = atomicrmw sub i32* %196, i32 2 acq_rel
  %201 = icmp eq i32 %200, 2
  br i1 %201, label %202, label %214, !prof !3

202:                                              ; preds = %199
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %194) #18
  br label %214

203:                                              ; preds = %193
  %204 = call i8* @_Znwm(i64 32) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %204, i8 0, i64 16, i1 false) #18
  %205 = getelementptr inbounds i8, i8* %204, i64 8
  %206 = bitcast i8* %205 to i32*
  store i32 2, i32* %206, align 4
  %207 = bitcast i8* %204 to %"struct.absl::cord_internal::CordRep"*
  %208 = bitcast i8* %204 to i64*
  store i64 %184, i64* %208, align 8
  %209 = getelementptr inbounds i8, i8* %204, i64 12
  store i8 2, i8* %209, align 4
  %210 = getelementptr inbounds i8, i8* %204, i64 16
  %211 = bitcast i8* %210 to i64*
  store i64 %195, i64* %211, align 8
  %212 = getelementptr inbounds i8, i8* %204, i64 24
  %213 = bitcast i8* %212 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %194, %"struct.absl::cord_internal::CordRep"** %213, align 8
  br label %214

214:                                              ; preds = %203, %202, %199, %175
  %215 = phi %"struct.absl::cord_internal::CordRep"* [ %169, %175 ], [ %207, %203 ], [ null, %199 ], [ null, %202 ]
  %216 = load i64, i64* %122, align 8
  %217 = icmp ult i64 %216, 2
  %218 = and i64 %216, 1
  %219 = icmp eq i64 %218, 0
  br i1 %217, label %244, label %220

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %222 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %120 to %"struct.absl::cord_internal::CordRep"**
  br label %223

223:                                              ; preds = %239, %220
  %224 = phi i1 [ %219, %220 ], [ %243, %239 ]
  %225 = phi %"struct.absl::cord_internal::CordRep"* [ %215, %220 ], [ %235, %239 ]
  %226 = phi i64 [ %216, %220 ], [ %240, %239 ]
  %227 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %221, align 8
  %228 = select i1 %224, %"struct.absl::cord_internal::CordRep"** %222, %"struct.absl::cord_internal::CordRep"** %227
  %229 = lshr i64 %226, 1
  %230 = add nsw i64 %229, -1
  %231 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %228, i64 %230
  %232 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %231, align 8
  %233 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %232, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = atomicrmw add i32* %233, i32 2 monotonic
  %235 = call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %225, %"struct.absl::cord_internal::CordRep"* %232) #18
  %236 = load i64, i64* %122, align 8
  %237 = icmp ult i64 %236, 2
  br i1 %237, label %238, label %239, !prof !3

238:                                              ; preds = %223
  call void @llvm.trap() #18
  unreachable

239:                                              ; preds = %223
  %240 = add i64 %236, -2
  store i64 %240, i64* %122, align 8
  %241 = icmp ult i64 %240, 2
  %242 = and i64 %240, 1
  %243 = icmp eq i64 %242, 0
  br i1 %241, label %244, label %223

244:                                              ; preds = %239, %214
  %245 = phi %"struct.absl::cord_internal::CordRep"* [ %215, %214 ], [ %235, %239 ]
  %246 = phi i1 [ %219, %214 ], [ %243, %239 ]
  br i1 %246, label %251, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %249 = bitcast %"struct.absl::cord_internal::CordRep"*** %248 to i8**
  %250 = load i8*, i8** %249, align 8
  call void @_ZdlPv(i8* %250) #19
  br label %251

251:                                              ; preds = %247, %244
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %119) #18
  br label %252

252:                                              ; preds = %109, %115, %251
  %253 = phi %"struct.absl::cord_internal::CordRep"* [ %41, %115 ], [ %245, %251 ], [ null, %109 ]
  %254 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw sub i32* %254, i32 2 acq_rel
  %256 = icmp eq i32 %255, 2
  br i1 %256, label %257, label %258, !prof !3

257:                                              ; preds = %252
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %41) #18
  br label %258

258:                                              ; preds = %257, %252, %105
  %259 = phi %"struct.absl::cord_internal::CordRep"* [ %108, %105 ], [ %253, %252 ], [ %253, %257 ]
  %260 = icmp eq %"struct.absl::cord_internal::CordRep"* %259, null
  br i1 %260, label %262, label %261

261:                                              ; preds = %258
  store %"struct.absl::cord_internal::CordRep"* %259, %"struct.absl::cord_internal::CordRep"** %40, align 8
  br label %263

262:                                              ; preds = %258
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #18
  br label %263

263:                                              ; preds = %262, %261
  br i1 %99, label %266, label %264, !prof !2

264:                                              ; preds = %263
  %265 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %98, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* %259, %"struct.absl::cord_internal::CordRep"** %265, align 8
  call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %98) #18
  br label %266

266:                                              ; preds = %263, %264, %85
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4absl4Cord4sizeEv(%"class.absl::Cord"*) local_unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.absl::Cord"* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 15
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %8, align 8
  %10 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = ashr i8 %4, 1
  %14 = sext i8 %13 to i64
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i64 [ %11, %7 ], [ %14, %12 ]
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #18
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #20
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #19
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #18
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl8AlphaNumC2EPKc(%"class.absl::AlphaNum"*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %0, i64 0, i32 0, i32 1
  %5 = icmp eq i8* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %1) #18
  %8 = icmp sgt i64 %7, -1
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %6
  tail call void @llvm.trap() #18
  unreachable

10:                                               ; preds = %2, %6
  %11 = phi i64 [ 0, %2 ], [ %7, %6 ]
  store i64 %11, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl8AlphaNumC2Em(%"class.absl::AlphaNum"*, i64) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %0, i64 0, i32 1, i64 0
  %4 = tail call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %1, i8* %3) #18
  %5 = ptrtoint i8* %4 to i64
  %6 = ptrtoint i8* %3 to i64
  %7 = sub i64 %5, %6
  %8 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %0, i64 0, i32 0, i32 0
  store i8* %3, i8** %8, align 8
  %9 = icmp sgt i64 %7, -1
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %2
  tail call void @llvm.trap() #18
  unreachable

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %14) #18
  ret %"class.std::__1::basic_string"* %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"*) unnamed_addr #3 align 2

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing12RemovePrefixEPS1_mm(%"class.absl::cord_internal::CordRepRing"*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord12RemoveSuffixEm(%"class.absl::Cord"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.absl::InlinedVector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = bitcast %"class.absl::Cord"* %0 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 15
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, align 8
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  br label %23

20:                                               ; preds = %2
  %21 = ashr i8 %12, 1
  %22 = sext i8 %21 to i64
  br label %23

23:                                               ; preds = %15, %20
  %24 = phi i64 [ %19, %15 ], [ %22, %20 ]
  %25 = icmp ult i64 %24, %1
  br i1 %25, label %26, label %38, !prof !3

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #18
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0))
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #18
  %30 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #18
  call void @_ZN4absl8AlphaNumC2EPKc(%"class.absl::AlphaNum"* nonnull %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  %31 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #18
  call void @_ZN4absl8AlphaNumC2Em(%"class.absl::AlphaNum"* nonnull %7, i64 %1)
  %32 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #18
  call void @_ZN4absl8AlphaNumC2EPKc(%"class.absl::AlphaNum"* nonnull %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  %33 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #18
  %34 = call i64 @_ZNK4absl4Cord4sizeEv(%"class.absl::Cord"* %0)
  call void @_ZN4absl8AlphaNumC2Em(%"class.absl::AlphaNum"* nonnull %9, i64 %34)
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9) #18
  %35 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  %36 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %37 = inttoptr i64 %36 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %37(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 940, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #18
  unreachable

38:                                               ; preds = %23
  br i1 %14, label %43, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %40, align 8
  %42 = icmp eq %"struct.absl::cord_internal::CordRep"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %38, %39
  %44 = ashr i8 %12, 1
  %45 = sext i8 %44 to i64
  %46 = sub i64 %45, %1
  %47 = getelementptr inbounds i8, i8* %10, i64 %46
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 %1, i1 false) #18
  %48 = trunc i64 %46 to i8
  %49 = shl i8 %48, 1
  store i8 %49, i8* %11, align 1
  br label %243

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = tail call i64 @llvm.bswap.i64(i64 %52) #18
  %54 = add nsw i64 %53, -1
  %55 = inttoptr i64 %54 to %"class.absl::cord_internal::CordzInfo"*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %58, label %57, !prof !2

57:                                               ; preds = %50
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %55, i32 19) #18
  br label %58

58:                                               ; preds = %50, %57
  %59 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 2
  %60 = load i8, i8* %59, align 4
  %61 = icmp eq i8 %60, 3
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = bitcast %"struct.absl::cord_internal::CordRep"* %41 to %"class.absl::cord_internal::CordRepRing"*
  %64 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing12RemoveSuffixEPS1_mm(%"class.absl::cord_internal::CordRepRing"* nonnull %63, i64 %1, i64 0) #18
  %65 = bitcast %"class.absl::cord_internal::CordRepRing"* %64 to %"struct.absl::cord_internal::CordRep"*
  br label %235

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ugt i64 %68, %1
  br i1 %69, label %70, label %229

70:                                               ; preds = %66
  %71 = icmp eq i64 %1, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 2 monotonic
  br label %229

75:                                               ; preds = %70
  %76 = bitcast %"class.absl::InlinedVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %76) #18
  %77 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1
  %78 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 376, i1 false) #18
  %79 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = icmp eq i32 %81, 2
  %83 = load i8, i8* %59, align 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %145

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %87 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %77 to i64
  %88 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %89 = bitcast %"struct.absl::cord_internal::CordRep"*** %88 to i64*
  %90 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0
  br label %91

91:                                               ; preds = %135, %85
  %92 = phi i1 [ %82, %85 ], [ %136, %135 ]
  %93 = phi i64 [ %1, %85 ], [ %129, %135 ]
  %94 = phi %"struct.absl::cord_internal::CordRep"* [ %41, %85 ], [ %130, %135 ]
  %95 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %94, i64 1, i32 1
  %96 = bitcast %"class.absl::cord_internal::Refcount"* %95 to %"struct.absl::cord_internal::CordRep"**
  %97 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %96, align 8
  %98 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %97, i64 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp ult i64 %93, %99
  br i1 %100, label %101, label %123

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %94, i64 1
  %103 = load i64, i64* %79, align 8, !noalias !17
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %104, 0
  %106 = load i64, i64* %86, align 8
  %107 = select i1 %105, i64 47, i64 %106
  %108 = lshr i64 %103, 1
  %109 = icmp eq i64 %108, %107
  br i1 %109, label %120, label %110, !prof !3

110:                                              ; preds = %101
  %111 = load i64, i64* %89, align 8
  %112 = select i1 %105, i64 %87, i64 %111
  %113 = inttoptr i64 %112 to %"struct.absl::cord_internal::CordRep"**
  %114 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %113, i64 %108
  %115 = bitcast %"struct.absl::cord_internal::CordRep"** %114 to i64*
  %116 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %102, i64 0, i32 0
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %115, align 8
  %118 = load i64, i64* %79, align 8
  %119 = add i64 %118, 2
  store i64 %119, i64* %79, align 8
  br label %127

120:                                              ; preds = %101
  %121 = bitcast %"struct.absl::cord_internal::CordRep"* %102 to %"struct.absl::cord_internal::CordRep"**
  %122 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %90, %"struct.absl::cord_internal::CordRep"** dereferenceable(8) %121) #18
  br label %127

123:                                              ; preds = %91
  %124 = sub i64 %93, %99
  %125 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %94, i64 1
  %126 = bitcast %"struct.absl::cord_internal::CordRep"* %125 to %"struct.absl::cord_internal::CordRep"**
  br label %127

127:                                              ; preds = %123, %120, %110
  %128 = phi %"struct.absl::cord_internal::CordRep"** [ %126, %123 ], [ %96, %110 ], [ %96, %120 ]
  %129 = phi i64 [ %124, %123 ], [ %93, %110 ], [ %93, %120 ]
  %130 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %128, align 8
  br i1 %92, label %131, label %135

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %130, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 acquire, align 4
  %134 = icmp eq i32 %133, 2
  br label %135

135:                                              ; preds = %131, %127
  %136 = phi i1 [ false, %127 ], [ %134, %131 ]
  %137 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %130, i64 0, i32 2
  %138 = load i8, i8* %137, align 4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %91, label %140

140:                                              ; preds = %135
  %141 = icmp eq i64 %129, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %130, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 2 monotonic
  br label %191

145:                                              ; preds = %140, %75
  %146 = phi i8 [ %138, %140 ], [ %83, %75 ]
  %147 = phi i1 [ %136, %140 ], [ %82, %75 ]
  %148 = phi i64 [ %129, %140 ], [ %1, %75 ]
  %149 = phi %"struct.absl::cord_internal::CordRep"* [ %130, %140 ], [ %41, %75 ]
  %150 = xor i1 %147, true
  %151 = icmp eq i8 %146, 1
  %152 = or i1 %151, %150
  br i1 %152, label %159, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %149, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 2 monotonic
  %156 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %149, i64 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %157, %148
  store i64 %158, i64* %156, align 8
  br label %191

159:                                              ; preds = %145
  %160 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %149, i64 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %161, %148
  %163 = icmp eq i8 %146, 2
  br i1 %163, label %164, label %170

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %149, i64 1, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %149, i64 1, i32 1
  %168 = bitcast %"class.absl::cord_internal::Refcount"* %167 to %"struct.absl::cord_internal::CordRep"**
  %169 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %168, align 8
  br label %170

170:                                              ; preds = %164, %159
  %171 = phi %"struct.absl::cord_internal::CordRep"* [ %169, %164 ], [ %149, %159 ]
  %172 = phi i64 [ %166, %164 ], [ 0, %159 ]
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 2 monotonic
  %175 = icmp eq i64 %162, 0
  br i1 %175, label %176, label %180

176:                                              ; preds = %170
  %177 = atomicrmw sub i32* %173, i32 2 acq_rel
  %178 = icmp eq i32 %177, 2
  br i1 %178, label %179, label %191, !prof !3

179:                                              ; preds = %176
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %171) #18
  br label %191

180:                                              ; preds = %170
  %181 = call i8* @_Znwm(i64 32) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %181, i8 0, i64 16, i1 false) #18
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = bitcast i8* %182 to i32*
  store i32 2, i32* %183, align 4
  %184 = bitcast i8* %181 to %"struct.absl::cord_internal::CordRep"*
  %185 = bitcast i8* %181 to i64*
  store i64 %162, i64* %185, align 8
  %186 = getelementptr inbounds i8, i8* %181, i64 12
  store i8 2, i8* %186, align 4
  %187 = getelementptr inbounds i8, i8* %181, i64 16
  %188 = bitcast i8* %187 to i64*
  store i64 %172, i64* %188, align 8
  %189 = getelementptr inbounds i8, i8* %181, i64 24
  %190 = bitcast i8* %189 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %171, %"struct.absl::cord_internal::CordRep"** %190, align 8
  br label %191

191:                                              ; preds = %180, %179, %176, %153, %142
  %192 = phi %"struct.absl::cord_internal::CordRep"* [ %130, %142 ], [ %149, %153 ], [ %184, %180 ], [ null, %176 ], [ null, %179 ]
  %193 = load i64, i64* %79, align 8
  %194 = icmp ult i64 %193, 2
  %195 = and i64 %193, 1
  %196 = icmp eq i64 %195, 0
  br i1 %194, label %221, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %199 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %77 to %"struct.absl::cord_internal::CordRep"**
  br label %200

200:                                              ; preds = %216, %197
  %201 = phi i1 [ %196, %197 ], [ %220, %216 ]
  %202 = phi %"struct.absl::cord_internal::CordRep"* [ %192, %197 ], [ %212, %216 ]
  %203 = phi i64 [ %193, %197 ], [ %217, %216 ]
  %204 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %198, align 8
  %205 = select i1 %201, %"struct.absl::cord_internal::CordRep"** %199, %"struct.absl::cord_internal::CordRep"** %204
  %206 = lshr i64 %203, 1
  %207 = add nsw i64 %206, -1
  %208 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %205, i64 %207
  %209 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %208, align 8
  %210 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %209, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = atomicrmw add i32* %210, i32 2 monotonic
  %212 = call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %209, %"struct.absl::cord_internal::CordRep"* %202) #18
  %213 = load i64, i64* %79, align 8
  %214 = icmp ult i64 %213, 2
  br i1 %214, label %215, label %216, !prof !3

215:                                              ; preds = %200
  call void @llvm.trap() #18
  unreachable

216:                                              ; preds = %200
  %217 = add i64 %213, -2
  store i64 %217, i64* %79, align 8
  %218 = icmp ult i64 %217, 2
  %219 = and i64 %217, 1
  %220 = icmp eq i64 %219, 0
  br i1 %218, label %221, label %200

221:                                              ; preds = %216, %191
  %222 = phi %"struct.absl::cord_internal::CordRep"* [ %192, %191 ], [ %212, %216 ]
  %223 = phi i1 [ %196, %191 ], [ %220, %216 ]
  br i1 %223, label %228, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %226 = bitcast %"struct.absl::cord_internal::CordRep"*** %225 to i8**
  %227 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %227) #19
  br label %228

228:                                              ; preds = %224, %221
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %76) #18
  br label %229

229:                                              ; preds = %66, %72, %228
  %230 = phi %"struct.absl::cord_internal::CordRep"* [ %41, %72 ], [ %222, %228 ], [ null, %66 ]
  %231 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw sub i32* %231, i32 2 acq_rel
  %233 = icmp eq i32 %232, 2
  br i1 %233, label %234, label %235, !prof !3

234:                                              ; preds = %229
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %41) #18
  br label %235

235:                                              ; preds = %234, %229, %62
  %236 = phi %"struct.absl::cord_internal::CordRep"* [ %65, %62 ], [ %230, %229 ], [ %230, %234 ]
  %237 = icmp eq %"struct.absl::cord_internal::CordRep"* %236, null
  br i1 %237, label %239, label %238

238:                                              ; preds = %235
  store %"struct.absl::cord_internal::CordRep"* %236, %"struct.absl::cord_internal::CordRep"** %40, align 8
  br label %240

239:                                              ; preds = %235
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #18
  br label %240

240:                                              ; preds = %239, %238
  br i1 %56, label %243, label %241, !prof !2

241:                                              ; preds = %240
  %242 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %55, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* %236, %"struct.absl::cord_internal::CordRep"** %242, align 8
  call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %55) #18
  br label %243

243:                                              ; preds = %240, %241, %43
  ret void
}

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing12RemoveSuffixEPS1_mm(%"class.absl::cord_internal::CordRepRing"*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl4Cord7SubcordEmm(%"class.absl::Cord"* noalias sret, %"class.absl::Cord"*, i64, i64) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.absl::InlinedVector", align 8
  %6 = alloca %"class.absl::InlinedVector.97", align 8
  %7 = alloca %"struct.absl::cord_internal::CordRep"*, align 8
  %8 = alloca %"struct.absl::cord_internal::CordRep"*, align 8
  %9 = alloca %"struct.absl::cord_internal::CordRep"*, align 8
  %10 = alloca %"struct.absl::SubRange", align 8
  %11 = alloca %"struct.absl::SubRange", align 8
  %12 = alloca %"struct.absl::SubRange", align 8
  %13 = alloca %"struct.absl::SubRange", align 8
  %14 = alloca %"struct.absl::SubRange", align 8
  %15 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %16 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.absl::Cord"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #18
  %19 = bitcast %"class.absl::Cord"* %1 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 15
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, align 8
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  br label %32

29:                                               ; preds = %4
  %30 = ashr i8 %21, 1
  %31 = sext i8 %30 to i64
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi i64 [ %28, %24 ], [ %31, %29 ]
  %34 = icmp ult i64 %33, %2
  %35 = select i1 %34, i64 %33, i64 %2
  %36 = sub i64 %33, %35
  %37 = icmp ult i64 %36, %3
  %38 = select i1 %37, i64 %36, i64 %3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %759, label %40

40:                                               ; preds = %32
  br i1 %23, label %45, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %42, align 8
  %44 = icmp eq %"struct.absl::cord_internal::CordRep"* %43, null
  br i1 %44, label %45, label %87

45:                                               ; preds = %40, %41
  %46 = select i1 %23, i8* %19, i8* null
  %47 = getelementptr inbounds i8, i8* %46, i64 %35
  %48 = icmp ugt i64 %38, 7
  br i1 %48, label %49, label %60

49:                                               ; preds = %45
  %50 = bitcast i8* %47 to i64*
  %51 = load i64, i64* %50, align 1
  %52 = getelementptr inbounds i8, i8* %47, i64 %38
  %53 = getelementptr inbounds i8, i8* %52, i64 -8
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast %"class.absl::Cord"* %0 to i64*
  store i64 %51, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %18, i64 %38
  %58 = getelementptr inbounds i8, i8* %57, i64 -8
  %59 = bitcast i8* %58 to i64*
  store i64 %55, i64* %59, align 1
  br label %83

60:                                               ; preds = %45
  %61 = icmp ugt i64 %38, 3
  br i1 %61, label %62, label %73

62:                                               ; preds = %60
  %63 = bitcast i8* %47 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = getelementptr inbounds i8, i8* %47, i64 %38
  %66 = getelementptr inbounds i8, i8* %65, i64 -4
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = bitcast %"class.absl::Cord"* %0 to i32*
  store i32 %64, i32* %69, align 8
  %70 = getelementptr inbounds i8, i8* %18, i64 %38
  %71 = getelementptr inbounds i8, i8* %70, i64 -4
  %72 = bitcast i8* %71 to i32*
  store i32 %68, i32* %72, align 1
  br label %83

73:                                               ; preds = %60
  %74 = load i8, i8* %47, align 1
  store i8 %74, i8* %18, align 8
  %75 = lshr i64 %38, 1
  %76 = getelementptr inbounds i8, i8* %47, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %18, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = add nsw i64 %38, -1
  %80 = getelementptr inbounds i8, i8* %47, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %18, i64 %79
  store i8 %81, i8* %82, align 1
  br label %83

83:                                               ; preds = %49, %62, %73
  %84 = trunc i64 %38 to i8
  %85 = shl i8 %84, 1
  %86 = getelementptr inbounds i8, i8* %18, i64 15
  store i8 %85, i8* %86, align 1
  br label %759

87:                                               ; preds = %41
  %88 = icmp ult i64 %38, 16
  br i1 %88, label %89, label %413

89:                                               ; preds = %87
  %90 = bitcast %"class.absl::Cord::ChunkIterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %90) #18
  %91 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3, i32 1
  %92 = bitcast i32* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 392, i1 false)
  %93 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #18, !alias.scope !20
  %94 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 0
  %95 = load i64, i64* %94, align 8, !noalias !20
  store i64 %95, i64* %93, align 8, !alias.scope !20
  %96 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %96, align 8, !alias.scope !20
  %97 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %97, align 8, !alias.scope !20
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %15, %"struct.absl::cord_internal::CordRep"* nonnull %43) #18
  %98 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 0, i32 1
  %101 = icmp ugt i64 %99, %35
  br i1 %101, label %102, label %109, !prof !2

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 %35
  store i8* %105, i8** %103, align 8
  %106 = sub i64 %99, %35
  store i64 %106, i64* %100, align 8
  %107 = load i64, i64* %93, align 8
  %108 = sub i64 %107, %35
  store i64 %108, i64* %93, align 8
  br label %213

109:                                              ; preds = %89
  %110 = icmp eq i64 %35, 0
  br i1 %110, label %211, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3, i32 0
  %113 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %112, align 8
  %114 = icmp eq %"class.absl::cord_internal::CordRepRing"* %113, null
  br i1 %114, label %210, label %115

115:                                              ; preds = %111
  %116 = load i64, i64* %93, align 8
  %117 = sub i64 %116, %35
  store i64 %117, i64* %93, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %209, label %119

119:                                              ; preds = %115
  %120 = icmp eq i64 %99, %35
  br i1 %120, label %121, label %200

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, 1
  %125 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %124, %126
  %128 = select i1 %127, i32 0, i32 %124
  store i32 %128, i32* %122, align 8
  %129 = load i32, i32* %125, align 8
  %130 = zext i32 %129 to i64
  %131 = shl nuw nsw i64 %130, 4
  %132 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %131
  %133 = bitcast i8* %132 to i32*
  %134 = zext i32 %128 to i64
  %135 = getelementptr inbounds i32, i32* %133, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = shl nuw nsw i64 %130, 3
  %139 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %138
  %140 = bitcast i8* %139 to %"struct.absl::cord_internal::CordRep"**
  %141 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %140, i64 %134
  %142 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %141, align 8
  %143 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %142, i64 0, i32 2
  %144 = load i8, i8* %143, align 4
  %145 = icmp ugt i8 %144, 3
  br i1 %145, label %146, label %148

146:                                              ; preds = %121
  %147 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %142, i64 0, i32 3, i64 0
  br label %172

148:                                              ; preds = %121
  %149 = icmp eq i8 %144, 1
  br i1 %149, label %150, label %154

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %142, i64 1
  %152 = bitcast %"struct.absl::cord_internal::CordRep"* %151 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %172

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %142, i64 1, i32 1
  %156 = bitcast %"class.absl::cord_internal::Refcount"* %155 to %"struct.absl::cord_internal::CordRep"**
  %157 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %156, align 8
  %158 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %157, i64 0, i32 2
  %159 = load i8, i8* %158, align 4
  %160 = icmp eq i8 %159, 1
  br i1 %160, label %163, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %157, i64 0, i32 3, i64 0
  br label %167

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %157, i64 1
  %165 = bitcast %"struct.absl::cord_internal::CordRep"* %164 to i8**
  %166 = load i8*, i8** %165, align 8
  br label %167

167:                                              ; preds = %163, %161
  %168 = phi i8* [ %162, %161 ], [ %166, %163 ]
  %169 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %142, i64 1, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  br label %172

172:                                              ; preds = %167, %150, %146
  %173 = phi i8* [ %147, %146 ], [ %153, %150 ], [ %171, %167 ]
  %174 = getelementptr inbounds i8, i8* %173, i64 %137
  %175 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, %128
  br i1 %177, label %178, label %180

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 4
  br label %188

180:                                              ; preds = %172
  %181 = icmp eq i32 %128, 0
  %182 = select i1 %181, i32 %129, i32 %128
  %183 = add i32 %182, -1
  %184 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 0
  %185 = bitcast i8* %184 to i64*
  %186 = zext i32 %183 to i64
  %187 = getelementptr inbounds i64, i64* %185, i64 %186
  br label %188

188:                                              ; preds = %180, %178
  %189 = phi i64* [ %179, %178 ], [ %187, %180 ]
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 0
  %192 = bitcast i8* %191 to i64*
  %193 = getelementptr inbounds i64, i64* %192, i64 %134
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %194, %190
  %196 = icmp sgt i64 %195, -1
  br i1 %196, label %198, label %197, !prof !2

197:                                              ; preds = %188
  call void @llvm.trap() #18
  unreachable

198:                                              ; preds = %188
  %199 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 0, i32 0
  store i8* %174, i8** %199, align 8
  store i64 %195, i64* %100, align 8
  br label %211

200:                                              ; preds = %119
  %201 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3
  %202 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %203, %117
  %205 = call { i8*, i64 } @_ZN4absl13cord_internal17CordRepRingReader4SeekEm(%"class.absl::cord_internal::CordRepRingReader"* %201, i64 %204) #18
  %206 = extractvalue { i8*, i64 } %205, 0
  %207 = extractvalue { i8*, i64 } %205, 1
  %208 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 0, i32 0
  store i8* %206, i8** %208, align 8
  store i64 %207, i64* %100, align 8
  br label %211

209:                                              ; preds = %115
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #18
  br label %220

210:                                              ; preds = %111
  call void @_ZN4absl4Cord13ChunkIterator20AdvanceBytesSlowPathEm(%"class.absl::Cord::ChunkIterator"* nonnull %15, i64 %35) #18
  br label %211

211:                                              ; preds = %210, %109, %198, %200
  %212 = load i64, i64* %93, align 8
  br label %213

213:                                              ; preds = %211, %102
  %214 = phi i64 [ %212, %211 ], [ %108, %102 ]
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %220, label %216, !prof !3

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3, i32 0
  %219 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 3, i32 1
  br label %221

220:                                              ; preds = %359, %358, %209, %213
  call void @llvm.trap() #18
  unreachable

221:                                              ; preds = %216, %359
  %222 = phi i64 [ %38, %216 ], [ %271, %359 ]
  %223 = phi i8* [ %18, %216 ], [ %272, %359 ]
  %224 = load i64, i64* %100, align 8
  %225 = icmp ugt i64 %222, %224
  %226 = load i8*, i8** %217, align 8
  br i1 %225, label %227, label %362

227:                                              ; preds = %221
  %228 = icmp ugt i64 %224, 7
  br i1 %228, label %229, label %240

229:                                              ; preds = %227
  %230 = bitcast i8* %226 to i64*
  %231 = load i64, i64* %230, align 1
  %232 = getelementptr inbounds i8, i8* %226, i64 -8
  %233 = getelementptr inbounds i8, i8* %232, i64 %224
  %234 = bitcast i8* %233 to i64*
  %235 = load i64, i64* %234, align 1
  %236 = bitcast i8* %223 to i64*
  store i64 %231, i64* %236, align 1
  %237 = getelementptr inbounds i8, i8* %223, i64 -8
  %238 = getelementptr inbounds i8, i8* %237, i64 %224
  %239 = bitcast i8* %238 to i64*
  store i64 %235, i64* %239, align 1
  br label %265

240:                                              ; preds = %227
  %241 = icmp ugt i64 %224, 3
  br i1 %241, label %242, label %253

242:                                              ; preds = %240
  %243 = bitcast i8* %226 to i32*
  %244 = load i32, i32* %243, align 1
  %245 = getelementptr inbounds i8, i8* %226, i64 -4
  %246 = getelementptr inbounds i8, i8* %245, i64 %224
  %247 = bitcast i8* %246 to i32*
  %248 = load i32, i32* %247, align 1
  %249 = bitcast i8* %223 to i32*
  store i32 %244, i32* %249, align 1
  %250 = getelementptr inbounds i8, i8* %223, i64 -4
  %251 = getelementptr inbounds i8, i8* %250, i64 %224
  %252 = bitcast i8* %251 to i32*
  store i32 %248, i32* %252, align 1
  br label %265

253:                                              ; preds = %240
  %254 = icmp eq i64 %224, 0
  br i1 %254, label %265, label %255

255:                                              ; preds = %253
  %256 = load i8, i8* %226, align 1
  store i8 %256, i8* %223, align 1
  %257 = lshr i64 %224, 1
  %258 = getelementptr inbounds i8, i8* %226, i64 %257
  %259 = load i8, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %223, i64 %257
  store i8 %259, i8* %260, align 1
  %261 = add nsw i64 %224, -1
  %262 = getelementptr inbounds i8, i8* %226, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = getelementptr inbounds i8, i8* %223, i64 %261
  store i8 %263, i8* %264, align 1
  br label %265

265:                                              ; preds = %253, %255, %229, %242
  %266 = load i64, i64* %93, align 8
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %269, !prof !3

268:                                              ; preds = %265
  call void @llvm.trap() #18
  unreachable

269:                                              ; preds = %265
  %270 = load i64, i64* %100, align 8
  %271 = sub i64 %222, %270
  %272 = getelementptr inbounds i8, i8* %223, i64 %270
  %273 = sub i64 %266, %270
  store i64 %273, i64* %93, align 8
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %358, label %275

275:                                              ; preds = %269
  %276 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %218, align 8
  %277 = icmp eq %"class.absl::cord_internal::CordRepRing"* %276, null
  br i1 %277, label %355, label %278

278:                                              ; preds = %275
  %279 = load i32, i32* %219, align 8
  %280 = add i32 %279, 1
  %281 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 3
  %282 = load i32, i32* %281, align 8
  %283 = icmp eq i32 %280, %282
  %284 = select i1 %283, i32 0, i32 %280
  store i32 %284, i32* %219, align 8
  %285 = load i32, i32* %281, align 8
  %286 = zext i32 %285 to i64
  %287 = shl nuw nsw i64 %286, 4
  %288 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 5, i64 %287
  %289 = bitcast i8* %288 to i32*
  %290 = zext i32 %284 to i64
  %291 = getelementptr inbounds i32, i32* %289, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  %294 = shl nuw nsw i64 %286, 3
  %295 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 5, i64 %294
  %296 = bitcast i8* %295 to %"struct.absl::cord_internal::CordRep"**
  %297 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %296, i64 %290
  %298 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %297, align 8
  %299 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %298, i64 0, i32 2
  %300 = load i8, i8* %299, align 4
  %301 = icmp ugt i8 %300, 3
  br i1 %301, label %302, label %304

302:                                              ; preds = %278
  %303 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %298, i64 0, i32 3, i64 0
  br label %328

304:                                              ; preds = %278
  %305 = icmp eq i8 %300, 1
  br i1 %305, label %306, label %310

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %298, i64 1
  %308 = bitcast %"struct.absl::cord_internal::CordRep"* %307 to i8**
  %309 = load i8*, i8** %308, align 8
  br label %328

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %298, i64 1, i32 1
  %312 = bitcast %"class.absl::cord_internal::Refcount"* %311 to %"struct.absl::cord_internal::CordRep"**
  %313 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %312, align 8
  %314 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %313, i64 0, i32 2
  %315 = load i8, i8* %314, align 4
  %316 = icmp eq i8 %315, 1
  br i1 %316, label %319, label %317

317:                                              ; preds = %310
  %318 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %313, i64 0, i32 3, i64 0
  br label %323

319:                                              ; preds = %310
  %320 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %313, i64 1
  %321 = bitcast %"struct.absl::cord_internal::CordRep"* %320 to i8**
  %322 = load i8*, i8** %321, align 8
  br label %323

323:                                              ; preds = %319, %317
  %324 = phi i8* [ %318, %317 ], [ %322, %319 ]
  %325 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %298, i64 1, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds i8, i8* %324, i64 %326
  br label %328

328:                                              ; preds = %323, %306, %302
  %329 = phi i8* [ %303, %302 ], [ %309, %306 ], [ %327, %323 ]
  %330 = getelementptr inbounds i8, i8* %329, i64 %293
  %331 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 1
  %332 = load i32, i32* %331, align 8
  %333 = icmp eq i32 %332, %284
  br i1 %333, label %334, label %336

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 4
  br label %344

336:                                              ; preds = %328
  %337 = icmp eq i32 %284, 0
  %338 = select i1 %337, i32 %285, i32 %284
  %339 = add i32 %338, -1
  %340 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 5, i64 0
  %341 = bitcast i8* %340 to i64*
  %342 = zext i32 %339 to i64
  %343 = getelementptr inbounds i64, i64* %341, i64 %342
  br label %344

344:                                              ; preds = %336, %334
  %345 = phi i64* [ %335, %334 ], [ %343, %336 ]
  %346 = load i64, i64* %345, align 8
  %347 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %276, i64 0, i32 5, i64 0
  %348 = bitcast i8* %347 to i64*
  %349 = getelementptr inbounds i64, i64* %348, i64 %290
  %350 = load i64, i64* %349, align 8
  %351 = sub i64 %350, %346
  %352 = icmp sgt i64 %351, -1
  br i1 %352, label %354, label %353, !prof !2

353:                                              ; preds = %344
  call void @llvm.trap() #18
  unreachable

354:                                              ; preds = %344
  store i8* %330, i8** %217, align 8
  store i64 %351, i64* %100, align 8
  br label %359

355:                                              ; preds = %275
  %356 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %15) #18
  %357 = load i64, i64* %93, align 8
  br label %359

358:                                              ; preds = %269
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #18
  br label %220

359:                                              ; preds = %354, %355
  %360 = phi i64 [ %273, %354 ], [ %357, %355 ]
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %220, label %221, !prof !3

362:                                              ; preds = %221
  %363 = icmp ugt i64 %222, 7
  br i1 %363, label %364, label %375

364:                                              ; preds = %362
  %365 = bitcast i8* %226 to i64*
  %366 = load i64, i64* %365, align 1
  %367 = getelementptr inbounds i8, i8* %226, i64 %222
  %368 = getelementptr inbounds i8, i8* %367, i64 -8
  %369 = bitcast i8* %368 to i64*
  %370 = load i64, i64* %369, align 1
  %371 = bitcast i8* %223 to i64*
  store i64 %366, i64* %371, align 1
  %372 = getelementptr inbounds i8, i8* %223, i64 %222
  %373 = getelementptr inbounds i8, i8* %372, i64 -8
  %374 = bitcast i8* %373 to i64*
  store i64 %370, i64* %374, align 1
  br label %400

375:                                              ; preds = %362
  %376 = icmp ugt i64 %222, 3
  br i1 %376, label %377, label %388

377:                                              ; preds = %375
  %378 = bitcast i8* %226 to i32*
  %379 = load i32, i32* %378, align 1
  %380 = getelementptr inbounds i8, i8* %226, i64 %222
  %381 = getelementptr inbounds i8, i8* %380, i64 -4
  %382 = bitcast i8* %381 to i32*
  %383 = load i32, i32* %382, align 1
  %384 = bitcast i8* %223 to i32*
  store i32 %379, i32* %384, align 1
  %385 = getelementptr inbounds i8, i8* %223, i64 %222
  %386 = getelementptr inbounds i8, i8* %385, i64 -4
  %387 = bitcast i8* %386 to i32*
  store i32 %383, i32* %387, align 1
  br label %400

388:                                              ; preds = %375
  %389 = icmp eq i64 %222, 0
  br i1 %389, label %400, label %390

390:                                              ; preds = %388
  %391 = load i8, i8* %226, align 1
  store i8 %391, i8* %223, align 1
  %392 = lshr i64 %222, 1
  %393 = getelementptr inbounds i8, i8* %226, i64 %392
  %394 = load i8, i8* %393, align 1
  %395 = getelementptr inbounds i8, i8* %223, i64 %392
  store i8 %394, i8* %395, align 1
  %396 = add nsw i64 %222, -1
  %397 = getelementptr inbounds i8, i8* %226, i64 %396
  %398 = load i8, i8* %397, align 1
  %399 = getelementptr inbounds i8, i8* %223, i64 %396
  store i8 %398, i8* %399, align 1
  br label %400

400:                                              ; preds = %388, %390, %364, %377
  %401 = trunc i64 %38 to i8
  %402 = shl i8 %401, 1
  %403 = getelementptr inbounds i8, i8* %18, i64 15
  store i8 %402, i8* %403, align 1
  %404 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load i64, i64* %404, align 8
  %406 = and i64 %405, 1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %412, label %408

408:                                              ; preds = %400
  %409 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %15, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %410 = bitcast %"struct.absl::cord_internal::CordRep"*** %409 to i8**
  %411 = load i8*, i8** %410, align 8
  call void @_ZdlPv(i8* %411) #19
  br label %412

412:                                              ; preds = %400, %408
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %90) #18
  br label %759

413:                                              ; preds = %87
  %414 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 2
  %415 = load i8, i8* %414, align 4
  %416 = icmp eq i8 %415, 3
  br i1 %416, label %417, label %423

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = atomicrmw add i32* %418, i32 2 monotonic
  %420 = bitcast %"struct.absl::cord_internal::CordRep"* %43 to %"class.absl::cord_internal::CordRepRing"*
  %421 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7SubRingEPS1_mmm(%"class.absl::cord_internal::CordRepRing"* nonnull %420, i64 %35, i64 %38, i64 0) #18
  %422 = bitcast %"class.absl::cord_internal::CordRepRing"* %421 to %"struct.absl::cord_internal::CordRep"*
  br label %750

423:                                              ; preds = %413
  %424 = bitcast %"class.absl::InlinedVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %424) #18
  %425 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %5, i64 0, i32 0, i32 1
  %426 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %425 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 376, i1 false) #18
  %427 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %427, align 8
  %428 = bitcast %"class.absl::InlinedVector.97"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1136, i8* nonnull %428) #18
  %429 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0, i32 1, i32 1, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %429, i8 -86, i64 1104, i1 false) #18
  %430 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0
  %432 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0, i32 1
  %433 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Data"* %432 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %43, %"struct.absl::cord_internal::CordRep"** %433, align 8
  %434 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0, i32 1, i32 0, i32 1
  store i64 %35, i64* %434, align 8
  %435 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0, i32 1, i32 1
  %436 = bitcast [1112 x i8]* %435 to i64*
  store i64 %38, i64* %436, align 8
  store i64 2, i64* %430, align 8
  %437 = getelementptr inbounds %"class.absl::InlinedVector.97", %"class.absl::InlinedVector.97"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %438 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Data"* %432 to %"struct.absl::SubRange"*
  %439 = bitcast %"struct.absl::SubRange"* %10 to i8*
  %440 = bitcast %"struct.absl::SubRange"* %10 to i64*
  %441 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %10, i64 0, i32 1
  %442 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %10, i64 0, i32 2
  %443 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Data"* %432 to i64
  %444 = bitcast %"struct.absl::SubRange"** %437 to i64*
  %445 = bitcast %"struct.absl::SubRange"* %11 to i8*
  %446 = bitcast %"struct.absl::SubRange"* %11 to i64*
  %447 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %11, i64 0, i32 1
  %448 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %11, i64 0, i32 2
  %449 = bitcast %"struct.absl::SubRange"* %12 to i8*
  %450 = bitcast %"struct.absl::SubRange"* %13 to i8*
  %451 = bitcast %"struct.absl::SubRange"* %13 to i64*
  %452 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %13, i64 0, i32 1
  %453 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %13, i64 0, i32 2
  %454 = bitcast %"struct.absl::SubRange"* %14 to i8*
  %455 = bitcast %"struct.absl::SubRange"* %14 to i64*
  %456 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %14, i64 0, i32 1
  %457 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %14, i64 0, i32 2
  %458 = bitcast %"struct.absl::cord_internal::CordRep"** %9 to i8*
  %459 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %460 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %425 to i64
  %461 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %462 = bitcast %"struct.absl::cord_internal::CordRep"*** %461 to i64*
  %463 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %5, i64 0, i32 0
  %464 = bitcast %"struct.absl::cord_internal::CordRep"** %8 to i8*
  %465 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %425 to %"struct.absl::cord_internal::CordRep"**
  %466 = bitcast %"struct.absl::cord_internal::CordRep"** %7 to i8*
  %467 = bitcast %"struct.absl::cord_internal::CordRep"* %43 to %"struct.absl::SubRange"*
  br label %468

468:                                              ; preds = %724, %423
  %469 = phi %"struct.absl::SubRange"* [ %725, %724 ], [ %467, %423 ]
  %470 = phi i64 [ %722, %724 ], [ 2, %423 ]
  %471 = and i64 %470, 1
  %472 = icmp eq i64 %471, 0
  %473 = select i1 %472, %"struct.absl::SubRange"* %438, %"struct.absl::SubRange"* %469
  %474 = lshr i64 %470, 1
  %475 = add nsw i64 %474, -1
  %476 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %473, i64 %475, i32 0
  %477 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %476, align 8
  %478 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %473, i64 %475, i32 1
  %479 = load i64, i64* %478, align 8
  %480 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %473, i64 %475, i32 2
  %481 = load i64, i64* %480, align 8
  %482 = add i64 %470, -2
  store i64 %482, i64* %430, align 8
  %483 = icmp eq %"struct.absl::cord_internal::CordRep"* %477, null
  %484 = ptrtoint %"struct.absl::SubRange"* %469 to i64
  br i1 %483, label %485, label %530

485:                                              ; preds = %468
  %486 = load i64, i64* %427, align 8
  %487 = icmp ult i64 %486, 2
  br i1 %487, label %488, label %489, !prof !3

488:                                              ; preds = %485
  call void @llvm.trap() #18
  unreachable

489:                                              ; preds = %485
  %490 = and i64 %486, 1
  %491 = icmp eq i64 %490, 0
  %492 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %461, align 8
  %493 = select i1 %491, %"struct.absl::cord_internal::CordRep"** %465, %"struct.absl::cord_internal::CordRep"** %492
  %494 = lshr i64 %486, 1
  %495 = add nsw i64 %494, -1
  %496 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %493, i64 %495
  %497 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %496, align 8
  %498 = add i64 %486, -2
  store i64 %498, i64* %427, align 8
  %499 = icmp ult i64 %498, 2
  br i1 %499, label %500, label %501, !prof !3

500:                                              ; preds = %489
  call void @llvm.trap() #18
  unreachable

501:                                              ; preds = %489
  %502 = and i64 %498, 1
  %503 = icmp eq i64 %502, 0
  %504 = select i1 %503, %"struct.absl::cord_internal::CordRep"** %465, %"struct.absl::cord_internal::CordRep"** %492
  %505 = lshr i64 %498, 1
  %506 = add nsw i64 %505, -1
  %507 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %504, i64 %506
  %508 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %507, align 8
  %509 = add i64 %486, -4
  store i64 %509, i64* %427, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %466) #18
  %510 = call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %508, %"struct.absl::cord_internal::CordRep"* %497) #18
  store %"struct.absl::cord_internal::CordRep"* %510, %"struct.absl::cord_internal::CordRep"** %7, align 8
  %511 = load i64, i64* %427, align 8, !noalias !23
  %512 = and i64 %511, 1
  %513 = icmp eq i64 %512, 0
  %514 = load i64, i64* %459, align 8
  %515 = select i1 %513, i64 47, i64 %514
  %516 = lshr i64 %511, 1
  %517 = icmp eq i64 %516, %515
  br i1 %517, label %527, label %518, !prof !3

518:                                              ; preds = %501
  %519 = ptrtoint %"struct.absl::cord_internal::CordRep"* %510 to i64
  %520 = load i64, i64* %462, align 8
  %521 = select i1 %513, i64 %460, i64 %520
  %522 = inttoptr i64 %521 to %"struct.absl::cord_internal::CordRep"**
  %523 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %522, i64 %516
  %524 = bitcast %"struct.absl::cord_internal::CordRep"** %523 to i64*
  store i64 %519, i64* %524, align 8
  %525 = load i64, i64* %427, align 8
  %526 = add i64 %525, 2
  store i64 %526, i64* %427, align 8
  br label %529

527:                                              ; preds = %501
  %528 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %463, %"struct.absl::cord_internal::CordRep"** nonnull dereferenceable(8) %7) #18
  br label %529

529:                                              ; preds = %527, %518
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %466) #18
  br label %721

530:                                              ; preds = %468
  %531 = icmp eq i64 %479, 0
  br i1 %531, label %532, label %558

532:                                              ; preds = %530
  %533 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 0, i32 0
  %534 = load i64, i64* %533, align 8
  %535 = icmp eq i64 %481, %534
  br i1 %535, label %536, label %558

536:                                              ; preds = %532
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464) #18
  %537 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = atomicrmw add i32* %537, i32 2 monotonic
  store %"struct.absl::cord_internal::CordRep"* %477, %"struct.absl::cord_internal::CordRep"** %8, align 8
  %539 = load i64, i64* %427, align 8, !noalias !26
  %540 = and i64 %539, 1
  %541 = icmp eq i64 %540, 0
  %542 = load i64, i64* %459, align 8
  %543 = select i1 %541, i64 47, i64 %542
  %544 = lshr i64 %539, 1
  %545 = icmp eq i64 %544, %543
  br i1 %545, label %555, label %546, !prof !3

546:                                              ; preds = %536
  %547 = ptrtoint %"struct.absl::cord_internal::CordRep"* %477 to i64
  %548 = load i64, i64* %462, align 8
  %549 = select i1 %541, i64 %460, i64 %548
  %550 = inttoptr i64 %549 to %"struct.absl::cord_internal::CordRep"**
  %551 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %550, i64 %544
  %552 = bitcast %"struct.absl::cord_internal::CordRep"** %551 to i64*
  store i64 %547, i64* %552, align 8
  %553 = load i64, i64* %427, align 8
  %554 = add i64 %553, 2
  store i64 %554, i64* %427, align 8
  br label %557

555:                                              ; preds = %536
  %556 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %463, %"struct.absl::cord_internal::CordRep"** nonnull dereferenceable(8) %8) #18
  br label %557

557:                                              ; preds = %555, %546
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #18
  br label %721

558:                                              ; preds = %532, %530
  %559 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 0, i32 2
  %560 = load i8, i8* %559, align 4
  switch i8 %560, label %568 [
    i8 0, label %610
    i8 2, label %561
  ]

561:                                              ; preds = %558
  %562 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 1, i32 0
  %563 = load i64, i64* %562, align 8
  %564 = add i64 %563, %479
  %565 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 1, i32 1
  %566 = bitcast %"class.absl::cord_internal::Refcount"* %565 to %"struct.absl::cord_internal::CordRep"**
  %567 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %566, align 8
  br label %568

568:                                              ; preds = %561, %558
  %569 = phi i64 [ %564, %561 ], [ %479, %558 ]
  %570 = phi %"struct.absl::cord_internal::CordRep"* [ %567, %561 ], [ %477, %558 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %458) #18
  %571 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %570, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = atomicrmw add i32* %571, i32 2 monotonic
  %573 = icmp eq i64 %481, 0
  br i1 %573, label %574, label %578

574:                                              ; preds = %568
  %575 = atomicrmw sub i32* %571, i32 2 acq_rel
  %576 = icmp eq i32 %575, 2
  br i1 %576, label %577, label %589, !prof !3

577:                                              ; preds = %574
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %570) #18
  br label %589

578:                                              ; preds = %568
  %579 = call i8* @_Znwm(i64 32) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %579, i8 0, i64 16, i1 false) #18
  %580 = getelementptr inbounds i8, i8* %579, i64 8
  %581 = bitcast i8* %580 to i32*
  store i32 2, i32* %581, align 4
  %582 = bitcast i8* %579 to %"struct.absl::cord_internal::CordRep"*
  %583 = bitcast i8* %579 to i64*
  store i64 %481, i64* %583, align 8
  %584 = getelementptr inbounds i8, i8* %579, i64 12
  store i8 2, i8* %584, align 4
  %585 = getelementptr inbounds i8, i8* %579, i64 16
  %586 = bitcast i8* %585 to i64*
  store i64 %569, i64* %586, align 8
  %587 = getelementptr inbounds i8, i8* %579, i64 24
  %588 = bitcast i8* %587 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %570, %"struct.absl::cord_internal::CordRep"** %588, align 8
  br label %589

589:                                              ; preds = %578, %577, %574
  %590 = phi %"struct.absl::cord_internal::CordRep"* [ %582, %578 ], [ null, %574 ], [ null, %577 ]
  store %"struct.absl::cord_internal::CordRep"* %590, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %591 = load i64, i64* %427, align 8, !noalias !29
  %592 = and i64 %591, 1
  %593 = icmp eq i64 %592, 0
  %594 = load i64, i64* %459, align 8
  %595 = select i1 %593, i64 47, i64 %594
  %596 = lshr i64 %591, 1
  %597 = icmp eq i64 %596, %595
  br i1 %597, label %607, label %598, !prof !3

598:                                              ; preds = %589
  %599 = ptrtoint %"struct.absl::cord_internal::CordRep"* %590 to i64
  %600 = load i64, i64* %462, align 8
  %601 = select i1 %593, i64 %460, i64 %600
  %602 = inttoptr i64 %601 to %"struct.absl::cord_internal::CordRep"**
  %603 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %602, i64 %596
  %604 = bitcast %"struct.absl::cord_internal::CordRep"** %603 to i64*
  store i64 %599, i64* %604, align 8
  %605 = load i64, i64* %427, align 8
  %606 = add i64 %605, 2
  store i64 %606, i64* %427, align 8
  br label %609

607:                                              ; preds = %589
  %608 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %463, %"struct.absl::cord_internal::CordRep"** nonnull dereferenceable(8) %9) #18
  br label %609

609:                                              ; preds = %607, %598
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %458) #18
  br label %721

610:                                              ; preds = %558
  %611 = add i64 %481, %479
  %612 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 1
  %613 = bitcast %"struct.absl::cord_internal::CordRep"* %612 to %"struct.absl::cord_internal::CordRep"**
  %614 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %613, align 8
  %615 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %614, i64 0, i32 0
  %616 = load i64, i64* %615, align 8
  %617 = icmp ugt i64 %611, %616
  br i1 %617, label %636, label %618

618:                                              ; preds = %610
  %619 = ptrtoint %"struct.absl::cord_internal::CordRep"* %614 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #18
  store i64 %619, i64* %440, align 8
  store i64 %479, i64* %441, align 8
  store i64 %481, i64* %442, align 8
  %620 = and i64 %482, 1
  %621 = icmp eq i64 %620, 0
  %622 = load i64, i64* %434, align 8
  %623 = select i1 %621, i64 47, i64 %622
  %624 = lshr i64 %482, 1
  %625 = icmp eq i64 %624, %623
  br i1 %625, label %633, label %626, !prof !3

626:                                              ; preds = %618
  %627 = select i1 %621, i64 %443, i64 %484
  %628 = inttoptr i64 %627 to %"struct.absl::SubRange"*
  %629 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %628, i64 %624
  %630 = bitcast %"struct.absl::SubRange"* %629 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %630, i8* nonnull align 8 %439, i64 24, i1 false) #18
  %631 = load i64, i64* %430, align 8
  %632 = add i64 %631, 2
  store i64 %632, i64* %430, align 8
  br label %635

633:                                              ; preds = %618
  %634 = call dereferenceable(24) %"struct.absl::SubRange"* @_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_(%"class.absl::inlined_vector_internal::Storage.98"* nonnull %431, %"struct.absl::SubRange"* nonnull dereferenceable(24) %10) #18
  br label %635

635:                                              ; preds = %633, %626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #18
  br label %721

636:                                              ; preds = %610
  %637 = icmp ult i64 %479, %616
  br i1 %637, label %659, label %638

638:                                              ; preds = %636
  %639 = sub i64 %479, %616
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #18
  %640 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 1, i32 1
  %641 = bitcast %"class.absl::cord_internal::Refcount"* %640 to i64*
  %642 = load i64, i64* %641, align 8
  store i64 %642, i64* %446, align 8
  store i64 %639, i64* %447, align 8
  store i64 %481, i64* %448, align 8
  %643 = and i64 %482, 1
  %644 = icmp eq i64 %643, 0
  %645 = load i64, i64* %434, align 8
  %646 = select i1 %644, i64 47, i64 %645
  %647 = lshr i64 %482, 1
  %648 = icmp eq i64 %647, %646
  br i1 %648, label %656, label %649, !prof !3

649:                                              ; preds = %638
  %650 = select i1 %644, i64 %443, i64 %484
  %651 = inttoptr i64 %650 to %"struct.absl::SubRange"*
  %652 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %651, i64 %647
  %653 = bitcast %"struct.absl::SubRange"* %652 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %653, i8* nonnull align 8 %445, i64 24, i1 false) #18
  %654 = load i64, i64* %430, align 8
  %655 = add i64 %654, 2
  store i64 %655, i64* %430, align 8
  br label %658

656:                                              ; preds = %638
  %657 = call dereferenceable(24) %"struct.absl::SubRange"* @_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_(%"class.absl::inlined_vector_internal::Storage.98"* nonnull %431, %"struct.absl::SubRange"* nonnull dereferenceable(24) %11) #18
  br label %658

658:                                              ; preds = %656, %649
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #18
  br label %721

659:                                              ; preds = %636
  %660 = sub i64 %616, %479
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %449) #18
  %661 = and i64 %482, 1
  %662 = icmp eq i64 %661, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %449, i8 0, i64 24, i1 false) #18
  %663 = load i64, i64* %434, align 8
  %664 = select i1 %662, i64 47, i64 %663
  %665 = lshr i64 %482, 1
  %666 = icmp eq i64 %665, %664
  br i1 %666, label %674, label %667, !prof !3

667:                                              ; preds = %659
  %668 = select i1 %662, i64 %443, i64 %484
  %669 = inttoptr i64 %668 to %"struct.absl::SubRange"*
  %670 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %669, i64 %665
  %671 = bitcast %"struct.absl::SubRange"* %670 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %671, i8* nonnull align 8 %449, i64 24, i1 false) #18
  %672 = load i64, i64* %430, align 8
  %673 = add i64 %672, 2
  store i64 %673, i64* %430, align 8
  br label %677

674:                                              ; preds = %659
  %675 = call dereferenceable(24) %"struct.absl::SubRange"* @_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_(%"class.absl::inlined_vector_internal::Storage.98"* nonnull %431, %"struct.absl::SubRange"* nonnull dereferenceable(24) %12) #18
  %676 = load i64, i64* %430, align 8, !noalias !32
  br label %677

677:                                              ; preds = %674, %667
  %678 = phi i64 [ %673, %667 ], [ %676, %674 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %449) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #18
  %679 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %477, i64 1, i32 1
  %680 = bitcast %"class.absl::cord_internal::Refcount"* %679 to i64*
  %681 = load i64, i64* %680, align 8
  %682 = sub i64 %481, %660
  store i64 %681, i64* %451, align 8
  store i64 0, i64* %452, align 8
  store i64 %682, i64* %453, align 8
  %683 = and i64 %678, 1
  %684 = icmp eq i64 %683, 0
  %685 = load i64, i64* %434, align 8
  %686 = select i1 %684, i64 47, i64 %685
  %687 = lshr i64 %678, 1
  %688 = icmp eq i64 %687, %686
  br i1 %688, label %697, label %689, !prof !3

689:                                              ; preds = %677
  %690 = load i64, i64* %444, align 8
  %691 = select i1 %684, i64 %443, i64 %690
  %692 = inttoptr i64 %691 to %"struct.absl::SubRange"*
  %693 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %692, i64 %687
  %694 = bitcast %"struct.absl::SubRange"* %693 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %694, i8* nonnull align 8 %450, i64 24, i1 false) #18
  %695 = load i64, i64* %430, align 8
  %696 = add i64 %695, 2
  store i64 %696, i64* %430, align 8
  br label %700

697:                                              ; preds = %677
  %698 = call dereferenceable(24) %"struct.absl::SubRange"* @_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_(%"class.absl::inlined_vector_internal::Storage.98"* nonnull %431, %"struct.absl::SubRange"* nonnull dereferenceable(24) %13) #18
  %699 = load i64, i64* %430, align 8, !noalias !35
  br label %700

700:                                              ; preds = %697, %689
  %701 = phi i64 [ %696, %689 ], [ %699, %697 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %454) #18
  %702 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %612, i64 0, i32 0
  %703 = load i64, i64* %702, align 8
  store i64 %703, i64* %455, align 8
  store i64 %479, i64* %456, align 8
  store i64 %660, i64* %457, align 8
  %704 = and i64 %701, 1
  %705 = icmp eq i64 %704, 0
  %706 = load i64, i64* %434, align 8
  %707 = select i1 %705, i64 47, i64 %706
  %708 = lshr i64 %701, 1
  %709 = icmp eq i64 %708, %707
  br i1 %709, label %718, label %710, !prof !3

710:                                              ; preds = %700
  %711 = load i64, i64* %444, align 8
  %712 = select i1 %705, i64 %443, i64 %711
  %713 = inttoptr i64 %712 to %"struct.absl::SubRange"*
  %714 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %713, i64 %708
  %715 = bitcast %"struct.absl::SubRange"* %714 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %715, i8* nonnull align 8 %454, i64 24, i1 false) #18
  %716 = load i64, i64* %430, align 8
  %717 = add i64 %716, 2
  store i64 %717, i64* %430, align 8
  br label %720

718:                                              ; preds = %700
  %719 = call dereferenceable(24) %"struct.absl::SubRange"* @_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_(%"class.absl::inlined_vector_internal::Storage.98"* nonnull %431, %"struct.absl::SubRange"* nonnull dereferenceable(24) %14) #18
  br label %720

720:                                              ; preds = %718, %710
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %454) #18
  br label %721

721:                                              ; preds = %720, %658, %635, %609, %557, %529
  %722 = load i64, i64* %430, align 8
  %723 = icmp ult i64 %722, 2
  br i1 %723, label %726, label %724

724:                                              ; preds = %721
  %725 = load %"struct.absl::SubRange"*, %"struct.absl::SubRange"** %437, align 8
  br label %468

726:                                              ; preds = %721
  %727 = load i64, i64* %427, align 8
  %728 = icmp ugt i64 %727, 1
  br i1 %728, label %730, label %729, !prof !2

729:                                              ; preds = %726
  call void @llvm.trap() #18
  unreachable

730:                                              ; preds = %726
  %731 = and i64 %727, 1
  %732 = icmp eq i64 %731, 0
  %733 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %461, align 8
  %734 = select i1 %732, %"struct.absl::cord_internal::CordRep"** %465, %"struct.absl::cord_internal::CordRep"** %733
  %735 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %734, align 8
  %736 = and i64 %722, 1
  %737 = icmp eq i64 %736, 0
  br i1 %737, label %743, label %738

738:                                              ; preds = %730
  %739 = bitcast %"struct.absl::SubRange"** %437 to i8**
  %740 = load i8*, i8** %739, align 8
  call void @_ZdlPv(i8* %740) #19
  %741 = load i64, i64* %427, align 8
  %742 = and i64 %741, 1
  br label %743

743:                                              ; preds = %738, %730
  %744 = phi i64 [ %731, %730 ], [ %742, %738 ]
  call void @llvm.lifetime.end.p0i8(i64 1136, i8* nonnull %428) #18
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %749, label %746

746:                                              ; preds = %743
  %747 = bitcast %"struct.absl::cord_internal::CordRep"*** %461 to i8**
  %748 = load i8*, i8** %747, align 8
  call void @_ZdlPv(i8* %748) #19
  br label %749

749:                                              ; preds = %743, %746
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %424) #18
  br label %750

750:                                              ; preds = %749, %417
  %751 = phi %"struct.absl::cord_internal::CordRep"* [ %422, %417 ], [ %735, %749 ]
  store %"struct.absl::cord_internal::CordRep"* %751, %"struct.absl::cord_internal::CordRep"** %16, align 8
  store i64 72057594037927936, i64* %17, align 8
  %752 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %753 = load i64, i64* %752, align 8
  %754 = and i64 %753, -72057594037927937
  %755 = icmp eq i64 %754, 0
  br i1 %755, label %759, label %756, !prof !2

756:                                              ; preds = %750
  %757 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0
  %758 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %758, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %757, i32 20) #18
  br label %759

759:                                              ; preds = %756, %750, %32, %412, %83
  ret void
}

declare %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7SubRingEPS1_mmm(%"class.absl::cord_internal::CordRepRing"*, i64, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl4Cord10EqualsImplENS_11string_viewEm(%"class.absl::Cord"*, i8*, i64, i64) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %6 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %5) #18
  %7 = extractvalue { i8*, i64 } %6, 0
  %8 = extractvalue { i8*, i64 } %6, 1
  %9 = icmp ugt i64 %8, %2
  %10 = select i1 %9, i64 %2, i64 %8
  %11 = tail call i32 @bcmp(i8* %7, i8* %1, i64 %10) #18
  %12 = icmp eq i64 %10, %3
  %13 = icmp ne i32 %11, 0
  %14 = or i1 %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm(%"class.absl::Cord"* %0, i8* %1, i64 %2, i64 %10, i64 %3) #18
  br label %17

17:                                               ; preds = %4, %15
  %18 = phi i32 [ %16, %15 ], [ %11, %4 ]
  %19 = icmp eq i32 %18, 0
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl4Cord10EqualsImplERKS0_m(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16), i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %5 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %4) #18
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  %8 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0
  %9 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %8) #18
  %10 = extractvalue { i8*, i64 } %9, 0
  %11 = extractvalue { i8*, i64 } %9, 1
  %12 = icmp ult i64 %11, %7
  %13 = select i1 %12, i64 %11, i64 %7
  %14 = tail call i32 @bcmp(i8* %6, i8* %10, i64 %13) #18
  %15 = icmp eq i64 %13, %2
  %16 = icmp ne i32 %14, 0
  %17 = or i1 %16, %15
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathERKS0_mm(%"class.absl::Cord"* %0, %"class.absl::Cord"* dereferenceable(16) %1, i64 %13, i64 %2) #18
  br label %20

20:                                               ; preds = %3, %18
  %21 = phi i32 [ %19, %18 ], [ %14, %3 ]
  %22 = icmp eq i32 %21, 0
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4absl4Cord7CompareENS_11string_viewE(%"class.absl::Cord"*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.absl::string_view", align 8
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = call i32 @_ZN4absl17SharedCompareImplINS_11string_viewEEEiRKNS_4CordERKT_(%"class.absl::Cord"* dereferenceable(16) %0, %"class.absl::string_view"* nonnull dereferenceable(16) %4)
  ret i32 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4absl17SharedCompareImplINS_11string_viewEEEiRKNS_4CordERKT_(%"class.absl::Cord"* dereferenceable(16), %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = bitcast %"class.absl::Cord"* %0 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %2
  %14 = ashr i8 %5, 1
  %15 = sext i8 %14 to i64
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %46

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %23 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %22) #18
  %24 = extractvalue { i8*, i64 } %23, 0
  %25 = extractvalue { i8*, i64 } %23, 1
  %26 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = load i64, i64* %18, align 8
  %29 = icmp ult i64 %28, %25
  %30 = select i1 %29, i64 %28, i64 %25
  %31 = tail call i32 @memcmp(i8* %24, i8* %27, i64 %30) #21
  %32 = icmp eq i64 %30, %17
  %33 = icmp ne i32 %31, 0
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %40

35:                                               ; preds = %21
  %36 = icmp sgt i32 %31, 0
  %37 = zext i1 %36 to i32
  %38 = lshr i32 %31, 31
  %39 = sub nsw i32 %37, %38
  br label %86

40:                                               ; preds = %21
  %41 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm(%"class.absl::Cord"* %0, i8* %27, i64 %28, i64 %30, i64 %17) #18
  %42 = icmp sgt i32 %41, 0
  %43 = zext i1 %42 to i32
  %44 = lshr i32 %41, 31
  %45 = sub nsw i32 %43, %44
  br label %86

46:                                               ; preds = %16
  %47 = icmp ult i64 %17, %19
  %48 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %49 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %48) #18
  %50 = extractvalue { i8*, i64 } %49, 0
  %51 = extractvalue { i8*, i64 } %49, 1
  %52 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = load i64, i64* %18, align 8
  %55 = icmp ult i64 %54, %51
  %56 = select i1 %55, i64 %54, i64 %51
  %57 = tail call i32 @memcmp(i8* %50, i8* %53, i64 %56) #21
  br i1 %47, label %58, label %72

58:                                               ; preds = %46
  %59 = icmp eq i64 %56, %17
  %60 = icmp ne i32 %57, 0
  %61 = or i1 %60, %59
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm(%"class.absl::Cord"* %0, i8* %53, i64 %54, i64 %56, i64 %17) #18
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi i32 [ %63, %62 ], [ %57, %58 ]
  %66 = icmp sgt i32 %65, 0
  %67 = zext i1 %66 to i32
  %68 = lshr i32 %65, 31
  %69 = sub nsw i32 %67, %68
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 -1, i32 %69
  br label %86

72:                                               ; preds = %46
  %73 = icmp eq i64 %56, %19
  %74 = icmp ne i32 %57, 0
  %75 = or i1 %74, %73
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm(%"class.absl::Cord"* %0, i8* %53, i64 %54, i64 %56, i64 %19) #18
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi i32 [ %77, %76 ], [ %57, %72 ]
  %80 = icmp sgt i32 %79, 0
  %81 = zext i1 %80 to i32
  %82 = lshr i32 %79, 31
  %83 = sub nsw i32 %81, %82
  %84 = icmp eq i32 %83, 0
  %85 = select i1 %84, i32 1, i32 %83
  br label %86

86:                                               ; preds = %40, %35, %78, %64
  %87 = phi i32 [ %71, %64 ], [ %85, %78 ], [ %39, %35 ], [ %45, %40 ]
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4absl4Cord11CompareImplERKS0_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = tail call i32 @_ZN4absl17SharedCompareImplINS_4CordEEEiRKS1_RKT_(%"class.absl::Cord"* dereferenceable(16) %0, %"class.absl::Cord"* dereferenceable(16) %1)
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4absl17SharedCompareImplINS_4CordEEEiRKS1_RKT_(%"class.absl::Cord"* dereferenceable(16), %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = bitcast %"class.absl::Cord"* %0 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %2
  %14 = ashr i8 %5, 1
  %15 = sext i8 %14 to i64
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %18 = bitcast %"class.absl::Cord"* %1 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 15
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %24, align 8
  %26 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %31

28:                                               ; preds = %16
  %29 = ashr i8 %20, 1
  %30 = sext i8 %29 to i64
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi i64 [ %27, %23 ], [ %30, %28 ]
  %33 = icmp eq i64 %17, %32
  br i1 %33, label %34, label %60

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %36 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %35) #18
  %37 = extractvalue { i8*, i64 } %36, 0
  %38 = extractvalue { i8*, i64 } %36, 1
  %39 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0
  %40 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %39) #18
  %41 = extractvalue { i8*, i64 } %40, 0
  %42 = extractvalue { i8*, i64 } %40, 1
  %43 = icmp ult i64 %42, %38
  %44 = select i1 %43, i64 %42, i64 %38
  %45 = tail call i32 @memcmp(i8* %37, i8* %41, i64 %44) #21
  %46 = icmp eq i64 %44, %17
  %47 = icmp ne i32 %45, 0
  %48 = or i1 %47, %46
  br i1 %48, label %49, label %54

49:                                               ; preds = %34
  %50 = icmp sgt i32 %45, 0
  %51 = zext i1 %50 to i32
  %52 = lshr i32 %45, 31
  %53 = sub nsw i32 %51, %52
  br label %101

54:                                               ; preds = %34
  %55 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathERKS0_mm(%"class.absl::Cord"* %0, %"class.absl::Cord"* dereferenceable(16) %1, i64 %44, i64 %17) #18
  %56 = icmp sgt i32 %55, 0
  %57 = zext i1 %56 to i32
  %58 = lshr i32 %55, 31
  %59 = sub nsw i32 %57, %58
  br label %101

60:                                               ; preds = %31
  %61 = icmp ult i64 %17, %32
  %62 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  %63 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %62) #18
  %64 = extractvalue { i8*, i64 } %63, 0
  %65 = extractvalue { i8*, i64 } %63, 1
  %66 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0
  %67 = tail call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %66) #18
  %68 = extractvalue { i8*, i64 } %67, 0
  %69 = extractvalue { i8*, i64 } %67, 1
  %70 = icmp ult i64 %69, %65
  %71 = select i1 %70, i64 %69, i64 %65
  %72 = tail call i32 @memcmp(i8* %64, i8* %68, i64 %71) #21
  br i1 %61, label %73, label %87

73:                                               ; preds = %60
  %74 = icmp eq i64 %71, %17
  %75 = icmp ne i32 %72, 0
  %76 = or i1 %75, %74
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathERKS0_mm(%"class.absl::Cord"* %0, %"class.absl::Cord"* dereferenceable(16) %1, i64 %71, i64 %17) #18
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi i32 [ %78, %77 ], [ %72, %73 ]
  %81 = icmp sgt i32 %80, 0
  %82 = zext i1 %81 to i32
  %83 = lshr i32 %80, 31
  %84 = sub nsw i32 %82, %83
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i32 -1, i32 %84
  br label %101

87:                                               ; preds = %60
  %88 = icmp eq i64 %71, %32
  %89 = icmp ne i32 %72, 0
  %90 = or i1 %89, %88
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = tail call i32 @_ZNK4absl4Cord15CompareSlowPathERKS0_mm(%"class.absl::Cord"* %0, %"class.absl::Cord"* dereferenceable(16) %1, i64 %71, i64 %32) #18
  br label %93

93:                                               ; preds = %87, %91
  %94 = phi i32 [ %92, %91 ], [ %72, %87 ]
  %95 = icmp sgt i32 %94, 0
  %96 = zext i1 %95 to i32
  %97 = lshr i32 %94, 31
  %98 = sub nsw i32 %96, %97
  %99 = icmp eq i32 %98, 0
  %100 = select i1 %99, i32 1, i32 %98
  br label %101

101:                                              ; preds = %54, %49, %93, %79
  %102 = phi i32 [ %86, %79 ], [ %100, %93 ], [ %53, %49 ], [ %59, %54 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl4Cord8EndsWithENS_11string_viewE(%"class.absl::Cord"*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.absl::Cord", align 8
  %5 = bitcast %"class.absl::Cord"* %0 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 15
  %7 = load i8, i8* %6, align 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %11, align 8
  %13 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  br label %18

15:                                               ; preds = %3
  %16 = ashr i8 %7, 1
  %17 = sext i8 %16 to i64
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi i64 [ %14, %10 ], [ %17, %15 ]
  %20 = icmp ult i64 %19, %2
  br i1 %20, label %76, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.absl::Cord"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.absl::Cord"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  br i1 %9, label %40, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %29 = icmp eq %"struct.absl::cord_internal::CordRep"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 2 monotonic
  store %"struct.absl::cord_internal::CordRep"* %28, %"struct.absl::cord_internal::CordRep"** %23, align 8
  store i64 72057594037927936, i64* %24, align 8
  %33 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, -72057594037927937
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %41, label %37, !prof !2

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %4, i64 0, i32 0, i32 0
  call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nonnull dereferenceable(16) %39, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %38, i32 7) #18
  br label %41

40:                                               ; preds = %26, %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %5, i64 16, i1 false) #18
  br label %41

41:                                               ; preds = %30, %37, %40
  %42 = sub i64 %19, %2
  call void @_ZN4absl4Cord12RemovePrefixEm(%"class.absl::Cord"* nonnull %4, i64 %42)
  %43 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %4, i64 0, i32 0
  %44 = call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* nonnull %43) #18
  %45 = extractvalue { i8*, i64 } %44, 0
  %46 = extractvalue { i8*, i64 } %44, 1
  %47 = icmp ugt i64 %46, %2
  %48 = select i1 %47, i64 %2, i64 %46
  %49 = call i32 @bcmp(i8* %45, i8* %1, i64 %48) #18
  %50 = icmp uge i64 %46, %2
  %51 = icmp ne i32 %49, 0
  %52 = or i1 %51, %50
  br i1 %52, label %55, label %53

53:                                               ; preds = %41
  %54 = call i32 @_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm(%"class.absl::Cord"* nonnull %4, i8* %1, i64 %2, i64 %48, i64 %2) #18
  br label %55

55:                                               ; preds = %41, %53
  %56 = phi i32 [ %54, %53 ], [ %49, %41 ]
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds i8, i8* %22, i64 15
  %59 = load i8, i8* %58, align 1
  %60 = and i8 %59, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %75, label %62

62:                                               ; preds = %55
  %63 = load i64, i64* %24, align 8
  %64 = call i64 @llvm.bswap.i64(i64 %63) #18
  %65 = add nsw i64 %64, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %69, label %67, !prof !2

67:                                               ; preds = %62
  %68 = inttoptr i64 %65 to %"class.absl::cord_internal::CordzInfo"*
  call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %68) #18
  br label %69

69:                                               ; preds = %67, %62
  %70 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %23, align 8
  %71 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %70, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw sub i32* %71, i32 2 acq_rel
  %73 = icmp eq i32 %72, 2
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %69
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %70) #18
  br label %75

75:                                               ; preds = %55, %69, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18
  br label %76

76:                                               ; preds = %18, %75
  %77 = phi i1 [ %57, %75 ], [ false, %18 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl4Cord8EndsWithERKS0_(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.absl::Cord", align 8
  %4 = bitcast %"class.absl::Cord"* %0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 15
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %10, align 8
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  br label %17

14:                                               ; preds = %2
  %15 = ashr i8 %6, 1
  %16 = sext i8 %15 to i64
  br label %17

17:                                               ; preds = %9, %14
  %18 = phi i64 [ %13, %9 ], [ %16, %14 ]
  %19 = bitcast %"class.absl::Cord"* %1 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 15
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, align 8
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  br label %32

29:                                               ; preds = %17
  %30 = ashr i8 %21, 1
  %31 = sext i8 %30 to i64
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi i64 [ %28, %24 ], [ %31, %29 ]
  %34 = icmp ult i64 %18, %33
  br i1 %34, label %94, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.absl::Cord"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #18
  %37 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.absl::Cord"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  br i1 %8, label %54, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, align 8
  %43 = icmp eq %"struct.absl::cord_internal::CordRep"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 2 monotonic
  store %"struct.absl::cord_internal::CordRep"* %42, %"struct.absl::cord_internal::CordRep"** %37, align 8
  store i64 72057594037927936, i64* %38, align 8
  %47 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, -72057594037927937
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %55, label %51, !prof !2

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0, i32 0
  call void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nonnull dereferenceable(16) %53, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %52, i32 7) #18
  br label %55

54:                                               ; preds = %40, %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %4, i64 16, i1 false) #18
  br label %55

55:                                               ; preds = %44, %51, %54
  %56 = sub i64 %18, %33
  call void @_ZN4absl4Cord12RemovePrefixEm(%"class.absl::Cord"* nonnull %3, i64 %56)
  %57 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %3, i64 0, i32 0
  %58 = call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* nonnull %57) #18
  %59 = extractvalue { i8*, i64 } %58, 0
  %60 = extractvalue { i8*, i64 } %58, 1
  %61 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0
  %62 = call { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"* %61) #18
  %63 = extractvalue { i8*, i64 } %62, 0
  %64 = extractvalue { i8*, i64 } %62, 1
  %65 = icmp ult i64 %64, %60
  %66 = select i1 %65, i64 %64, i64 %60
  %67 = call i32 @bcmp(i8* %59, i8* %63, i64 %66) #18
  %68 = icmp eq i64 %66, %33
  %69 = icmp ne i32 %67, 0
  %70 = or i1 %69, %68
  br i1 %70, label %73, label %71

71:                                               ; preds = %55
  %72 = call i32 @_ZNK4absl4Cord15CompareSlowPathERKS0_mm(%"class.absl::Cord"* nonnull %3, %"class.absl::Cord"* dereferenceable(16) %1, i64 %66, i64 %33) #18
  br label %73

73:                                               ; preds = %55, %71
  %74 = phi i32 [ %72, %71 ], [ %67, %55 ]
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds i8, i8* %36, i64 15
  %77 = load i8, i8* %76, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %73
  %81 = load i64, i64* %38, align 8
  %82 = call i64 @llvm.bswap.i64(i64 %81) #18
  %83 = add nsw i64 %82, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85, !prof !2

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to %"class.absl::cord_internal::CordzInfo"*
  call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %86) #18
  br label %87

87:                                               ; preds = %85, %80
  %88 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %37, align 8
  %89 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %88, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 2 acq_rel
  %91 = icmp eq i32 %90, 2
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %87
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %88) #18
  br label %93

93:                                               ; preds = %73, %87, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #18
  br label %94

94:                                               ; preds = %32, %93
  %95 = phi i1 [ %75, %93 ], [ false, %32 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl4CordcvNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::Cord"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #18
  tail call void @_ZN4absl16CopyCordToStringERKNS_4CordEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::Cord"* dereferenceable(16) %1, %"class.std::__1::basic_string"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl16CopyCordToStringERKNS_4CordEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::Cord"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2 {
  %3 = bitcast %"class.absl::Cord"* %0 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0
  tail call void @_ZNK4absl4Cord9InlineRep6CopyToEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.absl::Cord::InlineRep"* %9, %"class.std::__1::basic_string"* %1)
  br label %87

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %11, align 8
  %13 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %24

22:                                               ; preds = %10
  %23 = zext i8 %17 to i64
  br label %24

24:                                               ; preds = %22, %19
  %25 = phi i64 [ %21, %19 ], [ %23, %22 ]
  %26 = icmp ugt i64 %14, %25
  br i1 %26, label %27, label %65

27:                                               ; preds = %24
  %28 = sub i64 %14, %25
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %75, label %30

30:                                               ; preds = %27
  br i1 %18, label %31, label %38

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 9223372036854775807
  %35 = add nsw i64 %34, -1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %30
  %39 = zext i8 %17 to i64
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i64 [ %35, %31 ], [ 22, %38 ]
  %42 = phi i64 [ %37, %31 ], [ %39, %38 ]
  %43 = sub i64 %41, %42
  %44 = icmp ult i64 %43, %28
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = add i64 %42, %28
  %47 = sub i64 %46, %41
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %41, i64 %47, i64 %42, i64 %42, i64 0, i64 0) #18
  %48 = load i8, i8* %16, align 1
  br label %49

49:                                               ; preds = %45, %40
  %50 = phi i8 [ %48, %45 ], [ %17, %40 ]
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %42, %28
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %56, align 8
  br label %61

57:                                               ; preds = %49
  %58 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %59 = add i64 %42, %28
  %60 = trunc i64 %59 to i8
  store i8 %60, i8* %16, align 1
  br label %61

61:                                               ; preds = %57, %52
  %62 = phi i64 [ %55, %52 ], [ %59, %57 ]
  %63 = phi i8* [ %54, %52 ], [ %58, %57 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  store i8 0, i8* %64, align 1
  br label %75

65:                                               ; preds = %24
  br i1 %18, label %66, label %71

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %14
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %70, align 8
  br label %75

71:                                               ; preds = %65
  %72 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 %14
  store i8 0, i8* %73, align 1
  %74 = trunc i64 %14 to i8
  store i8 %74, i8* %16, align 1
  br label %77

75:                                               ; preds = %66, %61, %27
  %76 = load i8, i8* %16, align 1
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi i8 [ %76, %75 ], [ %74, %71 ]
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  br label %85

83:                                               ; preds = %77
  %84 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %85

85:                                               ; preds = %80, %83
  %86 = phi i8* [ %82, %80 ], [ %84, %83 ]
  tail call void @_ZNK4absl4Cord19CopyToArraySlowPathEPc(%"class.absl::Cord"* %0, i8* %86)
  br label %87

87:                                               ; preds = %85, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl4Cord9InlineRep6CopyToEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.absl::Cord::InlineRep"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %2
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp ult i64 %13, 15
  br i1 %14, label %15, label %53

15:                                               ; preds = %12
  %16 = sub nuw nsw i64 15, %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %62, label %18

18:                                               ; preds = %15
  br i1 %6, label %19, label %26

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 9223372036854775807
  %23 = add nsw i64 %22, -1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %28

26:                                               ; preds = %18
  %27 = zext i8 %5 to i64
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i64 [ %23, %19 ], [ 22, %26 ]
  %30 = phi i64 [ %25, %19 ], [ %27, %26 ]
  %31 = sub i64 %29, %30
  %32 = icmp ult i64 %31, %16
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = add i64 %30, %16
  %35 = sub i64 %34, %29
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %29, i64 %35, i64 %30, i64 %30, i64 0, i64 0) #18
  %36 = load i8, i8* %4, align 1
  br label %37

37:                                               ; preds = %33, %28
  %38 = phi i8 [ %36, %33 ], [ %5, %28 ]
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = add i64 %30, %16
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %44, align 8
  br label %49

45:                                               ; preds = %37
  %46 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %47 = add i64 %30, %16
  %48 = trunc i64 %47 to i8
  store i8 %48, i8* %4, align 1
  br label %49

49:                                               ; preds = %45, %40
  %50 = phi i64 [ %43, %40 ], [ %47, %45 ]
  %51 = phi i8* [ %42, %40 ], [ %46, %45 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  br label %62

53:                                               ; preds = %12
  br i1 %6, label %54, label %59

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 15
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 15, i64* %58, align 8
  br label %62

59:                                               ; preds = %53
  %60 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 15
  store i8 0, i8* %61, align 1
  store i8 15, i8* %4, align 1
  br label %70

62:                                               ; preds = %15, %49, %54
  %63 = load i8, i8* %4, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %59, %65, %67
  %71 = phi i8* [ %69, %67 ], [ %66, %65 ], [ %60, %59 ]
  %72 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 8 %72, i64 15, i1 false)
  %73 = getelementptr inbounds i8, i8* %72, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = ashr i8 %74, 1
  %76 = sext i8 %75 to i64
  %77 = load i8, i8* %4, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  br label %84

82:                                               ; preds = %70
  %83 = zext i8 %77 to i64
  br label %84

84:                                               ; preds = %82, %79
  %85 = phi i64 [ %81, %79 ], [ %83, %82 ]
  %86 = icmp ult i64 %85, %76
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %88) #20
  unreachable

89:                                               ; preds = %84
  br i1 %78, label %90, label %95

90:                                               ; preds = %89
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %76
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %76, i64* %94, align 8
  br label %98

95:                                               ; preds = %89
  %96 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %76
  store i8 0, i8* %97, align 1
  store i8 %75, i8* %4, align 1
  br label %98

98:                                               ; preds = %90, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl4Cord19CopyToArraySlowPathEPc(%"class.absl::Cord"*, i8* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %5 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #18
  %8 = bitcast %"class.absl::Cord"* %0 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 15
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %14, align 8
  br label %16

16:                                               ; preds = %2, %13
  %17 = phi %"struct.absl::cord_internal::CordRep"* [ %15, %13 ], [ null, %2 ]
  %18 = call zeroext i1 @_ZN4absl4Cord10GetFlatAuxEPNS_13cord_internal7CordRepEPNS_11string_viewE(%"struct.absl::cord_internal::CordRep"* %17, %"class.absl::string_view"* nonnull %3)
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = load i8*, i8** %6, align 8
  %21 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %20, i64 %21, i1 false)
  br label %165

22:                                               ; preds = %16
  %23 = bitcast %"class.absl::Cord::ChunkIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %23) #18
  %24 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 2
  %25 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 408, i1 false)
  %26 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #18, !alias.scope !38
  %27 = load i8, i8* %9, align 1, !noalias !38
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %31, align 8, !noalias !38
  %33 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %32, i64 0, i32 0
  %34 = load i64, i64* %33, align 8, !noalias !38
  store i64 %34, i64* %26, align 8, !alias.scope !38
  %35 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %35, align 8, !alias.scope !38
  %36 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %36, align 8, !alias.scope !38
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %4, %"struct.absl::cord_internal::CordRep"* %32) #18
  %37 = load i64, i64* %26, align 8
  br label %48

38:                                               ; preds = %22
  %39 = ashr i8 %27, 1
  %40 = sext i8 %39 to i64
  store i64 %40, i64* %26, align 8, !alias.scope !38
  %41 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %41, align 8, !alias.scope !38
  %42 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %42, align 8, !alias.scope !38
  %43 = icmp sgt i8 %27, -1
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %38
  call void @llvm.trap() #18
  unreachable

45:                                               ; preds = %38
  %46 = bitcast %"class.absl::Cord::ChunkIterator"* %4 to %"class.absl::Cord"**
  store %"class.absl::Cord"* %0, %"class.absl::Cord"** %46, align 8, !alias.scope !38
  %47 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 1
  store i64 %40, i64* %47, align 8, !alias.scope !38
  br label %48

48:                                               ; preds = %30, %45
  %49 = phi i64 [ %37, %30 ], [ %40, %45 ]
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  %55 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  br label %66

56:                                               ; preds = %162, %161, %48
  %57 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast %"struct.absl::cord_internal::CordRep"*** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %56, %61
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %23) #18
  br label %165

66:                                               ; preds = %51, %162
  %67 = phi i8* [ %1, %51 ], [ %70, %162 ]
  %68 = load i8*, i8** %52, align 8
  %69 = load i64, i64* %53, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %68, i64 %69, i1 false)
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  %71 = load i64, i64* %26, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %74, !prof !3

73:                                               ; preds = %66
  call void @llvm.trap() #18
  unreachable

74:                                               ; preds = %66
  %75 = load i64, i64* %53, align 8
  %76 = sub i64 %71, %75
  store i64 %76, i64* %26, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %161, label %78

78:                                               ; preds = %74
  %79 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %54, align 8
  %80 = icmp eq %"class.absl::cord_internal::CordRepRing"* %79, null
  br i1 %80, label %158, label %81

81:                                               ; preds = %78
  %82 = load i32, i32* %55, align 8
  %83 = add i32 %82, 1
  %84 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %83, %85
  %87 = select i1 %86, i32 0, i32 %83
  store i32 %87, i32* %55, align 8
  %88 = load i32, i32* %84, align 8
  %89 = zext i32 %88 to i64
  %90 = shl nuw nsw i64 %89, 4
  %91 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 5, i64 %90
  %92 = bitcast i8* %91 to i32*
  %93 = zext i32 %87 to i64
  %94 = getelementptr inbounds i32, i32* %92, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = shl nuw nsw i64 %89, 3
  %98 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 5, i64 %97
  %99 = bitcast i8* %98 to %"struct.absl::cord_internal::CordRep"**
  %100 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %99, i64 %93
  %101 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %100, align 8
  %102 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 0, i32 2
  %103 = load i8, i8* %102, align 4
  %104 = icmp ugt i8 %103, 3
  br i1 %104, label %105, label %107

105:                                              ; preds = %81
  %106 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 0, i32 3, i64 0
  br label %131

107:                                              ; preds = %81
  %108 = icmp eq i8 %103, 1
  br i1 %108, label %109, label %113

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 1
  %111 = bitcast %"struct.absl::cord_internal::CordRep"* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %131

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 1, i32 1
  %115 = bitcast %"class.absl::cord_internal::Refcount"* %114 to %"struct.absl::cord_internal::CordRep"**
  %116 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %115, align 8
  %117 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %116, i64 0, i32 2
  %118 = load i8, i8* %117, align 4
  %119 = icmp eq i8 %118, 1
  br i1 %119, label %122, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %116, i64 0, i32 3, i64 0
  br label %126

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %116, i64 1
  %124 = bitcast %"struct.absl::cord_internal::CordRep"* %123 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %122, %120
  %127 = phi i8* [ %121, %120 ], [ %125, %122 ]
  %128 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %101, i64 1, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds i8, i8* %127, i64 %129
  br label %131

131:                                              ; preds = %126, %109, %105
  %132 = phi i8* [ %106, %105 ], [ %112, %109 ], [ %130, %126 ]
  %133 = getelementptr inbounds i8, i8* %132, i64 %96
  %134 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, %87
  br i1 %136, label %137, label %139

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 4
  br label %147

139:                                              ; preds = %131
  %140 = icmp eq i32 %87, 0
  %141 = select i1 %140, i32 %88, i32 %87
  %142 = add i32 %141, -1
  %143 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 5, i64 0
  %144 = bitcast i8* %143 to i64*
  %145 = zext i32 %142 to i64
  %146 = getelementptr inbounds i64, i64* %144, i64 %145
  br label %147

147:                                              ; preds = %139, %137
  %148 = phi i64* [ %138, %137 ], [ %146, %139 ]
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %79, i64 0, i32 5, i64 0
  %151 = bitcast i8* %150 to i64*
  %152 = getelementptr inbounds i64, i64* %151, i64 %93
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %153, %149
  %155 = icmp sgt i64 %154, -1
  br i1 %155, label %157, label %156, !prof !2

156:                                              ; preds = %147
  call void @llvm.trap() #18
  unreachable

157:                                              ; preds = %147
  store i8* %133, i8** %52, align 8
  store i64 %154, i64* %53, align 8
  br label %162

158:                                              ; preds = %78
  %159 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %4) #18
  %160 = load i64, i64* %26, align 8
  br label %162

161:                                              ; preds = %74
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #18
  br label %56

162:                                              ; preds = %157, %158
  %163 = phi i64 [ %76, %157 ], [ %160, %158 ]
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %56, label %66

165:                                              ; preds = %65, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl4Cord10GetFlatAuxEPNS_13cord_internal7CordRepEPNS_11string_viewE(%"struct.absl::cord_internal::CordRep"*, %"class.absl::string_view"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp ugt i8 %4, 3
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp sgt i64 %8, -1
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  tail call void @llvm.trap() #18
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 3, i64 0
  %13 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %8, i64* %14, align 8
  br label %243

15:                                               ; preds = %2
  switch i8 %4, label %243 [
    i8 1, label %16
    i8 3, label %26
    i8 2, label %104
  ]

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %18, -1
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.absl::string_view"* %1 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %18, i64* %25, align 8
  br label %243

26:                                               ; preds = %15
  %27 = bitcast %"struct.absl::cord_internal::CordRep"* %0 to %"class.absl::cord_internal::CordRepRing"*
  %28 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1
  %29 = bitcast %"struct.absl::cord_internal::CordRep"* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %27, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 %32, %30
  %34 = icmp ugt i32 %32, %30
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  br label %38

38:                                               ; preds = %35, %26
  %39 = phi i32 [ %37, %35 ], [ 0, %26 ]
  %40 = add i32 %33, %39
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %243

42:                                               ; preds = %38
  %43 = icmp eq %"class.absl::string_view"* %1, null
  br i1 %43, label %243, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 4
  %49 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %27, i64 0, i32 5, i64 %48
  %50 = bitcast i8* %49 to i32*
  %51 = zext i32 %30 to i64
  %52 = getelementptr inbounds i32, i32* %50, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = shl nuw nsw i64 %47, 3
  %56 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %27, i64 0, i32 5, i64 %55
  %57 = bitcast i8* %56 to %"struct.absl::cord_internal::CordRep"**
  %58 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %57, i64 %51
  %59 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %58, align 8
  %60 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %59, i64 0, i32 2
  %61 = load i8, i8* %60, align 4
  %62 = icmp ugt i8 %61, 3
  br i1 %62, label %63, label %65

63:                                               ; preds = %44
  %64 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %59, i64 0, i32 3, i64 0
  br label %89

65:                                               ; preds = %44
  %66 = icmp eq i8 %61, 1
  br i1 %66, label %67, label %71

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %59, i64 1
  %69 = bitcast %"struct.absl::cord_internal::CordRep"* %68 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %89

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %59, i64 1, i32 1
  %73 = bitcast %"class.absl::cord_internal::Refcount"* %72 to %"struct.absl::cord_internal::CordRep"**
  %74 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %73, align 8
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %74, i64 0, i32 2
  %76 = load i8, i8* %75, align 4
  %77 = icmp eq i8 %76, 1
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %74, i64 0, i32 3, i64 0
  br label %84

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %74, i64 1
  %82 = bitcast %"struct.absl::cord_internal::CordRep"* %81 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %84

84:                                               ; preds = %80, %78
  %85 = phi i8* [ %79, %78 ], [ %83, %80 ]
  %86 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %59, i64 1, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  br label %89

89:                                               ; preds = %84, %67, %63
  %90 = phi i8* [ %64, %63 ], [ %70, %67 ], [ %88, %84 ]
  %91 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 2, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 2, i32 1
  %94 = bitcast %"class.absl::cord_internal::Refcount"* %93 to i64*
  %95 = getelementptr inbounds i64, i64* %94, i64 %51
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %96, %92
  %98 = icmp sgt i64 %97, -1
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %89
  tail call void @llvm.trap() #18
  unreachable

100:                                              ; preds = %89
  %101 = getelementptr inbounds i8, i8* %90, i64 %54
  %102 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %97, i64* %103, align 8
  br label %243

104:                                              ; preds = %15
  %105 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 1
  %106 = bitcast %"class.absl::cord_internal::Refcount"* %105 to %"struct.absl::cord_internal::CordRep"**
  %107 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %106, align 8
  %108 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 4
  %110 = icmp ugt i8 %109, 3
  br i1 %110, label %111, label %122

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp sgt i64 %113, -1
  br i1 %114, label %116, label %115, !prof !2

115:                                              ; preds = %111
  tail call void @llvm.trap() #18
  unreachable

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 0, i32 3, i64 %118
  %120 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %119, i8** %120, align 8
  %121 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %113, i64* %121, align 8
  br label %243

122:                                              ; preds = %104
  switch i8 %109, label %243 [
    i8 1, label %123
    i8 3, label %137
  ]

123:                                              ; preds = %122
  %124 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp sgt i64 %125, -1
  br i1 %126, label %128, label %127, !prof !2

127:                                              ; preds = %123
  tail call void @llvm.trap() #18
  unreachable

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 1
  %130 = bitcast %"struct.absl::cord_internal::CordRep"* %129 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i8, i8* %131, i64 %133
  %135 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %134, i8** %135, align 8
  %136 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %125, i64* %136, align 8
  br label %243

137:                                              ; preds = %122
  %138 = bitcast %"struct.absl::cord_internal::CordRep"* %107 to %"class.absl::cord_internal::CordRepRing"*
  %139 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %140, 0
  %144 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 1
  %145 = bitcast %"struct.absl::cord_internal::CordRep"* %144 to i32*
  %146 = load i32, i32* %145, align 8
  br i1 %143, label %151, label %147

147:                                              ; preds = %137
  %148 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %138, i32 %146, i64 %140) #18
  %149 = extractvalue { i32, i64 } %148, 0
  %150 = extractvalue { i32, i64 } %148, 1
  br label %151

151:                                              ; preds = %147, %137
  %152 = phi i32 [ %149, %147 ], [ %146, %137 ]
  %153 = phi i64 [ %150, %147 ], [ 0, %137 ]
  %154 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  %157 = shl nuw nsw i64 %156, 4
  %158 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %138, i64 0, i32 5, i64 %157
  %159 = bitcast i8* %158 to i32*
  %160 = zext i32 %152 to i64
  %161 = getelementptr inbounds i32, i32* %159, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %156, 3
  %165 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %138, i64 0, i32 5, i64 %164
  %166 = bitcast i8* %165 to %"struct.absl::cord_internal::CordRep"**
  %167 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %166, i64 %160
  %168 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %167, align 8
  %169 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 0, i32 2
  %170 = load i8, i8* %169, align 4
  %171 = icmp ugt i8 %170, 3
  br i1 %171, label %172, label %174

172:                                              ; preds = %151
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 0, i32 3, i64 0
  br label %198

174:                                              ; preds = %151
  %175 = icmp eq i8 %170, 1
  br i1 %175, label %176, label %180

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 1
  %178 = bitcast %"struct.absl::cord_internal::CordRep"* %177 to i8**
  %179 = load i8*, i8** %178, align 8
  br label %198

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 1, i32 1
  %182 = bitcast %"class.absl::cord_internal::Refcount"* %181 to %"struct.absl::cord_internal::CordRep"**
  %183 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %182, align 8
  %184 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %183, i64 0, i32 2
  %185 = load i8, i8* %184, align 4
  %186 = icmp eq i8 %185, 1
  br i1 %186, label %189, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %183, i64 0, i32 3, i64 0
  br label %193

189:                                              ; preds = %180
  %190 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %183, i64 1
  %191 = bitcast %"struct.absl::cord_internal::CordRep"* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %189, %187
  %194 = phi i8* [ %188, %187 ], [ %192, %189 ]
  %195 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %168, i64 1, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds i8, i8* %194, i64 %196
  br label %198

198:                                              ; preds = %193, %176, %172
  %199 = phi i8* [ %173, %172 ], [ %179, %176 ], [ %197, %193 ]
  %200 = getelementptr inbounds i8, i8* %199, i64 %163
  %201 = load i32, i32* %145, align 8
  %202 = icmp eq i32 %201, %152
  br i1 %202, label %203, label %205

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 2, i32 0
  br label %213

205:                                              ; preds = %198
  %206 = icmp eq i32 %152, 0
  %207 = select i1 %206, i32 %155, i32 %152
  %208 = add i32 %207, -1
  %209 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 2, i32 1
  %210 = bitcast %"class.absl::cord_internal::Refcount"* %209 to i64*
  %211 = zext i32 %208 to i64
  %212 = getelementptr inbounds i64, i64* %210, i64 %211
  br label %213

213:                                              ; preds = %205, %203
  %214 = phi i64* [ %204, %203 ], [ %212, %205 ]
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %107, i64 2, i32 1
  %217 = bitcast %"class.absl::cord_internal::Refcount"* %216 to i64*
  %218 = getelementptr inbounds i64, i64* %217, i64 %160
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %219, %215
  %221 = icmp sgt i64 %220, -1
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %213
  tail call void @llvm.trap() #18
  unreachable

223:                                              ; preds = %213
  %224 = icmp ult i64 %220, %142
  %225 = sub i64 %220, %142
  %226 = icmp ult i64 %225, %153
  %227 = or i1 %224, %226
  br i1 %227, label %243, label %228

228:                                              ; preds = %223
  %229 = icmp eq %"class.absl::string_view"* %1, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %228
  %231 = icmp ult i64 %220, %153
  br i1 %231, label %232, label %233, !prof !3

232:                                              ; preds = %230
  tail call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0)) #20
  unreachable

233:                                              ; preds = %230
  %234 = sub i64 %220, %153
  %235 = icmp ugt i64 %234, %142
  %236 = select i1 %235, i64 %142, i64 %234
  %237 = icmp sgt i64 %236, -1
  br i1 %237, label %239, label %238, !prof !2

238:                                              ; preds = %233
  tail call void @llvm.trap() #18
  unreachable

239:                                              ; preds = %233
  %240 = getelementptr inbounds i8, i8* %200, i64 %153
  %241 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  store i8* %240, i8** %241, align 8
  %242 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  store i64 %236, i64* %242, align 8
  br label %243

243:                                              ; preds = %239, %228, %223, %128, %116, %15, %122, %100, %42, %38, %21, %11
  %244 = phi i1 [ true, %11 ], [ true, %21 ], [ true, %42 ], [ true, %100 ], [ false, %38 ], [ false, %122 ], [ false, %15 ], [ false, %223 ], [ true, %239 ], [ true, %228 ], [ true, %128 ], [ true, %116 ]
  ret i1 %244
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* returned) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %99, label %6

6:                                                ; preds = %1
  %7 = and i64 %4, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %10, align 8
  br label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %13 to %"struct.absl::cord_internal::CordRep"**
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi %"struct.absl::cord_internal::CordRep"** [ %11, %9 ], [ %14, %12 ]
  %17 = lshr i64 %4, 1
  %18 = add nsw i64 %17, -1
  %19 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %16, i64 %18
  %20 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %19, align 8
  %21 = add i64 %4, -2
  store i64 %21, i64* %3, align 8
  %22 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %20, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %66

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %2, i64 0, i32 0
  %27 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"struct.absl::cord_internal::CordRep"*** %27 to i64*
  %29 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %30 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1
  %31 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %30 to i64
  br label %32

32:                                               ; preds = %64, %25
  %33 = phi i64 [ %21, %25 ], [ %65, %64 ]
  %34 = phi %"struct.absl::cord_internal::CordRep"* [ %20, %25 ], [ %60, %64 ]
  %35 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %34, i64 1, i32 1
  %36 = bitcast %"class.absl::cord_internal::Refcount"* %35 to %"struct.absl::cord_internal::CordRep"**
  %37 = and i64 %33, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = load i64, i64* %28, align 8, !noalias !43
  %41 = load i64, i64* %29, align 8, !noalias !43
  br label %42

42:                                               ; preds = %32, %39
  %43 = phi i64 [ %40, %39 ], [ %31, %32 ]
  %44 = phi i64 [ %41, %39 ], [ 47, %32 ]
  %45 = lshr i64 %33, 1
  %46 = icmp eq i64 %45, %44
  br i1 %46, label %55, label %47, !prof !3

47:                                               ; preds = %42
  %48 = inttoptr i64 %43 to %"struct.absl::cord_internal::CordRep"**
  %49 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %48, i64 %45
  %50 = bitcast %"struct.absl::cord_internal::CordRep"** %49 to i64*
  %51 = bitcast %"class.absl::cord_internal::Refcount"* %35 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %50, align 8
  %53 = load i64, i64* %3, align 8
  %54 = add i64 %53, 2
  store i64 %54, i64* %3, align 8
  br label %57

55:                                               ; preds = %42
  %56 = tail call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* %26, %"struct.absl::cord_internal::CordRep"** dereferenceable(8) %36) #18
  br label %57

57:                                               ; preds = %47, %55
  %58 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %34, i64 1
  %59 = bitcast %"struct.absl::cord_internal::CordRep"* %58 to %"struct.absl::cord_internal::CordRep"**
  %60 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %59, align 8
  %61 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %60, i64 0, i32 2
  %62 = load i8, i8* %61, align 4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = load i64, i64* %3, align 8, !noalias !43
  br label %32

66:                                               ; preds = %57, %15
  %67 = phi %"struct.absl::cord_internal::CordRep"* [ %20, %15 ], [ %60, %57 ]
  %68 = phi i8 [ %23, %15 ], [ %62, %57 ]
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %67, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i8 %68, 2
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %67, i64 1, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %67, i64 1, i32 1
  %76 = bitcast %"class.absl::cord_internal::Refcount"* %75 to %"struct.absl::cord_internal::CordRep"**
  %77 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %76, align 8
  br label %78

78:                                               ; preds = %72, %66
  %79 = phi %"struct.absl::cord_internal::CordRep"* [ %77, %72 ], [ %67, %66 ]
  %80 = phi i64 [ %74, %72 ], [ 0, %66 ]
  %81 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 0, i32 2
  %82 = load i8, i8* %81, align 4
  %83 = icmp eq i8 %82, 1
  br i1 %83, label %84, label %88

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 1
  %86 = bitcast %"struct.absl::cord_internal::CordRep"* %85 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %90

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 0, i32 3, i64 0
  br label %90

90:                                               ; preds = %88, %84
  %91 = phi i8* [ %87, %84 ], [ %89, %88 ]
  %92 = icmp sgt i64 %70, -1
  br i1 %92, label %94, label %93, !prof !2

93:                                               ; preds = %90
  tail call void @llvm.trap() #18
  unreachable

94:                                               ; preds = %90
  %95 = getelementptr inbounds i8, i8* %91, i64 %80
  %96 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 1
  store i64 %70, i64* %97, align 8
  %98 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 1
  store %"struct.absl::cord_internal::CordRep"* %79, %"struct.absl::cord_internal::CordRep"** %98, align 8
  br label %99

99:                                               ; preds = %1, %94
  ret %"class.absl::Cord::ChunkIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord13ChunkIterator19AdvanceAndReadBytesEm(%"class.absl::Cord"* noalias sret, %"class.absl::Cord::ChunkIterator"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::Cord", align 8
  %5 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %2
  br i1 %7, label %8, label %9, !prof !3

8:                                                ; preds = %3
  tail call void @llvm.trap() #18
  unreachable

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.absl::Cord"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #18
  %13 = icmp ult i64 %2, 16
  br i1 %13, label %14, label %237

14:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #18
  %15 = trunc i64 %2 to i8
  %16 = shl i8 %15, 1
  %17 = getelementptr inbounds i8, i8* %12, i64 15
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, %2
  %21 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br i1 %20, label %23, label %130

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 3, i32 0
  %25 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 3, i32 1
  %26 = bitcast %"class.absl::Cord::ChunkIterator"* %1 to i8*
  br label %27

27:                                               ; preds = %23, %126
  %28 = phi i8* [ %22, %23 ], [ %127, %126 ]
  %29 = phi i64 [ %19, %23 ], [ %128, %126 ]
  %30 = phi i64 [ %2, %23 ], [ %34, %126 ]
  %31 = phi i8* [ %12, %23 ], [ %33, %126 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %28, i64 %29, i1 false)
  %32 = load i64, i64* %18, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = sub i64 %30, %32
  %35 = load i64, i64* %5, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

38:                                               ; preds = %27
  %39 = sub i64 %35, %32
  store i64 %39, i64* %5, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %125, label %41

41:                                               ; preds = %38
  %42 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %24, align 8
  %43 = icmp eq %"class.absl::cord_internal::CordRepRing"* %42, null
  br i1 %43, label %121, label %44

44:                                               ; preds = %41
  %45 = load i32, i32* %25, align 8
  %46 = add i32 %45, 1
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  %50 = select i1 %49, i32 0, i32 %46
  store i32 %50, i32* %25, align 8
  %51 = load i32, i32* %47, align 8
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 4
  %54 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 5, i64 %53
  %55 = bitcast i8* %54 to i32*
  %56 = zext i32 %50 to i64
  %57 = getelementptr inbounds i32, i32* %55, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = shl nuw nsw i64 %52, 3
  %61 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 5, i64 %60
  %62 = bitcast i8* %61 to %"struct.absl::cord_internal::CordRep"**
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %62, i64 %56
  %64 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %63, align 8
  %65 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %64, i64 0, i32 2
  %66 = load i8, i8* %65, align 4
  %67 = icmp ugt i8 %66, 3
  br i1 %67, label %68, label %70

68:                                               ; preds = %44
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %64, i64 0, i32 3, i64 0
  br label %94

70:                                               ; preds = %44
  %71 = icmp eq i8 %66, 1
  br i1 %71, label %72, label %76

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %64, i64 1
  %74 = bitcast %"struct.absl::cord_internal::CordRep"* %73 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %94

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %64, i64 1, i32 1
  %78 = bitcast %"class.absl::cord_internal::Refcount"* %77 to %"struct.absl::cord_internal::CordRep"**
  %79 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %78, align 8
  %80 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 4
  %82 = icmp eq i8 %81, 1
  br i1 %82, label %85, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 0, i32 3, i64 0
  br label %89

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 1
  %87 = bitcast %"struct.absl::cord_internal::CordRep"* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %85, %83
  %90 = phi i8* [ %84, %83 ], [ %88, %85 ]
  %91 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %64, i64 1, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  br label %94

94:                                               ; preds = %89, %72, %68
  %95 = phi i8* [ %69, %68 ], [ %75, %72 ], [ %93, %89 ]
  %96 = getelementptr inbounds i8, i8* %95, i64 %59
  %97 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, %50
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 4
  br label %110

102:                                              ; preds = %94
  %103 = icmp eq i32 %50, 0
  %104 = select i1 %103, i32 %51, i32 %50
  %105 = add i32 %104, -1
  %106 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 5, i64 0
  %107 = bitcast i8* %106 to i64*
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds i64, i64* %107, i64 %108
  br label %110

110:                                              ; preds = %102, %100
  %111 = phi i64* [ %101, %100 ], [ %109, %102 ]
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %42, i64 0, i32 5, i64 0
  %114 = bitcast i8* %113 to i64*
  %115 = getelementptr inbounds i64, i64* %114, i64 %56
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %112
  %118 = icmp sgt i64 %117, -1
  br i1 %118, label %120, label %119, !prof !2

119:                                              ; preds = %110
  tail call void @llvm.trap() #18
  unreachable

120:                                              ; preds = %110
  store i8* %96, i8** %21, align 8
  store i64 %117, i64* %18, align 8
  br label %126

121:                                              ; preds = %41
  %122 = tail call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* %1) #18
  %123 = load i64, i64* %18, align 8
  %124 = load i8*, i8** %21, align 8
  br label %126

125:                                              ; preds = %38
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #18
  br label %126

126:                                              ; preds = %120, %121, %125
  %127 = phi i8* [ %96, %120 ], [ %124, %121 ], [ null, %125 ]
  %128 = phi i64 [ %117, %120 ], [ %123, %121 ], [ 0, %125 ]
  %129 = icmp ugt i64 %34, %128
  br i1 %129, label %27, label %130

130:                                              ; preds = %126, %14
  %131 = phi i8* [ %12, %14 ], [ %33, %126 ]
  %132 = phi i64 [ %2, %14 ], [ %34, %126 ]
  %133 = phi i8* [ %22, %14 ], [ %127, %126 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %131, i8* align 1 %133, i64 %132, i1 false)
  %134 = load i64, i64* %18, align 8
  %135 = icmp ugt i64 %134, %132
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = load i8*, i8** %21, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 %132
  store i8* %138, i8** %21, align 8
  %139 = sub i64 %134, %132
  store i64 %139, i64* %18, align 8
  %140 = load i64, i64* %5, align 8
  %141 = sub i64 %140, %132
  store i64 %141, i64* %5, align 8
  br label %704

142:                                              ; preds = %130
  %143 = icmp eq i64 %132, 0
  br i1 %143, label %704, label %144

144:                                              ; preds = %142
  %145 = load i64, i64* %5, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %148, !prof !3

147:                                              ; preds = %144
  tail call void @llvm.trap() #18
  unreachable

148:                                              ; preds = %144
  %149 = sub i64 %145, %134
  store i64 %149, i64* %5, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %235, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 3, i32 0
  %153 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %152, align 8
  %154 = icmp eq %"class.absl::cord_internal::CordRepRing"* %153, null
  br i1 %154, label %233, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 3, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = add i32 %157, 1
  %159 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %158, %160
  %162 = select i1 %161, i32 0, i32 %158
  store i32 %162, i32* %156, align 8
  %163 = load i32, i32* %159, align 8
  %164 = zext i32 %163 to i64
  %165 = shl nuw nsw i64 %164, 4
  %166 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 5, i64 %165
  %167 = bitcast i8* %166 to i32*
  %168 = zext i32 %162 to i64
  %169 = getelementptr inbounds i32, i32* %167, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  %172 = shl nuw nsw i64 %164, 3
  %173 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 5, i64 %172
  %174 = bitcast i8* %173 to %"struct.absl::cord_internal::CordRep"**
  %175 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %174, i64 %168
  %176 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %175, align 8
  %177 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %176, i64 0, i32 2
  %178 = load i8, i8* %177, align 4
  %179 = icmp ugt i8 %178, 3
  br i1 %179, label %180, label %182

180:                                              ; preds = %155
  %181 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %176, i64 0, i32 3, i64 0
  br label %206

182:                                              ; preds = %155
  %183 = icmp eq i8 %178, 1
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %176, i64 1
  %186 = bitcast %"struct.absl::cord_internal::CordRep"* %185 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %206

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %176, i64 1, i32 1
  %190 = bitcast %"class.absl::cord_internal::Refcount"* %189 to %"struct.absl::cord_internal::CordRep"**
  %191 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %190, align 8
  %192 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %191, i64 0, i32 2
  %193 = load i8, i8* %192, align 4
  %194 = icmp eq i8 %193, 1
  br i1 %194, label %197, label %195

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %191, i64 0, i32 3, i64 0
  br label %201

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %191, i64 1
  %199 = bitcast %"struct.absl::cord_internal::CordRep"* %198 to i8**
  %200 = load i8*, i8** %199, align 8
  br label %201

201:                                              ; preds = %197, %195
  %202 = phi i8* [ %196, %195 ], [ %200, %197 ]
  %203 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %176, i64 1, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds i8, i8* %202, i64 %204
  br label %206

206:                                              ; preds = %201, %184, %180
  %207 = phi i8* [ %181, %180 ], [ %187, %184 ], [ %205, %201 ]
  %208 = getelementptr inbounds i8, i8* %207, i64 %171
  %209 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, %162
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 4
  br label %222

214:                                              ; preds = %206
  %215 = icmp eq i32 %162, 0
  %216 = select i1 %215, i32 %163, i32 %162
  %217 = add i32 %216, -1
  %218 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 5, i64 0
  %219 = bitcast i8* %218 to i64*
  %220 = zext i32 %217 to i64
  %221 = getelementptr inbounds i64, i64* %219, i64 %220
  br label %222

222:                                              ; preds = %214, %212
  %223 = phi i64* [ %213, %212 ], [ %221, %214 ]
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %153, i64 0, i32 5, i64 0
  %226 = bitcast i8* %225 to i64*
  %227 = getelementptr inbounds i64, i64* %226, i64 %168
  %228 = load i64, i64* %227, align 8
  %229 = sub i64 %228, %224
  %230 = icmp sgt i64 %229, -1
  br i1 %230, label %232, label %231, !prof !2

231:                                              ; preds = %222
  tail call void @llvm.trap() #18
  unreachable

232:                                              ; preds = %222
  store i8* %208, i8** %21, align 8
  store i64 %229, i64* %18, align 8
  br label %704

233:                                              ; preds = %151
  %234 = tail call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* %1) #18
  br label %704

235:                                              ; preds = %148
  %236 = bitcast %"class.absl::Cord::ChunkIterator"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %236, i8 0, i64 16, i1 false) #18
  br label %704

237:                                              ; preds = %9
  %238 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 3
  %239 = getelementptr inbounds %"class.absl::cord_internal::CordRepRingReader", %"class.absl::cord_internal::CordRepRingReader"* %238, i64 0, i32 0
  %240 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %239, align 8
  %241 = icmp eq %"class.absl::cord_internal::CordRepRing"* %240, null
  br i1 %241, label %415, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = icmp uge i64 %244, %2
  %246 = icmp ult i64 %2, 512
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %280

248:                                              ; preds = %242
  %249 = bitcast %"class.absl::Cord"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #18
  %250 = icmp ugt i64 %244, %2
  %251 = select i1 %250, i64 %2, i64 %244
  %252 = icmp sgt i64 %251, -1
  br i1 %252, label %254, label %253, !prof !2

253:                                              ; preds = %248
  tail call void @llvm.trap() #18
  unreachable

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  call void @_ZN4absl4CordC2ENS_11string_viewENS_13cord_internal18CordzUpdateTracker16MethodIdentifierE(%"class.absl::Cord"* nonnull %4, i8* %256, i64 %251, i32 9)
  %257 = getelementptr inbounds i8, i8* %12, i64 15
  %258 = load i8, i8* %257, align 1
  %259 = and i8 %258, 1
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %279, label %261

261:                                              ; preds = %254
  %262 = load i64, i64* %11, align 8
  %263 = call i64 @llvm.bswap.i64(i64 %262) #18
  %264 = add nsw i64 %263, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %271, label %266, !prof !2

266:                                              ; preds = %261
  %267 = inttoptr i64 %264 to %"class.absl::cord_internal::CordzInfo"*
  call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %267) #18
  %268 = load i8, i8* %257, align 1
  %269 = and i8 %268, 1
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %273, label %271

271:                                              ; preds = %266, %261
  %272 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %10, align 8
  br label %273

273:                                              ; preds = %271, %266
  %274 = phi %"struct.absl::cord_internal::CordRep"* [ %272, %271 ], [ null, %266 ]
  %275 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %274, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = atomicrmw sub i32* %275, i32 2 acq_rel
  %277 = icmp eq i32 %276, 2
  br i1 %277, label %278, label %279, !prof !3

278:                                              ; preds = %273
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %274) #18
  br label %279

279:                                              ; preds = %278, %273, %254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %249, i64 16, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #18
  br label %305

280:                                              ; preds = %242
  %281 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %240, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw add i32* %281, i32 2 monotonic
  %283 = bitcast %"class.absl::cord_internal::CordRepRingReader"* %238 to %"struct.absl::cord_internal::CordRep"**
  %284 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %283, align 8
  %285 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %284, i64 0, i32 0
  %286 = load i64, i64* %285, align 8
  %287 = load i64, i64* %5, align 8
  %288 = sub i64 %286, %287
  %289 = tail call %"class.absl::cord_internal::CordRepRing"* @_ZN4absl13cord_internal11CordRepRing7SubRingEPS1_mmm(%"class.absl::cord_internal::CordRepRing"* nonnull %240, i64 %288, i64 %2, i64 0) #18
  %290 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %291 = bitcast %"class.absl::Cord"* %0 to %"class.absl::cord_internal::CordRepRing"**
  store %"class.absl::cord_internal::CordRepRing"* %289, %"class.absl::cord_internal::CordRepRing"** %291, align 8
  store i64 72057594037927936, i64* %11, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %292, label %293

292:                                              ; preds = %280
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %293

293:                                              ; preds = %292, %280
  %294 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %295 = icmp sgt i64 %294, 1
  br i1 %295, label %296, label %302, !prof !2

296:                                              ; preds = %293
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %297, label %299

297:                                              ; preds = %296
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %298 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %299

299:                                              ; preds = %297, %296
  %300 = phi i64 [ %294, %296 ], [ %298, %297 ]
  %301 = add nsw i64 %300, -1
  store i64 %301, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %305

302:                                              ; preds = %293
  %303 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %303, label %304, label %305, !prof !3

304:                                              ; preds = %302
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %290, i32 9) #18
  br label %305

305:                                              ; preds = %304, %302, %299, %279
  %306 = icmp ugt i64 %244, %2
  %307 = load i64, i64* %5, align 8
  %308 = sub i64 %307, %2
  store i64 %308, i64* %5, align 8
  br i1 %306, label %309, label %318

309:                                              ; preds = %305
  %310 = load i64, i64* %243, align 8
  %311 = icmp ult i64 %310, %2
  br i1 %311, label %312, label %313, !prof !3

312:                                              ; preds = %309
  call void @llvm.trap() #18
  unreachable

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 %2
  store i8* %316, i8** %314, align 8
  %317 = sub i64 %310, %2
  store i64 %317, i64* %243, align 8
  br label %704

318:                                              ; preds = %305
  %319 = icmp eq i64 %308, 0
  br i1 %319, label %413, label %320

320:                                              ; preds = %318
  %321 = load i64, i64* %243, align 8
  %322 = icmp eq i64 %321, %2
  br i1 %322, label %323, label %403

323:                                              ; preds = %320
  %324 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %239, align 8
  %325 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 3, i32 1
  %326 = load i32, i32* %325, align 8
  %327 = add i32 %326, 1
  %328 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 3
  %329 = load i32, i32* %328, align 8
  %330 = icmp eq i32 %327, %329
  %331 = select i1 %330, i32 0, i32 %327
  store i32 %331, i32* %325, align 8
  %332 = load i32, i32* %328, align 8
  %333 = zext i32 %332 to i64
  %334 = shl nuw nsw i64 %333, 4
  %335 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 5, i64 %334
  %336 = bitcast i8* %335 to i32*
  %337 = zext i32 %331 to i64
  %338 = getelementptr inbounds i32, i32* %336, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = zext i32 %339 to i64
  %341 = shl nuw nsw i64 %333, 3
  %342 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 5, i64 %341
  %343 = bitcast i8* %342 to %"struct.absl::cord_internal::CordRep"**
  %344 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %343, i64 %337
  %345 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %344, align 8
  %346 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %345, i64 0, i32 2
  %347 = load i8, i8* %346, align 4
  %348 = icmp ugt i8 %347, 3
  br i1 %348, label %349, label %351

349:                                              ; preds = %323
  %350 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %345, i64 0, i32 3, i64 0
  br label %375

351:                                              ; preds = %323
  %352 = icmp eq i8 %347, 1
  br i1 %352, label %353, label %357

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %345, i64 1
  %355 = bitcast %"struct.absl::cord_internal::CordRep"* %354 to i8**
  %356 = load i8*, i8** %355, align 8
  br label %375

357:                                              ; preds = %351
  %358 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %345, i64 1, i32 1
  %359 = bitcast %"class.absl::cord_internal::Refcount"* %358 to %"struct.absl::cord_internal::CordRep"**
  %360 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %359, align 8
  %361 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %360, i64 0, i32 2
  %362 = load i8, i8* %361, align 4
  %363 = icmp eq i8 %362, 1
  br i1 %363, label %366, label %364

364:                                              ; preds = %357
  %365 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %360, i64 0, i32 3, i64 0
  br label %370

366:                                              ; preds = %357
  %367 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %360, i64 1
  %368 = bitcast %"struct.absl::cord_internal::CordRep"* %367 to i8**
  %369 = load i8*, i8** %368, align 8
  br label %370

370:                                              ; preds = %366, %364
  %371 = phi i8* [ %365, %364 ], [ %369, %366 ]
  %372 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %345, i64 1, i32 0
  %373 = load i64, i64* %372, align 8
  %374 = getelementptr inbounds i8, i8* %371, i64 %373
  br label %375

375:                                              ; preds = %370, %353, %349
  %376 = phi i8* [ %350, %349 ], [ %356, %353 ], [ %374, %370 ]
  %377 = getelementptr inbounds i8, i8* %376, i64 %340
  %378 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 1
  %379 = load i32, i32* %378, align 8
  %380 = icmp eq i32 %379, %331
  br i1 %380, label %381, label %383

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 4
  br label %391

383:                                              ; preds = %375
  %384 = icmp eq i32 %331, 0
  %385 = select i1 %384, i32 %332, i32 %331
  %386 = add i32 %385, -1
  %387 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 5, i64 0
  %388 = bitcast i8* %387 to i64*
  %389 = zext i32 %386 to i64
  %390 = getelementptr inbounds i64, i64* %388, i64 %389
  br label %391

391:                                              ; preds = %383, %381
  %392 = phi i64* [ %382, %381 ], [ %390, %383 ]
  %393 = load i64, i64* %392, align 8
  %394 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %324, i64 0, i32 5, i64 0
  %395 = bitcast i8* %394 to i64*
  %396 = getelementptr inbounds i64, i64* %395, i64 %337
  %397 = load i64, i64* %396, align 8
  %398 = sub i64 %397, %393
  %399 = icmp sgt i64 %398, -1
  br i1 %399, label %401, label %400, !prof !2

400:                                              ; preds = %391
  call void @llvm.trap() #18
  unreachable

401:                                              ; preds = %391
  %402 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  store i8* %377, i8** %402, align 8
  store i64 %398, i64* %243, align 8
  br label %704

403:                                              ; preds = %320
  %404 = bitcast %"class.absl::cord_internal::CordRepRingReader"* %238 to %"struct.absl::cord_internal::CordRep"**
  %405 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %404, align 8
  %406 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %405, i64 0, i32 0
  %407 = load i64, i64* %406, align 8
  %408 = sub i64 %407, %308
  %409 = call { i8*, i64 } @_ZN4absl13cord_internal17CordRepRingReader4SeekEm(%"class.absl::cord_internal::CordRepRingReader"* %238, i64 %408) #18
  %410 = extractvalue { i8*, i64 } %409, 0
  %411 = extractvalue { i8*, i64 } %409, 1
  %412 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  store i8* %410, i8** %412, align 8
  store i64 %411, i64* %243, align 8
  br label %704

413:                                              ; preds = %318
  %414 = bitcast %"class.absl::Cord::ChunkIterator"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %414, i8 0, i64 16, i1 false) #18
  br label %704

415:                                              ; preds = %237
  %416 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 4
  %417 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 1
  %418 = load i64, i64* %417, align 8
  %419 = icmp ugt i64 %418, %2
  %420 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 1
  %421 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %420, align 8
  %422 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = atomicrmw add i32* %422, i32 2 monotonic
  br i1 %419, label %424, label %475

424:                                              ; preds = %415
  %425 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 0, i32 2
  %426 = load i8, i8* %425, align 4
  %427 = icmp eq i8 %426, 1
  br i1 %427, label %428, label %432

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 1
  %430 = bitcast %"struct.absl::cord_internal::CordRep"* %429 to i8**
  %431 = load i8*, i8** %430, align 8
  br label %434

432:                                              ; preds = %424
  %433 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 0, i32 3, i64 0
  br label %434

434:                                              ; preds = %432, %428
  %435 = phi i8* [ %431, %428 ], [ %433, %432 ]
  %436 = bitcast %"class.absl::Cord::ChunkIterator"* %1 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = ptrtoint i8* %435 to i64
  %439 = sub i64 %437, %438
  %440 = tail call i8* @_Znwm(i64 32) #19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %440, i8 0, i64 16, i1 false) #18
  %441 = getelementptr inbounds i8, i8* %440, i64 8
  %442 = bitcast i8* %441 to i32*
  store i32 2, i32* %442, align 4
  %443 = bitcast i8* %440 to i64*
  store i64 %2, i64* %443, align 8
  %444 = getelementptr inbounds i8, i8* %440, i64 12
  store i8 2, i8* %444, align 4
  %445 = getelementptr inbounds i8, i8* %440, i64 16
  %446 = bitcast i8* %445 to i64*
  store i64 %439, i64* %446, align 8
  %447 = getelementptr inbounds i8, i8* %440, i64 24
  %448 = bitcast i8* %447 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %421, %"struct.absl::cord_internal::CordRep"** %448, align 8
  %449 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  %450 = bitcast %"class.absl::Cord"* %0 to i8**
  store i8* %440, i8** %450, align 8
  store i64 72057594037927936, i64* %11, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %451, label %452

451:                                              ; preds = %434
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %452

452:                                              ; preds = %451, %434
  %453 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %454 = icmp sgt i64 %453, 1
  br i1 %454, label %455, label %461, !prof !2

455:                                              ; preds = %452
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %456, label %458

456:                                              ; preds = %455
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %457 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %458

458:                                              ; preds = %456, %455
  %459 = phi i64 [ %453, %455 ], [ %457, %456 ]
  %460 = add nsw i64 %459, -1
  store i64 %460, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %464

461:                                              ; preds = %452
  %462 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %462, label %463, label %464, !prof !3

463:                                              ; preds = %461
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %449, i32 9) #18
  br label %464

464:                                              ; preds = %458, %461, %463
  %465 = load i64, i64* %417, align 8
  %466 = icmp ult i64 %465, %2
  br i1 %466, label %467, label %468, !prof !3

467:                                              ; preds = %464
  tail call void @llvm.trap() #18
  unreachable

468:                                              ; preds = %464
  %469 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  %470 = load i8*, i8** %469, align 8
  %471 = getelementptr inbounds i8, i8* %470, i64 %2
  store i8* %471, i8** %469, align 8
  %472 = sub i64 %465, %2
  store i64 %472, i64* %417, align 8
  %473 = load i64, i64* %5, align 8
  %474 = sub i64 %473, %2
  store i64 %474, i64* %5, align 8
  br label %704

475:                                              ; preds = %415
  %476 = load i64, i64* %417, align 8
  %477 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 0, i32 0
  %478 = load i64, i64* %477, align 8
  %479 = icmp ult i64 %476, %478
  br i1 %479, label %480, label %512

480:                                              ; preds = %475
  %481 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 0, i32 2
  %482 = load i8, i8* %481, align 4
  %483 = icmp eq i8 %482, 1
  br i1 %483, label %484, label %488

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 1
  %486 = bitcast %"struct.absl::cord_internal::CordRep"* %485 to i8**
  %487 = load i8*, i8** %486, align 8
  br label %490

488:                                              ; preds = %480
  %489 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %421, i64 0, i32 3, i64 0
  br label %490

490:                                              ; preds = %488, %484
  %491 = phi i8* [ %487, %484 ], [ %489, %488 ]
  %492 = icmp eq i64 %476, 0
  br i1 %492, label %493, label %497

493:                                              ; preds = %490
  %494 = atomicrmw sub i32* %422, i32 2 acq_rel
  %495 = icmp eq i32 %494, 2
  br i1 %495, label %496, label %512, !prof !3

496:                                              ; preds = %493
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %421) #18
  br label %512

497:                                              ; preds = %490
  %498 = bitcast %"class.absl::Cord::ChunkIterator"* %1 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = ptrtoint i8* %491 to i64
  %501 = sub i64 %499, %500
  %502 = tail call i8* @_Znwm(i64 32) #19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %502, i8 0, i64 16, i1 false) #18
  %503 = getelementptr inbounds i8, i8* %502, i64 8
  %504 = bitcast i8* %503 to i32*
  store i32 2, i32* %504, align 4
  %505 = bitcast i8* %502 to %"struct.absl::cord_internal::CordRep"*
  %506 = bitcast i8* %502 to i64*
  store i64 %476, i64* %506, align 8
  %507 = getelementptr inbounds i8, i8* %502, i64 12
  store i8 2, i8* %507, align 4
  %508 = getelementptr inbounds i8, i8* %502, i64 16
  %509 = bitcast i8* %508 to i64*
  store i64 %501, i64* %509, align 8
  %510 = getelementptr inbounds i8, i8* %502, i64 24
  %511 = bitcast i8* %510 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %421, %"struct.absl::cord_internal::CordRep"** %511, align 8
  br label %512

512:                                              ; preds = %497, %496, %493, %475
  %513 = phi %"struct.absl::cord_internal::CordRep"* [ %421, %475 ], [ %505, %497 ], [ null, %493 ], [ null, %496 ]
  %514 = load i64, i64* %417, align 8
  %515 = load i64, i64* %5, align 8
  %516 = sub i64 %515, %514
  store i64 %516, i64* %5, align 8
  %517 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %416, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load i64, i64* %517, align 8
  %519 = icmp ult i64 %518, 2
  br i1 %519, label %564, label %520

520:                                              ; preds = %512
  %521 = sub i64 %2, %514
  %522 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %523 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 4, i32 0, i32 1
  %524 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %523 to %"struct.absl::cord_internal::CordRep"**
  br label %525

525:                                              ; preds = %520, %543
  %526 = phi i64 [ %518, %520 ], [ %551, %543 ]
  %527 = phi %"struct.absl::cord_internal::CordRep"* [ %513, %520 ], [ %546, %543 ]
  %528 = phi i64 [ %521, %520 ], [ %548, %543 ]
  %529 = and i64 %526, 1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %533, label %531

531:                                              ; preds = %525
  %532 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %522, align 8
  br label %533

533:                                              ; preds = %525, %531
  %534 = phi %"struct.absl::cord_internal::CordRep"** [ %532, %531 ], [ %524, %525 ]
  %535 = lshr i64 %526, 1
  %536 = add nsw i64 %535, -1
  %537 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %534, i64 %536
  %538 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %537, align 8
  %539 = add i64 %526, -2
  store i64 %539, i64* %517, align 8
  %540 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %538, i64 0, i32 0
  %541 = load i64, i64* %540, align 8
  %542 = icmp ugt i64 %541, %528
  br i1 %542, label %553, label %543

543:                                              ; preds = %533
  %544 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %538, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %545 = atomicrmw add i32* %544, i32 2 monotonic
  %546 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %527, %"struct.absl::cord_internal::CordRep"* %538)
  %547 = load i64, i64* %540, align 8
  %548 = sub i64 %528, %547
  %549 = load i64, i64* %5, align 8
  %550 = sub i64 %549, %547
  store i64 %550, i64* %5, align 8
  %551 = load i64, i64* %517, align 8
  %552 = icmp ult i64 %551, 2
  br i1 %552, label %564, label %525

553:                                              ; preds = %533
  %554 = icmp eq %"struct.absl::cord_internal::CordRep"* %538, null
  br i1 %554, label %564, label %555

555:                                              ; preds = %553
  %556 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %538, i64 0, i32 2
  %557 = load i8, i8* %556, align 4
  %558 = icmp eq i8 %557, 0
  br i1 %558, label %559, label %637

559:                                              ; preds = %555
  %560 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %416, i64 0, i32 0
  %561 = bitcast %"struct.absl::cord_internal::CordRep"*** %522 to i64*
  %562 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %563 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %523 to i64
  br label %580

564:                                              ; preds = %543, %512, %553
  %565 = phi %"struct.absl::cord_internal::CordRep"* [ %527, %553 ], [ %513, %512 ], [ %546, %543 ]
  %566 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %565, %"struct.absl::cord_internal::CordRep"** %10, align 8
  store i64 72057594037927936, i64* %11, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %567, label %568

567:                                              ; preds = %564
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %568

568:                                              ; preds = %567, %564
  %569 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %570 = icmp sgt i64 %569, 1
  br i1 %570, label %571, label %577, !prof !2

571:                                              ; preds = %568
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %572, label %574

572:                                              ; preds = %571
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %573 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %574

574:                                              ; preds = %572, %571
  %575 = phi i64 [ %569, %571 ], [ %573, %572 ]
  %576 = add nsw i64 %575, -1
  store i64 %576, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %704

577:                                              ; preds = %568
  %578 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %578, label %579, label %704, !prof !3

579:                                              ; preds = %577
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %566, i32 9) #18
  br label %704

580:                                              ; preds = %559, %626
  %581 = phi %"struct.absl::cord_internal::CordRep"* [ %538, %559 ], [ %630, %626 ]
  %582 = phi %"struct.absl::cord_internal::CordRep"* [ %527, %559 ], [ %628, %626 ]
  %583 = phi i64 [ %528, %559 ], [ %627, %626 ]
  %584 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %581, i64 1
  %585 = bitcast %"struct.absl::cord_internal::CordRep"* %584 to %"struct.absl::cord_internal::CordRep"**
  %586 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %585, align 8
  %587 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %586, i64 0, i32 0
  %588 = load i64, i64* %587, align 8
  %589 = icmp ugt i64 %588, %583
  br i1 %589, label %590, label %614

590:                                              ; preds = %580
  %591 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %581, i64 1, i32 1
  %592 = bitcast %"class.absl::cord_internal::Refcount"* %591 to %"struct.absl::cord_internal::CordRep"**
  %593 = load i64, i64* %517, align 8, !noalias !46
  %594 = and i64 %593, 1
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %599, label %596

596:                                              ; preds = %590
  %597 = load i64, i64* %561, align 8, !noalias !46
  %598 = load i64, i64* %562, align 8, !noalias !46
  br label %599

599:                                              ; preds = %590, %596
  %600 = phi i64 [ %597, %596 ], [ %563, %590 ]
  %601 = phi i64 [ %598, %596 ], [ 47, %590 ]
  %602 = lshr i64 %593, 1
  %603 = icmp eq i64 %602, %601
  br i1 %603, label %612, label %604, !prof !3

604:                                              ; preds = %599
  %605 = inttoptr i64 %600 to %"struct.absl::cord_internal::CordRep"**
  %606 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %605, i64 %602
  %607 = bitcast %"struct.absl::cord_internal::CordRep"** %606 to i64*
  %608 = bitcast %"class.absl::cord_internal::Refcount"* %591 to i64*
  %609 = load i64, i64* %608, align 8
  store i64 %609, i64* %607, align 8
  %610 = load i64, i64* %517, align 8
  %611 = add i64 %610, 2
  store i64 %611, i64* %517, align 8
  br label %626

612:                                              ; preds = %599
  %613 = tail call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* %560, %"struct.absl::cord_internal::CordRep"** dereferenceable(8) %592) #18
  br label %626

614:                                              ; preds = %580
  %615 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %586, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %616 = atomicrmw add i32* %615, i32 2 monotonic
  %617 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %582, %"struct.absl::cord_internal::CordRep"* %586)
  %618 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %585, align 8
  %619 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %618, i64 0, i32 0
  %620 = load i64, i64* %619, align 8
  %621 = sub i64 %583, %620
  %622 = load i64, i64* %5, align 8
  %623 = sub i64 %622, %620
  store i64 %623, i64* %5, align 8
  %624 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %581, i64 1, i32 1
  %625 = bitcast %"class.absl::cord_internal::Refcount"* %624 to %"struct.absl::cord_internal::CordRep"**
  br label %626

626:                                              ; preds = %612, %604, %614
  %627 = phi i64 [ %621, %614 ], [ %583, %604 ], [ %583, %612 ]
  %628 = phi %"struct.absl::cord_internal::CordRep"* [ %617, %614 ], [ %582, %604 ], [ %582, %612 ]
  %629 = phi %"struct.absl::cord_internal::CordRep"** [ %625, %614 ], [ %585, %604 ], [ %585, %612 ]
  %630 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %629, align 8
  %631 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %630, i64 0, i32 2
  %632 = load i8, i8* %631, align 4
  %633 = icmp eq i8 %632, 0
  br i1 %633, label %580, label %634

634:                                              ; preds = %626
  %635 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %630, i64 0, i32 0
  %636 = load i64, i64* %635, align 8
  br label %637

637:                                              ; preds = %634, %555
  %638 = phi i64 [ %541, %555 ], [ %636, %634 ]
  %639 = phi i64 [ %528, %555 ], [ %627, %634 ]
  %640 = phi %"struct.absl::cord_internal::CordRep"* [ %527, %555 ], [ %628, %634 ]
  %641 = phi %"struct.absl::cord_internal::CordRep"* [ %538, %555 ], [ %630, %634 ]
  %642 = phi i8 [ %557, %555 ], [ %632, %634 ]
  %643 = icmp eq i8 %642, 2
  br i1 %643, label %644, label %650

644:                                              ; preds = %637
  %645 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %641, i64 1, i32 0
  %646 = load i64, i64* %645, align 8
  %647 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %641, i64 1, i32 1
  %648 = bitcast %"class.absl::cord_internal::Refcount"* %647 to %"struct.absl::cord_internal::CordRep"**
  %649 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %648, align 8
  br label %650

650:                                              ; preds = %644, %637
  %651 = phi %"struct.absl::cord_internal::CordRep"* [ %649, %644 ], [ %641, %637 ]
  %652 = phi i64 [ %646, %644 ], [ 0, %637 ]
  %653 = icmp eq i64 %639, 0
  br i1 %653, label %668, label %654

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %651, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = atomicrmw add i32* %655, i32 2 monotonic
  %657 = tail call i8* @_Znwm(i64 32) #19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %657, i8 0, i64 16, i1 false) #18
  %658 = getelementptr inbounds i8, i8* %657, i64 8
  %659 = bitcast i8* %658 to i32*
  store i32 2, i32* %659, align 4
  %660 = bitcast i8* %657 to %"struct.absl::cord_internal::CordRep"*
  %661 = bitcast i8* %657 to i64*
  store i64 %639, i64* %661, align 8
  %662 = getelementptr inbounds i8, i8* %657, i64 12
  store i8 2, i8* %662, align 4
  %663 = getelementptr inbounds i8, i8* %657, i64 16
  %664 = bitcast i8* %663 to i64*
  store i64 %652, i64* %664, align 8
  %665 = getelementptr inbounds i8, i8* %657, i64 24
  %666 = bitcast i8* %665 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %651, %"struct.absl::cord_internal::CordRep"** %666, align 8
  %667 = tail call fastcc %"struct.absl::cord_internal::CordRep"* @_ZN4abslL6ConcatEPNS_13cord_internal7CordRepES2_(%"struct.absl::cord_internal::CordRep"* %640, %"struct.absl::cord_internal::CordRep"* nonnull %660)
  br label %668

668:                                              ; preds = %650, %654
  %669 = phi %"struct.absl::cord_internal::CordRep"* [ %667, %654 ], [ %640, %650 ]
  %670 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %651, i64 0, i32 2
  %671 = load i8, i8* %670, align 4
  %672 = icmp eq i8 %671, 1
  br i1 %672, label %673, label %677

673:                                              ; preds = %668
  %674 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %651, i64 1
  %675 = bitcast %"struct.absl::cord_internal::CordRep"* %674 to i8**
  %676 = load i8*, i8** %675, align 8
  br label %679

677:                                              ; preds = %668
  %678 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %651, i64 0, i32 3, i64 0
  br label %679

679:                                              ; preds = %677, %673
  %680 = phi i8* [ %676, %673 ], [ %678, %677 ]
  %681 = sub i64 %638, %639
  %682 = icmp sgt i64 %681, -1
  br i1 %682, label %684, label %683, !prof !2

683:                                              ; preds = %679
  tail call void @llvm.trap() #18
  unreachable

684:                                              ; preds = %679
  %685 = getelementptr inbounds i8, i8* %680, i64 %652
  %686 = getelementptr inbounds i8, i8* %685, i64 %639
  %687 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %1, i64 0, i32 0, i32 0
  store i8* %686, i8** %687, align 8
  store i64 %681, i64* %417, align 8
  store %"struct.absl::cord_internal::CordRep"* %651, %"struct.absl::cord_internal::CordRep"** %420, align 8
  %688 = load i64, i64* %5, align 8
  %689 = sub i64 %688, %639
  store i64 %689, i64* %5, align 8
  %690 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0
  store %"struct.absl::cord_internal::CordRep"* %669, %"struct.absl::cord_internal::CordRep"** %10, align 8
  store i64 72057594037927936, i64* %11, align 8
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %691, label %692

691:                                              ; preds = %684
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  br label %692

692:                                              ; preds = %691, %684
  %693 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  %694 = icmp sgt i64 %693, 1
  br i1 %694, label %695, label %701, !prof !2

695:                                              ; preds = %692
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %696, label %698

696:                                              ; preds = %695
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #18
  %697 = load i64, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %698

698:                                              ; preds = %696, %695
  %699 = phi i64 [ %693, %695 ], [ %697, %696 ]
  %700 = add nsw i64 %699, -1
  store i64 %700, i64* @_ZN4absl13cord_internal17cordz_next_sampleE, align 8
  br label %704

701:                                              ; preds = %692
  %702 = tail call zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() #18
  br i1 %702, label %703, label %704, !prof !3

703:                                              ; preds = %701
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %690, i32 9) #18
  br label %704

704:                                              ; preds = %703, %701, %698, %579, %577, %574, %413, %403, %401, %235, %233, %232, %142, %136, %313, %468
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord13ChunkIterator20AdvanceBytesSlowPathEm(%"class.absl::Cord::ChunkIterator"*, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %135, label %12

12:                                               ; preds = %2
  %13 = sub i64 %1, %4
  %14 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %15 to %"struct.absl::cord_internal::CordRep"**
  br label %17

17:                                               ; preds = %12, %35
  %18 = phi i64 [ %7, %12 ], [ %37, %35 ]
  %19 = phi i64 [ %13, %12 ], [ %36, %35 ]
  %20 = phi i64 [ %10, %12 ], [ %31, %35 ]
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %14, align 8
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi %"struct.absl::cord_internal::CordRep"** [ %24, %23 ], [ %16, %17 ]
  %27 = lshr i64 %20, 1
  %28 = add nsw i64 %27, -1
  %29 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, i64 %28
  %30 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %29, align 8
  %31 = add i64 %20, -2
  store i64 %31, i64* %9, align 8
  %32 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %19, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = sub i64 %19, %33
  %37 = sub i64 %18, %33
  store i64 %37, i64* %5, align 8
  %38 = icmp ult i64 %31, 2
  br i1 %38, label %135, label %17

39:                                               ; preds = %25
  %40 = icmp eq %"struct.absl::cord_internal::CordRep"* %30, null
  br i1 %40, label %135, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 0, i32 2
  %43 = load i8, i8* %42, align 4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %99

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %8, i64 0, i32 0
  %47 = bitcast %"struct.absl::cord_internal::CordRep"*** %14 to i64*
  %48 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %49 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %15 to i64
  br label %50

50:                                               ; preds = %45, %89
  %51 = phi %"struct.absl::cord_internal::CordRep"* [ %30, %45 ], [ %92, %89 ]
  %52 = phi i64 [ %19, %45 ], [ %90, %89 ]
  %53 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %51, i64 1
  %54 = bitcast %"struct.absl::cord_internal::CordRep"* %53 to %"struct.absl::cord_internal::CordRep"**
  %55 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %54, align 8
  %56 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %59, label %83

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %51, i64 1, i32 1
  %61 = bitcast %"class.absl::cord_internal::Refcount"* %60 to %"struct.absl::cord_internal::CordRep"**
  %62 = load i64, i64* %9, align 8, !noalias !49
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %47, align 8, !noalias !49
  %67 = load i64, i64* %48, align 8, !noalias !49
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %66, %65 ], [ %49, %59 ]
  %70 = phi i64 [ %67, %65 ], [ 47, %59 ]
  %71 = lshr i64 %62, 1
  %72 = icmp eq i64 %71, %70
  br i1 %72, label %81, label %73, !prof !3

73:                                               ; preds = %68
  %74 = inttoptr i64 %69 to %"struct.absl::cord_internal::CordRep"**
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %74, i64 %71
  %76 = bitcast %"struct.absl::cord_internal::CordRep"** %75 to i64*
  %77 = bitcast %"class.absl::cord_internal::Refcount"* %60 to i64*
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %76, align 8
  %79 = load i64, i64* %9, align 8
  %80 = add i64 %79, 2
  store i64 %80, i64* %9, align 8
  br label %89

81:                                               ; preds = %68
  %82 = tail call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* %46, %"struct.absl::cord_internal::CordRep"** dereferenceable(8) %61) #18
  br label %89

83:                                               ; preds = %50
  %84 = sub i64 %52, %57
  %85 = load i64, i64* %5, align 8
  %86 = sub i64 %85, %57
  store i64 %86, i64* %5, align 8
  %87 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %51, i64 1, i32 1
  %88 = bitcast %"class.absl::cord_internal::Refcount"* %87 to %"struct.absl::cord_internal::CordRep"**
  br label %89

89:                                               ; preds = %81, %73, %83
  %90 = phi i64 [ %84, %83 ], [ %52, %73 ], [ %52, %81 ]
  %91 = phi %"struct.absl::cord_internal::CordRep"** [ %88, %83 ], [ %54, %73 ], [ %54, %81 ]
  %92 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %91, align 8
  %93 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %92, i64 0, i32 2
  %94 = load i8, i8* %93, align 4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %50, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %92, i64 0, i32 0
  %98 = load i64, i64* %97, align 8
  br label %99

99:                                               ; preds = %96, %41
  %100 = phi i64 [ %33, %41 ], [ %98, %96 ]
  %101 = phi i64 [ %19, %41 ], [ %90, %96 ]
  %102 = phi %"struct.absl::cord_internal::CordRep"* [ %30, %41 ], [ %92, %96 ]
  %103 = phi i8 [ %43, %41 ], [ %94, %96 ]
  %104 = icmp eq i8 %103, 2
  br i1 %104, label %105, label %111

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %102, i64 1, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %102, i64 1, i32 1
  %109 = bitcast %"class.absl::cord_internal::Refcount"* %108 to %"struct.absl::cord_internal::CordRep"**
  %110 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %109, align 8
  br label %111

111:                                              ; preds = %105, %99
  %112 = phi %"struct.absl::cord_internal::CordRep"* [ %110, %105 ], [ %102, %99 ]
  %113 = phi i64 [ %107, %105 ], [ 0, %99 ]
  %114 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %112, i64 0, i32 2
  %115 = load i8, i8* %114, align 4
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %121

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %112, i64 1
  %119 = bitcast %"struct.absl::cord_internal::CordRep"* %118 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %123

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %112, i64 0, i32 3, i64 0
  br label %123

123:                                              ; preds = %121, %117
  %124 = phi i8* [ %120, %117 ], [ %122, %121 ]
  %125 = sub i64 %100, %101
  %126 = icmp sgt i64 %125, -1
  br i1 %126, label %128, label %127, !prof !2

127:                                              ; preds = %123
  tail call void @llvm.trap() #18
  unreachable

128:                                              ; preds = %123
  %129 = getelementptr inbounds i8, i8* %124, i64 %113
  %130 = getelementptr inbounds i8, i8* %129, i64 %101
  %131 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 0
  store i8* %130, i8** %131, align 8
  store i64 %125, i64* %3, align 8
  %132 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 1
  store %"struct.absl::cord_internal::CordRep"* %112, %"struct.absl::cord_internal::CordRep"** %132, align 8
  %133 = load i64, i64* %5, align 8
  %134 = sub i64 %133, %101
  store i64 %134, i64* %5, align 8
  br label %135

135:                                              ; preds = %35, %128, %39, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK4absl4CordixEm(%"class.absl::Cord"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.absl::Cord"* %0 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 15
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %2
  %14 = ashr i8 %5, 1
  %15 = sext i8 %14 to i64
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %18 = icmp ugt i64 %17, %1
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

20:                                               ; preds = %16
  br i1 %7, label %29, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %22, align 8
  %24 = icmp eq %"struct.absl::cord_internal::CordRep"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %23, i64 0, i32 2
  %27 = load i8, i8* %26, align 4
  %28 = icmp ugt i8 %27, 3
  br i1 %28, label %33, label %38

29:                                               ; preds = %20, %21
  %30 = select i1 %7, i8* %3, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %1
  %32 = load i8, i8* %31, align 1
  br label %75

33:                                               ; preds = %68, %25
  %34 = phi i64 [ %1, %25 ], [ %69, %68 ]
  %35 = phi %"struct.absl::cord_internal::CordRep"* [ %23, %25 ], [ %71, %68 ]
  %36 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %35, i64 0, i32 3, i64 %34
  %37 = load i8, i8* %36, align 1
  br label %75

38:                                               ; preds = %25, %68
  %39 = phi i8 [ %73, %68 ], [ %27, %25 ]
  %40 = phi %"struct.absl::cord_internal::CordRep"* [ %71, %68 ], [ %23, %25 ]
  %41 = phi i64 [ %69, %68 ], [ %1, %25 ]
  switch i8 %39, label %62 [
    i8 3, label %42
    i8 1, label %45
    i8 0, label %51
  ]

42:                                               ; preds = %38
  %43 = bitcast %"struct.absl::cord_internal::CordRep"* %40 to %"class.absl::cord_internal::CordRepRing"*
  %44 = tail call signext i8 @_ZNK4absl13cord_internal11CordRepRing12GetCharacterEm(%"class.absl::cord_internal::CordRepRing"* %43, i64 %41) #18
  br label %75

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 1
  %47 = bitcast %"struct.absl::cord_internal::CordRep"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %41
  %50 = load i8, i8* %49, align 1
  br label %75

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 1
  %53 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to %"struct.absl::cord_internal::CordRep"**
  %54 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %53, align 8
  %55 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %54, i64 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %41, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %51
  %59 = sub i64 %41, %56
  %60 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 1, i32 1
  %61 = bitcast %"class.absl::cord_internal::Refcount"* %60 to %"struct.absl::cord_internal::CordRep"**
  br label %68

62:                                               ; preds = %38
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 1, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, %41
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 1, i32 1
  %67 = bitcast %"class.absl::cord_internal::Refcount"* %66 to %"struct.absl::cord_internal::CordRep"**
  br label %68

68:                                               ; preds = %51, %58, %62
  %69 = phi i64 [ %65, %62 ], [ %59, %58 ], [ %41, %51 ]
  %70 = phi %"struct.absl::cord_internal::CordRep"** [ %67, %62 ], [ %61, %58 ], [ %53, %51 ]
  %71 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %70, align 8
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %71, i64 0, i32 2
  %73 = load i8, i8* %72, align 4
  %74 = icmp ugt i8 %73, 3
  br i1 %74, label %33, label %38

75:                                               ; preds = %45, %42, %33, %29
  %76 = phi i8 [ %32, %29 ], [ %37, %33 ], [ %44, %42 ], [ %50, %45 ]
  ret i8 %76
}

declare signext i8 @_ZNK4absl13cord_internal11CordRepRing12GetCharacterEm(%"class.absl::cord_internal::CordRepRing"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4absl4Cord15FlattenSlowPathEv(%"class.absl::Cord"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.absl::Cord"* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 15
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %8, align 8
  %10 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = ashr i8 %4, 1
  %14 = sext i8 %13 to i64
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i64 [ %11, %7 ], [ %14, %12 ]
  %17 = icmp ult i64 %16, 4084
  br i1 %17, label %18, label %40

18:                                               ; preds = %15
  %19 = icmp ult i64 %16, 20
  %20 = add nuw nsw i64 %16, 13
  %21 = select i1 %19, i64 32, i64 %20
  %22 = icmp ult i64 %21, 1025
  %23 = select i1 %22, i64 8, i64 32
  %24 = add nsw i64 %21, -1
  %25 = add nuw nsw i64 %24, %23
  %26 = sub nsw i64 0, %23
  %27 = and i64 %25, %26
  %28 = tail call i8* @_Znwm(i64 %27) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #18
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 2, i32* %30, align 4
  %31 = icmp ult i64 %27, 1025
  %32 = lshr exact i64 %27, 3
  %33 = lshr i64 %27, 5
  %34 = add nuw nsw i64 %33, 96
  %35 = select i1 %31, i64 %32, i64 %34
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds i8, i8* %28, i64 12
  store i8 %36, i8* %37, align 4
  %38 = bitcast i8* %28 to i64*
  store i64 %16, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %28, i64 13
  tail call void @_ZNK4absl4Cord19CopyToArraySlowPathEPc(%"class.absl::Cord"* %0, i8* %39)
  br label %54

40:                                               ; preds = %15
  %41 = tail call i8* @_Znwm(i64 %16) #19
  tail call void @_ZNK4absl4Cord19CopyToArraySlowPathEPc(%"class.absl::Cord"* %0, i8* nonnull %41)
  %42 = icmp sgt i64 %16, -1
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %40
  tail call void @llvm.trap() #18
  unreachable

44:                                               ; preds = %40
  %45 = tail call i8* @_Znwm(i64 32) #19
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 2, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %45, i64 24
  %49 = bitcast i8* %48 to void (%"struct.absl::cord_internal::CordRepExternal"*)**
  store void (%"struct.absl::cord_internal::CordRepExternal"*)* @"_ZN4absl13cord_internal19CordRepExternalImplIZNS_4Cord15FlattenSlowPathEvE3$_2E7ReleaseEPNS0_15CordRepExternalE", void (%"struct.absl::cord_internal::CordRepExternal"*)** %49, align 8
  %50 = bitcast i8* %45 to i64*
  store i64 %16, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 12
  store i8 1, i8* %51, align 4
  %52 = getelementptr inbounds i8, i8* %45, i64 16
  %53 = bitcast i8* %52 to i8**
  store i8* %41, i8** %53, align 8
  br label %54

54:                                               ; preds = %44, %18
  %55 = phi i8* [ %28, %18 ], [ %45, %44 ]
  %56 = phi i8* [ %39, %18 ], [ %41, %44 ]
  %57 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = tail call i64 @llvm.bswap.i64(i64 %58) #18
  %60 = add nsw i64 %59, -1
  %61 = inttoptr i64 %60 to %"class.absl::cord_internal::CordzInfo"*
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %54
  tail call void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %61, i32 10) #18
  br label %64

64:                                               ; preds = %54, %63
  %65 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %65, align 8
  %67 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %66, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw sub i32* %67, i32 2 acq_rel
  %69 = icmp eq i32 %68, 2
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %64
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %66) #18
  br label %71

71:                                               ; preds = %64, %70
  %72 = bitcast %"class.absl::Cord"* %0 to i8**
  store i8* %55, i8** %72, align 8
  br i1 %62, label %76, label %73, !prof !2

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %61, i64 0, i32 5
  %75 = bitcast %"struct.absl::cord_internal::CordRep"** %74 to i8**
  store i8* %55, i8** %75, align 8
  tail call void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"* nonnull %61) #18
  br label %76

76:                                               ; preds = %71, %73
  %77 = insertvalue { i8*, i64 } undef, i8* %56, 0
  %78 = insertvalue { i8*, i64 } %77, i64 %16, 1
  ret { i8*, i64 } %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl4Cord15ForEachChunkAuxEPNS_13cord_internal7CordRepENS_11FunctionRefIFvNS_11string_viewEEEE(%"struct.absl::cord_internal::CordRep"*, i8*, void (i8*, i8*, i64)*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %5 = alloca [128 x %"struct.absl::cord_internal::CordRep"*], align 16
  %6 = alloca %"class.absl::string_view", align 8
  %7 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 3
  br i1 %9, label %10, label %131

10:                                               ; preds = %3
  %11 = bitcast %"class.absl::Cord::ChunkIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 392, i1 false)
  %14 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #18
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %17, align 8
  %18 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %18, align 8
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %4, %"struct.absl::cord_internal::CordRep"* %0) #18
  %19 = load i64, i64* %14, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %122, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 3, i32 1
  br label %25

25:                                               ; preds = %21, %119
  %26 = load i8*, i8** %22, align 8
  %27 = load i64, i64* %23, align 8
  call void %2(i8* %1, i8* %26, i64 %27) #18
  %28 = load i64, i64* %14, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %25
  call void @llvm.trap() #18
  unreachable

31:                                               ; preds = %25
  %32 = load i64, i64* %23, align 8
  %33 = sub i64 %28, %32
  store i64 %33, i64* %14, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %118, label %35

35:                                               ; preds = %31
  %36 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %17, align 8
  %37 = icmp eq %"class.absl::cord_internal::CordRepRing"* %36, null
  br i1 %37, label %115, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %24, align 8
  %40 = add i32 %39, 1
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  %44 = select i1 %43, i32 0, i32 %40
  store i32 %44, i32* %24, align 8
  %45 = load i32, i32* %41, align 8
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 4
  %48 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 5, i64 %47
  %49 = bitcast i8* %48 to i32*
  %50 = zext i32 %44 to i64
  %51 = getelementptr inbounds i32, i32* %49, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = shl nuw nsw i64 %46, 3
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 5, i64 %54
  %56 = bitcast i8* %55 to %"struct.absl::cord_internal::CordRep"**
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %56, i64 %50
  %58 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %57, align 8
  %59 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 2
  %60 = load i8, i8* %59, align 4
  %61 = icmp ugt i8 %60, 3
  br i1 %61, label %62, label %64

62:                                               ; preds = %38
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 0, i32 3, i64 0
  br label %88

64:                                               ; preds = %38
  %65 = icmp eq i8 %60, 1
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 1
  %68 = bitcast %"struct.absl::cord_internal::CordRep"* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %88

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 1, i32 1
  %72 = bitcast %"class.absl::cord_internal::Refcount"* %71 to %"struct.absl::cord_internal::CordRep"**
  %73 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %72, align 8
  %74 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %73, i64 0, i32 2
  %75 = load i8, i8* %74, align 4
  %76 = icmp eq i8 %75, 1
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %73, i64 0, i32 3, i64 0
  br label %83

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %73, i64 1
  %81 = bitcast %"struct.absl::cord_internal::CordRep"* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %79, %77
  %84 = phi i8* [ %78, %77 ], [ %82, %79 ]
  %85 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %58, i64 1, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  br label %88

88:                                               ; preds = %83, %66, %62
  %89 = phi i8* [ %63, %62 ], [ %69, %66 ], [ %87, %83 ]
  %90 = getelementptr inbounds i8, i8* %89, i64 %53
  %91 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, %44
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 4
  br label %104

96:                                               ; preds = %88
  %97 = icmp eq i32 %44, 0
  %98 = select i1 %97, i32 %45, i32 %44
  %99 = add i32 %98, -1
  %100 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 5, i64 0
  %101 = bitcast i8* %100 to i64*
  %102 = zext i32 %99 to i64
  %103 = getelementptr inbounds i64, i64* %101, i64 %102
  br label %104

104:                                              ; preds = %96, %94
  %105 = phi i64* [ %95, %94 ], [ %103, %96 ]
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %36, i64 0, i32 5, i64 0
  %108 = bitcast i8* %107 to i64*
  %109 = getelementptr inbounds i64, i64* %108, i64 %50
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %110, %106
  %112 = icmp sgt i64 %111, -1
  br i1 %112, label %114, label %113, !prof !2

113:                                              ; preds = %104
  call void @llvm.trap() #18
  unreachable

114:                                              ; preds = %104
  store i8* %90, i8** %22, align 8
  store i64 %111, i64* %23, align 8
  br label %119

115:                                              ; preds = %35
  %116 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %4) #18
  %117 = load i64, i64* %14, align 8
  br label %119

118:                                              ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #18
  br label %122

119:                                              ; preds = %114, %115
  %120 = phi i64 [ %33, %114 ], [ %117, %115 ]
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %25

122:                                              ; preds = %119, %118, %10
  %123 = load i64, i64* %18, align 8
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %128 = bitcast %"struct.absl::cord_internal::CordRep"*** %127 to i8**
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #19
  br label %130

130:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %11) #18
  br label %175

131:                                              ; preds = %3
  %132 = bitcast [128 x %"struct.absl::cord_internal::CordRep"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %132) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %132, i8 -86, i64 1024, i1 false)
  %133 = bitcast %"class.absl::string_view"* %6 to i8*
  %134 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  %135 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  %136 = getelementptr inbounds [128 x %"struct.absl::cord_internal::CordRep"*], [128 x %"struct.absl::cord_internal::CordRep"*]* %5, i64 0, i64 127
  br label %137

137:                                              ; preds = %146, %131
  %138 = phi i8 [ %8, %131 ], [ %150, %146 ]
  %139 = phi %"struct.absl::cord_internal::CordRep"* [ %0, %131 ], [ %147, %146 ]
  %140 = phi i32 [ 0, %131 ], [ %148, %146 ]
  %141 = icmp eq i8 %138, 0
  br i1 %141, label %142, label %162

142:                                              ; preds = %137
  %143 = icmp eq i32 %140, 128
  br i1 %143, label %144, label %151

144:                                              ; preds = %142
  call void @_ZN4absl4Cord15ForEachChunkAuxEPNS_13cord_internal7CordRepENS_11FunctionRefIFvNS_11string_viewEEEE(%"struct.absl::cord_internal::CordRep"* %139, i8* %1, void (i8*, i8*, i64)* %2)
  %145 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %136, align 8
  br label %146

146:                                              ; preds = %144, %151, %169
  %147 = phi %"struct.absl::cord_internal::CordRep"* [ %145, %144 ], [ %161, %151 ], [ %173, %169 ]
  %148 = phi i32 [ 127, %144 ], [ %155, %151 ], [ %170, %169 ]
  %149 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %147, i64 0, i32 2
  %150 = load i8, i8* %149, align 4
  br label %137

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 1, i32 1
  %153 = bitcast %"class.absl::cord_internal::Refcount"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = add nsw i32 %140, 1
  %156 = sext i32 %140 to i64
  %157 = getelementptr inbounds [128 x %"struct.absl::cord_internal::CordRep"*], [128 x %"struct.absl::cord_internal::CordRep"*]* %5, i64 0, i64 %156
  %158 = bitcast %"struct.absl::cord_internal::CordRep"** %157 to i64*
  store i64 %154, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %139, i64 1
  %160 = bitcast %"struct.absl::cord_internal::CordRep"* %159 to %"struct.absl::cord_internal::CordRep"**
  %161 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %160, align 8
  br label %146

162:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false) #18
  %163 = call zeroext i1 @_ZN4absl4Cord10GetFlatAuxEPNS_13cord_internal7CordRepEPNS_11string_viewE(%"struct.absl::cord_internal::CordRep"* %139, %"class.absl::string_view"* nonnull %6)
  br i1 %163, label %164, label %167

164:                                              ; preds = %162
  %165 = load i8*, i8** %134, align 8
  %166 = load i64, i64* %135, align 8
  call void %2(i8* %1, i8* %165, i64 %166) #18
  br label %167

167:                                              ; preds = %164, %162
  %168 = icmp eq i32 %140, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %167
  %170 = add nsw i32 %140, -1
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [128 x %"struct.absl::cord_internal::CordRep"*], [128 x %"struct.absl::cord_internal::CordRep"*]* %5, i64 0, i64 %171
  %173 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %172, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #18
  br label %146

174:                                              ; preds = %167
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #18
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %132) #18
  br label %175

175:                                              ; preds = %174, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4absl4Cord14MemoryUsageAuxEPKNS_13cord_internal7CordRepE(%"struct.absl::cord_internal::CordRep"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.absl::InlinedVector.33", align 8
  %3 = alloca %"struct.absl::cord_internal::CordRep"*, align 8
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp ugt i8 %5, 3
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = zext i8 %5 to i32
  %9 = icmp ult i8 %5, -127
  %10 = shl nuw nsw i32 %8, 3
  %11 = shl nuw nsw i32 %8, 5
  %12 = add nsw i32 %11, -3072
  %13 = select i1 %9, i32 %10, i32 %12
  %14 = sext i32 %13 to i64
  br label %217

15:                                               ; preds = %1
  %16 = icmp eq i8 %5, 1
  br i1 %16, label %17, label %21

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 40
  br label %217

21:                                               ; preds = %15
  %22 = bitcast %"class.absl::InlinedVector.33"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.absl::InlinedVector.33", %"class.absl::InlinedVector.33"* %2, i64 0, i32 0, i32 1
  %24 = bitcast %"union.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 376, i1 false)
  %25 = getelementptr inbounds %"class.absl::InlinedVector.33", %"class.absl::InlinedVector.33"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = bitcast %"struct.absl::cord_internal::CordRep"** %3 to i8*
  %27 = getelementptr inbounds %"class.absl::InlinedVector.33", %"class.absl::InlinedVector.33"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.absl::InlinedVector.33", %"class.absl::InlinedVector.33"* %2, i64 0, i32 0, i32 1
  %29 = ptrtoint %"union.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Data"* %28 to i64
  %30 = getelementptr inbounds %"class.absl::InlinedVector.33", %"class.absl::InlinedVector.33"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"struct.absl::cord_internal::CordRep"*** %30 to i64*
  %32 = bitcast %"struct.absl::cord_internal::CordRep"** %3 to i64*
  %33 = getelementptr inbounds %"class.absl::InlinedVector.33", %"class.absl::InlinedVector.33"* %2, i64 0, i32 0
  %34 = bitcast %"union.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Data"* %28 to %"struct.absl::cord_internal::CordRep"**
  br label %35

35:                                               ; preds = %205, %21
  %36 = phi i8 [ %5, %21 ], [ %209, %205 ]
  %37 = phi i64 [ 0, %21 ], [ %207, %205 ]
  %38 = phi %"struct.absl::cord_internal::CordRep"* [ %0, %21 ], [ %206, %205 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #18
  store %"struct.absl::cord_internal::CordRep"* null, %"struct.absl::cord_internal::CordRep"** %3, align 8
  switch i8 %36, label %159 [
    i8 0, label %39
    i8 3, label %112
  ]

39:                                               ; preds = %35
  %40 = add i64 %37, 32
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1
  %42 = bitcast %"struct.absl::cord_internal::CordRep"* %41 to %"struct.absl::cord_internal::CordRep"**
  %43 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %42, align 8
  %44 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 4
  %46 = icmp ugt i8 %45, 3
  br i1 %46, label %47, label %56

47:                                               ; preds = %39
  %48 = zext i8 %45 to i32
  %49 = icmp ult i8 %45, -127
  %50 = shl nuw nsw i32 %48, 3
  %51 = shl nuw nsw i32 %48, 5
  %52 = add nsw i32 %51, -3072
  %53 = select i1 %49, i32 %50, i32 %52
  %54 = sext i32 %53 to i64
  %55 = add i64 %40, %54
  br label %65

56:                                               ; preds = %39
  %57 = icmp eq i8 %45, 1
  br i1 %57, label %58, label %63

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %43, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %37, 72
  %62 = add i64 %61, %60
  br label %65

63:                                               ; preds = %56
  store %"struct.absl::cord_internal::CordRep"* %43, %"struct.absl::cord_internal::CordRep"** %3, align 8
  %64 = ptrtoint %"struct.absl::cord_internal::CordRep"* %43 to i64
  br label %65

65:                                               ; preds = %58, %47, %63
  %66 = phi i64 [ %64, %63 ], [ 0, %58 ], [ 0, %47 ]
  %67 = phi %"struct.absl::cord_internal::CordRep"* [ %43, %63 ], [ null, %58 ], [ null, %47 ]
  %68 = phi i64 [ %40, %63 ], [ %62, %58 ], [ %55, %47 ]
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1
  %70 = bitcast %"class.absl::cord_internal::Refcount"* %69 to %"struct.absl::cord_internal::CordRep"**
  %71 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %70, align 8
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %71, i64 0, i32 2
  %73 = load i8, i8* %72, align 4
  %74 = icmp ugt i8 %73, 3
  br i1 %74, label %75, label %84

75:                                               ; preds = %65
  %76 = zext i8 %73 to i32
  %77 = icmp ult i8 %73, -127
  %78 = shl nuw nsw i32 %76, 3
  %79 = shl nuw nsw i32 %76, 5
  %80 = add nsw i32 %79, -3072
  %81 = select i1 %77, i32 %78, i32 %80
  %82 = sext i32 %81 to i64
  %83 = add i64 %68, %82
  br label %185

84:                                               ; preds = %65
  %85 = icmp eq i8 %73, 1
  br i1 %85, label %86, label %91

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %71, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %68, 40
  %90 = add i64 %89, %88
  br label %185

91:                                               ; preds = %84
  %92 = icmp eq %"struct.absl::cord_internal::CordRep"* %67, null
  br i1 %92, label %111, label %93

93:                                               ; preds = %91
  %94 = load i64, i64* %25, align 8, !noalias !52
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  %97 = load i64, i64* %27, align 8
  %98 = select i1 %96, i64 47, i64 %97
  %99 = lshr i64 %94, 1
  %100 = icmp eq i64 %99, %98
  br i1 %100, label %109, label %101, !prof !3

101:                                              ; preds = %93
  %102 = load i64, i64* %31, align 8
  %103 = select i1 %96, i64 %29, i64 %102
  %104 = inttoptr i64 %103 to %"struct.absl::cord_internal::CordRep"**
  %105 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %104, i64 %99
  %106 = bitcast %"struct.absl::cord_internal::CordRep"** %105 to i64*
  store i64 %66, i64* %106, align 8
  %107 = load i64, i64* %25, align 8
  %108 = add i64 %107, 2
  store i64 %108, i64* %25, align 8
  br label %111

109:                                              ; preds = %93
  %110 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRKS5_EEERS5_DpOT_(%"class.absl::inlined_vector_internal::Storage.34"* nonnull %33, %"struct.absl::cord_internal::CordRep"** nonnull dereferenceable(8) %3) #18
  br label %111

111:                                              ; preds = %109, %101, %91
  store %"struct.absl::cord_internal::CordRep"* %71, %"struct.absl::cord_internal::CordRep"** %3, align 8
  br label %185

112:                                              ; preds = %35
  %113 = bitcast %"struct.absl::cord_internal::CordRep"* %38 to %"class.absl::cord_internal::CordRepRing"*
  %114 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = zext i32 %115 to i64
  %117 = mul nuw nsw i64 %116, 20
  %118 = add i64 %37, 40
  %119 = add i64 %118, %117
  %120 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1
  %121 = bitcast %"struct.absl::cord_internal::CordRep"* %120 to i32*
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = shl nuw nsw i64 %116, 3
  %126 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %125
  %127 = bitcast i8* %126 to %"struct.absl::cord_internal::CordRep"**
  br label %128

128:                                              ; preds = %153, %112
  %129 = phi i64 [ %119, %112 ], [ %154, %153 ]
  %130 = phi i32 [ %122, %112 ], [ %157, %153 ]
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %127, i64 %131
  %133 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %132, align 8
  %134 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %133, i64 0, i32 2
  %135 = load i8, i8* %134, align 4
  %136 = icmp ugt i8 %135, 3
  br i1 %136, label %137, label %146

137:                                              ; preds = %128
  %138 = zext i8 %135 to i32
  %139 = icmp ult i8 %135, -127
  %140 = shl nuw nsw i32 %138, 3
  %141 = shl nuw nsw i32 %138, 5
  %142 = add nsw i32 %141, -3072
  %143 = select i1 %139, i32 %140, i32 %142
  %144 = sext i32 %143 to i64
  %145 = add i64 %129, %144
  br label %153

146:                                              ; preds = %128
  %147 = icmp eq i8 %135, 1
  br i1 %147, label %148, label %153

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %133, i64 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %129, 40
  %152 = add i64 %151, %150
  br label %153

153:                                              ; preds = %137, %146, %148
  %154 = phi i64 [ %145, %137 ], [ %152, %148 ], [ %129, %146 ]
  %155 = add i32 %130, 1
  %156 = icmp eq i32 %155, %115
  %157 = select i1 %156, i32 0, i32 %155
  %158 = icmp eq i32 %157, %124
  br i1 %158, label %189, label %128

159:                                              ; preds = %35
  %160 = add i64 %37, 32
  %161 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %38, i64 1, i32 1
  %162 = bitcast %"class.absl::cord_internal::Refcount"* %161 to %"struct.absl::cord_internal::CordRep"**
  %163 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %162, align 8
  store %"struct.absl::cord_internal::CordRep"* %163, %"struct.absl::cord_internal::CordRep"** %3, align 8
  %164 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %163, i64 0, i32 2
  %165 = load i8, i8* %164, align 4
  %166 = icmp ugt i8 %165, 3
  br i1 %166, label %167, label %176

167:                                              ; preds = %159
  %168 = zext i8 %165 to i32
  %169 = icmp ult i8 %165, -127
  %170 = shl nuw nsw i32 %168, 3
  %171 = shl nuw nsw i32 %168, 5
  %172 = add nsw i32 %171, -3072
  %173 = select i1 %169, i32 %170, i32 %172
  %174 = sext i32 %173 to i64
  %175 = add i64 %160, %174
  br label %183

176:                                              ; preds = %159
  %177 = icmp eq i8 %165, 1
  br i1 %177, label %178, label %185

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %163, i64 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %37, 72
  %182 = add i64 %181, %180
  br label %183

183:                                              ; preds = %178, %167
  %184 = phi i64 [ %182, %178 ], [ %175, %167 ]
  store %"struct.absl::cord_internal::CordRep"* null, %"struct.absl::cord_internal::CordRep"** %3, align 8
  br label %189

185:                                              ; preds = %176, %75, %86, %111
  %186 = phi %"struct.absl::cord_internal::CordRep"* [ %71, %111 ], [ %163, %176 ], [ %67, %86 ], [ %67, %75 ]
  %187 = phi i64 [ %68, %111 ], [ %160, %176 ], [ %90, %86 ], [ %83, %75 ]
  %188 = icmp eq %"struct.absl::cord_internal::CordRep"* %186, null
  br i1 %188, label %189, label %205

189:                                              ; preds = %153, %183, %185
  %190 = phi i64 [ %184, %183 ], [ %187, %185 ], [ %154, %153 ]
  %191 = load i64, i64* %25, align 8
  %192 = icmp ult i64 %191, 2
  br i1 %192, label %210, label %193

193:                                              ; preds = %189
  %194 = and i64 %191, 1
  %195 = icmp eq i64 %194, 0
  %196 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %30, align 8
  %197 = select i1 %195, %"struct.absl::cord_internal::CordRep"** %34, %"struct.absl::cord_internal::CordRep"** %196
  %198 = lshr i64 %191, 1
  %199 = add nsw i64 %198, -1
  %200 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %197, i64 %199
  %201 = bitcast %"struct.absl::cord_internal::CordRep"** %200 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %32, align 8
  %203 = add i64 %191, -2
  store i64 %203, i64* %25, align 8
  %204 = inttoptr i64 %202 to %"struct.absl::cord_internal::CordRep"*
  br label %205

205:                                              ; preds = %193, %185
  %206 = phi %"struct.absl::cord_internal::CordRep"* [ %186, %185 ], [ %204, %193 ]
  %207 = phi i64 [ %187, %185 ], [ %190, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #18
  %208 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %206, i64 0, i32 2
  %209 = load i8, i8* %208, align 4
  br label %35

210:                                              ; preds = %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #18
  %211 = and i64 %191, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %210
  %214 = bitcast %"struct.absl::cord_internal::CordRep"*** %30 to i8**
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #19
  br label %216

216:                                              ; preds = %210, %213
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %22) #18
  br label %217

217:                                              ; preds = %17, %7, %216
  %218 = phi i64 [ %190, %216 ], [ %20, %17 ], [ %14, %7 ]
  ret i64 %218
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4absllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_4CordE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.absl::Cord"* dereferenceable(16)) local_unnamed_addr #2 {
  %3 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %4 = bitcast %"class.absl::Cord::ChunkIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 2
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 408, i1 false)
  %7 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 2
  %8 = bitcast %"class.absl::Cord"* %1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #18, !alias.scope !55
  %10 = load i8, i8* %9, align 1, !noalias !55
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %14, align 8, !noalias !55
  %16 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !55
  store i64 %17, i64* %7, align 8, !alias.scope !55
  %18 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %18, align 8, !alias.scope !55
  %19 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %19, align 8, !alias.scope !55
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %3, %"struct.absl::cord_internal::CordRep"* %15) #18
  %20 = load i64, i64* %7, align 8
  br label %31

21:                                               ; preds = %2
  %22 = ashr i8 %10, 1
  %23 = sext i8 %22 to i64
  store i64 %23, i64* %7, align 8, !alias.scope !55
  %24 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %24, align 8, !alias.scope !55
  %25 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %25, align 8, !alias.scope !55
  %26 = icmp sgt i8 %10, -1
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %21
  tail call void @llvm.trap() #18
  unreachable

28:                                               ; preds = %21
  %29 = bitcast %"class.absl::Cord::ChunkIterator"* %3 to %"class.absl::Cord"**
  store %"class.absl::Cord"* %1, %"class.absl::Cord"** %29, align 8, !alias.scope !55
  %30 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 0, i32 1
  store i64 %23, i64* %30, align 8, !alias.scope !55
  br label %31

31:                                               ; preds = %13, %28
  %32 = phi i64 [ %20, %13 ], [ %23, %28 ]
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 3, i32 0
  %38 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 3, i32 1
  br label %49

39:                                               ; preds = %144, %143, %31
  %40 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %3, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"struct.absl::cord_internal::CordRep"*** %45 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #19
  br label %48

48:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %4) #18
  ret %"class.std::__1::basic_ostream"* %0

49:                                               ; preds = %34, %144
  %50 = load i8*, i8** %35, align 8
  %51 = load i64, i64* %36, align 8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"* %0, i8* %50, i64 %51) #18
  %53 = load i64, i64* %7, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %49
  call void @llvm.trap() #18
  unreachable

56:                                               ; preds = %49
  %57 = load i64, i64* %36, align 8
  %58 = sub i64 %53, %57
  store i64 %58, i64* %7, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %143, label %60

60:                                               ; preds = %56
  %61 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %37, align 8
  %62 = icmp eq %"class.absl::cord_internal::CordRepRing"* %61, null
  br i1 %62, label %140, label %63

63:                                               ; preds = %60
  %64 = load i32, i32* %38, align 8
  %65 = add i32 %64, 1
  %66 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %65, %67
  %69 = select i1 %68, i32 0, i32 %65
  store i32 %69, i32* %38, align 8
  %70 = load i32, i32* %66, align 8
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 4
  %73 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 %72
  %74 = bitcast i8* %73 to i32*
  %75 = zext i32 %69 to i64
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = shl nuw nsw i64 %71, 3
  %80 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 %79
  %81 = bitcast i8* %80 to %"struct.absl::cord_internal::CordRep"**
  %82 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %81, i64 %75
  %83 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %82, align 8
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 0, i32 2
  %85 = load i8, i8* %84, align 4
  %86 = icmp ugt i8 %85, 3
  br i1 %86, label %87, label %89

87:                                               ; preds = %63
  %88 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 0, i32 3, i64 0
  br label %113

89:                                               ; preds = %63
  %90 = icmp eq i8 %85, 1
  br i1 %90, label %91, label %95

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 1
  %93 = bitcast %"struct.absl::cord_internal::CordRep"* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %113

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 1, i32 1
  %97 = bitcast %"class.absl::cord_internal::Refcount"* %96 to %"struct.absl::cord_internal::CordRep"**
  %98 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %97, align 8
  %99 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 0, i32 2
  %100 = load i8, i8* %99, align 4
  %101 = icmp eq i8 %100, 1
  br i1 %101, label %104, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 0, i32 3, i64 0
  br label %108

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 1
  %106 = bitcast %"struct.absl::cord_internal::CordRep"* %105 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %104, %102
  %109 = phi i8* [ %103, %102 ], [ %107, %104 ]
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %83, i64 1, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds i8, i8* %109, i64 %111
  br label %113

113:                                              ; preds = %108, %91, %87
  %114 = phi i8* [ %88, %87 ], [ %94, %91 ], [ %112, %108 ]
  %115 = getelementptr inbounds i8, i8* %114, i64 %78
  %116 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, %69
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 4
  br label %129

121:                                              ; preds = %113
  %122 = icmp eq i32 %69, 0
  %123 = select i1 %122, i32 %70, i32 %69
  %124 = add i32 %123, -1
  %125 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 0
  %126 = bitcast i8* %125 to i64*
  %127 = zext i32 %124 to i64
  %128 = getelementptr inbounds i64, i64* %126, i64 %127
  br label %129

129:                                              ; preds = %121, %119
  %130 = phi i64* [ %120, %119 ], [ %128, %121 ]
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %61, i64 0, i32 5, i64 0
  %133 = bitcast i8* %132 to i64*
  %134 = getelementptr inbounds i64, i64* %133, i64 %75
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %135, %131
  %137 = icmp sgt i64 %136, -1
  br i1 %137, label %139, label %138, !prof !2

138:                                              ; preds = %129
  call void @llvm.trap() #18
  unreachable

139:                                              ; preds = %129
  store i8* %115, i8** %35, align 8
  store i64 %136, i64* %36, align 8
  br label %144

140:                                              ; preds = %60
  %141 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %3) #18
  %142 = load i64, i64* %7, align 8
  br label %144

143:                                              ; preds = %56
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #18
  br label %39

144:                                              ; preds = %139, %140
  %145 = phi i64 [ %58, %139 ], [ %142, %140 ]
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %39, label %49
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4absl16strings_internal14CordTestAccess12FlatOverheadEv() local_unnamed_addr #7 align 2 {
  ret i64 13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4absl16strings_internal14CordTestAccess13MaxFlatLengthEv() local_unnamed_addr #7 align 2 {
  ret i64 4083
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4absl16strings_internal14CordTestAccess15FlatTagToLengthEh(i8 zeroext) local_unnamed_addr #7 align 2 {
  %2 = zext i8 %0 to i32
  %3 = icmp ult i8 %0, -127
  %4 = shl nuw nsw i32 %2, 3
  %5 = shl nuw nsw i32 %2, 5
  %6 = add nsw i32 %5, -3072
  %7 = select i1 %3, i32 %4, i32 %6
  %8 = add nsw i32 %7, -13
  %9 = sext i32 %8 to i64
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN4absl16strings_internal14CordTestAccess11LengthToTagEm(i64) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = icmp ugt i64 %0, 4083
  br i1 %6, label %7, label %16, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #18
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0))
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #18
  call void @_ZN4absl8AlphaNumC2EPKc(%"class.absl::AlphaNum"* nonnull %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0))
  %12 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #18
  call void @_ZN4absl8AlphaNumC2Em(%"class.absl::AlphaNum"* nonnull %5, i64 %0)
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #18
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  %14 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %15 = inttoptr i64 %14 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %15(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 2014, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #18
  unreachable

16:                                               ; preds = %1
  %17 = add nuw nsw i64 %0, 13
  %18 = icmp ult i64 %17, 1025
  %19 = lshr i64 %17, 3
  %20 = lshr i64 %17, 5
  %21 = add nuw nsw i64 %20, 96
  %22 = select i1 %18, i64 %19, i64 %21
  %23 = trunc i64 %22 to i8
  ret i8 %23
}

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4absl16strings_internal14CordTestAccess19SizeofCordRepConcatEv() local_unnamed_addr #7 align 2 {
  ret i64 32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4absl16strings_internal14CordTestAccess21SizeofCordRepExternalEv() local_unnamed_addr #7 align 2 {
  ret i64 32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4absl16strings_internal14CordTestAccess22SizeofCordRepSubstringEv() local_unnamed_addr #7 align 2 {
  ret i64 32
}

declare void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16), i32) local_unnamed_addr #5

define weak_odr hidden i64* @_ZTWN4absl13cord_internal17cordz_next_sampleE() local_unnamed_addr #5 {
  br i1 icmp ne (void ()* @_ZTHN4absl13cord_internal17cordz_next_sampleE, void ()* null), label %1, label %2

1:                                                ; preds = %0
  tail call void @_ZTHN4absl13cord_internal17cordz_next_sampleE()
  br label %2

2:                                                ; preds = %1, %0
  ret i64* @_ZN4absl13cord_internal17cordz_next_sampleE
}

declare zeroext i1 @_ZN4absl13cord_internal25cordz_should_profile_slowEv() local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4absl13cord_internal19CordRepExternalImplIZNS_L17CordRepFromStringEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE14StringReleaserE7ReleaseEPNS0_15CordRepExternalE(%"struct.absl::cord_internal::CordRepExternal"*) #2 align 2 {
  %2 = icmp eq %"struct.absl::cord_internal::CordRepExternal"* %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, -1
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %3
  tail call void @llvm.trap() #18
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %0, i64 1
  %10 = bitcast %"struct.absl::cord_internal::CordRepExternal"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = bitcast %"struct.absl::cord_internal::CordRepExternal"* %9 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #19
  br label %17

17:                                               ; preds = %8, %14
  %18 = bitcast %"struct.absl::cord_internal::CordRepExternal"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %17, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl10CordForest5BuildEPNS_13cord_internal7CordRepE(%"class.absl::CordForest"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 8) #19
  %9 = bitcast i8* %8 to %"struct.absl::cord_internal::CordRep"**
  %10 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast %"struct.absl::cord_internal::CordRep"*** %7 to i8**
  store i8* %11, i8** %12, align 8
  %13 = bitcast %"struct.absl::cord_internal::CordRep"*** %6 to i64*
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %14 = ptrtoint i8* %11 to i64
  store i64 %14, i64* %13, align 8
  %15 = ptrtoint i8* %8 to i64
  %16 = bitcast i8* %11 to %"struct.absl::cord_internal::CordRep"**
  %17 = bitcast %"class.std::__1::vector"* %3 to i64*
  %18 = bitcast %"struct.absl::cord_internal::CordRep"*** %7 to i64*
  %19 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 2
  %20 = bitcast %"struct.absl::cord_internal::CordRepConcat"** %19 to i64*
  %21 = bitcast %"struct.absl::cord_internal::CordRepConcat"** %19 to %"struct.absl::cord_internal::CordRep"**
  br label %22

22:                                               ; preds = %2, %185
  %23 = phi %"struct.absl::cord_internal::CordRep"** [ %9, %2 ], [ %186, %185 ]
  %24 = phi i64 [ %15, %2 ], [ %189, %185 ]
  %25 = phi %"struct.absl::cord_internal::CordRep"** [ %16, %2 ], [ %187, %185 ]
  %26 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 -1
  %27 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, align 8
  store %"struct.absl::cord_internal::CordRep"** %26, %"struct.absl::cord_internal::CordRep"*** %6, align 8
  tail call void @_ZN4absl10CordForest9CheckNodeEPNS_13cord_internal7CordRepE(%"struct.absl::cord_internal::CordRep"* %27)
  %28 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 0, i32 2
  %29 = load i8, i8* %28, align 4
  %30 = icmp eq i8 %29, 0
  %31 = ptrtoint %"struct.absl::cord_internal::CordRep"** %26 to i64
  br i1 %30, label %33, label %32, !prof !2

32:                                               ; preds = %22
  tail call void @_ZN4absl10CordForest7AddNodeEPNS_13cord_internal7CordRepE(%"class.absl::CordForest"* %0, %"struct.absl::cord_internal::CordRep"* %27)
  br label %185

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 0, i32 3, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp ugt i8 %35, 46
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %35 to i64
  %41 = getelementptr inbounds [47 x i64], [47 x i64]* @_ZN4abslL10min_lengthE, i64 0, i64 %40
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %39, %42
  br i1 %43, label %44, label %184

44:                                               ; preds = %37, %33
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 1, i32 1
  %46 = bitcast %"class.absl::cord_internal::Refcount"* %45 to %"struct.absl::cord_internal::CordRep"**
  %47 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %7, align 8
  %48 = icmp eq %"struct.absl::cord_internal::CordRep"** %26, %47
  %49 = ptrtoint %"struct.absl::cord_internal::CordRep"** %47 to i64
  br i1 %48, label %57, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.absl::cord_internal::Refcount"* %45 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.absl::cord_internal::CordRep"** %26 to i64*
  store i64 %52, i64* %53, align 8
  %54 = ptrtoint %"struct.absl::cord_internal::CordRep"** %25 to i64
  store i64 %54, i64* %13, align 8
  %55 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %7, align 8
  %56 = ptrtoint %"struct.absl::cord_internal::CordRep"** %55 to i64
  br label %106

57:                                               ; preds = %44
  %58 = sub i64 %31, %24
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %63) #20
  unreachable

64:                                               ; preds = %57
  %65 = sub i64 %49, %24
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 1152921504606846975
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = ashr exact i64 %65, 2
  %70 = icmp ult i64 %69, %60
  %71 = select i1 %70, i64 %60, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  tail call void @abort() #20
  unreachable

76:                                               ; preds = %73, %64
  %77 = phi i64 [ %71, %73 ], [ 2305843009213693951, %64 ]
  %78 = shl i64 %77, 3
  %79 = tail call i8* @_Znwm(i64 %78) #19
  %80 = bitcast i8* %79 to %"struct.absl::cord_internal::CordRep"**
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi %"struct.absl::cord_internal::CordRep"** [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %83, i64 %59
  %85 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %83, i64 %82
  %86 = ptrtoint %"struct.absl::cord_internal::CordRep"** %85 to i64
  %87 = bitcast %"class.absl::cord_internal::Refcount"* %45 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"struct.absl::cord_internal::CordRep"** %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %84, i64 1
  %91 = ptrtoint %"struct.absl::cord_internal::CordRep"** %90 to i64
  %92 = ptrtoint %"struct.absl::cord_internal::CordRep"** %23 to i64
  %93 = sub i64 %31, %92
  %94 = ashr exact i64 %93, 3
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %84, i64 %95
  %97 = ptrtoint %"struct.absl::cord_internal::CordRep"** %96 to i64
  %98 = icmp sgt i64 %93, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %81
  %100 = bitcast %"struct.absl::cord_internal::CordRep"** %96 to i8*
  %101 = bitcast %"struct.absl::cord_internal::CordRep"** %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %93, i1 false) #18
  br label %102

102:                                              ; preds = %99, %81
  store i64 %97, i64* %17, align 8
  store i64 %91, i64* %13, align 8
  store i64 %86, i64* %18, align 8
  %103 = icmp eq %"struct.absl::cord_internal::CordRep"** %23, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = bitcast %"struct.absl::cord_internal::CordRep"** %23 to i8*
  tail call void @_ZdlPv(i8* %105) #19
  br label %106

106:                                              ; preds = %50, %102, %104
  %107 = phi i64 [ %56, %50 ], [ %86, %102 ], [ %86, %104 ]
  %108 = phi i64 [ %54, %50 ], [ %91, %102 ], [ %91, %104 ]
  %109 = phi %"struct.absl::cord_internal::CordRep"** [ %55, %50 ], [ %85, %102 ], [ %85, %104 ]
  %110 = phi %"struct.absl::cord_internal::CordRep"** [ %25, %50 ], [ %90, %102 ], [ %90, %104 ]
  %111 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 1
  %112 = bitcast %"struct.absl::cord_internal::CordRep"* %111 to %"struct.absl::cord_internal::CordRep"**
  %113 = icmp eq %"struct.absl::cord_internal::CordRep"** %110, %109
  br i1 %113, label %120, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %111, i64 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"struct.absl::cord_internal::CordRep"** %110 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %110, i64 1
  %119 = ptrtoint %"struct.absl::cord_internal::CordRep"** %118 to i64
  store i64 %119, i64* %13, align 8
  br label %167

120:                                              ; preds = %106
  %121 = load i64, i64* %17, align 8
  %122 = sub i64 %107, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %127) #20
  unreachable

128:                                              ; preds = %120
  %129 = icmp ult i64 %123, 1152921504606846975
  br i1 %129, label %130, label %138

130:                                              ; preds = %128
  %131 = ashr exact i64 %122, 2
  %132 = icmp ult i64 %131, %124
  %133 = select i1 %132, i64 %124, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %130
  %136 = icmp ugt i64 %133, 2305843009213693951
  br i1 %136, label %137, label %138

137:                                              ; preds = %135
  tail call void @abort() #20
  unreachable

138:                                              ; preds = %135, %128
  %139 = phi i64 [ %133, %135 ], [ 2305843009213693951, %128 ]
  %140 = shl i64 %139, 3
  %141 = tail call i8* @_Znwm(i64 %140) #19
  %142 = bitcast i8* %141 to %"struct.absl::cord_internal::CordRep"**
  br label %143

143:                                              ; preds = %138, %130
  %144 = phi i64 [ %139, %138 ], [ 0, %130 ]
  %145 = phi %"struct.absl::cord_internal::CordRep"** [ %142, %138 ], [ null, %130 ]
  %146 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %145, i64 %123
  %147 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %145, i64 %144
  %148 = ptrtoint %"struct.absl::cord_internal::CordRep"** %147 to i64
  %149 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %111, i64 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.absl::cord_internal::CordRep"** %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %146, i64 1
  %153 = ptrtoint %"struct.absl::cord_internal::CordRep"** %152 to i64
  %154 = sub i64 %108, %121
  %155 = ashr exact i64 %154, 3
  %156 = sub nsw i64 0, %155
  %157 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %146, i64 %156
  %158 = ptrtoint %"struct.absl::cord_internal::CordRep"** %157 to i64
  %159 = icmp sgt i64 %154, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %143
  %161 = bitcast %"struct.absl::cord_internal::CordRep"** %157 to i8*
  %162 = inttoptr i64 %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 %154, i1 false) #18
  br label %163

163:                                              ; preds = %160, %143
  store i64 %158, i64* %17, align 8
  store i64 %153, i64* %13, align 8
  store i64 %148, i64* %18, align 8
  %164 = icmp eq i64 %121, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %121 to i8*
  tail call void @_ZdlPv(i8* %166) #19
  br label %167

167:                                              ; preds = %114, %163, %165
  %168 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 acquire, align 4
  %170 = icmp eq i32 %169, 2
  br i1 %170, label %171, label %174

171:                                              ; preds = %167
  %172 = load i64, i64* %20, align 8
  %173 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %111, i64 0, i32 0
  store i64 %172, i64* %173, align 8
  store %"struct.absl::cord_internal::CordRep"* %27, %"struct.absl::cord_internal::CordRep"** %21, align 8
  br label %185

174:                                              ; preds = %167
  %175 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %46, align 8
  %176 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %175, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 2 monotonic
  %178 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %112, align 8
  %179 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %178, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 2 monotonic
  %181 = atomicrmw sub i32* %168, i32 2 acq_rel
  %182 = icmp eq i32 %181, 2
  br i1 %182, label %183, label %185, !prof !3

183:                                              ; preds = %174
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* %27) #18
  br label %185

184:                                              ; preds = %37
  tail call void @_ZN4absl10CordForest7AddNodeEPNS_13cord_internal7CordRepE(%"class.absl::CordForest"* %0, %"struct.absl::cord_internal::CordRep"* %27)
  br label %185

185:                                              ; preds = %183, %174, %184, %171, %32
  %186 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %5, align 8
  %187 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %6, align 8
  %188 = icmp eq %"struct.absl::cord_internal::CordRep"** %186, %187
  %189 = ptrtoint %"struct.absl::cord_internal::CordRep"** %186 to i64
  br i1 %188, label %190, label %22

190:                                              ; preds = %185
  %191 = icmp eq %"struct.absl::cord_internal::CordRep"** %186, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %190
  %193 = ptrtoint %"struct.absl::cord_internal::CordRep"** %186 to i64
  store i64 %193, i64* %13, align 8
  %194 = bitcast %"struct.absl::cord_internal::CordRep"** %186 to i8*
  tail call void @_ZdlPv(i8* %194) #19
  br label %195

195:                                              ; preds = %190, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest11ConcatNodesEv(%"class.absl::CordForest"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %9, align 8
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %12 to %"struct.absl::cord_internal::CordRep"**
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi %"struct.absl::cord_internal::CordRep"** [ %10, %8 ], [ %13, %11 ]
  %16 = lshr i64 %5, 1
  %17 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %15, i64 %16
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 0
  br label %21

21:                                               ; preds = %19, %37
  %22 = phi %"struct.absl::cord_internal::CordRep"** [ %15, %19 ], [ %39, %37 ]
  %23 = phi %"struct.absl::cord_internal::CordRep"* [ null, %19 ], [ %38, %37 ]
  %24 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %22, align 8
  %25 = icmp eq %"struct.absl::cord_internal::CordRep"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %21
  %27 = icmp eq %"struct.absl::cord_internal::CordRep"* %23, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = tail call %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest10MakeConcatEPNS_13cord_internal7CordRepES3_(%"class.absl::CordForest"* %0, %"struct.absl::cord_internal::CordRep"* nonnull %24, %"struct.absl::cord_internal::CordRep"* nonnull %23) #18
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi %"struct.absl::cord_internal::CordRep"* [ %29, %28 ], [ %24, %26 ]
  %32 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %24, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %20, align 8
  %35 = sub i64 %34, %33
  store i64 %35, i64* %20, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %21, %30
  %38 = phi %"struct.absl::cord_internal::CordRep"* [ %31, %30 ], [ %23, %21 ]
  %39 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %22, i64 1
  %40 = icmp eq %"struct.absl::cord_internal::CordRep"** %39, %17
  br i1 %40, label %41, label %21

41:                                               ; preds = %37, %30
  %42 = phi %"struct.absl::cord_internal::CordRep"* [ %38, %37 ], [ %31, %30 ]
  %43 = icmp eq %"struct.absl::cord_internal::CordRep"* %42, null
  br i1 %43, label %44, label %51, !prof !3

44:                                               ; preds = %14, %41
  %45 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #18
  %46 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0))
  %47 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0))
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #18
  %49 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %50 = inttoptr i64 %49 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %50(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 1100, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #18
  unreachable

51:                                               ; preds = %41
  ret %"struct.absl::cord_internal::CordRep"* %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl10CordForest9CheckNodeEPNS_13cord_internal7CordRepE(%"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %20, !prof !3

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #18
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0))
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0))
  %17 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #18
  %18 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %19 = inttoptr i64 %18 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %19(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 1159, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #18
  unreachable

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %62

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1
  %26 = bitcast %"struct.absl::cord_internal::CordRep"* %25 to %"struct.absl::cord_internal::CordRep"**
  %27 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, align 8
  %28 = icmp eq %"struct.absl::cord_internal::CordRep"* %27, null
  br i1 %28, label %29, label %36, !prof !3

29:                                               ; preds = %24
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #18
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0))
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0))
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #18
  %34 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %35 = inttoptr i64 %34 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %35(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 1161, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #18
  unreachable

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %0, i64 1, i32 1
  %38 = bitcast %"class.absl::cord_internal::Refcount"* %37 to %"struct.absl::cord_internal::CordRep"**
  %39 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %38, align 8
  %40 = icmp eq %"struct.absl::cord_internal::CordRep"* %39, null
  br i1 %40, label %41, label %48, !prof !3

41:                                               ; preds = %36
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #18
  %43 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0))
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0))
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #18
  %46 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %47 = inttoptr i64 %46 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %47(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 1162, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #18
  unreachable

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %27, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %39, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, %50
  %54 = icmp eq i64 %11, %53
  br i1 %54, label %62, label %55, !prof !2

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #18
  %57 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.33, i64 0, i64 0))
  %58 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #18
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0))
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLERKS5_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #18
  %60 = load atomic i64, i64* bitcast (%"class.absl::base_internal::AtomicHook"* @_ZN4absl20raw_logging_internal21internal_log_functionE to i64*) acquire, align 8
  %61 = inttoptr i64 %60 to void (i32, i8*, i32, %"class.std::__1::basic_string"*)*
  call void %61(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 1165, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #18
  unreachable

62:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl10CordForest7AddNodeEPNS_13cord_internal7CordRepE(%"class.absl::CordForest"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 2
  br i1 %5, label %6, label %52

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %9 to %"struct.absl::cord_internal::CordRep"**
  br label %11

11:                                               ; preds = %6, %37
  %12 = phi i64 [ %4, %6 ], [ %38, %37 ]
  %13 = phi i64 [ 0, %6 ], [ %44, %37 ]
  %14 = phi i64 [ 1, %6 ], [ %40, %37 ]
  %15 = phi %"struct.absl::cord_internal::CordRep"* [ null, %6 ], [ %39, %37 ]
  %16 = load i64, i64* %7, align 8
  %17 = lshr i64 %16, 1
  %18 = icmp ugt i64 %17, %13
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %11
  tail call void @llvm.trap() #18
  unreachable

20:                                               ; preds = %11
  %21 = and i64 %16, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %8, align 8
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi %"struct.absl::cord_internal::CordRep"** [ %24, %23 ], [ %10, %20 ]
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %26, i64 %13
  %28 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %29 = icmp eq %"struct.absl::cord_internal::CordRep"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = icmp eq %"struct.absl::cord_internal::CordRep"* %15, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = tail call %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest10MakeConcatEPNS_13cord_internal7CordRepES3_(%"class.absl::CordForest"* %0, %"struct.absl::cord_internal::CordRep"* nonnull %28, %"struct.absl::cord_internal::CordRep"* nonnull %15) #18
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi %"struct.absl::cord_internal::CordRep"* [ %33, %32 ], [ %28, %30 ]
  store %"struct.absl::cord_internal::CordRep"* null, %"struct.absl::cord_internal::CordRep"** %27, align 8
  %36 = load i64, i64* %3, align 8
  br label %37

37:                                               ; preds = %25, %34
  %38 = phi i64 [ %36, %34 ], [ %12, %25 ]
  %39 = phi %"struct.absl::cord_internal::CordRep"* [ %35, %34 ], [ %15, %25 ]
  %40 = add nuw i64 %14, 1
  %41 = getelementptr inbounds [47 x i64], [47 x i64]* @_ZN4abslL10min_lengthE, i64 0, i64 %40
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %38, %42
  %44 = add nuw nsw i64 %13, 1
  br i1 %43, label %11, label %45

45:                                               ; preds = %37
  %46 = trunc i64 %14 to i32
  %47 = icmp eq %"struct.absl::cord_internal::CordRep"* %39, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = tail call %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest10MakeConcatEPNS_13cord_internal7CordRepES3_(%"class.absl::CordForest"* %0, %"struct.absl::cord_internal::CordRep"* nonnull %39, %"struct.absl::cord_internal::CordRep"* %1) #18
  %50 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %2, %45, %48
  %53 = phi i32 [ %46, %48 ], [ %46, %45 ], [ 0, %2 ]
  %54 = phi i64 [ %51, %48 ], [ %38, %45 ], [ %4, %2 ]
  %55 = phi %"struct.absl::cord_internal::CordRep"* [ %49, %48 ], [ %1, %45 ], [ %1, %2 ]
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds [47 x i64], [47 x i64]* @_ZN4abslL10min_lengthE, i64 0, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %54, %58
  %60 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1
  br i1 %59, label %95, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1
  %65 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %64 to %"struct.absl::cord_internal::CordRep"**
  br label %66

66:                                               ; preds = %61, %85
  %67 = phi i64 [ %56, %61 ], [ %87, %85 ]
  %68 = phi %"struct.absl::cord_internal::CordRep"* [ %55, %61 ], [ %86, %85 ]
  %69 = load i64, i64* %62, align 8
  %70 = lshr i64 %69, 1
  %71 = icmp ugt i64 %70, %67
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %66
  tail call void @llvm.trap() #18
  unreachable

73:                                               ; preds = %66
  %74 = and i64 %69, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %63, align 8
  br label %78

78:                                               ; preds = %73, %76
  %79 = phi %"struct.absl::cord_internal::CordRep"** [ %77, %76 ], [ %65, %73 ]
  %80 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %79, i64 %67
  %81 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %80, align 8
  %82 = icmp eq %"struct.absl::cord_internal::CordRep"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = tail call %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest10MakeConcatEPNS_13cord_internal7CordRepES3_(%"class.absl::CordForest"* %0, %"struct.absl::cord_internal::CordRep"* nonnull %81, %"struct.absl::cord_internal::CordRep"* %68)
  store %"struct.absl::cord_internal::CordRep"* null, %"struct.absl::cord_internal::CordRep"** %80, align 8
  br label %85

85:                                               ; preds = %78, %83
  %86 = phi %"struct.absl::cord_internal::CordRep"* [ %84, %83 ], [ %68, %78 ]
  %87 = add nuw i64 %67, 1
  %88 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %86, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds [47 x i64], [47 x i64]* @_ZN4abslL10min_lengthE, i64 0, i64 %87
  %91 = load i64, i64* %90, align 8
  %92 = icmp ult i64 %89, %91
  br i1 %92, label %93, label %66

93:                                               ; preds = %85
  %94 = trunc i64 %87 to i32
  br label %95

95:                                               ; preds = %93, %52
  %96 = phi %"struct.absl::cord_internal::CordRep"* [ %55, %52 ], [ %86, %93 ]
  %97 = phi i32 [ %53, %52 ], [ %94, %93 ]
  %98 = add nsw i32 %97, -1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = lshr i64 %101, 1
  %103 = icmp ugt i64 %102, %99
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %95
  tail call void @llvm.trap() #18
  unreachable

105:                                              ; preds = %95
  %106 = and i64 %101, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %110 = load %"struct.absl::cord_internal::CordRep"**, %"struct.absl::cord_internal::CordRep"*** %109, align 8
  br label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 1, i32 0, i32 1
  %113 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %112 to %"struct.absl::cord_internal::CordRep"**
  br label %114

114:                                              ; preds = %108, %111
  %115 = phi %"struct.absl::cord_internal::CordRep"** [ %110, %108 ], [ %113, %111 ]
  %116 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %115, i64 %99
  store %"struct.absl::cord_internal::CordRep"* %96, %"struct.absl::cord_internal::CordRep"** %116, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.absl::cord_internal::CordRep"* @_ZN4absl10CordForest10MakeConcatEPNS_13cord_internal7CordRepES3_(%"class.absl::CordForest"*, %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::CordForest", %"class.absl::CordForest"* %0, i64 0, i32 2
  %5 = load %"struct.absl::cord_internal::CordRepConcat"*, %"struct.absl::cord_internal::CordRepConcat"** %4, align 8
  %6 = icmp eq %"struct.absl::cord_internal::CordRepConcat"* %5, null
  br i1 %6, label %7, label %64

7:                                                ; preds = %3
  %8 = icmp eq %"struct.absl::cord_internal::CordRep"* %1, null
  br i1 %8, label %100, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"struct.absl::cord_internal::CordRep"* %2, null
  br i1 %10, label %100, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 2 acq_rel
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %19, label %100, !prof !3

19:                                               ; preds = %15
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %1) #18
  br label %100

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 2 acq_rel
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %28, label %100, !prof !3

28:                                               ; preds = %24
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %2) #18
  br label %100

29:                                               ; preds = %20
  %30 = tail call i8* @_Znwm(i64 32) #19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 16, i1 false) #18
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 2, i32* %32, align 4
  %33 = bitcast i8* %30 to %"struct.absl::cord_internal::CordRep"*
  %34 = getelementptr inbounds i8, i8* %30, i64 12
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds i8, i8* %30, i64 16
  %36 = bitcast i8* %35 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %36, align 8
  %37 = getelementptr inbounds i8, i8* %30, i64 24
  %38 = bitcast i8* %37 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %2, %"struct.absl::cord_internal::CordRep"** %38, align 8
  %39 = add i64 %22, %13
  %40 = bitcast i8* %30 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %42 = load i8, i8* %41, align 4
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 3, i64 0
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  br label %48

48:                                               ; preds = %44, %29
  %49 = phi i32 [ %47, %44 ], [ 0, %29 ]
  %50 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 2
  %51 = load i8, i8* %50, align 4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 3, i64 0
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  br label %57

57:                                               ; preds = %48, %53
  %58 = phi i32 [ %56, %53 ], [ 0, %48 ]
  %59 = icmp ult i32 %49, %58
  %60 = select i1 %59, i32 %58, i32 %49
  %61 = trunc i32 %60 to i8
  %62 = add i8 %61, 1
  %63 = getelementptr inbounds i8, i8* %30, i64 13
  store i8 %62, i8* %63, align 1
  br label %100

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"struct.absl::cord_internal::CordRepConcat", %"struct.absl::cord_internal::CordRepConcat"* %5, i64 0, i32 1
  %66 = bitcast %"struct.absl::cord_internal::CordRep"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.absl::cord_internal::CordRepConcat"** %4 to i64*
  store i64 %67, i64* %68, align 8
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %65, align 8
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRepConcat", %"struct.absl::cord_internal::CordRepConcat"* %5, i64 0, i32 2
  store %"struct.absl::cord_internal::CordRep"* %2, %"struct.absl::cord_internal::CordRep"** %69, align 8
  %70 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %71
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRepConcat", %"struct.absl::cord_internal::CordRepConcat"* %5, i64 0, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %77 = load i8, i8* %76, align 4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 3, i64 0
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  br label %83

83:                                               ; preds = %79, %64
  %84 = phi i32 [ %82, %79 ], [ 0, %64 ]
  %85 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 2
  %86 = load i8, i8* %85, align 4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %2, i64 0, i32 3, i64 0
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  br label %92

92:                                               ; preds = %83, %88
  %93 = phi i32 [ %91, %88 ], [ 0, %83 ]
  %94 = icmp ult i32 %84, %93
  %95 = select i1 %94, i32 %93, i32 %84
  %96 = trunc i32 %95 to i8
  %97 = add i8 %96, 1
  %98 = getelementptr inbounds %"struct.absl::cord_internal::CordRepConcat", %"struct.absl::cord_internal::CordRepConcat"* %5, i64 0, i32 0, i32 3, i64 0
  store i8 %97, i8* %98, align 1
  %99 = bitcast %"struct.absl::cord_internal::CordRepConcat"* %5 to %"struct.absl::cord_internal::CordRep"*
  br label %100

100:                                              ; preds = %57, %28, %24, %19, %15, %9, %7, %92
  %101 = phi %"struct.absl::cord_internal::CordRep"* [ %99, %92 ], [ %33, %57 ], [ %2, %7 ], [ %1, %9 ], [ %2, %15 ], [ %2, %19 ], [ %1, %24 ], [ %1, %28 ]
  ret %"struct.absl::cord_internal::CordRep"* %101
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #14

declare void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"*, i32) local_unnamed_addr #5

declare void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #5

declare void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16), %"class.absl::cord_internal::InlineData"* dereferenceable(16), i32) local_unnamed_addr #5

declare void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #5

declare void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #5

declare { i8*, i64 } @_ZN4absl13cord_internal11CordRepRing15GetAppendBufferEm(%"class.absl::cord_internal::CordRepRing"*, i64) local_unnamed_addr #5

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"*, %"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.absl::cord_internal::CordRep"*, align 8
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %3, align 8
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 3
  %7 = ptrtoint %"struct.absl::cord_internal::CordRep"* %1 to i64
  br i1 %6, label %8, label %88

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 3
  %10 = bitcast %"struct.absl::cord_internal::CordRep"* %1 to %"class.absl::cord_internal::CordRepRing"*
  %11 = bitcast %"class.absl::cord_internal::CordRepRingReader"* %9 to %"struct.absl::cord_internal::CordRep"**
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %11, align 8
  %12 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 1
  %13 = bitcast %"struct.absl::cord_internal::CordRep"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 3, i32 1
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = shl nuw nsw i64 %18, 4
  %20 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %10, i64 0, i32 5, i64 %19
  %21 = bitcast i8* %20 to i32*
  %22 = zext i32 %14 to i64
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = shl nuw nsw i64 %18, 3
  %27 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %10, i64 0, i32 5, i64 %26
  %28 = bitcast i8* %27 to %"struct.absl::cord_internal::CordRep"**
  %29 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %28, i64 %22
  %30 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %29, align 8
  %31 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 0, i32 2
  %32 = load i8, i8* %31, align 4
  %33 = icmp ugt i8 %32, 3
  br i1 %33, label %34, label %36

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 0, i32 3, i64 0
  br label %60

36:                                               ; preds = %8
  %37 = icmp eq i8 %32, 1
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 1
  %40 = bitcast %"struct.absl::cord_internal::CordRep"* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %60

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 1, i32 1
  %44 = bitcast %"class.absl::cord_internal::Refcount"* %43 to %"struct.absl::cord_internal::CordRep"**
  %45 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %44, align 8
  %46 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 0, i32 2
  %47 = load i8, i8* %46, align 4
  %48 = icmp eq i8 %47, 1
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 0, i32 3, i64 0
  br label %55

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 1
  %53 = bitcast %"struct.absl::cord_internal::CordRep"* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %51, %49
  %56 = phi i8* [ %50, %49 ], [ %54, %51 ]
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %30, i64 1, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  br label %60

60:                                               ; preds = %55, %38, %34
  %61 = phi i8* [ %35, %34 ], [ %41, %38 ], [ %59, %55 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %25
  %63 = load i32, i32* %13, align 8
  %64 = icmp eq i32 %63, %14
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 2, i32 0
  br label %75

67:                                               ; preds = %60
  %68 = icmp eq i32 %14, 0
  %69 = select i1 %68, i32 %17, i32 %14
  %70 = add i32 %69, -1
  %71 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 2, i32 1
  %72 = bitcast %"class.absl::cord_internal::Refcount"* %71 to i64*
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds i64, i64* %72, i64 %73
  br label %75

75:                                               ; preds = %67, %65
  %76 = phi i64* [ %66, %65 ], [ %74, %67 ]
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 2, i32 1
  %79 = bitcast %"class.absl::cord_internal::Refcount"* %78 to i64*
  %80 = getelementptr inbounds i64, i64* %79, i64 %22
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %81, %77
  %83 = icmp sgt i64 %82, -1
  br i1 %83, label %85, label %84, !prof !2

84:                                               ; preds = %75
  tail call void @llvm.trap() #18
  unreachable

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 0
  store i8* %62, i8** %86, align 8
  %87 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 1
  store i64 %82, i64* %87, align 8
  br label %214

88:                                               ; preds = %2
  %89 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4
  %90 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %89, i64 0, i32 0
  %91 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !noalias !60
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %97 = bitcast %"struct.absl::cord_internal::CordRep"*** %96 to i64*
  %98 = load i64, i64* %97, align 8, !noalias !60
  %99 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %100 = load i64, i64* %99, align 8, !noalias !60
  br label %104

101:                                              ; preds = %88
  %102 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 4, i32 0, i32 1
  %103 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %102 to i64
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i64 [ %103, %101 ], [ %98, %95 ]
  %106 = phi i64 [ 47, %101 ], [ %100, %95 ]
  %107 = lshr i64 %92, 1
  %108 = icmp eq i64 %107, %106
  br i1 %108, label %115, label %109, !prof !3

109:                                              ; preds = %104
  %110 = inttoptr i64 %105 to %"struct.absl::cord_internal::CordRep"**
  %111 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %110, i64 %107
  %112 = bitcast %"struct.absl::cord_internal::CordRep"** %111 to i64*
  store i64 %7, i64* %112, align 8
  %113 = load i64, i64* %91, align 8
  %114 = add i64 %113, 2
  store i64 %114, i64* %91, align 8
  br label %117

115:                                              ; preds = %104
  %116 = call dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* %90, %"struct.absl::cord_internal::CordRep"** nonnull dereferenceable(8) %3) #18
  br label %117

117:                                              ; preds = %109, %115
  %118 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 2
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %122, !prof !3

121:                                              ; preds = %117
  call void @llvm.trap() #18
  unreachable

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %119, %124
  store i64 %125, i64* %118, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %212, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 3, i32 0
  %129 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %128, align 8
  %130 = icmp eq %"class.absl::cord_internal::CordRepRing"* %129, null
  br i1 %130, label %210, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 3, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, 1
  %135 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %134, %136
  %138 = select i1 %137, i32 0, i32 %134
  store i32 %138, i32* %132, align 8
  %139 = load i32, i32* %135, align 8
  %140 = zext i32 %139 to i64
  %141 = shl nuw nsw i64 %140, 4
  %142 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 5, i64 %141
  %143 = bitcast i8* %142 to i32*
  %144 = zext i32 %138 to i64
  %145 = getelementptr inbounds i32, i32* %143, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i64
  %148 = shl nuw nsw i64 %140, 3
  %149 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 5, i64 %148
  %150 = bitcast i8* %149 to %"struct.absl::cord_internal::CordRep"**
  %151 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %150, i64 %144
  %152 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %151, align 8
  %153 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %152, i64 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = icmp ugt i8 %154, 3
  br i1 %155, label %156, label %158

156:                                              ; preds = %131
  %157 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %152, i64 0, i32 3, i64 0
  br label %182

158:                                              ; preds = %131
  %159 = icmp eq i8 %154, 1
  br i1 %159, label %160, label %164

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %152, i64 1
  %162 = bitcast %"struct.absl::cord_internal::CordRep"* %161 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %182

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %152, i64 1, i32 1
  %166 = bitcast %"class.absl::cord_internal::Refcount"* %165 to %"struct.absl::cord_internal::CordRep"**
  %167 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %166, align 8
  %168 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %167, i64 0, i32 2
  %169 = load i8, i8* %168, align 4
  %170 = icmp eq i8 %169, 1
  br i1 %170, label %173, label %171

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %167, i64 0, i32 3, i64 0
  br label %177

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %167, i64 1
  %175 = bitcast %"struct.absl::cord_internal::CordRep"* %174 to i8**
  %176 = load i8*, i8** %175, align 8
  br label %177

177:                                              ; preds = %173, %171
  %178 = phi i8* [ %172, %171 ], [ %176, %173 ]
  %179 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %152, i64 1, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds i8, i8* %178, i64 %180
  br label %182

182:                                              ; preds = %177, %160, %156
  %183 = phi i8* [ %157, %156 ], [ %163, %160 ], [ %181, %177 ]
  %184 = getelementptr inbounds i8, i8* %183, i64 %147
  %185 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = icmp eq i32 %186, %138
  br i1 %187, label %188, label %190

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 4
  br label %198

190:                                              ; preds = %182
  %191 = icmp eq i32 %138, 0
  %192 = select i1 %191, i32 %139, i32 %138
  %193 = add i32 %192, -1
  %194 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 5, i64 0
  %195 = bitcast i8* %194 to i64*
  %196 = zext i32 %193 to i64
  %197 = getelementptr inbounds i64, i64* %195, i64 %196
  br label %198

198:                                              ; preds = %190, %188
  %199 = phi i64* [ %189, %188 ], [ %197, %190 ]
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %129, i64 0, i32 5, i64 0
  %202 = bitcast i8* %201 to i64*
  %203 = getelementptr inbounds i64, i64* %202, i64 %144
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %204, %200
  %206 = icmp sgt i64 %205, -1
  br i1 %206, label %208, label %207, !prof !2

207:                                              ; preds = %198
  call void @llvm.trap() #18
  unreachable

208:                                              ; preds = %198
  %209 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %0, i64 0, i32 0, i32 0
  store i8* %184, i8** %209, align 8
  store i64 %205, i64* %123, align 8
  br label %214

210:                                              ; preds = %127
  %211 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* %0) #18
  br label %214

212:                                              ; preds = %122
  %213 = bitcast %"class.absl::Cord::ChunkIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 16, i1 false) #18
  br label %214

214:                                              ; preds = %212, %210, %208, %85
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"struct.absl::SubRange"* @_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15EmplaceBackSlowIJS2_EEERS2_DpOT_(%"class.absl::inlined_vector_internal::Storage.98"*, %"struct.absl::SubRange"* dereferenceable(24)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !63
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::SubRange, 47, std::__1::allocator<absl::SubRange> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"struct.absl::SubRange"** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !63
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !63
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 768614336404564650
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #20
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 94, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = mul i64 %20, 24
  %24 = tail call i8* @_Znwm(i64 %23) #19
  %25 = bitcast i8* %24 to %"struct.absl::SubRange"*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %25, i64 %22
  %28 = bitcast %"struct.absl::SubRange"* %27 to i8*
  %29 = bitcast %"struct.absl::SubRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #18
  %30 = icmp eq i64 %22, 0
  br i1 %30, label %85, label %31

31:                                               ; preds = %19
  %32 = inttoptr i64 %21 to %"struct.absl::SubRange"*
  %33 = inttoptr i64 %21 to i8*
  %34 = add nsw i64 %22, -1
  %35 = and i64 %22, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = sub nsw i64 %22, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.absl::SubRange"* [ %32, %37 ], [ %61, %39 ]
  %41 = phi i8* [ %33, %37 ], [ %63, %39 ]
  %42 = phi i64 [ 0, %37 ], [ %62, %39 ]
  %43 = phi i64 [ %38, %37 ], [ %64, %39 ]
  %44 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %25, i64 %42
  %45 = bitcast %"struct.absl::SubRange"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %41, i64 24, i1 false) #18
  %46 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %40, i64 1
  %47 = or i64 %42, 1
  %48 = bitcast %"struct.absl::SubRange"* %46 to i8*
  %49 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %25, i64 %47
  %50 = bitcast %"struct.absl::SubRange"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %48, i64 24, i1 false) #18
  %51 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %40, i64 2
  %52 = or i64 %42, 2
  %53 = bitcast %"struct.absl::SubRange"* %51 to i8*
  %54 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %25, i64 %52
  %55 = bitcast %"struct.absl::SubRange"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %53, i64 24, i1 false) #18
  %56 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %40, i64 3
  %57 = or i64 %42, 3
  %58 = bitcast %"struct.absl::SubRange"* %56 to i8*
  %59 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %25, i64 %57
  %60 = bitcast %"struct.absl::SubRange"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %58, i64 24, i1 false) #18
  %61 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %40, i64 4
  %62 = add nuw nsw i64 %42, 4
  %63 = bitcast %"struct.absl::SubRange"* %61 to i8*
  %64 = add i64 %43, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %39

66:                                               ; preds = %39
  %67 = bitcast %"struct.absl::SubRange"* %61 to i8*
  br label %68

68:                                               ; preds = %66, %31
  %69 = phi %"struct.absl::SubRange"* [ %32, %31 ], [ %61, %66 ]
  %70 = phi i8* [ %33, %31 ], [ %67, %66 ]
  %71 = phi i64 [ 0, %31 ], [ %62, %66 ]
  %72 = icmp eq i64 %35, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"struct.absl::SubRange"* [ %80, %73 ], [ %69, %68 ]
  %75 = phi i8* [ %82, %73 ], [ %70, %68 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %68 ]
  %77 = phi i64 [ %83, %73 ], [ %35, %68 ]
  %78 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %25, i64 %76
  %79 = bitcast %"struct.absl::SubRange"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %75, i64 24, i1 false) #18
  %80 = getelementptr inbounds %"struct.absl::SubRange", %"struct.absl::SubRange"* %74, i64 1
  %81 = add nuw nsw i64 %76, 1
  %82 = bitcast %"struct.absl::SubRange"* %80 to i8*
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !66

85:                                               ; preds = %68, %73, %19
  br i1 %6, label %91, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 1, i32 0, i32 0
  %88 = bitcast %"struct.absl::SubRange"** %87 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #19
  %90 = load i64, i64* %3, align 8
  br label %91

91:                                               ; preds = %86, %85
  %92 = phi i64 [ %90, %86 ], [ %4, %85 ]
  %93 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 1, i32 0, i32 0
  %94 = bitcast %"struct.absl::SubRange"** %93 to i64*
  store i64 %26, i64* %94, align 8
  %95 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.98", %"class.absl::inlined_vector_internal::Storage.98"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %95, align 8
  %96 = or i64 %92, 1
  %97 = add i64 %96, 2
  store i64 %97, i64* %3, align 8
  ret %"struct.absl::SubRange"* %27
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"*, %"struct.absl::cord_internal::CordRep"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !68
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"struct.absl::cord_internal::CordRep"*** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !68
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !68
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 2305843009213693951
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #20
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 94, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = shl i64 %20, 3
  %24 = tail call i8* @_Znwm(i64 %23) #19
  %25 = bitcast i8* %24 to %"struct.absl::cord_internal::CordRep"**
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %22
  %28 = bitcast %"struct.absl::cord_internal::CordRep"** %27 to i64*
  %29 = bitcast %"struct.absl::cord_internal::CordRep"** %1 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %22, 0
  br i1 %31, label %115, label %32

32:                                               ; preds = %19
  %33 = inttoptr i64 %21 to %"struct.absl::cord_internal::CordRep"**
  %34 = inttoptr i64 %21 to i64*
  %35 = add nsw i64 %22, -1
  %36 = and i64 %22, 7
  %37 = icmp ult i64 %35, 7
  br i1 %37, label %97, label %38

38:                                               ; preds = %32
  %39 = sub nsw i64 %22, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"struct.absl::cord_internal::CordRep"** [ %33, %38 ], [ %90, %40 ]
  %42 = phi i64* [ %34, %38 ], [ %92, %40 ]
  %43 = phi i64 [ 0, %38 ], [ %91, %40 ]
  %44 = phi i64 [ %39, %38 ], [ %93, %40 ]
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %43
  %46 = bitcast %"struct.absl::cord_internal::CordRep"** %45 to i64*
  %47 = load i64, i64* %42, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 1
  %49 = or i64 %43, 1
  %50 = bitcast %"struct.absl::cord_internal::CordRep"** %48 to i64*
  %51 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %49
  %52 = bitcast %"struct.absl::cord_internal::CordRep"** %51 to i64*
  %53 = load i64, i64* %50, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 2
  %55 = or i64 %43, 2
  %56 = bitcast %"struct.absl::cord_internal::CordRep"** %54 to i64*
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %55
  %58 = bitcast %"struct.absl::cord_internal::CordRep"** %57 to i64*
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 3
  %61 = or i64 %43, 3
  %62 = bitcast %"struct.absl::cord_internal::CordRep"** %60 to i64*
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %61
  %64 = bitcast %"struct.absl::cord_internal::CordRep"** %63 to i64*
  %65 = load i64, i64* %62, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 4
  %67 = or i64 %43, 4
  %68 = bitcast %"struct.absl::cord_internal::CordRep"** %66 to i64*
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %67
  %70 = bitcast %"struct.absl::cord_internal::CordRep"** %69 to i64*
  %71 = load i64, i64* %68, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 5
  %73 = or i64 %43, 5
  %74 = bitcast %"struct.absl::cord_internal::CordRep"** %72 to i64*
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %73
  %76 = bitcast %"struct.absl::cord_internal::CordRep"** %75 to i64*
  %77 = load i64, i64* %74, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 6
  %79 = or i64 %43, 6
  %80 = bitcast %"struct.absl::cord_internal::CordRep"** %78 to i64*
  %81 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %79
  %82 = bitcast %"struct.absl::cord_internal::CordRep"** %81 to i64*
  %83 = load i64, i64* %80, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 7
  %85 = or i64 %43, 7
  %86 = bitcast %"struct.absl::cord_internal::CordRep"** %84 to i64*
  %87 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %85
  %88 = bitcast %"struct.absl::cord_internal::CordRep"** %87 to i64*
  %89 = load i64, i64* %86, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 8
  %91 = add nuw nsw i64 %43, 8
  %92 = bitcast %"struct.absl::cord_internal::CordRep"** %90 to i64*
  %93 = add i64 %44, -8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %40

95:                                               ; preds = %40
  %96 = bitcast %"struct.absl::cord_internal::CordRep"** %90 to i64*
  br label %97

97:                                               ; preds = %95, %32
  %98 = phi %"struct.absl::cord_internal::CordRep"** [ %33, %32 ], [ %90, %95 ]
  %99 = phi i64* [ %34, %32 ], [ %96, %95 ]
  %100 = phi i64 [ 0, %32 ], [ %91, %95 ]
  %101 = icmp eq i64 %36, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %97, %102
  %103 = phi %"struct.absl::cord_internal::CordRep"** [ %110, %102 ], [ %98, %97 ]
  %104 = phi i64* [ %112, %102 ], [ %99, %97 ]
  %105 = phi i64 [ %111, %102 ], [ %100, %97 ]
  %106 = phi i64 [ %113, %102 ], [ %36, %97 ]
  %107 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %105
  %108 = bitcast %"struct.absl::cord_internal::CordRep"** %107 to i64*
  %109 = load i64, i64* %104, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %103, i64 1
  %111 = add nuw nsw i64 %105, 1
  %112 = bitcast %"struct.absl::cord_internal::CordRep"** %110 to i64*
  %113 = add i64 %106, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %102, !llvm.loop !71

115:                                              ; preds = %97, %102, %19
  br i1 %6, label %121, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %118 = bitcast %"struct.absl::cord_internal::CordRep"*** %117 to i8**
  %119 = load i8*, i8** %118, align 8
  tail call void @_ZdlPv(i8* %119) #19
  %120 = load i64, i64* %3, align 8
  br label %121

121:                                              ; preds = %116, %115
  %122 = phi i64 [ %120, %116 ], [ %4, %115 ]
  %123 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.absl::cord_internal::CordRep"*** %123 to i64*
  store i64 %26, i64* %124, align 8
  %125 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %125, align 8
  %126 = or i64 %122, 1
  %127 = add i64 %126, 2
  store i64 %127, i64* %3, align 8
  ret %"struct.absl::cord_internal::CordRep"** %27
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZN4absl13cord_internal17CordRepRingReader4SeekEm(%"class.absl::cord_internal::CordRepRingReader"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordRepRingReader", %"class.absl::cord_internal::CordRepRingReader"* %0, i64 0, i32 0
  %4 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %3, align 8
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordRepRingReader", %"class.absl::cord_internal::CordRepRingReader"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %4, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %4, i64 0, i32 5, i64 0
  %10 = bitcast i8* %9 to i64*
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds i64, i64* %10, i64 %11
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %8
  %15 = icmp ugt i64 %14, %1
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %2, %16
  %20 = phi i32 [ %18, %16 ], [ %6, %2 ]
  %21 = icmp eq i64 %1, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %4, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  br label %30

25:                                               ; preds = %19
  %26 = tail call { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"* %4, i32 %20, i64 %1) #18
  %27 = extractvalue { i32, i64 } %26, 0
  %28 = extractvalue { i32, i64 } %26, 1
  %29 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %3, align 8
  br label %30

30:                                               ; preds = %22, %25
  %31 = phi %"class.absl::cord_internal::CordRepRing"* [ %4, %22 ], [ %29, %25 ]
  %32 = phi i32 [ %24, %22 ], [ %27, %25 ]
  %33 = phi i64 [ 0, %22 ], [ %28, %25 ]
  store i32 %32, i32* %5, align 8
  %34 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 4
  %38 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 5, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = zext i32 %32 to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %36, 3
  %45 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 5, i64 %44
  %46 = bitcast i8* %45 to %"struct.absl::cord_internal::CordRep"**
  %47 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %46, i64 %40
  %48 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %47, align 8
  %49 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 4
  %51 = icmp ugt i8 %50, 3
  br i1 %51, label %52, label %54

52:                                               ; preds = %30
  %53 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %48, i64 0, i32 3, i64 0
  br label %78

54:                                               ; preds = %30
  %55 = icmp eq i8 %50, 1
  br i1 %55, label %56, label %60

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %48, i64 1
  %58 = bitcast %"struct.absl::cord_internal::CordRep"* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %78

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %48, i64 1, i32 1
  %62 = bitcast %"class.absl::cord_internal::Refcount"* %61 to %"struct.absl::cord_internal::CordRep"**
  %63 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %62, align 8
  %64 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 4
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %63, i64 0, i32 3, i64 0
  br label %73

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %63, i64 1
  %71 = bitcast %"struct.absl::cord_internal::CordRep"* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %69, %67
  %74 = phi i8* [ %68, %67 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %48, i64 1, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  br label %78

78:                                               ; preds = %73, %56, %52
  %79 = phi i8* [ %53, %52 ], [ %59, %56 ], [ %77, %73 ]
  %80 = getelementptr inbounds i8, i8* %79, i64 %43
  %81 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, %32
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 4
  br label %94

86:                                               ; preds = %78
  %87 = icmp eq i32 %32, 0
  %88 = select i1 %87, i32 %35, i32 %32
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 5, i64 0
  %91 = bitcast i8* %90 to i64*
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds i64, i64* %91, i64 %92
  br label %94

94:                                               ; preds = %86, %84
  %95 = phi i64* [ %85, %84 ], [ %93, %86 ]
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %31, i64 0, i32 5, i64 0
  %98 = bitcast i8* %97 to i64*
  %99 = getelementptr inbounds i64, i64* %98, i64 %40
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %100, %96
  %102 = icmp sgt i64 %101, -1
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %94
  tail call void @llvm.trap() #18
  unreachable

104:                                              ; preds = %94
  %105 = icmp ult i64 %101, %33
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %104
  tail call void @llvm.trap() #18
  unreachable

107:                                              ; preds = %104
  %108 = getelementptr inbounds i8, i8* %80, i64 %33
  %109 = sub i64 %101, %33
  %110 = insertvalue { i8*, i64 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i64 } %110, i64 %109, 1
  ret { i8*, i64 } %111
}

declare { i32, i64 } @_ZNK4absl13cord_internal11CordRepRing8FindSlowEjm(%"class.absl::cord_internal::CordRepRing"*, i32, i64) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJRKS4_EEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"*, %"struct.absl::cord_internal::CordRep"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !72
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::CordRep *, 47, std::__1::allocator<absl::cord_internal::CordRep *> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"struct.absl::cord_internal::CordRep"*** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !72
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !72
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 2305843009213693951
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #20
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 94, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = shl i64 %20, 3
  %24 = tail call i8* @_Znwm(i64 %23) #19
  %25 = bitcast i8* %24 to %"struct.absl::cord_internal::CordRep"**
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %22
  %28 = bitcast %"struct.absl::cord_internal::CordRep"** %27 to i64*
  %29 = bitcast %"struct.absl::cord_internal::CordRep"** %1 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %22, 0
  br i1 %31, label %115, label %32

32:                                               ; preds = %19
  %33 = inttoptr i64 %21 to %"struct.absl::cord_internal::CordRep"**
  %34 = inttoptr i64 %21 to i64*
  %35 = add nsw i64 %22, -1
  %36 = and i64 %22, 7
  %37 = icmp ult i64 %35, 7
  br i1 %37, label %97, label %38

38:                                               ; preds = %32
  %39 = sub nsw i64 %22, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"struct.absl::cord_internal::CordRep"** [ %33, %38 ], [ %90, %40 ]
  %42 = phi i64* [ %34, %38 ], [ %92, %40 ]
  %43 = phi i64 [ 0, %38 ], [ %91, %40 ]
  %44 = phi i64 [ %39, %38 ], [ %93, %40 ]
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %43
  %46 = bitcast %"struct.absl::cord_internal::CordRep"** %45 to i64*
  %47 = load i64, i64* %42, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 1
  %49 = or i64 %43, 1
  %50 = bitcast %"struct.absl::cord_internal::CordRep"** %48 to i64*
  %51 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %49
  %52 = bitcast %"struct.absl::cord_internal::CordRep"** %51 to i64*
  %53 = load i64, i64* %50, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 2
  %55 = or i64 %43, 2
  %56 = bitcast %"struct.absl::cord_internal::CordRep"** %54 to i64*
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %55
  %58 = bitcast %"struct.absl::cord_internal::CordRep"** %57 to i64*
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 3
  %61 = or i64 %43, 3
  %62 = bitcast %"struct.absl::cord_internal::CordRep"** %60 to i64*
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %61
  %64 = bitcast %"struct.absl::cord_internal::CordRep"** %63 to i64*
  %65 = load i64, i64* %62, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 4
  %67 = or i64 %43, 4
  %68 = bitcast %"struct.absl::cord_internal::CordRep"** %66 to i64*
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %67
  %70 = bitcast %"struct.absl::cord_internal::CordRep"** %69 to i64*
  %71 = load i64, i64* %68, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 5
  %73 = or i64 %43, 5
  %74 = bitcast %"struct.absl::cord_internal::CordRep"** %72 to i64*
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %73
  %76 = bitcast %"struct.absl::cord_internal::CordRep"** %75 to i64*
  %77 = load i64, i64* %74, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 6
  %79 = or i64 %43, 6
  %80 = bitcast %"struct.absl::cord_internal::CordRep"** %78 to i64*
  %81 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %79
  %82 = bitcast %"struct.absl::cord_internal::CordRep"** %81 to i64*
  %83 = load i64, i64* %80, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 7
  %85 = or i64 %43, 7
  %86 = bitcast %"struct.absl::cord_internal::CordRep"** %84 to i64*
  %87 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %85
  %88 = bitcast %"struct.absl::cord_internal::CordRep"** %87 to i64*
  %89 = load i64, i64* %86, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 8
  %91 = add nuw nsw i64 %43, 8
  %92 = bitcast %"struct.absl::cord_internal::CordRep"** %90 to i64*
  %93 = add i64 %44, -8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %40

95:                                               ; preds = %40
  %96 = bitcast %"struct.absl::cord_internal::CordRep"** %90 to i64*
  br label %97

97:                                               ; preds = %95, %32
  %98 = phi %"struct.absl::cord_internal::CordRep"** [ %33, %32 ], [ %90, %95 ]
  %99 = phi i64* [ %34, %32 ], [ %96, %95 ]
  %100 = phi i64 [ 0, %32 ], [ %91, %95 ]
  %101 = icmp eq i64 %36, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %97, %102
  %103 = phi %"struct.absl::cord_internal::CordRep"** [ %110, %102 ], [ %98, %97 ]
  %104 = phi i64* [ %112, %102 ], [ %99, %97 ]
  %105 = phi i64 [ %111, %102 ], [ %100, %97 ]
  %106 = phi i64 [ %113, %102 ], [ %36, %97 ]
  %107 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %105
  %108 = bitcast %"struct.absl::cord_internal::CordRep"** %107 to i64*
  %109 = load i64, i64* %104, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %103, i64 1
  %111 = add nuw nsw i64 %105, 1
  %112 = bitcast %"struct.absl::cord_internal::CordRep"** %110 to i64*
  %113 = add i64 %106, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %102, !llvm.loop !75

115:                                              ; preds = %97, %102, %19
  br i1 %6, label %121, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %118 = bitcast %"struct.absl::cord_internal::CordRep"*** %117 to i8**
  %119 = load i8*, i8** %118, align 8
  tail call void @_ZdlPv(i8* %119) #19
  %120 = load i64, i64* %3, align 8
  br label %121

121:                                              ; preds = %116, %115
  %122 = phi i64 [ %120, %116 ], [ %4, %115 ]
  %123 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.absl::cord_internal::CordRep"*** %123 to i64*
  store i64 %26, i64* %124, align 8
  %125 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %125, align 8
  %126 = or i64 %122, 1
  %127 = add i64 %126, 2
  store i64 %127, i64* %3, align 8
  ret %"struct.absl::cord_internal::CordRep"** %27
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4absl4Cord15CompareSlowPathENS_11string_viewEmm(%"class.absl::Cord"*, i8*, i64, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %6 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %7 = bitcast %"class.absl::Cord::ChunkIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 2
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 408, i1 false)
  %10 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 2
  %11 = bitcast %"class.absl::Cord"* %0 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #18, !alias.scope !76
  %13 = load i8, i8* %12, align 1, !noalias !76
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %17, align 8, !noalias !76
  %19 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !76
  store i64 %20, i64* %10, align 8, !alias.scope !76
  %21 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %21, align 8, !alias.scope !76
  %22 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %22, align 8, !alias.scope !76
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %18) #18
  %23 = load i64, i64* %10, align 8
  %24 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %38

28:                                               ; preds = %5
  %29 = ashr i8 %13, 1
  %30 = sext i8 %29 to i64
  store i64 %30, i64* %10, align 8, !alias.scope !76
  %31 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %31, align 8, !alias.scope !76
  %32 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %32, align 8, !alias.scope !76
  %33 = icmp sgt i8 %13, -1
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %28
  tail call void @llvm.trap() #18
  unreachable

35:                                               ; preds = %28
  %36 = bitcast %"class.absl::Cord::ChunkIterator"* %6 to %"class.absl::Cord"**
  store %"class.absl::Cord"* %0, %"class.absl::Cord"** %36, align 8, !alias.scope !76
  %37 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 1
  store i64 %30, i64* %37, align 8, !alias.scope !76
  br label %38

38:                                               ; preds = %16, %35
  %39 = phi i64 [ %27, %16 ], [ %30, %35 ]
  %40 = phi i8* [ %25, %16 ], [ %11, %35 ]
  %41 = phi i64 [ %23, %16 ], [ %30, %35 ]
  %42 = icmp eq i64 %41, 0
  %43 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 1
  %45 = select i1 %42, i8* null, i8* %40
  %46 = select i1 %42, i64 0, i64 %39
  %47 = icmp ult i64 %46, %3
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %38
  call void @llvm.trap() #18
  unreachable

49:                                               ; preds = %38
  %50 = icmp ult i64 %2, %3
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %49
  call void @llvm.trap() #18
  unreachable

52:                                               ; preds = %49
  %53 = sub i64 %46, %3
  %54 = getelementptr inbounds i8, i8* %45, i64 %3
  %55 = getelementptr inbounds i8, i8* %1, i64 %3
  %56 = sub i64 %2, %3
  %57 = sub i64 %4, %3
  %58 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 0
  %59 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 1
  br label %60

60:                                               ; preds = %175, %52
  %61 = phi i64 [ %39, %52 ], [ %164, %175 ]
  %62 = phi i64 [ %41, %52 ], [ %165, %175 ]
  %63 = phi i8* [ %55, %52 ], [ %178, %175 ]
  %64 = phi i64 [ %57, %52 ], [ %172, %175 ]
  %65 = phi i64 [ %56, %52 ], [ %179, %175 ]
  %66 = phi i8* [ %54, %52 ], [ %176, %175 ]
  %67 = phi i64 [ %53, %52 ], [ %177, %175 ]
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %163

69:                                               ; preds = %60
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %69
  call void @llvm.trap() #18
  unreachable

72:                                               ; preds = %69
  %73 = sub i64 %62, %61
  store i64 %73, i64* %10, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %155, label %75

75:                                               ; preds = %72
  %76 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %58, align 8
  %77 = icmp eq %"class.absl::cord_internal::CordRepRing"* %76, null
  br i1 %77, label %156, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %59, align 8
  %80 = add i32 %79, 1
  %81 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %80, %82
  %84 = select i1 %83, i32 0, i32 %80
  store i32 %84, i32* %59, align 8
  %85 = load i32, i32* %81, align 8
  %86 = zext i32 %85 to i64
  %87 = shl nuw nsw i64 %86, 4
  %88 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 5, i64 %87
  %89 = bitcast i8* %88 to i32*
  %90 = zext i32 %84 to i64
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = shl nuw nsw i64 %86, 3
  %95 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 5, i64 %94
  %96 = bitcast i8* %95 to %"struct.absl::cord_internal::CordRep"**
  %97 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %96, i64 %90
  %98 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %97, align 8
  %99 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 0, i32 2
  %100 = load i8, i8* %99, align 4
  %101 = icmp ugt i8 %100, 3
  br i1 %101, label %102, label %104

102:                                              ; preds = %78
  %103 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 0, i32 3, i64 0
  br label %128

104:                                              ; preds = %78
  %105 = icmp eq i8 %100, 1
  br i1 %105, label %106, label %110

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 1
  %108 = bitcast %"struct.absl::cord_internal::CordRep"* %107 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %128

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 1, i32 1
  %112 = bitcast %"class.absl::cord_internal::Refcount"* %111 to %"struct.absl::cord_internal::CordRep"**
  %113 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %112, align 8
  %114 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %113, i64 0, i32 2
  %115 = load i8, i8* %114, align 4
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %119, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %113, i64 0, i32 3, i64 0
  br label %123

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %113, i64 1
  %121 = bitcast %"struct.absl::cord_internal::CordRep"* %120 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %119, %117
  %124 = phi i8* [ %118, %117 ], [ %122, %119 ]
  %125 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %98, i64 1, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  br label %128

128:                                              ; preds = %123, %106, %102
  %129 = phi i8* [ %103, %102 ], [ %109, %106 ], [ %127, %123 ]
  %130 = getelementptr inbounds i8, i8* %129, i64 %93
  %131 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, %84
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 4
  br label %144

136:                                              ; preds = %128
  %137 = icmp eq i32 %84, 0
  %138 = select i1 %137, i32 %85, i32 %84
  %139 = add i32 %138, -1
  %140 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 5, i64 0
  %141 = bitcast i8* %140 to i64*
  %142 = zext i32 %139 to i64
  %143 = getelementptr inbounds i64, i64* %141, i64 %142
  br label %144

144:                                              ; preds = %136, %134
  %145 = phi i64* [ %135, %134 ], [ %143, %136 ]
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %76, i64 0, i32 5, i64 0
  %148 = bitcast i8* %147 to i64*
  %149 = getelementptr inbounds i64, i64* %148, i64 %90
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %150, %146
  %152 = icmp sgt i64 %151, -1
  br i1 %152, label %154, label %153, !prof !2

153:                                              ; preds = %144
  call void @llvm.trap() #18
  unreachable

154:                                              ; preds = %144
  store i8* %130, i8** %43, align 8
  store i64 %151, i64* %44, align 8
  br label %163

155:                                              ; preds = %72
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #18
  br label %181

156:                                              ; preds = %75
  %157 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %6) #18
  %158 = load i64, i64* %10, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %181, label %160

160:                                              ; preds = %156
  %161 = load i8*, i8** %43, align 8
  %162 = load i64, i64* %44, align 8
  br label %163

163:                                              ; preds = %154, %160, %60
  %164 = phi i64 [ %61, %60 ], [ %162, %160 ], [ %151, %154 ]
  %165 = phi i64 [ %62, %60 ], [ %158, %160 ], [ %73, %154 ]
  %166 = phi i8* [ %66, %60 ], [ %161, %160 ], [ %130, %154 ]
  %167 = phi i64 [ %67, %60 ], [ %162, %160 ], [ %151, %154 ]
  %168 = icmp eq i64 %65, 0
  br i1 %168, label %181, label %169

169:                                              ; preds = %163
  %170 = icmp ult i64 %65, %167
  %171 = select i1 %170, i64 %65, i64 %167
  %172 = sub i64 %64, %171
  %173 = call i32 @memcmp(i8* %166, i8* %63, i64 %171) #21
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %188

175:                                              ; preds = %169
  %176 = getelementptr inbounds i8, i8* %166, i64 %171
  %177 = sub i64 %167, %171
  %178 = getelementptr inbounds i8, i8* %63, i64 %171
  %179 = sub i64 %65, %171
  %180 = icmp eq i64 %172, 0
  br i1 %180, label %188, label %60

181:                                              ; preds = %156, %163, %155
  %182 = phi i64 [ 0, %155 ], [ %167, %163 ], [ 0, %156 ]
  %183 = icmp eq i64 %65, 0
  %184 = zext i1 %183 to i32
  %185 = icmp eq i64 %182, 0
  %186 = zext i1 %185 to i32
  %187 = sub nsw i32 %184, %186
  br label %188

188:                                              ; preds = %175, %169, %181
  %189 = phi i32 [ %187, %181 ], [ %173, %169 ], [ 0, %175 ]
  %190 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %198, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %196 = bitcast %"struct.absl::cord_internal::CordRep"*** %195 to i8**
  %197 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %197) #19
  br label %198

198:                                              ; preds = %188, %194
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %7) #18
  ret i32 %189
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4absl4Cord9InlineRep18FindFlatStartPieceEv(%"class.absl::Cord::InlineRep"*) local_unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.absl::Cord::InlineRep"* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 15
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = ashr i8 %4, 1
  %9 = sext i8 %8 to i64
  %10 = icmp sgt i8 %4, -1
  br i1 %10, label %132, label %11, !prof !2

11:                                               ; preds = %7
  tail call void @llvm.trap() #18
  unreachable

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.absl::Cord::InlineRep", %"class.absl::Cord::InlineRep"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %13, align 8
  %15 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp ugt i8 %16, 3
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, -1
  br i1 %22, label %132, label %23, !prof !2

23:                                               ; preds = %18
  tail call void @llvm.trap() #18
  unreachable

24:                                               ; preds = %12
  switch i8 %16, label %103 [
    i8 1, label %25
    i8 3, label %33
    i8 0, label %95
  ]

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 1
  %27 = bitcast %"struct.absl::cord_internal::CordRep"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %30, -1
  br i1 %31, label %132, label %32, !prof !2

32:                                               ; preds = %25
  tail call void @llvm.trap() #18
  unreachable

33:                                               ; preds = %24
  %34 = bitcast %"struct.absl::cord_internal::CordRep"* %14 to %"class.absl::cord_internal::CordRepRing"*
  %35 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 1
  %36 = bitcast %"struct.absl::cord_internal::CordRep"* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 4
  %42 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %34, i64 0, i32 5, i64 %41
  %43 = bitcast i8* %42 to i32*
  %44 = zext i32 %37 to i64
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %40, 3
  %49 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %34, i64 0, i32 5, i64 %48
  %50 = bitcast i8* %49 to %"struct.absl::cord_internal::CordRep"**
  %51 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %50, i64 %44
  %52 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %51, align 8
  %53 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 2
  %54 = load i8, i8* %53, align 4
  %55 = icmp ugt i8 %54, 3
  br i1 %55, label %56, label %58

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 0, i32 3, i64 0
  br label %82

58:                                               ; preds = %33
  %59 = icmp eq i8 %54, 1
  br i1 %59, label %60, label %64

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1
  %62 = bitcast %"struct.absl::cord_internal::CordRep"* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %82

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1, i32 1
  %66 = bitcast %"class.absl::cord_internal::Refcount"* %65 to %"struct.absl::cord_internal::CordRep"**
  %67 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %66, align 8
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %67, i64 0, i32 2
  %69 = load i8, i8* %68, align 4
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %73, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %67, i64 0, i32 3, i64 0
  br label %77

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %67, i64 1
  %75 = bitcast %"struct.absl::cord_internal::CordRep"* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %73, %71
  %78 = phi i8* [ %72, %71 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %52, i64 1, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  br label %82

82:                                               ; preds = %77, %60, %56
  %83 = phi i8* [ %57, %56 ], [ %63, %60 ], [ %81, %77 ]
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 2, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %14, i64 2, i32 1
  %87 = bitcast %"class.absl::cord_internal::Refcount"* %86 to i64*
  %88 = getelementptr inbounds i64, i64* %87, i64 %44
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %89, %85
  %91 = icmp sgt i64 %90, -1
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %82
  tail call void @llvm.trap() #18
  unreachable

93:                                               ; preds = %82
  %94 = getelementptr inbounds i8, i8* %83, i64 %47
  br label %132

95:                                               ; preds = %24, %95
  %96 = phi %"struct.absl::cord_internal::CordRep"* [ %99, %95 ], [ %14, %24 ]
  %97 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %96, i64 1
  %98 = bitcast %"struct.absl::cord_internal::CordRep"* %97 to %"struct.absl::cord_internal::CordRep"**
  %99 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %98, align 8
  %100 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %99, i64 0, i32 2
  %101 = load i8, i8* %100, align 4
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %95, label %103

103:                                              ; preds = %95, %24
  %104 = phi %"struct.absl::cord_internal::CordRep"* [ %14, %24 ], [ %99, %95 ]
  %105 = phi i8 [ %16, %24 ], [ %101, %95 ]
  %106 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %104, i64 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i8 %105, 2
  br i1 %108, label %109, label %115

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %104, i64 1, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %104, i64 1, i32 1
  %113 = bitcast %"class.absl::cord_internal::Refcount"* %112 to %"struct.absl::cord_internal::CordRep"**
  %114 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %113, align 8
  br label %115

115:                                              ; preds = %109, %103
  %116 = phi %"struct.absl::cord_internal::CordRep"* [ %114, %109 ], [ %104, %103 ]
  %117 = phi i64 [ %111, %109 ], [ 0, %103 ]
  %118 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %116, i64 0, i32 2
  %119 = load i8, i8* %118, align 4
  %120 = icmp ugt i8 %119, 3
  br i1 %120, label %121, label %125

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %116, i64 0, i32 3, i64 %117
  %123 = icmp sgt i64 %107, -1
  br i1 %123, label %132, label %124, !prof !2

124:                                              ; preds = %121
  tail call void @llvm.trap() #18
  unreachable

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %116, i64 1
  %127 = bitcast %"struct.absl::cord_internal::CordRep"* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 %117
  %130 = icmp sgt i64 %107, -1
  br i1 %130, label %132, label %131, !prof !2

131:                                              ; preds = %125
  tail call void @llvm.trap() #18
  unreachable

132:                                              ; preds = %125, %121, %25, %18, %7, %93
  %133 = phi i64 [ %90, %93 ], [ %9, %7 ], [ %21, %18 ], [ %30, %25 ], [ %107, %121 ], [ %107, %125 ]
  %134 = phi i8* [ %94, %93 ], [ %2, %7 ], [ %19, %18 ], [ %28, %25 ], [ %122, %121 ], [ %129, %125 ]
  %135 = insertvalue { i8*, i64 } undef, i8* %134, 0
  %136 = insertvalue { i8*, i64 } %135, i64 %133, 1
  ret { i8*, i64 } %136
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4absl4Cord15CompareSlowPathERKS0_mm(%"class.absl::Cord"*, %"class.absl::Cord"* dereferenceable(16), i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %6 = alloca %"class.absl::Cord::ChunkIterator", align 8
  %7 = bitcast %"class.absl::Cord::ChunkIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 2
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 408, i1 false)
  %10 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 2
  %11 = bitcast %"class.absl::Cord"* %0 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #18, !alias.scope !79
  %13 = load i8, i8* %12, align 1, !noalias !79
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %17, align 8, !noalias !79
  %19 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !79
  store i64 %20, i64* %10, align 8, !alias.scope !79
  %21 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %21, align 8, !alias.scope !79
  %22 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %22, align 8, !alias.scope !79
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %5, %"struct.absl::cord_internal::CordRep"* %18) #18
  br label %33

23:                                               ; preds = %4
  %24 = ashr i8 %13, 1
  %25 = sext i8 %24 to i64
  store i64 %25, i64* %10, align 8, !alias.scope !79
  %26 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %26, align 8, !alias.scope !79
  %27 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %27, align 8, !alias.scope !79
  %28 = icmp sgt i8 %13, -1
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %23
  tail call void @llvm.trap() #18
  unreachable

30:                                               ; preds = %23
  %31 = bitcast %"class.absl::Cord::ChunkIterator"* %5 to %"class.absl::Cord"**
  store %"class.absl::Cord"* %0, %"class.absl::Cord"** %31, align 8, !alias.scope !79
  %32 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 0, i32 1
  store i64 %25, i64* %32, align 8, !alias.scope !79
  br label %33

33:                                               ; preds = %16, %30
  %34 = bitcast %"class.absl::Cord::ChunkIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 2
  %36 = bitcast i64* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 408, i1 false)
  %37 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 2
  %38 = bitcast %"class.absl::Cord"* %1 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #18, !alias.scope !82
  %40 = load i8, i8* %39, align 1, !noalias !82
  %41 = and i8 %40, 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.absl::Cord", %"class.absl::Cord"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %44, align 8, !noalias !82
  %46 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %45, i64 0, i32 0
  %47 = load i64, i64* %46, align 8, !noalias !82
  store i64 %47, i64* %37, align 8, !alias.scope !82
  %48 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %48, align 8, !alias.scope !82
  %49 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %49, align 8, !alias.scope !82
  call void @_ZN4absl4Cord13ChunkIterator8InitTreeEPNS_13cord_internal7CordRepE(%"class.absl::Cord::ChunkIterator"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %45) #18
  %50 = load i64, i64* %37, align 8
  %51 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  br label %65

55:                                               ; preds = %33
  %56 = ashr i8 %40, 1
  %57 = sext i8 %56 to i64
  store i64 %57, i64* %37, align 8, !alias.scope !82
  %58 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 0
  store %"class.absl::cord_internal::CordRepRing"* null, %"class.absl::cord_internal::CordRepRing"** %58, align 8, !alias.scope !82
  %59 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %59, align 8, !alias.scope !82
  %60 = icmp sgt i8 %40, -1
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %55
  call void @llvm.trap() #18
  unreachable

62:                                               ; preds = %55
  %63 = bitcast %"class.absl::Cord::ChunkIterator"* %6 to %"class.absl::Cord"**
  store %"class.absl::Cord"* %1, %"class.absl::Cord"** %63, align 8, !alias.scope !82
  %64 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 1
  store i64 %57, i64* %64, align 8, !alias.scope !82
  br label %65

65:                                               ; preds = %43, %62
  %66 = phi i64 [ %54, %43 ], [ %57, %62 ]
  %67 = phi i8* [ %52, %43 ], [ %38, %62 ]
  %68 = phi i64 [ %50, %43 ], [ %57, %62 ]
  %69 = load i64, i64* %10, align 8
  %70 = icmp eq i64 %69, 0
  %71 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = select i1 %70, i8* null, i8* %72
  %76 = select i1 %70, i64 0, i64 %74
  %77 = icmp eq i64 %68, 0
  %78 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 0, i32 1
  %80 = select i1 %77, i8* null, i8* %67
  %81 = select i1 %77, i64 0, i64 %66
  %82 = icmp ult i64 %76, %2
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %65
  call void @llvm.trap() #18
  unreachable

84:                                               ; preds = %65
  %85 = icmp ult i64 %81, %2
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %84
  call void @llvm.trap() #18
  unreachable

87:                                               ; preds = %84
  %88 = sub i64 %76, %2
  %89 = getelementptr inbounds i8, i8* %75, i64 %2
  %90 = getelementptr inbounds i8, i8* %80, i64 %2
  %91 = sub i64 %81, %2
  %92 = sub i64 %3, %2
  %93 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 3, i32 0
  %94 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 3, i32 1
  %95 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 0
  %96 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 3, i32 1
  br label %97

97:                                               ; preds = %308, %87
  %98 = phi i64 [ %92, %87 ], [ %305, %308 ]
  %99 = phi i8* [ %89, %87 ], [ %309, %308 ]
  %100 = phi i64 [ %88, %87 ], [ %310, %308 ]
  %101 = phi i8* [ %90, %87 ], [ %311, %308 ]
  %102 = phi i64 [ %91, %87 ], [ %312, %308 ]
  %103 = icmp eq i64 %100, 0
  br i1 %103, label %104, label %200

104:                                              ; preds = %97
  %105 = load i64, i64* %10, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %108, !prof !3

107:                                              ; preds = %104
  call void @llvm.trap() #18
  unreachable

108:                                              ; preds = %104
  %109 = load i64, i64* %73, align 8
  %110 = sub i64 %105, %109
  store i64 %110, i64* %10, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %192, label %112

112:                                              ; preds = %108
  %113 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %93, align 8
  %114 = icmp eq %"class.absl::cord_internal::CordRepRing"* %113, null
  br i1 %114, label %193, label %115

115:                                              ; preds = %112
  %116 = load i32, i32* %94, align 8
  %117 = add i32 %116, 1
  %118 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %117, %119
  %121 = select i1 %120, i32 0, i32 %117
  store i32 %121, i32* %94, align 8
  %122 = load i32, i32* %118, align 8
  %123 = zext i32 %122 to i64
  %124 = shl nuw nsw i64 %123, 4
  %125 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %124
  %126 = bitcast i8* %125 to i32*
  %127 = zext i32 %121 to i64
  %128 = getelementptr inbounds i32, i32* %126, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = shl nuw nsw i64 %123, 3
  %132 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 %131
  %133 = bitcast i8* %132 to %"struct.absl::cord_internal::CordRep"**
  %134 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %133, i64 %127
  %135 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %134, align 8
  %136 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %135, i64 0, i32 2
  %137 = load i8, i8* %136, align 4
  %138 = icmp ugt i8 %137, 3
  br i1 %138, label %139, label %141

139:                                              ; preds = %115
  %140 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %135, i64 0, i32 3, i64 0
  br label %165

141:                                              ; preds = %115
  %142 = icmp eq i8 %137, 1
  br i1 %142, label %143, label %147

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %135, i64 1
  %145 = bitcast %"struct.absl::cord_internal::CordRep"* %144 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %165

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %135, i64 1, i32 1
  %149 = bitcast %"class.absl::cord_internal::Refcount"* %148 to %"struct.absl::cord_internal::CordRep"**
  %150 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %149, align 8
  %151 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %150, i64 0, i32 2
  %152 = load i8, i8* %151, align 4
  %153 = icmp eq i8 %152, 1
  br i1 %153, label %156, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %150, i64 0, i32 3, i64 0
  br label %160

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %150, i64 1
  %158 = bitcast %"struct.absl::cord_internal::CordRep"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %156, %154
  %161 = phi i8* [ %155, %154 ], [ %159, %156 ]
  %162 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %135, i64 1, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds i8, i8* %161, i64 %163
  br label %165

165:                                              ; preds = %160, %143, %139
  %166 = phi i8* [ %140, %139 ], [ %146, %143 ], [ %164, %160 ]
  %167 = getelementptr inbounds i8, i8* %166, i64 %130
  %168 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = icmp eq i32 %169, %121
  br i1 %170, label %171, label %173

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 4
  br label %181

173:                                              ; preds = %165
  %174 = icmp eq i32 %121, 0
  %175 = select i1 %174, i32 %122, i32 %121
  %176 = add i32 %175, -1
  %177 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 0
  %178 = bitcast i8* %177 to i64*
  %179 = zext i32 %176 to i64
  %180 = getelementptr inbounds i64, i64* %178, i64 %179
  br label %181

181:                                              ; preds = %173, %171
  %182 = phi i64* [ %172, %171 ], [ %180, %173 ]
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %113, i64 0, i32 5, i64 0
  %185 = bitcast i8* %184 to i64*
  %186 = getelementptr inbounds i64, i64* %185, i64 %127
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %187, %183
  %189 = icmp sgt i64 %188, -1
  br i1 %189, label %191, label %190, !prof !2

190:                                              ; preds = %181
  call void @llvm.trap() #18
  unreachable

191:                                              ; preds = %181
  store i8* %167, i8** %71, align 8
  store i64 %188, i64* %73, align 8
  br label %200

192:                                              ; preds = %108
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #18
  br label %314

193:                                              ; preds = %112
  %194 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %5) #18
  %195 = load i64, i64* %10, align 8
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %314, label %197

197:                                              ; preds = %193
  %198 = load i8*, i8** %71, align 8
  %199 = load i64, i64* %73, align 8
  br label %200

200:                                              ; preds = %191, %197, %97
  %201 = phi i8* [ %99, %97 ], [ %198, %197 ], [ %167, %191 ]
  %202 = phi i64 [ %100, %97 ], [ %199, %197 ], [ %188, %191 ]
  %203 = icmp eq i64 %102, 0
  br i1 %203, label %204, label %300

204:                                              ; preds = %200
  %205 = load i64, i64* %37, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %208, !prof !3

207:                                              ; preds = %204
  call void @llvm.trap() #18
  unreachable

208:                                              ; preds = %204
  %209 = load i64, i64* %79, align 8
  %210 = sub i64 %205, %209
  store i64 %210, i64* %37, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %292, label %212

212:                                              ; preds = %208
  %213 = load %"class.absl::cord_internal::CordRepRing"*, %"class.absl::cord_internal::CordRepRing"** %95, align 8
  %214 = icmp eq %"class.absl::cord_internal::CordRepRing"* %213, null
  br i1 %214, label %293, label %215

215:                                              ; preds = %212
  %216 = load i32, i32* %96, align 8
  %217 = add i32 %216, 1
  %218 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %217, %219
  %221 = select i1 %220, i32 0, i32 %217
  store i32 %221, i32* %96, align 8
  %222 = load i32, i32* %218, align 8
  %223 = zext i32 %222 to i64
  %224 = shl nuw nsw i64 %223, 4
  %225 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 5, i64 %224
  %226 = bitcast i8* %225 to i32*
  %227 = zext i32 %221 to i64
  %228 = getelementptr inbounds i32, i32* %226, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i64
  %231 = shl nuw nsw i64 %223, 3
  %232 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 5, i64 %231
  %233 = bitcast i8* %232 to %"struct.absl::cord_internal::CordRep"**
  %234 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %233, i64 %227
  %235 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %234, align 8
  %236 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %235, i64 0, i32 2
  %237 = load i8, i8* %236, align 4
  %238 = icmp ugt i8 %237, 3
  br i1 %238, label %239, label %241

239:                                              ; preds = %215
  %240 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %235, i64 0, i32 3, i64 0
  br label %265

241:                                              ; preds = %215
  %242 = icmp eq i8 %237, 1
  br i1 %242, label %243, label %247

243:                                              ; preds = %241
  %244 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %235, i64 1
  %245 = bitcast %"struct.absl::cord_internal::CordRep"* %244 to i8**
  %246 = load i8*, i8** %245, align 8
  br label %265

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %235, i64 1, i32 1
  %249 = bitcast %"class.absl::cord_internal::Refcount"* %248 to %"struct.absl::cord_internal::CordRep"**
  %250 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %249, align 8
  %251 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %250, i64 0, i32 2
  %252 = load i8, i8* %251, align 4
  %253 = icmp eq i8 %252, 1
  br i1 %253, label %256, label %254

254:                                              ; preds = %247
  %255 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %250, i64 0, i32 3, i64 0
  br label %260

256:                                              ; preds = %247
  %257 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %250, i64 1
  %258 = bitcast %"struct.absl::cord_internal::CordRep"* %257 to i8**
  %259 = load i8*, i8** %258, align 8
  br label %260

260:                                              ; preds = %256, %254
  %261 = phi i8* [ %255, %254 ], [ %259, %256 ]
  %262 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %235, i64 1, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds i8, i8* %261, i64 %263
  br label %265

265:                                              ; preds = %260, %243, %239
  %266 = phi i8* [ %240, %239 ], [ %246, %243 ], [ %264, %260 ]
  %267 = getelementptr inbounds i8, i8* %266, i64 %230
  %268 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 1
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %269, %221
  br i1 %270, label %271, label %273

271:                                              ; preds = %265
  %272 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 4
  br label %281

273:                                              ; preds = %265
  %274 = icmp eq i32 %221, 0
  %275 = select i1 %274, i32 %222, i32 %221
  %276 = add i32 %275, -1
  %277 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 5, i64 0
  %278 = bitcast i8* %277 to i64*
  %279 = zext i32 %276 to i64
  %280 = getelementptr inbounds i64, i64* %278, i64 %279
  br label %281

281:                                              ; preds = %273, %271
  %282 = phi i64* [ %272, %271 ], [ %280, %273 ]
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %213, i64 0, i32 5, i64 0
  %285 = bitcast i8* %284 to i64*
  %286 = getelementptr inbounds i64, i64* %285, i64 %227
  %287 = load i64, i64* %286, align 8
  %288 = sub i64 %287, %283
  %289 = icmp sgt i64 %288, -1
  br i1 %289, label %291, label %290, !prof !2

290:                                              ; preds = %281
  call void @llvm.trap() #18
  unreachable

291:                                              ; preds = %281
  store i8* %267, i8** %78, align 8
  store i64 %288, i64* %79, align 8
  br label %300

292:                                              ; preds = %208
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #18
  br label %314

293:                                              ; preds = %212
  %294 = call dereferenceable(432) %"class.absl::Cord::ChunkIterator"* @_ZN4absl4Cord13ChunkIterator12AdvanceStackEv(%"class.absl::Cord::ChunkIterator"* nonnull %6) #18
  %295 = load i64, i64* %37, align 8
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %314, label %297

297:                                              ; preds = %293
  %298 = load i8*, i8** %78, align 8
  %299 = load i64, i64* %79, align 8
  br label %300

300:                                              ; preds = %291, %297, %200
  %301 = phi i8* [ %101, %200 ], [ %298, %297 ], [ %267, %291 ]
  %302 = phi i64 [ %102, %200 ], [ %299, %297 ], [ %288, %291 ]
  %303 = icmp ult i64 %302, %202
  %304 = select i1 %303, i64 %302, i64 %202
  %305 = sub i64 %98, %304
  %306 = call i32 @memcmp(i8* %201, i8* %301, i64 %304) #21
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %321

308:                                              ; preds = %300
  %309 = getelementptr inbounds i8, i8* %201, i64 %304
  %310 = sub i64 %202, %304
  %311 = getelementptr inbounds i8, i8* %301, i64 %304
  %312 = sub i64 %302, %304
  %313 = icmp eq i64 %305, 0
  br i1 %313, label %321, label %97

314:                                              ; preds = %293, %193, %292, %192
  %315 = phi i64 [ 0, %192 ], [ %202, %292 ], [ 0, %193 ], [ %202, %293 ]
  %316 = icmp eq i64 %102, 0
  %317 = zext i1 %316 to i32
  %318 = icmp eq i64 %315, 0
  %319 = zext i1 %318 to i32
  %320 = sub nsw i32 %317, %319
  br label %321

321:                                              ; preds = %308, %300, %314
  %322 = phi i32 [ %320, %314 ], [ %306, %300 ], [ 0, %308 ]
  %323 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load i64, i64* %323, align 8
  %325 = and i64 %324, 1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %6, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %329 = bitcast %"struct.absl::cord_internal::CordRep"*** %328 to i8**
  %330 = load i8*, i8** %329, align 8
  call void @_ZdlPv(i8* %330) #19
  br label %331

331:                                              ; preds = %321, %327
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %34) #18
  %332 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i64, i64* %332, align 8
  %334 = and i64 %333, 1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %340, label %336

336:                                              ; preds = %331
  %337 = getelementptr inbounds %"class.absl::Cord::ChunkIterator", %"class.absl::Cord::ChunkIterator"* %5, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %338 = bitcast %"struct.absl::cord_internal::CordRep"*** %337 to i8**
  %339 = load i8*, i8** %338, align 8
  call void @_ZdlPv(i8* %339) #19
  br label %340

340:                                              ; preds = %331, %336
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %7) #18
  ret i32 %322
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4absl13cord_internal19CordRepExternalImplIZNS_4Cord15FlattenSlowPathEvE3$_2E7ReleaseEPNS0_15CordRepExternalE"(%"struct.absl::cord_internal::CordRepExternal"*) #2 align 2 {
  %2 = icmp eq %"struct.absl::cord_internal::CordRepExternal"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, -1
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %3
  tail call void @llvm.trap() #18
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.absl::cord_internal::CordRepExternal", %"struct.absl::cord_internal::CordRepExternal"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #19
  %11 = bitcast %"struct.absl::cord_internal::CordRepExternal"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #19
  br label %12

12:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.absl::cord_internal::CordRep"** @_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRKS5_EEERS5_DpOT_(%"class.absl::inlined_vector_internal::Storage.34"*, %"struct.absl::cord_internal::CordRep"** dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !85
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<const absl::cord_internal::CordRep *, 47, std::__1::allocator<const absl::cord_internal::CordRep *> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"struct.absl::cord_internal::CordRep"*** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !85
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !85
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 2305843009213693951
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #20
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 94, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = shl i64 %20, 3
  %24 = tail call i8* @_Znwm(i64 %23) #19
  %25 = bitcast i8* %24 to %"struct.absl::cord_internal::CordRep"**
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %22
  %28 = bitcast %"struct.absl::cord_internal::CordRep"** %27 to i64*
  %29 = bitcast %"struct.absl::cord_internal::CordRep"** %1 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %22, 0
  br i1 %31, label %115, label %32

32:                                               ; preds = %19
  %33 = inttoptr i64 %21 to %"struct.absl::cord_internal::CordRep"**
  %34 = inttoptr i64 %21 to i64*
  %35 = add nsw i64 %22, -1
  %36 = and i64 %22, 7
  %37 = icmp ult i64 %35, 7
  br i1 %37, label %97, label %38

38:                                               ; preds = %32
  %39 = sub nsw i64 %22, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"struct.absl::cord_internal::CordRep"** [ %33, %38 ], [ %90, %40 ]
  %42 = phi i64* [ %34, %38 ], [ %92, %40 ]
  %43 = phi i64 [ 0, %38 ], [ %91, %40 ]
  %44 = phi i64 [ %39, %38 ], [ %93, %40 ]
  %45 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %43
  %46 = bitcast %"struct.absl::cord_internal::CordRep"** %45 to i64*
  %47 = load i64, i64* %42, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 1
  %49 = or i64 %43, 1
  %50 = bitcast %"struct.absl::cord_internal::CordRep"** %48 to i64*
  %51 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %49
  %52 = bitcast %"struct.absl::cord_internal::CordRep"** %51 to i64*
  %53 = load i64, i64* %50, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 2
  %55 = or i64 %43, 2
  %56 = bitcast %"struct.absl::cord_internal::CordRep"** %54 to i64*
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %55
  %58 = bitcast %"struct.absl::cord_internal::CordRep"** %57 to i64*
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 3
  %61 = or i64 %43, 3
  %62 = bitcast %"struct.absl::cord_internal::CordRep"** %60 to i64*
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %61
  %64 = bitcast %"struct.absl::cord_internal::CordRep"** %63 to i64*
  %65 = load i64, i64* %62, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 4
  %67 = or i64 %43, 4
  %68 = bitcast %"struct.absl::cord_internal::CordRep"** %66 to i64*
  %69 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %67
  %70 = bitcast %"struct.absl::cord_internal::CordRep"** %69 to i64*
  %71 = load i64, i64* %68, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 5
  %73 = or i64 %43, 5
  %74 = bitcast %"struct.absl::cord_internal::CordRep"** %72 to i64*
  %75 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %73
  %76 = bitcast %"struct.absl::cord_internal::CordRep"** %75 to i64*
  %77 = load i64, i64* %74, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 6
  %79 = or i64 %43, 6
  %80 = bitcast %"struct.absl::cord_internal::CordRep"** %78 to i64*
  %81 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %79
  %82 = bitcast %"struct.absl::cord_internal::CordRep"** %81 to i64*
  %83 = load i64, i64* %80, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 7
  %85 = or i64 %43, 7
  %86 = bitcast %"struct.absl::cord_internal::CordRep"** %84 to i64*
  %87 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %85
  %88 = bitcast %"struct.absl::cord_internal::CordRep"** %87 to i64*
  %89 = load i64, i64* %86, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %41, i64 8
  %91 = add nuw nsw i64 %43, 8
  %92 = bitcast %"struct.absl::cord_internal::CordRep"** %90 to i64*
  %93 = add i64 %44, -8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %40

95:                                               ; preds = %40
  %96 = bitcast %"struct.absl::cord_internal::CordRep"** %90 to i64*
  br label %97

97:                                               ; preds = %95, %32
  %98 = phi %"struct.absl::cord_internal::CordRep"** [ %33, %32 ], [ %90, %95 ]
  %99 = phi i64* [ %34, %32 ], [ %96, %95 ]
  %100 = phi i64 [ 0, %32 ], [ %91, %95 ]
  %101 = icmp eq i64 %36, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %97, %102
  %103 = phi %"struct.absl::cord_internal::CordRep"** [ %110, %102 ], [ %98, %97 ]
  %104 = phi i64* [ %112, %102 ], [ %99, %97 ]
  %105 = phi i64 [ %111, %102 ], [ %100, %97 ]
  %106 = phi i64 [ %113, %102 ], [ %36, %97 ]
  %107 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %25, i64 %105
  %108 = bitcast %"struct.absl::cord_internal::CordRep"** %107 to i64*
  %109 = load i64, i64* %104, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %103, i64 1
  %111 = add nuw nsw i64 %105, 1
  %112 = bitcast %"struct.absl::cord_internal::CordRep"** %110 to i64*
  %113 = add i64 %106, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %102, !llvm.loop !88

115:                                              ; preds = %97, %102, %19
  br i1 %6, label %121, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 1, i32 0, i32 0
  %118 = bitcast %"struct.absl::cord_internal::CordRep"*** %117 to i8**
  %119 = load i8*, i8** %118, align 8
  tail call void @_ZdlPv(i8* %119) #19
  %120 = load i64, i64* %3, align 8
  br label %121

121:                                              ; preds = %116, %115
  %122 = phi i64 [ %120, %116 ], [ %4, %115 ]
  %123 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.absl::cord_internal::CordRep"*** %123 to i64*
  store i64 %26, i64* %124, align 8
  %125 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.34", %"class.absl::inlined_vector_internal::Storage.34"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %125, align 8
  %126 = or i64 %122, 1
  %127 = add i64 %126, 2
  store i64 %127, i64* %3, align 8
  ret %"struct.absl::cord_internal::CordRep"** %27
}

declare extern_weak void @_ZTHN4absl13cord_internal17cordz_next_sampleE() #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4absl4Cord11chunk_beginEv"}
!7 = distinct !{!7, !8, !"_ZNK4absl4Cord10ChunkRange5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4absl4Cord10ChunkRange5beginEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl4Cord11chunk_beginEv"}
!12 = distinct !{!12, !13, !"_ZNK4absl4Cord10ChunkRange5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4absl4Cord10ChunkRange5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!16 = distinct !{!16, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!19 = distinct !{!19, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4absl4Cord11chunk_beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!25 = distinct !{!25, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!28 = distinct !{!28, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!31 = distinct !{!31, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15MakeStorageViewEv: argument 0"}
!34 = distinct !{!34, !"_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15MakeStorageViewEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15MakeStorageViewEv: argument 0"}
!37 = distinct !{!37, !"_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15MakeStorageViewEv"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4absl4Cord11chunk_beginEv"}
!41 = distinct !{!41, !42, !"_ZNK4absl4Cord10ChunkRange5beginEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4absl4Cord10ChunkRange5beginEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!45 = distinct !{!45, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!48 = distinct !{!48, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!51 = distinct !{!51, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv: argument 0"}
!54 = distinct !{!54, !"_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4absl4Cord11chunk_beginEv"}
!58 = distinct !{!58, !59, !"_ZNK4absl4Cord10ChunkRange5beginEv: argument 0"}
!59 = distinct !{!59, !"_ZNK4absl4Cord10ChunkRange5beginEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!62 = distinct !{!62, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15MakeStorageViewEv: argument 0"}
!65 = distinct !{!65, !"_ZN4absl23inlined_vector_internal7StorageINS_8SubRangeELm47ENSt3__19allocatorIS2_EEE15MakeStorageViewEv"}
!66 = distinct !{!66, !67}
!67 = !{!"llvm.loop.unroll.disable"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!70 = distinct !{!70, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!71 = distinct !{!71, !67}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!74 = distinct !{!74, !"_ZN4absl23inlined_vector_internal7StorageIPNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!75 = distinct !{!75, !67}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!78 = distinct !{!78, !"_ZNK4absl4Cord11chunk_beginEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!81 = distinct !{!81, !"_ZNK4absl4Cord11chunk_beginEv"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK4absl4Cord11chunk_beginEv: argument 0"}
!84 = distinct !{!84, !"_ZNK4absl4Cord11chunk_beginEv"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv: argument 0"}
!87 = distinct !{!87, !"_ZN4absl23inlined_vector_internal7StorageIPKNS_13cord_internal7CordRepELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv"}
!88 = distinct !{!88, !67}
