; ModuleID = '../../third_party/pdfium/core/fxge/dib/cfx_bitmapstorer.cpp'
source_filename = "../../third_party/pdfium/core/fxge/dib/cfx_bitmapstorer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_BitmapStorer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr" }
%class.ScanlineComposerIface = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.4", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.8", i64 }
%"class.fxcrt::UnownedPtr.8" = type { i32* }

@_ZTV16CFX_BitmapStorer = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_BitmapStorer*)* @_ZN16CFX_BitmapStorerD2Ev to i8*), i8* bitcast (void (%class.CFX_BitmapStorer*)* @_ZN16CFX_BitmapStorerD0Ev to i8*), i8* bitcast (void (%class.CFX_BitmapStorer*, i32, i8*, i8*)* @_ZN16CFX_BitmapStorer15ComposeScanlineEiPKhS1_ to i8*), i8* bitcast (i1 (%class.CFX_BitmapStorer*, i32, i32, i16, %"class.pdfium::span"*)* @_ZN16CFX_BitmapStorer7SetInfoEii12FXDIB_FormatN6pdfium4spanIKjEE to i8*)] }, align 8

@_ZN16CFX_BitmapStorerC1Ev = hidden unnamed_addr alias void (%class.CFX_BitmapStorer*), void (%class.CFX_BitmapStorer*)* @_ZN16CFX_BitmapStorerC2Ev
@_ZN16CFX_BitmapStorerD1Ev = hidden unnamed_addr alias void (%class.CFX_BitmapStorer*), void (%class.CFX_BitmapStorer*)* @_ZN16CFX_BitmapStorerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFX_BitmapStorerC2Ev(%class.CFX_BitmapStorer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16CFX_BitmapStorer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 1
  %4 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_BitmapStorerD2Ev(%class.CFX_BitmapStorer* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16CFX_BitmapStorer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %3, align 8
  %5 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CFX_DIBitmap* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #7
  br label %17

17:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_BitmapStorerD0Ev(%class.CFX_BitmapStorer*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16CFX_BitmapStorer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %3, align 8
  %5 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CFX_DIBitmap* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #7
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = bitcast %class.CFX_BitmapStorer* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16CFX_BitmapStorer6DetachEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_BitmapStorer* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %1, i64 0, i32 1
  %4 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  %5 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_BitmapStorer7ReplaceEON5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_BitmapStorer* nocapture, %"class.fxcrt::RetainPtr"* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.fxcrt::RetainPtr"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %4, align 8
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.CFX_DIBitmap* %8, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0
  %18 = bitcast %class.CFX_DIBitmap* %8 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  tail call void %21(%"class.fxcrt::Retainable"* nonnull %17) #7
  br label %22

22:                                               ; preds = %2, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_BitmapStorer15ComposeScanlineEiPKhS1_(%class.CFX_BitmapStorer* nocapture readonly, i32, i8* nocapture readonly, i8* nocapture readonly) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %7 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %6, i64 0, i32 0
  %8 = bitcast %class.CFX_DIBitmap* %6 to i8* (%class.CFX_DIBBase*, i32)***
  %9 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %8, align 8
  %10 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %9, i64 3
  %11 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %10, align 8
  %12 = tail call i8* %11(%class.CFX_DIBBase* %7, i32 %1) #7
  %13 = icmp eq i8* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %16 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %2, i64 %18, i1 false)
  br label %19

19:                                               ; preds = %4, %14
  %20 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %21 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %20, i64 0, i32 0
  %22 = tail call i8* @_ZN11CFX_DIBBase28GetWritableAlphaMaskScanlineEi(%class.CFX_DIBBase* %21, i32 %1) #7
  %23 = icmp eq i8* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %26 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %25, i64 0, i32 0
  %27 = tail call i32 @_ZNK11CFX_DIBBase17GetAlphaMaskPitchEv(%class.CFX_DIBBase* %26) #7
  %28 = zext i32 %27 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %3, i64 %28, i1 false)
  br label %29

29:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN11CFX_DIBBase28GetWritableAlphaMaskScanlineEi(%class.CFX_DIBBase*, i32) local_unnamed_addr #5

declare i32 @_ZNK11CFX_DIBBase17GetAlphaMaskPitchEv(%class.CFX_DIBBase*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_BitmapStorer7SetInfoEii12FXDIB_FormatN6pdfium4spanIKjEE(%class.CFX_BitmapStorer* nocapture, i32, i32, i16 zeroext, %"class.pdfium::span"* nocapture readonly) unnamed_addr #1 align 2 {
  %6 = alloca %"class.pdfium::span", align 8
  %7 = tail call i8* @_Znwm(i64 80) #8, !noalias !2
  %8 = bitcast i8* %7 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %8) #7, !noalias !2
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !2
  %14 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %8, i32 %1, i32 %2, i16 zeroext %3) #7
  br i1 %14, label %15, label %40

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = bitcast i8* %7 to %class.CFX_DIBBase*
  %21 = bitcast %"class.pdfium::span"* %6 to i8*
  %22 = bitcast %"class.pdfium::span"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %22, i64 16, i1 false)
  call void @_ZN11CFX_DIBBase10SetPaletteEN6pdfium4spanIKjEE(%class.CFX_DIBBase* nonnull %20, %"class.pdfium::span"* nonnull %6) #7
  br label %23

23:                                               ; preds = %19, %15
  %24 = getelementptr inbounds %class.CFX_BitmapStorer, %class.CFX_BitmapStorer* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %25, align 8
  %27 = bitcast %"class.fxcrt::RetainPtr"* %24 to i64*
  store i64 %9, i64* %27, align 8
  %28 = icmp eq %class.CFX_DIBitmap* %26, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %50

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0
  %36 = bitcast %class.CFX_DIBitmap* %26 to void (%"class.fxcrt::Retainable"*)***
  %37 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, i64 1
  %39 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, align 8
  call void %39(%"class.fxcrt::Retainable"* nonnull %35) #7
  br label %50

40:                                               ; preds = %5
  %41 = load i64, i64* %11, align 8
  %42 = add nsw i64 %41, -1
  store i64 %42, i64* %11, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast i8* %7 to %"class.fxcrt::Retainable"*
  %46 = bitcast i8* %7 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  tail call void %49(%"class.fxcrt::Retainable"* nonnull %45) #7
  br label %50

50:                                               ; preds = %34, %29, %23, %40, %44
  %51 = phi i1 [ false, %40 ], [ false, %44 ], [ true, %23 ], [ true, %29 ], [ true, %34 ]
  ret i1 %51
}

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #5

declare void @_ZN11CFX_DIBBase10SetPaletteEN6pdfium4spanIKjEE(%class.CFX_DIBBase*, %"class.pdfium::span"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
