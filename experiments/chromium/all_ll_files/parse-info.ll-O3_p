; ModuleID = '../../v8/src/parsing/parse-info.cc'
source_filename = "../../v8/src/parsing/parse-info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.31", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.659", %"class.std::__1::unique_ptr.680", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.690", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.774", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.787", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.797", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.808", %"struct.std::__1::atomic.184", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.883", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1002"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1011", i32, i8, i8, i32, i32, %"class.std::__1::vector.1017", %"class.std::__1::vector.1017", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1024", i64, %"class.std::__1::unordered_map.1025", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.555", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.192", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1052", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1090", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1124", %"class.std::__1::vector.1128", %"class.std::__1::vector.1128", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.25", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.29", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.29" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.60", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.193", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.197", %"class.std::__1::vector.197", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.std::__1::unique_ptr.482", %"class.std::__1::unique_ptr.488", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.506", %"class.std::__1::shared_ptr.512", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.517", %"class.std::__1::unique_ptr.543", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.549", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.562", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.362", i8, [7 x i8], %"class.std::__1::unordered_map.568", %"class.std::__1::unordered_map.594", %"class.std::__1::unordered_map.568", %"class.std::__1::unordered_map.618", %"class.std::__1::vector.646", i8, %"class.std::__1::unique_ptr.653", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.52", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.55", %"struct.std::__1::atomic.55", %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.135" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.129" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.69", %"class.std::__1::vector.69", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.71" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.76" }
%"class.std::__1::__hash_table.76" = type <{ %"class.std::__1::unique_ptr.77", %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.94", [4 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.80"** }
%"struct.std::__1::__hash_node_base.80" = type { %"struct.std::__1::__hash_node_base.80"* }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__bucket_list_deallocator.82" }
%"class.std::__1::__bucket_list_deallocator.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base.80" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.55", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.110"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.118", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.55", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.55", %"struct.std::__1::atomic.99", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl.101" }
%"struct.std::__1::__cxx_atomic_impl.101" = type { %"struct.std::__1::__cxx_atomic_base_impl.102" }
%"struct.std::__1::__cxx_atomic_base_impl.102" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.103" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.105" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.110" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.122", i8, [7 x i8] }>
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { i64*, i64*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"struct.std::__1::pair.137"*, %"struct.std::__1::pair.137"*, %"class.std::__1::__compressed_pair.138" }
%"struct.std::__1::pair.137" = type { i32, i64 }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::pair.137"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.143" }
%"class.std::__1::unordered_map.143" = type { %"class.std::__1::__hash_table.144" }
%"class.std::__1::__hash_table.144" = type <{ %"class.std::__1::unique_ptr.145", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147", %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base.148"** }
%"struct.std::__1::__hash_node_base.148" = type { %"struct.std::__1::__hash_node_base.148"* }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.std::__1::__bucket_list_deallocator.150" }
%"class.std::__1::__bucket_list_deallocator.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base.148" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.171", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.173" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1057", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.506", %"class.std::__1::vector.1073", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1057" = type { %"struct.std::__1::__atomic_base.1058" }
%"struct.std::__1::__atomic_base.1058" = type { %"struct.std::__1::__cxx_atomic_impl.1059" }
%"struct.std::__1::__cxx_atomic_impl.1059" = type { %"struct.std::__1::__cxx_atomic_base_impl.1060" }
%"struct.std::__1::__cxx_atomic_base_impl.1060" = type { i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.767" }
%"class.std::__1::vector.767" = type { %"class.std::__1::__vector_base.768" }
%"class.std::__1::__vector_base.768" = type { i64**, i64**, %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { i64** }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.767", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1073" = type { %"class.std::__1::__vector_base.1074" }
%"class.std::__1::__vector_base.1074" = type { %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"*, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type opaque
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.184", %"struct.std::__1::atomic.188", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.192" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.199" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.312", %"class.std::__1::vector.312", %"class.std::__1::vector.312", %"class.std::__1::vector.319", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.213", %"class.std::__1::vector.214", %"class.std::__1::vector.221", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.213" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.216" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"class.std::__1::unique_ptr.223"*, %"class.std::__1::unique_ptr.223"*, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::unique_ptr.223" = type opaque
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.std::__1::unique_ptr.223"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.231", %"class.v8::internal::Worklist.231", %"class.v8::internal::Worklist.231", %"class.v8::internal::Worklist.233", %"class.v8::internal::Worklist.235", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.239", %"class.v8::internal::Worklist.241", %"class.v8::internal::Worklist.243" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.229" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.231" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.233" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.235" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.237" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.239" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.241" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.243" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.245", i8, i64 }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.261" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.213"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.261" = type { %"class.std::__1::__hash_table.262" }
%"class.std::__1::__hash_table.262" = type <{ %"class.std::__1::unique_ptr.263", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.281", [4 x i8] }>
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265", %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::__hash_node_base.266"** }
%"struct.std::__1::__hash_node_base.266" = type { %"struct.std::__1::__hash_node_base.266"* }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.std::__1::__bucket_list_deallocator.268" }
%"class.std::__1::__bucket_list_deallocator.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.std::__1::__hash_node_base.266" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.288" }
%"class.std::__1::unordered_map.288" = type { %"class.std::__1::__hash_table.289" }
%"class.std::__1::__hash_table.289" = type <{ %"class.std::__1::unique_ptr.290", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.308", [4 x i8] }>
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.293"** }
%"struct.std::__1::__hash_node_base.293" = type { %"struct.std::__1::__hash_node_base.293"* }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::__bucket_list_deallocator.295" }
%"class.std::__1::__bucket_list_deallocator.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.293" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"struct.std::__1::pair.321"*, %"struct.std::__1::pair.321"*, %"class.std::__1::__compressed_pair.322" }
%"struct.std::__1::pair.321" = type opaque
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::pair.321"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.327", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.312"], [3 x %"class.std::__1::vector.312"], i8, %"struct.std::__1::atomic.184", [6 x i8], %"class.std::__1::vector.312", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.337"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.312", %"class.std::__1::vector.312", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.337" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.362", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.355"], %"class.std::__1::unique_ptr.327" }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.394", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.398", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.403" }
%"struct.std::__1::atomic.394" = type { %"struct.std::__1::__atomic_base.395" }
%"struct.std::__1::__atomic_base.395" = type { %"struct.std::__1::__cxx_atomic_impl.396" }
%"struct.std::__1::__cxx_atomic_impl.396" = type { %"struct.std::__1::__cxx_atomic_base_impl.397" }
%"struct.std::__1::__cxx_atomic_base_impl.397" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.398" = type { %"struct.std::__1::__atomic_base.399" }
%"struct.std::__1::__atomic_base.399" = type { %"struct.std::__1::__cxx_atomic_impl.400" }
%"struct.std::__1::__cxx_atomic_impl.400" = type { %"struct.std::__1::__cxx_atomic_base_impl.401" }
%"struct.std::__1::__cxx_atomic_base_impl.401" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.327", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.184", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.433", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.433" = type { %"class.std::__1::__hash_table.434" }
%"class.std::__1::__hash_table.434" = type <{ %"class.std::__1::unique_ptr.435", %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.453", [4 x i8] }>
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437", %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.std::__1::__hash_node_base.438"** }
%"struct.std::__1::__hash_node_base.438" = type { %"struct.std::__1::__hash_node_base.438"* }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::__bucket_list_deallocator.440" }
%"class.std::__1::__bucket_list_deallocator.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::__hash_node_base.438" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.469" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.512" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.513", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.513" = type { %"struct.std::__1::__atomic_base.514" }
%"struct.std::__1::__atomic_base.514" = type { %"struct.std::__1::__cxx_atomic_impl.515" }
%"struct.std::__1::__cxx_atomic_impl.515" = type { %"struct.std::__1::__cxx_atomic_base_impl.516" }
%"struct.std::__1::__cxx_atomic_base_impl.516" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.517" = type { %"class.std::__1::__hash_table.518" }
%"class.std::__1::__hash_table.518" = type <{ %"class.std::__1::unique_ptr.519", %"class.std::__1::__compressed_pair.529", %"class.std::__1::__compressed_pair.534", %"class.std::__1::__compressed_pair.537", [4 x i8] }>
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521", %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"struct.std::__1::__hash_node_base.522"** }
%"struct.std::__1::__hash_node_base.522" = type { %"struct.std::__1::__hash_node_base.522"* }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.std::__1::__bucket_list_deallocator.524" }
%"class.std::__1::__bucket_list_deallocator.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"struct.std::__1::__hash_node_base.522" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.555", %"class.std::__1::vector.555" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.362" = type { %"class.std::__1::__hash_table.363" }
%"class.std::__1::__hash_table.363" = type <{ %"class.std::__1::unique_ptr.364", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.383", [4 x i8] }>
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366", %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::__hash_node_base.367"** }
%"struct.std::__1::__hash_node_base.367" = type { %"struct.std::__1::__hash_node_base.367"* }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::__bucket_list_deallocator.369" }
%"class.std::__1::__bucket_list_deallocator.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.367" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.594" = type { %"class.std::__1::__hash_table.595" }
%"class.std::__1::__hash_table.595" = type <{ %"class.std::__1::unique_ptr.596", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.614", [4 x i8] }>
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598", %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.599"** }
%"struct.std::__1::__hash_node_base.599" = type { %"struct.std::__1::__hash_node_base.599"* }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.std::__1::__bucket_list_deallocator.601" }
%"class.std::__1::__bucket_list_deallocator.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"struct.std::__1::__hash_node_base.599" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.568" = type { %"class.std::__1::__hash_table.569" }
%"class.std::__1::__hash_table.569" = type <{ %"class.std::__1::unique_ptr.570", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.585", %"class.std::__1::__compressed_pair.588", [4 x i8] }>
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572", %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"struct.std::__1::__hash_node_base.573"** }
%"struct.std::__1::__hash_node_base.573" = type { %"struct.std::__1::__hash_node_base.573"* }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.std::__1::__bucket_list_deallocator.575" }
%"class.std::__1::__bucket_list_deallocator.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::__hash_node_base.573" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.618" = type { %"class.std::__1::__hash_table.619" }
%"class.std::__1::__hash_table.619" = type <{ %"class.std::__1::unique_ptr.620", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.635", %"class.std::__1::__compressed_pair.640", [4 x i8] }>
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622", %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.std::__1::__hash_node_base.623"** }
%"struct.std::__1::__hash_node_base.623" = type { %"struct.std::__1::__hash_node_base.623"* }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.std::__1::__bucket_list_deallocator.625" }
%"class.std::__1::__bucket_list_deallocator.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::__hash_node_base.623" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.646" = type { %"class.std::__1::__vector_base.647" }
%"class.std::__1::__vector_base.647" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.648" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.555" }
%"class.std::__1::shared_ptr.659" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.171", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.674" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.663" }
%"class.std::__1::vector.663" = type { %"class.std::__1::__vector_base.664" }
%"class.std::__1::__vector_base.664" = type { %"class.std::__1::unique_ptr.665"*, %"class.std::__1::unique_ptr.665"*, %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.std::__1::unique_ptr.665"* }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.683", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.683" = type { %"struct.std::__1::__atomic_base.684" }
%"struct.std::__1::__atomic_base.684" = type { %"struct.std::__1::__cxx_atomic_impl.685" }
%"struct.std::__1::__cxx_atomic_impl.685" = type { %"struct.std::__1::__cxx_atomic_base_impl.686" }
%"struct.std::__1::__cxx_atomic_base_impl.686" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.690" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.691", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.691" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.692", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"class.std::__1::unique_ptr.694"*, %"class.std::__1::unique_ptr.694"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::unique_ptr.694" = type opaque
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::unique_ptr.694"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.700 }
%union.anon.700 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1135", %"class.std::__1::unique_ptr.1141", %"struct.std::__1::atomic.184", %"class.std::__1::unique_ptr.1147", %"class.std::__1::unique_ptr.1153", %"class.std::__1::unique_ptr.1159", %"class.std::__1::unique_ptr.1165", %"class.std::__1::unique_ptr.1171", %"class.std::__1::set.1177", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.1177" = type { %"class.std::__1::__tree.1178" }
%"class.std::__1::__tree.1178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1179", %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.702" }
%"class.v8::internal::TaggedImpl.702" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.701" }
%"class.v8::internal::TaggedImpl.701" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.703", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.709", %"class.v8::internal::DetachableVector.710", %"class.v8::internal::DetachableVector.709", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.710" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.709" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.711", %"class.std::__1::vector.717", %"class.std::__1::unique_ptr.724", %"class.std::__1::vector.731", %"class.std::__1::unique_ptr.738", i64, %"class.std::__1::vector.744", %"class.std::__1::vector.752", %"class.std::__1::vector.760", i8, i8, i32 }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.717" = type { %"class.std::__1::__vector_base.718" }
%"class.std::__1::__vector_base.718" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.719" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::GlobalHandles::NodeSpace.727"* }
%"class.v8::internal::GlobalHandles::NodeSpace.727" = type opaque
%"class.std::__1::vector.731" = type { %"class.std::__1::__vector_base.732" }
%"class.std::__1::__vector_base.732" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.733" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.744" = type { %"class.std::__1::__vector_base.745" }
%"class.std::__1::__vector_base.745" = type { %"struct.std::__1::pair.746"*, %"struct.std::__1::pair.746"*, %"class.std::__1::__compressed_pair.747" }
%"struct.std::__1::pair.746" = type opaque
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"struct.std::__1::pair.746"* }
%"class.std::__1::vector.752" = type { %"class.std::__1::__vector_base.753" }
%"class.std::__1::__vector_base.753" = type { %"struct.std::__1::pair.754"*, %"struct.std::__1::pair.754"*, %"class.std::__1::__compressed_pair.755" }
%"struct.std::__1::pair.754" = type opaque
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"struct.std::__1::pair.754"* }
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.762" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.767", %"class.std::__1::vector.774" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.781" }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { i32*, i32*, %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.787" = type { %"struct.std::__1::__atomic_base.788" }
%"struct.std::__1::__atomic_base.788" = type { %"struct.std::__1::__cxx_atomic_impl.789" }
%"struct.std::__1::__cxx_atomic_impl.789" = type { %"struct.std::__1::__cxx_atomic_base_impl.790" }
%"struct.std::__1::__cxx_atomic_base_impl.790" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.797" = type { %"struct.std::__1::__atomic_base.798" }
%"struct.std::__1::__atomic_base.798" = type { %"struct.std::__1::__cxx_atomic_impl.799" }
%"struct.std::__1::__cxx_atomic_impl.799" = type { %"struct.std::__1::__cxx_atomic_base_impl.800" }
%"struct.std::__1::__cxx_atomic_base_impl.800" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.804 }
%union.anon.804 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.808" = type { %"class.std::__1::__hash_table.809" }
%"class.std::__1::__hash_table.809" = type <{ %"class.std::__1::unique_ptr.810", %"class.std::__1::__compressed_pair.820", %"class.std::__1::__compressed_pair.825", %"class.std::__1::__compressed_pair.828", [4 x i8] }>
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812", %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"struct.std::__1::__hash_node_base.813"** }
%"struct.std::__1::__hash_node_base.813" = type { %"struct.std::__1::__hash_node_base.813"* }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.std::__1::__bucket_list_deallocator.815" }
%"class.std::__1::__bucket_list_deallocator.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::__hash_node_base.813" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.834", %"class.v8::internal::Handle.840", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.841", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.840" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.841" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.842", %"class.std::__1::vector.848", %"class.std::__1::unique_ptr.856", %"class.std::__1::unique_ptr.862", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.868", %"class.std::__1::vector.874", %"struct.std::__1::pair.882" }
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.848" = type { %"class.std::__1::__vector_base.849" }
%"class.std::__1::__vector_base.849" = type { %"class.std::__1::unique_ptr.850"*, %"class.std::__1::unique_ptr.850"*, %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::unique_ptr.850" = type opaque
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.std::__1::unique_ptr.850"* }
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.868" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.874" = type { %"class.std::__1::__vector_base.875" }
%"class.std::__1::__vector_base.875" = type { %"struct.std::__1::pair.876"*, %"struct.std::__1::pair.876"*, %"class.std::__1::__compressed_pair.877" }
%"struct.std::__1::pair.876" = type opaque
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"struct.std::__1::pair.876"* }
%"struct.std::__1::pair.882" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.30"*, i16, i8*)*, i8* }
%"class.v8::Local.30" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.886", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.886" = type { %"class.std::__1::__hash_table.887" }
%"class.std::__1::__hash_table.887" = type <{ %"class.std::__1::unique_ptr.888", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.907", [4 x i8] }>
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890", %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"struct.std::__1::__hash_node_base.891"** }
%"struct.std::__1::__hash_node_base.891" = type { %"struct.std::__1::__hash_node_base.891"* }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.std::__1::__bucket_list_deallocator.893" }
%"class.std::__1::__bucket_list_deallocator.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::__hash_node_base.891" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1287, i32, [4 x i8] }>
%union.anon.1287 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::WorkerThreadRuntimeCallStats"*, %"class.v8::internal::TimedHistogram"*, %"class.std::__1::shared_ptr.915", %"class.v8::Platform"*, i64, i8, %"class.std::__1::unique_ptr.916", i64, %"class.std::__1::map", %"class.v8::internal::IdentityMap.957", %"class.v8::base::Mutex", i8, i32, %"class.std::__1::unordered_set.958", %"class.std::__1::unordered_set.958", %"struct.v8::internal::CompilerDispatcher::Job"*, %"class.v8::base::ConditionVariable", %"class.v8::base::AtomicValue.990", %"class.v8::base::Semaphore" }
%"class.std::__1::shared_ptr.915" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::Platform" = type { i32 (...)** }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::CancelableTaskManager"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.950" }
%"class.std::__1::__tree.950" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::IdentityMap.957" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::FreeStoreAllocationPolicy", [6 x i8] }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::FreeStoreAllocationPolicy" = type { i8 }
%"class.std::__1::unordered_set.958" = type { %"class.std::__1::__hash_table.959" }
%"class.std::__1::__hash_table.959" = type <{ %"class.std::__1::unique_ptr.960", %"class.std::__1::__compressed_pair.970", %"class.std::__1::__compressed_pair.975", %"class.std::__1::__compressed_pair.979", [4 x i8] }>
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962", %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.std::__1::__hash_node_base.963"** }
%"struct.std::__1::__hash_node_base.963" = type { %"struct.std::__1::__hash_node_base.963"* }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.std::__1::__bucket_list_deallocator.965" }
%"class.std::__1::__bucket_list_deallocator.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"struct.std::__1::__hash_node_base.963" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.v8::internal::CompilerDispatcher::Job" = type <{ %"class.std::__1::unique_ptr.984", %"class.v8::internal::MaybeHandle", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.v8::internal::BackgroundCompileTask"* }
%"class.v8::internal::BackgroundCompileTask" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState", %"class.std::__1::unique_ptr.1234", %"class.std::__1::unique_ptr.1240", %"class.std::__1::forward_list.1246", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1067", %"class.v8::internal::MaybeHandle", %"class.v8::internal::Handle", %"class.v8::internal::IsCompiledScope", %"class.std::__1::vector.1256", %"class.std::__1::vector.1265", i32, i32, i32, i32, %"class.v8::internal::WorkerThreadRuntimeCallStats"*, %"class.v8::internal::TimedHistogram"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1186" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.19, i32, [4 x i8] }>
%union.anon.19 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1189" }
%"class.std::__1::forward_list.1189" = type { %"class.std::__1::__forward_list_base.1190" }
%"class.std::__1::__forward_list_base.1190" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"struct.std::__1::__forward_begin_node.1193" }
%"struct.std::__1::__forward_begin_node.1193" = type { %"struct.std::__1::__forward_list_node.1194"* }
%"struct.std::__1::__forward_list_node.1194" = type { %"struct.std::__1::__forward_begin_node.1193", %"struct.std::__1::pair.1286" }
%"struct.std::__1::pair.1286" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.18", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::DeclarationScope" = type opaque
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.18", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::Handle.18" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"class.v8::internal::ParseInfo"* }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1201", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1213", %"class.std::__1::unique_ptr.1219", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1201" = type { %"class.std::__1::__compressed_pair.1202" }
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.1203" }
%"struct.std::__1::__compressed_pair_elem.1203" = type { %"class.v8::internal::Zone"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1207" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::internal::SourceRangeMap" = type { %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map.1225" }
%"class.std::__1::map.1225" = type { %"class.std::__1::__tree.1226" }
%"class.std::__1::__tree.1226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1227", %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.1240" = type { %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.v8::internal::Parser"* }
%"class.v8::internal::Parser" = type opaque
%"class.std::__1::forward_list.1246" = type { %"class.std::__1::__forward_list_base.1247" }
%"class.std::__1::__forward_list_base.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.std::__1::__forward_begin_node.1250" }
%"struct.std::__1::__forward_begin_node.1250" = type { %"struct.std::__1::__forward_list_node.1251"* }
%"struct.std::__1::__forward_list_node.1251" = type opaque
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::IsCompiledScope" = type <{ %"class.v8::internal::MaybeHandle.1255", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle.1255" = type { i64* }
%"class.std::__1::vector.1256" = type { %"class.std::__1::__vector_base.1257" }
%"class.std::__1::__vector_base.1257" = type { %"class.v8::internal::FinalizeUnoptimizedCompilationData"*, %"class.v8::internal::FinalizeUnoptimizedCompilationData"*, %"class.std::__1::__compressed_pair.1260" }
%"class.v8::internal::FinalizeUnoptimizedCompilationData" = type { %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta", %"class.v8::internal::Handle.1258", %"class.v8::internal::MaybeHandle.1259" }
%"class.v8::internal::Handle.1258" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeHandle.1259" = type { i64* }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.v8::internal::FinalizeUnoptimizedCompilationData"* }
%"class.std::__1::vector.1265" = type { %"class.std::__1::__vector_base.1266" }
%"class.std::__1::__vector_base.1266" = type { %"class.v8::internal::DeferredFinalizationJobData"*, %"class.v8::internal::DeferredFinalizationJobData"*, %"class.std::__1::__compressed_pair.1273" }
%"class.v8::internal::DeferredFinalizationJobData" = type { %"class.v8::internal::Handle.1258", %"class.std::__1::unique_ptr.1267" }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.v8::internal::UnoptimizedCompilationJob"* }
%"class.v8::internal::UnoptimizedCompilationJob" = type { %"class.v8::internal::CompilationJob", i64, %"class.v8::internal::ParseInfo"*, %"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta" }
%"class.v8::internal::CompilationJob" = type { i32 (...)**, i32, %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::UnoptimizedCompilationInfo" = type opaque
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"class.v8::internal::DeferredFinalizationJobData"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.943, %union.anon.945, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.943 = type { i64 }
%union.anon.945 = type { i64 }
%"class.v8::base::AtomicValue.990" = type { i64 }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.997" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.991"**, %"struct.std::__1::pair.991"**, %"struct.std::__1::pair.991"**, %"class.std::__1::__compressed_pair.992" }
%"struct.std::__1::pair.991" = type opaque
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::pair.991"** }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1002" = type { %"class.std::__1::__vector_base.1003" }
%"class.std::__1::__vector_base.1003" = type { %"class.v8::internal::Handle.1004"*, %"class.v8::internal::Handle.1004"*, %"class.std::__1::__compressed_pair.1005" }
%"class.v8::internal::Handle.1004" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.v8::internal::Handle.1004"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.1010", [128 x i8] }
%"class.v8::internal::Vector.1010" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.792", i32, %"class.v8::Local.30" }
%"class.v8::Local.792" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1017" = type { %"class.std::__1::__vector_base.1018" }
%"class.std::__1::__vector_base.1018" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1024" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1025" = type { %"class.std::__1::__hash_table.1026" }
%"class.std::__1::__hash_table.1026" = type <{ %"class.std::__1::unique_ptr.1027", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1042", %"class.std::__1::__compressed_pair.1045", [4 x i8] }>
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029", %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::__hash_node_base.1030"** }
%"struct.std::__1::__hash_node_base.1030" = type { %"struct.std::__1::__hash_node_base.1030"* }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"class.std::__1::__bucket_list_deallocator.1032" }
%"class.std::__1::__bucket_list_deallocator.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::__hash_node_base.1030" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.555" = type { %"class.std::__1::__vector_base.556" }
%"class.std::__1::__vector_base.556" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.192" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.915", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1049", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1050", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::weak_ptr.1049" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1050" = type { %"class.v8::PersistentBase.1051" }
%"class.v8::PersistentBase.1051" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.919", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.919" = type { %"class.std::__1::__hash_table.920" }
%"class.std::__1::__hash_table.920" = type <{ %"class.std::__1::unique_ptr.921", %"class.std::__1::__compressed_pair.931", %"class.std::__1::__compressed_pair.936", %"class.std::__1::__compressed_pair.939", [4 x i8] }>
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923", %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.924"** }
%"struct.std::__1::__hash_node_base.924" = type { %"struct.std::__1::__hash_node_base.924"* }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.std::__1::__bucket_list_deallocator.926" }
%"class.std::__1::__bucket_list_deallocator.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.924" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1081", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.793", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.793" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1098" }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1118", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1124" = type { %"struct.std::__1::__atomic_base.1125" }
%"struct.std::__1::__atomic_base.1125" = type { %"struct.std::__1::__cxx_atomic_impl.1126" }
%"struct.std::__1::__cxx_atomic_impl.1126" = type { %"struct.std::__1::__cxx_atomic_base_impl.1127" }
%"struct.std::__1::__cxx_atomic_base_impl.1127" = type { %"class.std::__1::vector.1128"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1055" = type { i8 }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackMetadata" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal9ParseInfo12CreateScriptINS0_7IsolateEEENS0_6HandleINS0_6ScriptEEEPT_NS4_INS0_6StringEEENS0_11MaybeHandleINS0_10FixedArrayEEENS_19ScriptOriginOptionsENS0_11NativesFlagE = comdat any

$_ZN2v88internal9ParseInfo12CreateScriptINS0_12LocalIsolateEEENS0_6HandleINS0_6ScriptEEEPT_NS4_INS0_6StringEEENS0_11MaybeHandleINS0_10FixedArrayEEENS_19ScriptOriginOptionsENS0_11NativesFlagE = comdat any

@_ZN2v88internal15FLAG_always_optE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal23FLAG_prepare_always_optE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal25FLAG_allow_natives_syntaxE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal9FLAG_lazyE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal33FLAG_enable_lazy_source_positionsE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal28FLAG_harmony_top_level_awaitE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [12 x i8] c"parser-zone\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

@_ZN2v88internal23UnoptimizedCompileFlagsC1EPNS0_7IsolateEi = hidden unnamed_addr alias void (%"class.v8::internal::UnoptimizedCompileFlags"*, %"class.v8::internal::Isolate"*, i32), void (%"class.v8::internal::UnoptimizedCompileFlags"*, %"class.v8::internal::Isolate"*, i32)* @_ZN2v88internal23UnoptimizedCompileFlagsC2EPNS0_7IsolateEi
@_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal23UnoptimizedCompileStateC2EPNS0_7IsolateE
@_ZN2v88internal23UnoptimizedCompileStateC1ERKS1_ = hidden unnamed_addr alias void (%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"*), void (%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"*)* @_ZN2v88internal23UnoptimizedCompileStateC2ERKS1_
@_ZN2v88internal9ParseInfoC1ENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE = hidden unnamed_addr alias void (%"class.v8::internal::ParseInfo"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*), void (%"class.v8::internal::ParseInfo"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*)* @_ZN2v88internal9ParseInfoC2ENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE
@_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE = hidden unnamed_addr alias void (%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*), void (%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*)* @_ZN2v88internal9ParseInfoC2EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE
@_ZN2v88internal9ParseInfoD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::ParseInfo"*), void (%"class.v8::internal::ParseInfo"*)* @_ZN2v88internal9ParseInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9ParseInfo12CreateScriptINS0_7IsolateEEENS0_6HandleINS0_6ScriptEEEPT_NS4_INS0_6StringEEENS0_11MaybeHandleINS0_10FixedArrayEEENS_19ScriptOriginOptionsENS0_11NativesFlagE(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*, i64*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %8 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase"* %7, i64* %2, i32 %9) #11
  switch i32 %5, label %17 [
    i32 1, label %12
    i32 2, label %11
  ]

11:                                               ; preds = %6
  br label %12

12:                                               ; preds = %6, %11
  %13 = phi i32 [ 8, %11 ], [ 2, %6 ]
  %14 = load i64, i64* %10, align 8
  %15 = add i64 %14, 23
  %16 = inttoptr i64 %15 to i32*
  store atomic volatile i32 %13, i32* %16 monotonic, align 4
  br label %17

17:                                               ; preds = %12, %6
  %18 = load i64, i64* %10, align 8
  %19 = add i64 %18, 47
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -242
  %23 = shl i32 %4, 4
  %24 = or i32 %22, %23
  store atomic volatile i32 %24, i32* %20 monotonic, align 4
  %25 = load i64, i64* %10, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = add i64 %25, 47
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -10
  %32 = lshr i32 %27, 17
  %33 = and i32 %32, 8
  %34 = or i32 %31, %33
  store atomic volatile i32 %34, i32* %29 monotonic, align 4
  %35 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 4
  br i1 %37, label %38, label %72

38:                                               ; preds = %17
  %39 = load i64, i64* %10, align 8
  %40 = icmp eq i64* %3, null
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

42:                                               ; preds = %38
  %43 = load i64, i64* %3, align 8
  %44 = add i64 %39, 35
  %45 = inttoptr i64 %44 to i32*
  %46 = trunc i64 %43 to i32
  store atomic volatile i32 %46, i32* %45 monotonic, align 4
  %47 = and i64 %43, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %83, label %49

49:                                               ; preds = %42
  %50 = and i64 %39, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 262144
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = or i64 %50, 16
  %58 = inttoptr i64 %57 to %"class.v8::internal::Heap"**
  %59 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %58, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %59, i64 %39, i64 %44, i64 %43) #11
  br label %60

60:                                               ; preds = %56, %49
  %61 = and i64 %43, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 24
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %60
  %68 = load i64, i64* %52, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %67
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %39, i64 %44, i64 %43) #11
  br label %83

72:                                               ; preds = %17
  %73 = load i32, i32* %26, align 4
  %74 = and i32 %73, 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = load i64, i64* %10, align 8
  %78 = add i64 %77, 47
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, -4
  %82 = or i32 %81, 2
  store atomic volatile i32 %82, i32* %79 monotonic, align 4
  br label %83

83:                                               ; preds = %72, %71, %67, %60, %42, %76
  %84 = load i64, i64* %10, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 35
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %83
  %93 = or i64 %85, %89
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %85, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  br label %102

102:                                              ; preds = %83, %92
  ret i64* %10
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase"*, i64*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfo38CheckFlagsForToplevelCompileFromScriptENS0_6ScriptEb(%"class.v8::internal::ParseInfo"* nocapture readnone, i64, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = and i64 %1, -4294967296
  %5 = add i64 %1, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %3
  %12 = or i64 %4, %8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  ret void

21:                                               ; preds = %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9ParseInfo12CreateScriptINS0_12LocalIsolateEEENS0_6HandleINS0_6ScriptEEEPT_NS4_INS0_6StringEEENS0_11MaybeHandleINS0_10FixedArrayEEENS_19ScriptOriginOptionsENS0_11NativesFlagE(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::LocalIsolate"*, i64*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1055"*
  %8 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase.1055"* %7, i64* %2, i32 %9) #11
  switch i32 %5, label %17 [
    i32 1, label %12
    i32 2, label %11
  ]

11:                                               ; preds = %6
  br label %12

12:                                               ; preds = %6, %11
  %13 = phi i32 [ 8, %11 ], [ 2, %6 ]
  %14 = load i64, i64* %10, align 8
  %15 = add i64 %14, 23
  %16 = inttoptr i64 %15 to i32*
  store atomic volatile i32 %13, i32* %16 monotonic, align 4
  br label %17

17:                                               ; preds = %12, %6
  %18 = load i64, i64* %10, align 8
  %19 = add i64 %18, 47
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -242
  %23 = shl i32 %4, 4
  %24 = or i32 %22, %23
  store atomic volatile i32 %24, i32* %20 monotonic, align 4
  %25 = load i64, i64* %10, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = add i64 %25, 47
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -10
  %32 = lshr i32 %27, 17
  %33 = and i32 %32, 8
  %34 = or i32 %31, %33
  store atomic volatile i32 %34, i32* %29 monotonic, align 4
  %35 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 4
  br i1 %37, label %38, label %72

38:                                               ; preds = %17
  %39 = load i64, i64* %10, align 8
  %40 = icmp eq i64* %3, null
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

42:                                               ; preds = %38
  %43 = load i64, i64* %3, align 8
  %44 = add i64 %39, 35
  %45 = inttoptr i64 %44 to i32*
  %46 = trunc i64 %43 to i32
  store atomic volatile i32 %46, i32* %45 monotonic, align 4
  %47 = and i64 %43, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %83, label %49

49:                                               ; preds = %42
  %50 = and i64 %39, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 262144
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = or i64 %50, 16
  %58 = inttoptr i64 %57 to %"class.v8::internal::Heap"**
  %59 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %58, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %59, i64 %39, i64 %44, i64 %43) #11
  br label %60

60:                                               ; preds = %56, %49
  %61 = and i64 %43, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 24
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %60
  %68 = load i64, i64* %52, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %67
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %39, i64 %44, i64 %43) #11
  br label %83

72:                                               ; preds = %17
  %73 = load i32, i32* %26, align 4
  %74 = and i32 %73, 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = load i64, i64* %10, align 8
  %78 = add i64 %77, 47
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, -4
  %82 = or i32 %81, 2
  store atomic volatile i32 %82, i32* %79 monotonic, align 4
  br label %83

83:                                               ; preds = %72, %71, %67, %60, %42, %76
  %84 = load i64, i64* %10, align 8
  %85 = tail call zeroext i1 @_ZNK2v88internal12LocalIsolate26is_collecting_type_profileEv(%"class.v8::internal::LocalIsolate"* %1) #11
  %86 = and i64 %84, -4294967296
  %87 = add i64 %84, 35
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %83
  %94 = or i64 %86, %90
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %86, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  br label %103

103:                                              ; preds = %83, %93
  ret i64* %10
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewScriptWithIdENS0_6HandleINS0_19PrimitiveHeapObjectEEEi(%"class.v8::internal::FactoryBase.1055"*, i64*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal12LocalIsolate26is_collecting_type_profileEv(%"class.v8::internal::LocalIsolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23UnoptimizedCompileFlagsC2EPNS0_7IsolateEi(%"class.v8::internal::UnoptimizedCompileFlags"* nocapture, %"class.v8::internal::Isolate"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::UnoptimizedCompileFlags"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::UnoptimizedCompileFlags"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::UnoptimizedCompileFlags"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::UnoptimizedCompileFlags"* %0, i64 0, i32 3
  store i8 2, i8* %7, align 1
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 109
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  %11 = zext i1 %10 to i32
  %12 = shl nuw nsw i32 %11, 8
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 54, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = icmp ne i32 %14, 0
  %16 = zext i1 %15 to i32
  %17 = shl nuw nsw i32 %16, 9
  %18 = or i32 %17, %12
  store i32 %18, i32* %4, align 4
  %19 = load atomic i32, i32* %13 monotonic, align 4
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %26, label %21

21:                                               ; preds = %3
  %22 = load atomic i32, i32* %13 monotonic, align 4
  %23 = icmp eq i32 %22, 4
  %24 = zext i1 %23 to i32
  %25 = shl nuw nsw i32 %24, 10
  br label %26

26:                                               ; preds = %3, %21
  %27 = phi i32 [ 1024, %3 ], [ %25, %21 ]
  %28 = or i32 %27, %18
  store i32 %28, i32* %4, align 4
  %29 = load i8, i8* @_ZN2v88internal15FLAG_always_optE, align 1, !range !3
  %30 = load i8, i8* @_ZN2v88internal23FLAG_prepare_always_optE, align 1
  %31 = and i8 %30, 1
  %32 = or i8 %31, %29
  %33 = and i32 %28, -33024
  %34 = zext i8 %32 to i32
  %35 = shl nuw nsw i32 %34, 15
  %36 = or i32 %35, %33
  store i32 %36, i32* %4, align 4
  %37 = load i8, i8* @_ZN2v88internal25FLAG_allow_natives_syntaxE, align 1, !range !3
  %38 = and i32 %36, -65792
  %39 = zext i8 %37 to i32
  %40 = shl nuw nsw i32 %39, 16
  %41 = or i32 %38, %40
  store i32 %41, i32* %4, align 4
  %42 = load i8, i8* @_ZN2v88internal9FLAG_lazyE, align 1, !range !3
  %43 = and i32 %41, -131328
  %44 = zext i8 %42 to i32
  %45 = shl nuw nsw i32 %44, 17
  %46 = or i32 %43, %45
  store i32 %46, i32* %4, align 4
  %47 = load i8, i8* @_ZN2v88internal33FLAG_enable_lazy_source_positionsE, align 1, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %26
  %50 = tail call zeroext i1 @_ZNK2v88internal7Isolate34NeedsDetailedOptimizedCodeLineInfoEv(%"class.v8::internal::Isolate"* %1) #11
  %51 = zext i1 %50 to i32
  %52 = shl nuw nsw i32 %51, 18
  %53 = load i32, i32* %4, align 4
  br label %54

54:                                               ; preds = %26, %49
  %55 = phi i32 [ %46, %26 ], [ %53, %49 ]
  %56 = phi i32 [ 262144, %26 ], [ %52, %49 ]
  %57 = and i32 %55, -262145
  %58 = or i32 %57, %56
  store i32 %58, i32* %4, align 4
  %59 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !3
  %60 = and i32 %58, -524289
  %61 = zext i8 %59 to i32
  %62 = shl nuw nsw i32 %61, 19
  %63 = or i32 %62, %60
  store i32 %63, i32* %4, align 4
  ret void
}

declare zeroext i1 @_ZNK2v88internal7Isolate34NeedsDetailedOptimizedCodeLineInfoEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags18ForFunctionCompileEPNS0_7IsolateENS0_18SharedFunctionInfoE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Script", align 8
  %4 = alloca %"class.v8::internal::Script", align 8
  %5 = alloca %"class.v8::internal::FeedbackMetadata", align 8
  %6 = bitcast %"class.v8::internal::Script"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = and i64 %1, -4294967296
  %8 = add i64 %1, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 100
  br i1 %21, label %22, label %28

22:                                               ; preds = %2
  %23 = add i64 %12, 11
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %7, %26
  br label %28

28:                                               ; preds = %2, %22
  %29 = phi i64 [ %27, %22 ], [ %12, %2 ]
  %30 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = add i64 %29, 31
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = ashr i32 %33, 1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 109
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 54, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  %40 = shl nuw nsw i32 %39, 9
  %41 = load atomic i32, i32* %36 monotonic, align 4
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %48, label %43

43:                                               ; preds = %28
  %44 = load atomic i32, i32* %36 monotonic, align 4
  %45 = icmp eq i32 %44, 4
  %46 = zext i1 %45 to i32
  %47 = shl nuw nsw i32 %46, 10
  br label %48

48:                                               ; preds = %43, %28
  %49 = phi i32 [ 1024, %28 ], [ %47, %43 ]
  %50 = load i8, i8* @_ZN2v88internal15FLAG_always_optE, align 1, !range !3
  %51 = load i8, i8* @_ZN2v88internal23FLAG_prepare_always_optE, align 1
  %52 = and i8 %51, 1
  %53 = or i8 %52, %50
  %54 = zext i8 %53 to i32
  %55 = shl nuw nsw i32 %54, 15
  %56 = load i8, i8* @_ZN2v88internal25FLAG_allow_natives_syntaxE, align 1, !range !3
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 16
  %59 = load i8, i8* @_ZN2v88internal9FLAG_lazyE, align 1, !range !3
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 17
  %62 = load i8, i8* @_ZN2v88internal33FLAG_enable_lazy_source_positionsE, align 1, !range !3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %48
  %65 = tail call zeroext i1 @_ZNK2v88internal7Isolate34NeedsDetailedOptimizedCodeLineInfoEv(%"class.v8::internal::Isolate"* %0) #11
  %66 = zext i1 %65 to i32
  %67 = shl nuw nsw i32 %66, 18
  br label %68

68:                                               ; preds = %48, %64
  %69 = phi i32 [ 262144, %48 ], [ %67, %64 ]
  %70 = or i32 %40, %49
  %71 = or i32 %70, %58
  %72 = or i32 %71, %55
  %73 = or i32 %72, %61
  %74 = or i32 %73, %69
  %75 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !3
  %76 = and i32 %74, -1604974
  %77 = zext i8 %75 to i32
  %78 = shl nuw nsw i32 %77, 19
  %79 = add i64 %1, 27
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = lshr i32 %81, 3
  %83 = and i32 %82, 8
  %84 = load atomic i32, i32* %80 monotonic, align 4
  %85 = and i32 %84, 31
  %86 = load atomic i32, i32* %80 monotonic, align 4
  %87 = load atomic i32, i32* %80 monotonic, align 4
  %88 = lshr i32 %87, 10
  %89 = and i32 %88, 8192
  %90 = add i64 %1, 26
  %91 = inttoptr i64 %90 to i8*
  %92 = load i8, i8* %91, align 1
  %93 = and i8 %92, 1
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 12
  %96 = lshr i8 %92, 1
  %97 = and i8 %96, 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw nsw i32 %98, 14
  %100 = load atomic i32, i32* %80 monotonic, align 4
  %101 = lshr i32 %100, 27
  %102 = and i32 %101, 1
  %103 = bitcast %"class.v8::internal::Script"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  %104 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %29, i64* %104, align 8
  %105 = add i64 %29, 47
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = shl i32 %107, 1
  %109 = and i32 %108, 4
  %110 = lshr i32 %107, 2
  %111 = and i32 %110, 32
  %112 = and i32 %49, 1024
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %68
  %115 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %3) #11
  %116 = zext i1 %115 to i32
  %117 = shl nuw nsw i32 %116, 10
  br label %118

118:                                              ; preds = %68, %114
  %119 = phi i32 [ 0, %68 ], [ %117, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  %120 = load atomic i32, i32* %80 monotonic, align 4
  %121 = lshr i32 %120, 2
  %122 = and i32 %121, 2048
  %123 = load atomic i32, i32* %9 acquire, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %7, %124
  %126 = add i64 %125, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %7, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp eq i16 %133, 100
  br i1 %134, label %135, label %143

135:                                              ; preds = %118
  %136 = add i64 %125, 11
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %7, %139
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  br label %143

143:                                              ; preds = %135, %118
  %144 = phi i32* [ %127, %118 ], [ %142, %135 ]
  %145 = phi i64 [ %125, %118 ], [ %140, %135 ]
  %146 = and i64 %145, -4294967296
  %147 = load atomic i32, i32* %144 monotonic, align 4
  %148 = zext i32 %147 to i64
  %149 = or i64 %146, %148
  %150 = add i64 %149, 7
  %151 = inttoptr i64 %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = icmp eq i16 %152, 112
  br i1 %153, label %154, label %180

154:                                              ; preds = %143
  %155 = load atomic i32, i32* %9 acquire, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %7, %156
  %158 = add i64 %157, -1
  %159 = inttoptr i64 %158 to i32*
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = zext i32 %160 to i64
  %162 = or i64 %7, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load atomic i16, i16* %164 monotonic, align 2
  %166 = icmp eq i16 %165, 100
  br i1 %166, label %167, label %173

167:                                              ; preds = %154
  %168 = add i64 %157, 11
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %7, %171
  br label %173

173:                                              ; preds = %167, %154
  %174 = phi i64 [ %172, %167 ], [ %157, %154 ]
  %175 = add i64 %174, 47
  %176 = inttoptr i64 %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = shl i32 %177, 17
  %179 = and i32 %178, 1048576
  br label %180

180:                                              ; preds = %143, %173
  %181 = phi i32 [ 0, %143 ], [ %179, %173 ]
  %182 = load i32, i32* %35, align 4
  %183 = icmp eq i32 %182, 1
  %184 = bitcast %"class.v8::internal::FeedbackMetadata"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #11
  br i1 %183, label %185, label %205

185:                                              ; preds = %180
  %186 = add i64 %1, 11
  %187 = inttoptr i64 %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %7, %189
  %191 = add i64 %190, -1
  %192 = inttoptr i64 %191 to i32*
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = zext i32 %193 to i64
  %195 = or i64 %7, %194
  %196 = add i64 %195, 7
  %197 = inttoptr i64 %196 to i16*
  %198 = load atomic i16, i16* %197 monotonic, align 2
  %199 = icmp eq i16 %198, 166
  br i1 %199, label %200, label %203

200:                                              ; preds = %185
  %201 = getelementptr inbounds %"class.v8::internal::FeedbackMetadata", %"class.v8::internal::FeedbackMetadata"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %190, i64* %201, align 8
  %202 = call zeroext i1 @_ZNK2v88internal16FeedbackMetadata18HasTypeProfileSlotEv(%"class.v8::internal::FeedbackMetadata"* nonnull %5) #11
  br label %205

203:                                              ; preds = %185
  %204 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %4) #11
  br label %205

205:                                              ; preds = %200, %203, %180
  %206 = phi i1 [ false, %180 ], [ %202, %200 ], [ %204, %203 ]
  %207 = zext i1 %206 to i32
  %208 = shl nuw nsw i32 %207, 8
  %209 = or i32 %76, %78
  %210 = or i32 %209, %83
  %211 = or i32 %210, %89
  %212 = or i32 %211, %95
  %213 = or i32 %212, %102
  %214 = or i32 %213, %99
  %215 = or i32 %214, %109
  %216 = or i32 %215, %111
  %217 = or i32 %216, %119
  %218 = or i32 %217, %122
  %219 = or i32 %218, %181
  %220 = or i32 %219, %208
  %221 = or i32 %220, 64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %222 = zext i32 %34 to i64
  %223 = shl nuw i64 %222, 32
  %224 = zext i32 %221 to i64
  %225 = or i64 %223, %224
  %226 = shl i32 %86, 1
  %227 = and i32 %226, 1792
  %228 = or i32 %227, %85
  %229 = insertvalue { i64, i32 } undef, i64 %225, 0
  %230 = insertvalue { i64, i32 } %229, i32 %228, 1
  ret { i64, i32 } %230
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23UnoptimizedCompileFlags29SetFlagsForFunctionFromScriptENS0_6ScriptE(%"class.v8::internal::UnoptimizedCompileFlags"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Script", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = add i64 %1, 47
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::UnoptimizedCompileFlags"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -5
  %11 = shl i32 %7, 1
  %12 = and i32 %11, 4
  %13 = or i32 %10, %12
  store i32 %13, i32* %8, align 4
  %14 = load i32, i32* %6, align 4
  %15 = and i32 %13, -33
  %16 = lshr i32 %14, 2
  %17 = and i32 %16, 32
  %18 = or i32 %17, %15
  store i32 %18, i32* %8, align 4
  %19 = and i32 %9, 1024
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %2
  %22 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %3) #11
  %23 = zext i1 %22 to i32
  %24 = shl nuw nsw i32 %23, 10
  %25 = load i32, i32* %8, align 4
  br label %26

26:                                               ; preds = %2, %21
  %27 = phi i32 [ %18, %2 ], [ %25, %21 ]
  %28 = phi i32 [ 0, %2 ], [ %24, %21 ]
  %29 = and i32 %27, -1025
  %30 = or i32 %29, %28
  store i32 %30, i32* %8, align 4
  ret void
}

declare zeroext i1 @_ZNK2v88internal16FeedbackMetadata18HasTypeProfileSlotEv(%"class.v8::internal::FeedbackMetadata"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags16ForScriptCompileEPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Script", align 8
  %4 = alloca %"class.v8::internal::Script", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = add i64 %1, 31
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 109
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 54, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  %15 = shl nuw nsw i32 %14, 9
  %16 = load atomic i32, i32* %11 monotonic, align 4
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = load atomic i32, i32* %11 monotonic, align 4
  %20 = icmp eq i32 %19, 4
  %21 = zext i1 %20 to i32
  %22 = shl nuw nsw i32 %21, 10
  br label %23

23:                                               ; preds = %18, %2
  %24 = phi i32 [ 1024, %2 ], [ %22, %18 ]
  %25 = load i8, i8* @_ZN2v88internal15FLAG_always_optE, align 1, !range !3
  %26 = load i8, i8* @_ZN2v88internal23FLAG_prepare_always_optE, align 1
  %27 = and i8 %26, 1
  %28 = or i8 %27, %25
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 15
  %31 = load i8, i8* @_ZN2v88internal25FLAG_allow_natives_syntaxE, align 1, !range !3
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 16
  %34 = load i8, i8* @_ZN2v88internal9FLAG_lazyE, align 1, !range !3
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 17
  %37 = load i8, i8* @_ZN2v88internal33FLAG_enable_lazy_source_positionsE, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %23
  %40 = tail call zeroext i1 @_ZNK2v88internal7Isolate34NeedsDetailedOptimizedCodeLineInfoEv(%"class.v8::internal::Isolate"* %0) #11
  %41 = zext i1 %40 to i32
  %42 = shl nuw nsw i32 %41, 18
  br label %43

43:                                               ; preds = %23, %39
  %44 = phi i32 [ 262144, %23 ], [ %42, %39 ]
  %45 = or i32 %15, %24
  %46 = or i32 %45, %33
  %47 = or i32 %46, %30
  %48 = or i32 %47, %36
  %49 = or i32 %48, %44
  %50 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !3
  %51 = and i32 %49, -1574254
  %52 = zext i8 %50 to i32
  %53 = shl nuw nsw i32 %52, 19
  %54 = bitcast %"class.v8::internal::Script"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %55, align 8
  %56 = add i64 %1, 47
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = shl i32 %58, 1
  %60 = and i32 %59, 4
  %61 = and i32 %24, 1024
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %43
  %64 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %3) #11
  %65 = zext i1 %64 to i32
  %66 = shl nuw nsw i32 %65, 10
  br label %67

67:                                               ; preds = %43, %63
  %68 = phi i32 [ 0, %43 ], [ %66, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %69 = load i32, i32* %10, align 4
  %70 = icmp eq i32 %69, 1
  %71 = call zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nonnull %4) #11
  %72 = load i64, i64* %5, align 8
  %73 = add i64 %72, 47
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i1 %70, %71
  %77 = and i32 %68, -1050624
  %78 = zext i1 %76 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = shl i32 %75, 17
  %81 = and i32 %80, 1048576
  %82 = lshr i32 %75, 2
  %83 = and i32 %82, 32
  %84 = and i32 %68, 1024
  %85 = icmp ne i32 %84, 0
  %86 = and i1 %85, %71
  %87 = zext i1 %86 to i32
  %88 = shl nuw nsw i32 %87, 10
  %89 = or i32 %51, %53
  %90 = or i32 %89, %60
  %91 = or i32 %90, %77
  %92 = or i32 %91, %79
  %93 = or i32 %92, %88
  %94 = or i32 %93, %81
  %95 = or i32 %94, %83
  %96 = or i32 %95, 65
  %97 = and i64 %72, -4294967296
  %98 = add i64 %72, 35
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = and i64 %101, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %123, label %104

104:                                              ; preds = %67
  %105 = or i64 %97, %101
  %106 = add i64 %105, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %97, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = add i16 %113, -119
  %115 = icmp ult i16 %114, 13
  br i1 %115, label %116, label %123

116:                                              ; preds = %104
  %117 = add i64 %72, 23
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, -2
  %121 = icmp eq i32 %120, 10
  %122 = select i1 %121, i32 512, i32 1024
  br label %123

123:                                              ; preds = %116, %67, %104
  %124 = phi i32 [ 512, %104 ], [ 512, %67 ], [ %122, %116 ]
  %125 = zext i32 %9 to i64
  %126 = shl nuw i64 %125, 32
  %127 = zext i32 %96 to i64
  %128 = or i64 %126, %127
  %129 = insertvalue { i64, i32 } undef, i64 %128, 0
  %130 = insertvalue { i64, i32 } %129, i32 %124, 1
  ret { i64, i32 } %130
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal23UnoptimizedCompileFlags26SetFlagsForToplevelCompileEbbNS0_12LanguageModeENS0_8REPLModeENS_10ScriptTypeE(%"class.v8::internal::UnoptimizedCompileFlags"* nocapture, i1 zeroext, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #3 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::UnoptimizedCompileFlags"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i1 %1, %2
  %10 = and i32 %8, -1049962
  %11 = zext i1 %9 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = and i32 %8, 8
  %14 = icmp ne i32 %13, 0
  %15 = or i1 %14, %3
  %16 = zext i1 %15 to i32
  %17 = shl nuw nsw i32 %16, 3
  %18 = icmp eq i32 %4, 0
  %19 = zext i1 %18 to i32
  %20 = shl nuw nsw i32 %19, 20
  %21 = icmp eq i32 %5, 1
  %22 = zext i1 %21 to i32
  %23 = shl nuw nsw i32 %22, 5
  %24 = and i32 %8, 1024
  %25 = icmp ne i32 %24, 0
  %26 = and i1 %25, %2
  %27 = zext i1 %26 to i32
  %28 = shl nuw nsw i32 %27, 10
  %29 = or i32 %12, %20
  %30 = or i32 %29, %23
  %31 = or i32 %30, %10
  %32 = or i32 %31, %17
  %33 = or i32 %32, %28
  %34 = or i32 %33, 65
  store i32 %34, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags18ForToplevelCompileEPNS0_7IsolateEbNS0_12LanguageModeENS0_8REPLModeENS_10ScriptTypeE(%"class.v8::internal::Isolate"*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN2v88internal7Isolate15GetNextScriptIdEv(%"class.v8::internal::Isolate"* %0) #11
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 109
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 54, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i32
  %13 = shl nuw nsw i32 %12, 9
  %14 = load atomic i32, i32* %9 monotonic, align 4
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %21, label %16

16:                                               ; preds = %5
  %17 = load atomic i32, i32* %9 monotonic, align 4
  %18 = icmp eq i32 %17, 4
  %19 = zext i1 %18 to i32
  %20 = shl nuw nsw i32 %19, 10
  br label %21

21:                                               ; preds = %16, %5
  %22 = phi i32 [ 1024, %5 ], [ %20, %16 ]
  %23 = load i8, i8* @_ZN2v88internal15FLAG_always_optE, align 1, !range !3
  %24 = load i8, i8* @_ZN2v88internal23FLAG_prepare_always_optE, align 1
  %25 = and i8 %24, 1
  %26 = or i8 %25, %23
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 15
  %29 = load i8, i8* @_ZN2v88internal25FLAG_allow_natives_syntaxE, align 1, !range !3
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = load i8, i8* @_ZN2v88internal9FLAG_lazyE, align 1, !range !3
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 17
  %35 = load i8, i8* @_ZN2v88internal33FLAG_enable_lazy_source_positionsE, align 1, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %21
  %38 = tail call zeroext i1 @_ZNK2v88internal7Isolate34NeedsDetailedOptimizedCodeLineInfoEv(%"class.v8::internal::Isolate"* %0) #11
  %39 = zext i1 %38 to i32
  %40 = shl nuw nsw i32 %39, 18
  %41 = load i32, i32* %7, align 4
  br label %42

42:                                               ; preds = %21, %37
  %43 = phi i32 [ %8, %21 ], [ %41, %37 ]
  %44 = phi i32 [ 262144, %21 ], [ %40, %37 ]
  %45 = or i32 %13, %22
  %46 = or i32 %45, %31
  %47 = or i32 %46, %28
  %48 = or i32 %47, %34
  %49 = or i32 %48, %44
  %50 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !3
  %51 = and i32 %49, -1574250
  %52 = zext i8 %50 to i32
  %53 = shl nuw nsw i32 %52, 19
  %54 = icmp eq i32 %43, 1
  %55 = and i1 %54, %1
  %56 = zext i1 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = zext i1 %2 to i32
  %59 = shl nuw nsw i32 %58, 3
  %60 = icmp eq i32 %3, 0
  %61 = zext i1 %60 to i32
  %62 = shl nuw nsw i32 %61, 20
  %63 = icmp eq i32 %4, 1
  %64 = zext i1 %63 to i32
  %65 = shl nuw nsw i32 %64, 5
  %66 = and i32 %22, 1024
  %67 = icmp ne i32 %66, 0
  %68 = and i1 %67, %1
  %69 = zext i1 %68 to i32
  %70 = shl nuw nsw i32 %69, 10
  %71 = or i32 %59, %62
  %72 = or i32 %71, %65
  %73 = or i32 %72, %70
  %74 = or i32 %73, %51
  %75 = or i32 %74, %53
  %76 = or i32 %75, %57
  %77 = or i32 %76, 65
  %78 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %42
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 21
  %82 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %81, align 8
  tail call void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"* %82, i32 0, i32 %6) #11
  br label %83

83:                                               ; preds = %42, %80
  %84 = zext i32 %6 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %77 to i64
  %87 = or i64 %85, %86
  %88 = insertvalue { i64, i32 } undef, i64 %87, 0
  %89 = insertvalue { i64, i32 } %88, i32 512, 1
  ret { i64, i32 } %89
}

declare i32 @_ZN2v88internal7Isolate15GetNextScriptIdEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal6Logger11ScriptEventENS1_15ScriptEventTypeEi(%"class.v8::internal::Logger"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags19ForToplevelFunctionES1_PKNS0_15FunctionLiteralE(i64, i32, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #0 align 2 {
  %4 = trunc i64 %0 to i32
  %5 = and i64 %0, -4294967296
  %6 = and i32 %1, -65536
  %7 = tail call zeroext i1 @_ZNK2v88internal15FunctionLiteral13language_modeEv(%"class.v8::internal::FunctionLiteral"* %2) #11
  %8 = and i32 %4, -28682
  %9 = zext i1 %7 to i32
  %10 = shl nuw nsw i32 %9, 3
  %11 = or i32 %10, %8
  %12 = tail call zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"* %2) #11
  %13 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 7
  %16 = and i32 %15, 8192
  %17 = or i32 %11, %16
  %18 = lshr i32 %14, 9
  %19 = and i32 %18, 4096
  %20 = or i32 %17, %19
  %21 = lshr i32 %14, 8
  %22 = and i32 %21, 16384
  %23 = or i32 %20, %22
  %24 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = zext i1 %26 to i32
  %28 = or i32 %23, %27
  %29 = zext i32 %28 to i64
  %30 = or i64 %5, %29
  %31 = shl i32 %15, 8
  %32 = and i32 %31, 1792
  %33 = zext i8 %12 to i32
  %34 = or i32 %6, %33
  %35 = or i32 %34, %32
  %36 = insertvalue { i64, i32 } undef, i64 %30, 0
  %37 = insertvalue { i64, i32 } %36, i32 %35, 1
  ret { i64, i32 } %37
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags7ForTestEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 109
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = zext i1 %4 to i64
  %6 = shl nuw nsw i64 %5, 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 54, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i64
  %11 = shl nuw nsw i64 %10, 9
  %12 = or i64 %11, %6
  %13 = load atomic i32, i32* %7 monotonic, align 4
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = icmp eq i32 %16, 4
  %18 = zext i1 %17 to i64
  %19 = shl nuw nsw i64 %18, 10
  br label %20

20:                                               ; preds = %15, %1
  %21 = phi i64 [ 1024, %1 ], [ %19, %15 ]
  %22 = load i8, i8* @_ZN2v88internal15FLAG_always_optE, align 1, !range !3
  %23 = load i8, i8* @_ZN2v88internal23FLAG_prepare_always_optE, align 1
  %24 = and i8 %23, 1
  %25 = or i8 %24, %22
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 15
  %28 = load i8, i8* @_ZN2v88internal25FLAG_allow_natives_syntaxE, align 1, !range !3
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 16
  %31 = load i8, i8* @_ZN2v88internal9FLAG_lazyE, align 1, !range !3
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 17
  %34 = load i8, i8* @_ZN2v88internal33FLAG_enable_lazy_source_positionsE, align 1, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %20
  %37 = tail call zeroext i1 @_ZNK2v88internal7Isolate34NeedsDetailedOptimizedCodeLineInfoEv(%"class.v8::internal::Isolate"* %0) #11
  %38 = zext i1 %37 to i64
  %39 = shl nuw nsw i64 %38, 18
  br label %40

40:                                               ; preds = %20, %36
  %41 = phi i64 [ 262144, %20 ], [ %39, %36 ]
  %42 = or i64 %12, %21
  %43 = or i64 %42, %30
  %44 = or i64 %43, %27
  %45 = or i64 %44, %33
  %46 = or i64 %45, %41
  %47 = load i8, i8* @_ZN2v88internal28FLAG_harmony_top_level_awaitE, align 1, !range !3
  %48 = and i64 %46, 4294443007
  %49 = zext i8 %47 to i64
  %50 = shl nuw nsw i64 %49, 19
  %51 = or i64 %48, %50
  %52 = or i64 %51, -8589934592
  %53 = insertvalue { i64, i32 } undef, i64 %52, 0
  %54 = insertvalue { i64, i32 } %53, i32 512, 1
  ret { i64, i32 } %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23UnoptimizedCompileStateC2EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nocapture, %"class.v8::internal::Isolate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 134
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 1
  store i64 %8, i64* %3, align 8
  %9 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 34
  %11 = bitcast %"class.v8::internal::AccountingAllocator"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::AccountingAllocator"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 71
  %16 = bitcast %"class.v8::internal::AstStringConstants"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::AstStringConstants"** %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 2
  store i8 0, i8* %21, align 2
  %22 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 0
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 1
  store i32 -1, i32* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 2
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 5
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 5
  %27 = bitcast %"class.std::__1::forward_list"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 4
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 21
  %30 = bitcast %"class.v8::internal::Logger"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Logger"** %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 5
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 75
  %35 = load %"class.v8::internal::CompilerDispatcher"*, %"class.v8::internal::CompilerDispatcher"** %34, align 8
  %36 = tail call zeroext i1 @_ZNK2v88internal18CompilerDispatcher9IsEnabledEv(%"class.v8::internal::CompilerDispatcher"* %35) #11
  br i1 %36, label %37, label %45

37:                                               ; preds = %2
  %38 = tail call i8* @_Znwm(i64 16) #13
  %39 = bitcast %"class.v8::internal::CompilerDispatcher"** %34 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast i8* %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %38, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = ptrtoint i8* %38 to i64
  br label %45

45:                                               ; preds = %2, %37
  %46 = phi i64 [ %44, %37 ], [ 0, %2 ]
  %47 = bitcast %"class.std::__1::unique_ptr.1186"* %33 to i64*
  store i64 %46, i64* %47, align 8
  ret void
}

declare zeroext i1 @_ZNK2v88internal18CompilerDispatcher9IsEnabledEv(%"class.v8::internal::CompilerDispatcher"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal23UnoptimizedCompileStateC2ERKS1_(%"class.v8::internal::UnoptimizedCompileState"* nocapture, %"class.v8::internal::UnoptimizedCompileState"* nocapture readonly dereferenceable(88)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %1, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::AccountingAllocator"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::AccountingAllocator"** %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %1, i64 0, i32 2
  %13 = bitcast %"class.v8::internal::AstStringConstants"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.v8::internal::AstStringConstants"** %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 2
  store i8 0, i8* %18, align 2
  %19 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 0
  store i32 -1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 1
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 4, i32 5
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 3, i32 5
  %24 = bitcast %"class.std::__1::forward_list"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %1, i64 0, i32 4
  %27 = bitcast %"class.v8::internal::Logger"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.v8::internal::Logger"** %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %0, i64 0, i32 5
  %31 = bitcast %"class.std::__1::unique_ptr.1186"* %30 to i64*
  store i64 0, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfoC2ENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nocapture, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*) unnamed_addr #0 align 2 {
  %5 = trunc i64 %1 to i32
  %6 = bitcast %"class.v8::internal::ParseInfo"* %0 to i64*
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 2
  %8 = bitcast i8* %7 to i32*
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 2
  store %"class.v8::internal::UnoptimizedCompileState"* %3, %"class.v8::internal::UnoptimizedCompileState"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %3, i64 0, i32 1
  %11 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 64) #13
  %13 = bitcast i8* %12 to %"class.v8::internal::Zone"*
  tail call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %13, %"class.v8::internal::AccountingAllocator"* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i1 zeroext false) #11
  %14 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::Zone"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 7
  %18 = bitcast %"class.v8::Extension"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  store i32 -1, i32* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 8
  store i32 -1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 14
  %22 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 16
  %23 = bitcast %"class.std::__1::unique_ptr.1207"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 56, i1 false)
  %24 = load i8, i8* %22, align 8
  %25 = lshr i32 %5, 1
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 4
  %28 = and i8 %24, -8
  %29 = or i8 %28, %27
  store i8 %29, i8* %22, align 8
  %30 = and i32 %5, 1024
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %56, label %32

32:                                               ; preds = %4
  %33 = ptrtoint i8* %12 to i64
  %34 = getelementptr inbounds i8, i8* %12, i64 16
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %12, i64 24
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %36
  %41 = icmp ult i64 %40, 32
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %32
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %13, i64 32) #11
  br label %46

44:                                               ; preds = %32
  %45 = add i64 %36, 32
  store i64 %45, i64* %35, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %36, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::SourceRangeMap"*
  %49 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %51 = bitcast %"struct.std::__1::__compressed_pair_elem.1228"* %50 to i64*
  %52 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::__compressed_pair.1227"* %52 to i64*
  store i64 0, i64* %53, align 8
  store i64 %33, i64* %51, align 8
  %54 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %49, align 8
  store %"class.v8::internal::SourceRangeMap"* %48, %"class.v8::internal::SourceRangeMap"** %21, align 8
  br label %56

56:                                               ; preds = %4, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfo22AllocateSourceRangeMapEv(%"class.v8::internal::ParseInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %4 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 32
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %1
  %12 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 32) #11
  br label %15

13:                                               ; preds = %1
  %14 = add i64 %6, 32
  store i64 %14, i64* %5, align 8
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %6, %13 ]
  %17 = inttoptr i64 %16 to %"class.v8::internal::SourceRangeMap"*
  %18 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.1228"* %19 to i64*
  %21 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__compressed_pair.1227"* %21 to i64*
  store i64 0, i64* %22, align 8
  store i64 %4, i64* %20, align 8
  %23 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %18, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 14
  store %"class.v8::internal::SourceRangeMap"* %17, %"class.v8::internal::SourceRangeMap"** %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfoC2EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nocapture, %"class.v8::internal::Isolate"* nocapture readonly, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*) unnamed_addr #0 align 2 {
  %6 = trunc i64 %2 to i32
  %7 = bitcast %"class.v8::internal::ParseInfo"* %0 to i64*
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 0, i32 2
  %9 = bitcast i8* %8 to i32*
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 2
  store %"class.v8::internal::UnoptimizedCompileState"* %4, %"class.v8::internal::UnoptimizedCompileState"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %4, i64 0, i32 1
  %12 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 64) #13
  %14 = bitcast i8* %13 to %"class.v8::internal::Zone"*
  tail call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %14, %"class.v8::internal::AccountingAllocator"* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i1 zeroext false) #11
  %15 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::Zone"** %15 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 7
  %19 = bitcast %"class.v8::Extension"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #11
  store i32 -1, i32* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 8
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 9
  %22 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 14
  %23 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 16
  %24 = bitcast %"class.std::__1::unique_ptr.1207"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 56, i1 false) #11
  %25 = load i8, i8* %23, align 8
  %26 = lshr i32 %6, 1
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 4
  %29 = and i8 %25, -8
  %30 = or i8 %29, %28
  store i8 %30, i8* %23, align 8
  %31 = and i32 %6, 1024
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %57, label %33

33:                                               ; preds = %5
  %34 = ptrtoint i8* %13 to i64
  %35 = getelementptr inbounds i8, i8* %13, i64 16
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %13, i64 24
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %37
  %42 = icmp ult i64 %41, 32
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %33
  %44 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %14, i64 32) #11
  br label %47

45:                                               ; preds = %33
  %46 = add i64 %37, 32
  store i64 %46, i64* %36, align 8
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i64 [ %44, %43 ], [ %37, %45 ]
  %49 = inttoptr i64 %48 to %"class.v8::internal::SourceRangeMap"*
  %50 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %52 = bitcast %"struct.std::__1::__compressed_pair_elem.1228"* %51 to i64*
  %53 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.std::__1::__compressed_pair.1227"* %53 to i64*
  store i64 0, i64* %54, align 8
  store i64 %34, i64* %52, align 8
  %55 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %50, align 8
  store %"class.v8::internal::SourceRangeMap"* %49, %"class.v8::internal::SourceRangeMap"** %22, align 8
  br label %57

57:                                               ; preds = %5, %47
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 6, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 14, i32 0
  %61 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %61, i64 0, i32 757
  %63 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 6
  store i64 %59, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 13
  store %"class.v8::internal::RuntimeCallStats"* %62, %"class.v8::internal::RuntimeCallStats"** %64, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ParseInfo"* @_ZN2v88internal9ParseInfo19ForToplevelFunctionENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateEPKNS0_15FunctionLiteralEPKNS0_12AstRawStringE(i64, i32, %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::FunctionLiteral"* nocapture readnone, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 128) #13
  %7 = bitcast i8* %6 to %"class.v8::internal::ParseInfo"*
  %8 = trunc i64 %0 to i32
  %9 = bitcast i8* %6 to i64*
  store i64 %0, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 16
  %13 = bitcast i8* %12 to %"class.v8::internal::UnoptimizedCompileState"**
  store %"class.v8::internal::UnoptimizedCompileState"* %2, %"class.v8::internal::UnoptimizedCompileState"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %2, i64 0, i32 1
  %15 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 64) #13
  %17 = bitcast i8* %16 to %"class.v8::internal::Zone"*
  tail call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %17, %"class.v8::internal::AccountingAllocator"* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i1 zeroext false) #11
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  %19 = bitcast i8* %18 to i8**
  store i8* %16, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 32
  %21 = getelementptr inbounds i8, i8* %6, i64 56
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %6, i64 60
  %24 = bitcast i8* %23 to i32*
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %6, i64 64
  %26 = getelementptr inbounds i8, i8* %6, i64 104
  %27 = bitcast i8* %26 to %"class.v8::internal::SourceRangeMap"**
  %28 = getelementptr inbounds i8, i8* %6, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 56, i1 false) #11
  %29 = lshr i32 %8, 1
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 4
  store i8 %31, i8* %28, align 8
  %32 = and i32 %8, 1024
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %5
  %35 = ptrtoint i8* %16 to i64
  %36 = getelementptr inbounds i8, i8* %16, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %16, i64 24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %38
  %43 = icmp ult i64 %42, 32
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %34
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %17, i64 32) #11
  br label %48

46:                                               ; preds = %34
  %47 = add i64 %38, 32
  store i64 %47, i64* %37, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %38, %46 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::SourceRangeMap"*
  %51 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.1228"* %52 to i64*
  %54 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %50, i64 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::__compressed_pair.1227"* %54 to i64*
  store i64 0, i64* %55, align 8
  store i64 %35, i64* %53, align 8
  %56 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %50, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::SourceRangeMap", %"class.v8::internal::SourceRangeMap"* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %51, align 8
  store %"class.v8::internal::SourceRangeMap"* %50, %"class.v8::internal::SourceRangeMap"** %27, align 8
  br label %58

58:                                               ; preds = %5, %48
  %59 = tail call %"class.v8::internal::AstValueFactory"* @_ZN2v88internal9ParseInfo26GetOrCreateAstValueFactoryEv(%"class.v8::internal::ParseInfo"* nonnull %7)
  %60 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory21CloneFromOtherFactoryEPKNS0_12AstRawStringE(%"class.v8::internal::AstValueFactory"* %59, %"class.v8::internal::AstRawString"* %4) #11
  %61 = getelementptr inbounds i8, i8* %6, i64 88
  %62 = bitcast i8* %61 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* %60, %"class.v8::internal::AstRawString"** %62, align 8
  ret %"class.v8::internal::ParseInfo"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstValueFactory"* @_ZN2v88internal9ParseInfo26GetOrCreateAstValueFactoryEv(%"class.v8::internal::ParseInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %2, align 8
  %4 = icmp eq %"class.v8::internal::AstValueFactory"* %3, null
  br i1 %4, label %5, label %58

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 1088) #13
  %7 = bitcast i8* %6 to %"class.v8::internal::AstValueFactory"*
  %8 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::Zone"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %12, i64 0, i32 2
  %14 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %12, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %14, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #11
  %18 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %14, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %14, i64 0, i32 1, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds i8, i8* %6, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 4
  %26 = zext i32 %19 to i64
  %27 = shl nuw nsw i64 %26, 4
  %28 = tail call noalias i8* @malloc(i64 %27) #11
  %29 = bitcast i8* %6 to i8**
  store i8* %28, i8** %29, align 8
  %30 = bitcast %"class.v8::base::TemplateHashMapImpl"* %17 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %31, i64 %27, i1 false) #11
  %32 = getelementptr inbounds i8, i8* %6, i64 16
  %33 = bitcast i8* %32 to %"class.v8::internal::AstRawString"**
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %6, i64 24
  %35 = bitcast i8* %34 to i8**
  store i8* %32, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %6, i64 32
  %37 = bitcast i8* %36 to %"class.v8::internal::AstStringConstants"**
  store %"class.v8::internal::AstStringConstants"* %14, %"class.v8::internal::AstStringConstants"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %6, i64 40
  %39 = bitcast i8* %38 to %"class.v8::internal::AstConsString"**
  store %"class.v8::internal::AstConsString"* null, %"class.v8::internal::AstConsString"** %39, align 8
  %40 = getelementptr inbounds i8, i8* %6, i64 1072
  %41 = bitcast i8* %40 to i64*
  store i64 %10, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %6, i64 1080
  %43 = bitcast i8* %42 to i64*
  store i64 %16, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %6, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 1024, i1 false) #11
  %45 = tail call %"class.v8::internal::AstConsString"* @_ZN2v88internal15AstValueFactory13NewConsStringEv(%"class.v8::internal::AstValueFactory"* nonnull %7) #11
  store %"class.v8::internal::AstConsString"* %45, %"class.v8::internal::AstConsString"** %39, align 8
  %46 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %2, align 8
  %47 = bitcast %"class.v8::internal::AstValueFactory"** %2 to i8**
  store i8* %6, i8** %47, align 8
  %48 = icmp eq %"class.v8::internal::AstValueFactory"* %46, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %5
  %50 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %46, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %50, align 8
  %52 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %51 to i8*
  tail call void @free(i8* %54) #11
  br label %55

55:                                               ; preds = %53, %49
  %56 = bitcast %"class.v8::internal::AstValueFactory"* %46 to i8*
  tail call void @_ZdlPv(i8* %56) #13
  %57 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %2, align 8
  br label %58

58:                                               ; preds = %55, %5, %1
  %59 = phi %"class.v8::internal::AstValueFactory"* [ %57, %55 ], [ %7, %5 ], [ %3, %1 ]
  ret %"class.v8::internal::AstValueFactory"* %59
}

declare %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory21CloneFromOtherFactoryEPKNS0_12AstRawStringE(%"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfoD2Ev(%"class.v8::internal::ParseInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %2, align 8
  store %"class.v8::internal::AstValueFactory"* null, %"class.v8::internal::AstValueFactory"** %2, align 8
  %4 = icmp eq %"class.v8::internal::AstValueFactory"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %6, align 8
  %8 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %7 to i8*
  tail call void @free(i8* %10) #11
  br label %11

11:                                               ; preds = %9, %5
  %12 = bitcast %"class.v8::internal::AstValueFactory"* %3 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %11
  %14 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::ConsumedPreparseData"** %14, align 8
  store %"class.v8::internal::ConsumedPreparseData"* null, %"class.v8::internal::ConsumedPreparseData"** %14, align 8
  %16 = icmp eq %"class.v8::internal::ConsumedPreparseData"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.v8::internal::ConsumedPreparseData"* %15 to void (%"class.v8::internal::ConsumedPreparseData"*)***
  %19 = load void (%"class.v8::internal::ConsumedPreparseData"*)**, void (%"class.v8::internal::ConsumedPreparseData"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.v8::internal::ConsumedPreparseData"*)*, void (%"class.v8::internal::ConsumedPreparseData"*)** %19, i64 1
  %21 = load void (%"class.v8::internal::ConsumedPreparseData"*)*, void (%"class.v8::internal::ConsumedPreparseData"*)** %20, align 8
  tail call void %21(%"class.v8::internal::ConsumedPreparseData"* nonnull %15) #11
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %23, align 8
  store %"class.v8::internal::Utf16CharacterStream"* null, %"class.v8::internal::Utf16CharacterStream"** %23, align 8
  %25 = icmp eq %"class.v8::internal::Utf16CharacterStream"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.v8::internal::Utf16CharacterStream"* %24 to void (%"class.v8::internal::Utf16CharacterStream"*)***
  %28 = load void (%"class.v8::internal::Utf16CharacterStream"*)**, void (%"class.v8::internal::Utf16CharacterStream"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8::internal::Utf16CharacterStream"*)*, void (%"class.v8::internal::Utf16CharacterStream"*)** %28, i64 1
  %30 = load void (%"class.v8::internal::Utf16CharacterStream"*)*, void (%"class.v8::internal::Utf16CharacterStream"*)** %29, align 8
  tail call void %30(%"class.v8::internal::Utf16CharacterStream"* nonnull %24) #11
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %32, align 8
  store %"class.v8::internal::Zone"* null, %"class.v8::internal::Zone"** %32, align 8
  %34 = icmp eq %"class.v8::internal::Zone"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  tail call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %33) #11
  %36 = bitcast %"class.v8::internal::Zone"* %33 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZNK2v88internal9ParseInfo5scopeEv(%"class.v8::internal::ParseInfo"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 15
  %3 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %3, i64 0, i32 8
  %5 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %4, align 8
  ret %"class.v8::internal::DeclarationScope"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfo20ResetCharacterStreamEv(%"class.v8::internal::ParseInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  store %"class.v8::internal::Utf16CharacterStream"* null, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Utf16CharacterStream"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::Utf16CharacterStream"* %3 to void (%"class.v8::internal::Utf16CharacterStream"*)***
  %7 = load void (%"class.v8::internal::Utf16CharacterStream"*)**, void (%"class.v8::internal::Utf16CharacterStream"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::Utf16CharacterStream"*)*, void (%"class.v8::internal::Utf16CharacterStream"*)** %7, i64 1
  %9 = load void (%"class.v8::internal::Utf16CharacterStream"*)*, void (%"class.v8::internal::Utf16CharacterStream"*)** %8, align 8
  tail call void %9(%"class.v8::internal::Utf16CharacterStream"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ParseInfo20set_character_streamENSt3__110unique_ptrINS0_20Utf16CharacterStreamENS2_14default_deleteIS4_EEEE(%"class.v8::internal::ParseInfo"* nocapture, %"class.v8::internal::Utf16CharacterStream"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::Utf16CharacterStream"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 9
  %5 = bitcast %"class.std::__1::unique_ptr.1207"* %4 to i64*
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1207"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.v8::internal::Utf16CharacterStream"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::Utf16CharacterStream"* %7 to void (%"class.v8::internal::Utf16CharacterStream"*)***
  %11 = load void (%"class.v8::internal::Utf16CharacterStream"*)**, void (%"class.v8::internal::Utf16CharacterStream"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::Utf16CharacterStream"*)*, void (%"class.v8::internal::Utf16CharacterStream"*)** %11, i64 1
  %13 = load void (%"class.v8::internal::Utf16CharacterStream"*)*, void (%"class.v8::internal::Utf16CharacterStream"*)** %12, align 8
  tail call void %13(%"class.v8::internal::Utf16CharacterStream"* nonnull %7) #11
  br label %14

14:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal9ParseInfo31CheckFlagsForFunctionFromScriptENS0_6ScriptE(%"class.v8::internal::ParseInfo"* nocapture, i64) local_unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23UnoptimizedCompileState13ParallelTasks7EnqueueEPNS0_9ParseInfoEPKNS0_12AstRawStringEPNS0_15FunctionLiteralE(%"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* nocapture, %"class.v8::internal::ParseInfo"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::CompilerDispatcher"*, %"class.v8::internal::CompilerDispatcher"** %5, align 8
  %7 = tail call { i8, i64 } @_ZN2v88internal18CompilerDispatcher7EnqueueEPKNS0_9ParseInfoEPKNS0_12AstRawStringEPKNS0_15FunctionLiteralE(%"class.v8::internal::CompilerDispatcher"* %6, %"class.v8::internal::ParseInfo"* %1, %"class.v8::internal::AstRawString"* %2, %"class.v8::internal::FunctionLiteral"* %3) #11
  %8 = extractvalue { i8, i64 } %7, 0
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = extractvalue { i8, i64 } %7, 1
  %12 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %0, i64 0, i32 1
  %13 = tail call i8* @_Znwm(i64 24) #13
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to %"class.v8::internal::FunctionLiteral"**
  store %"class.v8::internal::FunctionLiteral"* %3, %"class.v8::internal::FunctionLiteral"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8
  %18 = bitcast %"class.std::__1::forward_list.1189"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %13 to i64*
  store i64 %19, i64* %20, align 8
  %21 = bitcast %"class.std::__1::forward_list.1189"* %12 to i8**
  store i8* %13, i8** %21, align 8
  br label %22

22:                                               ; preds = %4, %10
  ret void
}

declare { i8, i64 } @_ZN2v88internal18CompilerDispatcher7EnqueueEPKNS0_9ParseInfoEPKNS0_12AstRawStringEPKNS0_15FunctionLiteralE(%"class.v8::internal::CompilerDispatcher"*, %"class.v8::internal::ParseInfo"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #1

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #1

declare %"class.v8::internal::AstConsString"* @_ZN2v88internal15AstValueFactory13NewConsStringEv(%"class.v8::internal::AstValueFactory"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare zeroext i1 @_ZNK2v88internal15FunctionLiteral13language_modeEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #1

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
