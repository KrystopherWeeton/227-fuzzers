; ModuleID = '../../net/third_party/quiche/src/spdy/core/hpack/hpack_entry.cc'
source_filename = "../../net/third_party/quiche/src/spdy/core/hpack/hpack_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::string_view" = type { i8*, i64 }

@.str = private unnamed_addr constant [10 x i8] c"{ name: \22\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"\22, value: \22\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\22 }\00", align 1

@_ZN4spdy10HpackEntryC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_ = hidden unnamed_addr alias void (%"class.spdy::HpackEntry"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.spdy::HpackEntry"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN4spdy10HpackEntryC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy10HpackEntryC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_(%"class.spdy::HpackEntry"* nocapture, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.spdy::HpackEntry"* %0 to i8*
  %5 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #5
  %6 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4spdy10HpackEntry4SizeEN4absl11string_viewES2_(i8*, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %5 = add i64 %1, 32
  %6 = add i64 %5, %3
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4spdy10HpackEntry4SizeEv(%"class.spdy::HpackEntry"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.spdy::HpackEntry"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = zext i8 %4 to i64
  br label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %10, -1
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %8
  tail call void @llvm.trap() #5
  unreachable

13:                                               ; preds = %6, %8
  %14 = phi i64 [ %10, %8 ], [ %7, %6 ]
  %15 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = zext i8 %18 to i64
  br label %27

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp sgt i64 %24, -1
  br i1 %25, label %27, label %26, !prof !2

26:                                               ; preds = %22
  tail call void @llvm.trap() #5
  unreachable

27:                                               ; preds = %20, %22
  %28 = phi i64 [ %24, %22 ], [ %21, %20 ]
  %29 = add nuw i64 %14, 32
  %30 = add i64 %29, %28
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4spdy10HpackEntry14GetDebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.spdy::HpackEntry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [5 x %"class.absl::string_view"], align 16
  %4 = bitcast %"class.spdy::HpackEntry"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = zext i8 %6 to i64
  %10 = ptrtoint %"class.spdy::HpackEntry"* %1 to i64
  br label %18

11:                                               ; preds = %2
  %12 = bitcast %"class.spdy::HpackEntry"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp sgt i64 %15, -1
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %11
  tail call void @llvm.trap() #5
  unreachable

18:                                               ; preds = %11, %8
  %19 = phi i64 [ %13, %11 ], [ %10, %8 ]
  %20 = phi i64 [ %15, %11 ], [ %9, %8 ]
  %21 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %1, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = zext i8 %24 to i64
  %28 = ptrtoint %"class.std::__1::basic_string"* %21 to i64
  br label %36

29:                                               ; preds = %18
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.spdy::HpackEntry", %"class.spdy::HpackEntry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %33, -1
  br i1 %34, label %36, label %35, !prof !2

35:                                               ; preds = %29
  tail call void @llvm.trap() #5
  unreachable

36:                                               ; preds = %29, %26
  %37 = phi i64 [ %31, %29 ], [ %28, %26 ]
  %38 = phi i64 [ %33, %29 ], [ %27, %26 ]
  %39 = bitcast [5 x %"class.absl::string_view"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %39) #5, !noalias !3
  %40 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %41 = bitcast [5 x %"class.absl::string_view"]* %3 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([10 x i8]* @.str to i64), i64 9>, <2 x i64>* %41, align 16, !noalias !3
  %42 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %43 = bitcast i8** %42 to i64*
  store i64 %19, i64* %43, align 16, !noalias !3
  %44 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 1
  store i64 %20, i64* %44, align 8, !noalias !3
  %45 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %46 = bitcast i8** %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([12 x i8]* @.str.1 to i64), i64 11>, <2 x i64>* %46, align 16, !noalias !3
  %47 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %48 = bitcast i8** %47 to i64*
  store i64 %37, i64* %48, align 16, !noalias !3
  %49 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  store i64 %38, i64* %49, align 8, !noalias !3
  %50 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %51 = bitcast i8** %50 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([4 x i8]* @.str.2 to i64), i64 3>, <2 x i64>* %51, align 16, !noalias !3
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret %0, %"class.absl::string_view"* nonnull %40, i64 5) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %39) #5, !noalias !3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4spdy10HpackEntry19EstimateMemoryUsageEv(%"class.spdy::HpackEntry"* nocapture readnone) local_unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
