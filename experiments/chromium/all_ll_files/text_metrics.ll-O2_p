; ModuleID = '../../third_party/blink/renderer/core/html/canvas/text_metrics.cc'
source_filename = "../../third_party/blink/renderer/core/html/canvas/text_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.17", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.147" }
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.200" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.206" }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.260", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.262" }
%"class.blink::PersistentBase.262" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::TextMetrics" = type { %"class.blink::ScriptWrappable", double, %"class.WTF::Vector", double, double, double, double, double, double, double, double, %"class.blink::Member" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Baselines"* }
%"class.blink::Baselines" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.237 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.212, %class.scoped_refptr.220, %class.scoped_refptr.230, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.236 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.211 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.WTF::StringImpl"* }
%class.scoped_refptr.211 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.247", [4 x i8] }>
%"class.WTF::RefCounted.247" = type { %"class.base::RefCounted.248" }
%"class.base::RefCounted.248" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.212 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.218", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.213" }
%"class.WTF::Vector.213" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215" }
%"class.WTF::VectorBufferBase.215" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.218" = type { %"class.base::RefCounted.219" }
%"class.base::RefCounted.219" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.220 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.221", %"class.WTF::RefCounted.228", [4 x i8] }>
%"class.blink::FontSettings.221" = type { %"class.WTF::Vector.222" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.blink::FontTagValuePair.225"*, i32, i32 }
%"class.blink::FontTagValuePair.225" = type { i32, float }
%"class.WTF::RefCounted.228" = type { %"class.base::RefCounted.229" }
%"class.base::RefCounted.229" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.230 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.231", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.233, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.231" = type { %"class.base::RefCounted.232" }
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.233 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.234", [4 x i8] }>
%"class.WTF::RefCounted.234" = type { %"class.base::RefCounted.235" }
%"class.base::RefCounted.235" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.236 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.237 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.238", %"class.WTF::Vector.240", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.238" = type { %"class.base::RefCounted.239" }
%"class.base::RefCounted.239" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.240" = type { %"class.WTF::VectorBuffer.241" }
%"class.WTF::VectorBuffer.241" = type { %"class.WTF::VectorBufferBase.242", [8 x i8] }
%"class.WTF::VectorBufferBase.242" = type { %class.scoped_refptr.243*, i32, i32 }
%class.scoped_refptr.243 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.12, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.10, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.12 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.13", [4 x i8] }>
%"class.WTF::RefCounted.13" = type { %"class.base::RefCounted.14" }
%"class.base::RefCounted.14" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"class.blink::TextRun" = type <{ %union.anon.249, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.249 = type { i8* }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::NGBidiParagraph" = type <{ %struct.UBiDi*, i8, [7 x i8] }>
%struct.UBiDi = type opaque
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257", [384 x i8] }
%"class.WTF::VectorBufferBase.257" = type { %"struct.blink::NGBidiParagraph::Run"*, i32, i32 }
%"struct.blink::NGBidiParagraph::Run" = type <{ i32, i32, i8, [3 x i8] }>
%"class.WTF::HashSet" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.274, %"class.blink::Member.275", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.274 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.277" }
%"class.blink::Persistent.277" = type { %"class.blink::PersistentBase.278" }
%"class.blink::PersistentBase.278" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11TextMetricsD2Ev = comdat any

$_ZN5blink11TextMetricsD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink11TextMetrics18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink15NGBidiParagraph3RunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink10TraceTraitINS_9BaselinesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink11TextMetricsE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::TextMetrics"*)* @_ZN5blink11TextMetricsD2Ev to i8*), i8* bitcast (void (%"class.blink::TextMetrics"*)* @_ZN5blink11TextMetricsD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::TextMetrics"*, %"class.blink::Visitor"*)* @_ZNK5blink11TextMetrics5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::TextMetrics"*)* @_ZNK5blink11TextMetrics18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11TextMetrics18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink11TextMetricsC1Ev = hidden unnamed_addr alias void (%"class.blink::TextMetrics"*), void (%"class.blink::TextMetrics"*)* @_ZN5blink11TextMetricsC2Ev
@_ZN5blink11TextMetricsC1ERKNS_4FontERKNS_13TextDirectionERKNS_12TextBaselineERKNS_9TextAlignERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::TextMetrics"*, %"class.blink::Font"*, i8*, i32*, i32*, %"class.WTF::String"*), void (%"class.blink::TextMetrics"*, %"class.blink::Font"*, i8*, i32*, i32*, %"class.WTF::String"*)* @_ZN5blink11TextMetricsC2ERKNS_4FontERKNS_13TextDirectionERKNS_12TextBaselineERKNS_9TextAlignERKN3WTF6StringE

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink11TextMetrics15GetFontBaselineERKNS_12TextBaselineERKNS_14SimpleFontDataE(i32* nocapture readonly dereferenceable(4), %"class.blink::SimpleFontData"* dereferenceable(224)) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %0, align 4
  switch i32 %3, label %32 [
    i32 1, label %4
    i32 5, label %8
    i32 4, label %13
    i32 3, label %17
    i32 2, label %21
  ]

4:                                                ; preds = %2
  %5 = tail call i32 @_ZNK5blink14SimpleFontData20NormalizedTypoAscentENS_12FontBaselineE(%"class.blink::SimpleFontData"* %1, i32 0) #8
  %6 = sitofp i32 %5 to float
  %7 = fmul float %6, 1.562500e-02
  br label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %1, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, 8.000000e+01
  %12 = fdiv float %11, 1.000000e+02
  br label %32

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %1, i64 0, i32 1, i32 2
  %15 = load float, float* %14, align 4
  %16 = fsub float -0.000000e+00, %15
  br label %32

17:                                               ; preds = %2
  %18 = tail call i32 @_ZNK5blink14SimpleFontData21NormalizedTypoDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"* %1, i32 0) #8
  %19 = sitofp i32 %18 to float
  %20 = fmul float %19, -1.562500e-02
  br label %32

21:                                               ; preds = %2
  %22 = tail call i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"* %1, i32 0) #8
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = sitofp i32 %23 to float
  %27 = fmul float %26, 1.562500e-02
  %28 = sitofp i32 %25 to float
  %29 = fmul float %28, 1.562500e-02
  %30 = fsub float %27, %29
  %31 = fmul float %30, 5.000000e-01
  br label %32

32:                                               ; preds = %2, %21, %17, %13, %8, %4
  %33 = phi float [ %31, %21 ], [ %20, %17 ], [ %16, %13 ], [ %12, %8 ], [ %7, %4 ], [ 0.000000e+00, %2 ]
  ret float %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK5blink14SimpleFontData20NormalizedTypoAscentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK5blink14SimpleFontData21NormalizedTypoDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #2

declare i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11TextMetrics5TraceEPNS_7VisitorE(%"class.blink::TextMetrics"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 11
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9BaselinesEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11TextMetricsC2Ev(%"class.blink::TextMetrics"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11TextMetricsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 1
  %5 = bitcast double* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 88, i1 false)
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #8
  %7 = bitcast i8* %6 to %"class.blink::Baselines"*
  tail call void @_ZN5blink9BaselinesC1Ev(%"class.blink::Baselines"* %7) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 11, i32 0, i32 0
  %13 = bitcast %"class.blink::Baselines"** %12 to i8**
  store i8* %6, i8** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11TextMetricsC2ERKNS_4FontERKNS_13TextDirectionERKNS_12TextBaselineERKNS_9TextAlignERKN3WTF6StringE(%"class.blink::TextMetrics"* nocapture, %"class.blink::Font"* dereferenceable(88), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11TextMetricsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 1
  %10 = bitcast double* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 88, i1 false) #8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #8
  %12 = bitcast i8* %11 to %"class.blink::Baselines"*
  tail call void @_ZN5blink9BaselinesC1Ev(%"class.blink::Baselines"* %12) #8
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 11, i32 0, i32 0
  %18 = bitcast %"class.blink::Baselines"** %17 to i8**
  store i8* %11, i8** %18, align 8
  tail call void @_ZN5blink11TextMetrics6UpdateERKNS_4FontERKNS_13TextDirectionERKNS_12TextBaselineERKNS_9TextAlignERKN3WTF6StringE(%"class.blink::TextMetrics"* %0, %"class.blink::Font"* dereferenceable(88) %1, i8* dereferenceable(1) %2, i32* dereferenceable(4) %3, i32* dereferenceable(4) %4, %"class.WTF::String"* dereferenceable(8) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11TextMetrics6UpdateERKNS_4FontERKNS_13TextDirectionERKNS_12TextBaselineERKNS_9TextAlignERKN3WTF6StringE(%"class.blink::TextMetrics"* nocapture, %"class.blink::Font"* dereferenceable(88), i8* nocapture readonly dereferenceable(1), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::TextRun", align 8
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca %"class.blink::FloatRect", align 4
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::NGBidiParagraph", align 8
  %12 = alloca %"class.WTF::Vector.255", align 8
  %13 = alloca %"class.blink::TextRun", align 8
  %14 = alloca %"class.blink::FloatRect", align 4
  %15 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %1) #8
  %16 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %15, i64 0, i32 2
  %17 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %16, align 8
  %18 = icmp eq %"class.blink::SimpleFontData"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %1, i64 0, i32 0
  %21 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %15, %"class.blink::FontDescription"* dereferenceable(80) %20) #8
  store %"class.blink::SimpleFontData"* %21, %"class.blink::SimpleFontData"** %16, align 8
  %22 = icmp eq %"class.blink::SimpleFontData"* %21, null
  br i1 %22, label %355, label %23

23:                                               ; preds = %6, %19
  %24 = phi %"class.blink::SimpleFontData"* [ %21, %19 ], [ %17, %6 ]
  %25 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 2
  %29 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 3
  %30 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %29, align 8
  %31 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %31, align 4
  %32 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 5
  store i16 -21846, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 0
  store i8 -86, i8* %33, align 2
  %34 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 1
  store i8 -86, i8* %34, align 1
  %35 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %35, align 4
  %36 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 1
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %38 = bitcast i8* %36 to i64*
  store i64 -6148914691236517206, i64* %38, align 4
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %23
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %48

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %47 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  br label %48

48:                                               ; preds = %41, %43
  %49 = phi %"class.WTF::StringImpl"* [ %42, %41 ], [ %39, %43 ]
  %50 = phi i64 [ 0, %41 ], [ %47, %43 ]
  %51 = phi i32 [ 0, %41 ], [ %45, %43 ]
  %52 = load i8, i8* %2, align 1
  store i32 %51, i32* %27, align 8
  store i32 %51, i32* %28, align 4
  store float 0.000000e+00, float* %29, align 8
  store float 0.000000e+00, float* %31, align 4
  %53 = shl i8 %52, 4
  %54 = and i8 %53, 16
  %55 = zext i8 %54 to i16
  %56 = or i16 %55, -22527
  store i16 %56, i16* %32, align 8
  store float 0.000000e+00, float* %35, align 4
  store i8 -85, i8* %36, align 4
  %57 = icmp eq i32 %51, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %48
  %59 = or i16 %55, -22523
  store i16 %59, i16* %32, align 8
  store i8* null, i8** %26, align 8
  br label %69

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = bitcast %"class.blink::TextRun"* %7 to i64*
  store i64 %50, i64* %65, align 8
  br i1 %64, label %68, label %66

66:                                               ; preds = %60
  %67 = or i16 %55, -22523
  store i16 %67, i16* %32, align 8
  br label %69

68:                                               ; preds = %60
  store i16 %56, i16* %32, align 8
  br label %69

69:                                               ; preds = %58, %66, %68
  %70 = phi i16 [ %59, %58 ], [ %67, %66 ], [ %56, %68 ]
  %71 = or i16 %70, 512
  store i16 %71, i16* %32, align 8
  %72 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8
  call void @_ZNK5blink4Font27IndividualCharacterAdvancesERKNS_7TextRunE(%"class.WTF::Vector"* nonnull sret %8, %"class.blink::Font"* %1, %"class.blink::TextRun"* nonnull dereferenceable(40) %7) #8
  %73 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2
  %74 = bitcast %"class.WTF::Vector"* %8 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::Vector"* %73 to i64*
  %77 = load i64, i64* %76, align 8
  store atomic i64 %77, i64* %74 monotonic, align 8
  store atomic i64 %75, i64* %76 monotonic, align 8
  %78 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  %80 = load i32, i32* %78, align 4
  %81 = load i32, i32* %79, align 8
  store i32 %81, i32* %78, align 4
  store i32 %80, i32* %79, align 8
  %82 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %83 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %82, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %82, align 4
  store i32 %84, i32* %83, align 4
  %86 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %87 = icmp eq i64 %77, 0
  %88 = inttoptr i64 %77 to i8*
  br i1 %87, label %93, label %89, !prof !2

89:                                               ; preds = %69
  %90 = icmp eq i32 %84, 0
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %89
  store i32 0, i32* %83, align 4
  br label %92

92:                                               ; preds = %91, %89
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %88) #8
  store double* null, double** %86, align 8
  br label %93

93:                                               ; preds = %69, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #8
  %94 = bitcast %"class.blink::FloatRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8
  %95 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 0, i32 1
  %97 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %94, i8 0, i64 16, i1 false) #8
  %99 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #8
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #8
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !3

117:                                              ; preds = %108
  call void @llvm.trap() #8
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %120

120:                                              ; preds = %93, %103, %118
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* nonnull %10) #8
  %121 = bitcast %"class.blink::NGBidiParagraph"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #8
  %122 = getelementptr inbounds %"class.blink::NGBidiParagraph", %"class.blink::NGBidiParagraph"* %11, i64 0, i32 0
  %123 = getelementptr inbounds %"class.blink::NGBidiParagraph", %"class.blink::NGBidiParagraph"* %11, i64 0, i32 1
  %124 = bitcast %"class.blink::NGBidiParagraph"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 16, i1 false)
  store %struct.UBiDi* null, %struct.UBiDi** %122, align 8
  store i8 0, i8* %123, align 8
  %125 = load i8, i8* %2, align 1
  %126 = zext i8 %125 to i16
  %127 = shl nuw i16 %126, 8
  %128 = or i16 %127, 1
  %129 = call zeroext i1 @_ZN5blink15NGBidiParagraph12SetParagraphERKN3WTF6StringEN4absl8optionalINS_13TextDirectionEEE(%"class.blink::NGBidiParagraph"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %10, i16 %128) #8
  %130 = bitcast %"class.WTF::Vector.255"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %130) #8
  %131 = getelementptr inbounds %"class.WTF::Vector.255", %"class.WTF::Vector.255"* %12, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 384, i1 false)
  %132 = getelementptr inbounds %"class.WTF::Vector.255", %"class.WTF::Vector.255"* %12, i64 0, i32 0, i32 1, i64 0
  %133 = bitcast %"class.WTF::Vector.255"* %12 to i8**
  store i8* %132, i8** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::Vector.255", %"class.WTF::Vector.255"* %12, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %134, align 8
  %135 = getelementptr inbounds %"class.WTF::Vector.255", %"class.WTF::Vector.255"* %12, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %135, align 4
  call void @_ZNK5blink15NGBidiParagraph14GetLogicalRunsERKN3WTF6StringEPNS1_6VectorINS0_3RunELj32ENS1_18PartitionAllocatorEEE(%"class.blink::NGBidiParagraph"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::Vector.255"* nonnull %12) #8
  %136 = getelementptr inbounds %"class.WTF::Vector.255", %"class.WTF::Vector.255"* %12, i64 0, i32 0, i32 0, i32 0
  %137 = load %"struct.blink::NGBidiParagraph::Run"*, %"struct.blink::NGBidiParagraph::Run"** %136, align 8
  %138 = load i32, i32* %135, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.blink::NGBidiParagraph::Run", %"struct.blink::NGBidiParagraph::Run"* %137, i64 %139
  %141 = icmp eq i32 %138, 0
  br i1 %141, label %160, label %142

142:                                              ; preds = %120
  %143 = bitcast %"class.blink::TextRun"* %13 to i8*
  %144 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 1
  %146 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 2
  %147 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 3
  %148 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 4
  %149 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 5
  %150 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 6, i64 0
  %151 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 6, i64 1
  %152 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 7, i32 0
  %153 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %13, i64 0, i32 7, i32 1
  %154 = bitcast %"class.blink::TextRun"* %13 to i64*
  %155 = bitcast %"class.blink::FloatRect"* %14 to i8*
  %156 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %14, i64 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %14, i64 0, i32 0, i32 1
  %158 = bitcast %"class.blink::TextRun"* %13 to i8*
  %159 = bitcast i8* %153 to i64*
  br label %165

160:                                              ; preds = %214, %120
  %161 = phi float [ 0.000000e+00, %120 ], [ %222, %214 ]
  %162 = fpext float %161 to double
  %163 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 1
  store double %162, double* %163, align 8
  %164 = load i32, i32* %4, align 4
  switch i32 %164, label %230 [
    i32 3, label %225
    i32 4, label %235
    i32 0, label %227
  ]

165:                                              ; preds = %142, %214
  %166 = phi float [ 0.000000e+00, %142 ], [ %222, %214 ]
  %167 = phi %"struct.blink::NGBidiParagraph::Run"* [ %137, %142 ], [ %223, %214 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %143) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %147, align 8
  store float 0xFFFFFFFFE0000000, float* %148, align 4
  store i16 -21846, i16* %149, align 8
  store i8 -86, i8* %150, align 2
  store i8 -86, i8* %151, align 1
  store float 0xFFFFFFFFE0000000, float* %152, align 4
  %168 = getelementptr inbounds %"struct.blink::NGBidiParagraph::Run", %"struct.blink::NGBidiParagraph::Run"* %167, i64 0, i32 0
  store i64 -6148914691236517206, i64* %159, align 4
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"struct.blink::NGBidiParagraph::Run", %"struct.blink::NGBidiParagraph::Run"* %167, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 %171, %169
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %191, label %175

175:                                              ; preds = %165
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 1
  br i1 %179, label %186, label %181

181:                                              ; preds = %175
  %182 = bitcast %"class.WTF::StringImpl"* %180 to i8*
  %183 = zext i32 %169 to i64
  %184 = getelementptr inbounds i8, i8* %182, i64 %183
  %185 = ptrtoint i8* %184 to i64
  br label %193

186:                                              ; preds = %175
  %187 = bitcast %"class.WTF::StringImpl"* %180 to i16*
  %188 = zext i32 %169 to i64
  %189 = getelementptr inbounds i16, i16* %187, i64 %188
  %190 = ptrtoint i16* %189 to i64
  br label %193

191:                                              ; preds = %165
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %193

193:                                              ; preds = %181, %186, %191
  %194 = phi i32 [ 0, %191 ], [ %172, %186 ], [ %172, %181 ]
  %195 = phi i64 [ 0, %191 ], [ %190, %186 ], [ %185, %181 ]
  %196 = phi %"class.WTF::StringImpl"* [ %192, %191 ], [ %173, %186 ], [ %173, %181 ]
  %197 = getelementptr inbounds %"struct.blink::NGBidiParagraph::Run", %"struct.blink::NGBidiParagraph::Run"* %167, i64 0, i32 2
  %198 = load i8, i8* %197, align 4
  store i32 %194, i32* %145, align 8
  store i32 %194, i32* %146, align 4
  store float %166, float* %147, align 8
  store float 0.000000e+00, float* %148, align 4
  %199 = shl i8 %198, 4
  %200 = and i8 %199, 16
  %201 = zext i8 %200 to i16
  %202 = or i16 %201, -22527
  store i16 %202, i16* %149, align 8
  store float 0.000000e+00, float* %152, align 4
  store i8 -85, i8* %153, align 4
  %203 = icmp eq i32 %194, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %193
  %205 = or i16 %201, -22523
  store i16 %205, i16* %149, align 8
  store i8* null, i8** %144, align 8
  br label %214

206:                                              ; preds = %193
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  store i64 %195, i64* %154, align 8
  br i1 %210, label %213, label %211

211:                                              ; preds = %206
  %212 = or i16 %201, -22523
  store i16 %212, i16* %149, align 8
  br label %214

213:                                              ; preds = %206
  store i16 %202, i16* %149, align 8
  br label %214

214:                                              ; preds = %204, %211, %213
  %215 = phi i16 [ %205, %204 ], [ %212, %211 ], [ %202, %213 ]
  %216 = or i16 %215, 512
  store i16 %216, i16* %149, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %155, i8 0, i64 16, i1 false) #8
  %217 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %1, %"class.blink::TextRun"* nonnull dereferenceable(40) %13, %"class.WTF::HashSet"* null, %"class.blink::FloatRect"* nonnull %14) #8
  %218 = load float, float* %156, align 4
  %219 = fadd float %166, %218
  store float %219, float* %156, align 4
  %220 = load float, float* %157, align 4
  %221 = fadd float %220, 0.000000e+00
  store float %221, float* %157, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %9, %"class.blink::FloatRect"* nonnull dereferenceable(16) %14) #8
  %222 = fadd float %166, %217
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %143) #8
  %223 = getelementptr inbounds %"struct.blink::NGBidiParagraph::Run", %"struct.blink::NGBidiParagraph::Run"* %167, i64 1
  %224 = icmp eq %"struct.blink::NGBidiParagraph::Run"* %223, %140
  br i1 %224, label %160, label %165

225:                                              ; preds = %160
  %226 = fmul float %161, 5.000000e-01
  br label %236

227:                                              ; preds = %160
  %228 = load i8, i8* %2, align 1
  %229 = icmp eq i8 %228, 1
  br i1 %229, label %235, label %236

230:                                              ; preds = %160
  %231 = icmp ne i32 %164, 1
  %232 = load i8, i8* %2, align 1
  %233 = icmp eq i8 %232, 1
  %234 = or i1 %231, %233
  br i1 %234, label %236, label %235

235:                                              ; preds = %230, %160, %227
  br label %236

236:                                              ; preds = %227, %230, %235, %225
  %237 = phi float [ %226, %225 ], [ %161, %235 ], [ 0.000000e+00, %230 ], [ 0.000000e+00, %227 ]
  %238 = load float, float* %95, align 4
  %239 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 3
  %240 = load float, float* %97, align 4
  %241 = fadd float %238, %240
  %242 = insertelement <2 x float> undef, float %237, i32 0
  %243 = insertelement <2 x float> %242, float %241, i32 1
  %244 = insertelement <2 x float> undef, float %238, i32 0
  %245 = insertelement <2 x float> %244, float %237, i32 1
  %246 = fsub <2 x float> %243, %245
  %247 = fpext <2 x float> %246 to <2 x double>
  %248 = bitcast double* %239 to <2 x double>*
  store <2 x double> %247, <2 x double>* %248, align 8
  %249 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %24, i64 0, i32 1, i32 1
  %250 = load float, float* %249, align 4
  %251 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %24, i64 0, i32 1, i32 2
  %252 = load float, float* %251, align 4
  %253 = load i32, i32* %3, align 4
  switch i32 %253, label %278 [
    i32 1, label %254
    i32 5, label %258
    i32 4, label %261
    i32 3, label %263
    i32 2, label %267
  ]

254:                                              ; preds = %236
  %255 = call i32 @_ZNK5blink14SimpleFontData20NormalizedTypoAscentENS_12FontBaselineE(%"class.blink::SimpleFontData"* %24, i32 0) #8
  %256 = sitofp i32 %255 to float
  %257 = fmul float %256, 1.562500e-02
  br label %278

258:                                              ; preds = %236
  %259 = fmul float %250, 8.000000e+01
  %260 = fdiv float %259, 1.000000e+02
  br label %278

261:                                              ; preds = %236
  %262 = fsub float -0.000000e+00, %252
  br label %278

263:                                              ; preds = %236
  %264 = call i32 @_ZNK5blink14SimpleFontData21NormalizedTypoDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"* %24, i32 0) #8
  %265 = sitofp i32 %264 to float
  %266 = fmul float %265, -1.562500e-02
  br label %278

267:                                              ; preds = %236
  %268 = call i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"* %24, i32 0) #8
  %269 = trunc i64 %268 to i32
  %270 = lshr i64 %268, 32
  %271 = trunc i64 %270 to i32
  %272 = sitofp i32 %269 to float
  %273 = fmul float %272, 1.562500e-02
  %274 = sitofp i32 %271 to float
  %275 = fmul float %274, 1.562500e-02
  %276 = fsub float %273, %275
  %277 = fmul float %276, 5.000000e-01
  br label %278

278:                                              ; preds = %236, %254, %258, %261, %263, %267
  %279 = phi float [ %277, %267 ], [ %266, %263 ], [ %262, %261 ], [ %260, %258 ], [ %257, %254 ], [ 0.000000e+00, %236 ]
  %280 = fsub float %250, %279
  %281 = fpext float %280 to double
  %282 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 5
  store double %281, double* %282, align 8
  %283 = fadd float %252, %279
  %284 = fpext float %283 to double
  %285 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 6
  store double %284, double* %285, align 8
  %286 = load float, float* %96, align 4
  %287 = fsub float -0.000000e+00, %286
  %288 = fsub float %287, %279
  %289 = fpext float %288 to double
  %290 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 7
  store double %289, double* %290, align 8
  %291 = load float, float* %98, align 4
  %292 = fadd float %286, %291
  %293 = fadd float %279, %292
  %294 = fpext float %293 to double
  %295 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 8
  store double %294, double* %295, align 8
  %296 = call i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"* nonnull %24, i32 0) #8
  %297 = trunc i64 %296 to i32
  %298 = lshr i64 %296, 32
  %299 = trunc i64 %298 to i32
  %300 = sitofp i32 %297 to float
  %301 = fmul float %300, 1.562500e-02
  %302 = fsub float %301, %279
  %303 = fpext float %302 to double
  %304 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 9
  store double %303, double* %304, align 8
  %305 = sitofp i32 %299 to float
  %306 = fmul float %305, 1.562500e-02
  %307 = fadd float %279, %306
  %308 = fpext float %307 to double
  %309 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 10
  store double %308, double* %309, align 8
  %310 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 11, i32 0, i32 0
  %311 = load %"class.blink::Baselines"*, %"class.blink::Baselines"** %310, align 8
  %312 = fsub float -0.000000e+00, %279
  %313 = fpext float %312 to double
  %314 = getelementptr inbounds %"class.blink::Baselines", %"class.blink::Baselines"* %311, i64 0, i32 4
  store double %313, double* %314, align 8
  %315 = getelementptr inbounds %"class.blink::Baselines", %"class.blink::Baselines"* %311, i64 0, i32 1
  store i8 1, i8* %315, align 8
  %316 = load %"class.blink::Baselines"*, %"class.blink::Baselines"** %310, align 8
  %317 = fmul float %250, 8.000000e+01
  %318 = fdiv float %317, 1.000000e+02
  %319 = fsub float %318, %279
  %320 = fpext float %319 to double
  %321 = getelementptr inbounds %"class.blink::Baselines", %"class.blink::Baselines"* %316, i64 0, i32 5
  store double %320, double* %321, align 8
  %322 = getelementptr inbounds %"class.blink::Baselines", %"class.blink::Baselines"* %316, i64 0, i32 2
  store i8 1, i8* %322, align 1
  %323 = load %"class.blink::Baselines"*, %"class.blink::Baselines"** %310, align 8
  %324 = fsub float -0.000000e+00, %252
  %325 = fsub float %324, %279
  %326 = fpext float %325 to double
  %327 = getelementptr inbounds %"class.blink::Baselines", %"class.blink::Baselines"* %323, i64 0, i32 6
  store double %326, double* %327, align 8
  %328 = getelementptr inbounds %"class.blink::Baselines", %"class.blink::Baselines"* %323, i64 0, i32 3
  store i8 1, i8* %328, align 2
  %329 = load i32, i32* %135, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %332, label %331, !prof !3

331:                                              ; preds = %278
  store i32 0, i32* %135, align 4
  br label %332

332:                                              ; preds = %331, %278
  %333 = load %"struct.blink::NGBidiParagraph::Run"*, %"struct.blink::NGBidiParagraph::Run"** %136, align 8
  %334 = bitcast i8* %132 to %"struct.blink::NGBidiParagraph::Run"*
  %335 = icmp eq %"struct.blink::NGBidiParagraph::Run"* %333, %334
  br i1 %335, label %338, label %336, !prof !2

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"class.WTF::Vector.255", %"class.WTF::Vector.255"* %12, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink15NGBidiParagraph3RunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.256"* nonnull %337, %"struct.blink::NGBidiParagraph::Run"* %333) #8
  br label %338

338:                                              ; preds = %332, %336
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %130) #8
  call void @_ZN5blink15NGBidiParagraphD1Ev(%"class.blink::NGBidiParagraph"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #8
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %339, null
  br i1 %340, label %354, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  br i1 %345, label %348, label %350

348:                                              ; preds = %341
  %349 = add i32 %347, -1
  store i32 %349, i32* %346, align 4
  br label %350

350:                                              ; preds = %348, %341
  %351 = phi i32 [ %349, %348 ], [ %347, %341 ]
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %350
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %339) #8
  br label %354

354:                                              ; preds = %338, %350, %353
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  br label %355

355:                                              ; preds = %19, %354
  ret void
}

declare void @_ZNK5blink4Font27IndividualCharacterAdvancesERKNS_7TextRunE(%"class.WTF::Vector"* sret, %"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15NGBidiParagraph12SetParagraphERKN3WTF6StringEN4absl8optionalINS_13TextDirectionEEE(%"class.blink::NGBidiParagraph"*, %"class.WTF::String"* dereferenceable(8), i16) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink15NGBidiParagraph14GetLogicalRunsERKN3WTF6StringEPNS1_6VectorINS0_3RunELj32ENS1_18PartitionAllocatorEEE(%"class.blink::NGBidiParagraph"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.255"*) local_unnamed_addr #2

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet"*, %"class.blink::FloatRect"*) local_unnamed_addr #2

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15NGBidiParagraphD1Ev(%"class.blink::NGBidiParagraph"*) unnamed_addr #3

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11TextMetricsD2Ev(%"class.blink::TextMetrics"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11TextMetricsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load double*, double** %3, align 8
  %5 = icmp eq double* %4, null
  %6 = bitcast double* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #8
  store double* null, double** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11TextMetricsD0Ev(%"class.blink::TextMetrics"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink11TextMetricsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load double*, double** %3, align 8
  %5 = icmp eq double* %4, null
  %6 = bitcast double* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::TextMetrics", %"class.blink::TextMetrics"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #8
  store double* null, double** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11TextMetrics18GetWrapperTypeInfoEv(%"class.blink::TextMetrics"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11TextMetrics18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZN5blink9BaselinesC1Ev(%"class.blink::Baselines"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.206"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.206"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.206"*) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink15NGBidiParagraph3RunELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.256"*, %"struct.blink::NGBidiParagraph::Run"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGBidiParagraph::Run"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9BaselinesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Baselines"*
  %4 = bitcast i8* %1 to void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)**, void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)*, void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)*, void (%"class.blink::Baselines"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Baselines"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
