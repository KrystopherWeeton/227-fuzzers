; ModuleID = '../../third_party/pdfium/core/fxcodec/cfx_codec_memory.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/cfx_codec_memory.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CodecMemory = type { %"class.fxcrt::Retainable", %"class.std::__1::unique_ptr", i64, i64 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

@_ZTV15CFX_CodecMemory = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_CodecMemory*)* @_ZN15CFX_CodecMemoryD2Ev to i8*), i8* bitcast (void (%class.CFX_CodecMemory*)* @_ZN15CFX_CodecMemoryD0Ev to i8*)] }, align 8

@_ZN15CFX_CodecMemoryC1Em = hidden unnamed_addr alias void (%class.CFX_CodecMemory*, i64), void (%class.CFX_CodecMemory*, i64)* @_ZN15CFX_CodecMemoryC2Em
@_ZN15CFX_CodecMemoryD1Ev = hidden unnamed_addr alias void (%class.CFX_CodecMemory*), void (%class.CFX_CodecMemory*)* @_ZN15CFX_CodecMemoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_CodecMemoryC2Em(%class.CFX_CodecMemory* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CFX_CodecMemory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 1
  %6 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %1, i64 1) #5
  %7 = ptrtoint i8* %6 to i64
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 2
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 3
  store i64 0, i64* %10, align 8
  ret void
}

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_CodecMemoryD2Ev(%class.CFX_CodecMemory* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CFX_CodecMemory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %4) #5
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_CodecMemoryD0Ev(%class.CFX_CodecMemory*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CFX_CodecMemory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %4) #5
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.CFX_CodecMemory* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFX_CodecMemory4SeekEm(%class.CFX_CodecMemory* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 3
  store i64 %1, i64* %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15CFX_CodecMemory9ReadBlockEPvm(%class.CFX_CodecMemory* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp ne i64 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %9
  br i1 %12, label %13, label %22

13:                                               ; preds = %7
  %14 = sub i64 %11, %9
  %15 = icmp ult i64 %14, %2
  %16 = select i1 %15, i64 %14, i64 %2
  %17 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %19, i64 %16, i1 false)
  %20 = load i64, i64* %8, align 8
  %21 = add i64 %20, %16
  store i64 %21, i64* %8, align 8
  br label %22

22:                                               ; preds = %7, %3, %13
  %23 = phi i64 [ %16, %13 ], [ 0, %7 ], [ 0, %3 ]
  ret i64 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CFX_CodecMemory9TryResizeEm(%class.CFX_CodecMemory* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = tail call i8* @_ZN6pdfium8internal7ReallocEPvmm(i8* %4, i64 %1, i64 1) #5
  %6 = icmp eq i64 %1, 0
  %7 = icmp ne i8* %5, null
  %8 = or i1 %6, %7
  %9 = load i8*, i8** %3, align 8
  br i1 %8, label %13, label %10

10:                                               ; preds = %2
  store i8* %4, i8** %3, align 8
  %11 = icmp eq i8* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  tail call void @_Z7FX_FreePv(i8* nonnull %9) #5
  br label %18

13:                                               ; preds = %2
  store i8* %5, i8** %3, align 8
  %14 = icmp eq i8* %9, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %13
  tail call void @_Z7FX_FreePv(i8* nonnull %9) #5
  br label %16

16:                                               ; preds = %13, %15
  %17 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 2
  store i64 %1, i64* %17, align 8
  br label %18

18:                                               ; preds = %12, %10, %16
  %19 = phi i1 [ true, %16 ], [ false, %10 ], [ false, %12 ]
  ret i1 %19
}

declare i8* @_ZN6pdfium8internal7ReallocEPvmm(i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_CodecMemory7ConsumeEm(%class.CFX_CodecMemory* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 %4, %1
  %6 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 %1
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %8, i64 %5, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
