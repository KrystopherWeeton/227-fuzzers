; ModuleID = '../../third_party/pdfium/core/fxge/cfx_font.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_font.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CFX_Font::CharsetFontMap" = type { i32, i8* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.1", %"class.std::__1::unique_ptr.7", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.33", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.21", %"class.fxcrt::RetainPtr.25" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::RetainPtr.11", %"class.std::__1::map", %"class.std::__1::map.46" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type <{ %"class.fxcrt::ByteString", i32, i32, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%struct.FT_Open_Args_ = type { i32, i8*, i64, i8*, %struct.FT_StreamRec_*, %struct.FT_ModuleRec_*, i32, %struct.FT_Parameter_* }
%struct.FT_ModuleRec_ = type opaque
%struct.FT_Parameter_ = type { i64, i8* }
%class.CFX_GEModule = type { %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.102", i8** }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.CFX_GEModule::PlatformIface"* }
%"class.CFX_GEModule::PlatformIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.CFX_FontMgr* }
%class.CFX_FontMgr = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.84", %"class.std::__1::map.90", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %struct.FT_LibraryRec_* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.CFX_FontMapper* }
%class.CFX_FontMapper = type opaque
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.CFX_FontCache* }
%class.CFX_FontCache = type { %"class.std::__1::map.105", %"class.std::__1::map.105" }
%"class.std::__1::map.105" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%"class.pdfium::span.119" = type { %"class.fxcrt::UnownedPtr.120", i64 }
%"class.fxcrt::UnownedPtr.120" = type { i8* }
%"class.fxcrt::RetainPtr.121" = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.CFX_FontMgr::FontDesc"* }
%"class.CFX_FontMgr::FontDesc" = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", i64, %"class.std::__1::unique_ptr.65", [16 x %"class.fxcrt::ObservedPtr"] }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %class.CFX_Face* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_Glyph_Class_ = type opaque
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.119" }
%class.CFX_PathData = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.132" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.FX_PATHPOINT* }
%class.ScopedFontTransform = type { %"class.fxcrt::RetainPtr.11" }
%struct.FT_Outline_Funcs_ = type { i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32, i64 }
%"struct.(anonymous namespace)::OUTLINE_PARAMS" = type <{ %"class.fxcrt::UnownedPtr.140", i32, i32, float, [4 x i8] }>
%"class.fxcrt::UnownedPtr.140" = type { %class.CFX_PathData* }
%class.CFX_GlyphBitmap = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%struct.CFX_TextRenderOptions = type opaque

$_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [7 x i8] c"SimSun\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"MingLiU\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"MS Gothic\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Batang\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@_ZN8CFX_Font14kDefaultTTFMapE = hidden local_unnamed_addr constant [9 x %"struct.CFX_Font::CharsetFontMap"] [%"struct.CFX_Font::CharsetFontMap" { i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN8CFX_Font20kDefaultAnsiFontNameE, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 134, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 136, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 129, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 178, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0) }, %"struct.CFX_Font::CharsetFontMap" { i32 -1, i8* null }], align 16
@_ZN8CFX_Font17kUntitledFontNameE = hidden constant [9 x i8] c"Untitled\00", align 1
@_ZN8CFX_Font20kDefaultAnsiFontNameE = hidden constant [10 x i8] c"Helvetica\00", align 1
@_ZN8CFX_Font25kUniversalDefaultFontNameE = hidden constant [17 x i8] c"Arial Unicode MS\00", align 16
@.str.6 = private unnamed_addr constant [7 x i8] c"italic\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c",\00", align 1
@__const._ZNK8CFX_Font17LoadGlyphPathImplEji.ft_matrix = private unnamed_addr constant %struct.FT_Matrix_ { i64 65536, i64 0, i64 0, i64 65536 }, align 8
@_ZN12_GLOBAL__N_118kWeightPowShiftJisE = internal unnamed_addr constant [100 x i8] c"\00\00\02\04\06\08\0A\0E\10\14\16\1A\1C \22&*,048<@BFJNRVZ````bbbddddffffhhhhhjjjjjlllllnnnnnpppppprrrrrrrtttttttvvvvvvvxxxxxxxx", align 16
@_ZN12_GLOBAL__N_110kWeightPowE = internal unnamed_addr constant [100 x i8] c"\00\06\0C\0E\10\12\16\18\1C\1E \22$&(*,.02468:<>@BDFFHHJJJLLLNNNPPPRRRTTTTVVVXXXXZZZZ\5C\5C\5C\5C^^^^`````bbbbdddddfffffhhhhhjjjjj", align 16
@_ZN12_GLOBAL__N_112kWeightPow11E = internal unnamed_addr constant [100 x i8] c"\00\04\07\08\09\0A\0C\0D\0F\11\12\13\14\15\16\17\18\19\1A\1C\1D\1E\1F !\22#$%''(()))***+++,,,---....+//0000-222.3334444555556666777778888899999:::::", align 16
@_ZN12_GLOBAL__N_110kAngleSkewE = internal unnamed_addr constant [30 x i8] c"\00\FE\FD\FB\F9\F7\F5\F4\F2\F0\EE\ED\EB\E9\E7\E5\E3\E1\E0\DE\DC\DA\D8\D6\D3\D1\CF\CD\CB\C9", align 16
@.str.9 = private unnamed_addr constant [8 x i8] c"Regular\00", align 1

@_ZN8CFX_FontC1Ev = hidden unnamed_addr alias void (%class.CFX_Font*), void (%class.CFX_Font*)* @_ZN8CFX_FontC2Ev
@_ZN8CFX_FontD1Ev = hidden unnamed_addr alias void (%class.CFX_Font*), void (%class.CFX_Font*)* @_ZN8CFX_FontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_Font27GetDefaultFontNameByCharsetEh(%"class.fxcrt::ByteString"* noalias sret, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %14 [
    i8 0, label %10
    i8 -122, label %3
    i8 -120, label %4
    i8 -128, label %5
    i8 -127, label %6
    i8 -52, label %7
    i8 -18, label %8
    i8 -78, label %9
  ]

3:                                                ; preds = %2
  br label %10

4:                                                ; preds = %2
  br label %10

5:                                                ; preds = %2
  br label %10

6:                                                ; preds = %2
  br label %10

7:                                                ; preds = %2
  br label %10

8:                                                ; preds = %2
  br label %10

9:                                                ; preds = %2
  br label %10

10:                                               ; preds = %2, %9, %8, %7, %6, %5, %4, %3
  %11 = phi i64 [ 0, %2 ], [ 1, %3 ], [ 2, %4 ], [ 3, %5 ], [ 4, %6 ], [ 5, %7 ], [ 6, %8 ], [ 7, %9 ]
  %12 = getelementptr inbounds [9 x %"struct.CFX_Font::CharsetFontMap"], [9 x %"struct.CFX_Font::CharsetFontMap"]* @_ZN8CFX_Font14kDefaultTTFMapE, i64 0, i64 %11, i32 1
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i8* [ %13, %10 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN8CFX_Font25kUniversalDefaultFontNameE, i64 0, i64 0), %2 ]
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* %15) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN8CFX_Font21GetCharSetFromUnicodeEt(i16 zeroext) local_unnamed_addr #3 align 2 {
  %2 = icmp ult i16 %0, 127
  br i1 %2, label %60, label %3

3:                                                ; preds = %1
  %4 = add i16 %0, -19968
  %5 = icmp ult i16 %4, 20902
  %6 = add i16 %0, 6201
  %7 = icmp ult i16 %6, 45
  %8 = or i1 %5, %7
  %9 = and i16 %0, -64
  %10 = icmp eq i16 %9, 12288
  %11 = or i1 %10, %8
  %12 = add i16 %0, -8192
  %13 = icmp ult i16 %12, 112
  %14 = or i1 %13, %11
  br i1 %14, label %60, label %15

15:                                               ; preds = %3
  %16 = add i16 %0, -12352
  %17 = icmp ult i16 %16, 96
  %18 = add i16 %0, -12448
  %19 = icmp ult i16 %18, 96
  %20 = or i1 %17, %19
  %21 = and i16 %0, -16
  %22 = icmp eq i16 %21, 12784
  %23 = or i1 %22, %20
  %24 = add nsw i16 %0, 256
  %25 = icmp ult i16 %24, 240
  %26 = or i1 %25, %23
  br i1 %26, label %60, label %27

27:                                               ; preds = %15
  %28 = add i16 %0, 21504
  %29 = icmp ult i16 %28, 11184
  %30 = and i16 %0, -256
  %31 = icmp eq i16 %30, 4352
  %32 = or i1 %29, %31
  %33 = add i16 %0, -12592
  %34 = icmp ult i16 %33, 96
  %35 = or i1 %34, %32
  br i1 %35, label %60, label %36

36:                                               ; preds = %27
  %37 = and i16 %0, -128
  %38 = icmp eq i16 %37, 3584
  br i1 %38, label %60, label %39

39:                                               ; preds = %36
  %40 = add nsw i16 %0, -880
  %41 = icmp ult i16 %40, 144
  %42 = icmp eq i16 %30, 7936
  %43 = or i1 %41, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %39
  %45 = icmp eq i16 %30, 1536
  %46 = add nsw i16 %0, 1200
  %47 = icmp ult i16 %46, 941
  %48 = or i1 %45, %47
  br i1 %48, label %60, label %49

49:                                               ; preds = %44
  %50 = add nsw i16 %0, -1424
  %51 = icmp ult i16 %50, 112
  br i1 %51, label %60, label %52

52:                                               ; preds = %49
  %53 = icmp eq i16 %30, 1024
  br i1 %53, label %60, label %54

54:                                               ; preds = %52
  %55 = add nsw i16 %0, -256
  %56 = icmp ult i16 %55, 336
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = icmp eq i16 %30, 7680
  %59 = select i1 %58, i8 -93, i8 0
  ret i8 %59

60:                                               ; preds = %54, %52, %49, %44, %39, %36, %27, %15, %3, %1
  %61 = phi i8 [ 0, %1 ], [ -122, %3 ], [ -128, %15 ], [ -127, %27 ], [ -34, %36 ], [ -95, %39 ], [ -78, %44 ], [ -79, %49 ], [ -52, %52 ], [ -18, %54 ]
  ret i8 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_FontC2Ev(%class.CFX_Font* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_Font* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 90, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8CFX_Font23GetSubstFontItalicAngleEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %2, align 8
  %4 = icmp eq %class.CFX_SubstFont* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %3, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CFX_Font8LoadFileEN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEEi(%class.CFX_Font* nocapture, %"class.fxcrt::RetainPtr.1"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.FT_Open_Args_, align 8
  %5 = alloca %"class.fxcrt::RetainPtr.11", align 8
  %6 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 8
  store i8 0, i8* %6, align 8
  %7 = tail call i8* @_Znwm(i64 80) #11
  %8 = ptrtoint i8* %7 to i64
  %9 = getelementptr inbounds %"class.fxcrt::RetainPtr.1", %"class.fxcrt::RetainPtr.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 80, i1 false)
  %10 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %9, align 8
  %11 = bitcast %class.IFX_SeekableReadStream* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -40
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.IFX_SeekableReadStream* %10 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to %class.IFX_StreamWithSize*
  %19 = bitcast i8* %17 to i64 (%class.IFX_StreamWithSize*)***
  %20 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %19, align 8
  %21 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %20, align 8
  %22 = tail call i64 %21(%class.IFX_StreamWithSize* %18) #10
  %23 = getelementptr inbounds i8, i8* %7, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %7, i64 16
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = bitcast %"class.fxcrt::RetainPtr.1"* %1 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %7, i64 24
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %7, i64 48
  %32 = bitcast i8* %31 to void (%struct.FT_StreamRec_*)**
  store void (%struct.FT_StreamRec_*)* @_ZN12_GLOBAL__N_113FTStreamCloseEP13FT_StreamRec_, void (%struct.FT_StreamRec_*)** %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 40
  %34 = bitcast i8* %33 to i64 (%struct.FT_StreamRec_*, i64, i8*, i64)**
  store i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* @_ZN12_GLOBAL__N_112FTStreamReadEP13FT_StreamRec_mPhm, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %34, align 8
  %35 = bitcast %struct.FT_Open_Args_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 64, i1 false)
  %36 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %4, i64 0, i32 0
  store i32 2, i32* %36, align 8
  %37 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %4, i64 0, i32 4
  %38 = bitcast %struct.FT_StreamRec_** %37 to i8**
  store i8* %7, i8** %38, align 8
  %39 = bitcast %"class.fxcrt::RetainPtr.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #10
  %41 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %41, align 8
  %43 = getelementptr inbounds %class.CFX_FontMgr, %class.CFX_FontMgr* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %43, align 8
  %45 = sext i32 %2 to i64
  call void @_ZN8CFX_Face4OpenEP14FT_LibraryRec_PK13FT_Open_Args_l(%"class.fxcrt::RetainPtr.11"* nonnull sret %5, %struct.FT_LibraryRec_* %44, %struct.FT_Open_Args_* nonnull %4, i64 %45) #10
  %46 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.fxcrt::RetainPtr.11"* %5 to i64*
  %49 = load i64, i64* %48, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %47, align 8
  %50 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %class.CFX_Face*, %class.CFX_Face** %50, align 8
  %52 = bitcast %"class.fxcrt::RetainPtr.11"* %46 to i64*
  store i64 %49, i64* %52, align 8
  %53 = icmp eq %class.CFX_Face* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %3
  %55 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %51, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %55, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %3, %54
  store %class.CFX_Face* null, %class.CFX_Face** %47, align 8
  br label %79

60:                                               ; preds = %54
  %61 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %51, i64 0, i32 0
  %62 = bitcast %class.CFX_Face* %51 to void (%"class.fxcrt::Retainable"*)***
  %63 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, i64 1
  %65 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %64, align 8
  call void %65(%"class.fxcrt::Retainable"* nonnull %61) #10
  %66 = load %class.CFX_Face*, %class.CFX_Face** %47, align 8
  %67 = bitcast %class.CFX_Face* %66 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_Face* null, %class.CFX_Face** %47, align 8
  %68 = icmp eq %class.CFX_Face* %66, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %66, i64 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %66, i64 0, i32 0
  %76 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %67, align 8
  %77 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, i64 1
  %78 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, align 8
  call void %78(%"class.fxcrt::Retainable"* nonnull %75) #10
  br label %79

79:                                               ; preds = %59, %60, %69, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %80 = load %class.CFX_Face*, %class.CFX_Face** %50, align 8
  %81 = icmp eq %class.CFX_Face* %80, null
  br i1 %81, label %122, label %82

82:                                               ; preds = %79
  %83 = load i64, i64* %27, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %9, align 8
  %84 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %84, align 8
  %86 = bitcast %class.CFX_Font* %0 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %class.IFX_SeekableReadStream* %85, null
  br i1 %87, label %109, label %88

88:                                               ; preds = %82
  %89 = bitcast %class.IFX_SeekableReadStream* %85 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr i8, i8* %90, i64 -32
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.IFX_SeekableReadStream* %85 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %93
  %96 = getelementptr inbounds i8, i8* %95, i64 8
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, -1
  store i64 %99, i64* %97, align 8
  %100 = icmp ne i64 %99, 0
  %101 = icmp eq i8* %95, null
  %102 = or i1 %101, %100
  br i1 %102, label %109, label %103

103:                                              ; preds = %88
  %104 = bitcast i8* %95 to %"class.fxcrt::Retainable"*
  %105 = bitcast i8* %95 to void (%"class.fxcrt::Retainable"*)***
  %106 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %106, i64 1
  %108 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %107, align 8
  call void %108(%"class.fxcrt::Retainable"* nonnull %104) #10
  br label %109

109:                                              ; preds = %82, %88, %103
  %110 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %111, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.7"* %110 to i64*
  store i64 %8, i64* %113, align 8
  %114 = icmp eq %struct.FT_StreamRec_* %112, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = bitcast %struct.FT_StreamRec_* %112 to i8*
  call void @_ZdlPv(i8* %116) #11
  br label %117

117:                                              ; preds = %115, %109
  %118 = load %class.CFX_Face*, %class.CFX_Face** %50, align 8
  %119 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %118, i64 0, i32 2, i32 0, i32 0, i32 0
  %120 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %119, align 8
  %121 = call i32 @FT_Set_Pixel_Sizes(%struct.FT_FaceRec_* %120, i32 0, i32 64) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #10
  br label %123

122:                                              ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #10
  call void @_ZdlPv(i8* nonnull %7) #11
  br label %123

123:                                              ; preds = %117, %122
  %124 = phi i1 [ true, %117 ], [ false, %122 ]
  ret i1 %124
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN12_GLOBAL__N_113FTStreamCloseEP13FT_StreamRec_(%struct.FT_StreamRec_* nocapture) #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_112FTStreamReadEP13FT_StreamRec_mPhm(%struct.FT_StreamRec_* nocapture readonly, i64, i8*, i64) #0 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 3
  %8 = bitcast %union.FT_StreamDesc_* %7 to %class.IFX_SeekableReadStream**
  %9 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %8, align 8
  %10 = icmp eq %class.IFX_SeekableReadStream* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %class.IFX_SeekableReadStream* %9 to i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)***
  %13 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)**, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %13, i64 4
  %15 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.IFX_SeekableReadStream* nonnull %9, i8* %2, i64 %1, i64 %3) #10
  %17 = select i1 %16, i64 %3, i64 0
  br label %18

18:                                               ; preds = %11, %6, %4
  %19 = phi i64 [ 0, %4 ], [ 0, %6 ], [ %17, %11 ]
  ret i64 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8CFX_Face4OpenEP14FT_LibraryRec_PK13FT_Open_Args_l(%"class.fxcrt::RetainPtr.11"* sret, %struct.FT_LibraryRec_*, %struct.FT_Open_Args_*, i64) local_unnamed_addr #2

declare %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() local_unnamed_addr #2

declare i32 @FT_Set_Pixel_Sizes(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_Font7SetFaceEN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_Font* nocapture, %"class.fxcrt::RetainPtr.11"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %3, align 8
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %3, align 8
  %5 = icmp eq %class.CFX_GlyphCache* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %4, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %4, i64 0, i32 0
  %13 = bitcast %class.CFX_GlyphCache* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #10
  br label %17

17:                                               ; preds = %2, %6, %11
  %18 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CFX_Face*, %class.CFX_Face** %18, align 8
  %20 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_Face*, %class.CFX_Face** %20, align 8
  %22 = icmp eq %class.CFX_Face* %19, %21
  br i1 %22, label %44, label %23

23:                                               ; preds = %17
  %24 = icmp eq %class.CFX_Face* %21, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %21, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, 1
  store i64 %28, i64* %26, align 8
  %29 = load %class.CFX_Face*, %class.CFX_Face** %18, align 8
  br label %30

30:                                               ; preds = %25, %23
  %31 = phi %class.CFX_Face* [ %29, %25 ], [ %19, %23 ]
  store %class.CFX_Face* %21, %class.CFX_Face** %18, align 8
  %32 = icmp eq %class.CFX_Face* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %31, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %31, i64 0, i32 0
  %40 = bitcast %class.CFX_Face* %31 to void (%"class.fxcrt::Retainable"*)***
  %41 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, i64 1
  %43 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, align 8
  tail call void %43(%"class.fxcrt::Retainable"* nonnull %39) #10
  br label %44

44:                                               ; preds = %17, %30, %33, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_Font15ClearGlyphCacheEv(%class.CFX_Font* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %2, align 8
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %2, align 8
  %4 = icmp eq %class.CFX_GlyphCache* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %3, i64 0, i32 0
  %12 = bitcast %class.CFX_GlyphCache* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #10
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_Font12SetSubstFontENSt3__110unique_ptrI13CFX_SubstFontNS0_14default_deleteIS2_EEEE(%class.CFX_Font* nocapture, %class.CFX_SubstFont*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CFX_SubstFont* %1 to i64
  %4 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.59"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %class.CFX_SubstFont* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN13CFX_SubstFontD1Ev(%class.CFX_SubstFont* nonnull %6) #10
  %10 = bitcast %class.CFX_SubstFont* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_FontD2Ev(%class.CFX_Font* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 7, i32 1
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %8, align 8
  %10 = icmp eq %class.CFX_Face* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %9, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %9, i64 0, i32 0
  %18 = bitcast %class.CFX_Face* %9 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  tail call void %21(%"class.fxcrt::Retainable"* nonnull %17) #10
  br label %22

22:                                               ; preds = %6, %11, %16
  %23 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i8* %24 to i64
  %28 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  store i64 %27, i64* %29, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %24) #10
  br label %30

30:                                               ; preds = %22, %26
  %31 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  store i8* null, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_Z7FX_FreePv(i8* nonnull %32) #10
  br label %35

35:                                               ; preds = %30, %34
  %36 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %36, align 8
  store %class.CFX_SubstFont* null, %class.CFX_SubstFont** %36, align 8
  %38 = icmp eq %class.CFX_SubstFont* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  tail call void @_ZN13CFX_SubstFontD1Ev(%class.CFX_SubstFont* nonnull %37) #10
  %40 = bitcast %class.CFX_SubstFont* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %42, align 8
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %42, align 8
  %44 = icmp eq %class.CFX_GlyphCache* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %43, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %43, i64 0, i32 0
  %52 = bitcast %class.CFX_GlyphCache* %43 to void (%"class.fxcrt::Retainable"*)***
  %53 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, i64 1
  %55 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, align 8
  tail call void %55(%"class.fxcrt::Retainable"* nonnull %51) #10
  br label %56

56:                                               ; preds = %41, %45, %50
  %57 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %8, align 8
  %58 = icmp eq %class.CFX_Face* %57, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %57, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add nsw i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %57, i64 0, i32 0
  %66 = bitcast %class.CFX_Face* %57 to void (%"class.fxcrt::Retainable"*)***
  %67 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, i64 1
  %69 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, align 8
  tail call void %69(%"class.fxcrt::Retainable"* nonnull %65) #10
  br label %70

70:                                               ; preds = %56, %59, %64
  %71 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %71, align 8
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %71, align 8
  %73 = icmp eq %struct.FT_StreamRec_* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast %struct.FT_StreamRec_* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %70, %74
  %77 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %77, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %77, align 8
  %79 = icmp eq %class.IFX_SeekableReadStream* %78, null
  br i1 %79, label %101, label %80

80:                                               ; preds = %76
  %81 = bitcast %class.IFX_SeekableReadStream* %78 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr i8, i8* %82, i64 -32
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %class.IFX_SeekableReadStream* %78 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 %85
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp ne i64 %91, 0
  %93 = icmp eq i8* %87, null
  %94 = or i1 %93, %92
  br i1 %94, label %101, label %95

95:                                               ; preds = %80
  %96 = bitcast i8* %87 to %"class.fxcrt::Retainable"*
  %97 = bitcast i8* %87 to void (%"class.fxcrt::Retainable"*)***
  %98 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %98, i64 1
  %100 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %99, align 8
  tail call void %100(%"class.fxcrt::Retainable"* nonnull %96) #10
  br label %101

101:                                              ; preds = %76, %80, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* nocapture, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.fxcrt::RetainPtr.11", align 8
  %10 = zext i1 %7 to i8
  %11 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 8
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 9
  store i8 %10, i8* %12, align 1
  %13 = tail call i8* @_Znwm(i64 32) #11
  %14 = bitcast i8* %13 to %class.CFX_SubstFont*
  tail call void @_ZN13CFX_SubstFontC1Ev(%class.CFX_SubstFont* nonnull %14) #10
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.59"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %class.CFX_SubstFont* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %8
  tail call void @_ZN13CFX_SubstFontD1Ev(%class.CFX_SubstFont* nonnull %18) #10
  %22 = bitcast %class.CFX_SubstFont* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %21, %8
  %24 = bitcast %"class.fxcrt::RetainPtr.11"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #10
  %26 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %26, align 8
  %28 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %17, align 8
  call void @_ZN11CFX_FontMgr13FindSubstFontERKN5fxcrt10ByteStringEbjiiiP13CFX_SubstFont(%"class.fxcrt::RetainPtr.11"* nonnull sret %9, %class.CFX_FontMgr* %27, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext %2, i32 %3, i32 %4, i32 %5, i32 %6, %class.CFX_SubstFont* %28) #10
  %29 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.fxcrt::RetainPtr.11"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %30, align 8
  %33 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %class.CFX_Face*, %class.CFX_Face** %33, align 8
  %35 = bitcast %"class.fxcrt::RetainPtr.11"* %29 to i64*
  store i64 %32, i64* %35, align 8
  %36 = icmp eq %class.CFX_Face* %34, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %34, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %23, %37
  store %class.CFX_Face* null, %class.CFX_Face** %30, align 8
  br label %62

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %34, i64 0, i32 0
  %45 = bitcast %class.CFX_Face* %34 to void (%"class.fxcrt::Retainable"*)***
  %46 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, i64 1
  %48 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, align 8
  call void %48(%"class.fxcrt::Retainable"* nonnull %44) #10
  %49 = load %class.CFX_Face*, %class.CFX_Face** %30, align 8
  %50 = bitcast %class.CFX_Face* %49 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_Face* null, %class.CFX_Face** %30, align 8
  %51 = icmp eq %class.CFX_Face* %49, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %49, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, -1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %49, i64 0, i32 0
  %59 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %50, align 8
  %60 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, i64 1
  %61 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, align 8
  call void %61(%"class.fxcrt::Retainable"* nonnull %58) #10
  br label %62

62:                                               ; preds = %42, %43, %52, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %63 = load %class.CFX_Face*, %class.CFX_Face** %33, align 8
  %64 = icmp eq %class.CFX_Face* %63, null
  br i1 %64, label %80, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %63, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %66, align 8
  %68 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %67, i64 0, i32 26
  %69 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %68, align 8
  %70 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %69, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %69, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 7, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, %71
  br i1 %76, label %78, label %77

77:                                               ; preds = %65
  store i8* %71, i8** %74, align 8
  br label %78

78:                                               ; preds = %65, %77
  %79 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 7, i32 1
  store i64 %73, i64* %79, align 8
  br label %80

80:                                               ; preds = %62, %78
  ret void
}

declare void @_ZN11CFX_FontMgr13FindSubstFontERKN5fxcrt10ByteStringEbjiiiP13CFX_SubstFont(%"class.fxcrt::RetainPtr.11"* sret, %class.CFX_FontMgr*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, %class.CFX_SubstFont*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8CFX_Font13GetGlyphWidthEj(%class.CFX_Font* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.FT_MM_Var_*, align 8
  %4 = alloca [2 x i64], align 16
  %5 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %7 = icmp eq %class.CFX_Face* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %9, align 8
  %11 = icmp eq %class.CFX_SubstFont* %10, null
  br i1 %11, label %49, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %10, i64 0, i32 7
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %49, label %16

16:                                               ; preds = %12
  %17 = bitcast %struct.FT_MM_Var_** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %3, align 8
  %18 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %18, align 8
  %20 = call i32 @FT_Get_MM_Var(%struct.FT_FaceRec_* %19, %struct.FT_MM_Var_** nonnull %3) #10
  %21 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %3, align 8
  %22 = icmp eq %struct.FT_MM_Var_* %21, null
  br i1 %22, label %47, label %23

23:                                               ; preds = %16
  %24 = bitcast %struct.FT_MM_Var_* %21 to i8*
  %25 = bitcast [2 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  %26 = getelementptr inbounds [2 x i64], [2 x i64]* %4, i64 0, i64 0
  %27 = getelementptr inbounds [2 x i64], [2 x i64]* %4, i64 0, i64 1
  %28 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %21, i64 0, i32 3
  %29 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = sdiv i64 %31, 65536
  store i64 %32, i64* %26, align 16
  %33 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %29, i64 1, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = sdiv i64 %34, 65536
  %36 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %37 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %36, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %37, align 8
  store i64 %35, i64* %27, align 8
  %39 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %38, i64 0, i32 25
  %40 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %39, align 8
  %41 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %40, i64 0, i32 2
  %42 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %41, align 8
  call void %42(%struct.FT_MemoryRec_* %40, i8* nonnull %24) #10
  %43 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %44 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %43, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %44, align 8
  %46 = call i32 @FT_Set_MM_Design_Coordinates(%struct.FT_FaceRec_* %45, i32 2, i64* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  br label %47

47:                                               ; preds = %16, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %48 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  br label %49

49:                                               ; preds = %8, %12, %47
  %50 = phi %class.CFX_Face* [ %6, %8 ], [ %6, %12 ], [ %48, %47 ]
  %51 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %51, align 8
  %53 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %52, i32 %1, i32 513) #10
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %74

55:                                               ; preds = %49
  %56 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8
  %57 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %56, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %57, align 8
  %59 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %58, i64 0, i32 21
  %60 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %60, i64 0, i32 5, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 2147483
  %65 = icmp ugt i32 %64, 4294966
  br i1 %65, label %74, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %58, i64 0, i32 13
  %68 = load i16, i16* %67, align 8
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %66
  %71 = mul nsw i32 %63, 1000
  %72 = zext i16 %68 to i32
  %73 = sdiv i32 %71, %72
  br label %74

74:                                               ; preds = %2, %49, %70, %66, %55
  %75 = phi i32 [ 0, %2 ], [ 0, %49 ], [ 0, %55 ], [ %73, %70 ], [ %63, %66 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font14AdjustMMParamsEiii(%class.CFX_Font* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.FT_MM_Var_*, align 8
  %6 = alloca [2 x i64], align 16
  %7 = bitcast %struct.FT_MM_Var_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %5, align 8
  %8 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %10 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = call i32 @FT_Get_MM_Var(%struct.FT_FaceRec_* %11, %struct.FT_MM_Var_** nonnull %5) #10
  %13 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %5, align 8
  %14 = icmp eq %struct.FT_MM_Var_* %13, null
  %15 = bitcast %struct.FT_MM_Var_* %13 to i8*
  br i1 %14, label %126, label %16

16:                                               ; preds = %4
  %17 = bitcast [2 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 0
  %19 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 1
  %20 = icmp eq i32 %3, 0
  %21 = bitcast [2 x i64]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 16, i1 false)
  br i1 %20, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %13, i64 0, i32 3
  %24 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %23, align 8
  %25 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %24, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sdiv i64 %26, 65536
  br label %32

28:                                               ; preds = %16
  %29 = sext i32 %3 to i64
  %30 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %13, i64 0, i32 3
  %31 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %30, align 8
  br label %32

32:                                               ; preds = %28, %22
  %33 = phi %struct.FT_Var_Axis_* [ %31, %28 ], [ %24, %22 ]
  %34 = phi i64 [ %29, %28 ], [ %27, %22 ]
  store i64 %34, i64* %18, align 16
  %35 = icmp eq i32 %2, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %33, i64 1, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = sdiv i64 %38, 65536
  %40 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %41 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %40, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %41, align 8
  br label %113

43:                                               ; preds = %32
  %44 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %33, i64 1, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = sdiv i64 %45, 65536
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %33, i64 1, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = sdiv i64 %49, 65536
  %51 = shl i64 %46, 32
  %52 = ashr exact i64 %51, 32
  store i64 %52, i64* %19, align 8
  %53 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %54 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %53, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %56 = call i32 @FT_Set_MM_Design_Coordinates(%struct.FT_FaceRec_* %55, i32 2, i64* nonnull %18) #10
  %57 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %58 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %57, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %58, align 8
  %60 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %59, i32 %1, i32 513) #10
  %61 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %62 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %61, i64 0, i32 2, i32 0, i32 0, i32 0
  %63 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %62, align 8
  %64 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %63, i64 0, i32 21
  %65 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %64, align 8
  %66 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %65, i64 0, i32 5, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = mul nsw i64 %67, 1000
  %69 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %63, i64 0, i32 13
  %70 = load i16, i16* %69, align 8
  %71 = zext i16 %70 to i64
  %72 = sdiv i64 %68, %71
  %73 = trunc i64 %72 to i32
  %74 = shl i64 %50, 32
  %75 = ashr exact i64 %74, 32
  store i64 %75, i64* %19, align 8
  %76 = call i32 @FT_Set_MM_Design_Coordinates(%struct.FT_FaceRec_* %63, i32 2, i64* nonnull %18) #10
  %77 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %78 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %77, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %78, align 8
  %80 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %79, i32 %1, i32 513) #10
  %81 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %82 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %81, i64 0, i32 2, i32 0, i32 0, i32 0
  %83 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %82, align 8
  %84 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %83, i64 0, i32 21
  %85 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %84, align 8
  %86 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %85, i64 0, i32 5, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = mul nsw i64 %87, 1000
  %89 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %83, i64 0, i32 13
  %90 = load i16, i16* %89, align 8
  %91 = zext i16 %90 to i64
  %92 = sdiv i64 %88, %91
  %93 = trunc i64 %92 to i32
  %94 = icmp eq i32 %93, %73
  br i1 %94, label %95, label %102

95:                                               ; preds = %43
  %96 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %83, i64 0, i32 25
  %97 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %96, align 8
  %98 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %97, i64 0, i32 2
  %99 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %98, align 8
  %100 = bitcast %struct.FT_MM_Var_** %5 to i8**
  %101 = load i8*, i8** %100, align 8
  call void %99(%struct.FT_MemoryRec_* %97, i8* %101) #10
  br label %125

102:                                              ; preds = %43
  %103 = trunc i64 %50 to i32
  %104 = sub nsw i32 %103, %47
  %105 = sub nsw i32 %2, %73
  %106 = mul nsw i32 %105, %104
  %107 = sub nsw i32 %93, %73
  %108 = sdiv i32 %106, %107
  %109 = add nsw i32 %108, %47
  %110 = sext i32 %109 to i64
  %111 = bitcast %struct.FT_MM_Var_** %5 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %102, %36
  %114 = phi i8* [ %112, %102 ], [ %15, %36 ]
  %115 = phi %struct.FT_FaceRec_* [ %83, %102 ], [ %42, %36 ]
  %116 = phi i64 [ %110, %102 ], [ %39, %36 ]
  store i64 %116, i64* %19, align 8
  %117 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %115, i64 0, i32 25
  %118 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %117, align 8
  %119 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %118, i64 0, i32 2
  %120 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %119, align 8
  call void %120(%struct.FT_MemoryRec_* %118, i8* %114) #10
  %121 = load %class.CFX_Face*, %class.CFX_Face** %8, align 8
  %122 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %121, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %122, align 8
  %124 = call i32 @FT_Set_MM_Design_Coordinates(%struct.FT_FaceRec_* %123, i32 2, i64* nonnull %18) #10
  br label %125

125:                                              ; preds = %95, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  br label %126

126:                                              ; preds = %4, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

declare i32 @FT_Load_Glyph(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CFX_Font12LoadEmbeddedEN6pdfium4spanIKhEEb(%class.CFX_Font* nocapture, %"class.pdfium::span.119"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.11", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.121", align 8
  %7 = alloca %"class.pdfium::span.119", align 8
  br i1 %2, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 9
  store i8 1, i8* %9, align 1
  br label %10

10:                                               ; preds = %8, %3
  %11 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.pdfium::span.119", %"class.pdfium::span.119"* %1, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.pdfium::span.119", %"class.pdfium::span.119"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %129, label %18

18:                                               ; preds = %10
  %19 = icmp slt i64 %15, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %21) #12
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %15, i64 1) #10
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 %15
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = bitcast i8** %24 to i64*
  %29 = icmp ult i64 %15, 32
  br i1 %29, label %116, label %30

30:                                               ; preds = %22
  %31 = getelementptr i8, i8* %23, i64 %15
  %32 = icmp ult i8* %23, %16
  %33 = icmp ult i8* %13, %31
  %34 = and i1 %32, %33
  br i1 %34, label %116, label %35

35:                                               ; preds = %30
  %36 = and i64 %15, -32
  %37 = getelementptr i8, i8* %23, i64 %36
  %38 = getelementptr i8, i8* %13, i64 %36
  %39 = add i64 %36, -32
  %40 = lshr exact i64 %39, 5
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 3
  %43 = icmp ult i64 %39, 96
  br i1 %43, label %95, label %44

44:                                               ; preds = %35
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %92, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %93, %46 ]
  %49 = getelementptr i8, i8* %23, i64 %47
  %50 = getelementptr i8, i8* %13, i64 %47
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1, !alias.scope !3
  %53 = getelementptr i8, i8* %50, i64 16
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1, !alias.scope !3
  %56 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %52, <16 x i8>* %56, align 1, !alias.scope !6, !noalias !3
  %57 = getelementptr i8, i8* %49, i64 16
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %55, <16 x i8>* %58, align 1, !alias.scope !6, !noalias !3
  %59 = or i64 %47, 32
  %60 = getelementptr i8, i8* %23, i64 %59
  %61 = getelementptr i8, i8* %13, i64 %59
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !3
  %64 = getelementptr i8, i8* %61, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !alias.scope !3
  %67 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %63, <16 x i8>* %67, align 1, !alias.scope !6, !noalias !3
  %68 = getelementptr i8, i8* %60, i64 16
  %69 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %69, align 1, !alias.scope !6, !noalias !3
  %70 = or i64 %47, 64
  %71 = getelementptr i8, i8* %23, i64 %70
  %72 = getelementptr i8, i8* %13, i64 %70
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !3
  %75 = getelementptr i8, i8* %72, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !3
  %78 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %78, align 1, !alias.scope !6, !noalias !3
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %80, align 1, !alias.scope !6, !noalias !3
  %81 = or i64 %47, 96
  %82 = getelementptr i8, i8* %23, i64 %81
  %83 = getelementptr i8, i8* %13, i64 %81
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !3
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !3
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !6, !noalias !3
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1, !alias.scope !6, !noalias !3
  %92 = add i64 %47, 128
  %93 = add i64 %48, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %46, !llvm.loop !8

95:                                               ; preds = %46, %35
  %96 = phi i64 [ 0, %35 ], [ %92, %46 ]
  %97 = icmp eq i64 %42, 0
  br i1 %97, label %114, label %98

98:                                               ; preds = %95, %98
  %99 = phi i64 [ %111, %98 ], [ %96, %95 ]
  %100 = phi i64 [ %112, %98 ], [ %42, %95 ]
  %101 = getelementptr i8, i8* %23, i64 %99
  %102 = getelementptr i8, i8* %13, i64 %99
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !3
  %105 = getelementptr i8, i8* %102, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !3
  %108 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %108, align 1, !alias.scope !6, !noalias !3
  %109 = getelementptr i8, i8* %101, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %110, align 1, !alias.scope !6, !noalias !3
  %111 = add i64 %99, 32
  %112 = add i64 %100, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %98, !llvm.loop !10

114:                                              ; preds = %98, %95
  %115 = icmp eq i64 %15, %36
  br i1 %115, label %126, label %116

116:                                              ; preds = %114, %30, %22
  %117 = phi i8* [ %23, %30 ], [ %23, %22 ], [ %37, %114 ]
  %118 = phi i8* [ %13, %30 ], [ %13, %22 ], [ %38, %114 ]
  br label %119

119:                                              ; preds = %116, %119
  %120 = phi i8* [ %124, %119 ], [ %117, %116 ]
  %121 = phi i8* [ %123, %119 ], [ %118, %116 ]
  %122 = load i8, i8* %121, align 1
  store i8 %122, i8* %120, align 1
  %123 = getelementptr inbounds i8, i8* %121, i64 1
  %124 = getelementptr inbounds i8, i8* %120, i64 1
  %125 = icmp eq i8* %123, %16
  br i1 %125, label %126, label %119, !llvm.loop !12

126:                                              ; preds = %119, %114
  %127 = phi i8* [ %37, %114 ], [ %124, %119 ]
  %128 = ptrtoint i8* %127 to i64
  store i64 %128, i64* %28, align 8
  br label %129

129:                                              ; preds = %10, %126
  %130 = phi i64 [ 0, %10 ], [ %128, %126 ]
  %131 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 6
  %132 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = ptrtoint i8* %133 to i64
  %137 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 6, i32 0, i32 1
  %138 = bitcast i8** %137 to i64*
  store i64 %136, i64* %138, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %133) #10
  %139 = bitcast %"class.std::__1::vector"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #10
  br label %140

140:                                              ; preds = %135, %129
  %141 = bitcast %"class.std::__1::vector"* %4 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.std::__1::vector"* %131 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 6, i32 0, i32 1
  %145 = bitcast i8** %144 to i64*
  store i64 %130, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %150 = bitcast i8** %149 to i64*
  store i64 %148, i64* %150, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %151 = bitcast %"class.fxcrt::RetainPtr.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #10
  %152 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #10
  %153 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %152, i64 0, i32 1, i32 0, i32 0, i32 0
  %154 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %153, align 8
  %155 = bitcast %"class.fxcrt::RetainPtr.121"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #10
  %156 = bitcast %"class.fxcrt::RetainPtr.121"* %6 to i64*
  store i64 0, i64* %156, align 8
  %157 = load i64, i64* %143, align 8
  %158 = load i64, i64* %145, align 8
  %159 = sub i64 %158, %157
  %160 = bitcast %"class.pdfium::span.119"* %7 to i64*
  store i64 %157, i64* %160, align 8
  %161 = getelementptr inbounds %"class.pdfium::span.119", %"class.pdfium::span.119"* %7, i64 0, i32 1
  store i64 %159, i64* %161, align 8
  call void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.11"* nonnull sret %5, %class.CFX_FontMgr* %154, %"class.fxcrt::RetainPtr.121"* nonnull dereferenceable(8) %6, %"class.pdfium::span.119"* nonnull %7, i32 0) #10
  %162 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2
  %163 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = bitcast %"class.fxcrt::RetainPtr.11"* %5 to i64*
  %165 = load i64, i64* %164, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %163, align 8
  %166 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %class.CFX_Face*, %class.CFX_Face** %166, align 8
  %168 = bitcast %"class.fxcrt::RetainPtr.11"* %162 to i64*
  store i64 %165, i64* %168, align 8
  %169 = icmp eq %class.CFX_Face* %167, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %140
  %171 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %167, i64 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = add nsw i64 %172, -1
  store i64 %173, i64* %171, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %140, %170
  store %class.CFX_Face* null, %class.CFX_Face** %163, align 8
  br label %195

176:                                              ; preds = %170
  %177 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %167, i64 0, i32 0
  %178 = bitcast %class.CFX_Face* %167 to void (%"class.fxcrt::Retainable"*)***
  %179 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, i64 1
  %181 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %180, align 8
  call void %181(%"class.fxcrt::Retainable"* nonnull %177) #10
  %182 = load %class.CFX_Face*, %class.CFX_Face** %163, align 8
  %183 = bitcast %class.CFX_Face* %182 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_Face* null, %class.CFX_Face** %163, align 8
  %184 = icmp eq %class.CFX_Face* %182, null
  br i1 %184, label %195, label %185

185:                                              ; preds = %176
  %186 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %182, i64 0, i32 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = add nsw i64 %187, -1
  store i64 %188, i64* %186, align 8
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %195

190:                                              ; preds = %185
  %191 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %182, i64 0, i32 0
  %192 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %183, align 8
  %193 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %192, i64 1
  %194 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %193, align 8
  call void %194(%"class.fxcrt::Retainable"* nonnull %191) #10
  br label %195

195:                                              ; preds = %175, %176, %185, %190
  %196 = getelementptr inbounds %"class.fxcrt::RetainPtr.121", %"class.fxcrt::RetainPtr.121"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load %"class.CFX_FontMgr::FontDesc"*, %"class.CFX_FontMgr::FontDesc"** %196, align 8
  store %"class.CFX_FontMgr::FontDesc"* null, %"class.CFX_FontMgr::FontDesc"** %196, align 8
  %198 = icmp eq %"class.CFX_FontMgr::FontDesc"* %197, null
  br i1 %198, label %210, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %197, i64 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = add nsw i64 %201, -1
  store i64 %202, i64* %200, align 8
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %210

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.CFX_FontMgr::FontDesc", %"class.CFX_FontMgr::FontDesc"* %197, i64 0, i32 0
  %206 = bitcast %"class.CFX_FontMgr::FontDesc"* %197 to void (%"class.fxcrt::Retainable"*)***
  %207 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %207, i64 1
  %209 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %208, align 8
  call void %209(%"class.fxcrt::Retainable"* nonnull %205) #10
  br label %210

210:                                              ; preds = %195, %199, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #10
  %211 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 8
  store i8 1, i8* %211, align 8
  %212 = load i64, i64* %143, align 8
  %213 = load i64, i64* %145, align 8
  %214 = sub i64 %213, %212
  %215 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 7, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = inttoptr i64 %212 to i8*
  %218 = icmp eq i8* %216, %217
  br i1 %218, label %220, label %219

219:                                              ; preds = %210
  store i8* %217, i8** %215, align 8
  br label %220

220:                                              ; preds = %210, %219
  %221 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 7, i32 1
  store i64 %214, i64* %221, align 8
  %222 = load %class.CFX_Face*, %class.CFX_Face** %166, align 8
  %223 = icmp ne %class.CFX_Face* %222, null
  ret i1 %223
}

declare void @_ZN11CFX_FontMgr12NewFixedFaceERKN5fxcrt9RetainPtrINS_8FontDescEEEN6pdfium4spanIKhEEi(%"class.fxcrt::RetainPtr.11"* sret, %class.CFX_FontMgr*, %"class.fxcrt::RetainPtr.121"* dereferenceable(8), %"class.pdfium::span.119"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CFX_Font8IsTTFontEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_Face*, %class.CFX_Face** %2, align 8
  %4 = icmp eq %class.CFX_Face* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 8
  %11 = icmp ne i64 %10, 0
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8CFX_Font9GetAscentEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_Face*, %class.CFX_Face** %2, align 8
  %4 = icmp eq %class.CFX_Face* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 14
  %9 = load i16, i16* %8, align 2
  %10 = sext i16 %9 to i32
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 13
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = mul nsw i32 %10, 1000
  %16 = zext i16 %12 to i32
  %17 = sdiv i32 %15, %16
  br label %18

18:                                               ; preds = %1, %5, %14
  %19 = phi i32 [ 0, %1 ], [ %17, %14 ], [ %10, %5 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8CFX_Font10GetDescentEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_Face*, %class.CFX_Face** %2, align 8
  %4 = icmp eq %class.CFX_Face* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 15
  %9 = load i16, i16* %8, align 4
  %10 = sext i16 %9 to i32
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 13
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = mul nsw i32 %10, 1000
  %16 = zext i16 %12 to i32
  %17 = sdiv i32 %15, %16
  br label %18

18:                                               ; preds = %1, %5, %14
  %19 = phi i32 [ 0, %1 ], [ %17, %14 ], [ %10, %5 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CFX_Font12GetGlyphBBoxEjP7FX_RECT(%class.CFX_Font* nocapture readonly, i32, %struct.FX_RECT* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.FT_BBox_, align 8
  %5 = alloca %struct.FT_GlyphRec_*, align 8
  %6 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %8 = icmp eq %class.CFX_Face* %7, null
  br i1 %8, label %201, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 8192
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %110, label %16

16:                                               ; preds = %9
  %17 = tail call i32 @FT_Set_Char_Size(%struct.FT_FaceRec_* %11, i64 0, i64 64000, i32 72, i32 72) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %201

19:                                               ; preds = %16
  %20 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %21 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %21, align 8
  %23 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %22, i32 %1, i32 512) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %201

25:                                               ; preds = %19
  %26 = bitcast %struct.FT_BBox_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  %27 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %4, i64 0, i32 1
  %28 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %4, i64 0, i32 2
  %29 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %4, i64 0, i32 3
  %30 = bitcast %struct.FT_GlyphRec_** %5 to i8*
  %31 = bitcast %struct.FT_BBox_* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store %struct.FT_GlyphRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_GlyphRec_*), %struct.FT_GlyphRec_** %5, align 8
  %32 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %33 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %32, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %34, i64 0, i32 21
  %36 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %35, align 8
  %37 = call i32 @FT_Get_Glyph(%struct.FT_GlyphSlotRec_* %36, %struct.FT_GlyphRec_** nonnull %5) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %108

39:                                               ; preds = %25
  %40 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %4, i64 0, i32 0
  %41 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %5, align 8
  call void @FT_Glyph_Get_CBox(%struct.FT_GlyphRec_* %41, i32 3, %struct.FT_BBox_* nonnull %4) #10
  %42 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %43 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %42, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %43, align 8
  %45 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %44, i64 0, i32 22
  %46 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %46, i64 0, i32 2, i32 0
  %48 = load i16, i16* %47, align 8
  %49 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %46, i64 0, i32 2, i32 1
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %48, 0
  %52 = icmp eq i16 %50, 0
  %53 = or i1 %51, %52
  %54 = load i64, i64* %40, align 8
  br i1 %53, label %55, label %59

55:                                               ; preds = %39
  %56 = load i64, i64* %28, align 8
  %57 = load i64, i64* %29, align 8
  %58 = load i64, i64* %27, align 8
  br label %73

59:                                               ; preds = %39
  %60 = mul nsw i64 %54, 1000
  %61 = zext i16 %48 to i64
  %62 = sdiv i64 %60, %61
  %63 = load i64, i64* %28, align 8
  %64 = mul nsw i64 %63, 1000
  %65 = sdiv i64 %64, %61
  %66 = load i64, i64* %29, align 8
  %67 = mul nsw i64 %66, 1000
  %68 = zext i16 %50 to i64
  %69 = sdiv i64 %67, %68
  %70 = load i64, i64* %27, align 8
  %71 = mul nsw i64 %70, 1000
  %72 = sdiv i64 %71, %68
  br label %73

73:                                               ; preds = %59, %55
  %74 = phi i64 [ %62, %59 ], [ %54, %55 ]
  %75 = phi i64 [ %65, %59 ], [ %56, %55 ]
  %76 = phi i64 [ %69, %59 ], [ %57, %55 ]
  %77 = phi i64 [ %72, %59 ], [ %58, %55 ]
  %78 = trunc i64 %77 to i32
  %79 = trunc i64 %76 to i32
  %80 = trunc i64 %75 to i32
  %81 = trunc i64 %74 to i32
  %82 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 0
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 2
  store i32 %80, i32* %83, align 4
  %84 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 1
  store i32 %79, i32* %84, align 4
  %85 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 3
  store i32 %78, i32* %85, align 4
  %86 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %87 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %86, i64 0, i32 2, i32 0, i32 0, i32 0
  %88 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %87, align 8
  %89 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %88, i64 0, i32 14
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i32
  %92 = icmp sgt i32 %79, %91
  %93 = select i1 %92, i32 %91, i32 %79
  store i32 %93, i32* %84, align 4
  %94 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %95 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %94, i64 0, i32 2, i32 0, i32 0, i32 0
  %96 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %95, align 8
  %97 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %96, i64 0, i32 15
  %98 = load i16, i16* %97, align 4
  %99 = sext i16 %98 to i32
  %100 = icmp slt i32 %78, %99
  %101 = select i1 %100, i32 %99, i32 %78
  store i32 %101, i32* %85, align 4
  %102 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %5, align 8
  call void @FT_Done_Glyph(%struct.FT_GlyphRec_* %102) #10
  %103 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %104 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %103, i64 0, i32 2, i32 0, i32 0, i32 0
  %105 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %104, align 8
  %106 = call i32 @FT_Set_Pixel_Sizes(%struct.FT_FaceRec_* %105, i32 0, i32 64) #10
  %107 = icmp eq i32 %106, 0
  br label %108

108:                                              ; preds = %25, %73
  %109 = phi i1 [ %107, %73 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  br label %201

110:                                              ; preds = %9
  %111 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %11, i32 %1, i32 513) #10
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %201

113:                                              ; preds = %110
  %114 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %115 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %114, i64 0, i32 2, i32 0, i32 0, i32 0
  %116 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %115, align 8
  %117 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %116, i64 0, i32 13
  %118 = load i16, i16* %117, align 8
  %119 = icmp eq i16 %118, 0
  %120 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %116, i64 0, i32 21
  %121 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %120, align 8
  %122 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %121, i64 0, i32 5, i32 2
  %123 = load i64, i64* %122, align 8
  br i1 %119, label %124, label %156

124:                                              ; preds = %113
  %125 = trunc i64 %123 to i32
  %126 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 0
  store i32 %125, i32* %126, align 4
  %127 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %128 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %127, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %128, align 8
  %130 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %129, i64 0, i32 21
  %131 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %130, align 8
  %132 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %131, i64 0, i32 5, i32 3
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 3
  store i32 %134, i32* %135, align 4
  %136 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %137 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %136, i64 0, i32 2, i32 0, i32 0, i32 0
  %138 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %137, align 8
  %139 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %138, i64 0, i32 21
  %140 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %139, align 8
  %141 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %140, i64 0, i32 5, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %133, %142
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 1
  store i32 %144, i32* %145, align 4
  %146 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %147 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %146, i64 0, i32 2, i32 0, i32 0, i32 0
  %148 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %147, align 8
  %149 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %148, i64 0, i32 21
  %150 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %149, align 8
  %151 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %150, i64 0, i32 5, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = trunc i64 %152 to i32
  %154 = add i32 %153, %125
  %155 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 2
  store i32 %154, i32* %155, align 4
  br label %201

156:                                              ; preds = %113
  %157 = mul nsw i64 %123, 1000
  %158 = zext i16 %118 to i64
  %159 = sdiv i64 %157, %158
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 0
  store i32 %160, i32* %161, align 4
  %162 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %163 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %162, i64 0, i32 2, i32 0, i32 0, i32 0
  %164 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %163, align 8
  %165 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %164, i64 0, i32 21
  %166 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %165, align 8
  %167 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %166, i64 0, i32 5, i32 3
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %166, i64 0, i32 5, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = sub nsw i64 %168, %170
  %172 = mul nsw i64 %171, 1000
  %173 = sdiv i64 %172, %158
  %174 = trunc i64 %173 to i32
  %175 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 1
  store i32 %174, i32* %175, align 4
  %176 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %177 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %176, i64 0, i32 2, i32 0, i32 0, i32 0
  %178 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %177, align 8
  %179 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %178, i64 0, i32 21
  %180 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %179, align 8
  %181 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %180, i64 0, i32 5, i32 2
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %180, i64 0, i32 5, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = add nsw i64 %184, %182
  %186 = mul nsw i64 %185, 1000
  %187 = sdiv i64 %186, %158
  %188 = trunc i64 %187 to i32
  %189 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 2
  store i32 %188, i32* %189, align 4
  %190 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %191 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %190, i64 0, i32 2, i32 0, i32 0, i32 0
  %192 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %191, align 8
  %193 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %192, i64 0, i32 21
  %194 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %193, align 8
  %195 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %194, i64 0, i32 5, i32 3
  %196 = load i64, i64* %195, align 8
  %197 = mul nsw i64 %196, 1000
  %198 = sdiv i64 %197, %158
  %199 = trunc i64 %198 to i32
  %200 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 3
  store i32 %199, i32* %200, align 4
  br label %201

201:                                              ; preds = %3, %124, %156, %110, %108, %16, %19
  %202 = phi i1 [ false, %3 ], [ %109, %108 ], [ false, %16 ], [ false, %19 ], [ false, %110 ], [ true, %156 ], [ true, %124 ]
  ret i1 %202
}

declare i32 @FT_Set_Char_Size(%struct.FT_FaceRec_*, i64, i64, i32, i32) local_unnamed_addr #2

declare i32 @FT_Get_Glyph(%struct.FT_GlyphSlotRec_*, %struct.FT_GlyphRec_**) local_unnamed_addr #2

declare void @FT_Glyph_Get_CBox(%struct.FT_GlyphRec_*, i32, %struct.FT_BBox_*) local_unnamed_addr #2

declare void @FT_Done_Glyph(%struct.FT_GlyphRec_*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8CFX_Font8IsItalicEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %6 = icmp eq %class.CFX_Face* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %7
  %15 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %16, align 8
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 6
  %18 = load i8*, i8** %17, align 8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* %18) #10
  call void @_ZN5fxcrt10ByteString9MakeLowerEv(%"class.fxcrt::ByteString"* nonnull %3) #10
  %19 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  store i64 6, i64* %21, align 8
  %22 = call { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"* nonnull %3, %"class.fxcrt::StringViewTemplate"* nonnull %2, i64 0) #10
  %23 = extractvalue { i8, i64 } %22, 0
  %24 = icmp ne i8 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %25

25:                                               ; preds = %1, %7, %14
  %26 = phi i1 [ %24, %14 ], [ false, %1 ], [ true, %7 ]
  ret i1 %26
}

declare void @_ZN5fxcrt10ByteString9MakeLowerEv(%"class.fxcrt::ByteString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CFX_Font6IsBoldEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_Face*, %class.CFX_Face** %2, align 8
  %4 = icmp eq %class.CFX_Face* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 2
  %11 = icmp ne i64 %10, 0
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CFX_Font12IsFixedWidthEv(%class.CFX_Font* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_Face*, %class.CFX_Face** %2, align 8
  %4 = icmp eq %class.CFX_Face* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4
  %11 = icmp ne i64 %10, 0
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font9GetPsNameEv(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_Font* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %6 = icmp eq %class.CFX_Face* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #10
  br label %23

8:                                                ; preds = %2
  %9 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  %11 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %11, align 8
  %13 = tail call i8* @FT_Get_Postscript_Name(%struct.FT_FaceRec_* %12) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* %13) #10
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %8, %16
  %21 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8CFX_Font17kUntitledFontNameE, i64 0, i64 0)) #10
  br label %22

22:                                               ; preds = %20, %16
  call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %23

23:                                               ; preds = %22, %7
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

declare i8* @FT_Get_Postscript_Name(%struct.FT_FaceRec_*) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font13GetFamilyNameEv(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_Font* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %5 = icmp eq %class.CFX_Face* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %7, align 8
  %9 = icmp eq %class.CFX_SubstFont* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #10
  br label %18

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %13, i64 0, i32 5
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* %15) #10
  br label %18

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %8, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %17) #10
  br label %18

18:                                               ; preds = %16, %11, %10
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font23GetFamilyNameOrUntitledEv(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_Font* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %5, align 8
  %6 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8, !noalias !13
  %8 = icmp eq %class.CFX_Face* %7, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %10, align 8, !noalias !13
  %12 = icmp eq %class.CFX_SubstFont* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %3) #10
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %16, i64 0, i32 5
  %18 = load i8*, i8** %17, align 8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* %18) #10
  br label %21

19:                                               ; preds = %9
  %20 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %11, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %3, %"class.fxcrt::ByteString"* dereferenceable(8) %20) #10
  br label %21

21:                                               ; preds = %13, %14, %19
  %22 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %5, align 8
  %23 = icmp eq %"class.fxcrt::StringDataTemplate"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %22, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %21, %24
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8CFX_Font17kUntitledFontNameE, i64 0, i64 0)) #10
  br label %30

29:                                               ; preds = %24
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #10
  br label %30

30:                                               ; preds = %29, %28
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font11GetFaceNameEv(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_Font* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_Face*, %class.CFX_Face** %7, align 8
  %9 = icmp eq %class.CFX_Face* %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %11, align 8
  %13 = icmp eq %class.CFX_SubstFont* %12, null
  br i1 %13, label %14, label %50

14:                                               ; preds = %10
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #10
  br label %52

15:                                               ; preds = %2
  %16 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %17, align 8
  %18 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %19, i64 0, i32 6
  %21 = load i8*, i8** %20, align 8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %21) #10
  %22 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %22, align 8
  call void @_ZNK8CFX_Font23GetFamilyNameOrUntitledEv(%"class.fxcrt::ByteString"* sret %0, %class.CFX_Font* %1)
  %23 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %17, align 8
  %24 = icmp eq %"class.fxcrt::StringDataTemplate"* %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %23, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %25
  %30 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10
  br i1 %30, label %49, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  %33 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  %34 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %35, align 8, !noalias !16
  %36 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 1, i64* %36, align 8, !noalias !16
  %37 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %17, align 8, !noalias !19
  %38 = icmp eq %"class.fxcrt::StringDataTemplate"* %37, null
  %39 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 3, i64 0
  %40 = select i1 %38, i8* null, i8* %39
  br i1 %38, label %44, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 1
  %43 = load i64, i64* %42, align 8, !noalias !22
  br label %44

44:                                               ; preds = %31, %41
  %45 = phi i64 [ %43, %41 ], [ 0, %31 ]
  %46 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %46, align 8, !alias.scope !22, !noalias !16
  %47 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 %45, i64* %47, align 8, !alias.scope !22, !noalias !16
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEES2_(%"class.fxcrt::ByteString"* nonnull %6, %"class.fxcrt::StringViewTemplate"* nonnull %3, %"class.fxcrt::StringViewTemplate"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  %48 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %49

49:                                               ; preds = %29, %15, %25, %44
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %52

50:                                               ; preds = %10
  %51 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %12, i64 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %51) #10
  br label %52

52:                                               ; preds = %50, %49, %14
  ret void
}

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font15GetBaseFontNameEb(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_Font* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  call void @_ZNK8CFX_Font9GetPsNameEv(%"class.fxcrt::ByteString"* nonnull sret %6, %class.CFX_Font* %1)
  br i1 %2, label %20, label %11

11:                                               ; preds = %3
  %12 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %13 = icmp eq %"class.fxcrt::StringDataTemplate"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %12, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN8CFX_Font17kUntitledFontNameE, i64 0, i64 0)) #10
  br i1 %19, label %21, label %20

20:                                               ; preds = %18, %3
  call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #10
  br label %92

21:                                               ; preds = %18, %11, %14
  %22 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CFX_Face*, %class.CFX_Face** %22, align 8
  %24 = icmp eq %class.CFX_Face* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %26, align 8
  %28 = icmp eq %class.CFX_SubstFont* %27, null
  br i1 %28, label %29, label %90

29:                                               ; preds = %25
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #10
  br label %92

30:                                               ; preds = %21
  %31 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %32, align 8
  %33 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %34, i64 0, i32 6
  %36 = load i8*, i8** %35, align 8
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* %36) #10
  %37 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %37, align 8
  call void @_ZNK8CFX_Font23GetFamilyNameOrUntitledEv(%"class.fxcrt::ByteString"* sret %0, %class.CFX_Font* %1)
  %38 = load %class.CFX_Face*, %class.CFX_Face** %22, align 8
  %39 = icmp eq %class.CFX_Face* %38, null
  br i1 %39, label %49, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %41, align 8
  %43 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %42, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = call i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"* %0, i8 signext 32) #10
  br label %49

49:                                               ; preds = %40, %30, %47
  %50 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %51 = icmp eq %"class.fxcrt::StringDataTemplate"* %50, null
  br i1 %51, label %89, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %50, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %89, label %56

56:                                               ; preds = %52
  %57 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10
  br i1 %57, label %89, label %58

58:                                               ; preds = %56
  %59 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  %60 = load %class.CFX_Face*, %class.CFX_Face** %22, align 8
  %61 = icmp eq %class.CFX_Face* %60, null
  br i1 %61, label %70, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %60, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %63, align 8
  %65 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %64, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 8
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %68, [2 x i8]* @.str.7, [2 x i8]* @.str.8
  br label %70

70:                                               ; preds = %62, %58
  %71 = phi [2 x i8]* [ @.str.7, %58 ], [ %69, %62 ]
  %72 = getelementptr inbounds [2 x i8], [2 x i8]* %71, i64 0, i64 0
  %73 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73)
  %74 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74)
  %75 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %72, i8** %75, align 8, !noalias !23
  %76 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 1, i64* %76, align 8, !noalias !23
  %77 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8, !noalias !26
  %78 = icmp eq %"class.fxcrt::StringDataTemplate"* %77, null
  %79 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %77, i64 0, i32 3, i64 0
  %80 = select i1 %78, i8* null, i8* %79
  br i1 %78, label %84, label %81

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %77, i64 0, i32 1
  %83 = load i64, i64* %82, align 8, !noalias !29
  br label %84

84:                                               ; preds = %70, %81
  %85 = phi i64 [ %83, %81 ], [ 0, %70 ]
  %86 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %80, i8** %86, align 8, !alias.scope !29, !noalias !23
  %87 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %85, i64* %87, align 8, !alias.scope !29, !noalias !23
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEES2_(%"class.fxcrt::ByteString"* nonnull %8, %"class.fxcrt::StringViewTemplate"* nonnull %4, %"class.fxcrt::StringViewTemplate"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74)
  %88 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  br label %89

89:                                               ; preds = %56, %49, %52, %84
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %92

90:                                               ; preds = %25
  %91 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %27, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %91) #10
  br label %92

92:                                               ; preds = %90, %89, %29, %20
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret void
}

declare i64 @_ZN5fxcrt10ByteString6RemoveEc(%"class.fxcrt::ByteString"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CFX_Font7GetBBoxEP7FX_RECT(%class.CFX_Font* nocapture readonly, %struct.FX_RECT* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %5 = icmp eq %class.CFX_Face* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %8, i64 0, i32 13
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 0
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %8, i64 0, i32 12, i32 0
  %13 = load i64, i64* %12, align 8
  br i1 %11, label %14, label %38

14:                                               ; preds = %6
  %15 = trunc i64 %13 to i32
  %16 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  store i32 %15, i32* %16, align 4
  %17 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %18 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %19, i64 0, i32 12, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  store i32 %22, i32* %23, align 4
  %24 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %25 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %25, align 8
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %26, i64 0, i32 12, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  store i32 %29, i32* %30, align 4
  %31 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %32 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %31, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %32, align 8
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %33, i64 0, i32 12, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  store i32 %36, i32* %37, align 4
  br label %71

38:                                               ; preds = %6
  %39 = mul nsw i64 %13, 1000
  %40 = zext i16 %10 to i64
  %41 = sdiv i64 %39, %40
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  store i32 %42, i32* %43, align 4
  %44 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %45 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %44, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %46, i64 0, i32 12, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = mul nsw i64 %48, 1000
  %50 = sdiv i64 %49, %40
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  store i32 %51, i32* %52, align 4
  %53 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %54 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %53, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %55, i64 0, i32 12, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = mul nsw i64 %57, 1000
  %59 = sdiv i64 %58, %40
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  store i32 %60, i32* %61, align 4
  %62 = load %class.CFX_Face*, %class.CFX_Face** %3, align 8
  %63 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %62, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %63, align 8
  %65 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %64, i64 0, i32 12, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = mul nsw i64 %66, 1000
  %68 = sdiv i64 %67, %40
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  store i32 %69, i32* %70, align 4
  br label %71

71:                                               ; preds = %2, %14, %38
  %72 = phi i1 [ false, %2 ], [ true, %38 ], [ true, %14 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFX_Font21GetOrCreateGlyphCacheEv(%"class.fxcrt::RetainPtr.33"* noalias nocapture sret, %class.CFX_Font*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.33", align 8
  %4 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %5, align 8
  %7 = icmp eq %class.CFX_GlyphCache* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %class.CFX_GlyphCache* %6 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr.33"* %0 to i64*
  store i64 %9, i64* %10, align 8
  br label %56

11:                                               ; preds = %2
  %12 = bitcast %"class.fxcrt::RetainPtr.33"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #10
  %14 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %class.CFX_FontCache*, %class.CFX_FontCache** %14, align 8
  call void @_ZN13CFX_FontCache13GetGlyphCacheEPK8CFX_Font(%"class.fxcrt::RetainPtr.33"* nonnull sret %3, %class.CFX_FontCache* %15, %class.CFX_Font* %1) #10
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.fxcrt::RetainPtr.33"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %16, align 8
  %19 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %5, align 8
  %20 = bitcast %"class.fxcrt::RetainPtr.33"* %4 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %class.CFX_GlyphCache* %19, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %16, align 8
  %23 = inttoptr i64 %18 to %class.CFX_GlyphCache*
  br label %51

24:                                               ; preds = %11
  %25 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %19, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %16, align 8
  br label %49

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %19, i64 0, i32 0
  %32 = bitcast %class.CFX_GlyphCache* %19 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  call void %35(%"class.fxcrt::Retainable"* nonnull %31) #10
  %36 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %16, align 8
  %37 = bitcast %class.CFX_GlyphCache* %36 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %16, align 8
  %38 = icmp eq %class.CFX_GlyphCache* %36, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %36, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, -1
  store i64 %42, i64* %40, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %36, i64 0, i32 0
  %46 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %47 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, i64 1
  %48 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, align 8
  call void %48(%"class.fxcrt::Retainable"* nonnull %45) #10
  br label %49

49:                                               ; preds = %29, %30, %39, %44
  %50 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %5, align 8
  br label %51

51:                                               ; preds = %49, %22
  %52 = phi %class.CFX_GlyphCache* [ %50, %49 ], [ %23, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %53 = ptrtoint %class.CFX_GlyphCache* %52 to i64
  %54 = bitcast %"class.fxcrt::RetainPtr.33"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = icmp eq %class.CFX_GlyphCache* %52, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %8, %51
  %57 = phi %class.CFX_GlyphCache* [ %6, %8 ], [ %52, %51 ]
  %58 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %57, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, 1
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %51, %56
  ret void
}

declare void @_ZN13CFX_FontCache13GetGlyphCacheEPK8CFX_Font(%"class.fxcrt::RetainPtr.33"* sret, %class.CFX_FontCache*, %class.CFX_Font*) local_unnamed_addr #2

declare i32 @FT_Get_MM_Var(%struct.FT_FaceRec_*, %struct.FT_MM_Var_**) local_unnamed_addr #2

declare i32 @FT_Set_MM_Design_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_PathData* @_ZNK8CFX_Font17LoadGlyphPathImplEji(%class.CFX_Font* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.FT_Matrix_, align 8
  %5 = alloca %class.ScopedFontTransform, align 8
  %6 = alloca %"class.fxcrt::RetainPtr.11", align 8
  %7 = alloca %struct.FT_Outline_Funcs_, align 16
  %8 = alloca %"struct.(anonymous namespace)::OUTLINE_PARAMS", align 8
  %9 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_Face*, %class.CFX_Face** %9, align 8
  %11 = icmp eq %class.CFX_Face* %10, null
  br i1 %11, label %168, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %13, align 8
  %15 = tail call i32 @FT_Set_Pixel_Sizes(%struct.FT_FaceRec_* %14, i32 0, i32 64) #10
  %16 = bitcast %struct.FT_Matrix_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 bitcast (%struct.FT_Matrix_* @__const._ZNK8CFX_Font17LoadGlyphPathImplEji.ft_matrix to i8*), i64 32, i1 false)
  %17 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %17, align 8
  %19 = icmp eq %class.CFX_SubstFont* %18, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %18, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %20
  %25 = icmp sgt i32 %22, 0
  %26 = icmp eq i32 %22, -2147483648
  %27 = or i1 %25, %26
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = sub nsw i32 0, %22
  %30 = icmp ult i32 %29, 30
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds [30 x i8], [30 x i8]* @_ZN12_GLOBAL__N_110kAngleSkewE, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i64
  %36 = shl nsw i64 %35, 16
  %37 = sdiv i64 %36, 100
  br label %38

38:                                               ; preds = %24, %28, %31
  %39 = phi i64 [ %37, %31 ], [ -38010, %28 ], [ -38010, %24 ]
  %40 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %0, i64 0, i32 9
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %4, i64 0, i32 2
  store i64 %39, i64* %44, align 8
  br label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %4, i64 0, i32 1
  %47 = sub nsw i64 0, %39
  store i64 %47, i64* %46, align 8
  br label %48

48:                                               ; preds = %43, %45, %20
  %49 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %18, i64 0, i32 7
  %50 = load i8, i8* %49, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %18, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  tail call void @_ZNK8CFX_Font14AdjustMMParamsEiii(%class.CFX_Font* %0, i32 %1, i32 %2, i32 %54)
  br label %55

55:                                               ; preds = %12, %48, %52
  %56 = bitcast %class.ScopedFontTransform* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  %57 = getelementptr inbounds %class.ScopedFontTransform, %class.ScopedFontTransform* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_Face* inttoptr (i64 -6148914691236517206 to %class.CFX_Face*), %class.CFX_Face** %57, align 8
  %58 = load %class.CFX_Face*, %class.CFX_Face** %9, align 8
  %59 = ptrtoint %class.CFX_Face* %58 to i64
  %60 = bitcast %"class.fxcrt::RetainPtr.11"* %6 to i64*
  store i64 %59, i64* %60, align 8
  %61 = icmp eq %class.CFX_Face* %58, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %58, i64 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = add nsw i64 %64, 1
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %55, %62
  call void @_ZN19ScopedFontTransformC1EN5fxcrt9RetainPtrI8CFX_FaceEEP10FT_Matrix_(%class.ScopedFontTransform* nonnull %5, %"class.fxcrt::RetainPtr.11"* nonnull %6, %struct.FT_Matrix_* nonnull %4) #10
  %67 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %class.CFX_Face*, %class.CFX_Face** %67, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %67, align 8
  %69 = icmp eq %class.CFX_Face* %68, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %68, i64 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = add nsw i64 %72, -1
  store i64 %73, i64* %71, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %68, i64 0, i32 0
  %77 = bitcast %class.CFX_Face* %68 to void (%"class.fxcrt::Retainable"*)***
  %78 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, i64 1
  %80 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, align 8
  call void %80(%"class.fxcrt::Retainable"* nonnull %76) #10
  br label %81

81:                                               ; preds = %66, %70, %75
  %82 = load %class.CFX_Face*, %class.CFX_Face** %9, align 8
  %83 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %82, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %83, align 8
  %85 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %84, i64 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 8200
  %88 = icmp eq i64 %87, 8200
  %89 = select i1 %88, i32 8, i32 10
  %90 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %84, i32 %1, i32 %89) #10
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %166

92:                                               ; preds = %81
  %93 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %17, align 8
  %94 = icmp eq %class.CFX_SubstFont* %93, null
  br i1 %94, label %132, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %93, i64 0, i32 7
  %97 = load i8, i8* %96, align 2, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %132

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %93, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, 400
  br i1 %102, label %103, label %132

103:                                              ; preds = %99
  %104 = add nsw i32 %101, -400
  %105 = sdiv i32 %104, 10
  %106 = icmp ult i32 %105, 99
  %107 = select i1 %106, i32 %105, i32 99
  %108 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %93, i64 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 128
  %111 = zext i32 %107 to i64
  br i1 %110, label %112, label %118

112:                                              ; preds = %103
  %113 = getelementptr inbounds [100 x i8], [100 x i8]* @_ZN12_GLOBAL__N_118kWeightPowShiftJisE, i64 0, i64 %111
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 16
  %117 = udiv i32 %116, 36655
  br label %122

118:                                              ; preds = %103
  %119 = getelementptr inbounds [100 x i8], [100 x i8]* @_ZN12_GLOBAL__N_110kWeightPowE, i64 0, i64 %111
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  br label %122

122:                                              ; preds = %118, %112
  %123 = phi i32 [ %117, %112 ], [ %121, %118 ]
  %124 = load %class.CFX_Face*, %class.CFX_Face** %9, align 8
  %125 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %124, i64 0, i32 2, i32 0, i32 0, i32 0
  %126 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %125, align 8
  %127 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %126, i64 0, i32 21
  %128 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %127, align 8
  %129 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %128, i64 0, i32 13
  %130 = zext i32 %123 to i64
  %131 = call i32 @FT_Outline_Embolden(%struct.FT_Outline_* %129, i64 %130) #10
  br label %132

132:                                              ; preds = %92, %95, %122, %99
  %133 = bitcast %struct.FT_Outline_Funcs_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %133) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %133, i8 -86, i64 40, i1 false)
  %134 = bitcast %struct.FT_Outline_Funcs_* %7 to <2 x i32 (%struct.FT_Vector_*, i8*)*>*
  store <2 x i32 (%struct.FT_Vector_*, i8*)*> <i32 (%struct.FT_Vector_*, i8*)* @_ZN12_GLOBAL__N_114Outline_MoveToEPK10FT_Vector_Pv, i32 (%struct.FT_Vector_*, i8*)* @_ZN12_GLOBAL__N_114Outline_LineToEPK10FT_Vector_Pv>, <2 x i32 (%struct.FT_Vector_*, i8*)*>* %134, align 16
  %135 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %7, i64 0, i32 2
  store i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)* @_ZN12_GLOBAL__N_115Outline_ConicToEPK10FT_Vector_S2_Pv, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %135, align 16
  %136 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %7, i64 0, i32 3
  store i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)* @_ZN12_GLOBAL__N_115Outline_CubicToEPK10FT_Vector_S2_S2_Pv, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %136, align 8
  %137 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %7, i64 0, i32 4
  store i32 0, i32* %137, align 16
  %138 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %7, i64 0, i32 5
  store i64 0, i64* %138, align 8
  %139 = call i8* @_Znwm(i64 24) #11
  %140 = bitcast i8* %139 to %class.CFX_PathData*
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %140) #10
  %141 = bitcast %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #10
  %142 = getelementptr inbounds %"struct.(anonymous namespace)::OUTLINE_PARAMS", %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %8, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.(anonymous namespace)::OUTLINE_PARAMS", %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %8, i64 0, i32 2
  %144 = getelementptr inbounds %"struct.(anonymous namespace)::OUTLINE_PARAMS", %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %8, i64 0, i32 3
  %145 = getelementptr inbounds %"struct.(anonymous namespace)::OUTLINE_PARAMS", %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %8, i64 0, i32 4, i64 0
  %146 = bitcast i8* %145 to i32*
  store i32 -1431655766, i32* %146, align 4
  %147 = bitcast %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %8 to i8**
  store i8* %139, i8** %147, align 8
  store i32 0, i32* %143, align 4
  store i32 0, i32* %142, align 8
  store float 4.096000e+03, float* %144, align 8
  %148 = load %class.CFX_Face*, %class.CFX_Face** %9, align 8
  %149 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %148, i64 0, i32 2, i32 0, i32 0, i32 0
  %150 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %149, align 8
  %151 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %150, i64 0, i32 21
  %152 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %151, align 8
  %153 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %152, i64 0, i32 13
  %154 = call i32 @FT_Outline_Decompose(%struct.FT_Outline_* %153, %struct.FT_Outline_Funcs_* nonnull %7, i8* nonnull %141) #10
  %155 = bitcast i8* %139 to %class.FX_PATHPOINT**
  %156 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %155, align 8
  %157 = getelementptr inbounds i8, i8* %139, i64 8
  %158 = bitcast i8* %157 to %class.FX_PATHPOINT**
  %159 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %158, align 8
  %160 = icmp eq %class.FX_PATHPOINT* %156, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %132
  %162 = ptrtoint i8* %139 to i64
  call fastcc void @_ZN12_GLOBAL__N_125Outline_CheckEmptyContourEPNS_14OUTLINE_PARAMSE(%"struct.(anonymous namespace)::OUTLINE_PARAMS"* nonnull %8)
  call void @_ZN12CFX_PathData9ClosePathEv(%class.CFX_PathData* nonnull %140) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #10
  br label %164

163:                                              ; preds = %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #10
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %140) #10
  call void @_ZdlPv(i8* nonnull %139) #11
  br label %164

164:                                              ; preds = %161, %163
  %165 = phi i64 [ %162, %161 ], [ 0, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %133) #10
  br label %166

166:                                              ; preds = %81, %164
  %167 = phi i64 [ %165, %164 ], [ 0, %81 ]
  call void @_ZN19ScopedFontTransformD1Ev(%class.ScopedFontTransform* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  br label %168

168:                                              ; preds = %3, %166
  %169 = phi i64 [ %167, %166 ], [ 0, %3 ]
  %170 = inttoptr i64 %169 to %class.CFX_PathData*
  ret %class.CFX_PathData* %170
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8CFX_Font16GetSkewFromAngleEi(i32) local_unnamed_addr #3 align 2 {
  %2 = icmp sgt i32 %0, 0
  %3 = icmp eq i32 %0, -2147483648
  %4 = or i1 %2, %3
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = sub nsw i32 0, %0
  %7 = icmp ult i32 %6, 30
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds [30 x i8], [30 x i8]* @_ZN12_GLOBAL__N_110kAngleSkewE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  br label %13

13:                                               ; preds = %1, %5, %8
  %14 = phi i32 [ %12, %8 ], [ -58, %5 ], [ -58, %1 ]
  ret i32 %14
}

declare void @_ZN19ScopedFontTransformC1EN5fxcrt9RetainPtrI8CFX_FaceEEP10FT_Matrix_(%class.ScopedFontTransform*, %"class.fxcrt::RetainPtr.11"*, %struct.FT_Matrix_*) unnamed_addr #2

declare i32 @FT_Outline_Embolden(%struct.FT_Outline_*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114Outline_MoveToEPK10FT_Vector_Pv(%struct.FT_Vector_* nocapture readonly, i8* nocapture) #0 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = bitcast i8* %1 to %"struct.(anonymous namespace)::OUTLINE_PARAMS"*
  tail call fastcc void @_ZN12_GLOBAL__N_125Outline_CheckEmptyContourEPNS_14OUTLINE_PARAMSE(%"struct.(anonymous namespace)::OUTLINE_PARAMS"* %4)
  %5 = bitcast i8* %1 to %class.CFX_PathData**
  %6 = load %class.CFX_PathData*, %class.CFX_PathData** %5, align 8
  tail call void @_ZN12CFX_PathData9ClosePathEv(%class.CFX_PathData* %6) #10
  %7 = load %class.CFX_PathData*, %class.CFX_PathData** %5, align 8
  %8 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = sitofp i64 %10 to float
  %12 = getelementptr inbounds i8, i8* %1, i64 16
  %13 = bitcast i8* %12 to float*
  %14 = load float, float* %13, align 8
  %15 = fdiv float %11, %14
  %16 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sitofp i64 %17 to float
  %19 = fdiv float %18, %14
  %20 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %15, float* %20, align 4
  %21 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %19, float* %21, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %3, i8 zeroext 2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %22 = load i64, i64* %9, align 8
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds i8, i8* %1, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = load i64, i64* %16, align 8
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds i8, i8* %1, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114Outline_LineToEPK10FT_Vector_Pv(%struct.FT_Vector_* nocapture readonly, i8* nocapture) #0 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = bitcast i8* %1 to %class.CFX_PathData**
  %5 = load %class.CFX_PathData*, %class.CFX_PathData** %4, align 8
  %6 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sitofp i64 %8 to float
  %10 = getelementptr inbounds i8, i8* %1, i64 16
  %11 = bitcast i8* %10 to float*
  %12 = load float, float* %11, align 8
  %13 = fdiv float %9, %12
  %14 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sitofp i64 %15 to float
  %17 = fdiv float %16, %12
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %13, float* %18, align 4
  %19 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %17, float* %19, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %5, %class.CFX_PTemplate* nonnull dereferenceable(8) %3, i8 zeroext 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %20 = load i64, i64* %7, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds i8, i8* %1, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 8
  %24 = load i64, i64* %14, align 8
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds i8, i8* %1, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_115Outline_ConicToEPK10FT_Vector_S2_Pv(%struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture readonly, i8* nocapture) #0 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = bitcast i8* %2 to %class.CFX_PathData**
  %8 = load %class.CFX_PathData*, %class.CFX_PathData** %7, align 8
  %9 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %15, %13
  %17 = shl nsw i64 %16, 1
  %18 = sdiv i64 %17, 3
  %19 = add nsw i64 %18, %13
  %20 = sitofp i64 %19 to float
  %21 = getelementptr inbounds i8, i8* %2, i64 16
  %22 = bitcast i8* %21 to float*
  %23 = load float, float* %22, align 8
  %24 = fdiv float %20, %23
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = sub nsw i64 %30, %28
  %32 = shl nsw i64 %31, 1
  %33 = sdiv i64 %32, 3
  %34 = add nsw i64 %33, %28
  %35 = sitofp i64 %34 to float
  %36 = fdiv float %35, %23
  %37 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %24, float* %37, align 4
  %38 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %36, float* %38, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %4, i8 zeroext 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %39 = load %class.CFX_PathData*, %class.CFX_PathData** %7, align 8
  %40 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = load i64, i64* %14, align 8
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = sub nsw i64 %43, %41
  %45 = sdiv i64 %44, 3
  %46 = add nsw i64 %45, %41
  %47 = sitofp i64 %46 to float
  %48 = load float, float* %22, align 8
  %49 = fdiv float %47, %48
  %50 = load i64, i64* %29, align 8
  %51 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = sub nsw i64 %52, %50
  %54 = sdiv i64 %53, 3
  %55 = add nsw i64 %54, %50
  %56 = sitofp i64 %55 to float
  %57 = fdiv float %56, %48
  %58 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float %49, float* %58, align 4
  %59 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float %57, float* %59, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %39, %class.CFX_PTemplate* nonnull dereferenceable(8) %5, i8 zeroext 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %60 = load %class.CFX_PathData*, %class.CFX_PathData** %7, align 8
  %61 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = load i64, i64* %42, align 8
  %63 = sitofp i64 %62 to float
  %64 = load float, float* %22, align 8
  %65 = fdiv float %63, %64
  %66 = load i64, i64* %51, align 8
  %67 = sitofp i64 %66 to float
  %68 = fdiv float %67, %64
  %69 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  store float %65, float* %69, align 4
  %70 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float %68, float* %70, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %60, %class.CFX_PTemplate* nonnull dereferenceable(8) %6, i8 zeroext 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  %71 = load i64, i64* %42, align 8
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %11, align 8
  %73 = load i64, i64* %51, align 8
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %26, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_115Outline_CubicToEPK10FT_Vector_S2_S2_Pv(%struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture readonly, %struct.FT_Vector_* nocapture readonly, i8* nocapture) #0 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = bitcast i8* %3 to %class.CFX_PathData**
  %9 = load %class.CFX_PathData*, %class.CFX_PathData** %8, align 8
  %10 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = sitofp i64 %12 to float
  %14 = getelementptr inbounds i8, i8* %3, i64 16
  %15 = bitcast i8* %14 to float*
  %16 = load float, float* %15, align 8
  %17 = fdiv float %13, %16
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = sitofp i64 %19 to float
  %21 = fdiv float %20, %16
  %22 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float %17, float* %22, align 4
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float %21, float* %23, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %5, i8 zeroext 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %24 = load %class.CFX_PathData*, %class.CFX_PathData** %8, align 8
  %25 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = sitofp i64 %27 to float
  %29 = load float, float* %15, align 8
  %30 = fdiv float %28, %29
  %31 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = sitofp i64 %32 to float
  %34 = fdiv float %33, %29
  %35 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  store float %30, float* %35, align 4
  %36 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float %34, float* %36, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %24, %class.CFX_PTemplate* nonnull dereferenceable(8) %6, i8 zeroext 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %37 = load %class.CFX_PathData*, %class.CFX_PathData** %8, align 8
  %38 = bitcast %class.CFX_PTemplate* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  %39 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = sitofp i64 %40 to float
  %42 = load float, float* %15, align 8
  %43 = fdiv float %41, %42
  %44 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = sitofp i64 %45 to float
  %47 = fdiv float %46, %42
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  store float %43, float* %48, align 4
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  store float %47, float* %49, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* %37, %class.CFX_PTemplate* nonnull dereferenceable(8) %7, i8 zeroext 1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  %50 = load i64, i64* %39, align 8
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds i8, i8* %3, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 8
  %54 = load i64, i64* %44, align 8
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds i8, i8* %3, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 %55, i32* %57, align 4
  ret i32 0
}

declare i32 @FT_Outline_Decompose(%struct.FT_Outline_*, %struct.FT_Outline_Funcs_*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_125Outline_CheckEmptyContourEPNS_14OUTLINE_PARAMSE(%"struct.(anonymous namespace)::OUTLINE_PARAMS"* nocapture readonly) unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::OUTLINE_PARAMS", %"struct.(anonymous namespace)::OUTLINE_PARAMS"* %0, i64 0, i32 0, i32 0
  %3 = load %class.CFX_PathData*, %class.CFX_PathData** %2, align 8
  %4 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %3, i64 0, i32 0
  %5 = bitcast %class.CFX_PathData* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %3, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %class.FX_PATHPOINT** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %6
  %11 = sdiv exact i64 %10, 12
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %13, label %120

13:                                               ; preds = %1
  %14 = add nsw i64 %11, -2
  %15 = inttoptr i64 %6 to %class.FX_PATHPOINT*
  %16 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %14, i32 1
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %40

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %14, i32 2
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %40

23:                                               ; preds = %19
  %24 = icmp eq i64 %10, 0
  br i1 %24, label %25, label %26, !prof !30

25:                                               ; preds = %23
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !31
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !32
  unreachable

26:                                               ; preds = %23
  %27 = add nsw i64 %11, -1
  %28 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %14, i32 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %27, i32 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = fcmp oeq float %29, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %14, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %27, i32 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = fcmp oeq float %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  br label %40

40:                                               ; preds = %26, %13, %39, %33, %19
  %41 = phi i64 [ %11, %19 ], [ %14, %39 ], [ %11, %33 ], [ %11, %13 ], [ %11, %26 ]
  %42 = icmp ugt i64 %41, 3
  br i1 %42, label %43, label %104

43:                                               ; preds = %40
  %44 = add nsw i64 %41, -4
  %45 = icmp ugt i64 %11, %44
  br i1 %45, label %47, label %46, !prof !33

46:                                               ; preds = %43
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !31
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !32
  unreachable

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %44, i32 1
  %49 = load i8, i8* %48, align 4
  %50 = icmp eq i8 %49, 2
  br i1 %50, label %51, label %104

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %44, i32 2
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %104

55:                                               ; preds = %51
  %56 = add nsw i64 %41, -3
  %57 = icmp ugt i64 %11, %56
  br i1 %57, label %59, label %58, !prof !33

58:                                               ; preds = %55
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !31
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !32
  unreachable

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %56, i32 1
  %61 = load i8, i8* %60, align 4
  %62 = icmp eq i8 %61, 1
  br i1 %62, label %63, label %104

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %56, i32 2
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %104

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %56, i32 0, i32 0
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %44, i32 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = fcmp oeq float %69, %71
  br i1 %72, label %73, label %104

73:                                               ; preds = %67
  %74 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %56, i32 0, i32 1
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %44, i32 0, i32 1
  %77 = load float, float* %76, align 4
  %78 = fcmp oeq float %75, %77
  br i1 %78, label %79, label %104

79:                                               ; preds = %73
  %80 = add nsw i64 %41, -2
  %81 = icmp ugt i64 %11, %80
  br i1 %81, label %83, label %82, !prof !33

82:                                               ; preds = %79
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !31
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !32
  unreachable

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %80, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %85, %71
  br i1 %86, label %87, label %104

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %80, i32 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = fcmp oeq float %89, %77
  br i1 %90, label %91, label %104

91:                                               ; preds = %87
  %92 = add nsw i64 %41, -1
  %93 = icmp ugt i64 %11, %92
  br i1 %93, label %95, label %94, !prof !33

94:                                               ; preds = %91
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !31
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !32
  unreachable

95:                                               ; preds = %91
  %96 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %92, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fcmp oeq float %97, %71
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %92, i32 0, i32 1
  %101 = load float, float* %100, align 4
  %102 = fcmp oeq float %101, %77
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  br label %104

104:                                              ; preds = %95, %83, %67, %59, %47, %103, %99, %87, %73, %63, %51, %40
  %105 = phi i64 [ %41, %87 ], [ %41, %73 ], [ %41, %63 ], [ %41, %51 ], [ %41, %40 ], [ %44, %103 ], [ %41, %99 ], [ %41, %47 ], [ %41, %59 ], [ %41, %67 ], [ %41, %83 ], [ %41, %95 ]
  %106 = icmp ugt i64 %105, %11
  %107 = inttoptr i64 %9 to %class.FX_PATHPOINT*
  br i1 %106, label %108, label %110

108:                                              ; preds = %104
  %109 = sub nsw i64 %105, %11
  tail call void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.130"* %4, i64 %109) #10
  br label %120

110:                                              ; preds = %104
  %111 = icmp ult i64 %105, %11
  br i1 %111, label %112, label %120

112:                                              ; preds = %110
  %113 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %15, i64 %105
  %114 = icmp eq %class.FX_PATHPOINT* %113, %107
  br i1 %114, label %119, label %115

115:                                              ; preds = %112, %115
  %116 = phi %class.FX_PATHPOINT* [ %117, %115 ], [ %107, %112 ]
  %117 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %116, i64 -1
  tail call void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT* %117) #10
  %118 = icmp eq %class.FX_PATHPOINT* %117, %113
  br i1 %118, label %119, label %115

119:                                              ; preds = %115, %112
  store %class.FX_PATHPOINT* %113, %class.FX_PATHPOINT** %7, align 8
  br label %120

120:                                              ; preds = %1, %108, %110, %119
  ret void
}

declare void @_ZN12CFX_PathData9ClosePathEv(%class.CFX_PathData*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN19ScopedFontTransformD1Ev(%class.ScopedFontTransform*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_GlyphBitmap* @_ZNK8CFX_Font15LoadGlyphBitmapEjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_Font*, i32, i1 zeroext, %class.CFX_Matrix* dereferenceable(24), i32, i32, %struct.CFX_TextRenderOptions*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.fxcrt::RetainPtr.33", align 8
  %9 = bitcast %"class.fxcrt::RetainPtr.33"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  call void @_ZNK8CFX_Font21GetOrCreateGlyphCacheEv(%"class.fxcrt::RetainPtr.33"* nonnull sret %8, %class.CFX_Font* %0)
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %10, align 8
  %12 = tail call %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache15LoadGlyphBitmapEPK8CFX_FontjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_GlyphCache* %11, %class.CFX_Font* %0, i32 %1, i1 zeroext %2, %class.CFX_Matrix* dereferenceable(24) %3, i32 %4, i32 %5, %struct.CFX_TextRenderOptions* %6) #10
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %10, align 8
  %13 = icmp eq %class.CFX_GlyphCache* %11, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %11, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %11, i64 0, i32 0
  %21 = bitcast %class.CFX_GlyphCache* %11 to void (%"class.fxcrt::Retainable"*)***
  %22 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, i64 1
  %24 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, align 8
  tail call void %24(%"class.fxcrt::Retainable"* nonnull %20) #10
  br label %25

25:                                               ; preds = %7, %14, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret %class.CFX_GlyphBitmap* %12
}

declare %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache15LoadGlyphBitmapEPK8CFX_FontjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_GlyphCache*, %class.CFX_Font*, i32, i1 zeroext, %class.CFX_Matrix* dereferenceable(24), i32, i32, %struct.CFX_TextRenderOptions*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_PathData* @_ZNK8CFX_Font13LoadGlyphPathEji(%class.CFX_Font*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.33", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr.33"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  call void @_ZNK8CFX_Font21GetOrCreateGlyphCacheEv(%"class.fxcrt::RetainPtr.33"* nonnull sret %4, %class.CFX_Font* %0)
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %6, align 8
  %8 = tail call %class.CFX_PathData* @_ZN14CFX_GlyphCache13LoadGlyphPathEPK8CFX_Fontji(%class.CFX_GlyphCache* %7, %class.CFX_Font* %0, i32 %1, i32 %2) #10
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %6, align 8
  %9 = icmp eq %class.CFX_GlyphCache* %7, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %7, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %7, i64 0, i32 0
  %17 = bitcast %class.CFX_GlyphCache* %7 to void (%"class.fxcrt::Retainable"*)***
  %18 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %18, i64 1
  %20 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, align 8
  tail call void %20(%"class.fxcrt::Retainable"* nonnull %16) #10
  br label %21

21:                                               ; preds = %3, %10, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret %class.CFX_PathData* %8
}

declare %class.CFX_PathData* @_ZN14CFX_GlyphCache13LoadGlyphPathEPK8CFX_Fontji(%class.CFX_GlyphCache*, %class.CFX_Font*, i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8CFX_Font14GetWeightLevelEim(i32, i64) local_unnamed_addr #3 align 2 {
  %3 = icmp ugt i64 %1, 99
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 128
  %6 = select i1 %5, [100 x i8]* @_ZN12_GLOBAL__N_118kWeightPowShiftJisE, [100 x i8]* @_ZN12_GLOBAL__N_112kWeightPow11E
  %7 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 %1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %4, %2
  %11 = phi i32 [ -1, %2 ], [ %9, %4 ]
  ret i32 %11
}

declare { i8, i64 } @_ZNK5fxcrt10ByteString4FindENS_18StringViewTemplateIcEEm(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*, i64) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEES2_(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #2

declare void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.130"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.FX_PATHPOINT** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.FX_PATHPOINT** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 12
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %class.FX_PATHPOINT*
  %14 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %class.FX_PATHPOINT* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %class.FX_PATHPOINT* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN12FX_PATHPOINTC1Ev(%class.FX_PATHPOINT* %19) #10
  %20 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %19, i64 1
  %21 = icmp eq %class.FX_PATHPOINT* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %90

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.130"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = sdiv exact i64 %27, 12
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 1537228672809129301
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.130"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = sdiv exact i64 %34, 12
  %36 = icmp ult i64 %35, 768614336404564650
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33, %37
  %43 = phi i64 [ %40, %37 ], [ 1537228672809129301, %33 ]
  %44 = mul i64 %43, 12
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to %class.FX_PATHPOINT*
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %class.FX_PATHPOINT* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %49, i64 %28
  %51 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %49, i64 %48
  %52 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %50, i64 %1
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi %class.FX_PATHPOINT* [ %55, %53 ], [ %50, %47 ]
  tail call void @_ZN12FX_PATHPOINTC1Ev(%class.FX_PATHPOINT* %54) #10
  %55 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %54, i64 1
  %56 = icmp eq %class.FX_PATHPOINT* %52, %55
  br i1 %56, label %57, label %53

57:                                               ; preds = %53
  %58 = ptrtoint %class.FX_PATHPOINT* %51 to i64
  %59 = ptrtoint %class.FX_PATHPOINT* %52 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 0
  %61 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %60, align 8
  %62 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %6, align 8
  %63 = icmp eq %class.FX_PATHPOINT* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %class.FX_PATHPOINT* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %class.FX_PATHPOINT* [ %69, %66 ], [ %50, %57 ]
  %68 = phi %class.FX_PATHPOINT* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %67, i64 -1
  %70 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %68, i64 -1
  tail call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %69, %class.FX_PATHPOINT* dereferenceable(12) %70) #10
  %71 = icmp eq %class.FX_PATHPOINT* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %25, align 8
  %74 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %6, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %class.FX_PATHPOINT* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %class.FX_PATHPOINT* [ %50, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %class.FX_PATHPOINT* %77 to i64
  store i64 %79, i64* %25, align 8
  store i64 %59, i64* %7, align 8
  store i64 %58, i64* %4, align 8
  %80 = inttoptr i64 %78 to %class.FX_PATHPOINT*
  %81 = icmp eq %class.FX_PATHPOINT* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %class.FX_PATHPOINT* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %83, i64 -1
  tail call void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT* %84) #10
  %85 = icmp eq %class.FX_PATHPOINT* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %89) #11
  br label %90

90:                                               ; preds = %88, %86, %22
  ret void
}

declare void @_ZN12FX_PATHPOINTC1Ev(%class.FX_PATHPOINT*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT*, %class.FX_PATHPOINT* dereferenceable(12)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN13CFX_SubstFontD1Ev(%class.CFX_SubstFont*) unnamed_addr #5

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #2

declare void @_ZN13CFX_SubstFontC1Ev(%class.CFX_SubstFont*) unnamed_addr #2

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #5

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK8CFX_Font13GetFamilyNameEv: argument 0"}
!15 = distinct !{!15, !"_ZNK8CFX_Font13GetFamilyNameEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5fxcrtplEPKcRKNS_10ByteStringE: argument 0"}
!18 = distinct !{!18, !"_ZN5fxcrtplEPKcRKNS_10ByteStringE"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!22 = !{!20}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5fxcrtplEPKcRKNS_10ByteStringE: argument 0"}
!25 = distinct !{!25, !"_ZN5fxcrtplEPKcRKNS_10ByteStringE"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!29 = !{!27}
!30 = !{!"branch_weights", i32 1, i32 2000}
!31 = !{i32 -2143823576}
!32 = !{i32 -2143823555}
!33 = !{!"branch_weights", i32 2000, i32 1}
