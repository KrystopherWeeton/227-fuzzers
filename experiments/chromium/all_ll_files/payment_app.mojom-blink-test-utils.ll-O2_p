; ModuleID = 'gen/third_party/blink/public/mojom/payments/payment_app.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/payments/payment_app.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.payments::mojom::blink::PaymentManagerAsyncWaiter" = type { %"class.payments::mojom::blink::PaymentManager"* }
%"class.payments::mojom::blink::PaymentManager" = type { i32 (...)** }
%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter" = type { %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* }
%"class.payments::mojom::blink::PaymentHandlerResponseCallback" = type { i32 (...)** }
%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting" = type { %"class.payments::mojom::blink::PaymentManager" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.base::OnceCallback.8" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.9" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.payments::mojom::blink::PaymentInstrument"* }
%"class.payments::mojom::blink::PaymentInstrument" = type { %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.30" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr.13"*, i32, i32 }
%"class.mojo::StructPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::mojom::blink::ManifestImageResource"* }
%"class.blink::mojom::blink::ManifestImageResource" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::Vector.17", %"class.WTF::Vector.20" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { i32*, i32, i32 }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { i32*, i32, i32 }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { i32*, i32, i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.53, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.46", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.48" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.53 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.54" }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.56", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.56" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.57" }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.WTF::String"*, i32, i32 }
%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting" = type { %"class.payments::mojom::blink::PaymentHandlerResponseCallback" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.payments::mojom::blink::CanMakePaymentResponse", i32, [4 x i8] }>
%"class.payments::mojom::blink::CanMakePaymentResponse" = type { i32, i8, i8, %"class.WTF::String" }
%"class.mojo::StructPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.payments::mojom::blink::PaymentHandlerResponse"* }
%"class.payments::mojom::blink::PaymentHandlerResponse" = type { %"class.WTF::String", %"class.WTF::String", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.mojo::StructPtr.83", %"class.WTF::String" }
%"class.mojo::StructPtr.83" = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.payments::mojom::blink::PaymentAddress"* }
%"class.payments::mojom::blink::PaymentAddress" = type { %"class.WTF::String", %"class.WTF::Vector.64", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN8payments5mojom5blink14PaymentManagerD2Ev = comdat any

$_ZN8payments5mojom5blink35PaymentManagerInterceptorForTestingD0Ev = comdat any

$_ZN8payments5mojom5blink30PaymentHandlerResponseCallbackD2Ev = comdat any

$_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNSt3__14swapIN8payments5mojom5blink22CanMakePaymentResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

@.str = private unnamed_addr constant [24 x i8] c"DeletePaymentInstrument\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"gen/third_party/blink/public/mojom/payments/payment_app.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"GetPaymentInstrument\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"KeysOfPaymentInstruments\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"HasPaymentInstrument\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"SetPaymentInstrument\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"ClearPaymentInstruments\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"EnableDelegations\00", align 1
@_ZTVN8payments5mojom5blink35PaymentManagerInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.payments::mojom::blink::PaymentManager"*)* @_ZN8payments5mojom5blink14PaymentManagerD2Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::String"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting4InitERKN5blink4KURLERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting23DeletePaymentInstrumentERKN3WTF6StringEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting20GetPaymentInstrumentERKN3WTF6StringEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_17PaymentInstrumentEEENS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.base::OnceCallback.9"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting24KeysOfPaymentInstrumentsEN4base12OnceCallbackIFvRKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEENS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting20HasPaymentInstrumentERKN3WTF6StringEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS1_17PaymentInstrumentEEEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting23ClearPaymentInstrumentsEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting11SetUserHintERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)* @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting17EnableDelegationsERKN3WTF6VectorINS0_17PaymentDelegationELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*)* @_ZN8payments5mojom5blink30PaymentHandlerResponseCallbackD2Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)* @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*, i1)* @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTesting25OnResponseForAbortPaymentEb to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*, %"class.mojo::InlinedStructPtr"*)* @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTesting27OnResponseForCanMakePaymentEN4mojo16InlinedStructPtrINS1_22CanMakePaymentResponseEEE to i8*), i8* bitcast (void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr.79"*)* @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTesting27OnResponseForPaymentRequestEN4mojo9StructPtrINS1_22PaymentHandlerResponseEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN8payments5mojom5blink25PaymentManagerAsyncWaiterC1EPNS1_14PaymentManagerE = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"*, %"class.payments::mojom::blink::PaymentManager"*), void (%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"*, %"class.payments::mojom::blink::PaymentManager"*)* @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiterC2EPNS1_14PaymentManagerE
@_ZN8payments5mojom5blink25PaymentManagerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"*), void (%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"*)* @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiterD2Ev
@_ZN8payments5mojom5blink41PaymentHandlerResponseCallbackAsyncWaiterC1EPNS1_30PaymentHandlerResponseCallbackE = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"*), void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"*)* @_ZN8payments5mojom5blink41PaymentHandlerResponseCallbackAsyncWaiterC2EPNS1_30PaymentHandlerResponseCallbackE
@_ZN8payments5mojom5blink41PaymentHandlerResponseCallbackAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"*), void (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"*)* @_ZN8payments5mojom5blink41PaymentHandlerResponseCallbackAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting4InitERKN5blink4KURLERKN3WTF6StringE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentManager"* %7(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %9 = bitcast %"class.payments::mojom::blink::PaymentManager"* %8 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)***
  %10 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)** %10, i64 2
  %12 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.blink::KURL"*, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.payments::mojom::blink::PaymentManager"* %8, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting23DeletePaymentInstrumentERKN3WTF6StringEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %6 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.payments::mojom::blink::PaymentManager"* %8(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.payments::mojom::blink::PaymentManager"* %9 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.payments::mojom::blink::PaymentManager"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting20GetPaymentInstrumentERKN3WTF6StringEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_17PaymentInstrumentEEENS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback.8"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.8", align 8
  %5 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %6 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.payments::mojom::blink::PaymentManager"* %8(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.8", %"class.base::OnceCallback.8"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.8"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.8"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.payments::mojom::blink::PaymentManager"* %9 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)***
  %15 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)** %15, i64 4
  %17 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)** %16, align 8
  call void %17(%"class.payments::mojom::blink::PaymentManager"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback.8"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.8", %"class.base::OnceCallback.8"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting24KeysOfPaymentInstrumentsEN4base12OnceCallbackIFvRKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEENS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.base::OnceCallback.9"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.9", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentManager"* %7(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.9", %"class.base::OnceCallback.9"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.9"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.9"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentManager"* %8 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)** %14, i64 5
  %16 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentManager"* %8, %"class.base::OnceCallback.9"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.9", %"class.base::OnceCallback.9"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting20HasPaymentInstrumentERKN3WTF6StringEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %6 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.payments::mojom::blink::PaymentManager"* %8(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.payments::mojom::blink::PaymentManager"* %9 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %15, i64 6
  %17 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.payments::mojom::blink::PaymentManager"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS1_17PaymentInstrumentEEEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %8 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %8, i64 11
  %10 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.payments::mojom::blink::PaymentManager"* %10(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %12 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = bitcast %"class.payments::mojom::blink::PaymentManager"* %11 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %21, i64 7
  %23 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.payments::mojom::blink::PaymentManager"* %11, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::StructPtr"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = load %"class.payments::mojom::blink::PaymentInstrument"*, %"class.payments::mojom::blink::PaymentInstrument"** %13, align 8
  store %"class.payments::mojom::blink::PaymentInstrument"* null, %"class.payments::mojom::blink::PaymentInstrument"** %13, align 8
  %26 = icmp eq %"class.payments::mojom::blink::PaymentInstrument"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %4
  call void @_ZN8payments5mojom5blink17PaymentInstrumentD1Ev(%"class.payments::mojom::blink::PaymentInstrument"* nonnull %25) #11
  %28 = bitcast %"class.payments::mojom::blink::PaymentInstrument"* %25 to i8*
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %4, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting23ClearPaymentInstrumentsEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentManager"* %7(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentManager"* %8 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)** %14, i64 8
  %16 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentManager"* %8, %"class.base::OnceCallback"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting11SetUserHintERKN3WTF6StringE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentManager"* %6(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.payments::mojom::blink::PaymentManager"* %7 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)***
  %9 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)** %9, i64 9
  %11 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentManager"* %7, %"class.WTF::String"* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTesting17EnableDelegationsERKN3WTF6VectorINS0_17PaymentDelegationELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS0_20PaymentHandlerStatusEEEE(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*, %"class.WTF::Vector.38"* dereferenceable(16), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)***
  %6 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentManager"* (%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.payments::mojom::blink::PaymentManager"* %8(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.payments::mojom::blink::PaymentManager"* %9 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)** %15, i64 10
  %17 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.payments::mojom::blink::PaymentManager"* %9, %"class.WTF::Vector.38"* dereferenceable(16) %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiterC2EPNS1_14PaymentManagerE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture, %"class.payments::mojom::blink::PaymentManager"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.payments::mojom::blink::PaymentManager"* %1, %"class.payments::mojom::blink::PaymentManager"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiterD2Ev(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !2
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS3_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !2
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !2
  %19 = bitcast %"class.payments::mojom::blink::PaymentManager"* %10 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %20, i64 3
  %22 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.payments::mojom::blink::PaymentManager"* %10, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 83) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS1_17PaymentInstrumentEEEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.mojo::StructPtr"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.8", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.mojo::StructPtr"* %2 to i64
  %9 = ptrtoint i32* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %11 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #12, !noalias !7
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopESF_SH_EEEFvSE_SG_EE7RunOnceEPNS0_13BindStateBaseEOSE_SG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS4_17PaymentInstrumentEEEPNS3_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopESE_SG_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !7
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !7
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !7
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !7
  %22 = bitcast %"class.base::OnceCallback.8"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !7
  %23 = bitcast %"class.payments::mojom::blink::PaymentManager"* %12 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)***
  %24 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)** %24, i64 4
  %26 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback.8"*)** %25, align 8
  call void %26(%"class.payments::mojom::blink::PaymentManager"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback.8"* nonnull %6) #11
  %27 = getelementptr inbounds %"class.base::OnceCallback.8", %"class.base::OnceCallback.8"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 102) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, %"class.WTF::Vector.64"*, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.9", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::Vector.64"* %1 to i64
  %8 = ptrtoint i32* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %10 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #12, !noalias !12
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.64"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopESC_SE_EEEFvRKSB_SD_EE7RunOnceEPNS0_13BindStateBaseESK_SD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEPNS3_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopESB_SD_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !12
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !12
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !12
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !12
  %21 = bitcast %"class.base::OnceCallback.9"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !12
  %22 = bitcast %"class.payments::mojom::blink::PaymentManager"* %11 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)***
  %23 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)** %23, i64 5
  %25 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback.9"*)** %24, align 8
  call void %25(%"class.payments::mojom::blink::PaymentManager"* %11, %"class.base::OnceCallback.9"* nonnull %5) #11
  %26 = getelementptr inbounds %"class.base::OnceCallback.9", %"class.base::OnceCallback.9"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 121) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !17
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS3_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !17
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !17
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !17
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !17
  %19 = bitcast %"class.payments::mojom::blink::PaymentManager"* %10 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %20, i64 6
  %22 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.payments::mojom::blink::PaymentManager"* %10, %"class.WTF::String"* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 136) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS1_17PaymentInstrumentEEEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.mojo::StructPtr"* nocapture, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %11 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %11, align 8
  %13 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %14 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 0, i64* %15, align 8
  %17 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %18 = call i8* @_Znwm(i64 56) #12, !noalias !22
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseESF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS4_17PaymentInstrumentEEEPNS3_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !22
  %20 = getelementptr inbounds i8, i8* %18, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8, !noalias !22
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %9, i64* %23, align 8, !noalias !22
  %24 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %18, i8** %24, align 8, !alias.scope !22
  %25 = bitcast %"class.payments::mojom::blink::PaymentManager"* %12 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %26 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %26, i64 7
  %28 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %27, align 8
  call void %28(%"class.payments::mojom::blink::PaymentManager"* %12, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::StructPtr"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #11
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #11
  %30 = load %"class.payments::mojom::blink::PaymentInstrument"*, %"class.payments::mojom::blink::PaymentInstrument"** %14, align 8
  store %"class.payments::mojom::blink::PaymentInstrument"* null, %"class.payments::mojom::blink::PaymentInstrument"** %14, align 8
  %31 = icmp eq %"class.payments::mojom::blink::PaymentInstrument"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %4
  call void @_ZN8payments5mojom5blink17PaymentInstrumentD1Ev(%"class.payments::mojom::blink::PaymentInstrument"* nonnull %30) #11
  %33 = bitcast %"class.payments::mojom::blink::PaymentInstrument"* %30 to i8*
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %4, %32
  %35 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 151) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint i32* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !27
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS4_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS3_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !27
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !27
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !27
  %17 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !27
  %18 = bitcast %"class.payments::mojom::blink::PaymentManager"* %9 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)** %19, i64 8
  %21 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.payments::mojom::blink::PaymentManager"* %9, %"class.base::OnceCallback"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 166) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS0_17PaymentDelegationELj0ENS3_18PartitionAllocatorEEEPNS0_20PaymentHandlerStatusE(%"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* nocapture readonly, %"class.WTF::Vector.38"* dereferenceable(16), i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.payments::mojom::blink::PaymentManagerAsyncWaiter", %"class.payments::mojom::blink::PaymentManagerAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.payments::mojom::blink::PaymentManager"*, %"class.payments::mojom::blink::PaymentManager"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !32
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS4_17PaymentDelegationELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS3_17PaymentDelegationELj0ENS6_18PartitionAllocatorEEEPNS3_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !32
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !32
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !32
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !32
  %19 = bitcast %"class.payments::mojom::blink::PaymentManager"* %10 to void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)**, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)** %20, i64 10
  %22 = load void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)*, void (%"class.payments::mojom::blink::PaymentManager"*, %"class.WTF::Vector.38"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.payments::mojom::blink::PaymentManager"* %10, %"class.WTF::Vector.38"* dereferenceable(16) %1, %"class.base::OnceCallback"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 181) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTesting25OnResponseForAbortPaymentEb(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)***
  %4 = load %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %6(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %7 to void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)***
  %9 = load void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)**, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)*, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)** %9, i64 2
  %11 = load void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)*, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, i1)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %7, i1 zeroext %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTesting27OnResponseForCanMakePaymentEN4mojo16InlinedStructPtrINS1_22CanMakePaymentResponseEEE(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*, %"class.mojo::InlinedStructPtr"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::InlinedStructPtr", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %7(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 0, i32 0
  call void @_ZN8payments5mojom5blink22CanMakePaymentResponseC1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"* nonnull %9) #11
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 0, i32 1
  store i32 0, i32* %10, align 8
  call void @_ZN8payments5mojom5blink22CanMakePaymentResponseD1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"* nonnull %9) #11
  call void @_ZN8payments5mojom5blink22CanMakePaymentResponseC1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"* nonnull %9) #11
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 0
  call void @_ZNSt3__14swapIN8payments5mojom5blink22CanMakePaymentResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.payments::mojom::blink::CanMakePaymentResponse"* nonnull dereferenceable(16) %9, %"class.payments::mojom::blink::CanMakePaymentResponse"* dereferenceable(16) %11) #11
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 1
  %13 = load i32, i32* %10, align 8
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %10, align 8
  store i32 %13, i32* %12, align 4
  %15 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %8 to void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)***
  %16 = load void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)**, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)** %16, i64 3
  %18 = load void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::InlinedStructPtr"*)** %17, align 8
  call void %18(%"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %8, %"class.mojo::InlinedStructPtr"* nonnull %3) #11
  call void @_ZN8payments5mojom5blink22CanMakePaymentResponseD1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTesting27OnResponseForPaymentRequestEN4mojo9StructPtrINS1_22PaymentHandlerResponseEEE(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr.79"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.79", align 8
  %4 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"* %0 to %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)***
  %5 = load %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)**, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)*, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* (%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %7(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"* %0) #11
  %9 = bitcast %"class.mojo::StructPtr.79"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.79", %"class.mojo::StructPtr.79"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.79"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %8 to void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)***
  %14 = load void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)**, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)*, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)** %14, i64 4
  %16 = load void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)*, void (%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*, %"class.mojo::StructPtr.79"*)** %15, align 8
  call void %16(%"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %8, %"class.mojo::StructPtr.79"* nonnull %3) #11
  %17 = load %"class.payments::mojom::blink::PaymentHandlerResponse"*, %"class.payments::mojom::blink::PaymentHandlerResponse"** %10, align 8
  store %"class.payments::mojom::blink::PaymentHandlerResponse"* null, %"class.payments::mojom::blink::PaymentHandlerResponse"** %10, align 8
  %18 = icmp eq %"class.payments::mojom::blink::PaymentHandlerResponse"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN8payments5mojom5blink22PaymentHandlerResponseD1Ev(%"class.payments::mojom::blink::PaymentHandlerResponse"* nonnull %17) #11
  %20 = bitcast %"class.payments::mojom::blink::PaymentHandlerResponse"* %17 to i8*
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8payments5mojom5blink41PaymentHandlerResponseCallbackAsyncWaiterC2EPNS1_30PaymentHandlerResponseCallbackE(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"* nocapture, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter", %"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"* %0, i64 0, i32 0
  store %"class.payments::mojom::blink::PaymentHandlerResponseCallback"* %1, %"class.payments::mojom::blink::PaymentHandlerResponseCallback"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8payments5mojom5blink41PaymentHandlerResponseCallbackAsyncWaiterD2Ev(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink14PaymentManagerD2Ev(%"class.payments::mojom::blink::PaymentManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink35PaymentManagerInterceptorForTestingD0Ev(%"class.payments::mojom::blink::PaymentManagerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink30PaymentHandlerResponseCallbackD2Ev(%"class.payments::mojom::blink::PaymentHandlerResponseCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8payments5mojom5blink51PaymentHandlerResponseCallbackInterceptorForTestingD0Ev(%"class.payments::mojom::blink::PaymentHandlerResponseCallbackInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink17PaymentInstrumentD1Ev(%"class.payments::mojom::blink::PaymentInstrument"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink22CanMakePaymentResponseD1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink22PaymentHandlerResponseD1Ev(%"class.payments::mojom::blink::PaymentHandlerResponse"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS3_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopESF_SH_EEEFvSE_SG_EE7RunOnceEPNS0_13BindStateBaseEOSE_SG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr"* nocapture dereferenceable(8), i32) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.mojo::StructPtr"**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to i32**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %7, align 8
  %12 = load i32*, i32** %9, align 8
  %13 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 0, i64* %13, align 8
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.payments::mojom::blink::PaymentInstrument"*, %"class.payments::mojom::blink::PaymentInstrument"** %15, align 8
  store %"class.payments::mojom::blink::PaymentInstrument"* null, %"class.payments::mojom::blink::PaymentInstrument"** %15, align 8
  %17 = icmp eq %"class.payments::mojom::blink::PaymentInstrument"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %3
  tail call void @_ZN8payments5mojom5blink17PaymentInstrumentD1Ev(%"class.payments::mojom::blink::PaymentInstrument"* nonnull %16) #11
  %19 = bitcast %"class.payments::mojom::blink::PaymentInstrument"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  %20 = load %"class.payments::mojom::blink::PaymentInstrument"*, %"class.payments::mojom::blink::PaymentInstrument"** %15, align 8
  %21 = bitcast %"class.payments::mojom::blink::PaymentInstrument"* %20 to i8*
  br label %22

22:                                               ; preds = %18, %3
  %23 = phi i8* [ %21, %18 ], [ null, %3 ]
  %24 = phi %"class.payments::mojom::blink::PaymentInstrument"* [ %20, %18 ], [ null, %3 ]
  %25 = bitcast %"class.mojo::StructPtr"* %11 to i64*
  store i64 %14, i64* %25, align 8
  store i32 %2, i32* %12, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  %26 = icmp eq %"class.payments::mojom::blink::PaymentInstrument"* %24, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  tail call void @_ZN8payments5mojom5blink17PaymentInstrumentD1Ev(%"class.payments::mojom::blink::PaymentInstrument"* nonnull %24) #11
  tail call void @_ZdlPv(i8* %23) #12
  br label %28

28:                                               ; preds = %22, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS4_17PaymentInstrumentEEEPNS3_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopESE_SG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopESC_SE_EEEFvRKSB_SD_EE7RunOnceEPNS0_13BindStateBaseESK_SD_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.64"* dereferenceable(16), i32) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.WTF::Vector.64"**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to i32**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load %"class.WTF::Vector.64"*, %"class.WTF::Vector.64"** %7, align 8
  %12 = load i32*, i32** %9, align 8
  %13 = tail call dereferenceable(16) %"class.WTF::Vector.64"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.64"* %11, %"class.WTF::Vector.64"* dereferenceable(16) %1) #11
  store i32 %2, i32* %12, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.64"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.64"*, %"class.WTF::Vector.64"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.64"* %1, %0
  br i1 %3, label %219, label %4, !prof !37

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.64"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #11
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !38

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #11
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !38

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #11
  %108 = bitcast %"class.WTF::Vector.64"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #11
  %112 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #11
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !37

145:                                              ; preds = %136
  tail call void @llvm.trap() #11
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #11
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !37

208:                                              ; preds = %199
  tail call void @llvm.trap() #11
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.64"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEPNS3_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopESB_SD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS3_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseESF_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS4_17PaymentInstrumentEEEPNS3_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS4_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS3_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS4_17PaymentDelegationELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS3_17PaymentDelegationELj0ENS6_18PartitionAllocatorEEEPNS3_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN8payments5mojom5blink22CanMakePaymentResponseC1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN8payments5mojom5blink22CanMakePaymentResponseEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.payments::mojom::blink::CanMakePaymentResponse"* dereferenceable(16), %"class.payments::mojom::blink::CanMakePaymentResponse"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.payments::mojom::blink::CanMakePaymentResponse", align 8
  %4 = bitcast %"class.payments::mojom::blink::CanMakePaymentResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = bitcast %"class.payments::mojom::blink::CanMakePaymentResponse"* %0 to i8*
  %6 = getelementptr inbounds i8, i8* %4, i64 6
  %7 = bitcast i8* %6 to i16*
  store i16 -21846, i16* %7, align 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 6, i1 false) #11
  %8 = getelementptr inbounds %"class.payments::mojom::blink::CanMakePaymentResponse", %"class.payments::mojom::blink::CanMakePaymentResponse"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.payments::mojom::blink::CanMakePaymentResponse", %"class.payments::mojom::blink::CanMakePaymentResponse"* %3, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !37

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = bitcast %"class.payments::mojom::blink::CanMakePaymentResponse"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %30, i64 6, i1 false) #11
  %31 = getelementptr inbounds %"class.payments::mojom::blink::CanMakePaymentResponse", %"class.payments::mojom::blink::CanMakePaymentResponse"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.payments::mojom::blink::CanMakePaymentResponse", %"class.payments::mojom::blink::CanMakePaymentResponse"* %1, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !37

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %29
  %53 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %54 = bitcast %"class.WTF::String"* %31 to i64*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  store i64 %53, i64* %54, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #11
  br label %71

71:                                               ; preds = %52, %67, %70
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %4, i64 6, i1 false) #11
  %72 = getelementptr inbounds %"class.payments::mojom::blink::CanMakePaymentResponse", %"class.payments::mojom::blink::CanMakePaymentResponse"* %1, i64 0, i32 3
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #11
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !37

89:                                               ; preds = %80
  tail call void @llvm.trap() #11
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %90, %75, %71
  %93 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %94 = bitcast %"class.WTF::String"* %72 to i64*
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  store i64 %93, i64* %94, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #11
  br label %111

111:                                              ; preds = %92, %107, %110
  call void @_ZN8payments5mojom5blink22CanMakePaymentResponseD1Ev(%"class.payments::mojom::blink::CanMakePaymentResponse"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS2_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23DeletePaymentInstrumentERKN3WTF6StringEPNS2_20PaymentHandlerStatusEE3$_0JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopERSF_RSH_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopERSF_RSH_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS3_17PaymentInstrumentEEEPNS2_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopERSD_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20GetPaymentInstrumentERKN3WTF6StringEPN4mojo9StructPtrINS3_17PaymentInstrumentEEEPNS2_20PaymentHandlerStatusEE3$_1JPNS_7RunLoopERSD_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopERSC_RSE_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopERSC_RSE_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEPNS2_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopERSA_RSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter24KeysOfPaymentInstrumentsEPN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEPNS2_20PaymentHandlerStatusEE3$_2JPNS_7RunLoopERSA_RSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS4_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS2_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20HasPaymentInstrumentERKN3WTF6StringEPNS2_20PaymentHandlerStatusEE3$_3JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS5_17PaymentInstrumentEEEPNS4_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS3_17PaymentInstrumentEEEPNS2_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter20SetPaymentInstrumentERKN3WTF6StringEN4mojo9StructPtrINS3_17PaymentInstrumentEEEPNS2_20PaymentHandlerStatusEE3$_4JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS4_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS4_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS2_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter23ClearPaymentInstrumentsEPNS2_20PaymentHandlerStatusEE3$_5JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS4_17PaymentDelegationELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS4_17PaymentDelegationELj0ENS7_18PartitionAllocatorEEEPNS4_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS2_17PaymentDelegationELj0ENS5_18PartitionAllocatorEEEPNS2_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIZN8payments5mojom5blink25PaymentManagerAsyncWaiter17EnableDelegationsERKN3WTF6VectorINS2_17PaymentDelegationELj0ENS5_18PartitionAllocatorEEEPNS2_20PaymentHandlerStatusEE3$_6JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!37 = !{!"branch_weights", i32 1, i32 2000}
!38 = !{!"branch_weights", i32 2000, i32 1}
