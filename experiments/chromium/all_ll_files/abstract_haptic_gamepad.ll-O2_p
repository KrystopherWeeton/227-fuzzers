; ModuleID = '../../device/gamepad/abstract_haptic_gamepad.cc'
source_filename = "../../device/gamepad/abstract_haptic_gamepad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::AbstractHapticGamepad" = type { i32 (...)**, i8, i8, i32, %"class.base::OnceCallback", %class.scoped_refptr.1 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.mojo::InlinedStructPtr" = type <{ %"class.device::mojom::GamepadEffectParameters", i32, [4 x i8] }>
%"class.device::mojom::GamepadEffectParameters" = type { double, double, double, double }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.4" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.6", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%class.scoped_refptr.3 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN6device21AbstractHapticGamepad10DoShutdownEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal13FunctorTraitsIMN6device21AbstractHapticGamepadEFvidddEvE6InvokeIS5_NS_7WeakPtrIS3_EEJidddEEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS3_EEidddEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN6device21AbstractHapticGamepadE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepadD2Ev to i8*), i8* bitcast (void (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepadD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv to i8*), i8* bitcast (double (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepad26GetMaxEffectDurationMillisEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepad10DoShutdownEv to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"PlayDualRumbleEffect\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../device/gamepad/abstract_haptic_gamepad.cc\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"StartVibration\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN6device21AbstractHapticGamepadD1Ev = hidden unnamed_addr alias void (%"class.device::AbstractHapticGamepad"*), void (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepadD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device21AbstractHapticGamepadC2Ev(%"class.device::AbstractHapticGamepad"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device21AbstractHapticGamepadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 3
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepadD2Ev(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device21AbstractHapticGamepadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.2"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepadD0Ev(%"class.device::AbstractHapticGamepad"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad8ShutdownEv(%"class.device::AbstractHapticGamepad"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.device::AbstractHapticGamepad"*)***
  br label %24

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.device::AbstractHapticGamepad"*)***
  %15 = load void (%"class.device::AbstractHapticGamepad"*)**, void (%"class.device::AbstractHapticGamepad"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %15, i64 3
  %17 = load void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %16, align 8
  tail call void %17(%"class.device::AbstractHapticGamepad"* %0) #10
  %18 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %21 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 5, i32 0
  %22 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %21, align 8
  call void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"* nonnull %2, %"class.base::SequencedTaskRunner"* %22, i32 2) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  br label %24

24:                                               ; preds = %8, %10
  %25 = phi void (%"class.device::AbstractHapticGamepad"*)*** [ %9, %8 ], [ %14, %10 ]
  %26 = load void (%"class.device::AbstractHapticGamepad"*)**, void (%"class.device::AbstractHapticGamepad"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %26, i64 6
  %28 = load void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %27, align 8
  call void %28(%"class.device::AbstractHapticGamepad"* %0) #10
  %29 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 2
  store i8 1, i8* %29, align 1
  ret void
}

declare void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"*, %"class.base::SequencedTaskRunner"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.device::AbstractHapticGamepad"*, double, double)***
  %3 = load void (%"class.device::AbstractHapticGamepad"*, double, double)**, void (%"class.device::AbstractHapticGamepad"*, double, double)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.device::AbstractHapticGamepad"*, double, double)*, void (%"class.device::AbstractHapticGamepad"*, double, double)** %3, i64 2
  %5 = load void (%"class.device::AbstractHapticGamepad"*, double, double)*, void (%"class.device::AbstractHapticGamepad"*, double, double)** %4, align 8
  tail call void %5(%"class.device::AbstractHapticGamepad"* %0, double 0.000000e+00, double 0.000000e+00) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZN6device21AbstractHapticGamepad26GetMaxEffectDurationMillisEv(%"class.device::AbstractHapticGamepad"* nocapture readnone) unnamed_addr #6 align 2 {
  ret double 5.000000e+03
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad10PlayEffectENS_5mojom23GamepadHapticEffectTypeEN4mojo16InlinedStructPtrINS1_23GamepadEffectParametersEEEN4base12OnceCallbackIFvNS1_20GamepadHapticsResultEEEE13scoped_refptrINS7_19SequencedTaskRunnerEE(%"class.device::AbstractHapticGamepad"*, i32, %"class.mojo::InlinedStructPtr"* nocapture readonly, %"class.base::OnceCallback"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = ptrtoint %"class.base::SequencedTaskRunner"* %4 to i64
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"* nonnull %6, %"class.base::SequencedTaskRunner"* %4, i32 4) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  br label %64

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = icmp eq %"class.base::internal::BindStateBase"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %16
  %26 = ptrtoint %"class.base::internal::BindStateBase"* %23 to i64
  %27 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %28 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 5, i32 0
  %29 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %28, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %28, align 8
  call void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"* nonnull %7, %"class.base::SequencedTaskRunner"* %29, i32 2) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  br label %31

31:                                               ; preds = %16, %25
  %32 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 1
  %33 = load double, double* %32, align 8
  %34 = fcmp ogt double %33, 0.000000e+00
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  %36 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.device::AbstractHapticGamepad"*)***
  %37 = load void (%"class.device::AbstractHapticGamepad"*)**, void (%"class.device::AbstractHapticGamepad"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %37, i64 3
  %39 = load void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %38, align 8
  call void %39(%"class.device::AbstractHapticGamepad"* %0) #10
  br label %40

40:                                               ; preds = %35, %31
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %42 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %21, %"class.base::internal::CallbackBase"* dereferenceable(8) %41) #10
  %43 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 5
  %44 = bitcast %class.scoped_refptr.1* %43 to i64*
  %45 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %43, i64 0, i32 0
  %46 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %45, align 8
  store i64 %8, i64* %44, align 8
  %47 = icmp eq %"class.base::SequencedTaskRunner"* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %46, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe.2"* %54 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %55) #10
  br label %56

56:                                               ; preds = %40, %48, %53
  %57 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  %58 = load double, double* %57, align 8
  %59 = load double, double* %32, align 8
  %60 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 2
  %61 = load double, double* %60, align 8
  %62 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 3
  %63 = load double, double* %62, align 8
  call void @_ZN6device21AbstractHapticGamepad20PlayDualRumbleEffectEidddd(%"class.device::AbstractHapticGamepad"* %0, i32 %19, double %58, double %59, double %61, double %63)
  br label %64

64:                                               ; preds = %10, %56
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad20PlayDualRumbleEffectEidddd(%"class.device::AbstractHapticGamepad"*, i32, double, double, double, double) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.4", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = tail call dereferenceable(8) %class.scoped_refptr.3* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %11 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %10, i64 0, i32 0
  %12 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %13 = bitcast %"class.base::SingleThreadTaskRunner"* %12 to %"class.base::TaskRunner"*
  %14 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 122) #10
  %15 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)***
  %17 = load void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)**, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)** %17, i64 5
  %19 = load void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)** %18, align 8
  call void %19(%"class.base::WeakPtr"* nonnull sret %9, %"class.device::AbstractHapticGamepad"* %0) #10
  %20 = call i8* @_Znwm(i64 96) #12, !noalias !2
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS3_EEidddEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !2
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)* @_ZN6device21AbstractHapticGamepad14StartVibrationEiddd to i64), i64 0>, <2 x i64>* %23, align 8, !noalias !2
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to %"class.base::internal::WeakReference"*
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %26) #10, !noalias !2
  %27 = getelementptr inbounds i8, i8* %20, i64 56
  %28 = bitcast i8* %27 to i64*
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !2
  store i64 %30, i64* %28, align 8, !noalias !2
  %31 = getelementptr inbounds i8, i8* %20, i64 64
  %32 = bitcast i8* %31 to i32*
  store i32 %1, i32* %32, align 4, !noalias !2
  %33 = getelementptr inbounds i8, i8* %20, i64 72
  %34 = bitcast i8* %33 to double*
  store double %2, double* %34, align 8, !noalias !2
  %35 = getelementptr inbounds i8, i8* %20, i64 80
  %36 = bitcast i8* %35 to double*
  store double %4, double* %36, align 8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %20, i64 88
  %38 = bitcast i8* %37 to double*
  store double %5, double* %38, align 8, !noalias !2
  %39 = bitcast %"class.base::OnceCallback.4"* %8 to i8**
  store i8* %20, i8** %39, align 8, !alias.scope !2
  %40 = fmul double %3, 1.000000e+03
  %41 = fcmp ult double %40, 0xC3E0000000000000
  %42 = fcmp ugt double %40, 0x43DFFFFFFFFFFFFF
  %43 = fcmp ogt double %40, 0xC3E0000000000000
  %44 = select i1 %43, double %40, double 0xC3E0000000000000
  %45 = fptosi double %44 to i64
  %46 = select i1 %41, i64 0, i64 9223372036854775807
  %47 = select i1 %42, i64 %46, i64 %45
  %48 = bitcast %"class.base::SingleThreadTaskRunner"* %12 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)***
  %49 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)*** %48, align 8
  %50 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)** %49, align 8
  %51 = call zeroext i1 %50(%"class.base::TaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.4"* nonnull %8, i64 %47) #10
  %52 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #10
  %53 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %53) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad14ResetVibrationEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEE(%"class.device::AbstractHapticGamepad"*, %"class.base::OnceCallback"* nocapture, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.device::AbstractHapticGamepad"*)***
  %10 = load void (%"class.device::AbstractHapticGamepad"*)**, void (%"class.device::AbstractHapticGamepad"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %10, i64 3
  %12 = load void (%"class.device::AbstractHapticGamepad"*)*, void (%"class.device::AbstractHapticGamepad"*)** %11, align 8
  tail call void %12(%"class.device::AbstractHapticGamepad"* %0) #10
  %13 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %13, align 8
  %15 = icmp eq %"class.base::internal::BindStateBase"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %3
  %17 = ptrtoint %"class.base::internal::BindStateBase"* %14 to i64
  %18 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %19 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %19, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %19, align 8
  call void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"* nonnull %4, %"class.base::SequencedTaskRunner"* %20, i32 2) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  br label %22

22:                                               ; preds = %3, %16
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  call void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"* nonnull %5, %"class.base::SequencedTaskRunner"* %2, i32 1) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.3* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad14StartVibrationEiddd(%"class.device::AbstractHapticGamepad"*, i32, double, double, double) #1 align 2 {
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.4", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::OnceCallback.4", align 8
  %11 = alloca %"class.base::WeakPtr", align 8
  %12 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %115

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %1
  br i1 %18, label %19, label %115

19:                                               ; preds = %15
  %20 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.device::AbstractHapticGamepad"*, double, double)***
  %21 = load void (%"class.device::AbstractHapticGamepad"*, double, double)**, void (%"class.device::AbstractHapticGamepad"*, double, double)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.device::AbstractHapticGamepad"*, double, double)*, void (%"class.device::AbstractHapticGamepad"*, double, double)** %21, i64 2
  %23 = load void (%"class.device::AbstractHapticGamepad"*, double, double)*, void (%"class.device::AbstractHapticGamepad"*, double, double)** %22, align 8
  tail call void %23(%"class.device::AbstractHapticGamepad"* %0, double %3, double %4) #10
  %24 = bitcast %"class.device::AbstractHapticGamepad"* %0 to double (%"class.device::AbstractHapticGamepad"*)***
  %25 = load double (%"class.device::AbstractHapticGamepad"*)**, double (%"class.device::AbstractHapticGamepad"*)*** %24, align 8
  %26 = getelementptr inbounds double (%"class.device::AbstractHapticGamepad"*)*, double (%"class.device::AbstractHapticGamepad"*)** %25, i64 4
  %27 = load double (%"class.device::AbstractHapticGamepad"*)*, double (%"class.device::AbstractHapticGamepad"*)** %26, align 8
  %28 = tail call double %27(%"class.device::AbstractHapticGamepad"* %0) #10
  %29 = fcmp olt double %28, %2
  br i1 %29, label %30, label %76

30:                                               ; preds = %19
  %31 = fsub double %2, %28
  %32 = tail call dereferenceable(8) %class.scoped_refptr.3* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %33 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %32, i64 0, i32 0
  %34 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %33, align 8
  %35 = bitcast %"class.base::SingleThreadTaskRunner"* %34 to %"class.base::TaskRunner"*
  %36 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 143) #10
  %37 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %38 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)***
  %39 = load void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)**, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)** %39, i64 5
  %41 = load void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)** %40, align 8
  call void %41(%"class.base::WeakPtr"* nonnull sret %8, %"class.device::AbstractHapticGamepad"* %0) #10
  %42 = call i8* @_Znwm(i64 96) #12, !noalias !8
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS3_EEidddEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !8
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)* @_ZN6device21AbstractHapticGamepad14StartVibrationEiddd to i64), i64 0>, <2 x i64>* %45, align 8, !noalias !8
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast i8* %46 to %"class.base::internal::WeakReference"*
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %47, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %48) #10, !noalias !8
  %49 = getelementptr inbounds i8, i8* %42, i64 56
  %50 = bitcast i8* %49 to i64*
  %51 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8, !noalias !8
  store i64 %52, i64* %50, align 8, !noalias !8
  %53 = getelementptr inbounds i8, i8* %42, i64 64
  %54 = bitcast i8* %53 to i32*
  store i32 %1, i32* %54, align 4, !noalias !8
  %55 = getelementptr inbounds i8, i8* %42, i64 72
  %56 = bitcast i8* %55 to double*
  store double %31, double* %56, align 8, !noalias !8
  %57 = getelementptr inbounds i8, i8* %42, i64 80
  %58 = bitcast i8* %57 to double*
  store double %3, double* %58, align 8, !noalias !8
  %59 = getelementptr inbounds i8, i8* %42, i64 88
  %60 = bitcast i8* %59 to double*
  store double %4, double* %60, align 8, !noalias !8
  %61 = bitcast %"class.base::OnceCallback.4"* %7 to i8**
  store i8* %42, i8** %61, align 8, !alias.scope !8
  %62 = fmul double %28, 1.000000e+03
  %63 = fcmp ult double %62, 0xC3E0000000000000
  %64 = fcmp ugt double %62, 0x43DFFFFFFFFFFFFF
  %65 = fcmp ogt double %62, 0xC3E0000000000000
  %66 = select i1 %65, double %62, double 0xC3E0000000000000
  %67 = fptosi double %66 to i64
  %68 = select i1 %63, i64 0, i64 9223372036854775807
  %69 = select i1 %64, i64 %68, i64 %67
  %70 = bitcast %"class.base::SingleThreadTaskRunner"* %34 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)***
  %71 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)*** %70, align 8
  %72 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)** %71, align 8
  %73 = call zeroext i1 %72(%"class.base::TaskRunner"* %35, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.4"* nonnull %7, i64 %69) #10
  %74 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %74) #10
  %75 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %75) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #10
  br label %115

76:                                               ; preds = %19
  %77 = tail call dereferenceable(8) %class.scoped_refptr.3* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %78 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %77, i64 0, i32 0
  %79 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %78, align 8
  %80 = bitcast %"class.base::SingleThreadTaskRunner"* %79 to %"class.base::TaskRunner"*
  %81 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 150) #10
  %82 = bitcast %"class.base::WeakPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #10
  %83 = bitcast %"class.device::AbstractHapticGamepad"* %0 to void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)***
  %84 = load void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)**, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)** %84, i64 5
  %86 = load void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)*, void (%"class.base::WeakPtr"*, %"class.device::AbstractHapticGamepad"*)** %85, align 8
  call void %86(%"class.base::WeakPtr"* nonnull sret %11, %"class.device::AbstractHapticGamepad"* %0) #10
  %87 = call i8* @_Znwm(i64 72) #12, !noalias !13
  %88 = bitcast i8* %87 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %88, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !13
  %89 = getelementptr inbounds i8, i8* %87, i64 32
  %90 = bitcast i8* %89 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.device::AbstractHapticGamepad"*, i32)* @_ZN6device21AbstractHapticGamepad12FinishEffectEi to i64), i64 0>, <2 x i64>* %90, align 8, !noalias !13
  %91 = getelementptr inbounds i8, i8* %87, i64 48
  %92 = bitcast i8* %91 to %"class.base::internal::WeakReference"*
  %93 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %92, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %93) #10, !noalias !13
  %94 = getelementptr inbounds i8, i8* %87, i64 56
  %95 = bitcast i8* %94 to i64*
  %96 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8, !noalias !13
  store i64 %97, i64* %95, align 8, !noalias !13
  %98 = getelementptr inbounds i8, i8* %87, i64 64
  %99 = bitcast i8* %98 to i32*
  store i32 %1, i32* %99, align 4, !noalias !13
  %100 = bitcast %"class.base::OnceCallback.4"* %10 to i8**
  store i8* %87, i8** %100, align 8, !alias.scope !13
  %101 = fmul double %2, 1.000000e+03
  %102 = fcmp ult double %101, 0xC3E0000000000000
  %103 = fcmp ugt double %101, 0x43DFFFFFFFFFFFFF
  %104 = fcmp ogt double %101, 0xC3E0000000000000
  %105 = select i1 %104, double %101, double 0xC3E0000000000000
  %106 = fptosi double %105 to i64
  %107 = select i1 %102, i64 0, i64 9223372036854775807
  %108 = select i1 %103, i64 %107, i64 %106
  %109 = bitcast %"class.base::SingleThreadTaskRunner"* %79 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)***
  %110 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)*** %109, align 8
  %111 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.4"*, i64)** %110, align 8
  %112 = call zeroext i1 %111(%"class.base::TaskRunner"* %80, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback.4"* nonnull %10, i64 %108) #10
  %113 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %113) #10
  %114 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %114) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #10
  br label %115

115:                                              ; preds = %30, %76, %15, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device21AbstractHapticGamepad12FinishEffectEi(%"class.device::AbstractHapticGamepad"* nocapture, i32) #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !7
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %11, label %20

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.device::AbstractHapticGamepad", %"class.device::AbstractHapticGamepad"* %0, i64 0, i32 5, i32 0
  %18 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %17, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %17, align 8
  call void @_ZN6device18GamepadDataFetcher20RunVibrationCallbackEN4base12OnceCallbackIFvNS_5mojom20GamepadHapticsResultEEEE13scoped_refptrINS1_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback"* nonnull %3, %"class.base::SequencedTaskRunner"* %18, i32 1) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  br label %20

20:                                               ; preds = %7, %2, %11
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device21AbstractHapticGamepad10DoShutdownEv(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::WeakPtr"*
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 3
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to double*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to double*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 5
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to double*
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #10
  br i1 %14, label %15, label %26

15:                                               ; preds = %1
  %16 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %17 = bitcast void (%"class.base::internal::BindStateBase"*)** %16 to %"class.device::AbstractHapticGamepad"**
  %18 = load %"class.device::AbstractHapticGamepad"*, %"class.device::AbstractHapticGamepad"** %17, align 8
  %19 = icmp eq %"class.device::AbstractHapticGamepad"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %24 = bitcast void ()** %23 to i64*
  %25 = load i64, i64* %24, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN6device21AbstractHapticGamepadEFvidddEvE6InvokeIS5_NS_7WeakPtrIS3_EEJidddEEEvT_OT0_DpOT1_(i64 %22, i64 %25, %"class.base::WeakPtr"* dereferenceable(16) %4, i32* dereferenceable(4) %6, double* dereferenceable(8) %8, double* dereferenceable(8) %10, double* dereferenceable(8) %12) #10
  br label %26

26:                                               ; preds = %1, %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN6device21AbstractHapticGamepadEFvidddEvE6InvokeIS5_NS_7WeakPtrIS3_EEJidddEEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), i32* dereferenceable(4), double* dereferenceable(8), double* dereferenceable(8), double* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %14

14:                                               ; preds = %11, %7
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %15, i8* %18, i8* null
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  %21 = bitcast i8* %20 to %"class.device::AbstractHapticGamepad"*
  %22 = and i64 %0, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %14
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %0, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)**
  %30 = load void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)*, void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)** %29, align 8
  br label %33

31:                                               ; preds = %14
  %32 = inttoptr i64 %0 to void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)*
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi void (%"class.device::AbstractHapticGamepad"*, i32, double, double, double)* [ %30, %24 ], [ %32, %31 ]
  %35 = load i32, i32* %3, align 4
  %36 = load double, double* %4, align 8
  %37 = load double, double* %5, align 8
  %38 = load double, double* %6, align 8
  call void %34(%"class.device::AbstractHapticGamepad"* %21, i32 %35, double %36, double %37, double %38) #10
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS3_EEidddEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EEidddEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #1 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.device::AbstractHapticGamepad"**
  %9 = load %"class.device::AbstractHapticGamepad"*, %"class.device::AbstractHapticGamepad"** %8, align 8
  %10 = icmp ne %"class.device::AbstractHapticGamepad"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.device::AbstractHapticGamepad"**
  %12 = load %"class.device::AbstractHapticGamepad"*, %"class.device::AbstractHapticGamepad"** %11, align 8
  %13 = icmp eq %"class.device::AbstractHapticGamepad"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.device::AbstractHapticGamepad"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.device::AbstractHapticGamepad"*, i32)**
  %39 = load void (%"class.device::AbstractHapticGamepad"*, i32)*, void (%"class.device::AbstractHapticGamepad"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.device::AbstractHapticGamepad"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.device::AbstractHapticGamepad"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.device::AbstractHapticGamepad"* %30, i32 %44) #10
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #1 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.device::AbstractHapticGamepad"**
  %9 = load %"class.device::AbstractHapticGamepad"*, %"class.device::AbstractHapticGamepad"** %8, align 8
  %10 = icmp ne %"class.device::AbstractHapticGamepad"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EERiRdSA_SA_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EERiRdSA_SA_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS2_EERiRdS8_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS2_EERiRdS8_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!7 = !{i8 0, i8 2}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EERiRdSA_SA_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS4_EERiRdSA_SA_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS2_EERiRdS8_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN6device21AbstractHapticGamepadEFvidddEJNS_7WeakPtrIS2_EERiRdS8_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EERiEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS4_EERiEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS2_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN6device21AbstractHapticGamepadEFviEJNS_7WeakPtrIS2_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
