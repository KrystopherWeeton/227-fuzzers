; ModuleID = '../../third_party/blink/renderer/core/animation/interpolable_filter.cc'
source_filename = "../../third_party/blink/renderer/core/animation/interpolable_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.16", i32, [4 x i8], %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.188", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.128", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.108", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.131", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.140" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.195" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::InterpolableFilter" = type <{ %"class.blink::InterpolableValue", %"class.std::__1::unique_ptr.0", i32, [4 x i8] }>
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::InterpolableValue"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector", %"class.std::__1::bitset" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [80 x i8] }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::InterpolableShadow" = type <{ %"class.blink::InterpolableValue", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.0", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::InterpolableLength"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSFunctionValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.210" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212", [32 x i8] }
%"class.WTF::VectorBufferBase.212" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.576, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.250, %class.scoped_refptr.250, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.250, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.232" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.217", %"class.blink::Member.217" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.217", %"class.blink::Member.219", %"class.blink::Member.217", %"class.blink::Member.217", %"class.blink::Member.221" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.251", %"class.blink::Member.253", %"class.blink::Member.219", %"class.blink::Member.255", %"class.blink::Member.255", %"class.blink::Member.275", %"class.blink::Member.277", %"class.blink::Member.279", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.284", %"class.blink::HeapVector.286" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::Document"* }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.262" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.226 }
%class.scoped_refptr.226 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.227" }
%"struct.std::__1::atomic.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i32 }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.266", i32, %"class.blink::HeapVector.268" }
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.268" = type { %"class.WTF::Vector.271" }
%"class.WTF::Vector.271" = type { %"class.WTF::VectorBuffer.272" }
%"class.WTF::VectorBuffer.272" = type { %"class.WTF::VectorBufferBase.273" }
%"class.WTF::VectorBufferBase.273" = type { %"class.blink::Member.266"*, i32, i32 }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.281" }
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::HeapHashMap.283"* }
%"class.blink::HeapHashMap.283" = type opaque
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.286" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.225 }
%class.scoped_refptr.225 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.236", %"class.blink::Member.238", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.236" = type { %"class.WTF::SingleThreadedBitField.237" }
%"class.WTF::SingleThreadedBitField.237" = type { i32 }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.243", %"class.WTF::AtomicString", %"class.WTF::Vector.245" }
%"class.WTF::RefCounted.243" = type { %"class.base::RefCounted.244" }
%"class.base::RefCounted.244" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.245" = type { %"class.WTF::VectorBuffer.246" }
%"class.WTF::VectorBuffer.246" = type { %"class.WTF::VectorBufferBase.247", [32 x i8] }
%"class.WTF::VectorBufferBase.247" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.302", %"class.WTF::Vector.302", i8, i32, %"class.blink::Member.313", %"class.blink::Member.315", %"class.blink::Member.317", %"class.blink::Member.319", %"class.blink::Member.321", %"class.blink::Member.323", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.331", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.337", %"class.blink::Member.339", %"class.blink::Member.292", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.342", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.268", %"class.blink::Member.266", %"class.blink::Member.372", %"class.blink::Member.266", %"class.blink::Member.266", %"class.blink::Member.266", %"class.blink::UserActionElementSet", %"class.blink::Member.381", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.388", i16, i8, %"class.blink::Member.395", %"class.blink::Member.397", %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::TextLinkColors", %"class.blink::Member.403", i8, [7 x i8], %"class.blink::HeapHashMap.405", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.266", %"class.WTF::Vector.412", %"class.blink::Member.417", %"class.blink::Member.419", i8, %"class.blink::Member.266", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.421", %"class.blink::HeapVector.423", %"class.std::__1::unique_ptr.431", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.437", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.450", %"class.WTF::Vector.452", i8, i8, %"class.std::__1::unique_ptr.457", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.268", %"class.blink::HeapVector.463", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.471", i8, i32, %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.479", %"class.WTF::HashMap.481", %"class.blink::Member.486", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.253", %"class.blink::Member.253", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.494", i8, i32, %"class.blink::Member.501", %"class.blink::Member.503", i32, %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", %"class.std::__1::unique_ptr.511", i64, %"class.std::__1::unique_ptr.517", i32, i32, %"class.blink::Member.523", %"class.blink::Member.525", %"class.blink::Member.527", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.529", %"class.WTF::Vector.531", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.536", %"class.blink::Member.543", %"class.std::__1::unique_ptr.545", %"class.blink::Member.551", i8, i8, %"class.WTF::String", %"class.blink::Member.553", i8, [7 x i8], %"class.blink::HeapHashMap.555", %"class.blink::HeapObserverSet", %"class.blink::Member.569", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.571", i32, i8, i8, %"class.blink::WeakMember.573", %"class.blink::Member.574" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.295" }
%"class.blink::HeapHashMap.295" = type { %"class.WTF::HashMap.298" }
%"class.WTF::HashMap.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"struct.WTF::KeyValuePair.301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.301" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.302" = type { %"class.WTF::VectorBuffer.303" }
%"class.WTF::VectorBuffer.303" = type { %"class.WTF::VectorBufferBase.304" }
%"class.WTF::VectorBufferBase.304" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.306" }
%"struct.std::__1::atomic.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__cxx_atomic_impl.309" }
%"struct.std::__1::__cxx_atomic_impl.309" = type { %"struct.std::__1::__cxx_atomic_base_impl.310" }
%"struct.std::__1::__cxx_atomic_base_impl.310" = type { i32 }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.883", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.916", i32, i8, [3 x i8], %"class.blink::HeapVector.918", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.926", %"class.blink::Member.928", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.937", %"class.blink::Member.943", %"class.blink::Member.945", i8, [7 x i8] }>
%"class.blink::Supplementable.883" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.884" }
%"class.blink::HeapHashMap.884" = type { %"class.WTF::HashMap.887" }
%"class.WTF::HashMap.887" = type { %"class.WTF::HashTable.888" }
%"class.WTF::HashTable.888" = type <{ %"struct.WTF::KeyValuePair.890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.890" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.891" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.841" }
%"class.blink::HeapObserverSet.841" = type { i32, [4 x i8], %"class.blink::HeapHashSet.842" }
%"class.blink::HeapHashSet.842" = type { %"class.WTF::HashSet.845" }
%"class.WTF::HashSet.845" = type { %"class.WTF::HashTable.846" }
%"class.WTF::HashTable.846" = type <{ %"class.blink::WeakMember.848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.848" = type opaque
%"class.blink::Supplementable.891" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.892" }
%"class.blink::HeapHashMap.892" = type { %"class.WTF::HashMap.895" }
%"class.WTF::HashMap.895" = type { %"class.WTF::HashTable.896" }
%"class.WTF::HashTable.896" = type <{ %"struct.WTF::KeyValuePair.898"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.898" = type { i8*, %"class.blink::Member.947" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.949" }
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.899, %"class.std::__1::unique_ptr.900", %"class.std::__1::unique_ptr.900", %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906", %"class.blink::Member.315", i32, [4 x i8], %"class.WTF::HashSet.912", i32, i32 }
%class.scoped_refptr.899 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.912" = type { %"class.WTF::HashTable.913" }
%"class.WTF::HashTable.913" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.918" = type { %"class.WTF::Vector.921" }
%"class.WTF::Vector.921" = type { %"class.WTF::VectorBuffer.922" }
%"class.WTF::VectorBuffer.922" = type { %"class.WTF::VectorBufferBase.923" }
%"class.WTF::VectorBufferBase.923" = type { %"class.blink::Member.924"*, i32, i32 }
%"class.blink::Member.924" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.930", i32, i32 }
%"class.blink::HeapHashMap.930" = type { %"class.WTF::HashMap.933" }
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.936" = type opaque
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.325" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::KURL"* }
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.341 }
%class.scoped_refptr.341 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.346", i32, i32, %"class.blink::Persistent.348" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.348" = type { %"class.blink::PersistentBase.349" }
%"class.blink::PersistentBase.349" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.352" }
%"class.blink::HeapHashMap.352" = type { %"class.WTF::HashMap.355" }
%"class.WTF::HashMap.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"struct.WTF::KeyValuePair.358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.358" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.374" }
%"class.blink::HeapHashMap.374" = type { %"class.WTF::HashMap.377" }
%"class.WTF::HashMap.377" = type { %"class.WTF::HashTable.378" }
%"class.WTF::HashTable.378" = type <{ %"struct.WTF::KeyValuePair.380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"class.blink::WeakMember.387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.387" = type opaque
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.405" = type { %"class.WTF::HashMap.408" }
%"class.WTF::HashMap.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::Member.429"*, i32, i32 }
%"class.blink::Member.429" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::WeakMember.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.443" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.444", i32, [4 x i8] }>
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %"struct.std::__1::pair.447"*, i32, i32 }
%"struct.std::__1::pair.447" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.463" = type { %"class.WTF::Vector.466" }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"class.blink::Member.469"*, i32, i32 }
%"class.blink::Member.469" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.253" }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.371", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.362, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.362 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.363" }>
%"class.base::RefCountedThreadSafe.363" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.364 }
%class.scoped_refptr.364 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.365", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.365" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.366" }
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i8 }
%"class.blink::WeakMember.371" = type { %"class.blink::MemberBase.254" }
%"class.blink::HeapHashSet.494" = type { %"class.WTF::HashSet.497" }
%"class.WTF::HashSet.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"class.blink::Member.500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.500" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.531" = type { %"class.WTF::VectorBuffer.532" }
%"class.WTF::VectorBuffer.532" = type { %"class.WTF::VectorBufferBase.533" }
%"class.WTF::VectorBufferBase.533" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.536" = type { %"class.WTF::HashMap.539" }
%"class.WTF::HashMap.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.555" = type { %"class.WTF::HashMap.558" }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.561" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.562" }
%"class.blink::HeapHashSet.562" = type { %"class.WTF::HashSet.565" }
%"class.WTF::HashSet.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"class.blink::WeakMember.568"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.568" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.253", %"class.blink::HeapHashSet.874", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.881", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.874" = type { %"class.WTF::HashSet.877" }
%"class.WTF::HashSet.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"class.blink::Member.880"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.880" = type opaque
%"class.blink::HeapTaskRunnerTimer.881" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.882", { i64, i64 } }
%"class.blink::WeakMember.882" = type { %"class.blink::MemberBase.572" }
%"class.blink::WeakMember.573" = type { %"class.blink::MemberBase.218" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.576 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.250 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.577", %"class.WTF::Vector.736", %"class.blink::HeapHashSet.741", %"class.WTF::Vector.736", %"class.blink::HeapVector.748", %"class.blink::HeapVector.755", %"class.blink::HeapHashMap.762", %"class.WTF::HashSet.769", %"class.WTF::HashSet.769", %"class.blink::HeapHashMap.773", %"class.blink::HeapHashMap.773", %"class.blink::HeapHashMap.773", %"class.blink::HeapHashMap.773" }
%"class.blink::HeapVector.577" = type { %"class.WTF::Vector.580" }
%"class.WTF::Vector.580" = type { %"class.WTF::VectorBuffer.581" }
%"class.WTF::VectorBuffer.581" = type { %"class.WTF::VectorBufferBase.582" }
%"class.WTF::VectorBufferBase.582" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.583", %"struct.blink::Timing", %"class.blink::Member.658", i32, %"class.blink::Member.670", %"class.WTF::Vector.730" }
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.604", i8, %"class.absl::optional", %"class.absl::optional.653" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.585", %"struct.blink::Timing", %"class.blink::Member.590", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.599", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.594", %"class.absl::optional.594", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.594" = type { %"class.absl::optional_internal::optional_data.595" }
%"class.absl::optional_internal::optional_data.595" = type { %"class.absl::optional_internal::optional_data_base.596" }
%"class.absl::optional_internal::optional_data_base.596" = type { %"class.absl::optional_internal::optional_data_dtor_base.597" }
%"class.absl::optional_internal::optional_data_dtor_base.597" = type { i8, %union.anon.598 }
%union.anon.598 = type { double }
%"class.absl::optional.599" = type { %"class.absl::optional_internal::optional_data.600" }
%"class.absl::optional_internal::optional_data.600" = type { %"class.absl::optional_internal::optional_data_base.601" }
%"class.absl::optional_internal::optional_data_base.601" = type { %"class.absl::optional_internal::optional_data_dtor_base.602" }
%"class.absl::optional_internal::optional_data_dtor_base.602" = type { i8, %union.anon.603 }
%union.anon.603 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.608", %"class.blink::Member.616", %"class.blink::Member.641", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.588, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.608" = type { %"class.WTF::Vector.611" }
%"class.WTF::Vector.611" = type { %"class.WTF::VectorBuffer.612" }
%"class.WTF::VectorBuffer.612" = type { %"class.WTF::VectorBufferBase.613" }
%"class.WTF::VectorBufferBase.613" = type { %"class.blink::Member.614"*, i32, i32 }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.594", %"class.absl::optional.961", %class.scoped_refptr.588 }
%"class.absl::optional.961" = type { %"class.absl::optional_internal::optional_data.962" }
%"class.absl::optional_internal::optional_data.962" = type { %"class.absl::optional_internal::optional_data_base.963" }
%"class.absl::optional_internal::optional_data_base.963" = type { %"class.absl::optional_internal::optional_data_dtor_base.964" }
%"class.absl::optional_internal::optional_data_dtor_base.964" = type { i8, %union.anon.965 }
%union.anon.965 = type { i32 }
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::HeapHashMap.618"* }
%"class.blink::HeapHashMap.618" = type { %"class.WTF::HashMap.621" }
%"class.WTF::HashMap.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"struct.WTF::KeyValuePair.624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.624" = type { %"class.blink::PropertyHandle", %"class.blink::Member.626" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.625, %"class.WTF::AtomicString" }
%union.anon.625 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.630" }
%"class.blink::HeapVector.630" = type { %"class.WTF::Vector.633" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %"class.blink::Member.636"*, i32, i32 }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.588, i32, [4 x i8] }>
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.645" }
%"class.blink::HeapVector.645" = type { %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.blink::Member.651"*, i32, i32 }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.954", %class.scoped_refptr.588, double, double, double, double }
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%class.scoped_refptr.588 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.589" }
%"class.base::RefCountedThreadSafe.589" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.587 }
%union.anon.587 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.653" = type { %"class.absl::optional_internal::optional_data.654" }
%"class.absl::optional_internal::optional_data.654" = type { %"class.absl::optional_internal::optional_data_base.655" }
%"class.absl::optional_internal::optional_data_base.655" = type { %"class.absl::optional_internal::optional_data_dtor_base.656" }
%"class.absl::optional_internal::optional_data_dtor_base.656" = type { i8, %union.anon.657 }
%union.anon.657 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr.588, i16, [6 x i8] }>
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.662", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.662" = type { %"class.WTF::Vector.665" }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"class.blink::Member.668"*, i32, i32 }
%"class.blink::Member.668" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.253", i32, [4 x i8], %"class.blink::HeapHashSet.672", %"class.blink::HeapHashSet.680", %"class.std::__1::unique_ptr.687", %"class.absl::optional.720" }
%"class.blink::HeapHashSet.672" = type { %"class.WTF::HashSet.675" }
%"class.WTF::HashSet.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"class.blink::Member.678"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.594", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.653", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.849", %"class.blink::Member.849", %"class.blink::Member.851", %"class.blink::Member.253", %"class.blink::Member.670", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.853", %"class.blink::Member.853", %"class.blink::Member.853", %"class.std::__1::unique_ptr.855", i8, [3 x i8], i32, %"class.blink::Member.861", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.832" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.820" }
%"class.blink::HeapVector.820" = type { %"class.WTF::Vector.823" }
%"class.WTF::Vector.823" = type { %"class.WTF::VectorBuffer.824" }
%"class.WTF::VectorBuffer.824" = type { %"class.WTF::VectorBufferBase.825", [32 x i8] }
%"class.WTF::VectorBufferBase.825" = type { %"struct.std::__1::pair.826"*, i32, i32 }
%"struct.std::__1::pair.826" = type { %"class.WTF::AtomicString", %"class.blink::Member.827" }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::HeapVector.829"* }
%"class.blink::HeapVector.829" = type opaque
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.WTF::Vector.835"* }
%"class.WTF::Vector.835" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.839" }
%"class.blink::WeakMember.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.594", %"class.absl::optional.594", double, i8, i32 }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.865", %"class.std::__1::unique_ptr.866", %"class.blink::Member.678" }
%"class.blink::ThreadState::PrefinalizerRegistration.865" = type { i8 }
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.680" = type { %"class.WTF::HashSet.683" }
%"class.WTF::HashSet.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ %"class.blink::WeakMember.686"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.686" = type opaque
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.690 }
%class.scoped_refptr.690 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.691", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.691" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.692" }
%"class.std::__1::__hash_table.692" = type <{ %"class.std::__1::unique_ptr.693", %"class.std::__1::__compressed_pair.703", %"class.std::__1::__compressed_pair.708", %"class.std::__1::__compressed_pair.712", [4 x i8] }>
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695", %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"struct.std::__1::__hash_node_base.696"** }
%"struct.std::__1::__hash_node_base.696" = type { %"struct.std::__1::__hash_node_base.696"* }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.std::__1::__bucket_list_deallocator.698" }
%"class.std::__1::__bucket_list_deallocator.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"struct.std::__1::__hash_node_base.696" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.720" = type { %"class.absl::optional_internal::optional_data.721" }
%"class.absl::optional_internal::optional_data.721" = type { %"class.absl::optional_internal::optional_data_base.722" }
%"class.absl::optional_internal::optional_data_base.722" = type { %"class.absl::optional_internal::optional_data_dtor_base.723" }
%"class.absl::optional_internal::optional_data_dtor_base.723" = type { i8, %union.anon.724 }
%union.anon.724 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.725" }
%"class.absl::optional.725" = type { %"class.absl::optional_internal::optional_data.726" }
%"class.absl::optional_internal::optional_data.726" = type { %"class.absl::optional_internal::optional_data_base.727" }
%"class.absl::optional_internal::optional_data_base.727" = type { %"class.absl::optional_internal::optional_data_dtor_base.728" }
%"class.absl::optional_internal::optional_data_dtor_base.728" = type { i8, %union.anon.729 }
%union.anon.729 = type { %"class.base::TimeDelta" }
%"class.WTF::Vector.730" = type { %"class.WTF::VectorBuffer.731" }
%"class.WTF::VectorBuffer.731" = type { %"class.WTF::VectorBufferBase.732" }
%"class.WTF::VectorBufferBase.732" = type { i32*, i32, i32 }
%"class.blink::HeapHashSet.741" = type { %"class.WTF::HashSet.744" }
%"class.WTF::HashSet.744" = type { %"class.WTF::HashTable.745" }
%"class.WTF::HashTable.745" = type <{ %"class.blink::Member.747"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.747" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.736" = type { %"class.WTF::VectorBuffer.737" }
%"class.WTF::VectorBuffer.737" = type { %"class.WTF::VectorBufferBase.738" }
%"class.WTF::VectorBufferBase.738" = type { i32*, i32, i32 }
%"class.blink::HeapVector.748" = type { %"class.WTF::Vector.751" }
%"class.WTF::Vector.751" = type { %"class.WTF::VectorBuffer.752" }
%"class.WTF::VectorBuffer.752" = type { %"class.WTF::VectorBufferBase.753" }
%"class.WTF::VectorBufferBase.753" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.678", %"class.blink::Member.583", %"struct.blink::Timing", %"class.blink::Member.658", i32, %"class.blink::Member.670", %"class.WTF::Vector.730" }
%"class.blink::HeapVector.755" = type { %"class.WTF::Vector.758" }
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760" }
%"class.WTF::VectorBufferBase.760" = type { %"class.blink::Member.678"*, i32, i32 }
%"class.blink::HeapHashMap.762" = type { %"class.WTF::HashMap.765" }
%"class.WTF::HashMap.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type { %"class.blink::PropertyHandle", %"class.blink::Member.977" }
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.250, %class.scoped_refptr.250, %class.scoped_refptr.250, double, %"class.blink::Member.583" }
%"class.WTF::HashSet.769" = type { %"class.WTF::HashTable.770" }
%"class.WTF::HashTable.770" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.773" = type { %"class.WTF::HashMap.776" }
%"class.WTF::HashMap.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"struct.WTF::KeyValuePair.779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.779" = type { %"class.blink::PropertyHandle", %"class.blink::Member.967" }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::HeapVector.969"* }
%"class.blink::HeapVector.969" = type { %"class.WTF::Vector.972" }
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974", [8 x i8] }
%"class.WTF::VectorBufferBase.974" = type { %"class.blink::Member.954"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.781, %class.scoped_refptr.789, %class.scoped_refptr.799, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.811 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.780 }
%class.scoped_refptr.780 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.816", [4 x i8] }>
%"class.WTF::RefCounted.816" = type { %"class.base::RefCounted.817" }
%"class.base::RefCounted.817" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.781 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.787", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.782" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.787" = type { %"class.base::RefCounted.788" }
%"class.base::RefCounted.788" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.789 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.790", %"class.WTF::RefCounted.797", [4 x i8] }>
%"class.blink::FontSettings.790" = type { %"class.WTF::Vector.791" }
%"class.WTF::Vector.791" = type { %"class.WTF::VectorBuffer.792" }
%"class.WTF::VectorBuffer.792" = type { %"class.WTF::VectorBufferBase.793" }
%"class.WTF::VectorBufferBase.793" = type { %"class.blink::FontTagValuePair.794"*, i32, i32 }
%"class.blink::FontTagValuePair.794" = type { i32, float }
%"class.WTF::RefCounted.797" = type { %"class.base::RefCounted.798" }
%"class.base::RefCounted.798" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.799 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.800", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.808, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.800" = type { %"class.base::RefCounted.801" }
%"class.base::RefCounted.801" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.804 }
%union.anon.804 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.808 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.809", [4 x i8] }>
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.811 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.812", %"class.WTF::HashSet.812", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.812" = type { %"class.WTF::HashTable.813" }
%"class.WTF::HashTable.813" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::InterpolableNumber" = type { %"class.blink::InterpolableValue", double }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::BasicColorMatrixFilterOperation" = type { %"class.blink::FilterOperation.base", double }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::BasicComponentTransferFilterOperation" = type { %"class.blink::FilterOperation.base", double }

$_ZN5blink18InterpolableFilterD2Ev = comdat any

$_ZN5blink18InterpolableFilterD0Ev = comdat any

$_ZNK5blink17InterpolableValue8IsNumberEv = comdat any

$_ZNK5blink17InterpolableValue6IsBoolEv = comdat any

$_ZNK5blink17InterpolableValue6IsListEv = comdat any

$_ZNK5blink17InterpolableValue8IsLengthEv = comdat any

$_ZNK5blink17InterpolableValue13IsAspectRatioEv = comdat any

$_ZNK5blink17InterpolableValue8IsShadowEv = comdat any

$_ZNK5blink18InterpolableFilter8IsFilterEv = comdat any

$_ZNK5blink17InterpolableValue15IsTransformListEv = comdat any

$_ZNK5blink18InterpolableFilter6EqualsERKNS_17InterpolableValueE = comdat any

$_ZN5blink18InterpolableFilter5ScaleEd = comdat any

$_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_ = comdat any

$_ZNK5blink18InterpolableFilter8RawCloneEv = comdat any

$_ZNK5blink18InterpolableFilter15RawCloneAndZeroEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv = comdat any

$_ZN5blink31BasicColorMatrixFilterOperationD0Ev = comdat any

$_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZNK5blink15FilterOperation10IsSameTypeERKS0_ = comdat any

$_ZNK5blink15FilterOperation14AffectsOpacityEv = comdat any

$_ZNK5blink15FilterOperation11MovesPixelsEv = comdat any

$_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE = comdat any

$_ZN5blink15FilterOperationD2Ev = comdat any

$_ZN5blink37BasicComponentTransferFilterOperationD0Ev = comdat any

$_ZNK5blink37BasicComponentTransferFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZNK5blink37BasicComponentTransferFilterOperation14AffectsOpacityEv = comdat any

$_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink31BasicColorMatrixFilterOperationE = comdat any

$_ZTVN5blink37BasicComponentTransferFilterOperationE = comdat any

@_ZTVN5blink18InterpolableFilterE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolableFilter"*)* @_ZN5blink18InterpolableFilterD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableFilter"*)* @_ZN5blink18InterpolableFilterD0Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableFilter"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZNK5blink18InterpolableFilter11InterpolateERKNS_17InterpolableValueEdRS1_ to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsNumberEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsBoolEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue13IsAspectRatioEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsShadowEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableFilter"*)* @_ZNK5blink18InterpolableFilter8IsFilterEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue15IsTransformListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableFilter"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink18InterpolableFilter6EqualsERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableFilter"*, double)* @_ZN5blink18InterpolableFilter5ScaleEd to i8*), i8* bitcast (void (%"class.blink::InterpolableFilter"*, %"class.blink::InterpolableValue"*)* @_ZN5blink18InterpolableFilter3AddERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_ to i8*), i8* bitcast (void (%"class.blink::InterpolableFilter"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink18InterpolableFilter24AssertCanInterpolateWithERKNS_17InterpolableValueE to i8*), i8* bitcast (%"class.blink::InterpolableFilter"* (%"class.blink::InterpolableFilter"*)* @_ZNK5blink18InterpolableFilter8RawCloneEv to i8*), i8* bitcast (%"class.blink::InterpolableFilter"* (%"class.blink::InterpolableFilter"*)* @_ZNK5blink18InterpolableFilter15RawCloneAndZeroEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink18InterpolableNumberE = external unnamed_addr constant { [20 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink31BasicColorMatrixFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterOperation"*)* @_ZN5blink15FilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::BasicColorMatrixFilterOperation"*)* @_ZN5blink31BasicColorMatrixFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::BasicColorMatrixFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@_ZTVN5blink37BasicComponentTransferFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterOperation"*)* @_ZN5blink15FilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::BasicComponentTransferFilterOperation"*)* @_ZN5blink37BasicComponentTransferFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::BasicComponentTransferFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink37BasicComponentTransferFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::BasicComponentTransferFilterOperation"*)* @_ZNK5blink37BasicComponentTransferFilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@_ZTVN5blink19BlurFilterOperationE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN5blink25DropShadowFilterOperationE = external unnamed_addr constant { [10 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableFilter"* @_ZN5blink18InterpolableFilter11MaybeCreateERKNS_15FilterOperationEd(%"class.blink::FilterOperation"* dereferenceable(16), double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %45 [
    i32 1, label %5
    i32 4, label %5
    i32 3, label %5
    i32 2, label %5
    i32 8, label %14
    i32 9, label %14
    i32 6, label %14
    i32 7, label %14
    i32 10, label %23
    i32 11, label %29
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 1
  %7 = bitcast %"class.blink::FilterOperation"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call noalias i8* @malloc(i64 16) #6
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = ptrtoint i8* %9 to i64
  br label %34

14:                                               ; preds = %2, %2, %2, %2
  %15 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 1
  %16 = bitcast %"class.blink::FilterOperation"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call noalias i8* @malloc(i64 16) #6
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8
  %22 = ptrtoint i8* %18 to i64
  br label %34

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 0, i32 2
  %25 = bitcast [4 x i8]* %24 to %"class.blink::Length"*
  %26 = fptrunc double %1 to float
  %27 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %25, float %26) #6
  %28 = ptrtoint %"class.blink::InterpolableLength"* %27 to i64
  br label %34

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 0, i32 2
  %31 = bitcast [4 x i8]* %30 to %"class.blink::ShadowData"*
  %32 = tail call %"class.blink::InterpolableShadow"* @_ZN5blink18InterpolableShadow6CreateERKNS_10ShadowDataEd(%"class.blink::ShadowData"* dereferenceable(28) %31, double %1) #6
  %33 = ptrtoint %"class.blink::InterpolableShadow"* %32 to i64
  br label %34

34:                                               ; preds = %29, %23, %14, %5
  %35 = phi i64 [ %33, %29 ], [ %28, %23 ], [ %22, %14 ], [ %13, %5 ]
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %34
  %38 = tail call noalias i8* @malloc(i64 24) #6
  %39 = bitcast i8* %38 to %"class.blink::InterpolableFilter"*
  %40 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 %35, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 16
  %44 = bitcast i8* %43 to i32*
  store i32 %4, i32* %44, align 8
  br label %45

45:                                               ; preds = %34, %2, %37
  %46 = phi %"class.blink::InterpolableFilter"* [ null, %2 ], [ %39, %37 ], [ null, %34 ]
  ret %"class.blink::InterpolableFilter"* %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #2

declare %"class.blink::InterpolableShadow"* @_ZN5blink18InterpolableShadow6CreateERKNS_10ShadowDataEd(%"class.blink::ShadowData"* dereferenceable(28), double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableFilter"* @_ZN5blink18InterpolableFilter20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 18, i32 2
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = tail call i32 @_ZN5blink23FilterOperationResolver22FilterOperationForTypeENS_10CSSValueIDE(i32 %8) #6
  switch i32 %9, label %54 [
    i32 8, label %10
    i32 9, label %10
    i32 1, label %10
    i32 6, label %10
    i32 7, label %10
    i32 3, label %10
    i32 2, label %10
    i32 4, label %10
    i32 10, label %18
    i32 11, label %35
  ]

10:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5
  %11 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFunctionValue"*
  %12 = tail call double @_ZN5blink23FilterOperationResolver33ResolveNumericArgumentForFunctionERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64) %11) #6
  %13 = tail call noalias i8* @malloc(i64 16) #6
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to double*
  store double %12, double* %16, align 8
  %17 = ptrtoint i8* %13 to i64
  br label %43

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %25 = bitcast i8* %24 to %"class.WTF::Vector.210"*
  %26 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.210"* %25, i32 0) #6
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %27, align 8
  %29 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %28) #6
  br label %32

30:                                               ; preds = %18
  %31 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() #6
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi %"class.blink::InterpolableLength"* [ %31, %30 ], [ %29, %23 ]
  %34 = ptrtoint %"class.blink::InterpolableLength"* %33 to i64
  br label %43

35:                                               ; preds = %5
  %36 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %37 = bitcast i8* %36 to %"class.WTF::Vector.210"*
  %38 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.210"* %37, i32 0) #6
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %39, align 8
  %41 = tail call %"class.blink::InterpolableShadow"* @_ZN5blink18InterpolableShadow20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %40) #6
  %42 = ptrtoint %"class.blink::InterpolableShadow"* %41 to i64
  br label %43

43:                                               ; preds = %35, %32, %10
  %44 = phi i64 [ %42, %35 ], [ %34, %32 ], [ %17, %10 ]
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %43
  %47 = tail call noalias i8* @malloc(i64 24) #6
  %48 = bitcast i8* %47 to %"class.blink::InterpolableFilter"*
  %49 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 8
  %51 = bitcast i8* %50 to i64*
  store i64 %44, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %47, i64 16
  %53 = bitcast i8* %52 to i32*
  store i32 %9, i32* %53, align 8
  br label %54

54:                                               ; preds = %43, %5, %46, %1
  %55 = phi %"class.blink::InterpolableFilter"* [ null, %1 ], [ null, %5 ], [ %48, %46 ], [ null, %43 ]
  ret %"class.blink::InterpolableFilter"* %55
}

declare i32 @_ZN5blink23FilterOperationResolver22FilterOperationForTypeENS_10CSSValueIDE(i32) local_unnamed_addr #2

declare double @_ZN5blink23FilterOperationResolver33ResolveNumericArgumentForFunctionERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() local_unnamed_addr #2

declare %"class.blink::InterpolableShadow"* @_ZN5blink18InterpolableShadow20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableFilter"* @_ZN5blink18InterpolableFilter18CreateInitialValueENS_15FilterOperation13OperationTypeE(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 6, label %2
    i32 2, label %2
    i32 4, label %2
    i32 8, label %8
    i32 9, label %8
    i32 7, label %8
    i32 3, label %8
    i32 10, label %14
    i32 11, label %17
  ]

2:                                                ; preds = %1, %1, %1, %1
  %3 = tail call noalias i8* @malloc(i64 16) #6
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to double*
  store double 0.000000e+00, double* %6, align 8
  %7 = ptrtoint i8* %3 to i64
  br label %20

8:                                                ; preds = %1, %1, %1, %1
  %9 = tail call noalias i8* @malloc(i64 16) #6
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to double*
  store double 1.000000e+00, double* %12, align 8
  %13 = ptrtoint i8* %9 to i64
  br label %20

14:                                               ; preds = %1
  %15 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() #6
  %16 = ptrtoint %"class.blink::InterpolableLength"* %15 to i64
  br label %20

17:                                               ; preds = %1
  %18 = tail call %"class.blink::InterpolableShadow"* @_ZN5blink18InterpolableShadow13CreateNeutralEv() #6
  %19 = ptrtoint %"class.blink::InterpolableShadow"* %18 to i64
  br label %20

20:                                               ; preds = %17, %14, %8, %2
  %21 = phi i64 [ %19, %17 ], [ %16, %14 ], [ %13, %8 ], [ %7, %2 ]
  %22 = tail call noalias i8* @malloc(i64 24) #6
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  %27 = bitcast i8* %26 to i32*
  store i32 %0, i32* %27, align 8
  %28 = bitcast i8* %22 to %"class.blink::InterpolableFilter"*
  br label %29

29:                                               ; preds = %20, %1
  %30 = phi %"class.blink::InterpolableFilter"* [ %28, %20 ], [ null, %1 ]
  ret %"class.blink::InterpolableFilter"* %30
}

declare %"class.blink::InterpolableShadow"* @_ZN5blink18InterpolableShadow13CreateNeutralEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FilterOperation"* @_ZNK5blink18InterpolableFilter21CreateFilterOperationERKNS_18StyleResolverStateE(%"class.blink::InterpolableFilter"* nocapture readonly, %"class.blink::StyleResolverState"* dereferenceable(600)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca %"class.blink::ShadowData", align 4
  %6 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %123 [
    i32 1, label %8
    i32 4, label %8
    i32 3, label %8
    i32 2, label %8
    i32 8, label %39
    i32 9, label %39
    i32 6, label %39
    i32 7, label %39
    i32 10, label %69
    i32 11, label %97
  ]

8:                                                ; preds = %2, %2, %2, %2
  %9 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::InterpolableValue"** %9 to %"class.blink::InterpolableNumber"**
  %11 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %11, i64 0, i32 1
  %13 = load double, double* %12, align 8
  switch i32 %7, label %24 [
    i32 4, label %25
    i32 2, label %19
    i32 3, label %14
    i32 1, label %19
  ]

14:                                               ; preds = %8
  %15 = fcmp ult double %13, 0x7FEFFFFFFFFFFFFF
  %16 = fcmp ole double %13, 0.000000e+00
  %17 = select i1 %16, double 0.000000e+00, double %13
  %18 = select i1 %15, double %17, double 0x7FEFFFFFFFFFFFFF
  br label %25

19:                                               ; preds = %8, %8
  %20 = fcmp ult double %13, 1.000000e+00
  %21 = fcmp ole double %13, 0.000000e+00
  %22 = select i1 %21, double 0.000000e+00, double %13
  %23 = select i1 %20, double %22, double 1.000000e+00
  br label %25

24:                                               ; preds = %8
  br label %25

25:                                               ; preds = %8, %14, %19, %24
  %26 = phi double [ 0.000000e+00, %24 ], [ %23, %19 ], [ %18, %14 ], [ %13, %8 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #6
  %28 = load i32, i32* %6, align 4
  %29 = bitcast i8* %27 to i32 (...)***
  %30 = getelementptr inbounds i8, i8* %27, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 %28, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink31BasicColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 16
  %33 = bitcast i8* %32 to double*
  store double %26, double* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = bitcast i8* %27 to %"class.blink::FilterOperation"*
  br label %123

39:                                               ; preds = %2, %2, %2, %2
  %40 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = bitcast %"class.blink::InterpolableValue"** %40 to %"class.blink::InterpolableNumber"**
  %42 = load %"class.blink::InterpolableNumber"*, %"class.blink::InterpolableNumber"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::InterpolableNumber", %"class.blink::InterpolableNumber"* %42, i64 0, i32 1
  %44 = load double, double* %43, align 8
  switch i32 %7, label %55 [
    i32 8, label %45
    i32 9, label %45
    i32 7, label %50
    i32 6, label %50
  ]

45:                                               ; preds = %39, %39
  %46 = fcmp ult double %44, 0x7FEFFFFFFFFFFFFF
  %47 = fcmp ole double %44, 0.000000e+00
  %48 = select i1 %47, double 0.000000e+00, double %44
  %49 = select i1 %46, double %48, double 0x7FEFFFFFFFFFFFFF
  br label %55

50:                                               ; preds = %39, %39
  %51 = fcmp ult double %44, 1.000000e+00
  %52 = fcmp ole double %44, 0.000000e+00
  %53 = select i1 %52, double 0.000000e+00, double %44
  %54 = select i1 %51, double %53, double 1.000000e+00
  br label %55

55:                                               ; preds = %39, %45, %50
  %56 = phi double [ %54, %50 ], [ %49, %45 ], [ 0.000000e+00, %39 ]
  %57 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #6
  %58 = load i32, i32* %6, align 4
  %59 = bitcast i8* %57 to i32 (...)***
  %60 = getelementptr inbounds i8, i8* %57, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 %58, i32* %61, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink37BasicComponentTransferFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %62 = getelementptr inbounds i8, i8* %57, i64 16
  %63 = bitcast i8* %62 to double*
  store double %56, double* %63, align 8
  %64 = getelementptr inbounds i8, i8* %57, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = bitcast i8* %57 to %"class.blink::FilterOperation"*
  br label %123

69:                                               ; preds = %2
  %70 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #6
  %71 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %72 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = bitcast %"class.blink::InterpolableValue"** %72 to %"class.blink::InterpolableLength"**
  store i64 -6148914691236517206, i64* %3, align 8
  %74 = load %"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 3
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %4, %"class.blink::InterpolableLength"* %74, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %75, i32 1) #6
  %76 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #6
  %77 = bitcast i8* %76 to i32 (...)***
  %78 = getelementptr inbounds i8, i8* %76, i64 8
  %79 = bitcast i8* %78 to i32*
  store i32 10, i32* %79, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink19BlurFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %80 = getelementptr inbounds i8, i8* %76, i64 12
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %3, align 8
  store i64 %82, i64* %81, align 4
  %83 = and i64 %82, 280375465082880
  %84 = icmp eq i64 %83, 8796093022208
  br i1 %84, label %85, label %87

85:                                               ; preds = %69
  %86 = bitcast i8* %80 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %86) #6
  br label %87

87:                                               ; preds = %69, %85
  %88 = getelementptr inbounds i8, i8* %76, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  %92 = bitcast i8* %76 to %"class.blink::FilterOperation"*
  %93 = load i8, i8* %71, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %96

95:                                               ; preds = %87
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #6
  br label %96

96:                                               ; preds = %87, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #6
  br label %123

97:                                               ; preds = %2
  %98 = bitcast %"class.blink::ShadowData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %98) #6
  %99 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %5, i64 0, i32 3, i32 0, i32 0
  %100 = bitcast %"class.blink::ShadowData"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %100, i8 -1, i64 16, i1 false)
  store i32 -1431655766, i32* %99, align 4
  %101 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %5, i64 0, i32 3, i32 1
  store i32 -1431655766, i32* %101, align 4
  %102 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %5, i64 0, i32 4
  store i32 -1431655766, i32* %102, align 4
  %103 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = bitcast %"class.blink::InterpolableValue"** %103 to %"class.blink::InterpolableShadow"**
  %105 = load %"class.blink::InterpolableShadow"*, %"class.blink::InterpolableShadow"** %104, align 8
  call void @_ZNK5blink18InterpolableShadow16CreateShadowDataERKNS_18StyleResolverStateE(%"class.blink::ShadowData"* nonnull sret %5, %"class.blink::InterpolableShadow"* %105, %"class.blink::StyleResolverState"* dereferenceable(600) %1) #6
  %106 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %5, i64 0, i32 3
  %107 = bitcast %"class.blink::StyleColor"* %106 to i64*
  %108 = load i64, i64* %107, align 4
  %109 = and i64 %108, -4294967296
  %110 = icmp eq i64 %109, 631360192512
  br i1 %110, label %111, label %112

111:                                              ; preds = %97
  store i64 4278190080, i64* %107, align 4
  br label %112

112:                                              ; preds = %111, %97
  %113 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 40) #6
  %114 = bitcast i8* %113 to i32 (...)***
  %115 = getelementptr inbounds i8, i8* %113, i64 8
  %116 = bitcast i8* %115 to i32*
  store i32 11, i32* %116, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink25DropShadowFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %117 = getelementptr inbounds i8, i8* %113, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* nonnull align 4 %98, i64 28, i1 false) #6
  %118 = getelementptr inbounds i8, i8* %113, i64 -4
  %119 = bitcast i8* %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = or i16 %120, 1
  store atomic i16 %121, i16* %119 release, align 2
  %122 = bitcast i8* %113 to %"class.blink::FilterOperation"*
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %98) #6
  br label %123

123:                                              ; preds = %2, %112, %96, %55, %25
  %124 = phi %"class.blink::FilterOperation"* [ %122, %112 ], [ %92, %96 ], [ %68, %55 ], [ %38, %25 ], [ null, %2 ]
  ret %"class.blink::FilterOperation"* %124
}

declare void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #2

declare void @_ZNK5blink18InterpolableShadow16CreateShadowDataERKNS_18StyleResolverStateE(%"class.blink::ShadowData"* sret, %"class.blink::InterpolableShadow"*, %"class.blink::StyleResolverState"* dereferenceable(600)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableFilter3AddERKNS_17InterpolableValueE(%"class.blink::InterpolableFilter"* nocapture readonly, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"**
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 13
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %4, %"class.blink::InterpolableValue"* dereferenceable(8) %7) #6
  %12 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %32 [
    i32 8, label %14
    i32 9, label %14
    i32 1, label %14
    i32 6, label %14
    i32 7, label %14
    i32 3, label %14
    i32 2, label %14
  ]

14:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  %15 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %16 = tail call noalias i8* @malloc(i64 16) #6
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to double*
  store double -1.000000e+00, double* %19, align 8
  %20 = bitcast i8* %16 to %"class.blink::InterpolableValue"*
  %21 = bitcast %"class.blink::InterpolableValue"* %15 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %22 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %22, i64 13
  %24 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %23, align 8
  tail call void %24(%"class.blink::InterpolableValue"* %15, %"class.blink::InterpolableValue"* dereferenceable(8) %20) #6
  %25 = icmp eq i8* %16, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %14
  %27 = bitcast i8* %16 to %"class.blink::InterpolableNumber"*
  %28 = bitcast i8* %16 to void (%"class.blink::InterpolableNumber"*)***
  %29 = load void (%"class.blink::InterpolableNumber"*)**, void (%"class.blink::InterpolableNumber"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InterpolableNumber"*)*, void (%"class.blink::InterpolableNumber"*)** %29, i64 1
  %31 = load void (%"class.blink::InterpolableNumber"*)*, void (%"class.blink::InterpolableNumber"*)** %30, align 8
  tail call void %31(%"class.blink::InterpolableNumber"* nonnull %27) #6
  br label %32

32:                                               ; preds = %26, %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18InterpolableFilter24AssertCanInterpolateWithERKNS_17InterpolableValueE(%"class.blink::InterpolableFilter"* nocapture readonly, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"**
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 15
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %4, %"class.blink::InterpolableValue"* dereferenceable(8) %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18InterpolableFilter11InterpolateERKNS_17InterpolableValueEdRS1_(%"class.blink::InterpolableFilter"* nocapture readonly, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8), double, %"class.blink::InterpolableValue"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %8 = bitcast %"class.blink::InterpolableValue"* %7 to %"class.blink::InterpolableValue"**
  %9 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 1
  %11 = bitcast %"class.blink::InterpolableValue"* %10 to %"class.blink::InterpolableValue"**
  %12 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %13 = bitcast %"class.blink::InterpolableValue"* %6 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %14 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %14, i64 2
  %16 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %15, align 8
  tail call void %16(%"class.blink::InterpolableValue"* %6, %"class.blink::InterpolableValue"* dereferenceable(8) %9, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %12) #6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InterpolableFilterD2Ev(%"class.blink::InterpolableFilter"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*)***
  %8 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %8, i64 1
  %10 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %9, align 8
  tail call void %10(%"class.blink::InterpolableValue"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InterpolableFilterD0Ev(%"class.blink::InterpolableFilter"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %3, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %3, align 8
  %5 = icmp eq %"class.blink::InterpolableValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::InterpolableValue"* %4 to void (%"class.blink::InterpolableValue"*)***
  %8 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %8, i64 1
  %10 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %9, align 8
  tail call void %10(%"class.blink::InterpolableValue"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::InterpolableFilter"* %0 to i8*
  tail call void @free(i8* %12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsNumberEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsBoolEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsListEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsLengthEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue13IsAspectRatioEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsShadowEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18InterpolableFilter8IsFilterEv(%"class.blink::InterpolableFilter"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue15IsTransformListEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18InterpolableFilter6EqualsERKNS_17InterpolableValueE(%"class.blink::InterpolableFilter"*, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InterpolableFilter5ScaleEd(%"class.blink::InterpolableFilter"*, double) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolableValue11ScaleAndAddEdRKS0_(%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::InterpolableValue"* %0 to void (%"class.blink::InterpolableValue"*, double)***
  %5 = load void (%"class.blink::InterpolableValue"*, double)**, void (%"class.blink::InterpolableValue"*, double)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %5, i64 12
  %7 = load void (%"class.blink::InterpolableValue"*, double)*, void (%"class.blink::InterpolableValue"*, double)** %6, align 8
  tail call void %7(%"class.blink::InterpolableValue"* %0, double %1) #6
  %8 = bitcast %"class.blink::InterpolableValue"* %0 to void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)***
  %9 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %9, i64 13
  %11 = load void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %10, align 8
  tail call void %11(%"class.blink::InterpolableValue"* %0, %"class.blink::InterpolableValue"* dereferenceable(8) %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableFilter"* @_ZNK5blink18InterpolableFilter8RawCloneEv(%"class.blink::InterpolableFilter"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #6
  %3 = bitcast i8* %2 to %"class.blink::InterpolableFilter"*
  %4 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %7 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %7, i64 16
  %9 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %8, align 8
  %10 = tail call %"class.blink::InterpolableValue"* %9(%"class.blink::InterpolableValue"* %5) #6
  %11 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = ptrtoint %"class.blink::InterpolableValue"* %10 to i64
  %14 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %12, i32* %18, align 8
  ret %"class.blink::InterpolableFilter"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableFilter"* @_ZNK5blink18InterpolableFilter15RawCloneAndZeroEv(%"class.blink::InterpolableFilter"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #6
  %3 = bitcast i8* %2 to %"class.blink::InterpolableFilter"*
  %4 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = bitcast %"class.blink::InterpolableValue"* %5 to %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)***
  %7 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %7, i64 17
  %9 = load %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::InterpolableValue"*)** %8, align 8
  %10 = tail call %"class.blink::InterpolableValue"* %9(%"class.blink::InterpolableValue"* %5) #6
  %11 = getelementptr inbounds %"class.blink::InterpolableFilter", %"class.blink::InterpolableFilter"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = ptrtoint %"class.blink::InterpolableValue"* %10 to i64
  %14 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %12, i32* %18, align 8
  ret %"class.blink::InterpolableFilter"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.210"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.210", %"class.WTF::Vector.210"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.227"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.227"*)) #6
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #6
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #6
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #6
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FilterOperation"*
  %4 = bitcast i8* %1 to void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)**, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FilterOperation"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FilterOperation"*
  %3 = bitcast i8* %0 to void (%"class.blink::FilterOperation"*)***
  %4 = load void (%"class.blink::FilterOperation"*)**, void (%"class.blink::FilterOperation"*)*** %3, align 8
  %5 = load void (%"class.blink::FilterOperation"*)*, void (%"class.blink::FilterOperation"*)** %4, align 8
  tail call void %5(%"class.blink::FilterOperation"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.227"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink31BasicColorMatrixFilterOperationD0Ev(%"class.blink::BasicColorMatrixFilterOperation"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE(%"class.blink::FilterOperation"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE(%"class.blink::BasicColorMatrixFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::BasicColorMatrixFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::BasicColorMatrixFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #6
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BasicColorMatrixFilterOperation", %"class.blink::BasicColorMatrixFilterOperation"* %0, i64 0, i32 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %13 = bitcast %"class.blink::FilterOperation"* %12 to double*
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %11, %14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ %15, %9 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation10IsSameTypeERKS0_(%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation14AffectsOpacityEv(%"class.blink::FilterOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation11MovesPixelsEv(%"class.blink::FilterOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE(%"class.blink::FilterOperation"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FilterOperationD2Ev(%"class.blink::FilterOperation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink37BasicComponentTransferFilterOperationD0Ev(%"class.blink::BasicComponentTransferFilterOperation"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink37BasicComponentTransferFilterOperationeqERKNS_15FilterOperationE(%"class.blink::BasicComponentTransferFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::BasicComponentTransferFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::BasicComponentTransferFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #6
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BasicComponentTransferFilterOperation", %"class.blink::BasicComponentTransferFilterOperation"* %0, i64 0, i32 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %13 = bitcast %"class.blink::FilterOperation"* %12 to double*
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %11, %14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ %15, %9 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink37BasicComponentTransferFilterOperation14AffectsOpacityEv(%"class.blink::BasicComponentTransferFilterOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BasicComponentTransferFilterOperation", %"class.blink::BasicComponentTransferFilterOperation"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 7
  ret i1 %4
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
