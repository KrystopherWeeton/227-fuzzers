; ModuleID = '../../third_party/opus/src/celt/laplace.c'
source_filename = "../../third_party/opus/src/celt/laplace.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [31 x i8] c"assertion failed: fl+fs<=32768\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../third_party/opus/src/celt/laplace.c\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"assertion failed: fs>0\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"assertion failed: fl<32768\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"assertion failed: fl<=fm\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"assertion failed: fm<IMIN(fl+fs,32768)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @ec_laplace_encode(%struct.ec_ctx*, i32* nocapture, i32, i32) local_unnamed_addr #0 {
  %5 = load i32, i32* %1, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %70, label %7

7:                                                ; preds = %4
  %8 = ashr i32 %5, 31
  %9 = add nsw i32 %8, %5
  %10 = xor i32 %9, %8
  %11 = sub i32 32736, %2
  %12 = sub nsw i32 16384, %3
  %13 = mul i32 %12, %11
  %14 = lshr i32 %13, 15
  %15 = icmp eq i32 %14, 0
  %16 = icmp sgt i32 %10, 1
  %17 = xor i1 %15, true
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %7, %19
  %20 = phi i32 [ %28, %19 ], [ %14, %7 ]
  %21 = phi i32 [ %27, %19 ], [ 1, %7 ]
  %22 = phi i32 [ %25, %19 ], [ %2, %7 ]
  %23 = shl nuw nsw i32 %20, 1
  %24 = add i32 %22, 2
  %25 = add i32 %24, %23
  %26 = mul i32 %23, %3
  %27 = add nuw nsw i32 %21, 1
  %28 = lshr i32 %26, 15
  %29 = icmp eq i32 %28, 0
  %30 = icmp sgt i32 %10, %27
  %31 = xor i1 %29, true
  %32 = and i1 %30, %31
  br i1 %32, label %19, label %33

33:                                               ; preds = %19, %7
  %34 = phi i32 [ %2, %7 ], [ %25, %19 ]
  %35 = phi i32 [ 1, %7 ], [ %27, %19 ]
  %36 = phi i32 [ %14, %7 ], [ %28, %19 ]
  %37 = phi i1 [ %15, %7 ], [ %29, %19 ]
  br i1 %37, label %38, label %56

38:                                               ; preds = %33
  %39 = lshr i32 %5, 31
  %40 = or i32 %39, 32768
  %41 = sub i32 %40, %34
  %42 = ashr i32 %41, 1
  %43 = sub nsw i32 %10, %35
  %44 = add nsw i32 %42, -1
  %45 = icmp slt i32 %43, %44
  %46 = select i1 %45, i32 %43, i32 %44
  %47 = shl nsw i32 %46, 1
  %48 = or i32 %47, 1
  %49 = add i32 %34, %8
  %50 = add i32 %49, %48
  %51 = icmp ne i32 %50, 32768
  %52 = zext i1 %51 to i32
  %53 = add i32 %35, %8
  %54 = add i32 %53, %46
  %55 = xor i32 %54, %8
  store i32 %55, i32* %1, align 4
  br label %61

56:                                               ; preds = %33
  %57 = add nuw nsw i32 %36, 1
  %58 = xor i32 %8, -1
  %59 = and i32 %57, %58
  %60 = add i32 %59, %34
  br label %61

61:                                               ; preds = %56, %38
  %62 = phi i32 [ %57, %56 ], [ %52, %38 ]
  %63 = phi i32 [ %60, %56 ], [ %50, %38 ]
  %64 = add i32 %63, %62
  %65 = icmp ult i32 %64, 32769
  br i1 %65, label %67, label %66

66:                                               ; preds = %61
  tail call void @celt_fatal(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 88) #3
  unreachable

67:                                               ; preds = %61
  %68 = icmp eq i32 %62, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @celt_fatal(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 89) #3
  unreachable

70:                                               ; preds = %4, %67
  %71 = phi i32 [ %62, %67 ], [ %2, %4 ]
  %72 = phi i32 [ %63, %67 ], [ 0, %4 ]
  %73 = add i32 %72, %71
  tail call void @ec_encode_bin(%struct.ec_ctx* %0, i32 %72, i32 %73, i32 15) #4
  ret void
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #1

declare void @ec_encode_bin(%struct.ec_ctx*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ec_laplace_decode(%struct.ec_ctx*, i32, i32) local_unnamed_addr #0 {
  %4 = tail call i32 @ec_decode_bin(%struct.ec_ctx* %0, i32 15) #4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %48, label %6

6:                                                ; preds = %3
  %7 = sub i32 32736, %1
  %8 = sub nsw i32 16384, %2
  %9 = mul i32 %8, %7
  %10 = lshr i32 %9, 15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %6, %20
  %13 = phi i32 [ %24, %20 ], [ %10, %6 ]
  %14 = phi i32 [ %18, %20 ], [ %1, %6 ]
  %15 = phi i32 [ %23, %20 ], [ 1, %6 ]
  %16 = add nuw nsw i32 %13, 1
  %17 = shl nuw nsw i32 %16, 1
  %18 = add i32 %17, %14
  %19 = icmp ult i32 %4, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %12
  %21 = add nsw i32 %17, -2
  %22 = mul i32 %21, %2
  %23 = add nuw nsw i32 %15, 1
  %24 = lshr i32 %22, 15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %12

26:                                               ; preds = %20, %6
  %27 = phi i32 [ 1, %6 ], [ %23, %20 ]
  %28 = phi i32 [ %1, %6 ], [ %18, %20 ]
  %29 = sub i32 %4, %28
  %30 = lshr i32 %29, 1
  %31 = add nuw nsw i32 %30, %27
  %32 = and i32 %29, -2
  %33 = add i32 %32, %28
  br label %34

34:                                               ; preds = %12, %26
  %35 = phi i32 [ 1, %26 ], [ %16, %12 ]
  %36 = phi i32 [ %31, %26 ], [ %15, %12 ]
  %37 = phi i32 [ %33, %26 ], [ %14, %12 ]
  %38 = add i32 %37, %35
  %39 = icmp ult i32 %4, %38
  %40 = select i1 %39, i32 %37, i32 %38
  %41 = icmp ult i32 %40, 32768
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  tail call void @celt_fatal(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 128) #3
  unreachable

43:                                               ; preds = %34
  %44 = sub nsw i32 0, %36
  %45 = select i1 %39, i32 %44, i32 %36
  %46 = icmp ugt i32 %40, %4
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void @celt_fatal(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 130) #3
  unreachable

48:                                               ; preds = %3, %43
  %49 = phi i32 [ %45, %43 ], [ 0, %3 ]
  %50 = phi i32 [ %40, %43 ], [ 0, %3 ]
  %51 = phi i32 [ %35, %43 ], [ %1, %3 ]
  %52 = add i32 %51, %50
  %53 = icmp ult i32 %52, 32768
  %54 = select i1 %53, i32 %52, i32 32768
  %55 = icmp ult i32 %4, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %48
  tail call void @celt_fatal(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 131) #3
  unreachable

57:                                               ; preds = %48
  tail call void @ec_dec_update(%struct.ec_ctx* %0, i32 %50, i32 %54, i32 32768) #4
  ret i32 %49
}

declare i32 @ec_decode_bin(%struct.ec_ctx*, i32) local_unnamed_addr #2

declare void @ec_dec_update(%struct.ec_ctx*, i32, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
