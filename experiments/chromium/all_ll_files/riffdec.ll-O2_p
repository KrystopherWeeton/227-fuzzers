; ModuleID = '../../third_party/ffmpeg/libavformat/riffdec.c'
source_filename = "../../third_party/ffmpeg/libavformat/riffdec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVCodecTag = type { i32, i32 }
%struct.AVCodecGuid = type { i32, [16 x i8] }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [21 x i8] c"wav header size < 14\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"WAVEFORMATEX support for RIFX files\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Invalid sample rate: %d\0A\00", align 1
@ff_codec_wav_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.3 = private unnamed_addr constant [25 x i8] c"INFO subchunk truncated\0A\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"too big INFO subchunk\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"truncated file\0A\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"out of memory, unable to read INFO tag\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"premature end of file while reading INFO tag\0A\00", align 1
@ff_codec_wav_guids = external constant [0 x %struct.AVCodecGuid], align 4
@.str.8 = private unnamed_addr constant [155 x i8] c"unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_get_guid(%struct.AVIOContext*, [16 x i8]*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %4 = tail call i32 @avio_read(%struct.AVIOContext* %0, i8* %3, i32 16) #5
  %5 = icmp slt i32 %4, 16
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 16, i1 false)
  %7 = icmp slt i32 %4, 0
  %8 = select i1 %7, i32 %4, i32 -1094995529
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %2 ]
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @ff_codec_guid_get_id(%struct.AVCodecGuid* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.AVCodecGuid, %struct.AVCodecGuid* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.AVCodecGuid, %struct.AVCodecGuid* %0, i64 0, i32 1, i64 0
  %8 = tail call i32 @bcmp(i8* %7, i8* %1, i64 16)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6, %15
  %11 = phi i64 [ %19, %15 ], [ 1, %6 ]
  %12 = getelementptr inbounds %struct.AVCodecGuid, %struct.AVCodecGuid* %0, i64 %11, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.AVCodecGuid, %struct.AVCodecGuid* %0, i64 %11, i32 1, i64 0
  %17 = tail call i32 @bcmp(i8* %16, i8* %1, i64 16)
  %18 = icmp eq i32 %17, 0
  %19 = add nuw i64 %11, 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %15, %10, %6, %2
  %21 = phi i32 [ 0, %2 ], [ %4, %6 ], [ 0, %10 ], [ %13, %15 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_get_wav_header(%struct.AVFormatContext*, %struct.AVIOContext*, %struct.AVCodecParameters*, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [16 x i8], align 16
  %7 = alloca [12 x i8], align 1
  %8 = alloca [12 x i8], align 1
  %9 = alloca [12 x i8], align 1
  %10 = icmp slt i32 %3, 14
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i8*, ...) @avpriv_request_sample(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #5
  br label %345

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 0
  store i32 1, i32* %14, align 8
  %15 = icmp ne i32 %4, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @avio_rl16(%struct.AVIOContext* %1) #5
  %18 = icmp eq i32 %17, 357
  br i1 %18, label %41, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @avio_rl16(%struct.AVIOContext* %1) #5
  %21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 22
  store i32 %20, i32* %21, align 8
  %22 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #5
  %23 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 23
  store i32 %22, i32* %23, align 4
  %24 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #5
  %25 = tail call i32 @avio_rl16(%struct.AVIOContext* %1) #5
  br label %34

26:                                               ; preds = %13
  %27 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #5
  %28 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #5
  %29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 22
  store i32 %28, i32* %29, align 8
  %30 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #5
  %31 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 23
  store i32 %30, i32* %31, align 4
  %32 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #5
  %33 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #5
  br label %34

34:                                               ; preds = %26, %19
  %35 = phi i32 [ %25, %19 ], [ %33, %26 ]
  %36 = phi i32 [ %17, %19 ], [ %27, %26 ]
  %37 = phi i32 [ %24, %19 ], [ %32, %26 ]
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 3
  %40 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 24
  store i32 %35, i32* %40, align 8
  br label %41

41:                                               ; preds = %34, %16
  %42 = phi i32 [ 357, %16 ], [ %36, %34 ]
  %43 = phi i64 [ 0, %16 ], [ %39, %34 ]
  %44 = icmp eq i32 %3, 14
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  br i1 %15, label %48, label %46

46:                                               ; preds = %45
  %47 = tail call i32 @avio_rl16(%struct.AVIOContext* %1) #5
  br label %50

48:                                               ; preds = %45
  %49 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #5
  br label %50

50:                                               ; preds = %41, %46, %48
  %51 = phi i32 [ %47, %46 ], [ %49, %48 ], [ 8, %41 ]
  %52 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 7
  store i32 %51, i32* %52, align 8
  %53 = icmp eq i32 %42, 65534
  %54 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 2
  br i1 %53, label %55, label %56

55:                                               ; preds = %50
  store i32 0, i32* %54, align 8
  br label %71

56:                                               ; preds = %50
  store i32 %42, i32* %54, align 8
  %57 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i64 0, i64 0), i32 %42) #5
  switch i32 %57, label %62 [
    i32 0, label %68
    i32 65536, label %58
    i32 65557, label %60
  ]

58:                                               ; preds = %56
  %59 = tail call i32 @ff_get_pcm_codec_id(i32 %51, i32 0, i32 0, i32 -2) #5
  br label %62

60:                                               ; preds = %56
  %61 = tail call i32 @ff_get_pcm_codec_id(i32 %51, i32 1, i32 0, i32 0) #5
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i32 [ %59, %58 ], [ %61, %60 ], [ %57, %56 ]
  %64 = icmp eq i32 %63, 69633
  %65 = icmp eq i32 %51, 8
  %66 = and i1 %65, %64
  %67 = select i1 %66, i32 71693, i32 %63
  br label %68

68:                                               ; preds = %56, %62
  %69 = phi i32 [ %67, %62 ], [ %57, %56 ]
  %70 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 1
  store i32 %69, i32* %70, align 4
  br label %71

71:                                               ; preds = %68, %55
  %72 = icmp sgt i32 %3, 17
  %73 = icmp ne i32 %42, 357
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %244

75:                                               ; preds = %71
  %76 = tail call i32 @avio_rl16(%struct.AVIOContext* %1) #5
  br i1 %15, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %78, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #5
  br label %345

79:                                               ; preds = %75
  %80 = add nsw i32 %3, -18
  %81 = icmp sgt i32 %80, %76
  %82 = select i1 %81, i32 %76, i32 %80
  %83 = icmp sgt i32 %82, 21
  %84 = and i1 %53, %83
  br i1 %84, label %85, label %229

85:                                               ; preds = %79
  %86 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %86)
  %87 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %87)
  %88 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %88)
  %89 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #5
  %90 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 1
  %91 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 2
  %92 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 3
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 4
  %94 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 5
  %95 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 6
  %96 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 7
  %97 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 8
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 9
  %99 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 10
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 11
  %101 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 12
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 13
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 14
  %104 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %89, i8 -86, i64 16, i1 false) #5
  %105 = tail call i32 @avio_rl16(%struct.AVIOContext* %1) #5
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %85
  %108 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 7
  store i32 %105, i32* %108, align 8
  br label %109

109:                                              ; preds = %107, %85
  %110 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #5
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 21
  store i64 %111, i64* %112, align 8
  %113 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %89, i32 16) #5
  %114 = icmp slt i32 %113, 16
  br i1 %114, label %115, label %116

115:                                              ; preds = %109
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %89, i8 0, i64 16, i1 false) #5
  br label %116

116:                                              ; preds = %115, %109
  store i8 33, i8* %86, align 1
  %117 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 1
  store i8 7, i8* %117, align 1
  %118 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 2
  store i8 -45, i8* %118, align 1
  %119 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 3
  store i8 17, i8* %119, align 1
  %120 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 4
  store i8 -122, i8* %120, align 1
  %121 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 5
  store i8 68, i8* %121, align 1
  %122 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 6
  store i8 -56, i8* %122, align 1
  %123 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 7
  store i8 -63, i8* %123, align 1
  %124 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 8
  store i8 -54, i8* %124, align 1
  %125 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 9
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 10
  store i8 0, i8* %126, align 1
  %127 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 11
  store i8 0, i8* %127, align 1
  %128 = call i32 @bcmp(i8* %93, i8* nonnull %86, i64 12) #5
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %153, label %130

130:                                              ; preds = %116
  %131 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %87, i8 0, i64 6, i1 false) #5
  store i8 16, i8* %131, align 1
  %132 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 7
  store i8 0, i8* %132, align 1
  %133 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 8
  store i8 -128, i8* %133, align 1
  %134 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 9
  store i8 0, i8* %134, align 1
  %135 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 10
  store i8 0, i8* %135, align 1
  %136 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 11
  store i8 -86, i8* %136, align 1
  %137 = call i32 @bcmp(i8* %93, i8* nonnull %87, i64 12) #5
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %153, label %139

139:                                              ; preds = %130
  store i8 0, i8* %88, align 1
  %140 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 1
  store i8 0, i8* %140, align 1
  %141 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 2
  store i8 16, i8* %141, align 1
  %142 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 3
  store i8 0, i8* %142, align 1
  %143 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 4
  store i8 -128, i8* %143, align 1
  %144 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 5
  store i8 0, i8* %144, align 1
  %145 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 6
  store i8 0, i8* %145, align 1
  %146 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 7
  store i8 -86, i8* %146, align 1
  %147 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 8
  store i8 0, i8* %147, align 1
  %148 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 9
  store i8 56, i8* %148, align 1
  %149 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 10
  store i8 -101, i8* %149, align 1
  %150 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 11
  store i8 113, i8* %150, align 1
  %151 = call i32 @bcmp(i8* %93, i8* nonnull %88, i64 12) #5
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %172

153:                                              ; preds = %139, %130, %116
  %154 = bitcast [16 x i8]* %6 to i32*
  %155 = load i32, i32* %154, align 16
  store i32 %155, i32* %54, align 8
  %156 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 7
  %157 = load i32, i32* %156, align 8
  %158 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i64 0, i64 0), i32 %155) #5
  switch i32 %158, label %163 [
    i32 0, label %169
    i32 65536, label %159
    i32 65557, label %161
  ]

159:                                              ; preds = %153
  %160 = call i32 @ff_get_pcm_codec_id(i32 %157, i32 0, i32 0, i32 -2) #5
  br label %163

161:                                              ; preds = %153
  %162 = call i32 @ff_get_pcm_codec_id(i32 %157, i32 1, i32 0, i32 0) #5
  br label %163

163:                                              ; preds = %161, %159, %153
  %164 = phi i32 [ %160, %159 ], [ %162, %161 ], [ %158, %153 ]
  %165 = icmp eq i32 %164, 69633
  %166 = icmp eq i32 %157, 8
  %167 = and i1 %166, %165
  %168 = select i1 %167, i32 71693, i32 %164
  br label %169

169:                                              ; preds = %163, %153
  %170 = phi i32 [ %168, %163 ], [ %158, %153 ]
  %171 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 1
  store i32 %170, i32* %171, align 4
  br label %226

172:                                              ; preds = %139
  %173 = load i32, i32* getelementptr inbounds ([0 x %struct.AVCodecGuid], [0 x %struct.AVCodecGuid]* @ff_codec_wav_guids, i64 0, i64 0, i32 0), align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %191, label %175

175:                                              ; preds = %172
  %176 = call i32 @bcmp(i8* getelementptr inbounds ([0 x %struct.AVCodecGuid], [0 x %struct.AVCodecGuid]* @ff_codec_wav_guids, i64 0, i64 0, i32 1, i64 0), i8* nonnull %89, i64 16) #5
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %188, label %178

178:                                              ; preds = %175, %183
  %179 = phi i64 [ %187, %183 ], [ 1, %175 ]
  %180 = getelementptr inbounds [0 x %struct.AVCodecGuid], [0 x %struct.AVCodecGuid]* @ff_codec_wav_guids, i64 0, i64 %179, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds [0 x %struct.AVCodecGuid], [0 x %struct.AVCodecGuid]* @ff_codec_wav_guids, i64 0, i64 %179, i32 1, i64 0
  %185 = call i32 @bcmp(i8* %184, i8* nonnull %89, i64 16) #5
  %186 = icmp eq i32 %185, 0
  %187 = add nuw i64 %179, 1
  br i1 %186, label %188, label %178

188:                                              ; preds = %183, %175
  %189 = phi i32 [ %173, %175 ], [ %181, %183 ]
  %190 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 1
  store i32 %189, i32* %190, align 4
  br label %226

191:                                              ; preds = %178, %172
  %192 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 1
  store i32 0, i32* %192, align 4
  %193 = bitcast %struct.AVFormatContext* %0 to i8*
  %194 = load i8, i8* %89, align 16
  %195 = zext i8 %194 to i32
  %196 = load i8, i8* %90, align 1
  %197 = zext i8 %196 to i32
  %198 = load i8, i8* %91, align 2
  %199 = zext i8 %198 to i32
  %200 = load i8, i8* %92, align 1
  %201 = zext i8 %200 to i32
  %202 = load i8, i8* %93, align 4
  %203 = zext i8 %202 to i32
  %204 = load i8, i8* %94, align 1
  %205 = zext i8 %204 to i32
  %206 = load i8, i8* %95, align 2
  %207 = zext i8 %206 to i32
  %208 = load i8, i8* %96, align 1
  %209 = zext i8 %208 to i32
  %210 = load i8, i8* %97, align 8
  %211 = zext i8 %210 to i32
  %212 = load i8, i8* %98, align 1
  %213 = zext i8 %212 to i32
  %214 = load i8, i8* %99, align 2
  %215 = zext i8 %214 to i32
  %216 = load i8, i8* %100, align 1
  %217 = zext i8 %216 to i32
  %218 = load i8, i8* %101, align 4
  %219 = zext i8 %218 to i32
  %220 = load i8, i8* %102, align 1
  %221 = zext i8 %220 to i32
  %222 = load i8, i8* %103, align 2
  %223 = zext i8 %222 to i32
  %224 = load i8, i8* %104, align 1
  %225 = zext i8 %224 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %193, i32 24, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.8, i64 0, i64 0), i32 %195, i32 %197, i32 %199, i32 %201, i32 %203, i32 %205, i32 %207, i32 %209, i32 %211, i32 %213, i32 %215, i32 %217, i32 %219, i32 %221, i32 %223, i32 %225, i32 %201, i32 %199, i32 %197, i32 %195, i32 %205, i32 %203, i32 %209, i32 %207, i32 %211, i32 %213, i32 %215, i32 %217, i32 %219, i32 %221, i32 %223, i32 %225) #5
  br label %226

226:                                              ; preds = %169, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %86)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %87)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %88)
  %227 = add nsw i32 %82, -22
  %228 = add nsw i32 %3, -40
  br label %229

229:                                              ; preds = %226, %79
  %230 = phi i32 [ %228, %226 ], [ %80, %79 ]
  %231 = phi i32 [ %227, %226 ], [ %82, %79 ]
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %233, label %238

233:                                              ; preds = %229
  %234 = call i32 @ff_get_extradata(%struct.AVFormatContext* %0, %struct.AVCodecParameters* %2, %struct.AVIOContext* %1, i32 %231) #5
  %235 = icmp slt i32 %234, 0
  br i1 %235, label %345, label %236

236:                                              ; preds = %233
  %237 = sub nsw i32 %230, %231
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %230, %229 ]
  %240 = icmp sgt i32 %239, 0
  br i1 %240, label %241, label %327

241:                                              ; preds = %238
  %242 = sext i32 %239 to i64
  %243 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %242) #5
  br label %327

244:                                              ; preds = %71
  %245 = icmp eq i32 %42, 357
  %246 = icmp sgt i32 %3, 31
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %327

248:                                              ; preds = %244
  %249 = add nsw i32 %3, -4
  %250 = tail call i32 @ff_get_extradata(%struct.AVFormatContext* %0, %struct.AVCodecParameters* %2, %struct.AVIOContext* %1, i32 %249) #5
  %251 = icmp slt i32 %250, 0
  br i1 %251, label %345, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 3
  %254 = load i8*, i8** %253, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 4
  %256 = bitcast i8* %255 to i16*
  %257 = load i16, i16* %256, align 1
  %258 = zext i16 %257 to i32
  %259 = getelementptr inbounds i8, i8* %254, i64 12
  %260 = bitcast i8* %259 to i32*
  %261 = load i32, i32* %260, align 1
  %262 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 23
  store i32 %261, i32* %262, align 4
  %263 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 22
  store i32 0, i32* %263, align 8
  %264 = mul nuw nsw i32 %258, 20
  %265 = add nuw nsw i32 %264, 8
  %266 = icmp slt i32 %249, %265
  br i1 %266, label %345, label %267

267:                                              ; preds = %252
  %268 = icmp eq i16 %257, 0
  br i1 %268, label %327, label %269

269:                                              ; preds = %267
  %270 = zext i16 %257 to i64
  %271 = add nsw i64 %270, -1
  %272 = and i64 %270, 3
  %273 = icmp ult i64 %271, 3
  br i1 %273, label %310, label %274

274:                                              ; preds = %269
  %275 = sub nsw i64 %270, %272
  br label %276

276:                                              ; preds = %276, %274
  %277 = phi i32 [ 0, %274 ], [ %306, %276 ]
  %278 = phi i64 [ 0, %274 ], [ %307, %276 ]
  %279 = phi i64 [ %275, %274 ], [ %308, %276 ]
  %280 = mul nuw nsw i64 %278, 20
  %281 = add nuw nsw i64 %280, 25
  %282 = getelementptr inbounds i8, i8* %254, i64 %281
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = add nuw nsw i32 %277, %284
  store i32 %285, i32* %263, align 8
  %286 = or i64 %278, 1
  %287 = mul nuw nsw i64 %286, 20
  %288 = add nuw nsw i64 %287, 25
  %289 = getelementptr inbounds i8, i8* %254, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = add nuw nsw i32 %285, %291
  store i32 %292, i32* %263, align 8
  %293 = or i64 %278, 2
  %294 = mul nuw nsw i64 %293, 20
  %295 = add nuw nsw i64 %294, 25
  %296 = getelementptr inbounds i8, i8* %254, i64 %295
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i32
  %299 = add nuw nsw i32 %292, %298
  store i32 %299, i32* %263, align 8
  %300 = or i64 %278, 3
  %301 = mul nuw nsw i64 %300, 20
  %302 = add nuw nsw i64 %301, 25
  %303 = getelementptr inbounds i8, i8* %254, i64 %302
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = add nuw nsw i32 %299, %305
  store i32 %306, i32* %263, align 8
  %307 = add nuw nsw i64 %278, 4
  %308 = add i64 %279, -4
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %276

310:                                              ; preds = %276, %269
  %311 = phi i32 [ 0, %269 ], [ %306, %276 ]
  %312 = phi i64 [ 0, %269 ], [ %307, %276 ]
  %313 = icmp eq i64 %272, 0
  br i1 %313, label %327, label %314

314:                                              ; preds = %310, %314
  %315 = phi i32 [ %323, %314 ], [ %311, %310 ]
  %316 = phi i64 [ %324, %314 ], [ %312, %310 ]
  %317 = phi i64 [ %325, %314 ], [ %272, %310 ]
  %318 = mul nuw nsw i64 %316, 20
  %319 = add nuw nsw i64 %318, 25
  %320 = getelementptr inbounds i8, i8* %254, i64 %319
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = add nuw nsw i32 %315, %322
  store i32 %323, i32* %263, align 8
  %324 = add nuw nsw i64 %316, 1
  %325 = add i64 %317, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %314, !llvm.loop !2

327:                                              ; preds = %310, %314, %267, %238, %241, %244
  %328 = phi i64 [ %43, %244 ], [ %43, %241 ], [ %43, %238 ], [ 0, %267 ], [ 0, %314 ], [ 0, %310 ]
  %329 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 6
  store i64 %328, i64* %329, align 8
  %330 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 23
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %331, 1
  br i1 %332, label %333, label %335

333:                                              ; preds = %327
  %334 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %334, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i32 %331) #5
  br label %345

335:                                              ; preds = %327
  %336 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 1
  %337 = load i32, i32* %336, align 4
  switch i32 %337, label %345 [
    i32 86065, label %338
    i32 69643, label %340
  ]

338:                                              ; preds = %335
  %339 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 22
  store i32 0, i32* %339, align 8
  store i32 0, i32* %330, align 4
  br label %345

340:                                              ; preds = %335
  %341 = sext i32 %331 to i64
  %342 = sdiv i64 %328, %341
  %343 = trunc i64 %342 to i32
  %344 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i64 0, i32 7
  store i32 %343, i32* %344, align 8
  br label %345

345:                                              ; preds = %335, %252, %248, %338, %77, %233, %340, %333, %11
  %346 = phi i32 [ -1094995529, %11 ], [ -1094995529, %333 ], [ 0, %340 ], [ -1163346256, %77 ], [ -12, %233 ], [ 0, %338 ], [ -1094995529, %252 ], [ -12, %248 ], [ 0, %335 ]
  ret i32 %346
}

declare void @avpriv_request_sample(i8*, i8*, ...) local_unnamed_addr #2

declare i32 @avio_rl16(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @avio_rl32(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @avio_rb16(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @avio_rb32(%struct.AVIOContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_wav_codec_get_id(i32, i32) local_unnamed_addr #0 {
  %3 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i64 0, i64 0), i32 %0) #5
  switch i32 %3, label %8 [
    i32 0, label %14
    i32 65536, label %4
    i32 65557, label %6
  ]

4:                                                ; preds = %2
  %5 = tail call i32 @ff_get_pcm_codec_id(i32 %1, i32 0, i32 0, i32 -2) #5
  br label %8

6:                                                ; preds = %2
  %7 = tail call i32 @ff_get_pcm_codec_id(i32 %1, i32 1, i32 0, i32 0) #5
  br label %8

8:                                                ; preds = %2, %6, %4
  %9 = phi i32 [ %5, %4 ], [ %7, %6 ], [ %3, %2 ]
  %10 = icmp eq i32 %9, 69633
  %11 = icmp eq i32 %1, 8
  %12 = and i1 %11, %10
  %13 = select i1 %12, i32 71693, i32 %9
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ %3, %2 ]
  ret i32 %15
}

declare void @avpriv_report_missing_feature(i8*, i8*, ...) local_unnamed_addr #2

declare i32 @ff_get_extradata(%struct.AVFormatContext*, %struct.AVCodecParameters*, %struct.AVIOContext*, i32) local_unnamed_addr #2

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #2

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

declare i32 @ff_codec_get_id(%struct.AVCodecTag*, i32) local_unnamed_addr #2

declare i32 @ff_get_pcm_codec_id(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_get_bmp_header(%struct.AVIOContext*, %struct.AVStream* nocapture readonly, i32*) local_unnamed_addr #0 {
  %4 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %5 = icmp eq i32* %2, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 %4, i32* %2, align 4
  br label %7

7:                                                ; preds = %3, %6
  %8 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %9 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 19
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %9, align 8
  %11 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i64 0, i32 11
  store i32 %8, i32* %11, align 8
  %12 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %9, align 8
  %14 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i64 0, i32 12
  store i32 %12, i32* %14, align 4
  %15 = tail call i32 @avio_rl16(%struct.AVIOContext* %0) #5
  %16 = tail call i32 @avio_rl16(%struct.AVIOContext* %0) #5
  %17 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %9, align 8
  %18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %17, i64 0, i32 7
  store i32 %16, i32* %18, align 8
  %19 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %20 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %21 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %22 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %23 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  %24 = tail call i32 @avio_rl32(%struct.AVIOContext* %0) #5
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_read_riff_info(%struct.AVFormatContext*, i64) local_unnamed_addr #0 {
  %3 = alloca [5 x i8], align 4
  %4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %4, align 8
  %6 = tail call i64 @avio_seek(%struct.AVIOContext* %5, i64 0, i32 1) #5
  %7 = add nsw i64 %6, %1
  %8 = call i64 @avio_seek(%struct.AVIOContext* %5, i64 0, i32 1) #5
  %9 = icmp slt i64 %8, 0
  %10 = add nsw i64 %7, -8
  %11 = icmp sgt i64 %8, %10
  %12 = or i1 %9, %11
  br i1 %12, label %84, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  %15 = bitcast [5 x i8]* %3 to i32*
  %16 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4
  %17 = bitcast %struct.AVFormatContext* %0 to i8*
  %18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %19 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %5, i64 0, i32 10
  br label %20

20:                                               ; preds = %13, %79
  %21 = phi i64 [ %8, %13 ], [ %80, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 5, i1 false)
  %22 = call i32 @avio_rl32(%struct.AVIOContext* %5) #5
  %23 = call i32 @avio_rl32(%struct.AVIOContext* %5) #5
  %24 = zext i32 %23 to i64
  %25 = call i32 @avio_feof(%struct.AVIOContext* %5) #5
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = or i32 %23, %22
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %77, label %30

30:                                               ; preds = %27
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #5
  br label %77

31:                                               ; preds = %20
  %32 = icmp slt i64 %7, %24
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = sub nsw i64 %7, %24
  %35 = icmp slt i64 %34, %21
  %36 = icmp eq i32 %23, -1
  %37 = or i1 %36, %35
  br i1 %37, label %38, label %50

38:                                               ; preds = %33, %31
  %39 = call i64 @avio_seek(%struct.AVIOContext* %5, i64 -9, i32 1) #5
  %40 = call i32 @avio_rl32(%struct.AVIOContext* %5) #5
  %41 = call i32 @avio_rl32(%struct.AVIOContext* %5) #5
  %42 = zext i32 %41 to i64
  %43 = icmp slt i64 %7, %42
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = sub nsw i64 %7, %42
  %46 = icmp slt i64 %45, %21
  %47 = icmp eq i32 %41, -1
  %48 = or i1 %47, %46
  br i1 %48, label %49, label %50

49:                                               ; preds = %44, %38
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %77

50:                                               ; preds = %44, %33
  %51 = phi i32 [ %40, %44 ], [ %22, %33 ]
  %52 = phi i64 [ %42, %44 ], [ %24, %33 ]
  %53 = and i64 %52, 1
  %54 = add nuw nsw i64 %53, %52
  %55 = icmp eq i32 %51, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %50
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = call i64 @avio_skip(%struct.AVIOContext* %5, i64 %54) #5
  br label %79

60:                                               ; preds = %56
  %61 = load i32, i32* %19, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %60
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %77

64:                                               ; preds = %50
  %65 = add nuw nsw i64 %54, 1
  %66 = call noalias i8* @av_mallocz(i64 %65) #5
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #5
  br label %77

69:                                               ; preds = %64
  store i32 %51, i32* %15, align 4
  store i8 0, i8* %16, align 4
  %70 = trunc i64 %54 to i32
  %71 = call i32 @avio_read(%struct.AVIOContext* %5, i8* nonnull %66, i32 %70) #5
  %72 = sext i32 %71 to i64
  %73 = icmp eq i64 %54, %72
  br i1 %73, label %75, label %74

74:                                               ; preds = %69
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0)) #5
  br label %75

75:                                               ; preds = %69, %74
  %76 = call i32 @av_dict_set(%struct.AVDictionary** %18, i8* nonnull %14, i8* nonnull %66, i32 8) #5
  br label %79

77:                                               ; preds = %30, %49, %68, %63, %27
  %78 = phi i32 [ -541478725, %27 ], [ -541478725, %63 ], [ -12, %68 ], [ -1094995529, %49 ], [ -1094995529, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %14) #5
  br label %84

79:                                               ; preds = %58, %60, %75
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %14) #5
  %80 = call i64 @avio_seek(%struct.AVIOContext* %5, i64 0, i32 1) #5
  %81 = icmp slt i64 %80, 0
  %82 = icmp sgt i64 %80, %10
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %20

84:                                               ; preds = %79, %2, %77
  %85 = phi i32 [ %78, %77 ], [ 0, %2 ], [ 0, %79 ]
  ret i32 %85
}

declare i32 @avio_feof(%struct.AVIOContext*) local_unnamed_addr #2

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #2

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
