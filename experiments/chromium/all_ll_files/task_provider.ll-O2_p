; ModuleID = '../../chrome/browser/task_manager/providers/task_provider.cc'
source_filename = "../../chrome/browser/task_manager/providers/task_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.task_manager::TaskProvider" = type { i32 (...)**, %"class.task_manager::TaskProviderObserver"* }
%"class.task_manager::TaskProviderObserver" = type { i32 (...)** }
%"class.task_manager::Task" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::basic_string", %"class.gfx::ImageSkia", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque

@_ZTVN12task_manager12TaskProviderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.task_manager::TaskProvider"*)* @_ZN12task_manager12TaskProviderD2Ev to i8*), i8* bitcast (void (%"class.task_manager::TaskProvider"*)* @_ZN12task_manager12TaskProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN12task_manager12TaskProviderD1Ev = hidden unnamed_addr alias void (%"class.task_manager::TaskProvider"*), void (%"class.task_manager::TaskProvider"*)* @_ZN12task_manager12TaskProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12task_manager12TaskProviderC2Ev(%"class.task_manager::TaskProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12task_manager12TaskProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  store %"class.task_manager::TaskProviderObserver"* null, %"class.task_manager::TaskProviderObserver"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12task_manager12TaskProviderD2Ev(%"class.task_manager::TaskProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12task_manager12TaskProviderD0Ev(%"class.task_manager::TaskProvider"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager12TaskProvider11SetObserverEPNS_20TaskProviderObserverE(%"class.task_manager::TaskProvider"*, %"class.task_manager::TaskProviderObserver"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  store %"class.task_manager::TaskProviderObserver"* %1, %"class.task_manager::TaskProviderObserver"** %3, align 8
  %4 = bitcast %"class.task_manager::TaskProvider"* %0 to void (%"class.task_manager::TaskProvider"*)***
  %5 = load void (%"class.task_manager::TaskProvider"*)**, void (%"class.task_manager::TaskProvider"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.task_manager::TaskProvider"*)*, void (%"class.task_manager::TaskProvider"*)** %5, i64 3
  %7 = load void (%"class.task_manager::TaskProvider"*)*, void (%"class.task_manager::TaskProvider"*)** %6, align 8
  tail call void %7(%"class.task_manager::TaskProvider"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager12TaskProvider13ClearObserverEv(%"class.task_manager::TaskProvider"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  store %"class.task_manager::TaskProviderObserver"* null, %"class.task_manager::TaskProviderObserver"** %2, align 8
  %3 = bitcast %"class.task_manager::TaskProvider"* %0 to void (%"class.task_manager::TaskProvider"*)***
  %4 = load void (%"class.task_manager::TaskProvider"*)**, void (%"class.task_manager::TaskProvider"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.task_manager::TaskProvider"*)*, void (%"class.task_manager::TaskProvider"*)** %4, i64 4
  %6 = load void (%"class.task_manager::TaskProvider"*)*, void (%"class.task_manager::TaskProvider"*)** %5, align 8
  tail call void %6(%"class.task_manager::TaskProvider"* %0) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager12TaskProvider10IsUpdatingEv(%"class.task_manager::TaskProvider"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  %3 = load %"class.task_manager::TaskProviderObserver"*, %"class.task_manager::TaskProviderObserver"** %2, align 8
  %4 = icmp ne %"class.task_manager::TaskProviderObserver"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12task_manager12TaskProvider23NotifyObserverTaskAddedEPNS_4TaskE(%"class.task_manager::TaskProvider"* nocapture readonly, %"class.task_manager::Task"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  %4 = load %"class.task_manager::TaskProviderObserver"*, %"class.task_manager::TaskProviderObserver"** %3, align 8
  %5 = bitcast %"class.task_manager::TaskProviderObserver"* %4 to void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)***
  %6 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)**, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %6, i64 2
  %8 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %7, align 8
  tail call void %8(%"class.task_manager::TaskProviderObserver"* %4, %"class.task_manager::Task"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12task_manager12TaskProvider25NotifyObserverTaskRemovedEPNS_4TaskE(%"class.task_manager::TaskProvider"* nocapture readonly, %"class.task_manager::Task"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  %4 = load %"class.task_manager::TaskProviderObserver"*, %"class.task_manager::TaskProviderObserver"** %3, align 8
  %5 = bitcast %"class.task_manager::TaskProviderObserver"* %4 to void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)***
  %6 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)**, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %6, i64 3
  %8 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %7, align 8
  tail call void %8(%"class.task_manager::TaskProviderObserver"* %4, %"class.task_manager::Task"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12task_manager12TaskProvider30NotifyObserverTaskUnresponsiveEPNS_4TaskE(%"class.task_manager::TaskProvider"* nocapture readonly, %"class.task_manager::Task"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  %4 = load %"class.task_manager::TaskProviderObserver"*, %"class.task_manager::TaskProviderObserver"** %3, align 8
  %5 = bitcast %"class.task_manager::TaskProviderObserver"* %4 to void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)***
  %6 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)**, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %6, i64 4
  %8 = load void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)*, void (%"class.task_manager::TaskProviderObserver"*, %"class.task_manager::Task"*)** %7, align 8
  tail call void %8(%"class.task_manager::TaskProviderObserver"* %4, %"class.task_manager::Task"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12task_manager12TaskProvider38UpdateTaskProcessInfoAndNotifyObserverEPNS_4TaskEii(%"class.task_manager::TaskProvider"* nocapture readonly, %"class.task_manager::Task"*, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.task_manager::TaskProvider", %"class.task_manager::TaskProvider"* %0, i64 0, i32 1
  %6 = load %"class.task_manager::TaskProviderObserver"*, %"class.task_manager::TaskProviderObserver"** %5, align 8
  tail call void @_ZN12task_manager4Task17UpdateProcessInfoEiiPNS_20TaskProviderObserverE(%"class.task_manager::Task"* %1, i32 %2, i32 %3, %"class.task_manager::TaskProviderObserver"* %6) #8
  ret void
}

declare void @_ZN12task_manager4Task17UpdateProcessInfoEiiPNS_20TaskProviderObserverE(%"class.task_manager::Task"*, i32, i32, %"class.task_manager::TaskProviderObserver"*) local_unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
