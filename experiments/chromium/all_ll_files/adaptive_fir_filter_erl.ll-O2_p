; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/adaptive_fir_filter_erl.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/adaptive_fir_filter_erl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::array" = type { [65 x float] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::array"* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4aec311ErlComputerERKNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEEN3rtc9ArrayViewIfLln4711EEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), float*, i64) local_unnamed_addr #0 {
  %4 = shl i64 %2, 2
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = bitcast float* %1 to i8*
  %8 = icmp slt i64 %2, 1
  %9 = select i1 %8, i64 %2, i64 1
  %10 = shl i64 %9, 2
  %11 = add i64 %10, -4
  %12 = sub i64 %4, %11
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 %12, i1 false)
  br label %13

13:                                               ; preds = %6, %3
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %16, align 8
  %18 = icmp eq %"struct.std::__1::array"* %15, %17
  br i1 %18, label %70, label %19

19:                                               ; preds = %13
  %20 = getelementptr float, float* %1, i64 65
  %21 = bitcast float* %20 to %"struct.std::__1::array"*
  %22 = getelementptr float, float* %1, i64 64
  %23 = bitcast float* %1 to <4 x float>*
  %24 = bitcast float* %1 to <4 x float>*
  %25 = getelementptr float, float* %1, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  %27 = bitcast float* %25 to <4 x float>*
  %28 = getelementptr float, float* %1, i64 8
  %29 = bitcast float* %28 to <4 x float>*
  %30 = bitcast float* %28 to <4 x float>*
  %31 = getelementptr float, float* %1, i64 12
  %32 = bitcast float* %31 to <4 x float>*
  %33 = bitcast float* %31 to <4 x float>*
  %34 = getelementptr float, float* %1, i64 16
  %35 = bitcast float* %34 to <4 x float>*
  %36 = bitcast float* %34 to <4 x float>*
  %37 = getelementptr float, float* %1, i64 20
  %38 = bitcast float* %37 to <4 x float>*
  %39 = bitcast float* %37 to <4 x float>*
  %40 = getelementptr float, float* %1, i64 24
  %41 = bitcast float* %40 to <4 x float>*
  %42 = bitcast float* %40 to <4 x float>*
  %43 = getelementptr float, float* %1, i64 28
  %44 = bitcast float* %43 to <4 x float>*
  %45 = bitcast float* %43 to <4 x float>*
  %46 = getelementptr float, float* %1, i64 32
  %47 = bitcast float* %46 to <4 x float>*
  %48 = bitcast float* %46 to <4 x float>*
  %49 = getelementptr float, float* %1, i64 36
  %50 = bitcast float* %49 to <4 x float>*
  %51 = bitcast float* %49 to <4 x float>*
  %52 = getelementptr float, float* %1, i64 40
  %53 = bitcast float* %52 to <4 x float>*
  %54 = bitcast float* %52 to <4 x float>*
  %55 = getelementptr float, float* %1, i64 44
  %56 = bitcast float* %55 to <4 x float>*
  %57 = bitcast float* %55 to <4 x float>*
  %58 = getelementptr float, float* %1, i64 48
  %59 = bitcast float* %58 to <4 x float>*
  %60 = bitcast float* %58 to <4 x float>*
  %61 = getelementptr float, float* %1, i64 52
  %62 = bitcast float* %61 to <4 x float>*
  %63 = bitcast float* %61 to <4 x float>*
  %64 = getelementptr float, float* %1, i64 56
  %65 = bitcast float* %64 to <4 x float>*
  %66 = bitcast float* %64 to <4 x float>*
  %67 = getelementptr float, float* %1, i64 60
  %68 = bitcast float* %67 to <4 x float>*
  %69 = bitcast float* %67 to <4 x float>*
  br label %71

70:                                               ; preds = %213, %13
  ret void

71:                                               ; preds = %19, %213
  %72 = phi i64 [ 0, %19 ], [ %216, %213 ]
  %73 = phi %"struct.std::__1::array"* [ %15, %19 ], [ %214, %213 ]
  %74 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 %72, i32 0, i64 64
  %75 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 0
  %76 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 65
  %77 = add i64 %72, 1
  %78 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 %72
  %79 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 %77, i32 0, i64 0
  %80 = icmp ugt float* %79, %1
  %81 = icmp ult %"struct.std::__1::array"* %78, %21
  %82 = and i1 %80, %81
  br i1 %82, label %164, label %83

83:                                               ; preds = %71
  %84 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 64
  %85 = bitcast %"struct.std::__1::array"* %73 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 4, !alias.scope !2
  %87 = load <4 x float>, <4 x float>* %23, align 4, !alias.scope !5, !noalias !2
  %88 = fadd <4 x float> %86, %87
  store <4 x float> %88, <4 x float>* %24, align 4, !alias.scope !5, !noalias !2
  %89 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  %91 = load <4 x float>, <4 x float>* %90, align 4, !alias.scope !2
  %92 = load <4 x float>, <4 x float>* %26, align 4, !alias.scope !5, !noalias !2
  %93 = fadd <4 x float> %91, %92
  store <4 x float> %93, <4 x float>* %27, align 4, !alias.scope !5, !noalias !2
  %94 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 8
  %95 = bitcast float* %94 to <4 x float>*
  %96 = load <4 x float>, <4 x float>* %95, align 4, !alias.scope !2
  %97 = load <4 x float>, <4 x float>* %29, align 4, !alias.scope !5, !noalias !2
  %98 = fadd <4 x float> %96, %97
  store <4 x float> %98, <4 x float>* %30, align 4, !alias.scope !5, !noalias !2
  %99 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 12
  %100 = bitcast float* %99 to <4 x float>*
  %101 = load <4 x float>, <4 x float>* %100, align 4, !alias.scope !2
  %102 = load <4 x float>, <4 x float>* %32, align 4, !alias.scope !5, !noalias !2
  %103 = fadd <4 x float> %101, %102
  store <4 x float> %103, <4 x float>* %33, align 4, !alias.scope !5, !noalias !2
  %104 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 16
  %105 = bitcast float* %104 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 4, !alias.scope !2
  %107 = load <4 x float>, <4 x float>* %35, align 4, !alias.scope !5, !noalias !2
  %108 = fadd <4 x float> %106, %107
  store <4 x float> %108, <4 x float>* %36, align 4, !alias.scope !5, !noalias !2
  %109 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 20
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 4, !alias.scope !2
  %112 = load <4 x float>, <4 x float>* %38, align 4, !alias.scope !5, !noalias !2
  %113 = fadd <4 x float> %111, %112
  store <4 x float> %113, <4 x float>* %39, align 4, !alias.scope !5, !noalias !2
  %114 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 24
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 4, !alias.scope !2
  %117 = load <4 x float>, <4 x float>* %41, align 4, !alias.scope !5, !noalias !2
  %118 = fadd <4 x float> %116, %117
  store <4 x float> %118, <4 x float>* %42, align 4, !alias.scope !5, !noalias !2
  %119 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 28
  %120 = bitcast float* %119 to <4 x float>*
  %121 = load <4 x float>, <4 x float>* %120, align 4, !alias.scope !2
  %122 = load <4 x float>, <4 x float>* %44, align 4, !alias.scope !5, !noalias !2
  %123 = fadd <4 x float> %121, %122
  store <4 x float> %123, <4 x float>* %45, align 4, !alias.scope !5, !noalias !2
  %124 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 32
  %125 = bitcast float* %124 to <4 x float>*
  %126 = load <4 x float>, <4 x float>* %125, align 4, !alias.scope !2
  %127 = load <4 x float>, <4 x float>* %47, align 4, !alias.scope !5, !noalias !2
  %128 = fadd <4 x float> %126, %127
  store <4 x float> %128, <4 x float>* %48, align 4, !alias.scope !5, !noalias !2
  %129 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 36
  %130 = bitcast float* %129 to <4 x float>*
  %131 = load <4 x float>, <4 x float>* %130, align 4, !alias.scope !2
  %132 = load <4 x float>, <4 x float>* %50, align 4, !alias.scope !5, !noalias !2
  %133 = fadd <4 x float> %131, %132
  store <4 x float> %133, <4 x float>* %51, align 4, !alias.scope !5, !noalias !2
  %134 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 40
  %135 = bitcast float* %134 to <4 x float>*
  %136 = load <4 x float>, <4 x float>* %135, align 4, !alias.scope !2
  %137 = load <4 x float>, <4 x float>* %53, align 4, !alias.scope !5, !noalias !2
  %138 = fadd <4 x float> %136, %137
  store <4 x float> %138, <4 x float>* %54, align 4, !alias.scope !5, !noalias !2
  %139 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 44
  %140 = bitcast float* %139 to <4 x float>*
  %141 = load <4 x float>, <4 x float>* %140, align 4, !alias.scope !2
  %142 = load <4 x float>, <4 x float>* %56, align 4, !alias.scope !5, !noalias !2
  %143 = fadd <4 x float> %141, %142
  store <4 x float> %143, <4 x float>* %57, align 4, !alias.scope !5, !noalias !2
  %144 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 48
  %145 = bitcast float* %144 to <4 x float>*
  %146 = load <4 x float>, <4 x float>* %145, align 4, !alias.scope !2
  %147 = load <4 x float>, <4 x float>* %59, align 4, !alias.scope !5, !noalias !2
  %148 = fadd <4 x float> %146, %147
  store <4 x float> %148, <4 x float>* %60, align 4, !alias.scope !5, !noalias !2
  %149 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 52
  %150 = bitcast float* %149 to <4 x float>*
  %151 = load <4 x float>, <4 x float>* %150, align 4, !alias.scope !2
  %152 = load <4 x float>, <4 x float>* %62, align 4, !alias.scope !5, !noalias !2
  %153 = fadd <4 x float> %151, %152
  store <4 x float> %153, <4 x float>* %63, align 4, !alias.scope !5, !noalias !2
  %154 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 56
  %155 = bitcast float* %154 to <4 x float>*
  %156 = load <4 x float>, <4 x float>* %155, align 4, !alias.scope !2
  %157 = load <4 x float>, <4 x float>* %65, align 4, !alias.scope !5, !noalias !2
  %158 = fadd <4 x float> %156, %157
  store <4 x float> %158, <4 x float>* %66, align 4, !alias.scope !5, !noalias !2
  %159 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 0, i32 0, i64 60
  %160 = bitcast float* %159 to <4 x float>*
  %161 = load <4 x float>, <4 x float>* %160, align 4, !alias.scope !2
  %162 = load <4 x float>, <4 x float>* %68, align 4, !alias.scope !5, !noalias !2
  %163 = fadd <4 x float> %161, %162
  store <4 x float> %163, <4 x float>* %69, align 4, !alias.scope !5, !noalias !2
  br label %164

164:                                              ; preds = %83, %71
  %165 = phi float* [ %1, %71 ], [ %22, %83 ]
  %166 = phi float* [ %75, %71 ], [ %84, %83 ]
  %167 = ptrtoint float* %166 to i64
  %168 = ptrtoint float* %74 to i64
  %169 = sub i64 %168, %167
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 3
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %164, %174
  %175 = phi float* [ %182, %174 ], [ %165, %164 ]
  %176 = phi float* [ %181, %174 ], [ %166, %164 ]
  %177 = phi i64 [ %183, %174 ], [ %172, %164 ]
  %178 = load float, float* %176, align 4
  %179 = load float, float* %175, align 4
  %180 = fadd float %178, %179
  store float %180, float* %175, align 4
  %181 = getelementptr inbounds float, float* %176, i64 1
  %182 = getelementptr inbounds float, float* %175, i64 1
  %183 = add i64 %177, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %174, !llvm.loop !7

185:                                              ; preds = %174, %164
  %186 = phi float* [ %165, %164 ], [ %182, %174 ]
  %187 = phi float* [ %166, %164 ], [ %181, %174 ]
  %188 = icmp ult i64 %169, 12
  br i1 %188, label %213, label %189

189:                                              ; preds = %185, %189
  %190 = phi float* [ %211, %189 ], [ %186, %185 ]
  %191 = phi float* [ %210, %189 ], [ %187, %185 ]
  %192 = load float, float* %191, align 4
  %193 = load float, float* %190, align 4
  %194 = fadd float %192, %193
  store float %194, float* %190, align 4
  %195 = getelementptr inbounds float, float* %191, i64 1
  %196 = getelementptr inbounds float, float* %190, i64 1
  %197 = load float, float* %195, align 4
  %198 = load float, float* %196, align 4
  %199 = fadd float %197, %198
  store float %199, float* %196, align 4
  %200 = getelementptr inbounds float, float* %191, i64 2
  %201 = getelementptr inbounds float, float* %190, i64 2
  %202 = load float, float* %200, align 4
  %203 = load float, float* %201, align 4
  %204 = fadd float %202, %203
  store float %204, float* %201, align 4
  %205 = getelementptr inbounds float, float* %191, i64 3
  %206 = getelementptr inbounds float, float* %190, i64 3
  %207 = load float, float* %205, align 4
  %208 = load float, float* %206, align 4
  %209 = fadd float %207, %208
  store float %209, float* %206, align 4
  %210 = getelementptr inbounds float, float* %191, i64 4
  %211 = getelementptr inbounds float, float* %190, i64 4
  %212 = icmp eq float* %210, %76
  br i1 %212, label %213, label %189, !llvm.loop !9

213:                                              ; preds = %189, %185
  %214 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %73, i64 1
  %215 = icmp eq %"struct.std::__1::array"* %214, %17
  %216 = add i64 %72, 1
  br i1 %215, label %70, label %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4aec316ErlComputer_SSE2ERKNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEEN3rtc9ArrayViewIfLln4711EEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), float*, i64) local_unnamed_addr #1 {
  %4 = shl i64 %2, 2
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %3
  %7 = bitcast float* %1 to i8*
  %8 = icmp slt i64 %2, 1
  %9 = select i1 %8, i64 %2, i64 1
  %10 = shl i64 %9, 2
  %11 = add i64 %10, -4
  %12 = sub i64 %4, %11
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 %12, i1 false)
  br label %13

13:                                               ; preds = %6, %3
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %16, align 8
  %18 = icmp eq %"struct.std::__1::array"* %15, %17
  br i1 %18, label %147, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds float, float* %1, i64 64
  %21 = getelementptr inbounds float, float* %1, i64 16
  %22 = bitcast float* %21 to <4 x float>*
  %23 = load <4 x float>, <4 x float>* %22, align 1
  %24 = getelementptr inbounds float, float* %1, i64 20
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 1
  %27 = getelementptr inbounds float, float* %1, i64 24
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 1
  %30 = getelementptr inbounds float, float* %1, i64 28
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 1
  %33 = getelementptr inbounds float, float* %1, i64 32
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 1
  %36 = getelementptr inbounds float, float* %1, i64 36
  %37 = bitcast float* %36 to <4 x float>*
  %38 = load <4 x float>, <4 x float>* %37, align 1
  %39 = getelementptr inbounds float, float* %1, i64 40
  %40 = bitcast float* %39 to <4 x float>*
  %41 = load <4 x float>, <4 x float>* %40, align 1
  %42 = getelementptr inbounds float, float* %1, i64 44
  %43 = bitcast float* %42 to <4 x float>*
  %44 = load <4 x float>, <4 x float>* %43, align 1
  %45 = bitcast float* %1 to <4 x float>*
  %46 = getelementptr inbounds float, float* %1, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %48 = getelementptr inbounds float, float* %1, i64 8
  %49 = bitcast float* %48 to <4 x float>*
  %50 = getelementptr inbounds float, float* %1, i64 12
  %51 = bitcast float* %50 to <4 x float>*
  %52 = getelementptr inbounds float, float* %1, i64 48
  %53 = bitcast float* %52 to <4 x float>*
  %54 = getelementptr inbounds float, float* %1, i64 52
  %55 = bitcast float* %54 to <4 x float>*
  %56 = getelementptr inbounds float, float* %1, i64 56
  %57 = bitcast float* %56 to <4 x float>*
  %58 = getelementptr inbounds float, float* %1, i64 60
  %59 = bitcast float* %58 to <4 x float>*
  br label %60

60:                                               ; preds = %19, %60
  %61 = phi <4 x float> [ %44, %19 ], [ %120, %60 ]
  %62 = phi <4 x float> [ %41, %19 ], [ %116, %60 ]
  %63 = phi <4 x float> [ %38, %19 ], [ %112, %60 ]
  %64 = phi <4 x float> [ %35, %19 ], [ %108, %60 ]
  %65 = phi <4 x float> [ %32, %19 ], [ %104, %60 ]
  %66 = phi <4 x float> [ %29, %19 ], [ %100, %60 ]
  %67 = phi <4 x float> [ %26, %19 ], [ %96, %60 ]
  %68 = phi <4 x float> [ %23, %19 ], [ %92, %60 ]
  %69 = phi %"struct.std::__1::array"* [ %15, %19 ], [ %145, %60 ]
  %70 = bitcast %"struct.std::__1::array"* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 1
  %72 = load <4 x float>, <4 x float>* %45, align 1
  %73 = fadd <4 x float> %71, %72
  store <4 x float> %73, <4 x float>* %45, align 1
  %74 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 1
  %77 = load <4 x float>, <4 x float>* %47, align 1
  %78 = fadd <4 x float> %76, %77
  store <4 x float> %78, <4 x float>* %47, align 1
  %79 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 8
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 1
  %82 = load <4 x float>, <4 x float>* %49, align 1
  %83 = fadd <4 x float> %81, %82
  store <4 x float> %83, <4 x float>* %49, align 1
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 12
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 1
  %87 = load <4 x float>, <4 x float>* %51, align 1
  %88 = fadd <4 x float> %86, %87
  store <4 x float> %88, <4 x float>* %51, align 1
  %89 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 16
  %90 = bitcast float* %89 to <4 x float>*
  %91 = load <4 x float>, <4 x float>* %90, align 1
  %92 = fadd <4 x float> %91, %68
  store <4 x float> %92, <4 x float>* %22, align 1
  %93 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 20
  %94 = bitcast float* %93 to <4 x float>*
  %95 = load <4 x float>, <4 x float>* %94, align 1
  %96 = fadd <4 x float> %95, %67
  store <4 x float> %96, <4 x float>* %25, align 1
  %97 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 24
  %98 = bitcast float* %97 to <4 x float>*
  %99 = load <4 x float>, <4 x float>* %98, align 1
  %100 = fadd <4 x float> %99, %66
  store <4 x float> %100, <4 x float>* %28, align 1
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 28
  %102 = bitcast float* %101 to <4 x float>*
  %103 = load <4 x float>, <4 x float>* %102, align 1
  %104 = fadd <4 x float> %103, %65
  store <4 x float> %104, <4 x float>* %31, align 1
  %105 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 32
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 1
  %108 = fadd <4 x float> %107, %64
  store <4 x float> %108, <4 x float>* %34, align 1
  %109 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 36
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 1
  %112 = fadd <4 x float> %111, %63
  store <4 x float> %112, <4 x float>* %37, align 1
  %113 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 40
  %114 = bitcast float* %113 to <4 x float>*
  %115 = load <4 x float>, <4 x float>* %114, align 1
  %116 = fadd <4 x float> %115, %62
  store <4 x float> %116, <4 x float>* %40, align 1
  %117 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 44
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 1
  %120 = fadd <4 x float> %119, %61
  store <4 x float> %120, <4 x float>* %43, align 1
  %121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 48
  %122 = bitcast float* %121 to <4 x float>*
  %123 = load <4 x float>, <4 x float>* %122, align 1
  %124 = load <4 x float>, <4 x float>* %53, align 1
  %125 = fadd <4 x float> %123, %124
  store <4 x float> %125, <4 x float>* %53, align 1
  %126 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 52
  %127 = bitcast float* %126 to <4 x float>*
  %128 = load <4 x float>, <4 x float>* %127, align 1
  %129 = load <4 x float>, <4 x float>* %55, align 1
  %130 = fadd <4 x float> %128, %129
  store <4 x float> %130, <4 x float>* %55, align 1
  %131 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 56
  %132 = bitcast float* %131 to <4 x float>*
  %133 = load <4 x float>, <4 x float>* %132, align 1
  %134 = load <4 x float>, <4 x float>* %57, align 1
  %135 = fadd <4 x float> %133, %134
  store <4 x float> %135, <4 x float>* %57, align 1
  %136 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 60
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 1
  %139 = load <4 x float>, <4 x float>* %59, align 1
  %140 = fadd <4 x float> %138, %139
  store <4 x float> %140, <4 x float>* %59, align 1
  %141 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 0, i32 0, i64 64
  %142 = load float, float* %141, align 4
  %143 = load float, float* %20, align 4
  %144 = fadd float %142, %143
  store float %144, float* %20, align 4
  %145 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %69, i64 1
  %146 = icmp eq %"struct.std::__1::array"* %145, %17
  br i1 %146, label %147, label %60

147:                                              ; preds = %60, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10ComputeErlERKNS_16Aec3OptimizationERKNSt3__16vectorINS3_5arrayIfLm65EEENS3_9allocatorIS6_EEEEN3rtc9ArrayViewIfLln4711EEE(i32* nocapture readonly dereferenceable(4), %"class.std::__1::vector"* dereferenceable(24), float*, i64) local_unnamed_addr #1 {
  %5 = load i32, i32* %0, align 4
  switch i32 %5, label %164 [
    i32 1, label %6
    i32 2, label %161
  ]

6:                                                ; preds = %4
  %7 = icmp eq i64 %3, 0
  %8 = select i1 %7, float* null, float* %2
  %9 = shl i64 %3, 2
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = bitcast float* %8 to i8*
  %13 = icmp slt i64 %3, 1
  %14 = select i1 %13, i64 %3, i64 1
  %15 = mul i64 %14, -4
  %16 = add nuw i64 %9, 4
  %17 = add i64 %16, %15
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 %17, i1 false) #4
  br label %18

18:                                               ; preds = %11, %6
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %20 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %22 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %21, align 8
  %23 = icmp eq %"struct.std::__1::array"* %20, %22
  br i1 %23, label %379, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds float, float* %8, i64 64
  %26 = getelementptr inbounds float, float* %8, i64 16
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 1
  %29 = getelementptr inbounds float, float* %8, i64 20
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 1
  %32 = getelementptr inbounds float, float* %8, i64 24
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 1
  %35 = getelementptr inbounds float, float* %8, i64 28
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 1
  %38 = getelementptr inbounds float, float* %8, i64 32
  %39 = bitcast float* %38 to <4 x float>*
  %40 = load <4 x float>, <4 x float>* %39, align 1
  %41 = getelementptr inbounds float, float* %8, i64 36
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 1
  %44 = getelementptr inbounds float, float* %8, i64 40
  %45 = bitcast float* %44 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 1
  %47 = getelementptr inbounds float, float* %8, i64 44
  %48 = bitcast float* %47 to <4 x float>*
  %49 = load <4 x float>, <4 x float>* %48, align 1
  %50 = bitcast float* %8 to <4 x float>*
  %51 = getelementptr inbounds float, float* %8, i64 4
  %52 = bitcast float* %51 to <4 x float>*
  %53 = getelementptr inbounds float, float* %8, i64 8
  %54 = bitcast float* %53 to <4 x float>*
  %55 = getelementptr inbounds float, float* %8, i64 12
  %56 = bitcast float* %55 to <4 x float>*
  %57 = getelementptr inbounds float, float* %8, i64 48
  %58 = bitcast float* %57 to <4 x float>*
  %59 = getelementptr inbounds float, float* %8, i64 52
  %60 = bitcast float* %59 to <4 x float>*
  %61 = getelementptr inbounds float, float* %8, i64 56
  %62 = bitcast float* %61 to <4 x float>*
  %63 = getelementptr inbounds float, float* %8, i64 60
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %50, align 1
  %66 = load <4 x float>, <4 x float>* %52, align 1
  %67 = load <4 x float>, <4 x float>* %54, align 1
  %68 = load <4 x float>, <4 x float>* %56, align 1
  %69 = load <4 x float>, <4 x float>* %58, align 1
  %70 = load <4 x float>, <4 x float>* %60, align 1
  %71 = load <4 x float>, <4 x float>* %62, align 1
  %72 = load <4 x float>, <4 x float>* %64, align 1
  %73 = load float, float* %25, align 4
  br label %74

74:                                               ; preds = %74, %24
  %75 = phi float [ %73, %24 ], [ %158, %74 ]
  %76 = phi <4 x float> [ %72, %24 ], [ %155, %74 ]
  %77 = phi <4 x float> [ %71, %24 ], [ %151, %74 ]
  %78 = phi <4 x float> [ %70, %24 ], [ %147, %74 ]
  %79 = phi <4 x float> [ %69, %24 ], [ %143, %74 ]
  %80 = phi <4 x float> [ %68, %24 ], [ %107, %74 ]
  %81 = phi <4 x float> [ %67, %24 ], [ %103, %74 ]
  %82 = phi <4 x float> [ %66, %24 ], [ %99, %74 ]
  %83 = phi <4 x float> [ %65, %24 ], [ %95, %74 ]
  %84 = phi <4 x float> [ %49, %24 ], [ %139, %74 ]
  %85 = phi <4 x float> [ %46, %24 ], [ %135, %74 ]
  %86 = phi <4 x float> [ %43, %24 ], [ %131, %74 ]
  %87 = phi <4 x float> [ %40, %24 ], [ %127, %74 ]
  %88 = phi <4 x float> [ %37, %24 ], [ %123, %74 ]
  %89 = phi <4 x float> [ %34, %24 ], [ %119, %74 ]
  %90 = phi <4 x float> [ %31, %24 ], [ %115, %74 ]
  %91 = phi <4 x float> [ %28, %24 ], [ %111, %74 ]
  %92 = phi %"struct.std::__1::array"* [ %20, %24 ], [ %159, %74 ]
  %93 = bitcast %"struct.std::__1::array"* %92 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 1
  %95 = fadd <4 x float> %94, %83
  store <4 x float> %95, <4 x float>* %50, align 1
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 4
  %97 = bitcast float* %96 to <4 x float>*
  %98 = load <4 x float>, <4 x float>* %97, align 1
  %99 = fadd <4 x float> %98, %82
  store <4 x float> %99, <4 x float>* %52, align 1
  %100 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 8
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 1
  %103 = fadd <4 x float> %102, %81
  store <4 x float> %103, <4 x float>* %54, align 1
  %104 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 12
  %105 = bitcast float* %104 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 1
  %107 = fadd <4 x float> %106, %80
  store <4 x float> %107, <4 x float>* %56, align 1
  %108 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 16
  %109 = bitcast float* %108 to <4 x float>*
  %110 = load <4 x float>, <4 x float>* %109, align 1
  %111 = fadd <4 x float> %91, %110
  store <4 x float> %111, <4 x float>* %27, align 1
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 20
  %113 = bitcast float* %112 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 1
  %115 = fadd <4 x float> %90, %114
  store <4 x float> %115, <4 x float>* %30, align 1
  %116 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 24
  %117 = bitcast float* %116 to <4 x float>*
  %118 = load <4 x float>, <4 x float>* %117, align 1
  %119 = fadd <4 x float> %89, %118
  store <4 x float> %119, <4 x float>* %33, align 1
  %120 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 28
  %121 = bitcast float* %120 to <4 x float>*
  %122 = load <4 x float>, <4 x float>* %121, align 1
  %123 = fadd <4 x float> %88, %122
  store <4 x float> %123, <4 x float>* %36, align 1
  %124 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 32
  %125 = bitcast float* %124 to <4 x float>*
  %126 = load <4 x float>, <4 x float>* %125, align 1
  %127 = fadd <4 x float> %87, %126
  store <4 x float> %127, <4 x float>* %39, align 1
  %128 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 36
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 1
  %131 = fadd <4 x float> %86, %130
  store <4 x float> %131, <4 x float>* %42, align 1
  %132 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 40
  %133 = bitcast float* %132 to <4 x float>*
  %134 = load <4 x float>, <4 x float>* %133, align 1
  %135 = fadd <4 x float> %85, %134
  store <4 x float> %135, <4 x float>* %45, align 1
  %136 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 44
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 1
  %139 = fadd <4 x float> %84, %138
  store <4 x float> %139, <4 x float>* %48, align 1
  %140 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 48
  %141 = bitcast float* %140 to <4 x float>*
  %142 = load <4 x float>, <4 x float>* %141, align 1
  %143 = fadd <4 x float> %142, %79
  store <4 x float> %143, <4 x float>* %58, align 1
  %144 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 52
  %145 = bitcast float* %144 to <4 x float>*
  %146 = load <4 x float>, <4 x float>* %145, align 1
  %147 = fadd <4 x float> %146, %78
  store <4 x float> %147, <4 x float>* %60, align 1
  %148 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 56
  %149 = bitcast float* %148 to <4 x float>*
  %150 = load <4 x float>, <4 x float>* %149, align 1
  %151 = fadd <4 x float> %150, %77
  store <4 x float> %151, <4 x float>* %62, align 1
  %152 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 60
  %153 = bitcast float* %152 to <4 x float>*
  %154 = load <4 x float>, <4 x float>* %153, align 1
  %155 = fadd <4 x float> %154, %76
  store <4 x float> %155, <4 x float>* %64, align 1
  %156 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 0, i32 0, i64 64
  %157 = load float, float* %156, align 4
  %158 = fadd float %157, %75
  store float %158, float* %25, align 4
  %159 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %92, i64 1
  %160 = icmp eq %"struct.std::__1::array"* %159, %22
  br i1 %160, label %379, label %74

161:                                              ; preds = %4
  %162 = icmp eq i64 %3, 0
  %163 = select i1 %162, float* null, float* %2
  tail call void @_ZN6webrtc4aec316ErlComputer_AVX2ERKNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEEN3rtc9ArrayViewIfLln4711EEE(%"class.std::__1::vector"* dereferenceable(24) %1, float* %163, i64 %3) #4
  br label %379

164:                                              ; preds = %4
  %165 = icmp eq i64 %3, 0
  %166 = select i1 %165, float* null, float* %2
  %167 = shl i64 %3, 2
  %168 = icmp sgt i64 %167, 0
  br i1 %168, label %169, label %176

169:                                              ; preds = %164
  %170 = bitcast float* %166 to i8*
  %171 = icmp slt i64 %3, 1
  %172 = select i1 %171, i64 %3, i64 1
  %173 = mul i64 %172, -4
  %174 = add nuw i64 %167, 4
  %175 = add i64 %174, %173
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %170, i8 0, i64 %175, i1 false) #4
  br label %176

176:                                              ; preds = %169, %164
  %177 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %178 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %180 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %179, align 8
  %181 = icmp eq %"struct.std::__1::array"* %178, %180
  br i1 %181, label %379, label %182

182:                                              ; preds = %176
  %183 = getelementptr float, float* %166, i64 65
  %184 = bitcast float* %183 to %"struct.std::__1::array"*
  %185 = getelementptr float, float* %166, i64 64
  %186 = bitcast float* %166 to <4 x float>*
  %187 = bitcast float* %166 to <4 x float>*
  %188 = getelementptr float, float* %166, i64 4
  %189 = bitcast float* %188 to <4 x float>*
  %190 = bitcast float* %188 to <4 x float>*
  %191 = getelementptr float, float* %166, i64 8
  %192 = bitcast float* %191 to <4 x float>*
  %193 = bitcast float* %191 to <4 x float>*
  %194 = getelementptr float, float* %166, i64 12
  %195 = bitcast float* %194 to <4 x float>*
  %196 = bitcast float* %194 to <4 x float>*
  %197 = getelementptr float, float* %166, i64 16
  %198 = bitcast float* %197 to <4 x float>*
  %199 = bitcast float* %197 to <4 x float>*
  %200 = getelementptr float, float* %166, i64 20
  %201 = bitcast float* %200 to <4 x float>*
  %202 = bitcast float* %200 to <4 x float>*
  %203 = getelementptr float, float* %166, i64 24
  %204 = bitcast float* %203 to <4 x float>*
  %205 = bitcast float* %203 to <4 x float>*
  %206 = getelementptr float, float* %166, i64 28
  %207 = bitcast float* %206 to <4 x float>*
  %208 = bitcast float* %206 to <4 x float>*
  %209 = getelementptr float, float* %166, i64 32
  %210 = bitcast float* %209 to <4 x float>*
  %211 = bitcast float* %209 to <4 x float>*
  %212 = getelementptr float, float* %166, i64 36
  %213 = bitcast float* %212 to <4 x float>*
  %214 = bitcast float* %212 to <4 x float>*
  %215 = getelementptr float, float* %166, i64 40
  %216 = bitcast float* %215 to <4 x float>*
  %217 = bitcast float* %215 to <4 x float>*
  %218 = getelementptr float, float* %166, i64 44
  %219 = bitcast float* %218 to <4 x float>*
  %220 = bitcast float* %218 to <4 x float>*
  %221 = getelementptr float, float* %166, i64 48
  %222 = bitcast float* %221 to <4 x float>*
  %223 = bitcast float* %221 to <4 x float>*
  %224 = getelementptr float, float* %166, i64 52
  %225 = bitcast float* %224 to <4 x float>*
  %226 = bitcast float* %224 to <4 x float>*
  %227 = getelementptr float, float* %166, i64 56
  %228 = bitcast float* %227 to <4 x float>*
  %229 = bitcast float* %227 to <4 x float>*
  %230 = getelementptr float, float* %166, i64 60
  %231 = bitcast float* %230 to <4 x float>*
  %232 = bitcast float* %230 to <4 x float>*
  br label %233

233:                                              ; preds = %182, %375
  %234 = phi i64 [ 0, %182 ], [ %378, %375 ]
  %235 = phi %"struct.std::__1::array"* [ %178, %182 ], [ %376, %375 ]
  %236 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %178, i64 %234, i32 0, i64 64
  %237 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 0
  %238 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 65
  %239 = add i64 %234, 1
  %240 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %178, i64 %234
  %241 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %178, i64 %239, i32 0, i64 0
  %242 = icmp ult float* %166, %241
  %243 = icmp ult %"struct.std::__1::array"* %240, %184
  %244 = and i1 %242, %243
  br i1 %244, label %326, label %245

245:                                              ; preds = %233
  %246 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 64
  %247 = bitcast %"struct.std::__1::array"* %235 to <4 x float>*
  %248 = load <4 x float>, <4 x float>* %247, align 4, !alias.scope !11
  %249 = load <4 x float>, <4 x float>* %186, align 4, !alias.scope !14, !noalias !11
  %250 = fadd <4 x float> %248, %249
  store <4 x float> %250, <4 x float>* %187, align 4, !alias.scope !14, !noalias !11
  %251 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 4
  %252 = bitcast float* %251 to <4 x float>*
  %253 = load <4 x float>, <4 x float>* %252, align 4, !alias.scope !11
  %254 = load <4 x float>, <4 x float>* %189, align 4, !alias.scope !14, !noalias !11
  %255 = fadd <4 x float> %253, %254
  store <4 x float> %255, <4 x float>* %190, align 4, !alias.scope !14, !noalias !11
  %256 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 8
  %257 = bitcast float* %256 to <4 x float>*
  %258 = load <4 x float>, <4 x float>* %257, align 4, !alias.scope !11
  %259 = load <4 x float>, <4 x float>* %192, align 4, !alias.scope !14, !noalias !11
  %260 = fadd <4 x float> %258, %259
  store <4 x float> %260, <4 x float>* %193, align 4, !alias.scope !14, !noalias !11
  %261 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 12
  %262 = bitcast float* %261 to <4 x float>*
  %263 = load <4 x float>, <4 x float>* %262, align 4, !alias.scope !11
  %264 = load <4 x float>, <4 x float>* %195, align 4, !alias.scope !14, !noalias !11
  %265 = fadd <4 x float> %263, %264
  store <4 x float> %265, <4 x float>* %196, align 4, !alias.scope !14, !noalias !11
  %266 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 16
  %267 = bitcast float* %266 to <4 x float>*
  %268 = load <4 x float>, <4 x float>* %267, align 4, !alias.scope !11
  %269 = load <4 x float>, <4 x float>* %198, align 4, !alias.scope !14, !noalias !11
  %270 = fadd <4 x float> %268, %269
  store <4 x float> %270, <4 x float>* %199, align 4, !alias.scope !14, !noalias !11
  %271 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 20
  %272 = bitcast float* %271 to <4 x float>*
  %273 = load <4 x float>, <4 x float>* %272, align 4, !alias.scope !11
  %274 = load <4 x float>, <4 x float>* %201, align 4, !alias.scope !14, !noalias !11
  %275 = fadd <4 x float> %273, %274
  store <4 x float> %275, <4 x float>* %202, align 4, !alias.scope !14, !noalias !11
  %276 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 24
  %277 = bitcast float* %276 to <4 x float>*
  %278 = load <4 x float>, <4 x float>* %277, align 4, !alias.scope !11
  %279 = load <4 x float>, <4 x float>* %204, align 4, !alias.scope !14, !noalias !11
  %280 = fadd <4 x float> %278, %279
  store <4 x float> %280, <4 x float>* %205, align 4, !alias.scope !14, !noalias !11
  %281 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 28
  %282 = bitcast float* %281 to <4 x float>*
  %283 = load <4 x float>, <4 x float>* %282, align 4, !alias.scope !11
  %284 = load <4 x float>, <4 x float>* %207, align 4, !alias.scope !14, !noalias !11
  %285 = fadd <4 x float> %283, %284
  store <4 x float> %285, <4 x float>* %208, align 4, !alias.scope !14, !noalias !11
  %286 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 32
  %287 = bitcast float* %286 to <4 x float>*
  %288 = load <4 x float>, <4 x float>* %287, align 4, !alias.scope !11
  %289 = load <4 x float>, <4 x float>* %210, align 4, !alias.scope !14, !noalias !11
  %290 = fadd <4 x float> %288, %289
  store <4 x float> %290, <4 x float>* %211, align 4, !alias.scope !14, !noalias !11
  %291 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 36
  %292 = bitcast float* %291 to <4 x float>*
  %293 = load <4 x float>, <4 x float>* %292, align 4, !alias.scope !11
  %294 = load <4 x float>, <4 x float>* %213, align 4, !alias.scope !14, !noalias !11
  %295 = fadd <4 x float> %293, %294
  store <4 x float> %295, <4 x float>* %214, align 4, !alias.scope !14, !noalias !11
  %296 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 40
  %297 = bitcast float* %296 to <4 x float>*
  %298 = load <4 x float>, <4 x float>* %297, align 4, !alias.scope !11
  %299 = load <4 x float>, <4 x float>* %216, align 4, !alias.scope !14, !noalias !11
  %300 = fadd <4 x float> %298, %299
  store <4 x float> %300, <4 x float>* %217, align 4, !alias.scope !14, !noalias !11
  %301 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 44
  %302 = bitcast float* %301 to <4 x float>*
  %303 = load <4 x float>, <4 x float>* %302, align 4, !alias.scope !11
  %304 = load <4 x float>, <4 x float>* %219, align 4, !alias.scope !14, !noalias !11
  %305 = fadd <4 x float> %303, %304
  store <4 x float> %305, <4 x float>* %220, align 4, !alias.scope !14, !noalias !11
  %306 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 48
  %307 = bitcast float* %306 to <4 x float>*
  %308 = load <4 x float>, <4 x float>* %307, align 4, !alias.scope !11
  %309 = load <4 x float>, <4 x float>* %222, align 4, !alias.scope !14, !noalias !11
  %310 = fadd <4 x float> %308, %309
  store <4 x float> %310, <4 x float>* %223, align 4, !alias.scope !14, !noalias !11
  %311 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 52
  %312 = bitcast float* %311 to <4 x float>*
  %313 = load <4 x float>, <4 x float>* %312, align 4, !alias.scope !11
  %314 = load <4 x float>, <4 x float>* %225, align 4, !alias.scope !14, !noalias !11
  %315 = fadd <4 x float> %313, %314
  store <4 x float> %315, <4 x float>* %226, align 4, !alias.scope !14, !noalias !11
  %316 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 56
  %317 = bitcast float* %316 to <4 x float>*
  %318 = load <4 x float>, <4 x float>* %317, align 4, !alias.scope !11
  %319 = load <4 x float>, <4 x float>* %228, align 4, !alias.scope !14, !noalias !11
  %320 = fadd <4 x float> %318, %319
  store <4 x float> %320, <4 x float>* %229, align 4, !alias.scope !14, !noalias !11
  %321 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 0, i32 0, i64 60
  %322 = bitcast float* %321 to <4 x float>*
  %323 = load <4 x float>, <4 x float>* %322, align 4, !alias.scope !11
  %324 = load <4 x float>, <4 x float>* %231, align 4, !alias.scope !14, !noalias !11
  %325 = fadd <4 x float> %323, %324
  store <4 x float> %325, <4 x float>* %232, align 4, !alias.scope !14, !noalias !11
  br label %326

326:                                              ; preds = %245, %233
  %327 = phi float* [ %166, %233 ], [ %185, %245 ]
  %328 = phi float* [ %237, %233 ], [ %246, %245 ]
  %329 = ptrtoint float* %328 to i64
  %330 = ptrtoint float* %236 to i64
  %331 = sub i64 %330, %329
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 3
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %326, %336
  %337 = phi float* [ %344, %336 ], [ %327, %326 ]
  %338 = phi float* [ %343, %336 ], [ %328, %326 ]
  %339 = phi i64 [ %345, %336 ], [ %334, %326 ]
  %340 = load float, float* %338, align 4
  %341 = load float, float* %337, align 4
  %342 = fadd float %340, %341
  store float %342, float* %337, align 4
  %343 = getelementptr inbounds float, float* %338, i64 1
  %344 = getelementptr inbounds float, float* %337, i64 1
  %345 = add i64 %339, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !16

347:                                              ; preds = %336, %326
  %348 = phi float* [ %327, %326 ], [ %344, %336 ]
  %349 = phi float* [ %328, %326 ], [ %343, %336 ]
  %350 = icmp ult i64 %331, 12
  br i1 %350, label %375, label %351

351:                                              ; preds = %347, %351
  %352 = phi float* [ %373, %351 ], [ %348, %347 ]
  %353 = phi float* [ %372, %351 ], [ %349, %347 ]
  %354 = load float, float* %353, align 4
  %355 = load float, float* %352, align 4
  %356 = fadd float %354, %355
  store float %356, float* %352, align 4
  %357 = getelementptr inbounds float, float* %353, i64 1
  %358 = getelementptr inbounds float, float* %352, i64 1
  %359 = load float, float* %357, align 4
  %360 = load float, float* %358, align 4
  %361 = fadd float %359, %360
  store float %361, float* %358, align 4
  %362 = getelementptr inbounds float, float* %353, i64 2
  %363 = getelementptr inbounds float, float* %352, i64 2
  %364 = load float, float* %362, align 4
  %365 = load float, float* %363, align 4
  %366 = fadd float %364, %365
  store float %366, float* %363, align 4
  %367 = getelementptr inbounds float, float* %353, i64 3
  %368 = getelementptr inbounds float, float* %352, i64 3
  %369 = load float, float* %367, align 4
  %370 = load float, float* %368, align 4
  %371 = fadd float %369, %370
  store float %371, float* %368, align 4
  %372 = getelementptr inbounds float, float* %353, i64 4
  %373 = getelementptr inbounds float, float* %352, i64 4
  %374 = icmp eq float* %372, %238
  br i1 %374, label %375, label %351, !llvm.loop !17

375:                                              ; preds = %351, %347
  %376 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %235, i64 1
  %377 = icmp eq %"struct.std::__1::array"* %376, %180
  %378 = add i64 %234, 1
  br i1 %377, label %379, label %233

379:                                              ; preds = %74, %375, %176, %18, %161
  ret void
}

declare void @_ZN6webrtc4aec316ErlComputer_AVX2ERKNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEEN3rtc9ArrayViewIfLln4711EEE(%"class.std::__1::vector"* dereferenceable(24), float*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !8}
!17 = distinct !{!17, !10}
