; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/hybrid_fwd_txfm.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/hybrid_fwd_txfm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.txfm_param = type { i8, i8, i32, i32, i32, i8, i32 }

@av1_lowbd_fwd_txfm = external local_unnamed_addr global void (i16*, i32*, i32, %struct.txfm_param*)*, align 8
@aom_hadamard_16x16 = external local_unnamed_addr global void (i16*, i64, i32*)*, align 8
@aom_hadamard_32x32 = external local_unnamed_addr global void (i16*, i64, i32*)*, align 8
@av1_fwd_txfm2d_64x64 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_32x64 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_64x32 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_32x32 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_16x16 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_8x8 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_4x8 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_8x4 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_8x16 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_16x8 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_16x32 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_32x16 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8
@av1_fwd_txfm2d_4x4 = external local_unnamed_addr global void (i16*, i32*, i32, i8, i32)*, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_fwht4x4_c(i16* nocapture readonly, i32* nocapture, i32) local_unnamed_addr #0 {
  %4 = sext i32 %2 to i64
  %5 = shl nsw i32 %2, 1
  %6 = sext i32 %5 to i64
  %7 = mul nsw i32 %2, 3
  %8 = sext i32 %7 to i64
  %9 = load i16, i16* %0, align 2
  %10 = sext i16 %9 to i64
  %11 = getelementptr inbounds i16, i16* %0, i64 %4
  %12 = load i16, i16* %11, align 2
  %13 = sext i16 %12 to i64
  %14 = getelementptr inbounds i16, i16* %0, i64 %6
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i64
  %17 = getelementptr inbounds i16, i16* %0, i64 %8
  %18 = load i16, i16* %17, align 2
  %19 = sext i16 %18 to i64
  %20 = add nsw i64 %13, %10
  %21 = sub nsw i64 %19, %16
  %22 = sub nsw i64 %20, %21
  %23 = ashr i64 %22, 1
  %24 = sub nsw i64 %23, %13
  %25 = sub nsw i64 %23, %16
  %26 = sub nsw i64 %20, %25
  %27 = add nsw i64 %24, %21
  %28 = trunc i64 %26 to i32
  store i32 %28, i32* %1, align 4
  %29 = trunc i64 %25 to i32
  %30 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %29, i32* %30, align 4
  %31 = trunc i64 %27 to i32
  %32 = getelementptr inbounds i32, i32* %1, i64 8
  store i32 %31, i32* %32, align 4
  %33 = trunc i64 %24 to i32
  %34 = getelementptr inbounds i32, i32* %1, i64 12
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i16, i16* %0, i64 1
  %36 = getelementptr inbounds i32, i32* %1, i64 1
  %37 = load i16, i16* %35, align 2
  %38 = sext i16 %37 to i64
  %39 = getelementptr inbounds i16, i16* %35, i64 %4
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i64
  %42 = getelementptr inbounds i16, i16* %35, i64 %6
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i64
  %45 = getelementptr inbounds i16, i16* %35, i64 %8
  %46 = load i16, i16* %45, align 2
  %47 = sext i16 %46 to i64
  %48 = add nsw i64 %41, %38
  %49 = sub nsw i64 %47, %44
  %50 = sub nsw i64 %48, %49
  %51 = ashr i64 %50, 1
  %52 = sub nsw i64 %51, %41
  %53 = sub nsw i64 %51, %44
  %54 = sub nsw i64 %48, %53
  %55 = add nsw i64 %52, %49
  %56 = trunc i64 %54 to i32
  store i32 %56, i32* %36, align 4
  %57 = trunc i64 %53 to i32
  %58 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %57, i32* %58, align 4
  %59 = trunc i64 %55 to i32
  %60 = getelementptr inbounds i32, i32* %1, i64 9
  store i32 %59, i32* %60, align 4
  %61 = trunc i64 %52 to i32
  %62 = getelementptr inbounds i32, i32* %1, i64 13
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds i16, i16* %0, i64 2
  %64 = getelementptr inbounds i32, i32* %1, i64 2
  %65 = load i16, i16* %63, align 2
  %66 = sext i16 %65 to i64
  %67 = getelementptr inbounds i16, i16* %63, i64 %4
  %68 = load i16, i16* %67, align 2
  %69 = sext i16 %68 to i64
  %70 = getelementptr inbounds i16, i16* %63, i64 %6
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i64
  %73 = getelementptr inbounds i16, i16* %63, i64 %8
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i64
  %76 = add nsw i64 %69, %66
  %77 = sub nsw i64 %75, %72
  %78 = sub nsw i64 %76, %77
  %79 = ashr i64 %78, 1
  %80 = sub nsw i64 %79, %69
  %81 = sub nsw i64 %79, %72
  %82 = sub nsw i64 %76, %81
  %83 = add nsw i64 %80, %77
  %84 = trunc i64 %82 to i32
  store i32 %84, i32* %64, align 4
  %85 = trunc i64 %81 to i32
  %86 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %85, i32* %86, align 4
  %87 = trunc i64 %83 to i32
  %88 = getelementptr inbounds i32, i32* %1, i64 10
  store i32 %87, i32* %88, align 4
  %89 = trunc i64 %80 to i32
  %90 = getelementptr inbounds i32, i32* %1, i64 14
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds i16, i16* %0, i64 3
  %92 = load i16, i16* %91, align 2
  %93 = sext i16 %92 to i64
  %94 = getelementptr inbounds i16, i16* %91, i64 %4
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i64
  %97 = getelementptr inbounds i16, i16* %91, i64 %6
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i64
  %100 = getelementptr inbounds i16, i16* %91, i64 %8
  %101 = load i16, i16* %100, align 2
  %102 = sext i16 %101 to i64
  %103 = add nsw i64 %96, %93
  %104 = sub nsw i64 %102, %99
  %105 = sub nsw i64 %103, %104
  %106 = ashr i64 %105, 1
  %107 = sub nsw i64 %106, %96
  %108 = sub nsw i64 %106, %99
  %109 = sub nsw i64 %103, %108
  %110 = add nsw i64 %107, %104
  %111 = trunc i64 %107 to i32
  %112 = getelementptr inbounds i32, i32* %1, i64 15
  store i32 %111, i32* %112, align 4
  %113 = load i32, i32* %1, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %1, i64 2
  %116 = getelementptr inbounds i32, i32* %1, i64 3
  %117 = add nsw i64 %54, %114
  %118 = sub nsw i64 %109, %82
  %119 = sub nsw i64 %117, %118
  %120 = ashr i64 %119, 1
  %121 = sub nsw i64 %120, %54
  %122 = sub nsw i64 %120, %82
  %123 = sub nsw i64 %117, %122
  %124 = add nsw i64 %121, %118
  %125 = trunc i64 %123 to i32
  %126 = shl i32 %125, 2
  store i32 %126, i32* %1, align 4
  %127 = trunc i64 %122 to i32
  %128 = shl i32 %127, 2
  store i32 %128, i32* %36, align 4
  %129 = trunc i64 %124 to i32
  %130 = shl i32 %129, 2
  store i32 %130, i32* %115, align 4
  %131 = load i32, i32* %30, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %1, i64 5
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, i32* %1, i64 7
  %137 = add nsw i64 %135, %132
  %138 = sub nsw i64 %108, %81
  %139 = sub nsw i64 %137, %138
  %140 = ashr i64 %139, 1
  %141 = sub nsw i64 %140, %135
  %142 = sub nsw i64 %140, %81
  %143 = sub nsw i64 %137, %142
  %144 = add nsw i64 %141, %138
  %145 = insertelement <4 x i64> undef, i64 %121, i32 0
  %146 = insertelement <4 x i64> %145, i64 %143, i32 1
  %147 = insertelement <4 x i64> %146, i64 %142, i32 2
  %148 = insertelement <4 x i64> %147, i64 %144, i32 3
  %149 = trunc <4 x i64> %148 to <4 x i32>
  %150 = shl <4 x i32> %149, <i32 2, i32 2, i32 2, i32 2>
  %151 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds i32, i32* %1, i64 8
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %1, i64 9
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %1, i64 11
  %159 = add nsw i64 %157, %154
  %160 = sub nsw i64 %110, %83
  %161 = sub nsw i64 %159, %160
  %162 = ashr i64 %161, 1
  %163 = sub nsw i64 %162, %157
  %164 = sub nsw i64 %162, %83
  %165 = sub nsw i64 %159, %164
  %166 = add nsw i64 %163, %160
  %167 = insertelement <4 x i64> undef, i64 %141, i32 0
  %168 = insertelement <4 x i64> %167, i64 %165, i32 1
  %169 = insertelement <4 x i64> %168, i64 %164, i32 2
  %170 = insertelement <4 x i64> %169, i64 %166, i32 3
  %171 = trunc <4 x i64> %170 to <4 x i32>
  %172 = shl <4 x i32> %171, <i32 2, i32 2, i32 2, i32 2>
  %173 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %172, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds i32, i32* %1, i64 12
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i32, i32* %1, i64 13
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %1, i64 14
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %1, i64 15
  %184 = add nsw i64 %179, %176
  %185 = sub nsw i64 %107, %182
  %186 = sub nsw i64 %184, %185
  %187 = ashr i64 %186, 1
  %188 = sub nsw i64 %187, %179
  %189 = sub nsw i64 %187, %182
  %190 = sub nsw i64 %184, %189
  %191 = add nsw i64 %188, %185
  %192 = insertelement <4 x i64> undef, i64 %163, i32 0
  %193 = insertelement <4 x i64> %192, i64 %190, i32 1
  %194 = insertelement <4 x i64> %193, i64 %189, i32 2
  %195 = insertelement <4 x i64> %194, i64 %191, i32 3
  %196 = trunc <4 x i64> %195 to <4 x i32>
  %197 = shl <4 x i32> %196, <i32 2, i32 2, i32 2, i32 2>
  %198 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %197, <4 x i32>* %198, align 4
  %199 = trunc i64 %188 to i32
  %200 = shl i32 %199, 2
  store i32 %200, i32* %183, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_highbd_fwht4x4_c(i16* nocapture readonly, i32* nocapture, i32) local_unnamed_addr #0 {
  tail call void @av1_fwht4x4_c(i16* %0, i32* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm(i16*, i32*, i32, %struct.txfm_param*) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 8
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = load void (i16*, i32*, i32, %struct.txfm_param*)*, void (i16*, i32*, i32, %struct.txfm_param*)** @av1_lowbd_fwd_txfm, align 8
  tail call void %9(i16* %0, i32* %1, i32 %2, %struct.txfm_param* %3) #4
  br label %11

10:                                               ; preds = %4
  tail call void @av1_highbd_fwd_txfm(i16* %0, i32* %1, i32 %2, %struct.txfm_param* %3)
  br label %11

11:                                               ; preds = %10, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_fwd_txfm(i16*, i32*, i32, %struct.txfm_param* readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  switch i8 %6, label %88 [
    i8 4, label %7
    i8 11, label %11
    i8 12, label %17
    i8 3, label %23
    i8 2, label %29
    i8 1, label %35
    i8 5, label %41
    i8 6, label %47
    i8 7, label %53
    i8 8, label %59
    i8 9, label %65
    i8 10, label %71
    i8 0, label %77
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_64x64, align 8
  tail call void %10(i16* %0, i32* %1, i32 %2, i8 zeroext 0, i32 %9) #4
  br label %88

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_32x64, align 8
  %15 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %16 = load i8, i8* %15, align 4
  tail call void %14(i16* %0, i32* %1, i32 %2, i8 zeroext %16, i32 %13) #4
  br label %88

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_64x32, align 8
  %21 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %22 = load i8, i8* %21, align 4
  tail call void %20(i16* %0, i32* %1, i32 %2, i8 zeroext %22, i32 %19) #4
  br label %88

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %25 = load i8, i8* %24, align 4
  %26 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_32x32, align 8
  tail call void %28(i16* %0, i32* %1, i32 %2, i8 zeroext %25, i32 %27) #4
  br label %88

29:                                               ; preds = %4
  %30 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %31 = load i8, i8* %30, align 4
  %32 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x16, align 8
  tail call void %34(i16* %0, i32* %1, i32 %2, i8 zeroext %31, i32 %33) #4
  br label %88

35:                                               ; preds = %4
  %36 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %37 = load i8, i8* %36, align 4
  %38 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_8x8, align 8
  tail call void %40(i16* %0, i32* %1, i32 %2, i8 zeroext %37, i32 %39) #4
  br label %88

41:                                               ; preds = %4
  %42 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_4x8, align 8
  %43 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %44 = load i8, i8* %43, align 4
  %45 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  tail call void %42(i16* %0, i32* %1, i32 %2, i8 zeroext %44, i32 %46) #4
  br label %88

47:                                               ; preds = %4
  %48 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_8x4, align 8
  %49 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %50 = load i8, i8* %49, align 4
  %51 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  tail call void %48(i16* %0, i32* %1, i32 %2, i8 zeroext %50, i32 %52) #4
  br label %88

53:                                               ; preds = %4
  %54 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %55 = load i8, i8* %54, align 4
  %56 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_8x16, align 8
  tail call void %58(i16* %0, i32* %1, i32 %2, i8 zeroext %55, i32 %57) #4
  br label %88

59:                                               ; preds = %4
  %60 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %61 = load i8, i8* %60, align 4
  %62 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x8, align 8
  tail call void %64(i16* %0, i32* %1, i32 %2, i8 zeroext %61, i32 %63) #4
  br label %88

65:                                               ; preds = %4
  %66 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x32, align 8
  %67 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %68 = load i8, i8* %67, align 4
  %69 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  tail call void %66(i16* %0, i32* %1, i32 %2, i8 zeroext %68, i32 %70) #4
  br label %88

71:                                               ; preds = %4
  %72 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_32x16, align 8
  %73 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %74 = load i8, i8* %73, align 4
  %75 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  tail call void %72(i16* %0, i32* %1, i32 %2, i8 zeroext %74, i32 %76) #4
  br label %88

77:                                               ; preds = %4
  %78 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  tail call void @av1_fwht4x4_c(i16* %0, i32* %1, i32 %2) #4
  br label %88

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %86 = load i8, i8* %85, align 4
  %87 = load void (i16*, i32*, i32, i8, i32)*, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_4x4, align 8
  tail call void %87(i16* %0, i32* %1, i32 %2, i8 zeroext %86, i32 %84) #4
  br label %88

88:                                               ; preds = %82, %81, %4, %71, %65, %59, %53, %47, %41, %35, %29, %23, %17, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_lowbd_fwd_txfm_c(i16*, i32*, i32, %struct.txfm_param* readonly) local_unnamed_addr #2 {
  tail call void @av1_highbd_fwd_txfm(i16* %0, i32* %1, i32 %2, %struct.txfm_param* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_quick_txfm(i32, i8 zeroext, i64, i16*, i32, i32*) local_unnamed_addr #2 {
  %7 = alloca %struct.txfm_param, align 4
  %8 = icmp eq i32 %0, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %6
  switch i8 %1, label %35 [
    i8 0, label %10
    i8 1, label %12
    i8 2, label %14
    i8 3, label %17
  ]

10:                                               ; preds = %9
  %11 = sext i32 %4 to i64
  tail call void @aom_hadamard_4x4_c(i16* %3, i64 %11, i32* %5) #4
  br label %35

12:                                               ; preds = %9
  %13 = sext i32 %4 to i64
  tail call void @aom_hadamard_8x8_sse2(i16* %3, i64 %13, i32* %5) #4
  br label %35

14:                                               ; preds = %9
  %15 = load void (i16*, i64, i32*)*, void (i16*, i64, i32*)** @aom_hadamard_16x16, align 8
  %16 = sext i32 %4 to i64
  tail call void %15(i16* %3, i64 %16, i32* %5) #4
  br label %35

17:                                               ; preds = %9
  %18 = load void (i16*, i64, i32*)*, void (i16*, i64, i32*)** @aom_hadamard_32x32, align 8
  %19 = sext i32 %4 to i64
  tail call void %18(i16* %3, i64 %19, i32* %5) #4
  br label %35

20:                                               ; preds = %6
  %21 = lshr i64 %2, 32
  %22 = trunc i64 %21 to i32
  %23 = trunc i64 %2 to i32
  %24 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 -86, i64 24, i1 false)
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %7, i64 0, i32 1
  store i8 %1, i8* %25, align 1
  %26 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %7, i64 0, i32 2
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %7, i64 0, i32 3
  store i32 %23, i32* %27, align 4
  %28 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %7, i64 0, i32 4
  store i32 %22, i32* %28, align 4
  %29 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %7, i64 0, i32 5
  store i8 5, i8* %29, align 4
  %30 = icmp eq i32 %23, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %20
  %32 = load void (i16*, i32*, i32, %struct.txfm_param*)*, void (i16*, i32*, i32, %struct.txfm_param*)** @av1_lowbd_fwd_txfm, align 8
  call void %32(i16* %3, i32* %5, i32 %4, %struct.txfm_param* nonnull %7) #4
  br label %34

33:                                               ; preds = %20
  call void @av1_highbd_fwd_txfm(i16* %3, i32* %5, i32 %4, %struct.txfm_param* nonnull %7) #4
  br label %34

34:                                               ; preds = %31, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #4
  br label %35

35:                                               ; preds = %10, %12, %14, %17, %9, %34
  ret void
}

declare void @aom_hadamard_4x4_c(i16*, i64, i32*) local_unnamed_addr #3

declare void @aom_hadamard_8x8_sse2(i16*, i64, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
