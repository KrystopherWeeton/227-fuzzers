; ModuleID = '../../services/device/usb/usb_descriptors.cc'
source_filename = "../../services/device/usb/usb_descriptors.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.device::CombinedInterfaceInfo" = type { %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"* }
%"class.device::mojom::UsbInterfaceInfo" = type { i8, i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.26" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::mojom::UsbAlternateInterfaceInfo"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.mojo::StructPtr"* }
%"class.device::mojom::UsbAlternateInterfaceInfo" = type { i8, i8, i8, i8, %"class.absl::optional", %"class.std::__1::vector.4", %"class.std::__1::vector.10" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"*, %"class.std::__1::__compressed_pair.18" }
%"class.mojo::StructPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.device::mojom::UsbEndpointInfo"* }
%"class.device::mojom::UsbEndpointInfo" = type { i8, i32, i32, i32, i32, i32, i8, %"class.std::__1::vector.10" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.mojo::StructPtr.6"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i8*, i8*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i8* }
%"struct.device::UsbDeviceDescriptor" = type { i8, i8, i8, i8, %"class.mojo::StructPtr.31" }
%"class.mojo::StructPtr.31" = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.device::mojom::UsbDeviceInfo"* }
%"class.device::mojom::UsbDeviceInfo" = type { %"class.std::__1::basic_string.35", i8, i8, i8, i8, i8, i8, i32, i32, i16, i16, i8, i8, i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.44", i8, %"class.std::__1::vector.55" }
%"class.std::__1::basic_string.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.38 }
%union.anon.38 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string.35", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.49" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GURL* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"*, %"class.std::__1::__compressed_pair.78" }
%"class.mojo::StructPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.device::mojom::UsbConfigurationInfo"* }
%"class.device::mojom::UsbConfigurationInfo" = type { i8, %"class.absl::optional", i8, i8, i8, %"class.std::__1::vector.61", %"class.std::__1::vector.10" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"*, %"class.std::__1::__compressed_pair.70" }
%"class.mojo::StructPtr.63" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.device::mojom::UsbInterfaceInfo"* }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.mojo::StructPtr.63"* }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.mojo::StructPtr.57"* }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.35", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"class.std::__1::__compressed_pair.124" }
%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor" = type { i8, i8 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* }
%"class.std::__1::map.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__tree_node.237" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.238" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.238" = type { %"struct.std::__1::pair.119" }
%"struct.std::__1::pair.119" = type { i8, %"class.device::mojom::UsbInterfaceInfo"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.device::UsbDeviceHandle" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.89", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.89" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.92" = type { %"class.base::internal::CallbackBase" }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector.10" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.91" }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.91", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.device::UsbDeviceDescriptor"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.140" = type { %"class.base::internal::CallbackBase" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::OnceCallback.107" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::map"* }
%"class.base::OnceCallback.108" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node.197" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.196" }
%"struct.std::__1::__value_type.196" = type { %"struct.std::__1::pair.181" }
%"struct.std::__1::pair.181" = type { i8, %"class.std::__1::basic_string" }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.184" }
%"struct.std::__1::pair.184" = type { i8, %"class.std::__1::__map_iterator.179" }
%"class.std::__1::__map_iterator.179" = type { %"class.std::__1::__tree_iterator.180" }
%"class.std::__1::__tree_iterator.180" = type { %"class.std::__1::__tree_end_node"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.39 }
%struct.anon.39 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.scoped_refptr.90 = type { %"class.base::RefCountedBytes"* }

$_ZNK4base25CheckedContiguousIteratorIKhEixEl = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEpLEl = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEENS_12OnceCallbackIFvSC_EEEEJS6_SC_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS3_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEENS_12OnceCallbackIFvSB_EEEEJS5_SB_SE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS4_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJS6_S8_hNS_17RepeatingCallbackISA_EEEEEFvSD_SF_mEE7RunOnceEPNS0_13BindStateBaseESD_OSF_m = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS3_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS3_5mojom17UsbTransferStatusES2_INS_15RefCountedBytesEEmEJS5_S7_hNS_17RepeatingCallbackIS9_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS3_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJS5_S8_EEEFvSA_SD_mEE7RunOnceEPNS0_13BindStateBaseESA_OSD_m = comdat any

$_ZN4base8internal9BindStateIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS2_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSE_EEEFvSH_SK_mEE7RunOnceEPNS0_13BindStateBaseESH_OSK_m = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEEEEJSM_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS3_3mapIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS3_4lessIhEENS9_INS3_4pairIKhSB_EEEEEENS3_14default_deleteISI_EEEEEEEJSL_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEEEEJSM_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEPNS3_11__tree_nodeISD_PvEElEEEENS_12OnceCallbackIFvvEEERKSC_EJSJ_NS_17RepeatingCallbackISL_EEEEEFvSO_EE7RunOnceEPNS0_13BindStateBaseESO_ = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__114__map_iteratorINS2_15__tree_iteratorINS2_12__value_typeIhNS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEPNS2_11__tree_nodeISC_PvEElEEEENS_12OnceCallbackIFvvEEERKSB_EJSI_NS_17RepeatingCallbackISK_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE7destroyEPNSB_ISH_SC_EE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom20UsbConfigurationInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom16UsbInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom15UsbEndpointInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS8_14default_deleteISA_EEEEEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJS6_SF_EEEFvSH_SJ_mEE7RunOnceEPNS0_13BindStateBaseESH_OSJ_m = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS3_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEEEEENS3_5mojom17UsbTransferStatusES2_INS_15RefCountedBytesEEmEJS5_SE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS7_3mapIhNS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS7_4lessIhEENSD_INS7_4pairIKhSF_EEEEEENS7_14default_deleteISM_EEEENS_12OnceCallbackIFvSP_EEERKSF_EJS6_SP_SS_EEEFvSU_EE7RunOnceEPNS0_13BindStateBaseESU_ = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS6_3mapIhNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENS6_4lessIhEENSC_INS6_4pairIKhSE_EEEEEENS6_14default_deleteISL_EEEENS_12OnceCallbackIFvSO_EEERKSE_EJS5_SO_SR_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom25UsbAlternateInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"rhs >= 0\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"rhs < end_ - current_\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"../../services/device/usb/usb_descriptors.cc\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"Failed to read device descriptor.\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"Device descriptor parsing error.\00", align 1
@.str.13 = private unnamed_addr constant [56 x i8] c"Failed to read all configuration descriptors. Expected \00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c", got \00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"Failed to read length for configuration \00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"Failed to parse configuration descriptor.\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"Failed to read configuration descriptor.\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN6device21CombinedInterfaceInfoC1EPKNS_5mojom16UsbInterfaceInfoEPKNS1_25UsbAlternateInterfaceInfoE = hidden unnamed_addr alias void (%"struct.device::CombinedInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"*), void (%"struct.device::CombinedInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"*)* @_ZN6device21CombinedInterfaceInfoC2EPKNS_5mojom16UsbInterfaceInfoEPKNS1_25UsbAlternateInterfaceInfoE
@_ZN6device19UsbDeviceDescriptorC1Ev = hidden unnamed_addr alias void (%"struct.device::UsbDeviceDescriptor"*), void (%"struct.device::UsbDeviceDescriptor"*)* @_ZN6device19UsbDeviceDescriptorC2Ev
@_ZN6device19UsbDeviceDescriptorD1Ev = hidden unnamed_addr alias void (%"struct.device::UsbDeviceDescriptor"*), void (%"struct.device::UsbDeviceDescriptor"*)* @_ZN6device19UsbDeviceDescriptorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device21CombinedInterfaceInfoC2EPKNS_5mojom16UsbInterfaceInfoEPKNS1_25UsbAlternateInterfaceInfoE(%"struct.device::CombinedInterfaceInfo"* nocapture, %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.device::CombinedInterfaceInfo", %"struct.device::CombinedInterfaceInfo"* %0, i64 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* %1, %"class.device::mojom::UsbInterfaceInfo"** %4, align 8
  %5 = getelementptr inbounds %"struct.device::CombinedInterfaceInfo", %"struct.device::CombinedInterfaceInfo"* %0, i64 0, i32 1
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* %2, %"class.device::mojom::UsbAlternateInterfaceInfo"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6device21CombinedInterfaceInfo7IsValidEv(%"struct.device::CombinedInterfaceInfo"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.device::CombinedInterfaceInfo", %"struct.device::CombinedInterfaceInfo"* %0, i64 0, i32 0
  %3 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %2, align 8
  %4 = icmp eq %"class.device::mojom::UsbInterfaceInfo"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.device::CombinedInterfaceInfo", %"struct.device::CombinedInterfaceInfo"* %0, i64 0, i32 1
  %7 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %6, align 8
  %8 = icmp ne %"class.device::mojom::UsbAlternateInterfaceInfo"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19UsbDeviceDescriptorC2Ev(%"struct.device::UsbDeviceDescriptor"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 4
  %3 = bitcast %"struct.device::UsbDeviceDescriptor"* %0 to i32*
  store i32 0, i32* %3, align 8
  %4 = tail call i8* @_Znwm(i64 304) #14, !noalias !2
  %5 = bitcast i8* %4 to %"class.device::mojom::UsbDeviceInfo"*
  tail call void @_ZN6device5mojom13UsbDeviceInfoC1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %5) #15, !noalias !2
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.mojo::StructPtr.31"* %2 to i64*
  store i64 %6, i64* %7, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19UsbDeviceDescriptorD2Ev(%"struct.device::UsbDeviceDescriptor"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %2, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %2, align 8
  %4 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %3) #15
  %6 = bitcast %"class.device::mojom::UsbDeviceInfo"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device19UsbDeviceDescriptor5ParseEN4base4spanIKhLm18446744073709551615EEE(%"struct.device::UsbDeviceDescriptor"* nocapture, i64, i8*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.mojo::StructPtr.57", align 8
  %11 = alloca %"class.mojo::StructPtr.63", align 8
  %12 = alloca %"class.mojo::StructPtr.6", align 8
  %13 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 %1
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8* %2, i8* %2, i8* %15) #15
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %7, i8* %2, i8* %15, i8* %15) #15
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #15
  %18 = load i8*, i8** %14, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  br i1 %21, label %22, label %23

22:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  br label %312

23:                                               ; preds = %3
  %24 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %25 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  %26 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %27 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  %28 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = bitcast %"class.mojo::StructPtr.6"* %12 to i8*
  %33 = bitcast %"class.mojo::StructPtr.6"* %12 to i64*
  %34 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.mojo::StructPtr.63"* %11 to i8*
  %36 = bitcast %"class.mojo::StructPtr.63"* %11 to i64*
  %37 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::StructPtr.57"* %10 to i8*
  %40 = bitcast %"class.mojo::StructPtr.57"* %10 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %0, i64 0, i32 3
  br label %46

46:                                               ; preds = %23, %301
  %47 = phi %"class.device::mojom::UsbConfigurationInfo"* [ null, %23 ], [ %304, %301 ]
  %48 = phi %"class.device::mojom::UsbInterfaceInfo"* [ null, %23 ], [ %303, %301 ]
  %49 = phi %"class.device::mojom::UsbEndpointInfo"* [ null, %23 ], [ %302, %301 ]
  %50 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEixEl(%"class.base::CheckedContiguousIterator"* nonnull %6, i64 0)
  %51 = load i8, i8* %50, align 1
  %52 = icmp ult i8 %51, 2
  br i1 %52, label %308, label %53

53:                                               ; preds = %46
  %54 = zext i8 %51 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %13, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %9, i8* %2, i8* %15, i8* %15) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %25, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %24, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #15
  %55 = load i64, i64* %29, align 8
  %56 = load i64, i64* %31, align 8
  %57 = sub i64 %55, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %58 = icmp slt i64 %57, %54
  br i1 %58, label %308, label %59

59:                                               ; preds = %53
  %60 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %6, i64 %54)
  %61 = getelementptr inbounds i8, i8* %50, i64 1
  %62 = load i8, i8* %61, align 1
  switch i8 %62, label %273 [
    i8 1, label %63
    i8 2, label %140
    i8 4, label %187
    i8 5, label %224
  ]

63:                                               ; preds = %59
  %64 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %65 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %64, i64 0, i32 19
  %66 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %64, i64 0, i32 19, i32 0, i32 1
  %67 = bitcast %"class.mojo::StructPtr.57"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector.55"* %65 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp ne i64 %68, %70
  %72 = icmp ult i8 %51, 18
  %73 = or i1 %72, %71
  br i1 %73, label %308, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds i8, i8* %50, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = lshr i8 %76, 4
  %78 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %64, i64 0, i32 2
  store i8 %77, i8* %78, align 1
  %79 = load i8, i8* %75, align 1
  %80 = and i8 %79, 15
  %81 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %82 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %81, i64 0, i32 3
  store i8 %80, i8* %82, align 2
  %83 = getelementptr inbounds i8, i8* %50, i64 3
  %84 = load i8, i8* %83, align 1
  %85 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %86 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %85, i64 0, i32 1
  store i8 %84, i8* %86, align 8
  %87 = getelementptr inbounds i8, i8* %50, i64 4
  %88 = load i8, i8* %87, align 1
  %89 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %90 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %89, i64 0, i32 4
  store i8 %88, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %50, i64 5
  %92 = load i8, i8* %91, align 1
  %93 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %94 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %93, i64 0, i32 5
  store i8 %92, i8* %94, align 4
  %95 = getelementptr inbounds i8, i8* %50, i64 6
  %96 = load i8, i8* %95, align 1
  %97 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %98 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %97, i64 0, i32 6
  store i8 %96, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %50, i64 8
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = getelementptr inbounds i8, i8* %50, i64 9
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = shl nuw i16 %104, 8
  %106 = or i16 %105, %101
  %107 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %108 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %107, i64 0, i32 9
  store i16 %106, i16* %108, align 8
  %109 = getelementptr inbounds i8, i8* %50, i64 10
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = getelementptr inbounds i8, i8* %50, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = shl nuw i16 %114, 8
  %116 = or i16 %115, %111
  %117 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %118 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %117, i64 0, i32 10
  store i16 %116, i16* %118, align 2
  %119 = getelementptr inbounds i8, i8* %50, i64 12
  %120 = load i8, i8* %119, align 1
  %121 = lshr i8 %120, 4
  %122 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %123 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %122, i64 0, i32 12
  store i8 %121, i8* %123, align 1
  %124 = load i8, i8* %119, align 1
  %125 = and i8 %124, 15
  %126 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %127 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %126, i64 0, i32 13
  store i8 %125, i8* %127, align 2
  %128 = getelementptr inbounds i8, i8* %50, i64 13
  %129 = load i8, i8* %128, align 1
  %130 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %131 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %130, i64 0, i32 11
  store i8 %129, i8* %131, align 4
  %132 = getelementptr inbounds i8, i8* %50, i64 14
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %42, align 8
  %134 = getelementptr inbounds i8, i8* %50, i64 15
  %135 = load i8, i8* %134, align 1
  store i8 %135, i8* %43, align 1
  %136 = getelementptr inbounds i8, i8* %50, i64 16
  %137 = load i8, i8* %136, align 1
  store i8 %137, i8* %44, align 2
  %138 = getelementptr inbounds i8, i8* %50, i64 17
  %139 = load i8, i8* %138, align 1
  store i8 %139, i8* %45, align 1
  br label %301

140:                                              ; preds = %59
  %141 = icmp ult i8 %51, 9
  br i1 %141, label %308, label %142

142:                                              ; preds = %140
  %143 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %47, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %142
  call void @_ZN6device27AssignFirstInterfaceNumbersEPNS_5mojom20UsbConfigurationInfoE(%"class.device::mojom::UsbConfigurationInfo"* nonnull %47)
  call void @_ZN6device28AggregateInterfacesForConfigEPNS_5mojom20UsbConfigurationInfoE(%"class.device::mojom::UsbConfigurationInfo"* nonnull %47)
  br label %145

145:                                              ; preds = %142, %144
  %146 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %147 = getelementptr inbounds i8, i8* %50, i64 5
  %148 = load i8, i8* %147, align 1, !noalias !5
  %149 = getelementptr inbounds i8, i8* %50, i64 7
  %150 = load i8, i8* %149, align 1, !noalias !5
  %151 = getelementptr inbounds i8, i8* %50, i64 8
  %152 = load i8, i8* %151, align 1, !noalias !5
  %153 = lshr i8 %150, 1
  %154 = and i8 %153, 1
  %155 = lshr i8 %150, 2
  %156 = and i8 %155, 1
  %157 = call i8* @_Znwm(i64 96) #14, !noalias !8
  %158 = bitcast i8* %157 to %"class.device::mojom::UsbConfigurationInfo"*
  call void @_ZN6device5mojom20UsbConfigurationInfoC1Ev(%"class.device::mojom::UsbConfigurationInfo"* nonnull %158) #15, !noalias !8
  %159 = ptrtoint i8* %157 to i64
  store i64 %159, i64* %40, align 8, !alias.scope !8
  store i8 %148, i8* %157, align 8, !noalias !13
  %160 = getelementptr inbounds i8, i8* %157, i64 40
  store i8 %154, i8* %160, align 8, !noalias !13
  %161 = getelementptr inbounds i8, i8* %157, i64 41
  store i8 %156, i8* %161, align 1, !noalias !13
  %162 = getelementptr inbounds i8, i8* %157, i64 42
  store i8 %152, i8* %162, align 2, !noalias !13
  %163 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %146, i64 0, i32 19, i32 0, i32 1
  %164 = load %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"** %163, align 8
  %165 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %146, i64 0, i32 19, i32 0, i32 2, i32 0, i32 0
  %166 = load %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"** %165, align 8
  %167 = icmp ult %"class.mojo::StructPtr.57"* %164, %166
  br i1 %167, label %168, label %175

168:                                              ; preds = %145
  %169 = bitcast %"class.mojo::StructPtr.57"* %164 to i64*
  %170 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %170, align 8
  %171 = load i64, i64* %40, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %164, i64 1
  %173 = ptrtoint %"class.mojo::StructPtr.57"* %172 to i64
  %174 = bitcast %"class.mojo::StructPtr.57"** %163 to i64*
  store i64 %173, i64* %174, align 8
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %41, align 8
  br label %181

175:                                              ; preds = %145
  %176 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %146, i64 0, i32 19
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom20UsbConfigurationInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.55"* %176, %"class.mojo::StructPtr.57"* nonnull dereferenceable(8) %10) #15
  %177 = load %"class.device::mojom::UsbConfigurationInfo"*, %"class.device::mojom::UsbConfigurationInfo"** %41, align 8
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %41, align 8
  %178 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  call void @_ZN6device5mojom20UsbConfigurationInfoD1Ev(%"class.device::mojom::UsbConfigurationInfo"* nonnull %177) #15
  %180 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %177, i64 0, i32 0
  call void @_ZdlPv(i8* %180) #14
  br label %181

181:                                              ; preds = %168, %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  %182 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %38, align 8
  %183 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %182, i64 0, i32 19, i32 0, i32 1
  %184 = load %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"** %183, align 8
  %185 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %184, i64 -1, i32 0, i32 0, i32 0, i32 0
  %186 = load %"class.device::mojom::UsbConfigurationInfo"*, %"class.device::mojom::UsbConfigurationInfo"** %185, align 8
  br label %301

187:                                              ; preds = %59
  %188 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %47, null
  %189 = icmp ult i8 %51, 9
  %190 = or i1 %188, %189
  br i1 %190, label %308, label %191

191:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %192 = getelementptr inbounds i8, i8* %50, i64 2
  %193 = load i8, i8* %192, align 1, !noalias !14
  %194 = getelementptr inbounds i8, i8* %50, i64 3
  %195 = load i8, i8* %194, align 1, !noalias !14
  %196 = getelementptr inbounds i8, i8* %50, i64 5
  %197 = load i8, i8* %196, align 1, !noalias !14
  %198 = getelementptr inbounds i8, i8* %50, i64 6
  %199 = load i8, i8* %198, align 1, !noalias !14
  %200 = getelementptr inbounds i8, i8* %50, i64 7
  %201 = load i8, i8* %200, align 1, !noalias !14
  call void @_ZN6device24BuildUsbInterfaceInfoPtrEhhhhh(%"class.mojo::StructPtr.63"* nonnull sret %11, i8 zeroext %193, i8 zeroext %195, i8 zeroext %197, i8 zeroext %199, i8 zeroext %201) #15
  %202 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %47, i64 0, i32 5, i32 0, i32 1
  %203 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %202, align 8
  %204 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %47, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %205 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %204, align 8
  %206 = icmp ult %"class.mojo::StructPtr.63"* %203, %205
  br i1 %206, label %207, label %214

207:                                              ; preds = %191
  %208 = bitcast %"class.mojo::StructPtr.63"* %203 to i64*
  %209 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %203, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %209, align 8
  %210 = load i64, i64* %36, align 8
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %203, i64 1
  %212 = ptrtoint %"class.mojo::StructPtr.63"* %211 to i64
  %213 = bitcast %"class.mojo::StructPtr.63"** %202 to i64*
  store i64 %212, i64* %213, align 8
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %37, align 8
  br label %220

214:                                              ; preds = %191
  %215 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %47, i64 0, i32 5
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom16UsbInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.61"* %215, %"class.mojo::StructPtr.63"* nonnull dereferenceable(8) %11) #15
  %216 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %37, align 8
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %37, align 8
  %217 = icmp eq %"class.device::mojom::UsbInterfaceInfo"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  call void @_ZN6device5mojom16UsbInterfaceInfoD1Ev(%"class.device::mojom::UsbInterfaceInfo"* nonnull %216) #15
  %219 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %216, i64 0, i32 0
  call void @_ZdlPv(i8* %219) #14
  br label %220

220:                                              ; preds = %207, %214, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %221 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %202, align 8
  %222 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %221, i64 -1, i32 0, i32 0, i32 0, i32 0
  %223 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %222, align 8
  br label %301

224:                                              ; preds = %59
  %225 = icmp eq %"class.device::mojom::UsbInterfaceInfo"* %48, null
  %226 = icmp ult i8 %51, 7
  %227 = or i1 %225, %226
  br i1 %227, label %308, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %48, i64 0, i32 2, i32 0, i32 0
  %230 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %229, align 8
  %231 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %230, i64 0, i32 0, i32 0, i32 0, i32 0
  %232 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  %233 = getelementptr inbounds i8, i8* %50, i64 2
  %234 = load i8, i8* %233, align 1, !noalias !17
  %235 = getelementptr inbounds i8, i8* %50, i64 3
  %236 = load i8, i8* %235, align 1, !noalias !17
  %237 = getelementptr inbounds i8, i8* %50, i64 4
  %238 = load i8, i8* %237, align 1, !noalias !17
  %239 = zext i8 %238 to i16
  %240 = getelementptr inbounds i8, i8* %50, i64 5
  %241 = load i8, i8* %240, align 1, !noalias !17
  %242 = zext i8 %241 to i16
  %243 = shl nuw i16 %242, 8
  %244 = or i16 %243, %239
  %245 = getelementptr inbounds i8, i8* %50, i64 6
  %246 = load i8, i8* %245, align 1, !noalias !17
  call void @_ZN6device23BuildUsbEndpointInfoPtrEhhth(%"class.mojo::StructPtr.6"* nonnull sret %12, i8 zeroext %234, i8 zeroext %236, i16 zeroext %244, i8 zeroext %246) #15
  %247 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %232, i64 0, i32 5, i32 0, i32 1
  %248 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %247, align 8
  %249 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %232, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %250 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %249, align 8
  %251 = icmp ult %"class.mojo::StructPtr.6"* %248, %250
  br i1 %251, label %252, label %259

252:                                              ; preds = %228
  %253 = bitcast %"class.mojo::StructPtr.6"* %248 to i64*
  %254 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %248, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %254, align 8
  %255 = load i64, i64* %33, align 8
  store i64 %255, i64* %253, align 8
  %256 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %248, i64 1
  %257 = ptrtoint %"class.mojo::StructPtr.6"* %256 to i64
  %258 = bitcast %"class.mojo::StructPtr.6"** %247 to i64*
  store i64 %257, i64* %258, align 8
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %34, align 8
  br label %265

259:                                              ; preds = %228
  %260 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %232, i64 0, i32 5
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom15UsbEndpointInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"* %260, %"class.mojo::StructPtr.6"* nonnull dereferenceable(8) %12) #15
  %261 = load %"class.device::mojom::UsbEndpointInfo"*, %"class.device::mojom::UsbEndpointInfo"** %34, align 8
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %34, align 8
  %262 = icmp eq %"class.device::mojom::UsbEndpointInfo"* %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %259
  call void @_ZN6device5mojom15UsbEndpointInfoD1Ev(%"class.device::mojom::UsbEndpointInfo"* nonnull %261) #15
  %264 = getelementptr inbounds %"class.device::mojom::UsbEndpointInfo", %"class.device::mojom::UsbEndpointInfo"* %261, i64 0, i32 0
  call void @_ZdlPv(i8* %264) #14
  br label %265

265:                                              ; preds = %252, %259, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  %266 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %229, align 8
  %267 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %268 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %267, align 8
  %269 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %268, i64 0, i32 5, i32 0, i32 1
  %270 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %269, align 8
  %271 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %270, i64 -1, i32 0, i32 0, i32 0, i32 0
  %272 = load %"class.device::mojom::UsbEndpointInfo"*, %"class.device::mojom::UsbEndpointInfo"** %271, align 8
  br label %301

273:                                              ; preds = %59
  %274 = icmp eq %"class.device::mojom::UsbEndpointInfo"* %49, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"class.device::mojom::UsbEndpointInfo", %"class.device::mojom::UsbEndpointInfo"* %49, i64 0, i32 7
  %277 = getelementptr inbounds %"class.device::mojom::UsbEndpointInfo", %"class.device::mojom::UsbEndpointInfo"* %49, i64 0, i32 7, i32 0, i32 1
  %278 = load i8*, i8** %277, align 8
  %279 = getelementptr inbounds i8, i8* %50, i64 %54
  %280 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.10"* %276, i8* %278, i8* %50, i8* %279)
  br label %301

281:                                              ; preds = %273
  %282 = icmp eq %"class.device::mojom::UsbInterfaceInfo"* %48, null
  br i1 %282, label %293, label %283

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %48, i64 0, i32 2, i32 0, i32 0
  %285 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %284, align 8
  %286 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %285, i64 0, i32 0, i32 0, i32 0, i32 0
  %287 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %286, align 8
  %288 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %287, i64 0, i32 6
  %289 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %287, i64 0, i32 6, i32 0, i32 1
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr inbounds i8, i8* %50, i64 %54
  %292 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.10"* %288, i8* %290, i8* %50, i8* %291)
  br label %301

293:                                              ; preds = %281
  %294 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %47, null
  br i1 %294, label %301, label %295

295:                                              ; preds = %293
  %296 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %47, i64 0, i32 6
  %297 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %47, i64 0, i32 6, i32 0, i32 1
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr inbounds i8, i8* %50, i64 %54
  %300 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.10"* %296, i8* %298, i8* %50, i8* %299)
  br label %301

301:                                              ; preds = %74, %181, %220, %265, %283, %295, %275, %293
  %302 = phi %"class.device::mojom::UsbEndpointInfo"* [ %49, %275 ], [ null, %283 ], [ null, %295 ], [ null, %293 ], [ %272, %265 ], [ null, %220 ], [ null, %181 ], [ %49, %74 ]
  %303 = phi %"class.device::mojom::UsbInterfaceInfo"* [ %48, %275 ], [ %48, %283 ], [ null, %295 ], [ null, %293 ], [ %48, %265 ], [ %223, %220 ], [ null, %181 ], [ %48, %74 ]
  %304 = phi %"class.device::mojom::UsbConfigurationInfo"* [ %47, %275 ], [ %47, %283 ], [ %47, %295 ], [ null, %293 ], [ %47, %265 ], [ %47, %220 ], [ %186, %181 ], [ %47, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %7, i8* %2, i8* %15, i8* %15) #15
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #15
  %305 = load i8*, i8** %14, align 8
  %306 = load i8*, i8** %19, align 8
  %307 = icmp eq i8* %305, %306
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  br i1 %307, label %309, label %46

308:                                              ; preds = %46, %53, %63, %140, %187, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  br label %312

309:                                              ; preds = %301
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  %310 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %304, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %309
  call void @_ZN6device27AssignFirstInterfaceNumbersEPNS_5mojom20UsbConfigurationInfoE(%"class.device::mojom::UsbConfigurationInfo"* nonnull %304)
  call void @_ZN6device28AggregateInterfacesForConfigEPNS_5mojom20UsbConfigurationInfoE(%"class.device::mojom::UsbConfigurationInfo"* nonnull %304)
  br label %312

312:                                              ; preds = %22, %308, %311, %309
  %313 = phi i1 [ false, %308 ], [ true, %309 ], [ true, %311 ], [ true, %22 ]
  ret i1 %313
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEixEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp slt i64 %1, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 183, %"class.logging::CheckOpResult"* nonnull %5) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %28, %31
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = icmp sgt i64 %32, %1
  br i1 %34, label %35, label %36

35:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* null, i8** %25, align 8
  br label %45

36:                                               ; preds = %23
  %37 = call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #15
  %38 = call i8* @_ZN7logging15CheckOpValueStrEl(i64 %32) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* %37, i8* %38) #15
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* %40, i8** %25, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 184, %"class.logging::CheckOpResult"* nonnull %7) #15
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  br label %45

45:                                               ; preds = %35, %36, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %46 = load i8*, i8** %29, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %1
  ret i8* %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp slt i64 %19, %1
  br i1 %21, label %23, label %22

22:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %12, align 8
  br label %54

23:                                               ; preds = %10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #15
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %19) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %24, i8* %25) #15
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %12, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %54, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #15
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %54

32:                                               ; preds = %2
  %33 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = sub nsw i64 0, %1
  %36 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp slt i64 %41, %35
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %34, align 8
  br label %54

45:                                               ; preds = %32
  %46 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %35) #15
  %47 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %41) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %34, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %51, %45, %44, %29, %23, %22
  %55 = phi i8* [ %11, %22 ], [ %11, %23 ], [ %11, %29 ], [ %33, %44 ], [ %33, %45 ], [ %33, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  %56 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %1
  store i8* %58, i8** %56, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device27AssignFirstInterfaceNumbersEPNS_5mojom20UsbConfigurationInfoE(%"class.device::mojom::UsbConfigurationInfo"* nocapture readonly) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::vector.122", align 8
  %3 = bitcast %"class.std::__1::vector.122"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #15
  %6 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 6
  call fastcc void @_ZN6device12_GLOBAL__N_136ParseInterfaceAssociationDescriptorsERKNSt3__16vectorIhNS1_9allocatorIhEEEEPNS2_INS0_33UsbInterfaceAssociationDescriptorENS3_IS8_EEEE(%"class.std::__1::vector.10"* dereferenceable(24) %6, %"class.std::__1::vector.122"* nonnull %2)
  %7 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %7, align 8
  %9 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %9, align 8
  %11 = icmp eq %"class.mojo::StructPtr.63"* %8, %10
  br i1 %11, label %12, label %19

12:                                               ; preds = %38, %1
  %13 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %4, align 8
  %14 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %5, align 8
  call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEvT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %13, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %14) #15
  %15 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %4, align 8
  %16 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %7, align 8
  %17 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %9, align 8
  %18 = icmp eq %"class.mojo::StructPtr.63"* %16, %17
  br i1 %18, label %115, label %48

19:                                               ; preds = %1, %38
  %20 = phi %"class.mojo::StructPtr.63"* [ %39, %38 ], [ %8, %1 ]
  %21 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %21, align 8
  %23 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %25 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %25, align 8
  %27 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %26, i64 0, i32 6
  call fastcc void @_ZN6device12_GLOBAL__N_136ParseInterfaceAssociationDescriptorsERKNSt3__16vectorIhNS1_9allocatorIhEEEEPNS2_INS0_33UsbInterfaceAssociationDescriptorENS3_IS8_EEEE(%"class.std::__1::vector.10"* dereferenceable(24) %27, %"class.std::__1::vector.122"* nonnull %2)
  %28 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %21, align 8
  %29 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %29, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %31, align 8
  %33 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %32, i64 0, i32 5, i32 0, i32 0
  %34 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %33, align 8
  %35 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %32, i64 0, i32 5, i32 0, i32 1
  %36 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %35, align 8
  %37 = icmp eq %"class.mojo::StructPtr.6"* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %41, %19
  %39 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %20, i64 1
  %40 = icmp eq %"class.mojo::StructPtr.63"* %39, %10
  br i1 %40, label %12, label %19

41:                                               ; preds = %19, %41
  %42 = phi %"class.mojo::StructPtr.6"* [ %46, %41 ], [ %34, %19 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.device::mojom::UsbEndpointInfo"*, %"class.device::mojom::UsbEndpointInfo"** %43, align 8
  %45 = getelementptr inbounds %"class.device::mojom::UsbEndpointInfo", %"class.device::mojom::UsbEndpointInfo"* %44, i64 0, i32 7
  call fastcc void @_ZN6device12_GLOBAL__N_136ParseInterfaceAssociationDescriptorsERKNSt3__16vectorIhNS1_9allocatorIhEEEEPNS2_INS0_33UsbInterfaceAssociationDescriptorENS3_IS8_EEEE(%"class.std::__1::vector.10"* dereferenceable(24) %45, %"class.std::__1::vector.122"* nonnull %2)
  %46 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %42, i64 1
  %47 = icmp eq %"class.mojo::StructPtr.6"* %46, %36
  br i1 %47, label %38, label %41

48:                                               ; preds = %12, %107
  %49 = phi %"class.mojo::StructPtr.63"* [ %108, %107 ], [ %17, %12 ]
  %50 = phi i8 [ %111, %107 ], [ 0, %12 ]
  %51 = phi %"class.mojo::StructPtr.63"* [ %110, %107 ], [ %16, %12 ]
  %52 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %109, %107 ], [ %15, %12 ]
  %53 = icmp eq i8 %50, 0
  br i1 %53, label %83, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %55, align 8
  %57 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %56, i64 0, i32 0
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq %"class.mojo::StructPtr.63"* %51, %49
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, i64 0, i32 0
  br label %69

62:                                               ; preds = %77, %69, %54
  %63 = phi %"class.mojo::StructPtr.63"* [ %49, %54 ], [ %74, %69 ], [ %75, %77 ]
  %64 = phi %"class.mojo::StructPtr.63"* [ %49, %54 ], [ %74, %69 ], [ %74, %77 ]
  %65 = add i8 %50, -1
  %66 = icmp eq i8 %65, 0
  %67 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, i64 1
  %68 = select i1 %66, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %67, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52
  br label %107

69:                                               ; preds = %60, %77
  %70 = phi %"class.mojo::StructPtr.63"* [ %51, %60 ], [ %74, %77 ]
  %71 = phi %"class.device::mojom::UsbInterfaceInfo"* [ %56, %60 ], [ %79, %77 ]
  %72 = load i8, i8* %61, align 1
  %73 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %71, i64 0, i32 1
  store i8 %72, i8* %73, align 1
  %74 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %70, i64 1
  %75 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %9, align 8
  %76 = icmp eq %"class.mojo::StructPtr.63"* %74, %75
  br i1 %76, label %62, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %78, align 8
  %80 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %79, i64 0, i32 0
  %81 = load i8, i8* %80, align 8
  %82 = icmp eq i8 %81, %58
  br i1 %82, label %69, label %62

83:                                               ; preds = %48
  %84 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %5, align 8
  %85 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, %84
  br i1 %85, label %105, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %87, align 8
  %89 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %88, i64 0, i32 0
  %90 = load i8, i8* %89, align 8
  %91 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, i64 0, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %90, %92
  br i1 %93, label %94, label %105

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %88, i64 0, i32 1
  store i8 %90, i8* %95, align 1
  %96 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, i64 0, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp ugt i8 %97, 1
  %99 = add i8 %97, -1
  %100 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, i64 1
  %101 = select i1 %98, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %52, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %100
  %102 = select i1 %98, i8 %99, i8 0
  %103 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %51, i64 1
  %104 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %9, align 8
  br label %107

105:                                              ; preds = %83, %86
  %106 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %51, i64 1
  br label %107

107:                                              ; preds = %62, %94, %105
  %108 = phi %"class.mojo::StructPtr.63"* [ %104, %94 ], [ %49, %105 ], [ %63, %62 ]
  %109 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %101, %94 ], [ %52, %105 ], [ %68, %62 ]
  %110 = phi %"class.mojo::StructPtr.63"* [ %103, %94 ], [ %106, %105 ], [ %64, %62 ]
  %111 = phi i8 [ %102, %94 ], [ 0, %105 ], [ %65, %62 ]
  %112 = icmp eq %"class.mojo::StructPtr.63"* %110, %108
  br i1 %112, label %113, label %48

113:                                              ; preds = %107
  %114 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %4, align 8
  br label %115

115:                                              ; preds = %113, %12
  %116 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %114, %113 ], [ %15, %12 ]
  %117 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %115
  %119 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %116 to i64
  %120 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %5 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %116, i64 0, i32 0
  call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device28AggregateInterfacesForConfigEPNS_5mojom20UsbConfigurationInfoE(%"class.device::mojom::UsbConfigurationInfo"*) local_unnamed_addr #2 {
  %2 = alloca %"class.std::__1::map.109", align 8
  %3 = bitcast %"class.std::__1::map.109"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.std::__1::map.109", %"class.std::__1::map.109"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map.109", %"class.std::__1::map.109"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.109", %"class.std::__1::map.109"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.109", %"class.std::__1::map.109"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %4, align 8
  %9 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5
  %10 = bitcast %"class.std::__1::vector.61"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %13 = bitcast %"class.mojo::StructPtr.63"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.61"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  store %"class.mojo::StructPtr.63"* null, %"class.mojo::StructPtr.63"** %12, align 8
  %17 = sub i64 %14, %11
  %18 = ashr exact i64 %17, 3
  %19 = icmp eq i64 %17, 0
  %20 = inttoptr i64 %11 to %"class.mojo::StructPtr.63"*
  br i1 %19, label %25, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.237"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %24 = bitcast %"class.std::__1::map.109"* %2 to i64*
  br label %46

25:                                               ; preds = %173, %1
  %26 = icmp eq i64 %11, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %25
  %28 = inttoptr i64 %14 to %"class.mojo::StructPtr.63"*
  %29 = icmp eq %"class.mojo::StructPtr.63"* %28, %20
  br i1 %29, label %40, label %30

30:                                               ; preds = %27, %38
  %31 = phi %"class.mojo::StructPtr.63"* [ %32, %38 ], [ %28, %27 ]
  %32 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %31, i64 -1
  %33 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %33, align 8
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %33, align 8
  %35 = icmp eq %"class.device::mojom::UsbInterfaceInfo"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  call void @_ZN6device5mojom16UsbInterfaceInfoD1Ev(%"class.device::mojom::UsbInterfaceInfo"* nonnull %34) #15
  %37 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %34, i64 0, i32 0
  call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %36, %30
  %39 = icmp eq %"class.mojo::StructPtr.63"* %32, %20
  br i1 %39, label %40, label %30

40:                                               ; preds = %38, %27
  %41 = inttoptr i64 %11 to i8*
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %25, %40
  %43 = getelementptr inbounds %"class.std::__1::map.109", %"class.std::__1::map.109"* %2, i64 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.237"**
  %45 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %44, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.110"* nonnull %43, %"class.std::__1::__tree_node.237"* %45) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #15
  ret void

46:                                               ; preds = %176, %21
  %47 = phi %"class.std::__1::__tree_node.237"* [ null, %21 ], [ %177, %176 ]
  %48 = phi i64 [ 0, %21 ], [ %174, %176 ]
  %49 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %20, i64 %48
  %50 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node.237"* %47, null
  br i1 %52, label %77, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %51, i64 0, i32 0
  %55 = load i8, i8* %54, align 1
  br label %56

56:                                               ; preds = %56, %53
  %57 = phi %"class.std::__1::__tree_end_node"* [ %7, %53 ], [ %67, %56 ]
  %58 = phi %"class.std::__1::__tree_node.237"* [ %47, %53 ], [ %68, %56 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %58, i64 0, i32 1, i32 0, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp ult i8 %60, %55
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %58, i64 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.std::__1::__tree_node.237"**
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %58, i64 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_node.237"* %58 to %"class.std::__1::__tree_node.237"**
  %66 = select i1 %61, %"class.std::__1::__tree_node.237"** %63, %"class.std::__1::__tree_node.237"** %65
  %67 = select i1 %61, %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"* %64
  %68 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %66, align 8
  %69 = icmp eq %"class.std::__1::__tree_node.237"* %68, null
  br i1 %69, label %70, label %56

70:                                               ; preds = %56
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %67, %7
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8*
  %75 = load i8, i8* %74, align 1
  %76 = icmp ult i8 %55, %75
  br i1 %76, label %77, label %152

77:                                               ; preds = %72, %70, %46
  %78 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %12, align 8
  %79 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %15, align 8
  %80 = icmp ult %"class.mojo::StructPtr.63"* %78, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %77
  %82 = bitcast %"class.mojo::StructPtr.63"* %78 to i64*
  %83 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %83, align 8
  %84 = bitcast %"class.mojo::StructPtr.63"* %49 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  store i64 0, i64* %84, align 8
  %86 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %78, i64 1
  %87 = ptrtoint %"class.mojo::StructPtr.63"* %86 to i64
  store i64 %87, i64* %13, align 8
  br label %90

88:                                               ; preds = %77
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom16UsbInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.61"* %9, %"class.mojo::StructPtr.63"* dereferenceable(8) %49) #15
  %89 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %12, align 8
  br label %90

90:                                               ; preds = %81, %88
  %91 = phi %"class.mojo::StructPtr.63"* [ %86, %81 ], [ %89, %88 ]
  %92 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %91, i64 -1, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %92, align 8
  %94 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %93, i64 0, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = ptrtoint %"class.device::mojom::UsbInterfaceInfo"* %93 to i64
  %97 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %22, align 8
  %98 = icmp eq %"class.std::__1::__tree_node.237"* %97, null
  br i1 %98, label %125, label %99

99:                                               ; preds = %90, %121
  %100 = phi %"class.std::__1::__tree_node.237"* [ %124, %121 ], [ %97, %90 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %123, %121 ], [ %5, %90 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %100, i64 0, i32 1, i32 0, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp ult i8 %95, %103
  br i1 %104, label %105, label %111

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %100, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %121

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %100, i64 0, i32 0, i32 0
  br label %125

111:                                              ; preds = %99
  %112 = icmp ult i8 %103, %95
  br i1 %112, label %113, label %119

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %100, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, null
  br i1 %116, label %117, label %121

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %100, i64 0, i32 0, i32 0
  br label %125

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %100, i64 0, i32 0, i32 0
  br label %125

121:                                              ; preds = %113, %105
  %122 = phi %"class.std::__1::__tree_node_base"* [ %107, %105 ], [ %115, %113 ]
  %123 = phi %"class.std::__1::__tree_node_base"** [ %106, %105 ], [ %114, %113 ]
  %124 = bitcast %"class.std::__1::__tree_node_base"* %122 to %"class.std::__1::__tree_node.237"*
  br label %99

125:                                              ; preds = %90, %119, %117, %109
  %126 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %118, %117 ], [ %120, %119 ], [ %7, %90 ]
  %127 = phi %"class.std::__1::__tree_node_base"** [ %106, %109 ], [ %114, %117 ], [ %101, %119 ], [ %23, %90 ]
  %128 = bitcast %"class.std::__1::__tree_node_base"** %127 to %"class.std::__1::__tree_node.237"**
  %129 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node.237"* %129, null
  br i1 %130, label %131, label %173

131:                                              ; preds = %125
  %132 = call i8* @_Znwm(i64 48) #14, !noalias !20
  %133 = getelementptr inbounds i8, i8* %132, i64 32
  store i8 %95, i8* %133, align 8, !noalias !20
  %134 = getelementptr inbounds i8, i8* %132, i64 40
  %135 = bitcast i8* %134 to i64*
  store i64 %96, i64* %135, align 8, !noalias !20
  %136 = bitcast i8* %132 to %"class.std::__1::__tree_node_base"*
  %137 = getelementptr inbounds i8, i8* %132, i64 16
  %138 = bitcast i8* %137 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %126, %"class.std::__1::__tree_end_node"** %138, align 8
  %139 = bitcast %"class.std::__1::__tree_node_base"** %127 to i8**
  store i8* %132, i8** %139, align 8
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %131
  %145 = ptrtoint %"class.std::__1::__tree_node_base"* %142 to i64
  store i64 %145, i64* %24, align 8
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  br label %147

147:                                              ; preds = %144, %131
  %148 = phi %"class.std::__1::__tree_node_base"* [ %136, %131 ], [ %146, %144 ]
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %149, %"class.std::__1::__tree_node_base"* %148) #15
  %150 = load i64, i64* %6, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %6, align 8
  br label %173

152:                                              ; preds = %72
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 5
  %154 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.device::mojom::UsbInterfaceInfo"**
  %155 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %154, align 8
  %156 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %51, i64 0, i32 2, i32 0, i32 0
  %157 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %156, align 8
  %158 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %155, i64 0, i32 2, i32 0, i32 1
  %159 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %158, align 8
  %160 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %155, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %161 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %160, align 8
  %162 = icmp ult %"class.mojo::StructPtr"* %159, %161
  br i1 %162, label %163, label %171

163:                                              ; preds = %152
  %164 = bitcast %"class.mojo::StructPtr"* %159 to i64*
  %165 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %165, align 8
  %166 = bitcast %"class.mojo::StructPtr"* %157 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %164, align 8
  store i64 0, i64* %166, align 8
  %168 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %159, i64 1
  %169 = ptrtoint %"class.mojo::StructPtr"* %168 to i64
  %170 = bitcast %"class.mojo::StructPtr"** %158 to i64*
  store i64 %169, i64* %170, align 8
  br label %173

171:                                              ; preds = %152
  %172 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %155, i64 0, i32 2
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom25UsbAlternateInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %172, %"class.mojo::StructPtr"* dereferenceable(8) %157) #15
  br label %173

173:                                              ; preds = %147, %125, %171, %163
  %174 = add nuw i64 %48, 1
  %175 = icmp ult i64 %174, %18
  br i1 %175, label %176, label %25

176:                                              ; preds = %173
  %177 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %22, align 8
  br label %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device28BuildUsbConfigurationInfoPtrEPKh(%"class.mojo::StructPtr.57"* noalias nocapture sret, i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 5
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds i8, i8* %1, i64 7
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = load i8, i8* %7, align 1
  %9 = lshr i8 %6, 1
  %10 = and i8 %9, 1
  %11 = lshr i8 %6, 2
  %12 = and i8 %11, 1
  %13 = tail call i8* @_Znwm(i64 96) #14, !noalias !23
  %14 = bitcast i8* %13 to %"class.device::mojom::UsbConfigurationInfo"*
  tail call void @_ZN6device5mojom20UsbConfigurationInfoC1Ev(%"class.device::mojom::UsbConfigurationInfo"* nonnull %14) #15, !noalias !23
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.mojo::StructPtr.57"* %0 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !23
  store i8 %4, i8* %13, align 8, !noalias !28
  %17 = getelementptr inbounds i8, i8* %13, i64 40
  store i8 %10, i8* %17, align 8, !noalias !28
  %18 = getelementptr inbounds i8, i8* %13, i64 41
  store i8 %12, i8* %18, align 1, !noalias !28
  %19 = getelementptr inbounds i8, i8* %13, i64 42
  store i8 %8, i8* %19, align 2, !noalias !28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device24BuildUsbInterfaceInfoPtrEPKh(%"class.mojo::StructPtr.63"* noalias nocapture sret, i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds i8, i8* %1, i64 3
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 5
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds i8, i8* %1, i64 6
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds i8, i8* %1, i64 7
  %12 = load i8, i8* %11, align 1
  tail call void @_ZN6device24BuildUsbInterfaceInfoPtrEhhhhh(%"class.mojo::StructPtr.63"* sret %0, i8 zeroext %4, i8 zeroext %6, i8 zeroext %8, i8 zeroext %10, i8 zeroext %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device23BuildUsbEndpointInfoPtrEPKh(%"class.mojo::StructPtr.6"* noalias nocapture sret, i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds i8, i8* %1, i64 3
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 4
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = getelementptr inbounds i8, i8* %1, i64 5
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i16
  %13 = shl nuw i16 %12, 8
  %14 = or i16 %13, %9
  %15 = getelementptr inbounds i8, i8* %1, i64 6
  %16 = load i8, i8* %15, align 1
  tail call void @_ZN6device23BuildUsbEndpointInfoPtrEhhth(%"class.mojo::StructPtr.6"* sret %0, i8 zeroext %4, i8 zeroext %6, i16 zeroext %14, i8 zeroext %16)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.10"*, i8*, i8*, i8*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #15
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !29
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !29
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !32, !noalias !29
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !32, !noalias !29
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !29
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !29
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !32, !noalias !29
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !32, !noalias !29
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !29
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !29
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !32, !noalias !29
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !32, !noalias !29
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !29
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !29
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !32, !noalias !29
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !32, !noalias !29
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !34

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !29
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !29
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !32, !noalias !29
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !32, !noalias !29
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !36

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #15
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !38

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #15
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #16
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #14
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !39
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !39
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !42, !noalias !39
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !42, !noalias !39
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !39
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !39
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !42, !noalias !39
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !42, !noalias !39
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !39
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !39
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !42, !noalias !39
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !42, !noalias !39
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !39
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !39
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !42, !noalias !39
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !42, !noalias !39
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !44

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !39
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !39
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !42, !noalias !39
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !42, !noalias !39
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !45

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !46

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #15
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !47
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !47
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !50, !noalias !47
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !50, !noalias !47
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !47
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !47
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !50, !noalias !47
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !50, !noalias !47
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !47
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !47
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !50, !noalias !47
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !50, !noalias !47
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !47
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !47
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !50, !noalias !47
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !50, !noalias !47
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !52

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !47
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !47
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !50, !noalias !47
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !50, !noalias !47
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !53

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !54

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #14
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18ReadUsbDescriptorsE13scoped_refptrINS_15UsbDeviceHandleEEN4base12OnceCallbackIFvNSt3__110unique_ptrINS_19UsbDeviceDescriptorENS5_14default_deleteIS7_EEEEEEE(%"class.device::UsbDeviceHandle"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #2 {
  %3 = alloca %"class.base::OnceCallback.92", align 8
  %4 = tail call i8* @_Znwm(i64 40) #14
  %5 = bitcast i8* %4 to %"class.base::RefCountedBytes"*
  tail call void @_ZN4base15RefCountedBytesC1Em(%"class.base::RefCountedBytes"* nonnull %5, i64 18) #15
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = ptrtoint i8* %4 to i64
  %10 = atomicrmw add i32* %7, i32 1 monotonic
  %11 = tail call i8* @_Znwm(i64 56) #14, !noalias !55
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90*, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS8_14default_deleteISA_EEEEEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJS6_SF_EEEFvSH_SJ_mEE7RunOnceEPNS0_13BindStateBaseESH_OSJ_m to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS3_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEEEEENS3_5mojom17UsbTransferStatusES2_INS_15RefCountedBytesEEmEJS5_SE_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !55
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 ptrtoint (void (%"class.device::UsbDeviceHandle"*, %"class.base::OnceCallback"*, i32, %"class.base::RefCountedBytes"*, i64)* @_ZN6device12_GLOBAL__N_122OnReadDeviceDescriptorE13scoped_refptrINS_15UsbDeviceHandleEEN4base12OnceCallbackIFvNSt3__110unique_ptrINS_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEEEEENS_5mojom17UsbTransferStatusES1_INS4_15RefCountedBytesEEm to i64), i64* %14, align 8, !noalias !55
  %15 = getelementptr inbounds i8, i8* %11, i64 40
  %16 = bitcast i8* %15 to %"class.device::UsbDeviceHandle"**
  store %"class.device::UsbDeviceHandle"* %0, %"class.device::UsbDeviceHandle"** %16, align 8, !noalias !55
  %17 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !55
  br label %21

21:                                               ; preds = %18, %2
  %22 = getelementptr inbounds i8, i8* %11, i64 48
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !55
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8, !noalias !55
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8, !noalias !55
  %27 = bitcast %"class.base::OnceCallback.92"* %3 to i8**
  store i8* %11, i8** %27, align 8, !alias.scope !55
  %28 = bitcast %"class.device::UsbDeviceHandle"* %0 to void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)***
  %29 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)**, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %29, i64 8
  %31 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %30, align 8
  call void %31(%"class.device::UsbDeviceHandle"* %0, i32 0, i32 0, i32 0, i8 zeroext 6, i16 zeroext 256, i16 zeroext 0, i64 %9, i32 2000, %"class.base::OnceCallback.92"* nonnull %3) #15
  %32 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #15
  %33 = atomicrmw sub i32* %7, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %21
  %36 = bitcast i8* %4 to %"class.base::RefCountedMemory"*
  %37 = bitcast i8* %4 to void (%"class.base::RefCountedMemory"*)***
  %38 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, i64 3
  %40 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %39, align 8
  call void %40(%"class.base::RefCountedMemory"* nonnull %36) #15
  br label %41

41:                                               ; preds = %21, %35
  br i1 %17, label %54, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.device::UsbDeviceHandle"*
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %48 to void (%"class.device::UsbDeviceHandle"*)***
  %51 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %51, i64 14
  %53 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %52, align 8
  call void %53(%"class.device::UsbDeviceHandle"* nonnull %49) #15
  br label %54

54:                                               ; preds = %41, %42, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_122OnReadDeviceDescriptorE13scoped_refptrINS_15UsbDeviceHandleEEN4base12OnceCallbackIFvNSt3__110unique_ptrINS_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEEEEENS_5mojom17UsbTransferStatusES1_INS4_15RefCountedBytesEEm(%"class.device::UsbDeviceHandle"*, %"class.base::OnceCallback"* nocapture, i32, %"class.base::RefCountedBytes"*, i64) #2 {
  %6 = alloca %"class.std::__1::unique_ptr.133", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.std::__1::unique_ptr.133", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.std::__1::unique_ptr.133", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.logging::LogMessage", align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = alloca %"class.base::RepeatingCallback", align 8
  %15 = alloca %"class.base::OnceCallback.140", align 8
  %16 = alloca %"class.base::OnceCallback.92", align 8
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %5
  %19 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast %"class.logging::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %21) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %12, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 153, i32 2) #15
  %22 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %12, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %22 to %"class.std::__1::basic_ostream"*
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i64 33) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %21) #15
  br label %25

25:                                               ; preds = %18, %20
  %26 = bitcast %"class.std::__1::unique_ptr.133"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %10, i64 0, i32 0, i32 0, i32 0
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %27, align 8
  %28 = bitcast %"class.base::OnceCallback"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback"* %11 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  %34 = inttoptr i64 %31 to %"class.base::internal::BindStateBase"*
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)**
  %37 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)** %36, align 8
  call void %37(%"class.base::internal::BindStateBase"* %34, %"class.std::__1::unique_ptr.133"* nonnull dereferenceable(8) %10) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  %38 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %27, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %27, align 8
  %39 = icmp eq %"struct.device::UsbDeviceDescriptor"* %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %38, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %41, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %41, align 8
  %43 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %42) #15
  %45 = bitcast %"class.device::mojom::UsbDeviceInfo"* %42 to i8*
  call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %38, i64 0, i32 0
  call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %25, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  br label %199

49:                                               ; preds = %5
  %50 = tail call i8* @_Znwm(i64 16) #14
  %51 = bitcast i8* %50 to %"struct.device::UsbDeviceDescriptor"*
  %52 = getelementptr inbounds i8, i8* %50, i64 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 8
  %54 = tail call i8* @_Znwm(i64 304) #14, !noalias !60
  %55 = bitcast i8* %54 to %"class.device::mojom::UsbDeviceInfo"*
  tail call void @_ZN6device5mojom13UsbDeviceInfoC1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %55) #15, !noalias !60
  %56 = ptrtoint i8* %54 to i64
  %57 = bitcast i8* %52 to i64*
  store i64 %56, i64* %57, align 8, !alias.scope !60
  %58 = ptrtoint i8* %50 to i64
  %59 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %3, i64 0, i32 1, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = tail call zeroext i1 @_ZN6device19UsbDeviceDescriptor5ParseEN4base4spanIKhLm18446744073709551615EEE(%"struct.device::UsbDeviceDescriptor"* nonnull %51, i64 %4, i8* %60)
  br i1 %61, label %92, label %62

62:                                               ; preds = %49
  %63 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %63, label %64, label %69

64:                                               ; preds = %62
  %65 = bitcast %"class.logging::LogMessage"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %65) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 160, i32 2) #15
  %66 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %67 = bitcast %"class.std::__1::basic_ostringstream"* %66 to %"class.std::__1::basic_ostream"*
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i64 32) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %65) #15
  br label %69

69:                                               ; preds = %62, %64
  %70 = bitcast %"class.std::__1::unique_ptr.133"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70)
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %8, i64 0, i32 0, i32 0, i32 0
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %71, align 8
  %72 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  %77 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %78 = inttoptr i64 %75 to %"class.base::internal::BindStateBase"*
  %79 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %78, i64 0, i32 1
  %80 = bitcast void ()** %79 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)**
  %81 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)** %80, align 8
  call void %81(%"class.base::internal::BindStateBase"* %78, %"class.std::__1::unique_ptr.133"* nonnull dereferenceable(8) %8) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  %82 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %71, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %71, align 8
  %83 = icmp eq %"struct.device::UsbDeviceDescriptor"* %82, null
  br i1 %83, label %192, label %84

84:                                               ; preds = %69
  %85 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %82, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %85, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %85, align 8
  %87 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %86) #15
  %89 = bitcast %"class.device::mojom::UsbDeviceInfo"* %86 to i8*
  call void @_ZdlPv(i8* %89) #14
  br label %90

90:                                               ; preds = %88, %84
  %91 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %82, i64 0, i32 0
  call void @_ZdlPv(i8* %91) #14
  br label %192

92:                                               ; preds = %49
  %93 = getelementptr inbounds i8, i8* %50, i64 3
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %121

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::unique_ptr.133"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %6, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr.133"* %6 to i8**
  store i8* %50, i8** %99, align 8
  %100 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #15
  %101 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %101, align 8
  %105 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %106 = inttoptr i64 %103 to %"class.base::internal::BindStateBase"*
  %107 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %106, i64 0, i32 1
  %108 = bitcast void ()** %107 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)**
  %109 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)** %108, align 8
  call void %109(%"class.base::internal::BindStateBase"* %106, %"class.std::__1::unique_ptr.133"* nonnull dereferenceable(8) %6) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %105) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #15
  %110 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %98, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %98, align 8
  %111 = icmp eq %"struct.device::UsbDeviceDescriptor"* %110, null
  br i1 %111, label %120, label %112

112:                                              ; preds = %96
  %113 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %110, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %114 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %113, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %113, align 8
  %115 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %114) #15
  %117 = bitcast %"class.device::mojom::UsbDeviceInfo"* %114 to i8*
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %116, %112
  %119 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %110, i64 0, i32 0
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %96, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  br label %199

121:                                              ; preds = %92
  %122 = bitcast %"class.base::RepeatingCallback"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #15
  %123 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %123, align 8
  %124 = zext i8 %94 to i32
  %125 = tail call i8* @_Znwm(i64 64) #14, !noalias !63
  %126 = bitcast i8* %125 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %126, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEENS_12OnceCallbackIFvSC_EEEEJS6_SC_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS3_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEENS_12OnceCallbackIFvSB_EEEEJS5_SB_SE_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !63
  %127 = getelementptr inbounds i8, i8* %125, i64 32
  %128 = bitcast i8* %127 to void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"*)**
  store void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"*)* @_ZN6device12_GLOBAL__N_130OnDoneReadingConfigDescriptorsE13scoped_refptrINS_15UsbDeviceHandleEENSt3__110unique_ptrINS_19UsbDeviceDescriptorENS4_14default_deleteIS6_EEEEN4base12OnceCallbackIFvS9_EEE, void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"*)** %128, align 8, !noalias !63
  %129 = getelementptr inbounds i8, i8* %125, i64 40
  %130 = bitcast i8* %129 to %"class.device::UsbDeviceHandle"**
  store %"class.device::UsbDeviceHandle"* %0, %"class.device::UsbDeviceHandle"** %130, align 8, !noalias !63
  %131 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %121
  %133 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 1 monotonic, !noalias !63
  br label %135

135:                                              ; preds = %132, %121
  %136 = getelementptr inbounds i8, i8* %125, i64 48
  %137 = bitcast i8* %136 to i64*
  store i64 %58, i64* %137, align 8, !noalias !63
  %138 = getelementptr inbounds i8, i8* %125, i64 56
  %139 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %140 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %141 = load i64, i64* %140, align 8, !noalias !63
  %142 = bitcast i8* %138 to i64*
  store i64 %141, i64* %142, align 8, !noalias !63
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %139, align 8, !noalias !63
  %143 = bitcast %"class.base::OnceCallback.140"* %15 to i8**
  store i8* %125, i8** %143, align 8, !alias.scope !63
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %14, i32 %124, %"class.base::OnceCallback.140"* nonnull %15) #15
  %144 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #15
  %145 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0
  %147 = bitcast %"class.base::OnceCallback.92"* %16 to i8**
  %148 = bitcast %"class.device::UsbDeviceHandle"* %0 to void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)***
  %149 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %16, i64 0, i32 0
  %150 = zext i8 %94 to i16
  br label %153

151:                                              ; preds = %189
  %152 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %152) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #15
  br label %199

153:                                              ; preds = %189, %135
  %154 = phi i16 [ 0, %135 ], [ %190, %189 ]
  %155 = call i8* @_Znwm(i64 40) #14
  %156 = bitcast i8* %155 to %"class.base::RefCountedBytes"*
  call void @_ZN4base15RefCountedBytesC1Em(%"class.base::RefCountedBytes"* nonnull %156, i64 4) #15
  %157 = getelementptr inbounds i8, i8* %155, i64 8
  %158 = bitcast i8* %157 to i32*
  %159 = atomicrmw add i32* %158, i32 1 monotonic
  %160 = or i16 %154, 512
  %161 = ptrtoint i8* %155 to i64
  %162 = atomicrmw add i32* %158, i32 1 monotonic
  %163 = call i8* @_Znwm(i64 72) #14, !noalias !68
  %164 = bitcast i8* %163 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %164, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90*, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS4_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJS6_S8_hNS_17RepeatingCallbackISA_EEEEEFvSD_SF_mEE7RunOnceEPNS0_13BindStateBaseESD_OSF_m to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS3_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS3_5mojom17UsbTransferStatusES2_INS_15RefCountedBytesEEmEJS5_S7_hNS_17RepeatingCallbackIS9_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !68
  %165 = getelementptr inbounds i8, i8* %163, i64 32
  %166 = bitcast i8* %165 to i64*
  store i64 ptrtoint (void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, i8, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)* @_ZN6device12_GLOBAL__N_128OnReadConfigDescriptorHeaderE13scoped_refptrINS_15UsbDeviceHandleEEPNS_19UsbDeviceDescriptorEhN4base12OnceCallbackIFvvEEENS_5mojom17UsbTransferStatusES1_INS6_15RefCountedBytesEEm to i64), i64* %166, align 8, !noalias !68
  %167 = getelementptr inbounds i8, i8* %163, i64 40
  %168 = bitcast i8* %167 to %"class.device::UsbDeviceHandle"**
  store %"class.device::UsbDeviceHandle"* %0, %"class.device::UsbDeviceHandle"** %168, align 8, !noalias !68
  br i1 %131, label %171, label %169

169:                                              ; preds = %153
  %170 = atomicrmw add i32* %145, i32 1 monotonic, !noalias !68
  br label %171

171:                                              ; preds = %169, %153
  %172 = getelementptr inbounds i8, i8* %163, i64 48
  %173 = bitcast i8* %172 to i64*
  store i64 %58, i64* %173, align 8, !noalias !68
  %174 = getelementptr inbounds i8, i8* %163, i64 56
  %175 = trunc i16 %154 to i8
  store i8 %175, i8* %174, align 1, !noalias !68
  %176 = getelementptr inbounds i8, i8* %163, i64 64
  %177 = bitcast i8* %176 to %"class.base::internal::CallbackBaseCopyable"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %177, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %146) #15, !noalias !68
  store i8* %163, i8** %147, align 8, !alias.scope !68
  %178 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)**, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*** %148, align 8
  %179 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %178, i64 8
  %180 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %179, align 8
  call void %180(%"class.device::UsbDeviceHandle"* %0, i32 0, i32 0, i32 0, i8 zeroext 6, i16 zeroext %160, i16 zeroext 0, i64 %161, i32 2000, %"class.base::OnceCallback.92"* nonnull %16) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %149) #15
  %181 = atomicrmw sub i32* %158, i32 1 acq_rel
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %183, label %189

183:                                              ; preds = %171
  %184 = bitcast i8* %155 to %"class.base::RefCountedMemory"*
  %185 = bitcast i8* %155 to void (%"class.base::RefCountedMemory"*)***
  %186 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %186, i64 3
  %188 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %187, align 8
  call void %188(%"class.base::RefCountedMemory"* nonnull %184) #15
  br label %189

189:                                              ; preds = %171, %183
  %190 = add nuw nsw i16 %154, 1
  %191 = icmp eq i16 %190, %150
  br i1 %191, label %151, label %153

192:                                              ; preds = %69, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70)
  %193 = bitcast i8* %52 to %"class.device::mojom::UsbDeviceInfo"**
  %194 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %193, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %193, align 8
  %195 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %194) #15
  %197 = bitcast %"class.device::mojom::UsbDeviceInfo"* %194 to i8*
  call void @_ZdlPv(i8* %197) #14
  br label %198

198:                                              ; preds = %196, %192
  call void @_ZdlPv(i8* nonnull %50) #14
  br label %199

199:                                              ; preds = %151, %120, %198, %48
  %200 = icmp eq %"class.base::RefCountedBytes"* %3, null
  br i1 %200, label %213, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %3, i64 0, i32 0, i32 1
  %203 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw sub i32* %203, i32 1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %213

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %202, i64 -2
  %208 = bitcast %"class.base::RefCountedThreadSafe.91"* %207 to %"class.base::RefCountedMemory"*
  %209 = bitcast %"class.base::RefCountedThreadSafe.91"* %207 to void (%"class.base::RefCountedMemory"*)***
  %210 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %210, i64 3
  %212 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %211, align 8
  call void %212(%"class.base::RefCountedMemory"* nonnull %208) #15
  br label %213

213:                                              ; preds = %199, %201, %206
  %214 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %214, label %227, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %217 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw sub i32* %217, i32 1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %227

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %216, i64 -2
  %222 = bitcast %"class.base::RefCountedThreadSafe"* %221 to %"class.device::UsbDeviceHandle"*
  %223 = bitcast %"class.base::RefCountedThreadSafe"* %221 to void (%"class.device::UsbDeviceHandle"*)***
  %224 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %223, align 8
  %225 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %224, i64 14
  %226 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %225, align 8
  call void %226(%"class.device::UsbDeviceHandle"* nonnull %222) #15
  br label %227

227:                                              ; preds = %213, %215, %220
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device24ParseUsbStringDescriptorERKNSt3__16vectorIhNS0_9allocatorIhEEEEPNS0_12basic_stringIDsNS0_11char_traitsIDsEENS2_IDsEEEE(%"class.std::__1::vector.10"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, 2
  %11 = inttoptr i64 %8 to i8*
  br i1 %10, label %204, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %11, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 3
  br i1 %15, label %16, label %204

16:                                               ; preds = %12
  %17 = load i8, i8* %11, align 1
  %18 = zext i8 %17 to i64
  %19 = icmp ult i64 %9, %18
  %20 = select i1 %19, i64 %9, i64 %18
  %21 = icmp ult i64 %20, 2
  br i1 %21, label %204, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = getelementptr inbounds i8, i8* %11, i64 2
  %25 = bitcast i8* %24 to i16*
  %26 = add nsw i64 %20, -2
  %27 = lshr i64 %26, 1
  %28 = icmp ult i64 %26, 22
  br i1 %28, label %39, label %29

29:                                               ; preds = %22
  %30 = add nuw nsw i64 %27, 8
  %31 = and i64 %30, 9223372036854775800
  %32 = shl nuw i64 %31, 1
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %31, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %38, align 8
  br label %45

39:                                               ; preds = %22
  %40 = trunc i64 %27 to i8
  %41 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  store i8 %40, i8* %42, align 1
  %43 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %44 = icmp eq i64 %27, 0
  br i1 %44, label %192, label %45

45:                                               ; preds = %39, %29
  %46 = phi i16* [ %34, %29 ], [ %43, %39 ]
  %47 = icmp ult i64 %26, 32
  br i1 %47, label %139, label %48

48:                                               ; preds = %45
  %49 = bitcast i16* %46 to i8*
  %50 = getelementptr i16, i16* %46, i64 %27
  %51 = bitcast i16* %50 to i8*
  %52 = and i64 %20, 254
  %53 = getelementptr i8, i8* %11, i64 %52
  %54 = icmp ugt i8* %53, %49
  %55 = icmp ult i8* %24, %51
  %56 = and i1 %54, %55
  br i1 %56, label %139, label %57

57:                                               ; preds = %48
  %58 = and i64 %27, 9223372036854775792
  %59 = sub nsw i64 %27, %58
  %60 = getelementptr i16, i16* %25, i64 %58
  %61 = getelementptr i16, i16* %46, i64 %58
  %62 = add nsw i64 %58, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %118, label %67

67:                                               ; preds = %57
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i16, i16* %25, i64 %70
  %73 = getelementptr i16, i16* %46, i64 %70
  %74 = bitcast i16* %72 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !73
  %76 = getelementptr i16, i16* %72, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !73
  %79 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %79, align 2, !alias.scope !76, !noalias !73
  %80 = getelementptr i16, i16* %73, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %81, align 2, !alias.scope !76, !noalias !73
  %82 = or i64 %70, 16
  %83 = getelementptr i16, i16* %25, i64 %82
  %84 = getelementptr i16, i16* %46, i64 %82
  %85 = bitcast i16* %83 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !73
  %87 = getelementptr i16, i16* %83, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !73
  %90 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !76, !noalias !73
  %91 = getelementptr i16, i16* %84, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !76, !noalias !73
  %93 = or i64 %70, 32
  %94 = getelementptr i16, i16* %25, i64 %93
  %95 = getelementptr i16, i16* %46, i64 %93
  %96 = bitcast i16* %94 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !73
  %98 = getelementptr i16, i16* %94, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !73
  %101 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !76, !noalias !73
  %102 = getelementptr i16, i16* %95, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !76, !noalias !73
  %104 = or i64 %70, 48
  %105 = getelementptr i16, i16* %25, i64 %104
  %106 = getelementptr i16, i16* %46, i64 %104
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !73
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !73
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !76, !noalias !73
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !76, !noalias !73
  %115 = add i64 %70, 64
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !78

118:                                              ; preds = %69, %57
  %119 = phi i64 [ 0, %57 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i16, i16* %25, i64 %122
  %125 = getelementptr i16, i16* %46, i64 %122
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !73
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !73
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !76, !noalias !73
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !76, !noalias !73
  %134 = add i64 %122, 16
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !79

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %27, %58
  br i1 %138, label %192, label %139

139:                                              ; preds = %137, %48, %45
  %140 = phi i64 [ %27, %48 ], [ %27, %45 ], [ %59, %137 ]
  %141 = phi i16* [ %25, %48 ], [ %25, %45 ], [ %60, %137 ]
  %142 = phi i16* [ %46, %48 ], [ %46, %45 ], [ %61, %137 ]
  %143 = add nsw i64 %140, -1
  %144 = and i64 %140, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %139, %146
  %147 = phi i64 [ %152, %146 ], [ %140, %139 ]
  %148 = phi i16* [ %154, %146 ], [ %141, %139 ]
  %149 = phi i16* [ %153, %146 ], [ %142, %139 ]
  %150 = phi i64 [ %155, %146 ], [ %144, %139 ]
  %151 = load i16, i16* %148, align 2
  store i16 %151, i16* %149, align 2
  %152 = add i64 %147, -1
  %153 = getelementptr inbounds i16, i16* %149, i64 1
  %154 = getelementptr inbounds i16, i16* %148, i64 1
  %155 = add i64 %150, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !80

157:                                              ; preds = %146, %139
  %158 = phi i64 [ %140, %139 ], [ %152, %146 ]
  %159 = phi i16* [ %141, %139 ], [ %154, %146 ]
  %160 = phi i16* [ %142, %139 ], [ %153, %146 ]
  %161 = icmp ult i64 %143, 7
  br i1 %161, label %192, label %162

162:                                              ; preds = %157, %162
  %163 = phi i64 [ %188, %162 ], [ %158, %157 ]
  %164 = phi i16* [ %190, %162 ], [ %159, %157 ]
  %165 = phi i16* [ %189, %162 ], [ %160, %157 ]
  %166 = load i16, i16* %164, align 2
  store i16 %166, i16* %165, align 2
  %167 = getelementptr inbounds i16, i16* %165, i64 1
  %168 = getelementptr inbounds i16, i16* %164, i64 1
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %165, i64 2
  %171 = getelementptr inbounds i16, i16* %164, i64 2
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %165, i64 3
  %174 = getelementptr inbounds i16, i16* %164, i64 3
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %165, i64 4
  %177 = getelementptr inbounds i16, i16* %164, i64 4
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %165, i64 5
  %180 = getelementptr inbounds i16, i16* %164, i64 5
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %165, i64 6
  %183 = getelementptr inbounds i16, i16* %164, i64 6
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %165, i64 7
  %186 = getelementptr inbounds i16, i16* %164, i64 7
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = add i64 %163, -8
  %189 = getelementptr inbounds i16, i16* %165, i64 8
  %190 = getelementptr inbounds i16, i16* %164, i64 8
  %191 = icmp eq i64 %188, 0
  br i1 %191, label %192, label %162, !llvm.loop !81

192:                                              ; preds = %157, %162, %137, %39
  %193 = phi i16* [ %43, %39 ], [ %46, %137 ], [ %46, %162 ], [ %46, %157 ]
  %194 = getelementptr inbounds i16, i16* %193, i64 %27
  store i16 0, i16* %194, align 2
  %195 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %195, i64 0, i32 1, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %192
  %200 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %201 = load i8*, i8** %200, align 8
  tail call void @_ZdlPv(i8* %201) #14
  br label %202

202:                                              ; preds = %199, %192
  %203 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* nonnull align 8 %23, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  br label %204

204:                                              ; preds = %202, %16, %2, %12
  %205 = phi i1 [ false, %12 ], [ false, %2 ], [ true, %202 ], [ false, %16 ]
  ret i1 %205
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device24ReadUsbStringDescriptorsE13scoped_refptrINS_15UsbDeviceHandleEENSt3__110unique_ptrINS3_3mapIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS3_4lessIhEENS9_INS3_4pairIKhSB_EEEEEENS3_14default_deleteISI_EEEEN4base12OnceCallbackIFvSL_EEE(%"class.device::UsbDeviceHandle"*, %"class.std::__1::map"*, %"class.base::OnceCallback.107"* nocapture) local_unnamed_addr #2 {
  %4 = alloca %"class.std::__1::unique_ptr.93", align 8
  %5 = alloca %"class.base::OnceCallback.107", align 8
  %6 = alloca %"class.base::OnceCallback.108", align 8
  %7 = ptrtoint %"class.std::__1::map"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::unique_ptr.93"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::map"* %1, %"class.std::__1::map"** %13, align 8
  %14 = bitcast %"class.base::OnceCallback.107"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.base::OnceCallback.107", %"class.base::OnceCallback.107"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.107"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.107"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.107", %"class.base::OnceCallback.107"* %5, i64 0, i32 0
  %20 = inttoptr i64 %17 to %"class.base::internal::BindStateBase"*
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %20, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.93"*)**
  %23 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.93"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.93"*)** %22, align 8
  call void %23(%"class.base::internal::BindStateBase"* %20, %"class.std::__1::unique_ptr.93"* nonnull dereferenceable(8) %4) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %24 = load %"class.std::__1::map"*, %"class.std::__1::map"** %13, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %13, align 8
  %25 = icmp eq %"class.std::__1::map"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %24, i64 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node.197"**
  %30 = load %"class.std::__1::__tree_node.197"*, %"class.std::__1::__tree_node.197"** %29, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %27, %"class.std::__1::__tree_node.197"* %30) #15
  %31 = bitcast %"class.std::__1::map"* %24 to i8*
  call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %11, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  br label %58

33:                                               ; preds = %3
  %34 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %33, %35
  %39 = tail call i8* @_Znwm(i64 64) #14, !noalias !82
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS7_3mapIhNS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS7_4lessIhEENSD_INS7_4pairIKhSF_EEEEEENS7_14default_deleteISM_EEEENS_12OnceCallbackIFvSP_EEERKSF_EJS6_SP_SS_EEEFvSU_EE7RunOnceEPNS0_13BindStateBaseESU_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS6_3mapIhNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENS6_4lessIhEENSC_INS6_4pairIKhSE_EEEEEENS6_14default_deleteISL_EEEENS_12OnceCallbackIFvSO_EEERKSE_EJS5_SO_SR_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !82
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 ptrtoint (void (%"class.device::UsbDeviceHandle"*, %"class.std::__1::map"*, %"class.base::OnceCallback.107"*, %"class.std::__1::basic_string"*)* @_ZN6device12_GLOBAL__N_117OnReadLanguageIdsE13scoped_refptrINS_15UsbDeviceHandleEENSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEN4base12OnceCallbackIFvSM_EEERKSC_ to i64), i64* %42, align 8, !noalias !82
  %43 = getelementptr inbounds i8, i8* %39, i64 40
  %44 = bitcast i8* %43 to %"class.device::UsbDeviceHandle"**
  store %"class.device::UsbDeviceHandle"* %0, %"class.device::UsbDeviceHandle"** %44, align 8, !noalias !82
  br i1 %34, label %48, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 1 monotonic, !noalias !82
  br label %48

48:                                               ; preds = %38, %45
  %49 = getelementptr inbounds i8, i8* %39, i64 48
  %50 = bitcast i8* %49 to i64*
  store i64 %7, i64* %50, align 8, !noalias !82
  %51 = getelementptr inbounds i8, i8* %39, i64 56
  %52 = getelementptr inbounds %"class.base::OnceCallback.107", %"class.base::OnceCallback.107"* %2, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.base::OnceCallback.107"* %2 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !82
  %55 = bitcast i8* %51 to i64*
  store i64 %54, i64* %55, align 8, !noalias !82
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %52, align 8, !noalias !82
  %56 = bitcast %"class.base::OnceCallback.108"* %6 to i8**
  store i8* %39, i8** %56, align 8, !alias.scope !82
  call fastcc void @_ZN6device12_GLOBAL__N_120ReadStringDescriptorE13scoped_refptrINS_15UsbDeviceHandleEEhtN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE(%"class.device::UsbDeviceHandle"* %0, i8 zeroext 0, i16 zeroext 0, %"class.base::OnceCallback.108"* nonnull %6)
  %57 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #15
  br label %58

58:                                               ; preds = %32, %48
  %59 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %72

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe"* %66 to %"class.device::UsbDeviceHandle"*
  %68 = bitcast %"class.base::RefCountedThreadSafe"* %66 to void (%"class.device::UsbDeviceHandle"*)***
  %69 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %69, i64 14
  %71 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %70, align 8
  call void %71(%"class.device::UsbDeviceHandle"* nonnull %67) #15
  br label %72

72:                                               ; preds = %58, %60, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6device12_GLOBAL__N_120ReadStringDescriptorE13scoped_refptrINS_15UsbDeviceHandleEEhtN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE(%"class.device::UsbDeviceHandle"*, i8 zeroext, i16 zeroext, %"class.base::OnceCallback.108"* nocapture) unnamed_addr #2 {
  %5 = alloca %"class.base::OnceCallback.92", align 8
  %6 = tail call i8* @_Znwm(i64 40) #14
  %7 = bitcast i8* %6 to %"class.base::RefCountedBytes"*
  tail call void @_ZN4base15RefCountedBytesC1Em(%"class.base::RefCountedBytes"* nonnull %7, i64 255) #15
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = zext i8 %1 to i16
  %12 = or i16 %11, 768
  %13 = ptrtoint i8* %6 to i64
  %14 = atomicrmw add i32* %9, i32 1 monotonic
  %15 = tail call i8* @_Znwm(i64 48) #14, !noalias !87
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90*, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSE_EEEFvSH_SK_mEE7RunOnceEPNS0_13BindStateBaseESH_OSK_m to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSD_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !87
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.108"*, i32, %"class.base::RefCountedBytes"*, i64)* @_ZN6device12_GLOBAL__N_122OnReadStringDescriptorEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEENS_5mojom17UsbTransferStatusE13scoped_refptrINS1_15RefCountedBytesEEm to i64), i64* %18, align 8, !noalias !87
  %19 = getelementptr inbounds i8, i8* %15, i64 40
  %20 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.108"* %3 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !87
  %23 = bitcast i8* %19 to i64*
  store i64 %22, i64* %23, align 8, !noalias !87
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8, !noalias !87
  %24 = bitcast %"class.base::OnceCallback.92"* %5 to i8**
  store i8* %15, i8** %24, align 8, !alias.scope !87
  %25 = bitcast %"class.device::UsbDeviceHandle"* %0 to void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)***
  %26 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)**, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %26, i64 8
  %28 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %27, align 8
  call void %28(%"class.device::UsbDeviceHandle"* %0, i32 0, i32 0, i32 0, i8 zeroext 6, i16 zeroext %12, i16 zeroext %2, i64 %13, i32 2000, %"class.base::OnceCallback.92"* nonnull %5) #15
  %29 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #15
  %30 = atomicrmw sub i32* %9, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %4
  %33 = bitcast i8* %6 to %"class.base::RefCountedMemory"*
  %34 = bitcast i8* %6 to void (%"class.base::RefCountedMemory"*)***
  %35 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %35, i64 3
  %37 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %36, align 8
  call void %37(%"class.base::RefCountedMemory"* nonnull %33) #15
  br label %38

38:                                               ; preds = %4, %32
  %39 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.device::UsbDeviceHandle"*
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %46 to void (%"class.device::UsbDeviceHandle"*)***
  %49 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %49, i64 14
  %51 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %50, align 8
  call void %51(%"class.device::UsbDeviceHandle"* nonnull %47) #15
  br label %52

52:                                               ; preds = %38, %40, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_117OnReadLanguageIdsE13scoped_refptrINS_15UsbDeviceHandleEENSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEN4base12OnceCallbackIFvSM_EEERKSC_(%"class.device::UsbDeviceHandle"*, %"class.std::__1::map"*, %"class.base::OnceCallback.107"* nocapture, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) #2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::map.170", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = alloca %"class.base::OnceCallback.140", align 8
  %9 = alloca %"class.base::OnceCallback.108", align 8
  %10 = ptrtoint %"class.std::__1::map"* %1 to i64
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %24 = select i1 %14, i16* %22, i16* %23
  %25 = load i16, i16* %24, align 2
  br label %26

26:                                               ; preds = %4, %20
  %27 = phi i16 [ %25, %20 ], [ 1033, %4 ]
  %28 = bitcast %"class.std::__1::map.170"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.std::__1::map.170", %"class.std::__1::map.170"* %6, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::map.170", %"class.std::__1::map.170"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::map.170", %"class.std::__1::map.170"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::map.170", %"class.std::__1::map.170"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_node_base"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %29, align 8
  %34 = bitcast %"class.std::__1::map"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = inttoptr i64 %35 to %"class.std::__1::__tree_end_node"*
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %36, %37
  br i1 %38, label %43, label %39

39:                                               ; preds = %26
  %40 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %42 = bitcast %"class.std::__1::map.170"* %6 to i64*
  br label %72

43:                                               ; preds = %167, %26
  %44 = phi i64 [ 0, %26 ], [ %137, %167 ]
  %45 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #15
  %46 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %46, align 8
  %47 = trunc i64 %44 to i32
  %48 = call i8* @_Znwm(i64 48) #14, !noalias !92
  %49 = bitcast i8* %48 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %49, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEEEEJSM_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS3_3mapIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS3_4lessIhEENS9_INS3_4pairIKhSB_EEEEEENS3_14default_deleteISI_EEEEEEEJSL_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEEEEJSM_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE) #15, !noalias !92
  %50 = getelementptr inbounds i8, i8* %48, i64 32
  %51 = getelementptr inbounds %"class.base::OnceCallback.107", %"class.base::OnceCallback.107"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.base::OnceCallback.107"* %2 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !92
  %54 = bitcast i8* %50 to i64*
  store i64 %53, i64* %54, align 8, !noalias !92
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8, !noalias !92
  %55 = getelementptr inbounds i8, i8* %48, i64 40
  %56 = bitcast i8* %55 to i64*
  store i64 %10, i64* %56, align 8, !noalias !92
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %43
  %59 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15, !noalias !92
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0)) #15, !noalias !92
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15, !noalias !92
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15, !noalias !92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15, !noalias !92
  br label %61

61:                                               ; preds = %43, %58
  %62 = bitcast %"class.base::OnceCallback.140"* %8 to i8**
  store i8* %48, i8** %62, align 8, !alias.scope !92
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %7, i32 %47, %"class.base::OnceCallback.140"* nonnull %8) #15
  %63 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #15
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %32
  br i1 %65, label %173, label %66

66:                                               ; preds = %61
  %67 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  %68 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %70 = bitcast %"class.base::OnceCallback.108"* %9 to i8**
  %71 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %9, i64 0, i32 0
  br label %192

72:                                               ; preds = %170, %39
  %73 = phi i64 [ 0, %39 ], [ %137, %170 ]
  %74 = phi %"class.std::__1::__tree_node"* [ null, %39 ], [ %172, %170 ]
  %75 = phi i64 [ %35, %39 ], [ %171, %170 ]
  %76 = inttoptr i64 %75 to %"class.std::__1::__tree_node.197"*
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.197", %"class.std::__1::__tree_node.197"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = icmp eq %"class.std::__1::__tree_node"* %74, null
  br i1 %78, label %107, label %79

79:                                               ; preds = %72
  %80 = load i8, i8* %77, align 1
  br label %81

81:                                               ; preds = %103, %79
  %82 = phi %"class.std::__1::__tree_node"* [ %106, %103 ], [ %74, %79 ]
  %83 = phi %"class.std::__1::__tree_node_base"** [ %105, %103 ], [ %30, %79 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 1, i32 0, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp ult i8 %80, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  br label %107

93:                                               ; preds = %81
  %94 = icmp ult i8 %85, %80
  br i1 %94, label %95, label %101

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 1
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  br label %107

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  br label %107

103:                                              ; preds = %95, %87
  %104 = phi %"class.std::__1::__tree_node_base"* [ %89, %87 ], [ %97, %95 ]
  %105 = phi %"class.std::__1::__tree_node_base"** [ %88, %87 ], [ %96, %95 ]
  %106 = bitcast %"class.std::__1::__tree_node_base"* %104 to %"class.std::__1::__tree_node"*
  br label %81

107:                                              ; preds = %72, %101, %99, %91
  %108 = phi %"class.std::__1::__tree_end_node"* [ %92, %91 ], [ %100, %99 ], [ %102, %101 ], [ %32, %72 ]
  %109 = phi %"class.std::__1::__tree_node_base"** [ %88, %91 ], [ %96, %99 ], [ %83, %101 ], [ %41, %72 ]
  %110 = bitcast %"class.std::__1::__tree_node_base"** %109 to %"class.std::__1::__tree_node"**
  %111 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node"* %111, null
  br i1 %112, label %113, label %136

113:                                              ; preds = %107
  %114 = call i8* @_Znwm(i64 48) #14, !noalias !97
  %115 = getelementptr inbounds i8, i8* %114, i64 32
  %116 = load i8, i8* %77, align 1, !noalias !97
  store i8 %116, i8* %115, align 8, !noalias !97
  %117 = getelementptr inbounds i8, i8* %114, i64 40
  %118 = bitcast i8* %117 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %118, align 8, !noalias !97
  %119 = bitcast i8* %114 to %"class.std::__1::__tree_node"*
  %120 = bitcast i8* %114 to %"class.std::__1::__tree_node_base"*
  %121 = getelementptr inbounds i8, i8* %114, i64 16
  %122 = bitcast i8* %121 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %108, %"class.std::__1::__tree_end_node"** %122, align 8
  %123 = bitcast %"class.std::__1::__tree_node_base"** %109 to i8**
  store i8* %114, i8** %123, align 8
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %113
  %129 = ptrtoint %"class.std::__1::__tree_node_base"* %126 to i64
  store i64 %129, i64* %42, align 8
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  br label %131

131:                                              ; preds = %128, %113
  %132 = phi %"class.std::__1::__tree_node_base"* [ %120, %113 ], [ %130, %128 ]
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %133, %"class.std::__1::__tree_node_base"* %132) #15
  %134 = load i64, i64* %31, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %31, align 8
  br label %136

136:                                              ; preds = %107, %131
  %137 = phi i64 [ %135, %131 ], [ %73, %107 ]
  %138 = phi %"class.std::__1::__tree_node"* [ %119, %131 ], [ %111, %107 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1, i32 0, i32 1
  %140 = bitcast %"class.std::__1::__map_iterator.179"* %139 to i64*
  store i64 %75, i64* %140, align 8
  %141 = inttoptr i64 %75 to %"class.std::__1::__tree_node_base"*
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 1
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, null
  br i1 %144, label %145, label %151

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 2
  %147 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, %141
  br i1 %150, label %167, label %158

151:                                              ; preds = %136, %151
  %152 = phi %"class.std::__1::__tree_node_base"* [ %154, %151 ], [ %143, %136 ]
  %153 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, null
  br i1 %155, label %156, label %151

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %152, i64 0, i32 0
  br label %167

158:                                              ; preds = %145, %158
  %159 = phi %"class.std::__1::__tree_end_node"** [ %162, %158 ], [ %146, %145 ]
  %160 = bitcast %"class.std::__1::__tree_end_node"** %159 to %"class.std::__1::__tree_node_base"**
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %161, i64 0, i32 2
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, %161
  br i1 %166, label %167, label %158

167:                                              ; preds = %158, %145, %156
  %168 = phi %"class.std::__1::__tree_end_node"* [ %157, %156 ], [ %147, %145 ], [ %163, %158 ]
  %169 = icmp eq %"class.std::__1::__tree_end_node"* %36, %168
  br i1 %169, label %43, label %170

170:                                              ; preds = %167
  %171 = ptrtoint %"class.std::__1::__tree_end_node"* %168 to i64
  %172 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  br label %72

173:                                              ; preds = %238, %61
  %174 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %174) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #15
  %175 = getelementptr inbounds %"class.std::__1::map.170", %"class.std::__1::map.170"* %6, i64 0, i32 0
  %176 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %177 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %176, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE7destroyEPNSB_ISH_SC_EE(%"class.std::__1::__tree.171"* nonnull %175, %"class.std::__1::__tree_node"* %177) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  %178 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %178, label %191, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %181 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw sub i32* %181, i32 1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %191

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %180, i64 -2
  %186 = bitcast %"class.base::RefCountedThreadSafe"* %185 to %"class.device::UsbDeviceHandle"*
  %187 = bitcast %"class.base::RefCountedThreadSafe"* %185 to void (%"class.device::UsbDeviceHandle"*)***
  %188 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %188, i64 14
  %190 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %189, align 8
  call void %190(%"class.device::UsbDeviceHandle"* nonnull %186) #15
  br label %191

191:                                              ; preds = %173, %179, %184
  ret void

192:                                              ; preds = %66, %238
  %193 = phi %"class.std::__1::__tree_end_node"* [ %64, %66 ], [ %239, %238 ]
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 4
  br i1 %67, label %197, label %195

195:                                              ; preds = %192
  %196 = atomicrmw add i32* %68, i32 1 monotonic
  br label %197

197:                                              ; preds = %192, %195
  %198 = bitcast %"class.std::__1::__tree_end_node"* %194 to i8*
  %199 = load i8, i8* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 5
  %201 = call i8* @_Znwm(i64 56) #14, !noalias !100
  %202 = bitcast i8* %201 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %202, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEPNS3_11__tree_nodeISD_PvEElEEEENS_12OnceCallbackIFvvEEERKSC_EJSJ_NS_17RepeatingCallbackISL_EEEEEFvSO_EE7RunOnceEPNS0_13BindStateBaseESO_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__114__map_iteratorINS2_15__tree_iteratorINS2_12__value_typeIhNS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEPNS2_11__tree_nodeISC_PvEElEEEENS_12OnceCallbackIFvvEEERKSB_EJSI_NS_17RepeatingCallbackISK_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !100
  %203 = getelementptr inbounds i8, i8* %201, i64 32
  %204 = bitcast i8* %203 to i64*
  store i64 ptrtoint (void (%"class.std::__1::__tree_end_node"*, %"class.base::OnceCallback.140"*, %"class.std::__1::basic_string"*)* @_ZN6device12_GLOBAL__N_121StoreStringDescriptorENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeIhNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEPNS1_11__tree_nodeISB_PvEElEEEEN4base12OnceCallbackIFvvEEERKSA_ to i64), i64* %204, align 8, !noalias !100
  %205 = getelementptr inbounds i8, i8* %201, i64 40
  %206 = bitcast %"class.std::__1::__tree_end_node"* %200 to i64*
  %207 = bitcast i8* %205 to i64*
  %208 = load i64, i64* %206, align 8, !noalias !100
  store i64 %208, i64* %207, align 8, !noalias !100
  %209 = getelementptr inbounds i8, i8* %201, i64 48
  %210 = bitcast i8* %209 to %"class.base::internal::CallbackBaseCopyable"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %210, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %69) #15, !noalias !100
  store i8* %201, i8** %70, align 8, !alias.scope !100
  call fastcc void @_ZN6device12_GLOBAL__N_120ReadStringDescriptorE13scoped_refptrINS_15UsbDeviceHandleEEhtN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE(%"class.device::UsbDeviceHandle"* %0, i8 zeroext %199, i16 zeroext %27, %"class.base::OnceCallback.108"* nonnull %9)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #15
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 1, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, null
  br i1 %213, label %214, label %222

214:                                              ; preds = %197
  %215 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.std::__1::__tree_node_base"*
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 2
  %217 = bitcast %"class.std::__1::__tree_end_node"* %216 to %"class.std::__1::__tree_end_node"**
  %218 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %218, i64 0, i32 0
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %219, align 8
  %221 = icmp eq %"class.std::__1::__tree_node_base"* %220, %215
  br i1 %221, label %238, label %229

222:                                              ; preds = %197, %222
  %223 = phi %"class.std::__1::__tree_node_base"* [ %225, %222 ], [ %212, %197 ]
  %224 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, null
  br i1 %226, label %227, label %222

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %223, i64 0, i32 0
  br label %238

229:                                              ; preds = %214, %229
  %230 = phi %"class.std::__1::__tree_end_node"** [ %233, %229 ], [ %217, %214 ]
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to %"class.std::__1::__tree_node_base"**
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %232, i64 0, i32 2
  %234 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %233, align 8
  %235 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %234, i64 0, i32 0
  %236 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_node_base"* %236, %232
  br i1 %237, label %238, label %229

238:                                              ; preds = %229, %214, %227
  %239 = phi %"class.std::__1::__tree_end_node"* [ %228, %227 ], [ %218, %214 ], [ %234, %229 ]
  %240 = icmp eq %"class.std::__1::__tree_end_node"* %239, %32
  br i1 %240, label %173, label %192
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device23BuildUsbEndpointInfoPtrEhhth(%"class.mojo::StructPtr.6"* noalias nocapture sret, i8 zeroext, i8 zeroext, i16 zeroext, i8 zeroext) local_unnamed_addr #2 {
  %6 = tail call i8* @_Znwm(i64 56) #14, !noalias !105
  %7 = bitcast i8* %6 to %"class.device::mojom::UsbEndpointInfo"*
  tail call void @_ZN6device5mojom15UsbEndpointInfoC1Ev(%"class.device::mojom::UsbEndpointInfo"* nonnull %7) #15, !noalias !105
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast %"class.mojo::StructPtr.6"* %0 to i64*
  store i64 %8, i64* %9, align 8, !alias.scope !105
  %10 = tail call zeroext i8 @_ZN6device30ConvertEndpointAddressToNumberEh(i8 zeroext %1) #15
  store i8 %10, i8* %6, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 4
  %12 = bitcast i8* %11 to i32*
  %13 = lshr i8 %1, 7
  %14 = xor i8 %13, 1
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %12, align 4
  %16 = zext i8 %2 to i32
  %17 = and i32 %16, 3
  %18 = getelementptr inbounds i8, i8* %6, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 8
  %20 = and i32 %16, 15
  switch i32 %20, label %23 [
    i32 5, label %24
    i32 9, label %21
    i32 13, label %22
  ]

21:                                               ; preds = %5
  br label %24

22:                                               ; preds = %5
  br label %24

23:                                               ; preds = %5
  br label %24

24:                                               ; preds = %5, %23, %22, %21
  %25 = phi i32 [ 0, %23 ], [ 3, %22 ], [ 2, %21 ], [ 1, %5 ]
  %26 = getelementptr inbounds i8, i8* %6, i64 16
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 8
  %28 = and i32 %16, 51
  switch i32 %28, label %33 [
    i32 1, label %34
    i32 17, label %29
    i32 33, label %30
    i32 3, label %31
    i32 19, label %32
  ]

29:                                               ; preds = %24
  br label %34

30:                                               ; preds = %24
  br label %34

31:                                               ; preds = %24
  br label %34

32:                                               ; preds = %24
  br label %34

33:                                               ; preds = %24
  br label %34

34:                                               ; preds = %24, %33, %32, %31, %30, %29
  %35 = phi i32 [ 5, %33 ], [ 4, %32 ], [ 3, %31 ], [ 2, %30 ], [ 1, %29 ], [ 0, %24 ]
  %36 = getelementptr inbounds i8, i8* %6, i64 20
  %37 = bitcast i8* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = zext i16 %3 to i32
  %39 = getelementptr inbounds i8, i8* %6, i64 12
  %40 = bitcast i8* %39 to i32*
  store i32 %38, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 %4, i8* %41, align 8
  ret void
}

declare zeroext i8 @_ZN6device30ConvertEndpointAddressToNumberEh(i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device24BuildUsbInterfaceInfoPtrEhhhhh(%"class.mojo::StructPtr.63"* noalias nocapture sret, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #2 {
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = tail call i8* @_Znwm(i64 32) #14, !noalias !108
  %9 = bitcast i8* %8 to %"class.device::mojom::UsbInterfaceInfo"*
  tail call void @_ZN6device5mojom16UsbInterfaceInfoC1Ev(%"class.device::mojom::UsbInterfaceInfo"* nonnull %9) #15, !noalias !108
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.mojo::StructPtr.63"* %0 to i64*
  store i64 %10, i64* %11, align 8, !alias.scope !108
  store i8 %1, i8* %8, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %1, i8* %12, align 1
  %13 = bitcast %"class.mojo::StructPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = tail call i8* @_Znwm(i64 88) #14, !noalias !111
  %16 = bitcast i8* %15 to %"class.device::mojom::UsbAlternateInterfaceInfo"*
  tail call void @_ZN6device5mojom25UsbAlternateInterfaceInfoC1Ev(%"class.device::mojom::UsbAlternateInterfaceInfo"* nonnull %16) #15, !noalias !111
  %17 = ptrtoint i8* %15 to i64
  %18 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  store i64 %17, i64* %18, align 8, !alias.scope !111
  store i8 %2, i8* %15, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 1
  store i8 %3, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %15, i64 2
  store i8 %4, i8* %20, align 2
  %21 = getelementptr inbounds i8, i8* %15, i64 3
  store i8 %5, i8* %21, align 1
  %22 = getelementptr inbounds i8, i8* %8, i64 16
  %23 = bitcast i8* %22 to %"class.mojo::StructPtr"**
  %24 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 24
  %26 = bitcast i8* %25 to %"class.mojo::StructPtr"**
  %27 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %26, align 8
  %28 = icmp ult %"class.mojo::StructPtr"* %24, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %6
  %30 = bitcast %"class.mojo::StructPtr"* %24 to i64*
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %31, align 8
  %32 = load i64, i64* %18, align 8
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 1
  %34 = ptrtoint %"class.mojo::StructPtr"* %33 to i64
  %35 = bitcast i8* %22 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %14, align 8
  br label %43

36:                                               ; preds = %6
  %37 = getelementptr inbounds i8, i8* %8, i64 8
  %38 = bitcast i8* %37 to %"class.std::__1::vector"*
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom25UsbAlternateInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %38, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %7) #15
  %39 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %14, align 8
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %14, align 8
  %40 = icmp eq %"class.device::mojom::UsbAlternateInterfaceInfo"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  call void @_ZN6device5mojom25UsbAlternateInterfaceInfoD1Ev(%"class.device::mojom::UsbAlternateInterfaceInfo"* nonnull %39) #15
  %42 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %39, i64 0, i32 0
  call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %29, %36, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"* } @_ZN6device27FindInterfaceInfoFromConfigEPKNS_5mojom20UsbConfigurationInfoEhh(%"class.device::mojom::UsbConfigurationInfo"* readonly, i8 zeroext, i8 zeroext) local_unnamed_addr #5 {
  %4 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %0, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %6, align 8
  %8 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %8, align 8
  %10 = icmp eq %"class.mojo::StructPtr.63"* %7, %9
  br i1 %10, label %41, label %11

11:                                               ; preds = %5, %36
  %12 = phi %"class.mojo::StructPtr.63"* [ %39, %36 ], [ %7, %5 ]
  %13 = phi %"class.device::mojom::UsbAlternateInterfaceInfo"* [ %38, %36 ], [ null, %5 ]
  %14 = phi %"class.device::mojom::UsbInterfaceInfo"* [ %37, %36 ], [ null, %5 ]
  %15 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %15, align 8
  %17 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, %1
  br i1 %19, label %20, label %36

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %16, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %21, align 8
  %23 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %16, i64 0, i32 2, i32 0, i32 1
  %24 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %25 = icmp eq %"class.mojo::StructPtr"* %22, %24
  br i1 %25, label %36, label %28

26:                                               ; preds = %28
  %27 = icmp eq %"class.mojo::StructPtr"* %35, %24
  br i1 %27, label %36, label %28

28:                                               ; preds = %20, %26
  %29 = phi %"class.mojo::StructPtr"* [ %35, %26 ], [ %22, %20 ]
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %30, align 8
  %32 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %31, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, %2
  %35 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %29, i64 1
  br i1 %34, label %36, label %26

36:                                               ; preds = %28, %26, %20, %11
  %37 = phi %"class.device::mojom::UsbInterfaceInfo"* [ %14, %11 ], [ %16, %20 ], [ %16, %26 ], [ %16, %28 ]
  %38 = phi %"class.device::mojom::UsbAlternateInterfaceInfo"* [ %13, %11 ], [ %13, %20 ], [ %31, %28 ], [ %13, %26 ]
  %39 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %12, i64 1
  %40 = icmp eq %"class.mojo::StructPtr.63"* %39, %9
  br i1 %40, label %41, label %11

41:                                               ; preds = %36, %5, %3
  %42 = phi %"class.device::mojom::UsbInterfaceInfo"* [ null, %3 ], [ null, %5 ], [ %37, %36 ]
  %43 = phi %"class.device::mojom::UsbAlternateInterfaceInfo"* [ null, %3 ], [ null, %5 ], [ %38, %36 ]
  %44 = insertvalue { %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"* } undef, %"class.device::mojom::UsbInterfaceInfo"* %42, 0
  %45 = insertvalue { %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"* } %44, %"class.device::mojom::UsbAlternateInterfaceInfo"* %43, 1
  ret { %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"* } %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device28BuildUsbConfigurationInfoPtrEhbbh(%"class.mojo::StructPtr.57"* noalias nocapture sret, i8 zeroext, i1 zeroext, i1 zeroext, i8 zeroext) local_unnamed_addr #2 {
  %6 = zext i1 %2 to i8
  %7 = zext i1 %3 to i8
  %8 = tail call i8* @_Znwm(i64 96) #14, !noalias !114
  %9 = bitcast i8* %8 to %"class.device::mojom::UsbConfigurationInfo"*
  tail call void @_ZN6device5mojom20UsbConfigurationInfoC1Ev(%"class.device::mojom::UsbConfigurationInfo"* nonnull %9) #15, !noalias !114
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.mojo::StructPtr.57"* %0 to i64*
  store i64 %10, i64* %11, align 8, !alias.scope !114
  store i8 %1, i8* %8, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  store i8 %6, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 41
  store i8 %7, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 42
  store i8 %4, i8* %14, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6device12_GLOBAL__N_136ParseInterfaceAssociationDescriptorsERKNSt3__16vectorIhNS1_9allocatorIhEEEEPNS2_INS0_33UsbInterfaceAssociationDescriptorENS3_IS8_EEEE(%"class.std::__1::vector.10"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.122"*) unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %107, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %1, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.122"* %1 to i64*
  %13 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %1, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %8, %103
  %16 = phi i8* [ %6, %8 ], [ %105, %103 ]
  %17 = phi i8* [ %4, %8 ], [ %104, %103 ]
  %18 = ptrtoint i8* %17 to i64
  %19 = ptrtoint i8* %16 to i64
  %20 = sub i64 %19, %18
  %21 = icmp slt i64 %20, 2
  br i1 %21, label %107, label %22

22:                                               ; preds = %15
  %23 = load i8, i8* %17, align 1
  %24 = zext i8 %23 to i64
  %25 = icmp slt i64 %20, %24
  br i1 %25, label %107, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %17, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 11
  %30 = icmp eq i8 %23, 8
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %103

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %17, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %17, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %9, align 8
  %38 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %10, align 8
  %39 = icmp ult %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37, %38
  %40 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %38 to i64
  br i1 %39, label %41, label %49

41:                                               ; preds = %32
  %42 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37 to i16*
  %43 = zext i8 %36 to i16
  %44 = shl nuw i16 %43, 8
  %45 = zext i8 %34 to i16
  %46 = or i16 %44, %45
  store i16 %46, i16* %42, align 1
  %47 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37, i64 1
  %48 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %47 to i64
  store i64 %48, i64* %11, align 8
  br label %103

49:                                               ; preds = %32
  %50 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37 to i64
  %51 = load i64, i64* %12, align 8
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 1
  %54 = add nsw i64 %53, 1
  %55 = icmp slt i64 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::vector.122"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #16
  unreachable

58:                                               ; preds = %49
  %59 = sub i64 %40, %51
  %60 = ashr exact i64 %59, 1
  %61 = icmp ult i64 %60, 4611686018427387903
  %62 = icmp ult i64 %59, %54
  %63 = select i1 %62, i64 %54, i64 %59
  %64 = select i1 %61, i64 %63, i64 9223372036854775807
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %58
  %67 = icmp slt i64 %64, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  tail call void @abort() #16
  unreachable

69:                                               ; preds = %66
  %70 = shl i64 %64, 1
  %71 = tail call i8* @_Znwm(i64 %70) #14
  %72 = bitcast i8* %71 to %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*
  br label %73

73:                                               ; preds = %69, %58
  %74 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %72, %69 ], [ null, %58 ]
  %75 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %74, i64 %53
  %76 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %74, i64 %64
  %77 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %76 to i64
  %78 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %75 to i16*
  %79 = zext i8 %36 to i16
  %80 = shl nuw i16 %79, 8
  %81 = zext i8 %34 to i16
  %82 = or i16 %80, %81
  store i16 %82, i16* %78, align 1
  %83 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %75, i64 1
  %84 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %83 to i64
  %85 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %14, align 8
  %86 = load i64, i64* %11, align 8
  %87 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %85 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 1
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %75, i64 %90
  %92 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %91 to i64
  %93 = icmp sgt i64 %88, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %73
  %95 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %91, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %85, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %96, i64 %88, i1 false) #15
  %97 = load %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"** %14, align 8
  br label %98

98:                                               ; preds = %94, %73
  %99 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %85, %73 ], [ %97, %94 ]
  store i64 %92, i64* %12, align 8
  store i64 %84, i64* %11, align 8
  store i64 %77, i64* %13, align 8
  %100 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %99, i64 0, i32 0
  tail call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %101, %98, %41, %26
  %104 = getelementptr inbounds i8, i8* %17, i64 %24
  %105 = load i8*, i8** %5, align 8
  %106 = icmp eq i8* %104, %105
  br i1 %106, label %107, label %15

107:                                              ; preds = %15, %22, %103, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #15
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !117
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string.35", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.35"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string.35", %"class.std::__1::basic_string.35"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.35"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.35", %"class.std::__1::basic_string.35"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.35", %"class.std::__1::basic_string.35"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.35"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.35"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8*, i8** %11, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %20, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8*, i8** %32, align 8
  %36 = load i8*, i8** %33, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %42 = bitcast i8** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* %41, i8* %43) #15
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #15
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %29, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %48, i8* %50) #15
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #15
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6device5mojom20UsbConfigurationInfoD1Ev(%"class.device::mojom::UsbConfigurationInfo"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6device5mojom16UsbInterfaceInfoD1Ev(%"class.device::mojom::UsbInterfaceInfo"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6device5mojom15UsbEndpointInfoD1Ev(%"class.device::mojom::UsbEndpointInfo"*) unnamed_addr #6

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

declare void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* sret, i32, %"class.base::OnceCallback.140"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_130OnDoneReadingConfigDescriptorsE13scoped_refptrINS_15UsbDeviceHandleEENSt3__110unique_ptrINS_19UsbDeviceDescriptorENS4_14default_deleteIS6_EEEEN4base12OnceCallbackIFvS9_EEE(%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"* nocapture) #2 {
  %4 = alloca %"class.std::__1::unique_ptr.133", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.std::__1::unique_ptr.133", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %1, i64 0, i32 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %12, align 8
  %14 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %13, i64 0, i32 19, i32 0, i32 1
  %16 = bitcast %"class.mojo::StructPtr.57"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.55"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %21, %11
  br i1 %22, label %23, label %47

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::unique_ptr.133"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.device::UsbDeviceDescriptor"* %1, %"struct.device::UsbDeviceDescriptor"** %25, align 8
  %26 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %32 = inttoptr i64 %29 to %"class.base::internal::BindStateBase"*
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %32, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)**
  %35 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)** %34, align 8
  call void %35(%"class.base::internal::BindStateBase"* %32, %"class.std::__1::unique_ptr.133"* nonnull dereferenceable(8) %4) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  %36 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %25, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %25, align 8
  %37 = icmp eq %"struct.device::UsbDeviceDescriptor"* %36, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %36, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %39, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %39, align 8
  %41 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %40) #15
  %43 = bitcast %"class.device::mojom::UsbDeviceInfo"* %40 to i8*
  call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %36, i64 0, i32 0
  call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %44, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  br label %101

47:                                               ; preds = %3
  %48 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %48, label %49, label %69

49:                                               ; preds = %47
  %50 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %50) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 100, i32 2) #15
  %51 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %52 = bitcast %"class.std::__1::basic_ostringstream"* %51 to %"class.std::__1::basic_ostream"*
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13, i64 0, i64 0), i64 55) #15
  %54 = load i8, i8* %9, align 1
  %55 = zext i8 %54 to i32
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %53, i32 %55) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i64 6) #15
  %58 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %12, align 8
  %59 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %58, i64 0, i32 19
  %60 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %58, i64 0, i32 19, i32 0, i32 1
  %61 = bitcast %"class.mojo::StructPtr.57"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.55"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %57, i64 %66) #15
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %50) #15
  br label %69

69:                                               ; preds = %47, %49
  %70 = bitcast %"class.std::__1::unique_ptr.133"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70)
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %6, i64 0, i32 0, i32 0, i32 0
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %71, align 8
  %72 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  %77 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %78 = inttoptr i64 %75 to %"class.base::internal::BindStateBase"*
  %79 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %78, i64 0, i32 1
  %80 = bitcast void ()** %79 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)**
  %81 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.133"*)** %80, align 8
  call void %81(%"class.base::internal::BindStateBase"* %78, %"class.std::__1::unique_ptr.133"* nonnull dereferenceable(8) %6) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  %82 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %71, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %71, align 8
  %83 = icmp eq %"struct.device::UsbDeviceDescriptor"* %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %69
  %85 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %82, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %85, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %85, align 8
  %87 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %86) #15
  %89 = bitcast %"class.device::mojom::UsbDeviceInfo"* %86 to i8*
  call void @_ZdlPv(i8* %89) #14
  br label %90

90:                                               ; preds = %88, %84
  %91 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %82, i64 0, i32 0
  call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %90, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70)
  %93 = icmp eq %"struct.device::UsbDeviceDescriptor"* %1, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %92
  %95 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %12, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %12, align 8
  %96 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %95) #15
  %98 = bitcast %"class.device::mojom::UsbDeviceInfo"* %95 to i8*
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %94
  %100 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %46, %92, %99
  %102 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %102, label %115, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw sub i32* %105, i32 1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %115

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %104, i64 -2
  %110 = bitcast %"class.base::RefCountedThreadSafe"* %109 to %"class.device::UsbDeviceHandle"*
  %111 = bitcast %"class.base::RefCountedThreadSafe"* %109 to void (%"class.device::UsbDeviceHandle"*)***
  %112 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %112, i64 14
  %114 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %113, align 8
  call void %114(%"class.device::UsbDeviceHandle"* nonnull %110) #15
  br label %115

115:                                              ; preds = %101, %103, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_128OnReadConfigDescriptorHeaderE13scoped_refptrINS_15UsbDeviceHandleEEPNS_19UsbDeviceDescriptorEhN4base12OnceCallbackIFvvEEENS_5mojom17UsbTransferStatusES1_INS6_15RefCountedBytesEEm(%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, i8 zeroext, %"class.base::OnceCallback.140"* nocapture, i32, %"class.base::RefCountedBytes"*, i64) #2 {
  %8 = alloca %"class.base::OnceCallback.140", align 8
  %9 = alloca %"class.base::OnceCallback.92", align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = icmp eq i32 %4, 0
  %12 = icmp eq i64 %6, 4
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %60

14:                                               ; preds = %7
  %15 = ptrtoint %"struct.device::UsbDeviceDescriptor"* %1 to i64
  %16 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %5, i64 0, i32 1, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = or i64 %24, %20
  %26 = tail call i8* @_Znwm(i64 40) #14
  %27 = bitcast i8* %26 to %"class.base::RefCountedBytes"*
  tail call void @_ZN4base15RefCountedBytesC1Em(%"class.base::RefCountedBytes"* nonnull %27, i64 %25) #15
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %28 to i32*
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  %31 = zext i8 %2 to i16
  %32 = or i16 %31, 512
  %33 = ptrtoint i8* %26 to i64
  %34 = atomicrmw add i32* %29, i32 1 monotonic
  %35 = tail call i8* @_Znwm(i64 56) #14, !noalias !118
  %36 = bitcast i8* %35 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %36, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90*, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS3_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJS5_S8_EEEFvSA_SD_mEE7RunOnceEPNS0_13BindStateBaseESA_OSD_m to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS2_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !118
  %37 = getelementptr inbounds i8, i8* %35, i64 32
  %38 = bitcast i8* %37 to i64*
  store i64 ptrtoint (void (%"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)* @_ZN6device12_GLOBAL__N_122OnReadConfigDescriptorEPNS_19UsbDeviceDescriptorEN4base12OnceCallbackIFvvEEENS_5mojom17UsbTransferStatusE13scoped_refptrINS3_15RefCountedBytesEEm to i64), i64* %38, align 8, !noalias !118
  %39 = getelementptr inbounds i8, i8* %35, i64 40
  %40 = bitcast i8* %39 to i64*
  store i64 %15, i64* %40, align 8, !noalias !118
  %41 = getelementptr inbounds i8, i8* %35, i64 48
  %42 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %3, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback.140"* %3 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !118
  %45 = bitcast i8* %41 to i64*
  store i64 %44, i64* %45, align 8, !noalias !118
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8, !noalias !118
  %46 = bitcast %"class.base::OnceCallback.92"* %9 to i8**
  store i8* %35, i8** %46, align 8, !alias.scope !118
  %47 = bitcast %"class.device::UsbDeviceHandle"* %0 to void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)***
  %48 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)**, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %48, i64 8
  %50 = load void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)*, void (%"class.device::UsbDeviceHandle"*, i32, i32, i32, i8, i16, i16, i64, i32, %"class.base::OnceCallback.92"*)** %49, align 8
  call void %50(%"class.device::UsbDeviceHandle"* %0, i32 0, i32 0, i32 0, i8 zeroext 6, i16 zeroext %32, i16 zeroext 0, i64 %33, i32 2000, %"class.base::OnceCallback.92"* nonnull %9) #15
  %51 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #15
  %52 = atomicrmw sub i32* %29, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %81

54:                                               ; preds = %14
  %55 = bitcast i8* %26 to %"class.base::RefCountedMemory"*
  %56 = bitcast i8* %26 to void (%"class.base::RefCountedMemory"*)***
  %57 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %57, i64 3
  %59 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %58, align 8
  call void %59(%"class.base::RefCountedMemory"* nonnull %55) #15
  br label %81

60:                                               ; preds = %7
  %61 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %61, label %62, label %70

62:                                               ; preds = %60
  %63 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %63) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 140, i32 2) #15
  %64 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %65 = bitcast %"class.std::__1::basic_ostringstream"* %64 to %"class.std::__1::basic_ostream"*
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), i64 40) #15
  %67 = zext i8 %2 to i32
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %66, i32 %67) #15
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %63) #15
  br label %70

70:                                               ; preds = %60, %62
  %71 = bitcast %"class.base::OnceCallback.140"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #15
  %72 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.base::OnceCallback.140"* %3 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::OnceCallback.140"* %8 to i64*
  store i64 %74, i64* %75, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8
  %76 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %8, i64 0, i32 0
  %77 = inttoptr i64 %74 to %"class.base::internal::BindStateBase"*
  %78 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %77, i64 0, i32 1
  %79 = bitcast void ()** %78 to void (%"class.base::internal::BindStateBase"*)**
  %80 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %79, align 8
  call void %80(%"class.base::internal::BindStateBase"* %77) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #15
  br label %81

81:                                               ; preds = %54, %14, %70
  %82 = icmp eq %"class.base::RefCountedBytes"* %5, null
  br i1 %82, label %95, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %5, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %95

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %84, i64 -2
  %90 = bitcast %"class.base::RefCountedThreadSafe.91"* %89 to %"class.base::RefCountedMemory"*
  %91 = bitcast %"class.base::RefCountedThreadSafe.91"* %89 to void (%"class.base::RefCountedMemory"*)***
  %92 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %92, i64 3
  %94 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %93, align 8
  call void %94(%"class.base::RefCountedMemory"* nonnull %90) #15
  br label %95

95:                                               ; preds = %81, %83, %88
  %96 = icmp eq %"class.device::UsbDeviceHandle"* %0, null
  br i1 %96, label %109, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw sub i32* %99, i32 1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %109

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %98, i64 -2
  %104 = bitcast %"class.base::RefCountedThreadSafe"* %103 to %"class.device::UsbDeviceHandle"*
  %105 = bitcast %"class.base::RefCountedThreadSafe"* %103 to void (%"class.device::UsbDeviceHandle"*)***
  %106 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %106, i64 14
  %108 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %107, align 8
  call void %108(%"class.device::UsbDeviceHandle"* nonnull %104) #15
  br label %109

109:                                              ; preds = %95, %97, %102
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEENS_12OnceCallbackIFvSC_EEEEJS6_SC_SF_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %7 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = load void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"*)*, void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback"*)** %4, align 8
  %9 = bitcast void ()** %5 to %"class.device::UsbDeviceHandle"**
  %10 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %9, align 8
  store %"class.device::UsbDeviceHandle"* null, %"class.device::UsbDeviceHandle"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to %"struct.device::UsbDeviceDescriptor"**
  %13 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %12, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %12, align 8
  %14 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %15 = bitcast void ()** %6 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  call void %8(%"class.device::UsbDeviceHandle"* %10, %"struct.device::UsbDeviceDescriptor"* %13, %"class.base::OnceCallback"* nonnull %2) #15
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS3_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEENS_12OnceCallbackIFvSB_EEEEJS5_SB_SE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %37, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"struct.device::UsbDeviceDescriptor"**
  %8 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %7, align 8
  store %"struct.device::UsbDeviceDescriptor"* null, %"struct.device::UsbDeviceDescriptor"** %7, align 8
  %9 = icmp eq %"struct.device::UsbDeviceDescriptor"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %11, align 8
  store %"class.device::mojom::UsbDeviceInfo"* null, %"class.device::mojom::UsbDeviceInfo"** %11, align 8
  %13 = icmp eq %"class.device::mojom::UsbDeviceInfo"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  tail call void @_ZN6device5mojom13UsbDeviceInfoD1Ev(%"class.device::mojom::UsbDeviceInfo"* nonnull %12) #15
  %15 = bitcast %"class.device::mojom::UsbDeviceInfo"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %"struct.device::UsbDeviceDescriptor", %"struct.device::UsbDeviceDescriptor"* %8, i64 0, i32 0
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %16, %3
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to %"class.device::UsbDeviceHandle"**
  %21 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %20, align 8
  %22 = icmp eq %"class.device::UsbDeviceHandle"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %21, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.device::UsbDeviceHandle"*
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %29 to void (%"class.device::UsbDeviceHandle"*)***
  %32 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %32, i64 14
  %34 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %33, align 8
  tail call void %34(%"class.device::UsbDeviceHandle"* nonnull %30) #15
  br label %35

35:                                               ; preds = %18, %23, %28
  %36 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %35, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #4

declare void @_ZN4base15RefCountedBytesC1Em(%"class.base::RefCountedBytes"*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS4_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJS6_S8_hNS_17RepeatingCallbackISA_EEEEEFvSD_SF_mEE7RunOnceEPNS0_13BindStateBaseESD_OSF_m(%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90* dereferenceable(8), i64) #2 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.140", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.base::internal::BindStateBase"* %7 to void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, i8, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)**
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = getelementptr inbounds void ()*, void ()** %9, i64 1
  %11 = bitcast void ()** %10 to %"struct.device::UsbDeviceDescriptor"**
  %12 = getelementptr inbounds void ()*, void ()** %9, i64 2
  %13 = bitcast void ()** %12 to i8*
  %14 = getelementptr inbounds void ()*, void ()** %9, i64 3
  %15 = bitcast %"class.base::OnceCallback.140"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %16 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = load void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, i8, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)*, void (%"class.device::UsbDeviceHandle"*, %"struct.device::UsbDeviceDescriptor"*, i8, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)** %8, align 8
  %18 = bitcast void ()** %9 to %"class.device::UsbDeviceHandle"**
  %19 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %18, align 8
  store %"class.device::UsbDeviceHandle"* null, %"class.device::UsbDeviceHandle"** %18, align 8
  %20 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %11, align 8
  %21 = load i8, i8* %13, align 1
  %22 = bitcast void ()** %14 to %"class.base::internal::BindStateBase"**
  %23 = bitcast void ()** %14 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %26, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %27) #15
  %28 = getelementptr inbounds %class.scoped_refptr.90, %class.scoped_refptr.90* %2, i64 0, i32 0
  %29 = load %"class.base::RefCountedBytes"*, %"class.base::RefCountedBytes"** %28, align 8
  store %"class.base::RefCountedBytes"* null, %"class.base::RefCountedBytes"** %28, align 8
  call void %17(%"class.device::UsbDeviceHandle"* %19, %"struct.device::UsbDeviceDescriptor"* %20, i8 zeroext %21, %"class.base::OnceCallback.140"* nonnull %5, i32 %1, %"class.base::RefCountedBytes"* %29, i64 %3) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #15
  %30 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS3_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS3_5mojom17UsbTransferStatusES2_INS_15RefCountedBytesEEmEJS5_S7_hNS_17RepeatingCallbackIS9_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.device::UsbDeviceHandle"**
  %8 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %7, align 8
  %9 = icmp eq %"class.device::UsbDeviceHandle"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.device::UsbDeviceHandle"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.device::UsbDeviceHandle"*)***
  %19 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %19, i64 14
  %21 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %20, align 8
  tail call void %21(%"class.device::UsbDeviceHandle"* nonnull %17) #15
  br label %22

22:                                               ; preds = %3, %10, %15
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_122OnReadConfigDescriptorEPNS_19UsbDeviceDescriptorEN4base12OnceCallbackIFvvEEENS_5mojom17UsbTransferStatusE13scoped_refptrINS3_15RefCountedBytesEEm(%"struct.device::UsbDeviceDescriptor"* nocapture, %"class.base::OnceCallback.140"* nocapture, i32, %"class.base::RefCountedBytes"*, i64) #2 {
  %6 = alloca %"class.base::OnceCallback.140", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %3, i64 0, i32 1, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call zeroext i1 @_ZN6device19UsbDeviceDescriptor5ParseEN4base4spanIKhLm18446744073709551615EEE(%"struct.device::UsbDeviceDescriptor"* %0, i64 %4, i8* %12)
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %15, label %16, label %28

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 114, i32 2) #15
  %18 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i64 41) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #15
  br label %28

21:                                               ; preds = %5
  %22 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i32 117, i32 2) #15
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), i64 40) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #15
  br label %28

28:                                               ; preds = %23, %21, %16, %14, %10
  %29 = bitcast %"class.base::OnceCallback.140"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback.140"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback.140"* %6 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %34 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %6, i64 0, i32 0
  %35 = inttoptr i64 %32 to %"class.base::internal::BindStateBase"*
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %37 = bitcast void ()** %36 to void (%"class.base::internal::BindStateBase"*)**
  %38 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %37, align 8
  call void %38(%"class.base::internal::BindStateBase"* %35) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %39 = icmp eq %"class.base::RefCountedBytes"* %3, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %3, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe.91"* %46 to %"class.base::RefCountedMemory"*
  %48 = bitcast %"class.base::RefCountedThreadSafe.91"* %46 to void (%"class.base::RefCountedMemory"*)***
  %49 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %49, i64 3
  %51 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %50, align 8
  call void %51(%"class.base::RefCountedMemory"* nonnull %47) #15
  br label %52

52:                                               ; preds = %28, %40, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS3_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJS5_S8_EEEFvSA_SD_mEE7RunOnceEPNS0_13BindStateBaseESA_OSD_m(%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90* dereferenceable(8), i64) #2 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.140", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)**
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to %"struct.device::UsbDeviceDescriptor"**
  %10 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %11 = bitcast %"class.base::OnceCallback.140"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = load void (%"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)*, void (%"struct.device::UsbDeviceDescriptor"*, %"class.base::OnceCallback.140"*, i32, %"class.base::RefCountedBytes"*, i64)** %7, align 8
  %13 = load %"struct.device::UsbDeviceDescriptor"*, %"struct.device::UsbDeviceDescriptor"** %9, align 8
  %14 = bitcast void ()** %10 to %"class.base::internal::BindStateBase"**
  %15 = bitcast void ()** %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback.140"* %5 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %class.scoped_refptr.90, %class.scoped_refptr.90* %2, i64 0, i32 0
  %19 = load %"class.base::RefCountedBytes"*, %"class.base::RefCountedBytes"** %18, align 8
  store %"class.base::RefCountedBytes"* null, %"class.base::RefCountedBytes"** %18, align 8
  call void %12(%"struct.device::UsbDeviceDescriptor"* %13, %"class.base::OnceCallback.140"* nonnull %5, i32 %1, %"class.base::RefCountedBytes"* %19, i64 %3) #15
  %20 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS2_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_122OnReadStringDescriptorEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEENS_5mojom17UsbTransferStatusE13scoped_refptrINS1_15RefCountedBytesEEm(%"class.base::OnceCallback.108"* nocapture, i32, %"class.base::RefCountedBytes"*, i64) #2 {
  %5 = alloca %"class.base::OnceCallback.108", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::OnceCallback.108", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.10", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #15
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %13, label %252

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::vector.10"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %2, i64 0, i32 1, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #15
  %17 = icmp eq i64 %3, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = icmp slt i64 %3, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector.10"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %21) #16
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %3) #14
  %24 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %9, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %9, i64 0, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 %3
  %27 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = bitcast i8** %24 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 %16, i64 %3, i1 false) #15
  %29 = ptrtoint i8* %26 to i64
  store i64 %29, i64* %28, align 8
  %30 = ptrtoint i8* %23 to i64
  br label %31

31:                                               ; preds = %13, %22
  %32 = phi i8* [ %23, %22 ], [ null, %13 ]
  %33 = phi i64 [ %30, %22 ], [ 0, %13 ]
  %34 = phi i64 [ %29, %22 ], [ 0, %13 ]
  %35 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %9, i64 0, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = sub i64 %34, %33
  %38 = icmp ult i64 %37, 2
  %39 = inttoptr i64 %33 to i8*
  br i1 %38, label %234, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds i8, i8* %39, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 3
  br i1 %43, label %44, label %234

44:                                               ; preds = %40
  %45 = load i8, i8* %39, align 1
  %46 = zext i8 %45 to i64
  %47 = icmp ult i64 %37, %46
  %48 = select i1 %47, i64 %37, i64 %46
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %234, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  %52 = getelementptr inbounds i8, i8* %39, i64 2
  %53 = bitcast i8* %52 to i16*
  %54 = add nsw i64 %48, -2
  %55 = lshr i64 %54, 1
  %56 = icmp ult i64 %54, 22
  br i1 %56, label %67, label %57

57:                                               ; preds = %50
  %58 = add nuw nsw i64 %55, 8
  %59 = and i64 %58, 9223372036854775800
  %60 = shl nuw i64 %59, 1
  %61 = tail call i8* @_Znwm(i64 %60) #14
  %62 = bitcast i8* %61 to i16*
  %63 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  store i8* %61, i8** %63, align 8
  %64 = or i64 %59, -9223372036854775808
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %66, align 8
  br label %75

67:                                               ; preds = %50
  %68 = trunc i64 %55 to i8
  %69 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %69, i64 0, i32 1, i32 1
  store i8 %68, i8* %70, align 1
  %71 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %72 = icmp eq i64 %55, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = getelementptr inbounds i16, i16* %71, i64 %55
  store i16 0, i16* %74, align 2
  br label %231

75:                                               ; preds = %67, %57
  %76 = phi i16* [ %62, %57 ], [ %71, %67 ]
  %77 = icmp ult i64 %54, 32
  br i1 %77, label %169, label %78

78:                                               ; preds = %75
  %79 = bitcast i16* %76 to i8*
  %80 = getelementptr i16, i16* %76, i64 %55
  %81 = bitcast i16* %80 to i8*
  %82 = and i64 %48, 254
  %83 = getelementptr i8, i8* %39, i64 %82
  %84 = icmp ugt i8* %83, %79
  %85 = icmp ult i8* %52, %81
  %86 = and i1 %84, %85
  br i1 %86, label %169, label %87

87:                                               ; preds = %78
  %88 = and i64 %55, 9223372036854775792
  %89 = sub nsw i64 %55, %88
  %90 = getelementptr i16, i16* %53, i64 %88
  %91 = getelementptr i16, i16* %76, i64 %88
  %92 = add nsw i64 %88, -16
  %93 = lshr exact i64 %92, 4
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 3
  %96 = icmp ult i64 %92, 48
  br i1 %96, label %148, label %97

97:                                               ; preds = %87
  %98 = sub nsw i64 %94, %95
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %145, %99 ]
  %101 = phi i64 [ %98, %97 ], [ %146, %99 ]
  %102 = getelementptr i16, i16* %53, i64 %100
  %103 = getelementptr i16, i16* %76, i64 %100
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !123
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !123
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !126, !noalias !123
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !126, !noalias !123
  %112 = or i64 %100, 16
  %113 = getelementptr i16, i16* %53, i64 %112
  %114 = getelementptr i16, i16* %76, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !123
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !123
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !126, !noalias !123
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !126, !noalias !123
  %123 = or i64 %100, 32
  %124 = getelementptr i16, i16* %53, i64 %123
  %125 = getelementptr i16, i16* %76, i64 %123
  %126 = bitcast i16* %124 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !123
  %128 = getelementptr i16, i16* %124, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !123
  %131 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !126, !noalias !123
  %132 = getelementptr i16, i16* %125, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !126, !noalias !123
  %134 = or i64 %100, 48
  %135 = getelementptr i16, i16* %53, i64 %134
  %136 = getelementptr i16, i16* %76, i64 %134
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !123
  %139 = getelementptr i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !123
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !126, !noalias !123
  %143 = getelementptr i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !126, !noalias !123
  %145 = add i64 %100, 64
  %146 = add i64 %101, -4
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %99, !llvm.loop !128

148:                                              ; preds = %99, %87
  %149 = phi i64 [ 0, %87 ], [ %145, %99 ]
  %150 = icmp eq i64 %95, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %164, %151 ], [ %149, %148 ]
  %153 = phi i64 [ %165, %151 ], [ %95, %148 ]
  %154 = getelementptr i16, i16* %53, i64 %152
  %155 = getelementptr i16, i16* %76, i64 %152
  %156 = bitcast i16* %154 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !123
  %158 = getelementptr i16, i16* %154, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !123
  %161 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !126, !noalias !123
  %162 = getelementptr i16, i16* %155, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !126, !noalias !123
  %164 = add i64 %152, 16
  %165 = add i64 %153, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !129

167:                                              ; preds = %151, %148
  %168 = icmp eq i64 %55, %88
  br i1 %168, label %222, label %169

169:                                              ; preds = %167, %78, %75
  %170 = phi i64 [ %55, %78 ], [ %55, %75 ], [ %89, %167 ]
  %171 = phi i16* [ %53, %78 ], [ %53, %75 ], [ %90, %167 ]
  %172 = phi i16* [ %76, %78 ], [ %76, %75 ], [ %91, %167 ]
  %173 = add nsw i64 %170, -1
  %174 = and i64 %170, 7
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %187, label %176

176:                                              ; preds = %169, %176
  %177 = phi i64 [ %182, %176 ], [ %170, %169 ]
  %178 = phi i16* [ %184, %176 ], [ %171, %169 ]
  %179 = phi i16* [ %183, %176 ], [ %172, %169 ]
  %180 = phi i64 [ %185, %176 ], [ %174, %169 ]
  %181 = load i16, i16* %178, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %177, -1
  %183 = getelementptr inbounds i16, i16* %179, i64 1
  %184 = getelementptr inbounds i16, i16* %178, i64 1
  %185 = add i64 %180, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %176, !llvm.loop !130

187:                                              ; preds = %176, %169
  %188 = phi i64 [ %170, %169 ], [ %182, %176 ]
  %189 = phi i16* [ %171, %169 ], [ %184, %176 ]
  %190 = phi i16* [ %172, %169 ], [ %183, %176 ]
  %191 = icmp ult i64 %173, 7
  br i1 %191, label %222, label %192

192:                                              ; preds = %187, %192
  %193 = phi i64 [ %218, %192 ], [ %188, %187 ]
  %194 = phi i16* [ %220, %192 ], [ %189, %187 ]
  %195 = phi i16* [ %219, %192 ], [ %190, %187 ]
  %196 = load i16, i16* %194, align 2
  store i16 %196, i16* %195, align 2
  %197 = getelementptr inbounds i16, i16* %195, i64 1
  %198 = getelementptr inbounds i16, i16* %194, i64 1
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %195, i64 2
  %201 = getelementptr inbounds i16, i16* %194, i64 2
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %195, i64 3
  %204 = getelementptr inbounds i16, i16* %194, i64 3
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %195, i64 4
  %207 = getelementptr inbounds i16, i16* %194, i64 4
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %195, i64 5
  %210 = getelementptr inbounds i16, i16* %194, i64 5
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %195, i64 6
  %213 = getelementptr inbounds i16, i16* %194, i64 6
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %195, i64 7
  %216 = getelementptr inbounds i16, i16* %194, i64 7
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = add i64 %193, -8
  %219 = getelementptr inbounds i16, i16* %195, i64 8
  %220 = getelementptr inbounds i16, i16* %194, i64 8
  %221 = icmp eq i64 %218, 0
  br i1 %221, label %222, label %192, !llvm.loop !131

222:                                              ; preds = %187, %192, %167
  %223 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = getelementptr inbounds i16, i16* %76, i64 %55
  store i16 0, i16* %227, align 2
  br i1 %226, label %228, label %231

228:                                              ; preds = %222
  %229 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %230 = load i8*, i8** %229, align 8
  tail call void @_ZdlPv(i8* %230) #14
  br label %231

231:                                              ; preds = %73, %228, %222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %51, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  %232 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %9, i64 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  br label %234

234:                                              ; preds = %31, %40, %44, %231
  %235 = phi i8* [ %32, %44 ], [ %233, %231 ], [ %32, %31 ], [ %32, %40 ]
  %236 = phi i1 [ false, %44 ], [ true, %231 ], [ false, %31 ], [ false, %40 ]
  %237 = icmp eq i8* %235, null
  br i1 %237, label %240, label %238

238:                                              ; preds = %234
  %239 = ptrtoint i8* %235 to i64
  store i64 %239, i64* %36, align 8
  tail call void @_ZdlPv(i8* nonnull %235) #14
  br label %240

240:                                              ; preds = %238, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  br i1 %236, label %241, label %252

241:                                              ; preds = %240
  %242 = bitcast %"class.base::OnceCallback.108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #15
  %243 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.base::OnceCallback.108"* %0 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.base::OnceCallback.108"* %5 to i64*
  store i64 %245, i64* %246, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %243, align 8
  %247 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %5, i64 0, i32 0
  %248 = inttoptr i64 %245 to %"class.base::internal::BindStateBase"*
  %249 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %248, i64 0, i32 1
  %250 = bitcast void ()** %249 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %251 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %250, align 8
  call void %251(%"class.base::internal::BindStateBase"* %248, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %247) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #15
  br label %272

252:                                              ; preds = %4, %240
  %253 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %253) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 0, i64 24, i1 false) #15
  %254 = bitcast %"class.base::OnceCallback.108"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #15
  %255 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %0, i64 0, i32 0, i32 0, i32 0
  %256 = bitcast %"class.base::OnceCallback.108"* %0 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.base::OnceCallback.108"* %7 to i64*
  store i64 %257, i64* %258, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %255, align 8
  %259 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %7, i64 0, i32 0
  %260 = inttoptr i64 %257 to %"class.base::internal::BindStateBase"*
  %261 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %260, i64 0, i32 1
  %262 = bitcast void ()** %261 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %263 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %262, align 8
  call void %263(%"class.base::internal::BindStateBase"* %260, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %259) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #15
  %264 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %264, i64 0, i32 1, i32 1
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %252
  %269 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %270 = load i8*, i8** %269, align 8
  call void @_ZdlPv(i8* %270) #14
  br label %271

271:                                              ; preds = %252, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %253) #15
  br label %272

272:                                              ; preds = %271, %241
  %273 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %273, i64 0, i32 1, i32 1
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %272
  %278 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %279 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %279) #14
  br label %280

280:                                              ; preds = %272, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %281 = icmp eq %"class.base::RefCountedBytes"* %2, null
  br i1 %281, label %294, label %282

282:                                              ; preds = %280
  %283 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %2, i64 0, i32 0, i32 1
  %284 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %283, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = atomicrmw sub i32* %284, i32 1 acq_rel
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %287, label %294

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.base::RefCountedThreadSafe.91", %"class.base::RefCountedThreadSafe.91"* %283, i64 -2
  %289 = bitcast %"class.base::RefCountedThreadSafe.91"* %288 to %"class.base::RefCountedMemory"*
  %290 = bitcast %"class.base::RefCountedThreadSafe.91"* %288 to void (%"class.base::RefCountedMemory"*)***
  %291 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %290, align 8
  %292 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %291, i64 3
  %293 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %292, align 8
  call void %293(%"class.base::RefCountedMemory"* nonnull %289) #15
  br label %294

294:                                              ; preds = %280, %282, %287
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSE_EEEFvSH_SK_mEE7RunOnceEPNS0_13BindStateBaseESH_OSK_m(%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90* dereferenceable(8), i64) #2 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.108", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"class.base::OnceCallback.108"*, i32, %"class.base::RefCountedBytes"*, i64)**
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast %"class.base::OnceCallback.108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = load void (%"class.base::OnceCallback.108"*, i32, %"class.base::RefCountedBytes"*, i64)*, void (%"class.base::OnceCallback.108"*, i32, %"class.base::RefCountedBytes"*, i64)** %7, align 8
  %11 = bitcast void ()** %8 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.108"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %class.scoped_refptr.90, %class.scoped_refptr.90* %2, i64 0, i32 0
  %16 = load %"class.base::RefCountedBytes"*, %"class.base::RefCountedBytes"** %15, align 8
  store %"class.base::RefCountedBytes"* null, %"class.base::RefCountedBytes"** %15, align 8
  call void %10(%"class.base::OnceCallback.108"* nonnull %5, i32 %1, %"class.base::RefCountedBytes"* %16, i64 %3) #15
  %17 = getelementptr inbounds %"class.base::OnceCallback.108", %"class.base::OnceCallback.108"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6device12_GLOBAL__N_121StoreStringDescriptorENSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeIhNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEPNS1_11__tree_nodeISB_PvEElEEEEN4base12OnceCallbackIFvvEEERKSA_(%"class.std::__1::__tree_end_node"*, %"class.base::OnceCallback.140"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) #2 {
  %4 = alloca %"class.base::OnceCallback.140", align 8
  %5 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %0, i64 5
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::basic_string"*
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %8 = bitcast %"class.base::OnceCallback.140"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.140"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.140"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %4, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !117
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !117
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !117
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEEEEJSM_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.93", align 8
  %3 = alloca %"class.base::OnceCallback.107", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.std::__1::map"**
  %7 = bitcast void ()** %5 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %6, align 8
  %9 = bitcast %"class.std::__1::unique_ptr.93"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.93"* %2 to i64*
  store i64 %8, i64* %11, align 8
  %12 = bitcast %"class.base::OnceCallback.107"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::BindStateBase"**
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback.107"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.107", %"class.base::OnceCallback.107"* %3, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.93"*)**
  %21 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.93"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.93"*)** %20, align 8
  call void %21(%"class.base::internal::BindStateBase"* %18, %"class.std::__1::unique_ptr.93"* nonnull dereferenceable(8) %2) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %22 = load %"class.std::__1::map"*, %"class.std::__1::map"** %10, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %10, align 8
  %23 = icmp eq %"class.std::__1::map"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %22, i64 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node.197"**
  %28 = load %"class.std::__1::__tree_node.197"*, %"class.std::__1::__tree_node.197"** %27, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %25, %"class.std::__1::__tree_node.197"* %28) #15
  %29 = bitcast %"class.std::__1::map"* %22 to i8*
  call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS3_3mapIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS3_4lessIhEENS9_INS3_4pairIKhSB_EEEEEENS3_14default_deleteISI_EEEEEEEJSL_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::map"**
  %6 = load %"class.std::__1::map"*, %"class.std::__1::map"** %5, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %5, align 8
  %7 = icmp eq %"class.std::__1::map"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node.197"**
  %12 = load %"class.std::__1::__tree_node.197"*, %"class.std::__1::__tree_node.197"** %11, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node.197"* %12) #15
  %13 = bitcast %"class.std::__1::map"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %3, %8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %16 = bitcast %"class.base::internal::BindStateBase"* %15 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #15
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %14, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvNSt3__110unique_ptrINS4_3mapIhNS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS4_4lessIhEENSA_INS4_4pairIKhSC_EEEEEENS4_14default_deleteISJ_EEEEEEEJSM_EEEEEbPKNS0_13BindStateBaseENSQ_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #15
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #15
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEPNS3_11__tree_nodeISD_PvEElEEEENS_12OnceCallbackIFvvEEERKSC_EJSJ_NS_17RepeatingCallbackISL_EEEEEFvSO_EE7RunOnceEPNS0_13BindStateBaseESO_(%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.140", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to void (%"class.std::__1::__tree_end_node"*, %"class.base::OnceCallback.140"*, %"class.std::__1::basic_string"*)**
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = getelementptr inbounds void ()*, void ()** %7, i64 1
  %9 = bitcast %"class.base::OnceCallback.140"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = load void (%"class.std::__1::__tree_end_node"*, %"class.base::OnceCallback.140"*, %"class.std::__1::basic_string"*)*, void (%"class.std::__1::__tree_end_node"*, %"class.base::OnceCallback.140"*, %"class.std::__1::basic_string"*)** %6, align 8
  %12 = bitcast void ()** %7 to %"class.std::__1::__tree_end_node"**
  %13 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = bitcast void ()** %8 to %"class.base::internal::BindStateBase"**
  %15 = bitcast void ()** %8 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::RepeatingCallback"* %4 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback.140", %"class.base::OnceCallback.140"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %18, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %19) #15
  call void %11(%"class.std::__1::__tree_end_node"* %13, %"class.base::OnceCallback.140"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #15
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__114__map_iteratorINS2_15__tree_iteratorINS2_12__value_typeIhNS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEPNS2_11__tree_nodeISC_PvEElEEEENS_12OnceCallbackIFvvEEERKSB_EJSI_NS_17RepeatingCallbackISK_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !132
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !132
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !135, !noalias !132
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !135, !noalias !132
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !132
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !132
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !135, !noalias !132
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !135, !noalias !132
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !132
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !132
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !135, !noalias !132
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !135, !noalias !132
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !132
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !132
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !135, !noalias !132
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !135, !noalias !132
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !137

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !132
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !132
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !135, !noalias !132
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !135, !noalias !132
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !138

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !139

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !140

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #16
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #16
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !141
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !141
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !144, !noalias !141
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !144, !noalias !141
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !141
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !141
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !144, !noalias !141
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !144, !noalias !141
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !141
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !141
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !144, !noalias !141
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !144, !noalias !141
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !141
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !141
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !144, !noalias !141
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !144, !noalias !141
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !146

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !141
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !141
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !144, !noalias !141
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !144, !noalias !141
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !147

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !148

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !149

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !150
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !150
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !153, !noalias !150
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !153, !noalias !150
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !150
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !150
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !153, !noalias !150
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !153, !noalias !150
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !150
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !150
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !153, !noalias !150
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !153, !noalias !150
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !150
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !150
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !153, !noalias !150
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !153, !noalias !150
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !155

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !150
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !150
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !153, !noalias !150
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !153, !noalias !150
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !156

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !157

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !158

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #15
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #2 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #16
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #16
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !159
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !159
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !162, !noalias !159
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !162, !noalias !159
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !159
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !159
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !162, !noalias !159
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !162, !noalias !159
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !159
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !159
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !162, !noalias !159
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !162, !noalias !159
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !159
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !159
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !162, !noalias !159
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !162, !noalias !159
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !164

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !159
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !159
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !162, !noalias !159
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !162, !noalias !159
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !165

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !166

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !167

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !168

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !169

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !170

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !172
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !172
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !175, !noalias !172
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !175, !noalias !172
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !172
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !172
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !175, !noalias !172
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !175, !noalias !172
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !172
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !172
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !175, !noalias !172
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !175, !noalias !172
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !172
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !172
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !175, !noalias !172
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !175, !noalias !172
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !177

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !172
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !172
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !175, !noalias !172
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !175, !noalias !172
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !178

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !179

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !180

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE7destroyEPNSB_ISH_SC_EE(%"class.std::__1::__tree.171"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE7destroyEPNSB_ISH_SC_EE(%"class.std::__1::__tree.171"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE7destroyEPNSB_ISH_SC_EE(%"class.std::__1::__tree.171"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6device5mojom25UsbAlternateInterfaceInfoD1Ev(%"class.device::mojom::UsbAlternateInterfaceInfo"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.197"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.197"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.197"* %1 to %"class.std::__1::__tree_node.197"**
  %6 = load %"class.std::__1::__tree_node.197"*, %"class.std::__1::__tree_node.197"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.197"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.197", %"class.std::__1::__tree_node.197"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.197"**
  %9 = load %"class.std::__1::__tree_node.197"*, %"class.std::__1::__tree_node.197"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.197"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.197", %"class.std::__1::__tree_node.197"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.197"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare void @_ZN6device5mojom13UsbDeviceInfoC1Ev(%"class.device::mojom::UsbDeviceInfo"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom20UsbConfigurationInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.55"*, %"class.mojo::StructPtr.57"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr.57"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.55"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.57"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr.57"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr.57"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr.57"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr.57"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr.57"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr.57"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr.57"* %47 to i64
  %49 = load %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr.57"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.device::mojom::UsbConfigurationInfo"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr.57"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr.57"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr.57"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr.57"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !181

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr.57"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr.57"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr.57"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr.57"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr.57"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr.57"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr.57"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr.57"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr.57"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr.57"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr.57"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr.57"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.57"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr.57"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr.57"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr.57"*, %"class.mojo::StructPtr.57"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr.57"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr.57"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr.57"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr.57"*
  %114 = icmp eq %"class.mojo::StructPtr.57"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr.57"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr.57", %"class.mojo::StructPtr.57"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.device::mojom::UsbConfigurationInfo"*, %"class.device::mojom::UsbConfigurationInfo"** %118, align 8
  store %"class.device::mojom::UsbConfigurationInfo"* null, %"class.device::mojom::UsbConfigurationInfo"** %118, align 8
  %120 = icmp eq %"class.device::mojom::UsbConfigurationInfo"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN6device5mojom20UsbConfigurationInfoD1Ev(%"class.device::mojom::UsbConfigurationInfo"* nonnull %119) #15
  %122 = getelementptr inbounds %"class.device::mojom::UsbConfigurationInfo", %"class.device::mojom::UsbConfigurationInfo"* %119, i64 0, i32 0
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr.57"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom16UsbInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.61"*, %"class.mojo::StructPtr.63"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr.63"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.61"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.63"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr.63"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr.63"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr.63"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr.63"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr.63"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr.63"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr.63"* %47 to i64
  %49 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr.63"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.device::mojom::UsbInterfaceInfo"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr.63"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr.63"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr.63"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr.63"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !182

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr.63"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr.63"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr.63"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr.63"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr.63"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr.63"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr.63"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr.63"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr.63"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr.63"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr.63"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr.63"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.63"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr.63"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr.63"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr.63"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr.63"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr.63"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr.63"*
  %114 = icmp eq %"class.mojo::StructPtr.63"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr.63"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.device::mojom::UsbInterfaceInfo"*, %"class.device::mojom::UsbInterfaceInfo"** %118, align 8
  store %"class.device::mojom::UsbInterfaceInfo"* null, %"class.device::mojom::UsbInterfaceInfo"** %118, align 8
  %120 = icmp eq %"class.device::mojom::UsbInterfaceInfo"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN6device5mojom16UsbInterfaceInfoD1Ev(%"class.device::mojom::UsbInterfaceInfo"* nonnull %119) #15
  %122 = getelementptr inbounds %"class.device::mojom::UsbInterfaceInfo", %"class.device::mojom::UsbInterfaceInfo"* %119, i64 0, i32 0
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr.63"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom15UsbEndpointInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"*, %"class.mojo::StructPtr.6"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr.6"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.6"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr.6"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr.6"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr.6"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr.6"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr.6"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr.6"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr.6"* %47 to i64
  %49 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr.6"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.device::mojom::UsbEndpointInfo"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr.6"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr.6"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr.6"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr.6"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !183

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr.6"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr.6"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr.6"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr.6"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr.6"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr.6"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr.6"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr.6"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr.6"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr.6"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr.6"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr.6"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.6"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr.6"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr.6"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr.6"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr.6"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr.6"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr.6"*
  %114 = icmp eq %"class.mojo::StructPtr.6"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr.6"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.device::mojom::UsbEndpointInfo"*, %"class.device::mojom::UsbEndpointInfo"** %118, align 8
  store %"class.device::mojom::UsbEndpointInfo"* null, %"class.device::mojom::UsbEndpointInfo"** %118, align 8
  %120 = icmp eq %"class.device::mojom::UsbEndpointInfo"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN6device5mojom15UsbEndpointInfoD1Ev(%"class.device::mojom::UsbEndpointInfo"* nonnull %119) #15
  %122 = getelementptr inbounds %"class.device::mojom::UsbEndpointInfo", %"class.device::mojom::UsbEndpointInfo"* %119, i64 0, i32 0
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr.6"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS8_14default_deleteISA_EEEEEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJS6_SF_EEEFvSH_SJ_mEE7RunOnceEPNS0_13BindStateBaseESH_OSJ_m(%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.90* dereferenceable(8), i64) #2 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"class.device::UsbDeviceHandle"*, %"class.base::OnceCallback"*, i32, %"class.base::RefCountedBytes"*, i64)**
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %10 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = load void (%"class.device::UsbDeviceHandle"*, %"class.base::OnceCallback"*, i32, %"class.base::RefCountedBytes"*, i64)*, void (%"class.device::UsbDeviceHandle"*, %"class.base::OnceCallback"*, i32, %"class.base::RefCountedBytes"*, i64)** %7, align 8
  %12 = bitcast void ()** %8 to %"class.device::UsbDeviceHandle"**
  %13 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %12, align 8
  store %"class.device::UsbDeviceHandle"* null, %"class.device::UsbDeviceHandle"** %12, align 8
  %14 = bitcast void ()** %9 to %"class.base::internal::BindStateBase"**
  %15 = bitcast void ()** %9 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %class.scoped_refptr.90, %class.scoped_refptr.90* %2, i64 0, i32 0
  %19 = load %"class.base::RefCountedBytes"*, %"class.base::RefCountedBytes"** %18, align 8
  store %"class.base::RefCountedBytes"* null, %"class.base::RefCountedBytes"** %18, align 8
  call void %11(%"class.device::UsbDeviceHandle"* %13, %"class.base::OnceCallback"* nonnull %5, i32 %1, %"class.base::RefCountedBytes"* %19, i64 %3) #15
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS3_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEEEEENS3_5mojom17UsbTransferStatusES2_INS_15RefCountedBytesEEmEJS5_SE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.device::UsbDeviceHandle"**
  %8 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %7, align 8
  %9 = icmp eq %"class.device::UsbDeviceHandle"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.device::UsbDeviceHandle"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.device::UsbDeviceHandle"*)***
  %19 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %19, i64 14
  %21 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %20, align 8
  tail call void %21(%"class.device::UsbDeviceHandle"* nonnull %17) #15
  br label %22

22:                                               ; preds = %3, %10, %15
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS7_3mapIhNS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS7_4lessIhEENSD_INS7_4pairIKhSF_EEEEEENS7_14default_deleteISM_EEEENS_12OnceCallbackIFvSP_EEERKSF_EJS6_SP_SS_EEEFvSU_EE7RunOnceEPNS0_13BindStateBaseESU_(%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.107", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.device::UsbDeviceHandle"*, %"class.std::__1::map"*, %"class.base::OnceCallback.107"*, %"class.std::__1::basic_string"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %8 = bitcast %"class.base::OnceCallback.107"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = load void (%"class.device::UsbDeviceHandle"*, %"class.std::__1::map"*, %"class.base::OnceCallback.107"*, %"class.std::__1::basic_string"*)*, void (%"class.device::UsbDeviceHandle"*, %"class.std::__1::map"*, %"class.base::OnceCallback.107"*, %"class.std::__1::basic_string"*)** %5, align 8
  %10 = bitcast void ()** %6 to %"class.device::UsbDeviceHandle"**
  %11 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %10, align 8
  store %"class.device::UsbDeviceHandle"* null, %"class.device::UsbDeviceHandle"** %10, align 8
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %13 = bitcast void ()** %12 to %"class.std::__1::map"**
  %14 = load %"class.std::__1::map"*, %"class.std::__1::map"** %13, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %13, align 8
  %15 = bitcast void ()** %7 to %"class.base::internal::BindStateBase"**
  %16 = bitcast void ()** %7 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.107"* %3 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  call void %9(%"class.device::UsbDeviceHandle"* %11, %"class.std::__1::map"* %14, %"class.base::OnceCallback.107"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #15
  %19 = getelementptr inbounds %"class.base::OnceCallback.107", %"class.base::OnceCallback.107"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS6_3mapIhNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENS6_4lessIhEENSC_INS6_4pairIKhSE_EEEEEENS6_14default_deleteISL_EEEENS_12OnceCallbackIFvSO_EEERKSE_EJS5_SO_SR_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.std::__1::map"**
  %8 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %7, align 8
  %9 = icmp eq %"class.std::__1::map"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.197"**
  %14 = load %"class.std::__1::__tree_node.197"*, %"class.std::__1::__tree_node.197"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_19__map_value_compareIhS8_NS_4lessIhEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %11, %"class.std::__1::__tree_node.197"* %14) #15
  %15 = bitcast %"class.std::__1::map"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %10, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"class.device::UsbDeviceHandle"**
  %19 = load %"class.device::UsbDeviceHandle"*, %"class.device::UsbDeviceHandle"** %18, align 8
  %20 = icmp eq %"class.device::UsbDeviceHandle"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.device::UsbDeviceHandle", %"class.device::UsbDeviceHandle"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.device::UsbDeviceHandle"*
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %27 to void (%"class.device::UsbDeviceHandle"*)***
  %30 = load void (%"class.device::UsbDeviceHandle"*)**, void (%"class.device::UsbDeviceHandle"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %30, i64 14
  %32 = load void (%"class.device::UsbDeviceHandle"*)*, void (%"class.device::UsbDeviceHandle"*)** %31, align 8
  tail call void %32(%"class.device::UsbDeviceHandle"* nonnull %28) #15
  br label %33

33:                                               ; preds = %16, %21, %26
  %34 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %1
  ret void
}

declare void @_ZN6device5mojom15UsbEndpointInfoC1Ev(%"class.device::mojom::UsbEndpointInfo"*) unnamed_addr #4

declare void @_ZN6device5mojom16UsbInterfaceInfoC1Ev(%"class.device::mojom::UsbInterfaceInfo"*) unnamed_addr #4

declare void @_ZN6device5mojom25UsbAlternateInterfaceInfoC1Ev(%"class.device::mojom::UsbAlternateInterfaceInfo"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN6device5mojom25UsbAlternateInterfaceInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.mojo::StructPtr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr"* %47 to i64
  %49 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.device::mojom::UsbAlternateInterfaceInfo"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !184

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr"*
  %114 = icmp eq %"class.mojo::StructPtr"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.device::mojom::UsbAlternateInterfaceInfo"*, %"class.device::mojom::UsbAlternateInterfaceInfo"** %118, align 8
  store %"class.device::mojom::UsbAlternateInterfaceInfo"* null, %"class.device::mojom::UsbAlternateInterfaceInfo"** %118, align 8
  %120 = icmp eq %"class.device::mojom::UsbAlternateInterfaceInfo"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN6device5mojom25UsbAlternateInterfaceInfoD1Ev(%"class.device::mojom::UsbAlternateInterfaceInfo"* nonnull %119) #15
  %122 = getelementptr inbounds %"class.device::mojom::UsbAlternateInterfaceInfo", %"class.device::mojom::UsbAlternateInterfaceInfo"* %119, i64 0, i32 0
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.110"*, %"class.std::__1::__tree_node.237"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.237"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.237"* %1 to %"class.std::__1::__tree_node.237"**
  %6 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.110"* %0, %"class.std::__1::__tree_node.237"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.237"**
  %9 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.110"* %0, %"class.std::__1::__tree_node.237"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node.237"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN6device5mojom20UsbConfigurationInfoC1Ev(%"class.device::mojom::UsbConfigurationInfo"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEvT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*) unnamed_addr #2 {
  br label %3

3:                                                ; preds = %396, %2
  %4 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %1, %2 ], [ %374, %396 ]
  %5 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %0, %2 ], [ %20, %396 ]
  %6 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4 to i64
  %7 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7, i64 0, i32 0
  %9 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7 to i16*
  %10 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7 to i16*
  %11 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7 to i16*
  %12 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7, i64 0, i32 0
  %13 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7 to i16*
  %14 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7, i64 0, i32 0
  %15 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %7 to i16*
  %16 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4 to i64
  br label %17

17:                                               ; preds = %405, %3
  %18 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %5, %3 ], [ %406, %405 ]
  br label %19

19:                                               ; preds = %319, %17
  %20 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %18, %17 ], [ %308, %319 ]
  %21 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i64
  %22 = sub i64 %6, %21
  %23 = ashr exact i64 %22, 1
  switch i64 %23, label %117 [
    i64 0, label %409
    i64 1, label %409
    i64 2, label %24
    i64 3, label %36
    i64 4, label %75
    i64 5, label %80
  ]

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4, i64 -1
  %26 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp ult i8 %27, %29
  br i1 %30, label %31, label %409

31:                                               ; preds = %24
  %32 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %33 = load i16, i16* %32, align 1
  %34 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %25 to i16*
  %35 = load i16, i16* %34, align 1
  store i16 %35, i16* %32, align 1
  store i16 %33, i16* %34, align 1
  br label %409

36:                                               ; preds = %19
  %37 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 1
  %38 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4, i64 -1
  %39 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37, i64 0, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp ult i8 %40, %42
  %44 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %38, i64 0, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp ult i8 %45, %40
  br i1 %43, label %60, label %47

47:                                               ; preds = %36
  br i1 %46, label %48, label %409

48:                                               ; preds = %47
  %49 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37 to i16*
  %50 = load i16, i16* %49, align 1
  %51 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %38 to i16*
  %52 = load i16, i16* %51, align 1
  store i16 %52, i16* %49, align 1
  store i16 %50, i16* %51, align 1
  %53 = load i8, i8* %39, align 1
  %54 = load i8, i8* %41, align 1
  %55 = icmp ult i8 %53, %54
  br i1 %55, label %56, label %409

56:                                               ; preds = %48
  %57 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %58 = load i16, i16* %57, align 1
  %59 = load i16, i16* %49, align 1
  store i16 %59, i16* %57, align 1
  store i16 %58, i16* %49, align 1
  br label %409

60:                                               ; preds = %36
  %61 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %62 = load i16, i16* %61, align 1
  br i1 %46, label %63, label %66

63:                                               ; preds = %60
  %64 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %38 to i16*
  %65 = load i16, i16* %64, align 1
  store i16 %65, i16* %61, align 1
  store i16 %62, i16* %64, align 1
  br label %409

66:                                               ; preds = %60
  %67 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %37 to i16*
  %68 = load i16, i16* %67, align 1
  store i16 %68, i16* %61, align 1
  store i16 %62, i16* %67, align 1
  %69 = load i8, i8* %44, align 1
  %70 = trunc i16 %62 to i8
  %71 = icmp ult i8 %69, %70
  br i1 %71, label %72, label %409

72:                                               ; preds = %66
  %73 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %38 to i16*
  %74 = load i16, i16* %73, align 1
  store i16 %74, i16* %67, align 1
  store i16 %62, i16* %73, align 1
  br label %409

75:                                               ; preds = %19
  %76 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 1
  %77 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 2
  %78 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4, i64 -1
  %79 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %76, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %77, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %78)
  br label %409

80:                                               ; preds = %19
  %81 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 1
  %82 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 2
  %83 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 3
  %84 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4, i64 -1
  %85 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %81, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %82, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %83) #15
  %86 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %84, i64 0, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %83, i64 0, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp ult i8 %87, %89
  br i1 %90, label %91, label %409

91:                                               ; preds = %80
  %92 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %83 to i16*
  %93 = load i16, i16* %92, align 1
  %94 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %84 to i16*
  %95 = load i16, i16* %94, align 1
  store i16 %95, i16* %92, align 1
  store i16 %93, i16* %94, align 1
  %96 = load i8, i8* %88, align 1
  %97 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %82, i64 0, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp ult i8 %96, %98
  br i1 %99, label %100, label %409

100:                                              ; preds = %91
  %101 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %82 to i16*
  %102 = load i16, i16* %101, align 1
  %103 = load i16, i16* %92, align 1
  store i16 %103, i16* %101, align 1
  store i16 %102, i16* %92, align 1
  %104 = trunc i16 %103 to i8
  %105 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %81, i64 0, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp ugt i8 %106, %104
  br i1 %107, label %108, label %409

108:                                              ; preds = %100
  %109 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %81 to i16*
  %110 = load i16, i16* %109, align 1
  store i16 %103, i16* %109, align 1
  store i16 %110, i16* %101, align 1
  %111 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp ugt i8 %112, %104
  br i1 %113, label %114, label %409

114:                                              ; preds = %108
  %115 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %116 = load i16, i16* %115, align 1
  store i16 %103, i16* %115, align 1
  store i16 %116, i16* %109, align 1
  br label %409

117:                                              ; preds = %19
  %118 = icmp slt i64 %22, 62
  br i1 %118, label %119, label %192

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 2
  %121 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 1
  %122 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %121, i64 0, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp ult i8 %123, %125
  %127 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %120, i64 0, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp ult i8 %128, %123
  br i1 %126, label %142, label %130

130:                                              ; preds = %119
  br i1 %129, label %131, label %157

131:                                              ; preds = %130
  %132 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %121 to i16*
  %133 = load i16, i16* %132, align 1
  %134 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %120 to i16*
  %135 = load i16, i16* %134, align 1
  store i16 %135, i16* %132, align 1
  store i16 %133, i16* %134, align 1
  %136 = trunc i16 %135 to i8
  %137 = icmp ugt i8 %125, %136
  %138 = trunc i16 %133 to i8
  br i1 %137, label %139, label %157

139:                                              ; preds = %131
  %140 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %141 = load i16, i16* %140, align 1
  store i16 %135, i16* %140, align 1
  store i16 %141, i16* %132, align 1
  br label %157

142:                                              ; preds = %119
  %143 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %144 = load i16, i16* %143, align 1
  br i1 %129, label %145, label %149

145:                                              ; preds = %142
  %146 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %120 to i16*
  %147 = load i16, i16* %146, align 1
  store i16 %147, i16* %143, align 1
  store i16 %144, i16* %146, align 1
  %148 = trunc i16 %144 to i8
  br label %157

149:                                              ; preds = %142
  %150 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %121 to i16*
  %151 = load i16, i16* %150, align 1
  store i16 %151, i16* %143, align 1
  store i16 %144, i16* %150, align 1
  %152 = trunc i16 %144 to i8
  %153 = icmp ult i8 %128, %152
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %120 to i16*
  %156 = load i16, i16* %155, align 1
  store i16 %156, i16* %150, align 1
  store i16 %144, i16* %155, align 1
  br label %157

157:                                              ; preds = %154, %149, %145, %139, %131, %130
  %158 = phi i8 [ %128, %130 ], [ %138, %131 ], [ %138, %139 ], [ %148, %145 ], [ %128, %149 ], [ %152, %154 ]
  %159 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 3
  %160 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %159, %4
  br i1 %160, label %409, label %161

161:                                              ; preds = %157, %190
  %162 = phi i8 [ %191, %190 ], [ %158, %157 ]
  %163 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %188, %190 ], [ %159, %157 ]
  %164 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %163, %190 ], [ %120, %157 ]
  %165 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %163, i64 0, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp ult i8 %166, %162
  br i1 %167, label %168, label %187

168:                                              ; preds = %161
  %169 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %163 to i16*
  %170 = load i16, i16* %169, align 1
  %171 = trunc i16 %170 to i8
  br label %172

172:                                              ; preds = %179, %168
  %173 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %163, %168 ], [ %174, %179 ]
  %174 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %164, %168 ], [ %180, %179 ]
  %175 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %174 to i16*
  %176 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %173 to i16*
  %177 = load i16, i16* %175, align 1
  store i16 %177, i16* %176, align 1
  %178 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %174, %20
  br i1 %178, label %184, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %174, i64 -1
  %181 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %180, i64 0, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp ugt i8 %182, %171
  br i1 %183, label %172, label %184

184:                                              ; preds = %172, %179
  %185 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %174, %179 ], [ %20, %172 ]
  %186 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %185 to i16*
  store i16 %170, i16* %186, align 1
  br label %187

187:                                              ; preds = %184, %161
  %188 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %163, i64 1
  %189 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %188, %4
  br i1 %189, label %409, label %190

190:                                              ; preds = %187
  %191 = load i8, i8* %165, align 1
  br label %161

192:                                              ; preds = %117
  %193 = icmp sgt i64 %22, 1998
  %194 = sdiv i64 %23, 2
  %195 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 %194
  br i1 %193, label %196, label %237

196:                                              ; preds = %192
  %197 = sdiv i64 %23, 4
  %198 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 %197
  %199 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195, i64 %197
  %200 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %198, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %199) #15
  %201 = load i8, i8* %12, align 1
  %202 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %199, i64 0, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp ult i8 %201, %203
  br i1 %204, label %205, label %270

205:                                              ; preds = %196
  %206 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %199 to i16*
  %207 = load i16, i16* %206, align 1
  %208 = load i16, i16* %13, align 1
  store i16 %208, i16* %206, align 1
  store i16 %207, i16* %13, align 1
  %209 = add i32 %200, 1
  %210 = load i8, i8* %202, align 1
  %211 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195, i64 0, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp ult i8 %210, %212
  br i1 %213, label %214, label %270

214:                                              ; preds = %205
  %215 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195 to i16*
  %216 = load i16, i16* %215, align 1
  %217 = load i16, i16* %206, align 1
  store i16 %217, i16* %215, align 1
  store i16 %216, i16* %206, align 1
  %218 = add i32 %200, 2
  %219 = load i8, i8* %211, align 1
  %220 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %198, i64 0, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp ult i8 %219, %221
  br i1 %222, label %223, label %270

223:                                              ; preds = %214
  %224 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %198 to i16*
  %225 = load i16, i16* %224, align 1
  %226 = load i16, i16* %215, align 1
  store i16 %226, i16* %224, align 1
  store i16 %225, i16* %215, align 1
  %227 = add i32 %200, 3
  %228 = load i8, i8* %220, align 1
  %229 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp ult i8 %228, %230
  br i1 %231, label %232, label %270

232:                                              ; preds = %223
  %233 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %234 = load i16, i16* %233, align 1
  %235 = load i16, i16* %224, align 1
  store i16 %235, i16* %233, align 1
  store i16 %234, i16* %224, align 1
  %236 = add i32 %200, 4
  br label %270

237:                                              ; preds = %192
  %238 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195, i64 0, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp ult i8 %239, %241
  %243 = load i8, i8* %8, align 1
  %244 = icmp ult i8 %243, %239
  br i1 %242, label %257, label %245

245:                                              ; preds = %237
  br i1 %244, label %246, label %270

246:                                              ; preds = %245
  %247 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195 to i16*
  %248 = load i16, i16* %247, align 1
  %249 = load i16, i16* %9, align 1
  store i16 %249, i16* %247, align 1
  store i16 %248, i16* %9, align 1
  %250 = load i8, i8* %238, align 1
  %251 = load i8, i8* %240, align 1
  %252 = icmp ult i8 %250, %251
  br i1 %252, label %253, label %270

253:                                              ; preds = %246
  %254 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %255 = load i16, i16* %254, align 1
  %256 = load i16, i16* %247, align 1
  store i16 %256, i16* %254, align 1
  store i16 %255, i16* %247, align 1
  br label %270

257:                                              ; preds = %237
  %258 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %259 = load i16, i16* %258, align 1
  br i1 %244, label %260, label %262

260:                                              ; preds = %257
  %261 = load i16, i16* %11, align 1
  store i16 %261, i16* %258, align 1
  store i16 %259, i16* %11, align 1
  br label %270

262:                                              ; preds = %257
  %263 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195 to i16*
  %264 = load i16, i16* %263, align 1
  store i16 %264, i16* %258, align 1
  store i16 %259, i16* %263, align 1
  %265 = load i8, i8* %8, align 1
  %266 = trunc i16 %259 to i8
  %267 = icmp ult i8 %265, %266
  br i1 %267, label %268, label %270

268:                                              ; preds = %262
  %269 = load i16, i16* %10, align 1
  store i16 %269, i16* %263, align 1
  store i16 %259, i16* %10, align 1
  br label %270

270:                                              ; preds = %268, %262, %260, %253, %246, %245, %232, %223, %214, %205, %196
  %271 = phi i32 [ %236, %232 ], [ %227, %223 ], [ %218, %214 ], [ %209, %205 ], [ %200, %196 ], [ 1, %260 ], [ 0, %245 ], [ 2, %253 ], [ 1, %246 ], [ 2, %268 ], [ 1, %262 ]
  %272 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %273 = load i8, i8* %272, align 1
  %274 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %195, i64 0, i32 0
  %275 = load i8, i8* %274, align 1
  %276 = icmp ult i8 %273, %275
  br i1 %276, label %336, label %277

277:                                              ; preds = %270, %326
  %278 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %279, %326 ], [ %7, %270 ]
  %279 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %278, i64 -1
  %280 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, %279
  br i1 %280, label %281, label %326

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 1
  %283 = load i8, i8* %14, align 1
  %284 = icmp ult i8 %273, %283
  br i1 %284, label %300, label %285

285:                                              ; preds = %281
  %286 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %282, %7
  br i1 %286, label %409, label %287

287:                                              ; preds = %285, %297
  %288 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %298, %297 ], [ %282, %285 ]
  %289 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %288, i64 0, i32 0
  %290 = load i8, i8* %289, align 1
  %291 = icmp ult i8 %273, %290
  br i1 %291, label %292, label %297

292:                                              ; preds = %287
  %293 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %288 to i16*
  %294 = load i16, i16* %293, align 1
  %295 = load i16, i16* %15, align 1
  store i16 %295, i16* %293, align 1
  store i16 %294, i16* %15, align 1
  %296 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %288, i64 1
  br label %300

297:                                              ; preds = %287
  %298 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %288, i64 1
  %299 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %298, %7
  br i1 %299, label %409, label %287

300:                                              ; preds = %292, %281
  %301 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %282, %281 ], [ %296, %292 ]
  %302 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %301, %7
  br i1 %302, label %409, label %303

303:                                              ; preds = %300, %321
  %304 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %312, %321 ], [ %301, %300 ]
  %305 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %315, %321 ], [ %7, %300 ]
  %306 = load i8, i8* %272, align 1
  br label %307

307:                                              ; preds = %307, %303
  %308 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %304, %303 ], [ %312, %307 ]
  %309 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %308, i64 0, i32 0
  %310 = load i8, i8* %309, align 1
  %311 = icmp ult i8 %306, %310
  %312 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %308, i64 1
  br i1 %311, label %313, label %307

313:                                              ; preds = %307, %313
  %314 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %315, %313 ], [ %305, %307 ]
  %315 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %314, i64 -1
  %316 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %315, i64 0, i32 0
  %317 = load i8, i8* %316, align 1
  %318 = icmp ult i8 %306, %317
  br i1 %318, label %313, label %319

319:                                              ; preds = %313
  %320 = icmp ult %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %308, %315
  br i1 %320, label %321, label %19

321:                                              ; preds = %319
  %322 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %308 to i16*
  %323 = load i16, i16* %322, align 1
  %324 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %315 to i16*
  %325 = load i16, i16* %324, align 1
  store i16 %325, i16* %322, align 1
  store i16 %323, i16* %324, align 1
  br label %303

326:                                              ; preds = %277
  %327 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %279, i64 0, i32 0
  %328 = load i8, i8* %327, align 1
  %329 = icmp ult i8 %328, %275
  br i1 %329, label %330, label %277

330:                                              ; preds = %326
  %331 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %332 = load i16, i16* %331, align 1
  %333 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %279 to i16*
  %334 = load i16, i16* %333, align 1
  store i16 %334, i16* %331, align 1
  store i16 %332, i16* %333, align 1
  %335 = add i32 %271, 1
  br label %336

336:                                              ; preds = %270, %330
  %337 = phi i32 [ %335, %330 ], [ %271, %270 ]
  %338 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %279, %330 ], [ %7, %270 ]
  %339 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i64
  %340 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 1
  %341 = icmp ult %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %340, %338
  br i1 %341, label %342, label %371

342:                                              ; preds = %336, %363
  %343 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %370, %363 ], [ %195, %336 ]
  %344 = phi i32 [ %368, %363 ], [ %337, %336 ]
  %345 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %354, %363 ], [ %340, %336 ]
  %346 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %357, %363 ], [ %338, %336 ]
  %347 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %343, i64 0, i32 0
  %348 = load i8, i8* %347, align 1
  br label %349

349:                                              ; preds = %349, %342
  %350 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %345, %342 ], [ %354, %349 ]
  %351 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %350, i64 0, i32 0
  %352 = load i8, i8* %351, align 1
  %353 = icmp ult i8 %352, %348
  %354 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %350, i64 1
  br i1 %353, label %349, label %355

355:                                              ; preds = %349, %355
  %356 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %357, %355 ], [ %346, %349 ]
  %357 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %356, i64 -1
  %358 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %357, i64 0, i32 0
  %359 = load i8, i8* %358, align 1
  %360 = icmp ult i8 %359, %348
  br i1 %360, label %361, label %355

361:                                              ; preds = %355
  %362 = icmp ugt %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %350, %357
  br i1 %362, label %371, label %363

363:                                              ; preds = %361
  %364 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %350 to i16*
  %365 = load i16, i16* %364, align 1
  %366 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %357 to i16*
  %367 = load i16, i16* %366, align 1
  store i16 %367, i16* %364, align 1
  store i16 %365, i16* %366, align 1
  %368 = add i32 %344, 1
  %369 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %343, %350
  %370 = select i1 %369, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %357, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %343
  br label %342

371:                                              ; preds = %361, %336
  %372 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %195, %336 ], [ %343, %361 ]
  %373 = phi i32 [ %337, %336 ], [ %344, %361 ]
  %374 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %340, %336 ], [ %350, %361 ]
  %375 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374, %372
  br i1 %375, label %388, label %376

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %372, i64 0, i32 0
  %378 = load i8, i8* %377, align 1
  %379 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374, i64 0, i32 0
  %380 = load i8, i8* %379, align 1
  %381 = icmp ult i8 %378, %380
  br i1 %381, label %382, label %388

382:                                              ; preds = %376
  %383 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374 to i16*
  %384 = load i16, i16* %383, align 1
  %385 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %372 to i16*
  %386 = load i16, i16* %385, align 1
  store i16 %386, i16* %383, align 1
  store i16 %384, i16* %385, align 1
  %387 = add i32 %373, 1
  br label %388

388:                                              ; preds = %371, %382, %376
  %389 = phi i32 [ %387, %382 ], [ %373, %376 ], [ %373, %371 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %398

391:                                              ; preds = %388
  %392 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEbT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374)
  %393 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374, i64 1
  %394 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEbT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %393, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4)
  br i1 %394, label %395, label %397

395:                                              ; preds = %391
  br i1 %392, label %409, label %396

396:                                              ; preds = %395, %407
  br label %3

397:                                              ; preds = %391
  br i1 %392, label %405, label %398

398:                                              ; preds = %397, %388
  %399 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374 to i64
  %400 = sub i64 %399, %339
  %401 = sub i64 %16, %399
  %402 = icmp slt i64 %400, %401
  br i1 %402, label %403, label %407

403:                                              ; preds = %398
  tail call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEvT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374)
  %404 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374, i64 1
  br label %405

405:                                              ; preds = %403, %397
  %406 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %393, %397 ], [ %404, %403 ]
  br label %17

407:                                              ; preds = %398
  %408 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %374, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEvT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %408, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %4)
  br label %396

409:                                              ; preds = %395, %300, %19, %19, %285, %297, %187, %157, %114, %108, %100, %91, %80, %72, %66, %63, %56, %48, %47, %24, %31, %75
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* nocapture, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* nocapture, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* nocapture, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* nocapture) unnamed_addr #13 {
  %5 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp ult i8 %6, %8
  %10 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp ult i8 %11, %6
  br i1 %9, label %28, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %44

14:                                               ; preds = %13
  %15 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %2 to i16*
  %18 = load i16, i16* %17, align 1
  store i16 %18, i16* %15, align 1
  store i16 %16, i16* %17, align 1
  %19 = load i8, i8* %5, align 1
  %20 = load i8, i8* %7, align 1
  %21 = icmp ult i8 %19, %20
  %22 = trunc i16 %16 to i8
  br i1 %21, label %23, label %44

23:                                               ; preds = %14
  %24 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = load i16, i16* %15, align 1
  store i16 %26, i16* %24, align 1
  store i16 %25, i16* %15, align 1
  %27 = load i8, i8* %10, align 1
  br label %44

28:                                               ; preds = %4
  %29 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %30 = load i16, i16* %29, align 1
  br i1 %12, label %31, label %35

31:                                               ; preds = %28
  %32 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %2 to i16*
  %33 = load i16, i16* %32, align 1
  store i16 %33, i16* %29, align 1
  store i16 %30, i16* %32, align 1
  %34 = trunc i16 %30 to i8
  br label %44

35:                                               ; preds = %28
  %36 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1 to i16*
  %37 = load i16, i16* %36, align 1
  store i16 %37, i16* %29, align 1
  store i16 %30, i16* %36, align 1
  %38 = load i8, i8* %10, align 1
  %39 = trunc i16 %30 to i8
  %40 = icmp ult i8 %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %2 to i16*
  %43 = load i16, i16* %42, align 1
  store i16 %43, i16* %36, align 1
  store i16 %30, i16* %42, align 1
  br label %44

44:                                               ; preds = %13, %14, %23, %31, %35, %41
  %45 = phi i8 [ %34, %31 ], [ %11, %13 ], [ %27, %23 ], [ %22, %14 ], [ %39, %41 ], [ %38, %35 ]
  %46 = phi i32 [ 1, %31 ], [ 0, %13 ], [ 2, %23 ], [ 1, %14 ], [ 2, %41 ], [ 1, %35 ]
  %47 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %3, i64 0, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp ult i8 %48, %45
  br i1 %49, label %50, label %72

50:                                               ; preds = %44
  %51 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %2 to i16*
  %52 = load i16, i16* %51, align 1
  %53 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %3 to i16*
  %54 = load i16, i16* %53, align 1
  store i16 %54, i16* %51, align 1
  store i16 %52, i16* %53, align 1
  %55 = add nuw nsw i32 %46, 1
  %56 = load i8, i8* %10, align 1
  %57 = load i8, i8* %5, align 1
  %58 = icmp ult i8 %56, %57
  br i1 %58, label %59, label %72

59:                                               ; preds = %50
  %60 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1 to i16*
  %61 = load i16, i16* %60, align 1
  %62 = load i16, i16* %51, align 1
  store i16 %62, i16* %60, align 1
  store i16 %61, i16* %51, align 1
  %63 = add nuw nsw i32 %46, 2
  %64 = load i8, i8* %5, align 1
  %65 = load i8, i8* %7, align 1
  %66 = icmp ult i8 %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = load i16, i16* %60, align 1
  store i16 %70, i16* %68, align 1
  store i16 %69, i16* %60, align 1
  %71 = add nuw nsw i32 %46, 3
  br label %72

72:                                               ; preds = %50, %67, %59, %44
  %73 = phi i32 [ %71, %67 ], [ %63, %59 ], [ %55, %50 ], [ %46, %44 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEbT0_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"*) unnamed_addr #2 {
  %3 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1 to i64
  %4 = ptrtoint %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 1
  switch i64 %6, label %100 [
    i64 0, label %181
    i64 1, label %181
    i64 2, label %7
    i64 3, label %19
    i64 4, label %58
    i64 5, label %63
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 0, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp ult i8 %10, %12
  br i1 %13, label %14, label %181

14:                                               ; preds = %7
  %15 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %8 to i16*
  %18 = load i16, i16* %17, align 1
  store i16 %18, i16* %15, align 1
  store i16 %16, i16* %17, align 1
  br label %181

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 1
  %21 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1, i64 -1
  %22 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20, i64 0, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 0, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp ult i8 %23, %25
  %27 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %21, i64 0, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp ult i8 %28, %23
  br i1 %26, label %43, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %181

31:                                               ; preds = %30
  %32 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %33 = load i16, i16* %32, align 1
  %34 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %21 to i16*
  %35 = load i16, i16* %34, align 1
  store i16 %35, i16* %32, align 1
  store i16 %33, i16* %34, align 1
  %36 = load i8, i8* %22, align 1
  %37 = load i8, i8* %24, align 1
  %38 = icmp ult i8 %36, %37
  br i1 %38, label %39, label %181

39:                                               ; preds = %31
  %40 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = load i16, i16* %32, align 1
  store i16 %42, i16* %40, align 1
  store i16 %41, i16* %32, align 1
  br label %181

43:                                               ; preds = %19
  %44 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %45 = load i16, i16* %44, align 1
  br i1 %29, label %46, label %49

46:                                               ; preds = %43
  %47 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %21 to i16*
  %48 = load i16, i16* %47, align 1
  store i16 %48, i16* %44, align 1
  store i16 %45, i16* %47, align 1
  br label %181

49:                                               ; preds = %43
  %50 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %20 to i16*
  %51 = load i16, i16* %50, align 1
  store i16 %51, i16* %44, align 1
  store i16 %45, i16* %50, align 1
  %52 = load i8, i8* %27, align 1
  %53 = trunc i16 %45 to i8
  %54 = icmp ult i8 %52, %53
  br i1 %54, label %55, label %181

55:                                               ; preds = %49
  %56 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %21 to i16*
  %57 = load i16, i16* %56, align 1
  store i16 %57, i16* %50, align 1
  store i16 %45, i16* %56, align 1
  br label %181

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 1
  %60 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 2
  %61 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1, i64 -1
  %62 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %59, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %60, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %61)
  br label %181

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 1
  %65 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 2
  %66 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 3
  %67 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %1, i64 -1
  %68 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN6device12_GLOBAL__N_133UsbInterfaceAssociationDescriptorES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %64, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %65, %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %66) #15
  %69 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %67, i64 0, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %66, i64 0, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp ult i8 %70, %72
  br i1 %73, label %74, label %181

74:                                               ; preds = %63
  %75 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %66 to i16*
  %76 = load i16, i16* %75, align 1
  %77 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %67 to i16*
  %78 = load i16, i16* %77, align 1
  store i16 %78, i16* %75, align 1
  store i16 %76, i16* %77, align 1
  %79 = load i8, i8* %71, align 1
  %80 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %65, i64 0, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp ult i8 %79, %81
  br i1 %82, label %83, label %181

83:                                               ; preds = %74
  %84 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %65 to i16*
  %85 = load i16, i16* %84, align 1
  %86 = load i16, i16* %75, align 1
  store i16 %86, i16* %84, align 1
  store i16 %85, i16* %75, align 1
  %87 = trunc i16 %86 to i8
  %88 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %64, i64 0, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp ugt i8 %89, %87
  br i1 %90, label %91, label %181

91:                                               ; preds = %83
  %92 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %64 to i16*
  %93 = load i16, i16* %92, align 1
  store i16 %86, i16* %92, align 1
  store i16 %93, i16* %84, align 1
  %94 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 0, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp ugt i8 %95, %87
  br i1 %96, label %97, label %181

97:                                               ; preds = %91
  %98 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %99 = load i16, i16* %98, align 1
  store i16 %86, i16* %98, align 1
  store i16 %99, i16* %92, align 1
  br label %181

100:                                              ; preds = %2
  %101 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 2
  %102 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 1
  %103 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %102, i64 0, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 0, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp ult i8 %104, %106
  %108 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %101, i64 0, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp ult i8 %109, %104
  br i1 %107, label %123, label %111

111:                                              ; preds = %100
  br i1 %110, label %112, label %138

112:                                              ; preds = %111
  %113 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %102 to i16*
  %114 = load i16, i16* %113, align 1
  %115 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %101 to i16*
  %116 = load i16, i16* %115, align 1
  store i16 %116, i16* %113, align 1
  store i16 %114, i16* %115, align 1
  %117 = trunc i16 %116 to i8
  %118 = icmp ugt i8 %106, %117
  %119 = trunc i16 %114 to i8
  br i1 %118, label %120, label %138

120:                                              ; preds = %112
  %121 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %122 = load i16, i16* %121, align 1
  store i16 %116, i16* %121, align 1
  store i16 %122, i16* %113, align 1
  br label %138

123:                                              ; preds = %100
  %124 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0 to i16*
  %125 = load i16, i16* %124, align 1
  br i1 %110, label %126, label %130

126:                                              ; preds = %123
  %127 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %101 to i16*
  %128 = load i16, i16* %127, align 1
  store i16 %128, i16* %124, align 1
  store i16 %125, i16* %127, align 1
  %129 = trunc i16 %125 to i8
  br label %138

130:                                              ; preds = %123
  %131 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %102 to i16*
  %132 = load i16, i16* %131, align 1
  store i16 %132, i16* %124, align 1
  store i16 %125, i16* %131, align 1
  %133 = trunc i16 %125 to i8
  %134 = icmp ult i8 %109, %133
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %101 to i16*
  %137 = load i16, i16* %136, align 1
  store i16 %137, i16* %131, align 1
  store i16 %125, i16* %136, align 1
  br label %138

138:                                              ; preds = %111, %112, %120, %126, %130, %135
  %139 = phi i8 [ %109, %111 ], [ %119, %112 ], [ %119, %120 ], [ %129, %126 ], [ %109, %130 ], [ %133, %135 ]
  %140 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %0, i64 3
  %141 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %140, %1
  br i1 %141, label %181, label %142

142:                                              ; preds = %138, %175
  %143 = phi i8 [ %177, %175 ], [ %139, %138 ]
  %144 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %173, %175 ], [ %140, %138 ]
  %145 = phi i32 [ %172, %175 ], [ 0, %138 ]
  %146 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %144, %175 ], [ %101, %138 ]
  %147 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %144, i64 0, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp ult i8 %148, %143
  br i1 %149, label %150, label %171

150:                                              ; preds = %142
  %151 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %144 to i16*
  %152 = load i16, i16* %151, align 1
  %153 = trunc i16 %152 to i8
  br label %154

154:                                              ; preds = %161, %150
  %155 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %144, %150 ], [ %156, %161 ]
  %156 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %146, %150 ], [ %162, %161 ]
  %157 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %156 to i16*
  %158 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %155 to i16*
  %159 = load i16, i16* %157, align 1
  store i16 %159, i16* %158, align 1
  %160 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %156, %0
  br i1 %160, label %166, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %156, i64 -1
  %163 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %162, i64 0, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp ugt i8 %164, %153
  br i1 %165, label %154, label %166

166:                                              ; preds = %154, %161
  %167 = phi %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* [ %156, %161 ], [ %0, %154 ]
  %168 = bitcast %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %167 to i16*
  store i16 %152, i16* %168, align 1
  %169 = add i32 %145, 1
  %170 = icmp eq i32 %169, 8
  br i1 %170, label %178, label %171

171:                                              ; preds = %166, %142
  %172 = phi i32 [ %169, %166 ], [ %145, %142 ]
  %173 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %144, i64 1
  %174 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %173, %1
  br i1 %174, label %181, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %144, i64 0, i32 0
  %177 = load i8, i8* %176, align 1
  br label %142

178:                                              ; preds = %166
  %179 = getelementptr inbounds %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor", %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %144, i64 1
  %180 = icmp eq %"struct.device::(anonymous namespace)::UsbInterfaceAssociationDescriptor"* %179, %1
  br label %181

181:                                              ; preds = %171, %178, %138, %97, %91, %83, %74, %63, %55, %49, %46, %39, %31, %30, %7, %14, %2, %2, %58
  %182 = phi i1 [ true, %58 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %7 ], [ true, %30 ], [ true, %31 ], [ true, %39 ], [ true, %46 ], [ true, %49 ], [ true, %55 ], [ true, %63 ], [ true, %74 ], [ true, %83 ], [ true, %91 ], [ true, %97 ], [ true, %138 ], [ %180, %178 ], [ true, %171 ]
  ret i1 %182
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6device5mojom13UsbDeviceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN6device5mojom13UsbDeviceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6device28BuildUsbConfigurationInfoPtrEPKh: argument 0"}
!7 = distinct !{!7, !"_ZN6device28BuildUsbConfigurationInfoPtrEPKh"}
!8 = !{!9, !11, !6}
!9 = distinct !{!9, !10, !"_ZN6device5mojom20UsbConfigurationInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN6device5mojom20UsbConfigurationInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!11 = distinct !{!11, !12, !"_ZN6device28BuildUsbConfigurationInfoPtrEhbbh: argument 0"}
!12 = distinct !{!12, !"_ZN6device28BuildUsbConfigurationInfoPtrEhbbh"}
!13 = !{!11, !6}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6device24BuildUsbInterfaceInfoPtrEPKh: argument 0"}
!16 = distinct !{!16, !"_ZN6device24BuildUsbInterfaceInfoPtrEPKh"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6device23BuildUsbEndpointInfoPtrEPKh: argument 0"}
!19 = distinct !{!19, !"_ZN6device23BuildUsbEndpointInfoPtrEPKh"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIhS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeIhPN6device5mojom16UsbInterfaceInfoEEENS_19__map_value_compareIhS6_NS_4lessIhEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIhS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN6device5mojom20UsbConfigurationInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZN6device5mojom20UsbConfigurationInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!26 = distinct !{!26, !27, !"_ZN6device28BuildUsbConfigurationInfoPtrEhbbh: argument 0"}
!27 = distinct !{!27, !"_ZN6device28BuildUsbConfigurationInfoPtrEhbbh"}
!28 = !{!26}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.isvectorized", i32 1}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
!38 = distinct !{!38, !35}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !35}
!45 = distinct !{!45, !37}
!46 = distinct !{!46, !35}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !35}
!53 = distinct !{!53, !37}
!54 = distinct !{!54, !35}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN6device15UsbDeviceHandleEENS2_IFvNSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEEEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJRS6_SE_EEEDcOT0_DpOT1_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN6device15UsbDeviceHandleEENS2_IFvNSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEEEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJRS6_SE_EEEDcOT0_DpOT1_"}
!58 = distinct !{!58, !59, !"_ZN4base8BindOnceIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS2_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEEEEENS2_5mojom17UsbTransferStatusES1_INS_15RefCountedBytesEEmEJRS4_SD_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8BindOnceIPFv13scoped_refptrIN6device15UsbDeviceHandleEENS_12OnceCallbackIFvNSt3__110unique_ptrINS2_19UsbDeviceDescriptorENS6_14default_deleteIS8_EEEEEEENS2_5mojom17UsbTransferStatusES1_INS_15RefCountedBytesEEmEJRS4_SD_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN6device5mojom13UsbDeviceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!62 = distinct !{!62, !"_ZN6device5mojom13UsbDeviceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEENS2_IFvSC_EEEEJRS6_SC_SE_EEEDcOT0_DpOT1_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS4_19UsbDeviceDescriptorENS7_14default_deleteIS9_EEEENS2_IFvSC_EEEEJRS6_SC_SE_EEEDcOT0_DpOT1_"}
!66 = distinct !{!66, !67, !"_ZN4base8BindOnceIRFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS2_19UsbDeviceDescriptorENS5_14default_deleteIS7_EEEENS_12OnceCallbackIFvSA_EEEEJRS4_SA_SD_EEENSB_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!67 = distinct !{!67, !"_ZN4base8BindOnceIRFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS2_19UsbDeviceDescriptorENS5_14default_deleteIS7_EEEENS_12OnceCallbackIFvSA_EEEEJRS4_SA_SD_EEENSB_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!68 = !{!69, !71}
!69 = distinct !{!69, !70, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS4_19UsbDeviceDescriptorEhNS2_IFvvEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJRS6_RS8_RhRNS_17RepeatingCallbackIS9_EEEEEDcOT0_DpOT1_: argument 0"}
!70 = distinct !{!70, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS4_19UsbDeviceDescriptorEhNS2_IFvvEEENS4_5mojom17UsbTransferStatusES3_INS_15RefCountedBytesEEmEJRS6_RS8_RhRNS_17RepeatingCallbackIS9_EEEEEDcOT0_DpOT1_"}
!71 = distinct !{!71, !72, !"_ZN4base8BindOnceIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS2_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS2_5mojom17UsbTransferStatusES1_INS_15RefCountedBytesEEmEJRS4_RS6_RhRNS_17RepeatingCallbackIS8_EEEEENS7_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!72 = distinct !{!72, !"_ZN4base8BindOnceIPFv13scoped_refptrIN6device15UsbDeviceHandleEEPNS2_19UsbDeviceDescriptorEhNS_12OnceCallbackIFvvEEENS2_5mojom17UsbTransferStatusES1_INS_15RefCountedBytesEEmEJRS4_RS6_RhRNS_17RepeatingCallbackIS8_EEEEENS7_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !35}
!79 = distinct !{!79, !37}
!80 = distinct !{!80, !37}
!81 = distinct !{!81, !35}
!82 = !{!83, !85}
!83 = distinct !{!83, !84, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS7_3mapIhNS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS7_4lessIhEENSD_INS7_4pairIKhSF_EEEEEENS7_14default_deleteISM_EEEENS2_IFvSP_EEERKSF_EJRS6_SP_SR_EEEDcOT0_DpOT1_: argument 0"}
!84 = distinct !{!84, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS7_3mapIhNS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS7_4lessIhEENSD_INS7_4pairIKhSF_EEEEEENS7_14default_deleteISM_EEEENS2_IFvSP_EEERKSF_EJRS6_SP_SR_EEEDcOT0_DpOT1_"}
!85 = distinct !{!85, !86, !"_ZN4base8BindOnceIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS5_3mapIhNS5_12basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEENS5_4lessIhEENSB_INS5_4pairIKhSD_EEEEEENS5_14default_deleteISK_EEEENS_12OnceCallbackIFvSN_EEERKSD_EJRS4_SN_SQ_EEENSO_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSY_DpOSZ_: argument 0"}
!86 = distinct !{!86, !"_ZN4base8BindOnceIPFv13scoped_refptrIN6device15UsbDeviceHandleEENSt3__110unique_ptrINS5_3mapIhNS5_12basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEENS5_4lessIhEENSB_INS5_4pairIKhSD_EEEEEENS5_14default_deleteISK_EEEENS_12OnceCallbackIFvSN_EEERKSD_EJRS4_SN_SQ_EEENSO_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSY_DpOSZ_"}
!87 = !{!88, !90}
!88 = distinct !{!88, !89, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSD_EEEDcOT0_DpOT1_: argument 0"}
!89 = distinct !{!89, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSD_EEEDcOT0_DpOT1_"}
!90 = distinct !{!90, !91, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSC_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!91 = distinct !{!91, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEEN6device5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJSC_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!92 = !{!93, !95}
!93 = distinct !{!93, !94, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvNSt3__110unique_ptrINS3_3mapIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS3_4lessIhEENS9_INS3_4pairIKhSB_EEEEEENS3_14default_deleteISI_EEEEEEEJSL_EEEDcOT0_DpOT1_: argument 0"}
!94 = distinct !{!94, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvNSt3__110unique_ptrINS3_3mapIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS3_4lessIhEENS9_INS3_4pairIKhSB_EEEEEENS3_14default_deleteISI_EEEEEEEJSL_EEEDcOT0_DpOT1_"}
!95 = distinct !{!95, !96, !"_ZN4base8BindOnceINS_12OnceCallbackIFvNSt3__110unique_ptrINS2_3mapIhNS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS2_4lessIhEENS8_INS2_4pairIKhSA_EEEEEENS2_14default_deleteISH_EEEEEEEJSK_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!96 = distinct !{!96, !"_ZN4base8BindOnceINS_12OnceCallbackIFvNSt3__110unique_ptrINS2_3mapIhNS2_12basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS2_4lessIhEENS8_INS2_4pairIKhSA_EEEEEENS2_14default_deleteISH_EEEEEEEJSK_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKhEEENSS_IJEEEEEENS_10unique_ptrINSB_ISH_SC_EENS_22__tree_node_destructorINS7_ISY_EEEEEEDpOT_: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__16__treeINS_12__value_typeIhNS_14__map_iteratorINS_15__tree_iteratorINS1_IhNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEPNS_11__tree_nodeISA_PvEElEEEEEENS_19__map_value_compareIhSH_NS_4lessIhEELb1EEENS7_ISH_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKhEEENSS_IJEEEEEENS_10unique_ptrINSB_ISH_SC_EENS_22__tree_node_destructorINS7_ISY_EEEEEEDpOT_"}
!100 = !{!101, !103}
!101 = distinct !{!101, !102, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEPNS3_11__tree_nodeISD_PvEElEEEENS2_IFvvEEERKSC_EJRKSJ_RNS_17RepeatingCallbackISK_EEEEEDcOT0_DpOT1_: argument 0"}
!102 = distinct !{!102, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__114__map_iteratorINS3_15__tree_iteratorINS3_12__value_typeIhNS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEEPNS3_11__tree_nodeISD_PvEElEEEENS2_IFvvEEERKSC_EJRKSJ_RNS_17RepeatingCallbackISK_EEEEEDcOT0_DpOT1_"}
!103 = distinct !{!103, !104, !"_ZN4base8BindOnceIPFvNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeIhNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEPNS1_11__tree_nodeISB_PvEElEEEENS_12OnceCallbackIFvvEEERKSA_EJRKSH_RNS_17RepeatingCallbackISJ_EEEEENSI_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSW_DpOSX_: argument 0"}
!104 = distinct !{!104, !"_ZN4base8BindOnceIPFvNSt3__114__map_iteratorINS1_15__tree_iteratorINS1_12__value_typeIhNS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEEEPNS1_11__tree_nodeISB_PvEElEEEENS_12OnceCallbackIFvvEEERKSA_EJRKSH_RNS_17RepeatingCallbackISJ_EEEEENSI_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSW_DpOSX_"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZN6device5mojom15UsbEndpointInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!107 = distinct !{!107, !"_ZN6device5mojom15UsbEndpointInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN6device5mojom16UsbInterfaceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!110 = distinct !{!110, !"_ZN6device5mojom16UsbInterfaceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN6device5mojom25UsbAlternateInterfaceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!113 = distinct !{!113, !"_ZN6device5mojom25UsbAlternateInterfaceInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZN6device5mojom20UsbConfigurationInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!116 = distinct !{!116, !"_ZN6device5mojom20UsbConfigurationInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!117 = !{i8 0, i8 2}
!118 = !{!119, !121}
!119 = distinct !{!119, !120, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN6device19UsbDeviceDescriptorENS2_IFvvEEENS3_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJRS5_S7_EEEDcOT0_DpOT1_: argument 0"}
!120 = distinct !{!120, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN6device19UsbDeviceDescriptorENS2_IFvvEEENS3_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJRS5_S7_EEEDcOT0_DpOT1_"}
!121 = distinct !{!121, !122, !"_ZN4base8BindOnceIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS1_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJRS3_S6_EEENS4_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!122 = distinct !{!122, !"_ZN4base8BindOnceIPFvPN6device19UsbDeviceDescriptorENS_12OnceCallbackIFvvEEENS1_5mojom17UsbTransferStatusE13scoped_refptrINS_15RefCountedBytesEEmEJRS3_S6_EEENS4_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !35}
!129 = distinct !{!129, !37}
!130 = distinct !{!130, !37}
!131 = distinct !{!131, !35}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !35}
!138 = distinct !{!138, !37}
!139 = distinct !{!139, !37}
!140 = distinct !{!140, !35}
!141 = !{!142}
!142 = distinct !{!142, !143}
!143 = distinct !{!143, !"LVerDomain"}
!144 = !{!145}
!145 = distinct !{!145, !143}
!146 = distinct !{!146, !35}
!147 = distinct !{!147, !37}
!148 = distinct !{!148, !37}
!149 = distinct !{!149, !35}
!150 = !{!151}
!151 = distinct !{!151, !152}
!152 = distinct !{!152, !"LVerDomain"}
!153 = !{!154}
!154 = distinct !{!154, !152}
!155 = distinct !{!155, !35}
!156 = distinct !{!156, !37}
!157 = distinct !{!157, !37}
!158 = distinct !{!158, !35}
!159 = !{!160}
!160 = distinct !{!160, !161}
!161 = distinct !{!161, !"LVerDomain"}
!162 = !{!163}
!163 = distinct !{!163, !161}
!164 = distinct !{!164, !35}
!165 = distinct !{!165, !37}
!166 = distinct !{!166, !37}
!167 = distinct !{!167, !35}
!168 = distinct !{!168, !35}
!169 = distinct !{!169, !37}
!170 = distinct !{!170, !171, !35}
!171 = !{!"llvm.loop.unroll.runtime.disable"}
!172 = !{!173}
!173 = distinct !{!173, !174}
!174 = distinct !{!174, !"LVerDomain"}
!175 = !{!176}
!176 = distinct !{!176, !174}
!177 = distinct !{!177, !35}
!178 = distinct !{!178, !37}
!179 = distinct !{!179, !37}
!180 = distinct !{!180, !35}
!181 = distinct !{!181, !37}
!182 = distinct !{!182, !37}
!183 = distinct !{!183, !37}
!184 = distinct !{!184, !37}
