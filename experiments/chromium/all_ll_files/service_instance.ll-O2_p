; ModuleID = '../../third_party/openscreen/src/discovery/dnssd/impl/service_instance.cc'
source_filename = "../../third_party/openscreen/src/discovery/dnssd/impl/service_instance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.openscreen::discovery::ServiceInstance" = type { %"class.openscreen::discovery::DnsSdService", %"class.openscreen::TaskRunner"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.19", %"class.openscreen::discovery::NetworkInterfaceConfig" }
%"class.openscreen::discovery::DnsSdService" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.openscreen::discovery::MdnsService"* }
%"class.openscreen::discovery::MdnsService" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.openscreen::discovery::QuerierImpl"* }
%"class.openscreen::discovery::QuerierImpl" = type { %"class.openscreen::discovery::DnsSdQuerier", %"class.openscreen::discovery::MdnsRecordChangedCallback", %"class.std::__1::unique_ptr.4", %"class.std::__1::map", %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::ReportingClient"* }
%"class.openscreen::discovery::DnsSdQuerier" = type { i32 (...)** }
%"class.openscreen::discovery::MdnsRecordChangedCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.openscreen::discovery::DnsDataGraph"* }
%"class.openscreen::discovery::DnsDataGraph" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.openscreen::discovery::PublisherImpl"* }
%"class.openscreen::discovery::PublisherImpl" = type { %"class.openscreen::discovery::DnsSdPublisher", %"class.openscreen::discovery::MdnsDomainConfirmedProvider", %"class.std::__1::map.22", %"class.std::__1::map.33", %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::discovery::ReportingClient"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::NetworkInterfaceConfig"* }
%"class.openscreen::discovery::DnsSdPublisher" = type { i32 (...)** }
%"class.openscreen::discovery::MdnsDomainConfirmedProvider" = type { i32 (...)** }
%"class.std::__1::map.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::map.33" = type { %"class.std::__1::__tree.34" }
%"class.std::__1::__tree.34" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.openscreen::discovery::NetworkInterfaceConfig" = type { i64, %"class.openscreen::IPAddress", %"class.openscreen::IPAddress" }
%"class.openscreen::IPAddress" = type { i32, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.openscreen::TaskRunner" = type { i32 (...)** }
%"class.openscreen::discovery::ReportingClient" = type opaque
%"struct.openscreen::discovery::Config" = type <{ %"class.std::__1::vector", i32, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.openscreen::InterfaceInfo"*, %"struct.openscreen::InterfaceInfo"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.openscreen::InterfaceInfo"* }
%"struct.openscreen::InterfaceInfo" = type { i64, %"struct.std::__1::array.45", %"class.std::__1::basic_string", i32, %"class.std::__1::vector.51" }
%"struct.std::__1::array.45" = type { [6 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.openscreen::IPSubnet"*, %"struct.openscreen::IPSubnet"*, %"class.std::__1::__compressed_pair.53" }
%"struct.openscreen::IPSubnet" = type <{ %"class.openscreen::IPAddress", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.openscreen::IPSubnet"* }

$_ZN10openscreen9discovery15ServiceInstance10GetQuerierEv = comdat any

$_ZN10openscreen9discovery15ServiceInstance12GetPublisherEv = comdat any

@_ZTVN10openscreen9discovery15ServiceInstanceE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.openscreen::discovery::ServiceInstance"*)* @_ZN10openscreen9discovery15ServiceInstanceD2Ev to i8*), i8* bitcast (void (%"class.openscreen::discovery::ServiceInstance"*)* @_ZN10openscreen9discovery15ServiceInstanceD0Ev to i8*), i8* bitcast (%"class.openscreen::discovery::DnsSdQuerier"* (%"class.openscreen::discovery::ServiceInstance"*)* @_ZN10openscreen9discovery15ServiceInstance10GetQuerierEv to i8*), i8* bitcast (%"class.openscreen::discovery::DnsSdPublisher"* (%"class.openscreen::discovery::ServiceInstance"*)* @_ZN10openscreen9discovery15ServiceInstance12GetPublisherEv to i8*)] }, align 8

@_ZN10openscreen9discovery15ServiceInstanceC1EPNS_10TaskRunnerEPNS0_15ReportingClientERKNS0_6ConfigERKNS_13InterfaceInfoE = hidden unnamed_addr alias void (%"class.openscreen::discovery::ServiceInstance"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::ReportingClient"*, %"struct.openscreen::discovery::Config"*, %"struct.openscreen::InterfaceInfo"*), void (%"class.openscreen::discovery::ServiceInstance"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::ReportingClient"*, %"struct.openscreen::discovery::Config"*, %"struct.openscreen::InterfaceInfo"*)* @_ZN10openscreen9discovery15ServiceInstanceC2EPNS_10TaskRunnerEPNS0_15ReportingClientERKNS0_6ConfigERKNS_13InterfaceInfoE
@_ZN10openscreen9discovery15ServiceInstanceD1Ev = hidden unnamed_addr alias void (%"class.openscreen::discovery::ServiceInstance"*), void (%"class.openscreen::discovery::ServiceInstance"*)* @_ZN10openscreen9discovery15ServiceInstanceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery15ServiceInstanceC2EPNS_10TaskRunnerEPNS0_15ReportingClientERKNS0_6ConfigERKNS_13InterfaceInfoE(%"class.openscreen::discovery::ServiceInstance"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::ReportingClient"*, %"struct.openscreen::discovery::Config"* dereferenceable(64), %"struct.openscreen::InterfaceInfo"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.openscreen::IPAddress", align 8
  %7 = alloca %"class.openscreen::IPAddress", align 8
  %8 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery15ServiceInstanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 1
  store %"class.openscreen::TaskRunner"* %1, %"class.openscreen::TaskRunner"** %9, align 8
  %10 = tail call %"class.openscreen::discovery::MdnsService"* @_ZN10openscreen9discovery11MdnsService6CreateEPNS_10TaskRunnerEPNS0_15ReportingClientERKNS0_6ConfigERKNS_13InterfaceInfoE(%"class.openscreen::TaskRunner"* %1, %"class.openscreen::discovery::ReportingClient"* %2, %"struct.openscreen::discovery::Config"* dereferenceable(64) %3, %"struct.openscreen::InterfaceInfo"* dereferenceable(72) %4) #6
  %11 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.openscreen::discovery::MdnsService"* %10, %"class.openscreen::discovery::MdnsService"** %11, align 8
  %12 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 4
  %14 = bitcast %"class.std::__1::unique_ptr.19"* %13 to i64*
  %15 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"struct.openscreen::InterfaceInfo", %"struct.openscreen::InterfaceInfo"* %4, i64 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr.1"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  %18 = load i64, i64* %16, align 8
  call void @_ZNK10openscreen13InterfaceInfo14GetIpAddressV4Ev(%"class.openscreen::IPAddress"* nonnull sret %6, %"struct.openscreen::InterfaceInfo"* %4) #6
  call void @_ZNK10openscreen13InterfaceInfo14GetIpAddressV6Ev(%"class.openscreen::IPAddress"* nonnull sret %7, %"struct.openscreen::InterfaceInfo"* %4) #6
  call void @_ZN10openscreen9discovery22NetworkInterfaceConfigC1ElNS_9IPAddressES2_(%"class.openscreen::discovery::NetworkInterfaceConfig"* %15, i64 %18, %"class.openscreen::IPAddress"* nonnull byval(%"class.openscreen::IPAddress") align 8 %6, %"class.openscreen::IPAddress"* nonnull byval(%"class.openscreen::IPAddress") align 8 %7) #6
  %19 = getelementptr inbounds %"struct.openscreen::discovery::Config", %"struct.openscreen::discovery::Config"* %3, i64 0, i32 8
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %5
  %23 = bitcast %"class.std::__1::unique_ptr.1"* %12 to i64*
  %24 = load %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::discovery::MdnsService"** %11, align 8
  %25 = call i8* @_Znwm(i64 72) #7
  %26 = bitcast i8* %25 to %"class.openscreen::discovery::QuerierImpl"*
  %27 = load %"class.openscreen::TaskRunner"*, %"class.openscreen::TaskRunner"** %9, align 8
  call void @_ZN10openscreen9discovery11QuerierImplC1EPNS0_11MdnsServiceEPNS_10TaskRunnerEPNS0_15ReportingClientEPKNS0_22NetworkInterfaceConfigE(%"class.openscreen::discovery::QuerierImpl"* nonnull %26, %"class.openscreen::discovery::MdnsService"* %24, %"class.openscreen::TaskRunner"* %27, %"class.openscreen::discovery::ReportingClient"* %2, %"class.openscreen::discovery::NetworkInterfaceConfig"* %15) #6
  %28 = ptrtoint i8* %25 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %12, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.openscreen::discovery::QuerierImpl"*, %"class.openscreen::discovery::QuerierImpl"** %29, align 8
  store i64 %28, i64* %23, align 8
  %31 = icmp eq %"class.openscreen::discovery::QuerierImpl"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %22
  %33 = bitcast %"class.openscreen::discovery::QuerierImpl"* %30 to void (%"class.openscreen::discovery::QuerierImpl"*)***
  %34 = load void (%"class.openscreen::discovery::QuerierImpl"*)**, void (%"class.openscreen::discovery::QuerierImpl"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.openscreen::discovery::QuerierImpl"*)*, void (%"class.openscreen::discovery::QuerierImpl"*)** %34, i64 1
  %36 = load void (%"class.openscreen::discovery::QuerierImpl"*)*, void (%"class.openscreen::discovery::QuerierImpl"*)** %35, align 8
  call void %36(%"class.openscreen::discovery::QuerierImpl"* nonnull %30) #6
  br label %37

37:                                               ; preds = %22, %32, %5
  %38 = getelementptr inbounds %"struct.openscreen::discovery::Config", %"struct.openscreen::discovery::Config"* %3, i64 0, i32 2
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %37
  %42 = load %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::discovery::MdnsService"** %11, align 8
  %43 = call i8* @_Znwm(i64 96) #7
  %44 = bitcast i8* %43 to %"class.openscreen::discovery::PublisherImpl"*
  %45 = load %"class.openscreen::TaskRunner"*, %"class.openscreen::TaskRunner"** %9, align 8
  call void @_ZN10openscreen9discovery13PublisherImplC1EPNS0_11MdnsServiceEPNS0_15ReportingClientEPNS_10TaskRunnerEPKNS0_22NetworkInterfaceConfigE(%"class.openscreen::discovery::PublisherImpl"* nonnull %44, %"class.openscreen::discovery::MdnsService"* %42, %"class.openscreen::discovery::ReportingClient"* %2, %"class.openscreen::TaskRunner"* %45, %"class.openscreen::discovery::NetworkInterfaceConfig"* %15) #6
  %46 = ptrtoint i8* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %13, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.openscreen::discovery::PublisherImpl"*, %"class.openscreen::discovery::PublisherImpl"** %47, align 8
  store i64 %46, i64* %14, align 8
  %49 = icmp eq %"class.openscreen::discovery::PublisherImpl"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %41
  %51 = bitcast %"class.openscreen::discovery::PublisherImpl"* %48 to void (%"class.openscreen::discovery::PublisherImpl"*)***
  %52 = load void (%"class.openscreen::discovery::PublisherImpl"*)**, void (%"class.openscreen::discovery::PublisherImpl"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.openscreen::discovery::PublisherImpl"*)*, void (%"class.openscreen::discovery::PublisherImpl"*)** %52, i64 1
  %54 = load void (%"class.openscreen::discovery::PublisherImpl"*)*, void (%"class.openscreen::discovery::PublisherImpl"*)** %53, align 8
  call void %54(%"class.openscreen::discovery::PublisherImpl"* nonnull %48) #6
  br label %55

55:                                               ; preds = %41, %50, %37
  ret void
}

declare %"class.openscreen::discovery::MdnsService"* @_ZN10openscreen9discovery11MdnsService6CreateEPNS_10TaskRunnerEPNS0_15ReportingClientERKNS0_6ConfigERKNS_13InterfaceInfoE(%"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::ReportingClient"*, %"struct.openscreen::discovery::Config"* dereferenceable(64), %"struct.openscreen::InterfaceInfo"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZNK10openscreen13InterfaceInfo14GetIpAddressV4Ev(%"class.openscreen::IPAddress"* sret, %"struct.openscreen::InterfaceInfo"*) local_unnamed_addr #1

declare void @_ZNK10openscreen13InterfaceInfo14GetIpAddressV6Ev(%"class.openscreen::IPAddress"* sret, %"struct.openscreen::InterfaceInfo"*) local_unnamed_addr #1

declare void @_ZN10openscreen9discovery22NetworkInterfaceConfigC1ElNS_9IPAddressES2_(%"class.openscreen::discovery::NetworkInterfaceConfig"*, i64, %"class.openscreen::IPAddress"* byval(%"class.openscreen::IPAddress") align 8, %"class.openscreen::IPAddress"* byval(%"class.openscreen::IPAddress") align 8) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery15ServiceInstanceD2Ev(%"class.openscreen::discovery::ServiceInstance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery15ServiceInstanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 5
  tail call void @_ZN10openscreen9discovery22NetworkInterfaceConfigD1Ev(%"class.openscreen::discovery::NetworkInterfaceConfig"* %3) #6
  %4 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.openscreen::discovery::PublisherImpl"*, %"class.openscreen::discovery::PublisherImpl"** %4, align 8
  store %"class.openscreen::discovery::PublisherImpl"* null, %"class.openscreen::discovery::PublisherImpl"** %4, align 8
  %6 = icmp eq %"class.openscreen::discovery::PublisherImpl"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.openscreen::discovery::PublisherImpl"* %5 to void (%"class.openscreen::discovery::PublisherImpl"*)***
  %9 = load void (%"class.openscreen::discovery::PublisherImpl"*)**, void (%"class.openscreen::discovery::PublisherImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.openscreen::discovery::PublisherImpl"*)*, void (%"class.openscreen::discovery::PublisherImpl"*)** %9, i64 1
  %11 = load void (%"class.openscreen::discovery::PublisherImpl"*)*, void (%"class.openscreen::discovery::PublisherImpl"*)** %10, align 8
  tail call void %11(%"class.openscreen::discovery::PublisherImpl"* nonnull %5) #6
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.openscreen::discovery::QuerierImpl"*, %"class.openscreen::discovery::QuerierImpl"** %13, align 8
  store %"class.openscreen::discovery::QuerierImpl"* null, %"class.openscreen::discovery::QuerierImpl"** %13, align 8
  %15 = icmp eq %"class.openscreen::discovery::QuerierImpl"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.openscreen::discovery::QuerierImpl"* %14 to void (%"class.openscreen::discovery::QuerierImpl"*)***
  %18 = load void (%"class.openscreen::discovery::QuerierImpl"*)**, void (%"class.openscreen::discovery::QuerierImpl"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.openscreen::discovery::QuerierImpl"*)*, void (%"class.openscreen::discovery::QuerierImpl"*)** %18, i64 1
  %20 = load void (%"class.openscreen::discovery::QuerierImpl"*)*, void (%"class.openscreen::discovery::QuerierImpl"*)** %19, align 8
  tail call void %20(%"class.openscreen::discovery::QuerierImpl"* nonnull %14) #6
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::discovery::MdnsService"** %22, align 8
  store %"class.openscreen::discovery::MdnsService"* null, %"class.openscreen::discovery::MdnsService"** %22, align 8
  %24 = icmp eq %"class.openscreen::discovery::MdnsService"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.openscreen::discovery::MdnsService"* %23 to void (%"class.openscreen::discovery::MdnsService"*)***
  %27 = load void (%"class.openscreen::discovery::MdnsService"*)**, void (%"class.openscreen::discovery::MdnsService"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.openscreen::discovery::MdnsService"*)*, void (%"class.openscreen::discovery::MdnsService"*)** %27, i64 1
  %29 = load void (%"class.openscreen::discovery::MdnsService"*)*, void (%"class.openscreen::discovery::MdnsService"*)** %28, align 8
  tail call void %29(%"class.openscreen::discovery::MdnsService"* nonnull %23) #6
  br label %30

30:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10openscreen9discovery22NetworkInterfaceConfigD1Ev(%"class.openscreen::discovery::NetworkInterfaceConfig"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery15ServiceInstanceD0Ev(%"class.openscreen::discovery::ServiceInstance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery15ServiceInstanceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 5
  tail call void @_ZN10openscreen9discovery22NetworkInterfaceConfigD1Ev(%"class.openscreen::discovery::NetworkInterfaceConfig"* %3) #6
  %4 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.openscreen::discovery::PublisherImpl"*, %"class.openscreen::discovery::PublisherImpl"** %4, align 8
  store %"class.openscreen::discovery::PublisherImpl"* null, %"class.openscreen::discovery::PublisherImpl"** %4, align 8
  %6 = icmp eq %"class.openscreen::discovery::PublisherImpl"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.openscreen::discovery::PublisherImpl"* %5 to void (%"class.openscreen::discovery::PublisherImpl"*)***
  %9 = load void (%"class.openscreen::discovery::PublisherImpl"*)**, void (%"class.openscreen::discovery::PublisherImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.openscreen::discovery::PublisherImpl"*)*, void (%"class.openscreen::discovery::PublisherImpl"*)** %9, i64 1
  %11 = load void (%"class.openscreen::discovery::PublisherImpl"*)*, void (%"class.openscreen::discovery::PublisherImpl"*)** %10, align 8
  tail call void %11(%"class.openscreen::discovery::PublisherImpl"* nonnull %5) #6
  br label %12

12:                                               ; preds = %7, %1
  %13 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.openscreen::discovery::QuerierImpl"*, %"class.openscreen::discovery::QuerierImpl"** %13, align 8
  store %"class.openscreen::discovery::QuerierImpl"* null, %"class.openscreen::discovery::QuerierImpl"** %13, align 8
  %15 = icmp eq %"class.openscreen::discovery::QuerierImpl"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.openscreen::discovery::QuerierImpl"* %14 to void (%"class.openscreen::discovery::QuerierImpl"*)***
  %18 = load void (%"class.openscreen::discovery::QuerierImpl"*)**, void (%"class.openscreen::discovery::QuerierImpl"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.openscreen::discovery::QuerierImpl"*)*, void (%"class.openscreen::discovery::QuerierImpl"*)** %18, i64 1
  %20 = load void (%"class.openscreen::discovery::QuerierImpl"*)*, void (%"class.openscreen::discovery::QuerierImpl"*)** %19, align 8
  tail call void %20(%"class.openscreen::discovery::QuerierImpl"* nonnull %14) #6
  br label %21

21:                                               ; preds = %16, %12
  %22 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::discovery::MdnsService"** %22, align 8
  store %"class.openscreen::discovery::MdnsService"* null, %"class.openscreen::discovery::MdnsService"** %22, align 8
  %24 = icmp eq %"class.openscreen::discovery::MdnsService"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.openscreen::discovery::MdnsService"* %23 to void (%"class.openscreen::discovery::MdnsService"*)***
  %27 = load void (%"class.openscreen::discovery::MdnsService"*)**, void (%"class.openscreen::discovery::MdnsService"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.openscreen::discovery::MdnsService"*)*, void (%"class.openscreen::discovery::MdnsService"*)** %27, i64 1
  %29 = load void (%"class.openscreen::discovery::MdnsService"*)*, void (%"class.openscreen::discovery::MdnsService"*)** %28, align 8
  tail call void %29(%"class.openscreen::discovery::MdnsService"* nonnull %23) #6
  br label %30

30:                                               ; preds = %21, %25
  %31 = bitcast %"class.openscreen::discovery::ServiceInstance"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.openscreen::discovery::DnsSdQuerier"* @_ZN10openscreen9discovery15ServiceInstance10GetQuerierEv(%"class.openscreen::discovery::ServiceInstance"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.openscreen::discovery::QuerierImpl"*, %"class.openscreen::discovery::QuerierImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.openscreen::discovery::QuerierImpl", %"class.openscreen::discovery::QuerierImpl"* %3, i64 0, i32 0
  ret %"class.openscreen::discovery::DnsSdQuerier"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.openscreen::discovery::DnsSdPublisher"* @_ZN10openscreen9discovery15ServiceInstance12GetPublisherEv(%"class.openscreen::discovery::ServiceInstance"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::ServiceInstance", %"class.openscreen::discovery::ServiceInstance"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.openscreen::discovery::PublisherImpl"*, %"class.openscreen::discovery::PublisherImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.openscreen::discovery::PublisherImpl", %"class.openscreen::discovery::PublisherImpl"* %3, i64 0, i32 0
  ret %"class.openscreen::discovery::DnsSdPublisher"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN10openscreen9discovery11QuerierImplC1EPNS0_11MdnsServiceEPNS_10TaskRunnerEPNS0_15ReportingClientEPKNS0_22NetworkInterfaceConfigE(%"class.openscreen::discovery::QuerierImpl"*, %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::ReportingClient"*, %"class.openscreen::discovery::NetworkInterfaceConfig"*) unnamed_addr #1

declare void @_ZN10openscreen9discovery13PublisherImplC1EPNS0_11MdnsServiceEPNS0_15ReportingClientEPNS_10TaskRunnerEPKNS0_22NetworkInterfaceConfigE(%"class.openscreen::discovery::PublisherImpl"*, %"class.openscreen::discovery::MdnsService"*, %"class.openscreen::discovery::ReportingClient"*, %"class.openscreen::TaskRunner"*, %"class.openscreen::discovery::NetworkInterfaceConfig"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
