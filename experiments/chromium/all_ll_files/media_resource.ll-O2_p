; ModuleID = '../../media/base/media_resource.cc'
source_filename = "../../media/base/media_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [328 x i8] }
%"class.media::MediaResource" = type { i32 (...)** }
%"struct.media::MediaUrlParams" = type <{ %class.GURL, %class.GURL, %"class.url::Origin", i8, i8, [6 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.media::DemuxerStream" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"**, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.media::DemuxerStream"** }

@_ZTVN5media13MediaResourceE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::MediaResource"*)* @_ZN5media13MediaResourceD2Ev to i8*), i8* bitcast (void (%"class.media::MediaResource"*)* @_ZN5media13MediaResourceD0Ev to i8*), i8* bitcast (i32 (%"class.media::MediaResource"*)* @_ZNK5media13MediaResource7GetTypeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"struct.media::MediaUrlParams"* (%"class.media::MediaResource"*)* @_ZNK5media13MediaResource17GetMediaUrlParamsEv to i8*), i8* bitcast (void (%"class.media::MediaResource"*, i64)* @_ZN5media13MediaResource34ForwardDurationChangeToDemuxerHostEN4base9TimeDeltaE to i8*)] }, align 8
@_ZZNK5media13MediaResource17GetMediaUrlParamsEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZNK5media13MediaResource17GetMediaUrlParamsEvE8instance = internal global i64 0, align 8

@_ZN5media13MediaResourceD1Ev = hidden unnamed_addr alias void (%"class.media::MediaResource"*), void (%"class.media::MediaResource"*)* @_ZN5media13MediaResourceD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media13MediaResourceC2Ev(%"class.media::MediaResource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::MediaResource", %"class.media::MediaResource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5media13MediaResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media13MediaResourceD2Ev(%"class.media::MediaResource"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5media13MediaResourceD0Ev(%"class.media::MediaResource"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(328) %"struct.media::MediaUrlParams"* @_ZNK5media13MediaResource17GetMediaUrlParamsEv(%"class.media::MediaResource"* nocapture readnone) unnamed_addr #4 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = alloca %class.GURL, align 8
  %4 = alloca %"class.url::Origin", align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.url::Origin", align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5media13MediaResource17GetMediaUrlParamsEvE8instance to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %20, !prof !2

10:                                               ; preds = %1
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5media13MediaResource17GetMediaUrlParamsEvE8instance) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #11
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %5) #11
  %15 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %15) #11
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %6) #11
  %16 = bitcast %"class.url::Origin"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #11
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %7) #11
  %17 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17)
  %18 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %18)
  %19 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19)
  call void @_ZN4GURLC1EOS_(%class.GURL* nonnull %2, %class.GURL* nonnull dereferenceable(120) %5) #11
  call void @_ZN4GURLC1EOS_(%class.GURL* nonnull %3, %class.GURL* nonnull dereferenceable(120) %6) #11
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %4, %"class.url::Origin"* nonnull dereferenceable(80) %7) #11
  call void @_ZN5media14MediaUrlParamsC1E4GURLS1_N3url6OriginEbb(%"struct.media::MediaUrlParams"* bitcast (%"class.base::NoDestructor"* @_ZZNK5media13MediaResource17GetMediaUrlParamsEvE8instance to %"struct.media::MediaUrlParams"*), %class.GURL* nonnull %2, %class.GURL* nonnull %3, %"class.url::Origin"* nonnull %4, i1 zeroext false, i1 zeroext false) #11
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19)
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %15) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5media13MediaResource17GetMediaUrlParamsEvE8instance) #11
  br label %20

20:                                               ; preds = %10, %13, %1
  ret %"struct.media::MediaUrlParams"* bitcast (%"class.base::NoDestructor"* @_ZZNK5media13MediaResource17GetMediaUrlParamsEvE8instance to %"struct.media::MediaUrlParams"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #7

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5media13MediaResource7GetTypeEv(%"class.media::MediaResource"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::DemuxerStream"* @_ZN5media13MediaResource14GetFirstStreamENS_13DemuxerStream4TypeE(%"class.media::MediaResource"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.media::MediaResource"* %0 to void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)***
  %6 = load void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)**, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)** %6, i64 3
  %8 = load void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)** %7, align 8
  call void %8(%"class.std::__1::vector"* nonnull sret %3, %"class.media::MediaResource"* %0) #11
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %11, align 8
  %13 = icmp eq %"class.media::DemuxerStream"** %10, %12
  br i1 %13, label %29, label %16

14:                                               ; preds = %16
  %15 = icmp eq %"class.media::DemuxerStream"** %25, %12
  br i1 %15, label %26, label %16

16:                                               ; preds = %2, %14
  %17 = phi %"class.media::DemuxerStream"** [ %25, %14 ], [ %10, %2 ]
  %18 = load %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %17, align 8
  %19 = bitcast %"class.media::DemuxerStream"* %18 to i32 (%"class.media::DemuxerStream"*)***
  %20 = load i32 (%"class.media::DemuxerStream"*)**, i32 (%"class.media::DemuxerStream"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.media::DemuxerStream"*)*, i32 (%"class.media::DemuxerStream"*)** %20, i64 3
  %22 = load i32 (%"class.media::DemuxerStream"*)*, i32 (%"class.media::DemuxerStream"*)** %21, align 8
  %23 = call i32 %22(%"class.media::DemuxerStream"* %18) #11
  %24 = icmp eq i32 %23, %1
  %25 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %17, i64 1
  br i1 %24, label %26, label %14

26:                                               ; preds = %16, %14
  %27 = phi %"class.media::DemuxerStream"* [ null, %14 ], [ %18, %16 ]
  %28 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %9, align 8
  br label %29

29:                                               ; preds = %26, %2
  %30 = phi %"class.media::DemuxerStream"** [ %10, %2 ], [ %28, %26 ]
  %31 = phi %"class.media::DemuxerStream"* [ null, %2 ], [ %27, %26 ]
  %32 = icmp eq %"class.media::DemuxerStream"** %30, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.media::DemuxerStream"** %30 to i64
  %35 = bitcast %"class.media::DemuxerStream"*** %11 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.media::DemuxerStream"** %30 to i8*
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret %"class.media::DemuxerStream"* %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media13MediaResource34ForwardDurationChangeToDemuxerHostEN4base9TimeDeltaE(%"class.media::MediaResource"* nocapture, i64) unnamed_addr #1 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #8

declare void @_ZN5media14MediaUrlParamsC1E4GURLS1_N3url6OriginEbb(%"struct.media::MediaUrlParams"*, %class.GURL*, %class.GURL*, %"class.url::Origin"*, i1 zeroext, i1 zeroext) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
