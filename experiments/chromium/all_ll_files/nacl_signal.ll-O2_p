; ModuleID = '../../native_client/src/trusted/service_runtime/linux/nacl_signal.c'
source_filename = "../../native_client/src/trusted/service_runtime/linux/nacl_signal.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.NaClSignalContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.sigaction = type { %union.anon, %struct.__sigset_t, i32, void ()* }
%union.anon = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.0 }
%union.anon.0 = type { %struct.anon.3, [80 x i8] }
%struct.anon.3 = type { i32, i32, i32, i64, i64 }
%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.9, %union.anon.11, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.9 = type { i64 }
%union.anon.11 = type { i64 }
%struct.NaClExceptionFrame = type { i64, %struct.NaClExceptionContext, %struct.NaClExceptionPortableContext }
%struct.NaClExceptionContext = type { i32, i32, i32, i32, i32, [11 x i32], %struct.NaClUserRegisterStateX8664 }
%struct.NaClUserRegisterStateX8664 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32 }
%struct.NaClExceptionPortableContext = type { i32, i32, i32 }

@g_handler_func = internal unnamed_addr global void (i32, %struct.NaClSignalContext*, i32)* null, align 8
@s_Signals = internal unnamed_addr constant [13 x i32] [i32 16, i32 31, i32 10, i32 1, i32 2, i32 3, i32 4, i32 5, i32 7, i32 8, i32 11, i32 15, i32 6], align 16
@s_OldActions = internal global [13 x %struct.sigaction] zeroinitializer, align 16
@.str = private unnamed_addr constant [43 x i8] c"Failed to install handler for %d.\0A\09ERR:%s\0A\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"Failed to unregister handler for %d.\0A\09ERR:%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"../../native_client/src/trusted/service_runtime/linux/nacl_signal.c\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"AssertNoOtherSignalHandlers: sigaction() call failed for signal %d: errno=%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [75 x i8] c"AssertNoOtherSignalHandlers: A signal handler is registered for signal %d\0A\00", align 1
@nacl_check_debug_mode = external local_unnamed_addr global i32, align 4
@.str.8 = private unnamed_addr constant [59 x i8] c"!NaClIsUserAddr(natp->nap, (uintptr_t) pointer_into_stack)\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"NaClUserToSys: uaddr 0x%08lx, addr space %d bits\0A\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @NaClSignalHandlerSet(void (i32, %struct.NaClSignalContext*, i32)*) local_unnamed_addr #0 {
  store void (i32, %struct.NaClSignalContext*, i32)* %0, void (i32, %struct.NaClSignalContext*, i32)** @g_handler_func, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClSignalHandlerInit() local_unnamed_addr #1 {
  %1 = alloca [65 x i8], align 16
  %2 = alloca %struct.sigaction, align 8
  %3 = alloca %struct.sigaction, align 8
  %4 = bitcast %struct.sigaction* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 152, i1 false)
  %5 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 65, i1 false) #6
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 1
  %7 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 9
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 56, i1 false) #6
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 16
  store i8 1, i8* %8, align 16
  %9 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 31
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 10
  store i8 1, i8* %10, align 2
  %11 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 11
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 15
  store i8 1, i8* %12, align 1
  %13 = bitcast %struct.sigaction* %2 to i8*
  %14 = bitcast %struct.sigaction* %2 to i64*
  %15 = bitcast i8* %6 to i64*
  store i64 72340172838076673, i64* %15, align 1
  br label %16

16:                                               ; preds = %36, %0
  %17 = phi i8 [ 1, %0 ], [ %38, %36 ]
  %18 = phi i64 [ 1, %0 ], [ %34, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 152, i1 false) #6
  %19 = icmp eq i8 %17, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %16
  %21 = trunc i64 %18 to i32
  %22 = call i32 @sigaction(i32 %21, %struct.sigaction* null, %struct.sigaction* nonnull %2) #6
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = tail call i32* @__errno_location() #7
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 22
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 %21, i32 %26) #6
  br label %33

29:                                               ; preds = %20
  %30 = load i64, i64* %14, align 8
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0), i32 %21) #6
  br label %33

33:                                               ; preds = %32, %29, %28, %24, %16
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %13) #6
  %34 = add nuw nsw i64 %18, 1
  %35 = icmp eq i64 %34, 65
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds [65 x i8], [65 x i8]* %1, i64 0, i64 %34
  %38 = load i8, i8* %37, align 1
  br label %16

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 152, i1 false)
  %40 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %3, i64 0, i32 1
  %41 = call i32 @sigemptyset(%struct.__sigset_t* %40) #6
  %42 = bitcast %struct.sigaction* %3 to void (i32, %struct.siginfo_t*, i8*)**
  store void (i32, %struct.siginfo_t*, i8*)* @SignalCatch, void (i32, %struct.siginfo_t*, i8*)** %42, align 8
  %43 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %3, i64 0, i32 2
  store i32 134217732, i32* %43, align 8
  %44 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 16) #6
  %45 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 31) #6
  %46 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 10) #6
  %47 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 1) #6
  %48 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 2) #6
  %49 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 3) #6
  %50 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 4) #6
  %51 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 5) #6
  %52 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 7) #6
  %53 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 8) #6
  %54 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 11) #6
  %55 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 15) #6
  %56 = call i32 @sigaddset(%struct.__sigset_t* %40, i32 6) #6
  br label %57

57:                                               ; preds = %68, %39
  %58 = phi i64 [ 0, %39 ], [ %69, %68 ]
  %59 = getelementptr inbounds [13 x i32], [13 x i32]* @s_Signals, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds [13 x %struct.sigaction], [13 x %struct.sigaction]* @s_OldActions, i64 0, i64 %58
  %62 = call i32 @sigaction(i32 %60, %struct.sigaction* nonnull %3, %struct.sigaction* %61) #6
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %57
  %65 = tail call i32* @__errno_location() #7
  %66 = load i32, i32* %65, align 4
  %67 = call i8* @strerror(i32 %66) #6
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 %60, i8* %67) #6
  br label %68

68:                                               ; preds = %57, %64
  %69 = add nuw nsw i64 %58, 1
  %70 = icmp eq i64 %69, 13
  br i1 %70, label %71, label %57

71:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %4) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @SignalCatch(i32, %struct.siginfo_t*, i8*) #1 {
  %4 = alloca %struct.NaClAppThread*, align 8
  %5 = alloca %struct.NaClSignalContext, align 8
  %6 = bitcast %struct.NaClSignalContext* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 168, i1 false)
  tail call void asm sideeffect "cld", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !2
  call void @NaClSignalContextFromHandler(%struct.NaClSignalContext* nonnull %5, i8* %2) #6
  %7 = bitcast %struct.NaClAppThread** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = call %struct.NaClAppThread* @NaClTlsGetCurrentThread() #6
  store %struct.NaClAppThread* %8, %struct.NaClAppThread** %4, align 8
  %9 = icmp eq %struct.NaClAppThread* %8, null
  %10 = ptrtoint %struct.NaClAppThread* %8 to i64
  br i1 %9, label %53, label %11

11:                                               ; preds = %3
  %12 = load i32, i32* @nacl_check_debug_mode, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %8, i64 0, i32 2
  %16 = load %struct.NaClApp*, %struct.NaClApp** %15, align 8
  %17 = ptrtoint %struct.NaClAppThread** %4 to i64
  %18 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %16, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %17
  br i1 %20, label %31, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %16, i64 0, i32 0
  %23 = load i8, i8* %22, align 8
  %24 = zext i8 %23 to i64
  %25 = shl i64 1, %24
  %26 = add i64 %25, %19
  %27 = icmp ugt i64 %26, %17
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0)) #6
  %29 = load %struct.NaClAppThread*, %struct.NaClAppThread** %4, align 8
  %30 = ptrtoint %struct.NaClAppThread* %29 to i64
  br label %31

31:                                               ; preds = %28, %21, %14, %11
  %32 = phi i64 [ %10, %21 ], [ %10, %14 ], [ %10, %11 ], [ %30, %28 ]
  %33 = phi %struct.NaClAppThread* [ %8, %21 ], [ %8, %14 ], [ %8, %11 ], [ %29, %28 ]
  %34 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %33, i64 0, i32 2
  %35 = load %struct.NaClApp*, %struct.NaClApp** %34, align 8
  %36 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %5, i64 0, i32 16
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %35, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %37
  br i1 %40, label %53, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %35, i64 0, i32 0
  %43 = load i8, i8* %42, align 8
  %44 = zext i8 %43 to i64
  %45 = shl i64 1, %44
  %46 = add i64 %45, %39
  %47 = icmp ugt i64 %46, %37
  br i1 %47, label %48, label %53

48:                                               ; preds = %41
  %49 = inttoptr i64 %32 to %struct.NaClAppThread*
  %50 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %49, i64 0, i32 7
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 1
  br label %53

53:                                               ; preds = %41, %48, %31, %3
  %54 = phi i64 [ %32, %41 ], [ 0, %3 ], [ %32, %31 ], [ %32, %48 ]
  %55 = phi i32 [ 0, %41 ], [ 0, %3 ], [ 0, %31 ], [ %52, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %56 = or i32 %0, 1
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = inttoptr i64 %54 to %struct.NaClAppThread*
  %60 = call i32 @NaClThreadSuspensionSignalHandler(i32 %0, %struct.NaClSignalContext* nonnull %5, i32 %55, %struct.NaClAppThread* %59) #6
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @NaClSignalContextToHandler(i8* %2, %struct.NaClSignalContext* nonnull %5) #6
  br label %166

63:                                               ; preds = %58, %53
  %64 = icmp eq i32 %55, 0
  br i1 %64, label %135, label %65

65:                                               ; preds = %63
  switch i32 %0, label %135 [
    i32 11, label %66
    i32 8, label %66
    i32 4, label %66
  ]

66:                                               ; preds = %65, %65, %65
  %67 = inttoptr i64 %54 to %struct.NaClAppThread*
  %68 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %67, i64 0, i32 2
  %69 = load %struct.NaClApp*, %struct.NaClApp** %68, align 8
  %70 = call i32 @NaClSignalCheckSandboxInvariants(%struct.NaClSignalContext* nonnull %5, %struct.NaClAppThread* %67) #6
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %135, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %69, i64 0, i32 57
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %135, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %67, i64 0, i32 13
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %135

80:                                               ; preds = %76
  store i32 1, i32* %77, align 4
  %81 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %67, i64 0, i32 12
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %5, i64 0, i32 7
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %87 = add i32 %86, -128
  %88 = select i1 %83, i32 %87, i32 %82
  %89 = add i32 %88, -224
  %90 = and i32 %89, -16
  %91 = add i32 %90, -8
  %92 = zext i32 %91 to i64
  %93 = add nuw nsw i64 %92, 232
  %94 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %69, i64 0, i32 0
  %95 = load i8, i8* %94, align 8
  %96 = zext i8 %95 to i64
  %97 = shl i64 1, %96
  %98 = icmp ult i64 %97, %93
  br i1 %98, label %135, label %99

99:                                               ; preds = %80
  %100 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %69, i64 0, i32 3
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, %92
  %103 = icmp eq i64 %102, -1
  br i1 %103, label %135, label %104

104:                                              ; preds = %99
  %105 = add nuw nsw i64 %92, 8
  %106 = inttoptr i64 %102 to %struct.NaClExceptionFrame*
  %107 = trunc i64 %105 to i32
  call void @NaClSignalSetUpExceptionFrame(%struct.NaClExceptionFrame* %106, %struct.NaClSignalContext* nonnull %5, i32 %107) #6
  %108 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %5, i64 0, i32 5
  store i64 %105, i64* %108, align 8
  %109 = load i32, i32* %73, align 8
  %110 = zext i32 %109 to i64
  %111 = icmp eq i32 %109, 0
  %112 = load i8, i8* %94, align 8
  br i1 %111, label %117, label %113

113:                                              ; preds = %104
  %114 = zext i8 %112 to i64
  %115 = lshr i64 %110, %114
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %113, %104
  %118 = zext i8 %112 to i32
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i64 %110, i32 %118) #6
  br label %119

119:                                              ; preds = %117, %113
  %120 = load i64, i64* %100, align 8
  %121 = add i64 %120, %110
  %122 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %5, i64 0, i32 16
  store i64 %121, i64* %122, align 8
  %123 = load i8, i8* %94, align 8
  %124 = zext i8 %123 to i64
  %125 = lshr i64 %92, %124
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %119
  %128 = zext i8 %123 to i32
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i64 %92, i32 %128) #6
  br label %129

129:                                              ; preds = %127, %119
  %130 = load i64, i64* %100, align 8
  %131 = add i64 %130, %92
  store i64 %131, i64* %84, align 8
  %132 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %5, i64 0, i32 17
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, -1025
  store i32 %134, i32* %132, align 8
  call void @NaClSignalContextToHandler(i8* %2, %struct.NaClSignalContext* nonnull %5) #6
  br label %166

135:                                              ; preds = %80, %99, %76, %72, %66, %65, %63
  %136 = load void (i32, %struct.NaClSignalContext*, i32)*, void (i32, %struct.NaClSignalContext*, i32)** @g_handler_func, align 8
  %137 = icmp eq void (i32, %struct.NaClSignalContext*, i32)* %136, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  call void %136(i32 %0, %struct.NaClSignalContext* nonnull %5, i32 %55) #6
  br label %166

139:                                              ; preds = %135
  call void @NaClSignalHandleUntrusted(i32 %0, %struct.NaClSignalContext* nonnull %5, i32 %55) #6
  %140 = sub nsw i32 0, %0
  br label %141

141:                                              ; preds = %163, %139
  %142 = phi i64 [ 0, %139 ], [ %164, %163 ]
  %143 = getelementptr inbounds [13 x i32], [13 x i32]* @s_Signals, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %0
  br i1 %145, label %146, label %163

146:                                              ; preds = %141
  %147 = getelementptr inbounds [13 x %struct.sigaction], [13 x %struct.sigaction]* @s_OldActions, i64 0, i64 %142, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = and i32 %148, 4
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds [13 x %struct.sigaction], [13 x %struct.sigaction]* @s_OldActions, i64 0, i64 %142, i32 0
  br i1 %150, label %157, label %152

152:                                              ; preds = %146
  %153 = bitcast %union.anon* %151 to void (i32, %struct.siginfo_t*, i8*)**
  %154 = load void (i32, %struct.siginfo_t*, i8*)*, void (i32, %struct.siginfo_t*, i8*)** %153, align 8
  %155 = icmp eq void (i32, %struct.siginfo_t*, i8*)* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %152
  call void %154(i32 %0, %struct.siginfo_t* %1, i8* %2) #6
  br label %166

157:                                              ; preds = %146
  %158 = getelementptr inbounds %union.anon, %union.anon* %151, i64 0, i32 0
  %159 = load void (i32)*, void (i32)** %158, align 8
  %160 = icmp ult void (i32)* %159, inttoptr (i64 2 to void (i32)*)
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void %159(i32 %0) #6
  br label %166

162:                                              ; preds = %157, %152
  call void @NaClExit(i32 %140) #6
  br label %163

163:                                              ; preds = %162, %141
  %164 = add nuw nsw i64 %142, 1
  %165 = icmp eq i64 %164, 13
  br i1 %165, label %166, label %141

166:                                              ; preds = %163, %161, %156, %138, %129, %62
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) local_unnamed_addr #3

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClSignalHandlerFini() local_unnamed_addr #1 {
  br label %1

1:                                                ; preds = %12, %0
  %2 = phi i64 [ 0, %0 ], [ %13, %12 ]
  %3 = getelementptr inbounds [13 x i32], [13 x i32]* @s_Signals, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds [13 x %struct.sigaction], [13 x %struct.sigaction]* @s_OldActions, i64 0, i64 %2
  %6 = tail call i32 @sigaction(i32 %4, %struct.sigaction* %5, %struct.sigaction* null) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = tail call i32* @__errno_location() #7
  %10 = load i32, i32* %9, align 4
  %11 = tail call i8* @strerror(i32 %10) #6
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 %4, i8* %11) #6
  br label %12

12:                                               ; preds = %1, %8
  %13 = add nuw nsw i64 %2, 1
  %14 = icmp eq i64 %13, 13
  br i1 %14, label %15, label %1

15:                                               ; preds = %12
  ret void
}

declare void @NaClSignalContextFromHandler(%struct.NaClSignalContext*, i8*) local_unnamed_addr #4

declare i32 @NaClThreadSuspensionSignalHandler(i32, %struct.NaClSignalContext*, i32, %struct.NaClAppThread*) local_unnamed_addr #4

declare void @NaClSignalContextToHandler(i8*, %struct.NaClSignalContext*) local_unnamed_addr #4

declare void @NaClSignalHandleUntrusted(i32, %struct.NaClSignalContext*, i32) local_unnamed_addr #4

declare %struct.NaClAppThread* @NaClTlsGetCurrentThread() local_unnamed_addr #4

declare i32 @NaClSignalCheckSandboxInvariants(%struct.NaClSignalContext*, %struct.NaClAppThread*) local_unnamed_addr #4

declare void @NaClSignalSetUpExceptionFrame(%struct.NaClExceptionFrame*, %struct.NaClSignalContext*, i32) local_unnamed_addr #4

declare void @NaClExit(i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 9883}
