; ModuleID = '../../third_party/libzip/src/lib/zip_source_free.c'
source_filename = "../../third_party/libzip/src/lib/zip_source_free.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden void @zip_source_free(%struct.zip_source*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.zip_source* %0, null
  br i1 %2, label %38, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = add i32 %5, -1
  store i32 %8, i32* %4, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  store i32 1, i32* %11, align 8
  %15 = tail call i32 @zip_source_close(%struct.zip_source* nonnull %0) #3
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @zip_source_rollback_write(%struct.zip_source* nonnull %0) #3
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 8
  %23 = load %struct.zip*, %struct.zip** %22, align 8
  %24 = icmp eq %struct.zip* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 7
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_zip_deregister_source(%struct.zip* nonnull %23, %struct.zip_source* nonnull %0) #3
  br label %30

30:                                               ; preds = %25, %21, %29
  %31 = tail call i64 @_zip_source_call(%struct.zip_source* nonnull %0, i8* null, i64 0, i32 5) #3
  %32 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 0
  %33 = load %struct.zip_source*, %struct.zip_source** %32, align 8
  %34 = icmp eq %struct.zip_source* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  tail call void @zip_source_free(%struct.zip_source* nonnull %33)
  br label %36

36:                                               ; preds = %30, %35
  %37 = bitcast %struct.zip_source* %0 to i8*
  tail call void @free(i8* %37) #3
  br label %38

38:                                               ; preds = %7, %1, %36
  ret void
}

declare i32 @zip_source_close(%struct.zip_source*) local_unnamed_addr #1

declare void @zip_source_rollback_write(%struct.zip_source*) local_unnamed_addr #1

declare void @_zip_deregister_source(%struct.zip*, %struct.zip_source*) local_unnamed_addr #1

declare i64 @_zip_source_call(%struct.zip_source*, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
