; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/widget_scheduler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/widget_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::WidgetScheduler" = type { %"class.blink::scheduler::WebWidgetScheduler", %class.scoped_refptr, %class.scoped_refptr.74, %"class.std::__1::unique_ptr.183" }
%"class.blink::scheduler::WebWidgetScheduler" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe", %class.scoped_refptr.1, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.76", %"class.absl::optional.81", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.182" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.2", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %class.scoped_refptr.3, %class.scoped_refptr.74, i32, i32, i8*, %"class.base::WeakPtrFactory.75" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.3, %class.scoped_refptr.5, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.5 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.6", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.7", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.12, i8, [7 x i8] }>
%class.scoped_refptr.12 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.13", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.3 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.17" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.22", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.27", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.57", %"class.base::RepeatingCallback.58", %"class.absl::optional.59", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.34", %"struct.std::__1::less" }>
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.38" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.36, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.36 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.37" }>
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.43", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.45" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.57" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.58" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.3, %"class.std::__1::unique_ptr.64", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.622", i64, [64 x %"class.base::RepeatingCallback.146"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.64", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.622" = type { %"struct.std::__1::__atomic_base.623" }
%"struct.std::__1::__atomic_base.623" = type { %"struct.std::__1::__atomic_base.624" }
%"struct.std::__1::__atomic_base.624" = type { %"struct.std::__1::__cxx_atomic_impl.625" }
%"struct.std::__1::__cxx_atomic_impl.625" = type { %"struct.std::__1::__cxx_atomic_base_impl.626" }
%"struct.std::__1::__cxx_atomic_base_impl.626" = type { i64 }
%"class.base::RepeatingCallback.146" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.73 }
%class.scoped_refptr.73 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.3 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.4", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.75" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { i32 }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr, %class.scoped_refptr.74, %class.scoped_refptr, %class.scoped_refptr.74, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.610" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.604" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.443, %"class.std::__1::unique_ptr.561", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.36, i32 }>
%class.scoped_refptr.443 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.36, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.525", %"class.absl::optional.530", %"class.absl::optional.484", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque.549", %"class.std::__1::map.552", i8, [7 x i8], %class.scoped_refptr.36, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.444" }>
%"class.base::RefCountedThreadSafe.444" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.447 }
%union.anon.447 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.463" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.463" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.36, %"class.std::__1::unique_ptr.464", %"class.absl::optional.474", %"struct.std::__1::atomic.480", i8, i8, i8, i8, i32, i32, %"class.absl::optional.484", %"class.std::__1::unique_ptr.489", i8, i64, %class.scoped_refptr.521, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.523", %"class.base::WeakPtrFactory.524" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.36, i8, %"class.mojo::ScopedHandleBase.467", %class.scoped_refptr.468, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.469", i8*, %"class.base::WeakPtrFactory.470" }
%"class.mojo::ScopedHandleBase.467" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.468 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.469" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.470" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.474" = type { %"class.absl::optional_internal::optional_data.475" }
%"class.absl::optional_internal::optional_data.475" = type { %"class.absl::optional_internal::optional_data_base.476" }
%"class.absl::optional_internal::optional_data_base.476" = type { %"class.absl::optional_internal::optional_data_dtor_base.477" }
%"class.absl::optional_internal::optional_data_dtor_base.477" = type { i8, %union.anon.478 }
%union.anon.478 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.479", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.479" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i8 }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.492", i8, i64, %class.scoped_refptr.493, %class.scoped_refptr.517 }
%"class.base::RepeatingCallback.492" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.493 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.495", %"class.std::__1::map.506", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::map.506" = type { %"class.std::__1::__tree.507" }
%"class.std::__1::__tree.507" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%class.scoped_refptr.517 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.521 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.621", [4 x i8], %"class.base::RepeatingCallback.146", %class.scoped_refptr.36, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.7", [4 x i8] }>
%"class.base::RefCountedThreadSafe.621" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.523" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.524" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.525" = type { %"class.absl::optional_internal::optional_data.526" }
%"class.absl::optional_internal::optional_data.526" = type { %"class.absl::optional_internal::optional_data_base.527" }
%"class.absl::optional_internal::optional_data_base.527" = type { %"class.absl::optional_internal::optional_data_dtor_base.528" }
%"class.absl::optional_internal::optional_data_dtor_base.528" = type { i8, %union.anon.529 }
%union.anon.529 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.530" = type { %"class.absl::optional_internal::optional_data.531" }
%"class.absl::optional_internal::optional_data.531" = type { %"class.absl::optional_internal::optional_data_base.532" }
%"class.absl::optional_internal::optional_data_base.532" = type { %"class.absl::optional_internal::optional_data_dtor_base.533" }
%"class.absl::optional_internal::optional_data_dtor_base.533" = type { i8, [7 x i8], %union.anon.534 }
%union.anon.534 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.484" = type { %"class.absl::optional_internal::optional_data.485" }
%"class.absl::optional_internal::optional_data.485" = type { %"class.absl::optional_internal::optional_data_base.486" }
%"class.absl::optional_internal::optional_data_base.486" = type { %"class.absl::optional_internal::optional_data_dtor_base.487" }
%"class.absl::optional_internal::optional_data_dtor_base.487" = type { i8, %union.anon.488 }
%union.anon.488 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.535 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.535 = type { %"class.std::__1::map.538" }
%"class.std::__1::map.538" = type { %"class.std::__1::__tree.539" }
%"class.std::__1::__tree.539" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.base::circular_deque.549" = type { %"class.base::internal::VectorBuffer.550", i64, i64 }
%"class.base::internal::VectorBuffer.550" = type { %"class.std::__1::unique_ptr.551"*, i64 }
%"class.std::__1::unique_ptr.551" = type opaque
%"class.std::__1::map.552" = type { %"class.std::__1::__tree.553" }
%"class.std::__1::__tree.553" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.554", %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.146", %"class.base::OnceCallback.564", %"class.absl::optional.140", %"class.absl::optional.565", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.571", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.579", %"class.std::__1::map.590", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.599", i8, %class.scoped_refptr.36, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.600" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.564" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.565" = type { %"class.absl::optional_internal::optional_data.566" }
%"class.absl::optional_internal::optional_data.566" = type { %"class.absl::optional_internal::optional_data_base.567" }
%"class.absl::optional_internal::optional_data_base.567" = type { %"class.absl::optional_internal::optional_data_dtor_base.568" }
%"class.absl::optional_internal::optional_data_dtor_base.568" = type { i8, %union.anon.569 }
%union.anon.569 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.36, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.264" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.264" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.570 }
%class.scoped_refptr.570 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.574", %class.scoped_refptr.575 }
%"class.base::RepeatingCallback.574" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.575 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.444", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.579" = type { %"class.std::__1::__tree.580" }
%"class.std::__1::__tree.580" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::map.590" = type { %"class.std::__1::__tree.591" }
%"class.std::__1::__tree.591" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.base::OnceCallback.599" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.600" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.610" = type { %"class.std::__1::__tree.611" }
%"class.std::__1::__tree.611" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.612", %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.106", %"class.WTF::HashMap.127", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.156", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector.158", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.173", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.175", %"class.base::WeakPtrFactory.181", %"class.base::WeakPtrFactory.181", %"class.base::WeakPtrFactory.181" }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory.86" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory.86" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.102", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { float }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.109", %"class.WTF::HashSet", %"class.WTF::HashMap.117", %"class.WTF::Vector" }
%"class.WTF::HashMap.109" = type { %"class.WTF::HashTable.110" }
%"class.WTF::HashTable.110" = type <{ %"struct.WTF::KeyValuePair.113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.113" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.114" }
%"class.WTF::HashTable.114" = type <{ %class.scoped_refptr*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.121" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.WTF::HashMap.127" = type { %"class.WTF::HashTable.128" }
%"class.WTF::HashTable.128" = type <{ %"struct.WTF::KeyValuePair.131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.131" = type opaque
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet.132", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.149", %"class.base::WeakPtrFactory.155" }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.WTF::HashSet.132" = type { %"class.WTF::HashTable.133" }
%"class.WTF::HashTable.133" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.140", %"class.absl::optional.140", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.145" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.136", i8 }>
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashSet.136" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.145" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.146", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.146", %"class.base::WeakPtrFactory.147" }
%"class.base::WeakPtrFactory.147" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.155" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableState.156" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector.158" = type { %"class.WTF::VectorBuffer.159" }
%"class.WTF::VectorBuffer.159" = type { %"class.WTF::VectorBufferBase.160" }
%"class.WTF::VectorBufferBase.160" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.161", %"class.base::WeakPtr.162" }
%"class.base::WeakPtr.161" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.162" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.165" }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.std::__1::pair.167"*, %"struct.std::__1::pair.167"*, %"class.std::__1::__compressed_pair.168" }
%"struct.std::__1::pair.167" = type opaque
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::pair.167"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.173" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.181" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.182" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.74 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* }
%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter" = type <{ %class.scoped_refptr.1, i8, [7 x i8] }>
%"class.blink::scheduler::MainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate", %"class.blink::scheduler::IdleHelper::Delegate", %"class.blink::scheduler::SchedulerHelper::Observer", %"class.blink::scheduler::RenderWidgetSignals::Observer", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8, i8, [6 x i8], %"class.blink::scheduler::TraceableVariableController", %"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings", %"class.std::__1::unique_ptr.190", %"class.blink::scheduler::MainThreadSchedulerHelper", %class.scoped_refptr, %"class.blink::scheduler::IdleHelper", %"class.std::__1::unique_ptr.218", %"class.blink::scheduler::RenderWidgetSignals", %"class.std::__1::unique_ptr.242", %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %"class.std::__1::map", %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.blink::MemoryPurgeManager", %"class.std::__1::unique_ptr.265", %"class.blink::scheduler::NonWakingTimeDomain", %"class.base::RepeatingCallback.146", %"class.blink::scheduler::DeadlineTaskRunner", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.146", %"class.base::RepeatingCallback.278", %"class.std::__1::unique_ptr.279", %"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly", %"class.base::Lock", %"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread", %"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly", %class.PollableThreadSafeFlag, %class.PollableThreadSafeFlag, %"class.WTF::HashSet.438", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.base::WeakPtrFactory.442" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::RenderWidgetSignals::Observer" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.std::__1::array.189", i8, i8 }
%"struct.std::__1::array.189" = type { [6 x i8] }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::MainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %class.scoped_refptr, %class.scoped_refptr }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.74, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional.196" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional.196" = type { %"class.absl::optional_internal::optional_data.197" }
%"class.absl::optional_internal::optional_data.197" = type { %"class.absl::optional_internal::optional_data_base.198" }
%"class.absl::optional_internal::optional_data_base.198" = type { %"class.absl::optional_internal::optional_data_dtor_base.199" }
%"class.absl::optional_internal::optional_data_dtor_base.199" = type { i8, %union.anon.200 }
%union.anon.200 = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.74, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.1, %class.scoped_refptr.203, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.216", %"class.base::WeakPtrFactory.217" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.203 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.204", %class.scoped_refptr.74, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.214", %"class.base::WeakPtrFactory.215" }
%"class.base::RefCountedThreadSafe.204" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.base::WeakPtr.214" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.215" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::WeakPtr.216" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.217" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.221", %"class.base::RepeatingCallback.226", %class.scoped_refptr.74, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.227", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional", i8, [7 x i8], %"class.WTF::HashMap.233", %"class.base::WeakPtrFactory.238" }
%"class.WTF::HashMap.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"struct.WTF::KeyValuePair.225"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.225" = type opaque
%"class.base::RepeatingCallback.226" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.233" = type { %"class.WTF::HashTable.234" }
%"class.WTF::HashTable.234" = type <{ %"struct.WTF::KeyValuePair.237"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.237" = type opaque
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::RenderWidgetSignals" = type { %"class.blink::scheduler::RenderWidgetSignals::Observer"*, i32, i32 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::scheduler::FindInPageBudgetPoolController"* }
%"class.blink::scheduler::FindInPageBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.std::__1::unique_ptr.245", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.254" }
%"class.std::__1::__tree.254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.blink::MemoryPurgeManager" = type { i8, i8, i32, i32, %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* }
%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.269" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.268" }
%"class.base::time_internal::TimeBase.268" = type { i64 }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.blink::scheduler::NonWakingTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.blink::scheduler::DeadlineTaskRunner" = type { %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.146", %"class.base::TimeTicks", %class.scoped_refptr.74 }
%"class.base::RepeatingCallback.278" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::scheduler::AgentSchedulingStrategy"* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly" = type { %"class.blink::scheduler::IdleTimeEstimator", %"class.blink::scheduler::TraceableState.304", %"class.blink::scheduler::MainThreadSchedulerImpl::Policy", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter.308", %"class.blink::scheduler::TraceableCounter.309", %"class.blink::scheduler::TraceableObjectState", %"class.blink::scheduler::TraceableState.317", %"class.absl::optional.321", %"class.blink::scheduler::TraceableState.317", %"class.blink::scheduler::TraceableState.333", %"class.blink::scheduler::TraceableState.333", %"class.blink::scheduler::TraceableState.335", %"class.blink::scheduler::TraceableState.335", %"class.blink::scheduler::TraceableState.335", %"class.blink::scheduler::TraceableState.335", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.317", %"class.blink::scheduler::TraceableState.335", %"class.blink::scheduler::TraceableState.335", %"class.blink::scheduler::TraceableState.335", %"class.base::TimeTicks", %"class.WTF::HashSet.339", %"class.base::ObserverList.343", %"class.blink::scheduler::MainThreadMetricsHelper", %"class.blink::scheduler::TraceableState.364", %"class.blink::scheduler::TraceableState.366", %"class.blink::scheduler::TraceableState.377", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i32, i32, i8, %"class.std::__1::stack", i32, [4 x i8], %"class.blink::scheduler::TraceableState.333", %"class.WTF::Vector.391", %"class.blink::scheduler::CompositorPriorityExperiments", i8, [7 x i8], %"class.blink::scheduler::TraceableState.402", %"class.WTF::Vector.404", %"class.std::__1::unique_ptr.175" }
%"class.blink::scheduler::IdleTimeEstimator" = type <{ %"class.base::TaskObserver", %"class.cc::RollingTimeDeltaHistory", %"class.base::TickClock"*, double, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.cc::RollingTimeDeltaHistory" = type { %"class.std::__1::multiset", %"class.base::circular_deque", i64, %"class.base::flat_map.294" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::__tree_const_iterator"*, i64 }
%"class.std::__1::__tree_const_iterator" = type opaque
%"class.base::flat_map.294" = type { %"class.base::internal::flat_tree.295" }
%"class.base::internal::flat_tree.295" = type { %"class.std::__1::vector.296" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"struct.std::__1::pair.298"*, %"struct.std::__1::pair.298"*, %"class.std::__1::__compressed_pair.299" }
%"struct.std::__1::pair.298" = type opaque
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::pair.298"* }
%"class.blink::scheduler::TraceableState.304" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.306", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base.306" = type <{ i8*, i8 }>
%"class.blink::scheduler::MainThreadSchedulerImpl::Policy" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.blink::scheduler::TraceableCounter.308" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter.309" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableObjectState" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::ProtoStateTracer.base", i32, void (%"class.perfetto::protos::pbzero::TrackEvent"*, i32)* }
%"class.blink::scheduler::ProtoStateTracer.base" = type <{ i8*, i8 }>
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.310" }
%"class.std::__1::list.310" = type { %"class.std::__1::__list_imp.311" }
%"class.std::__1::__list_imp.311" = type { %"struct.std::__1::__list_node_base.312", %"class.std::__1::__compressed_pair.313" }
%"struct.std::__1::__list_node_base.312" = type { %"struct.std::__1::__list_node_base.312"*, %"struct.std::__1::__list_node_base.312"* }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.absl::optional.321" = type { %"class.absl::optional_internal::optional_data.322" }
%"class.absl::optional_internal::optional_data.322" = type { %"class.absl::optional_internal::optional_data_base.323" }
%"class.absl::optional_internal::optional_data_base.323" = type { %"class.absl::optional_internal::optional_data_dtor_base.324" }
%"class.absl::optional_internal::optional_data_dtor_base.324" = type { i8, %union.anon.325 }
%union.anon.325 = type { %"class.base::ScopedSampleMetadata" }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional.326" }
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { i64 }
%"class.blink::scheduler::TraceableState.317" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.319", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.319" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.335" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.337", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.337" = type <{ i8*, i8 }>
%"class.WTF::HashSet.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"class.blink::scheduler::PageSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::ObserverList.343" = type <{ %"class.std::__1::vector.43", %"class.base::LinkedList.344", i64, i32, [4 x i8] }>
%"class.base::LinkedList.344" = type { %"class.base::LinkNode.345" }
%"class.base::LinkNode.345" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::scheduler::MainThreadMetricsHelper" = type <{ %"class.blink::scheduler::MetricsHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, i8, [7 x i8], %"class.absl::optional", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TaskDurationMetricReporter.363", %"class.scheduling_metrics::TotalDurationMetricReporter", i32, [4 x i8], %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.361", %"class.scheduling_metrics::TaskDurationMetricReporter.361", %"class.scheduling_metrics::TaskDurationMetricReporter.361", %"class.scheduling_metrics::TaskDurationMetricReporter.361", %"class.scheduling_metrics::TaskDurationMetricReporter.361", %"class.scheduling_metrics::TaskDurationMetricReporter.361" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.347" }
%"class.base::time_internal::TimeBase.347" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.351" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.7", [4 x i8] }>
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { i32*, i32*, %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.361" = type { %"class.std::__1::unique_ptr.348" }
%"class.blink::scheduler::ThreadLoadTracker" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::RepeatingCallback.362" }
%"class.base::RepeatingCallback.362" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.scheduling_metrics::TaskDurationMetricReporter.363" = type { %"class.std::__1::unique_ptr.348" }
%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional.140", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.blink::scheduler::TraceableState.364" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.319", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState.366" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", void (i8*)*, i8* (i64, i64)*, %"class.absl::optional.367" }
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" }
%"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" = type { i8, %"class.absl::optional.372" }
%"class.absl::optional.372" = type { %"class.absl::optional_internal::optional_data.373" }
%"class.absl::optional_internal::optional_data.373" = type { %"class.absl::optional_internal::optional_data_base.374" }
%"class.absl::optional_internal::optional_data_base.374" = type { %"class.absl::optional_internal::optional_data_dtor_base.375" }
%"class.absl::optional_internal::optional_data_dtor_base.375" = type { i8, %union.anon.376 }
%union.anon.376 = type { i32 }
%"class.blink::scheduler::TraceableState.377" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i16)*, %"class.absl::optional.378", [6 x i8] }>
%"class.absl::optional.378" = type { %"class.absl::optional_internal::optional_data.379" }
%"class.absl::optional_internal::optional_data.379" = type { %"class.absl::optional_internal::optional_data_base.380" }
%"class.absl::optional_internal::optional_data_base.380" = type { %"class.absl::optional_internal::optional_data_dtor_base.381" }
%"class.absl::optional_internal::optional_data_dtor_base.381" = type { i8, %union.anon.382 }
%union.anon.382 = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::vector.384" }
%"class.std::__1::vector.384" = type { %"class.std::__1::__vector_base.385" }
%"class.std::__1::__vector_base.385" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %class.scoped_refptr* }
%"class.blink::scheduler::TraceableState.333" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.306", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::VectorBufferBase.393" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::scheduler::CompositorPriorityExperiments" = type <{ %"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, i8, i8, [2 x i8], %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.std::__1::unique_ptr.396", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* }
%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.std::__1::unique_ptr.245", i8, [7 x i8] }>
%"class.blink::scheduler::TraceableState.402" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.306", [7 x i8], void (i8*)*, i8* (i8)*, i8, [7 x i8] }>
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope"*, i32, i32 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope" = type { %"class.std::__1::unique_ptr.407", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"*, %class.scoped_refptr.74, %class.scoped_refptr.74, i8*, i8* }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.base::ThreadTaskRunnerHandleOverride"* }
%"class.base::ThreadTaskRunnerHandleOverride" = type <{ %"class.absl::optional.410", %class.scoped_refptr.74, %"class.absl::optional.415", [6 x i8] }>
%"class.absl::optional.410" = type { %"class.absl::optional_internal::optional_data.411" }
%"class.absl::optional_internal::optional_data.411" = type { %"class.absl::optional_internal::optional_data_base.412" }
%"class.absl::optional_internal::optional_data_base.412" = type { %"class.absl::optional_internal::optional_data_dtor_base.413" }
%"class.absl::optional_internal::optional_data_dtor_base.413" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr.74, %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.36 }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.base::RunLoop::ScopedDisallowRunning" }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread" = type { %"class.blink::scheduler::PendingUserInput::Monitor", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::scheduler::UserModel", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableCounter.430" }
%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap.425" }
%"class.WTF::HashMap.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type opaque
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.blink::scheduler::TraceableCounter.430" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly" = type { i32, %"class.std::__1::unique_ptr.432" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.base::ThreadChecker"* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.WTF::HashSet.438" = type { %"class.WTF::HashTable.439" }
%"class.WTF::HashTable.439" = type <{ %"class.blink::scheduler::AgentGroupSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.442" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams" = type <{ i32, [4 x i8], %"struct.base::sequence_manager::TaskQueue::Spec", %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, [3 x i8], %"class.absl::optional.81", [4 x i8] }>
%"struct.base::sequence_manager::TaskQueue::Spec" = type <{ i8*, i8, [7 x i8], %"class.base::sequence_manager::TimeDomain"*, i8, i8, [6 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.37", [4 x i8] }>

@_ZTVN5blink9scheduler15WidgetSchedulerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::WidgetScheduler"*)* @_ZN5blink9scheduler15WidgetSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::WidgetScheduler"*)* @_ZN5blink9scheduler15WidgetSchedulerD0Ev to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::WidgetScheduler"*)* @_ZN5blink9scheduler15WidgetScheduler15InputTaskRunnerEv to i8*)] }, align 8

@_ZN5blink9scheduler15WidgetSchedulerC1EPNS0_23MainThreadSchedulerImplE = hidden unnamed_addr alias void (%"class.blink::scheduler::WidgetScheduler"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*), void (%"class.blink::scheduler::WidgetScheduler"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*)* @_ZN5blink9scheduler15WidgetSchedulerC2EPNS0_23MainThreadSchedulerImplE
@_ZN5blink9scheduler15WidgetSchedulerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::WidgetScheduler"*), void (%"class.blink::scheduler::WidgetScheduler"*)* @_ZN5blink9scheduler15WidgetSchedulerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WidgetSchedulerC2EPNS0_23MainThreadSchedulerImplE(%"class.blink::scheduler::WidgetScheduler"* nocapture, %"class.blink::scheduler::MainThreadSchedulerImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", align 8
  %4 = alloca [22 x i8], align 2
  %5 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler15WidgetSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.scoped_refptr.74, %class.scoped_refptr.74* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::unique_ptr.183"* %10 to i64*
  %12 = bitcast %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3 to i8*
  %13 = bitcast %class.scoped_refptr* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #6
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %14)
  %15 = tail call i8* @_ZN5blink9scheduler19MainThreadTaskQueue16NameForQueueTypeENS1_9QueueTypeE(i32 18) #6
  %16 = getelementptr inbounds [22 x i8], [22 x i8]* %4, i64 0, i64 6
  call void @llvm.memset.p0i8.i64(i8* align 2 %16, i8 0, i64 16, i1 false)
  %17 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 0
  store i32 18, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 0
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 1
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 3
  store %"class.base::sequence_manager::TimeDomain"* null, %"class.base::sequence_manager::TimeDomain"** %20, align 8
  %21 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 4
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 2, i32 6, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %23, i8* nonnull align 2 %14, i64 22, i1 false)
  %24 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 5, i32 0
  store i8 96, i8* %24, align 8
  %25 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 5, i32 1
  store i32 10, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 6
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams", %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* %3, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 4
  %28 = call %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl12NewTaskQueueERKNS0_19MainThreadTaskQueue19QueueCreationParamsE(%"class.blink::scheduler::MainThreadSchedulerImpl"* %1, %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* nonnull dereferenceable(80) %3) #6
  %29 = ptrtoint %"class.blink::scheduler::MainThreadTaskQueue"* %28 to i64
  %30 = bitcast %class.scoped_refptr* %6 to i64*
  %31 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  store i64 %29, i64* %30, align 8
  %32 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %31) #6
  %38 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %31 to i8*
  call void @_ZdlPv(i8* %38) #7
  br label %39

39:                                               ; preds = %2, %33, %37
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #6
  %40 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  %41 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %40, i64 0, i32 1, i32 0
  %42 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %41, align 8
  %43 = call %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"* %42, i8 zeroext 40) #6
  %44 = ptrtoint %"class.base::SingleThreadTaskRunner"* %43 to i64
  %45 = bitcast %class.scoped_refptr.74* %8 to i64*
  %46 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  store i64 %44, i64* %45, align 8
  %47 = icmp eq %"class.base::SingleThreadTaskRunner"* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %46, i64 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.37", %"class.base::RefCountedThreadSafe.37"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.37", %"class.base::RefCountedThreadSafe.37"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe.37"* %54 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %55) #6
  br label %56

56:                                               ; preds = %39, %48, %53
  %57 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %7, align 8
  %58 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %57, i64 0, i32 1, i32 0
  %59 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %58, align 8
  %60 = call %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"* %59) #6
  %61 = ptrtoint %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %10, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %62, align 8
  store i64 %61, i64* %11, align 8
  %64 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %56
  call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %63) #6
  %66 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %63 to i8*
  call void @_ZdlPv(i8* %66) #7
  br label %67

67:                                               ; preds = %65, %56
  ret void
}

declare %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl12NewTaskQueueERKNS0_19MainThreadTaskQueue19QueueCreationParamsE(%"class.blink::scheduler::MainThreadSchedulerImpl"*, %"struct.blink::scheduler::MainThreadTaskQueue::QueueCreationParams"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* @_ZN4base16sequence_manager9TaskQueue23CreateQueueEnabledVoterEv(%"class.base::sequence_manager::TaskQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WidgetSchedulerD2Ev(%"class.blink::scheduler::WidgetScheduler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9scheduler15WidgetSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %3, align 8
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueue17ShutdownTaskQueueEv(%"class.blink::scheduler::MainThreadTaskQueue"* %4) #6
  %5 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %5, align 8
  store %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* null, %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"** %5, align 8
  %7 = icmp eq %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* nonnull %6) #6
  %9 = bitcast %"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 2, i32 0
  %12 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %13 = icmp eq %"class.base::SingleThreadTaskRunner"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.37", %"class.base::RefCountedThreadSafe.37"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.37", %"class.base::RefCountedThreadSafe.37"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe.37"* %20 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %21) #6
  br label %22

22:                                               ; preds = %10, %14, %19
  %23 = load %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::MainThreadTaskQueue"** %3, align 8
  %24 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %23) #6
  %30 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %23 to i8*
  tail call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %22, %25, %29
  ret void
}

declare void @_ZN5blink9scheduler19MainThreadTaskQueue17ShutdownTaskQueueEv(%"class.blink::scheduler::MainThreadTaskQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler15WidgetSchedulerD0Ev(%"class.blink::scheduler::WidgetScheduler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink9scheduler15WidgetSchedulerD2Ev(%"class.blink::scheduler::WidgetScheduler"* %0) #6
  %2 = bitcast %"class.blink::scheduler::WidgetScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler15WidgetScheduler15InputTaskRunnerEv(%"class.blink::scheduler::WidgetScheduler"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WidgetScheduler", %"class.blink::scheduler::WidgetScheduler"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.base::SingleThreadTaskRunner"* %3
}

declare i8* @_ZN5blink9scheduler19MainThreadTaskQueue16NameForQueueTypeENS1_9QueueTypeE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN4base16sequence_manager9TaskQueue16CreateTaskRunnerEh(%"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager9TaskQueue17QueueEnabledVoterD1Ev(%"class.base::sequence_manager::TaskQueue::QueueEnabledVoter"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
