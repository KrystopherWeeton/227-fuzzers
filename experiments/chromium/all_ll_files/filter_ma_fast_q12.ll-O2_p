; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/filter_ma_fast_q12.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/filter_ma_fast_q12.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_FilterMAFastQ12(i16* nocapture readonly, i16* nocapture, i16* nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %86, label %7

7:                                                ; preds = %5
  %8 = icmp eq i64 %3, 0
  %9 = icmp ult i64 %3, 8
  %10 = and i64 %3, -8
  %11 = icmp eq i64 %10, %3
  br label %12

12:                                               ; preds = %78, %7
  %13 = phi i64 [ 0, %7 ], [ %84, %78 ]
  %14 = phi i16* [ %1, %7 ], [ %83, %78 ]
  br i1 %8, label %76, label %15

15:                                               ; preds = %12
  br i1 %9, label %54, label %16

16:                                               ; preds = %15, %16
  %17 = phi i64 [ %45, %16 ], [ 0, %15 ]
  %18 = phi <4 x i32> [ %43, %16 ], [ zeroinitializer, %15 ]
  %19 = phi <4 x i32> [ %44, %16 ], [ zeroinitializer, %15 ]
  %20 = getelementptr inbounds i16, i16* %2, i64 %17
  %21 = bitcast i16* %20 to <4 x i16>*
  %22 = load <4 x i16>, <4 x i16>* %21, align 2
  %23 = getelementptr inbounds i16, i16* %20, i64 4
  %24 = bitcast i16* %23 to <4 x i16>*
  %25 = load <4 x i16>, <4 x i16>* %24, align 2
  %26 = sext <4 x i16> %22 to <4 x i32>
  %27 = sext <4 x i16> %25 to <4 x i32>
  %28 = sub nsw i64 %13, %17
  %29 = getelementptr inbounds i16, i16* %0, i64 %28
  %30 = getelementptr inbounds i16, i16* %29, i64 -3
  %31 = bitcast i16* %30 to <4 x i16>*
  %32 = load <4 x i16>, <4 x i16>* %31, align 2
  %33 = shufflevector <4 x i16> %32, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %34 = getelementptr inbounds i16, i16* %29, i64 -4
  %35 = getelementptr inbounds i16, i16* %34, i64 -3
  %36 = bitcast i16* %35 to <4 x i16>*
  %37 = load <4 x i16>, <4 x i16>* %36, align 2
  %38 = shufflevector <4 x i16> %37, <4 x i16> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %39 = sext <4 x i16> %33 to <4 x i32>
  %40 = sext <4 x i16> %38 to <4 x i32>
  %41 = mul nsw <4 x i32> %39, %26
  %42 = mul nsw <4 x i32> %40, %27
  %43 = add nsw <4 x i32> %41, %18
  %44 = add nsw <4 x i32> %42, %19
  %45 = add i64 %17, 8
  %46 = icmp eq i64 %45, %10
  br i1 %46, label %47, label %16, !llvm.loop !2

47:                                               ; preds = %16
  %48 = add <4 x i32> %44, %43
  %49 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %50 = add <4 x i32> %48, %49
  %51 = shufflevector <4 x i32> %50, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %52 = add <4 x i32> %50, %51
  %53 = extractelement <4 x i32> %52, i32 0
  br i1 %11, label %71, label %54

54:                                               ; preds = %47, %15
  %55 = phi i32 [ 0, %15 ], [ %53, %47 ]
  %56 = phi i64 [ 0, %15 ], [ %10, %47 ]
  br label %57

57:                                               ; preds = %54, %57
  %58 = phi i32 [ %68, %57 ], [ %55, %54 ]
  %59 = phi i64 [ %69, %57 ], [ %56, %54 ]
  %60 = getelementptr inbounds i16, i16* %2, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = sext i16 %61 to i32
  %63 = sub nsw i64 %13, %59
  %64 = getelementptr inbounds i16, i16* %0, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i32
  %67 = mul nsw i32 %66, %62
  %68 = add nsw i32 %67, %58
  %69 = add nuw i64 %59, 1
  %70 = icmp eq i64 %69, %3
  br i1 %70, label %71, label %57, !llvm.loop !4

71:                                               ; preds = %57, %47
  %72 = phi i32 [ %53, %47 ], [ %68, %57 ]
  %73 = icmp sgt i32 %72, -134217728
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = icmp slt i32 %72, 134215679
  br i1 %75, label %76, label %78

76:                                               ; preds = %71, %12, %74
  %77 = phi i32 [ %72, %74 ], [ 0, %12 ], [ -134217728, %71 ]
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi i32 [ %77, %76 ], [ 134215679, %74 ]
  %80 = add nsw i32 %79, 2048
  %81 = lshr i32 %80, 12
  %82 = trunc i32 %81 to i16
  %83 = getelementptr inbounds i16, i16* %14, i64 1
  store i16 %82, i16* %14, align 2
  %84 = add nuw i64 %13, 1
  %85 = icmp eq i64 %84, %4
  br i1 %85, label %86, label %12

86:                                               ; preds = %78, %5
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
