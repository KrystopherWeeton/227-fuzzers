; ModuleID = '../../third_party/pdfium/third_party/base/allocator/partition_allocator/spin_lock.cc'
source_filename = "../../third_party/pdfium/third_party/base/allocator/partition_allocator/spin_lock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.pdfium::base::subtle::SpinLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %3

3:                                                ; preds = %24, %1
  %4 = phi i32 [ 0, %1 ], [ %21, %24 ]
  br label %5

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %13, %12 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !2
  %7 = load atomic i32, i32* %2 monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = atomicrmw xchg i32* %2, i32 1 acquire
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %28, label %12, !prof !3

12:                                               ; preds = %5, %9
  %13 = add nuw nsw i32 %6, 1
  %14 = icmp eq i32 %13, 1000
  br i1 %14, label %15, label %5

15:                                               ; preds = %12
  %16 = icmp slt i32 %4, 10
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = add nsw i32 %4, 1
  %19 = tail call i32 @sched_yield() #2
  br label %20

20:                                               ; preds = %17, %15
  %21 = phi i32 [ %18, %17 ], [ %4, %15 ]
  %22 = load atomic i32, i32* %2 monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %25
  br label %3

25:                                               ; preds = %20
  %26 = atomicrmw xchg i32* %2, i32 1 acquire
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %24, !prof !3

28:                                               ; preds = %25, %9
  ret void
}

; Function Attrs: nounwind
declare i32 @sched_yield() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2144538051}
!3 = !{!"branch_weights", i32 2000, i32 1}
