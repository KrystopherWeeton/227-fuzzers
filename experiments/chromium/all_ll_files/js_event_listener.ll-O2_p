; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/js_event_listener.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/js_event_listener.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.196" }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::JSEventListener" = type { %"class.blink::JSBasedEventListener", %"class.blink::Member" }
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::V8EventListener"* }
%"class.blink::V8EventListener" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::CallbackInterfaceBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", i8, %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.181", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.120", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.183" }
%"class.blink::Persistent.183" = type { %"class.blink::PersistentBase.184" }
%"class.blink::PersistentBase.184" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.201", %"class.blink::Member.201", %"class.blink::Member.203", %"class.blink::Member.205", %"class.base::TimeTicks" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::Event"* }
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ExecutionContext" = type opaque

$_ZNK5blink15JSEventListener10GetIsolateEv = comdat any

$_ZN5blink15JSEventListener17GetListenerObjectERNS_11EventTargetE = comdat any

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink15JSEventListenerD0Ev = comdat any

$_ZNK5blink13EventListener14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink15JSEventListener7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink20JSBasedEventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink13EventListener21IsNativeEventListenerEv = comdat any

$_ZNK5blink15JSEventListener17IsJSEventListenerEv = comdat any

$_ZNK5blink20JSBasedEventListener16IsJSEventHandlerEv = comdat any

$_ZNK5blink15JSEventListener14GetScriptStateEv = comdat any

$_ZNK5blink15JSEventListener27GetScriptStateOrReportErrorEPKc = comdat any

$_ZNK5blink15JSEventListener8GetWorldEv = comdat any

$_ZN5blink10TraceTraitINS_15V8EventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

@.str = private unnamed_addr constant [12 x i8] c"handleEvent\00", align 1
@_ZTVN5blink15JSEventListenerE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::JSBasedEventListener"*)* @_ZN5blink20JSBasedEventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::JSEventListener"*)* @_ZN5blink15JSEventListenerD0Ev to i8*), i8* bitcast (void (%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink20JSBasedEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink20JSBasedEventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::JSEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink15JSEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::JSEventListener"*, %"class.blink::Visitor"*)* @_ZNK5blink15JSEventListener5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::JSBasedEventListener"*)* @_ZNK5blink20JSBasedEventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener21IsNativeEventListenerEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::JSEventListener"*, %"class.blink::EventTarget"*)* @_ZN5blink15JSEventListener17GetListenerObjectERNS_11EventTargetE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::JSEventListener"*, %"class.blink::EventTarget"*)* @_ZN5blink15JSEventListener20GetEffectiveFunctionERNS_11EventTargetE to i8*), i8* bitcast (void ()* @_ZN5blink20JSBasedEventListener17GetSourceLocationERNS_11EventTargetE to i8*), i8* bitcast (i1 (%"class.blink::JSEventListener"*)* @_ZNK5blink15JSEventListener17IsJSEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::JSBasedEventListener"*)* @_ZNK5blink20JSBasedEventListener16IsJSEventHandlerEv to i8*), i8* bitcast (%"class.v8::Isolate"* (%"class.blink::JSEventListener"*)* @_ZNK5blink15JSEventListener10GetIsolateEv to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::JSEventListener"*)* @_ZNK5blink15JSEventListener14GetScriptStateEv to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::JSEventListener"*, i8*)* @_ZNK5blink15JSEventListener27GetScriptStateOrReportErrorEPKc to i8*), i8* bitcast (%"class.blink::DOMWrapperWorld"* (%"class.blink::JSEventListener"*)* @_ZNK5blink15JSEventListener8GetWorldEv to i8*), i8* bitcast (void (%"class.blink::JSEventListener"*, %"class.blink::EventTarget"*, %"class.blink::Event"*, %"class.v8::Value"*)* @_ZN5blink15JSEventListener14InvokeInternalERNS_11EventTargetERNS_5EventEN2v85LocalINS5_5ValueEEE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN5blink15JSEventListener20GetEffectiveFunctionERNS_11EventTargetE(%"class.blink::JSEventListener"* nocapture readonly, %"class.blink::EventTarget"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %5, i64 0, i32 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %7, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %5, i64 0, i32 0, i32 1
  %11 = bitcast %"class.blink::TraceWrapperV8Reference"* %10 to %"class.v8::Object"**
  %12 = load %"class.v8::Object"*, %"class.v8::Object"** %11, align 8
  %13 = icmp eq %"class.v8::Object"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.v8::Isolate"* %9 to %"class.v8::internal::Isolate"*
  %16 = bitcast %"class.v8::Object"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %17) #5
  %19 = bitcast i64* %18 to %"class.v8::Value"*
  %20 = icmp eq i64* %18, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %2, %14
  %22 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %23 = add i64 %22, 160
  %24 = inttoptr i64 %23 to %"class.v8::Value"*
  br label %55

25:                                               ; preds = %14
  %26 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %19) #5
  br i1 %26, label %27, label %31

27:                                               ; preds = %25
  %28 = bitcast i64* %18 to %"class.v8::Function"*
  %29 = tail call %"class.v8::Function"* @_ZN5blink16GetBoundFunctionEN2v85LocalINS0_8FunctionEEE(%"class.v8::Function"* nonnull %28) #5
  %30 = bitcast %"class.v8::Function"* %29 to %"class.v8::Value"*
  br label %55

31:                                               ; preds = %25
  %32 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %19) #5
  br i1 %32, label %33, label %51

33:                                               ; preds = %31
  %34 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %9) #5
  %35 = bitcast i64* %18 to %"class.v8::Object"*
  %36 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #5
  %37 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %9, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 1, i32 11) #5
  %38 = icmp eq %"class.v8::String"* %37, null
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %33
  call void @_ZN2v82V812ToLocalEmptyEv() #5
  br label %40

40:                                               ; preds = %33, %39
  %41 = bitcast %"class.v8::String"* %37 to %"class.v8::Value"*
  %42 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %35, %"class.v8::Context"* %36, %"class.v8::Value"* %41) #5
  %43 = icmp eq %"class.v8::Value"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %42) #5
  br i1 %45, label %46, label %50

46:                                               ; preds = %44
  %47 = bitcast %"class.v8::Value"* %42 to %"class.v8::Function"*
  %48 = call %"class.v8::Function"* @_ZN5blink16GetBoundFunctionEN2v85LocalINS0_8FunctionEEE(%"class.v8::Function"* nonnull %47) #5
  %49 = bitcast %"class.v8::Function"* %48 to %"class.v8::Value"*
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #5
  br label %55

50:                                               ; preds = %40, %44
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #5
  br label %51

51:                                               ; preds = %50, %31
  %52 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %53 = add i64 %52, 160
  %54 = inttoptr i64 %53 to %"class.v8::Value"*
  br label %55

55:                                               ; preds = %46, %51, %27, %21
  %56 = phi %"class.v8::Value"* [ %24, %21 ], [ %30, %27 ], [ %49, %46 ], [ %54, %51 ]
  ret %"class.v8::Value"* %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Isolate"* @_ZNK5blink15JSEventListener10GetIsolateEv(%"class.blink::JSEventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %3, i64 0, i32 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  ret %"class.v8::Isolate"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink15JSEventListener17GetListenerObjectERNS_11EventTargetE(%"class.blink::JSEventListener"*, %"class.blink::EventTarget"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %4, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::TraceWrapperV8Reference"* %5 to %"class.v8::Object"**
  %7 = load %"class.v8::Object"*, %"class.v8::Object"** %6, align 8
  %8 = icmp eq %"class.v8::Object"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %4, i64 0, i32 0, i32 4, i32 0, i32 0
  %11 = bitcast %"class.blink::ScriptState"** %10 to %"class.v8::internal::Isolate"***
  %12 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %11, align 8
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Object"* %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #5
  %17 = bitcast i64* %16 to %"class.v8::Value"*
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi %"class.v8::Value"* [ %17, %9 ], [ null, %2 ]
  ret %"class.v8::Value"* %19
}

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Function"* @_ZN5blink16GetBoundFunctionEN2v85LocalINS0_8FunctionEEE(%"class.v8::Function"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15JSEventListener14InvokeInternalERNS_11EventTargetERNS_5EventEN2v85LocalINS5_5ValueEEE(%"class.blink::JSEventListener"* nocapture readonly, %"class.blink::EventTarget"* nocapture readnone dereferenceable(16), %"class.blink::Event"* dereferenceable(104), %"class.v8::Value"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %5, align 8
  %7 = bitcast %"class.blink::Event"* %2 to i1 (%"class.blink::Event"*)***
  %8 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %8, i64 29
  %10 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Event"* %2) #5
  %12 = zext i1 %11 to i32
  %13 = tail call zeroext i1 @_ZN5blink15V8EventListener26IsRunnableOrThrowExceptionENS0_11IgnorePauseE(%"class.blink::V8EventListener"* %6, i32 %12) #5
  br i1 %13, label %14, label %19

14:                                               ; preds = %4
  %15 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %5, align 8
  %16 = tail call %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"* %2) #5
  %17 = getelementptr inbounds %"class.blink::EventTarget", %"class.blink::EventTarget"* %16, i64 0, i32 0
  %18 = tail call i8 @_ZN5blink15V8EventListener29InvokeWithoutRunnabilityCheckENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_5EventE(%"class.blink::V8EventListener"* %15, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* %17, %"class.blink::Event"* %2) #5
  br label %19

19:                                               ; preds = %4, %14
  ret void
}

declare zeroext i1 @_ZN5blink15V8EventListener26IsRunnableOrThrowExceptionENS0_11IgnorePauseE(%"class.blink::V8EventListener"*, i32) local_unnamed_addr #2

declare i8 @_ZN5blink15V8EventListener29InvokeWithoutRunnabilityCheckENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_5EventE(%"class.blink::V8EventListener"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::Event"*) local_unnamed_addr #2

declare %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15JSEventListener5TraceEPNS_7VisitorE(%"class.blink::JSEventListener"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15V8EventListenerEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind
declare void @_ZN5blink20JSBasedEventListenerD2Ev(%"class.blink::JSBasedEventListener"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15JSEventListenerD0Ev(%"class.blink::JSEventListener"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 0
  tail call void @_ZN5blink20JSBasedEventListenerD2Ev(%"class.blink::JSBasedEventListener"* %2) #5
  ret void
}

declare void @_ZN5blink20JSBasedEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener14IsEventHandlerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

declare zeroext i1 @_ZNK5blink20JSBasedEventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::JSBasedEventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15JSEventListener7MatchesERKNS_13EventListenerE(%"class.blink::JSEventListener"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::EventListener"* %1 to i1 (%"class.blink::EventListener"*)***
  %4 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %4, i64 10
  %6 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::EventListener"* %1) #5
  %8 = icmp eq %"class.blink::EventListener"* %1, null
  %9 = xor i1 %7, true
  %10 = or i1 %8, %9
  br i1 %10, label %36, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::EventListener"* %1 to %"class.blink::JSBasedEventListener"*
  %13 = bitcast %"class.blink::EventListener"* %1 to i1 (%"class.blink::JSBasedEventListener"*)***
  %14 = load i1 (%"class.blink::JSBasedEventListener"*)**, i1 (%"class.blink::JSBasedEventListener"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %14, i64 15
  %16 = load i1 (%"class.blink::JSBasedEventListener"*)*, i1 (%"class.blink::JSBasedEventListener"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::JSBasedEventListener"* nonnull %12) #5
  br i1 %17, label %18, label %36

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::EventListener", %"class.blink::EventListener"* %1, i64 1
  %22 = bitcast %"class.blink::EventListener"* %21 to %"class.blink::V8EventListener"**
  %23 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, null
  %29 = icmp eq i64* %27, null
  %30 = or i1 %28, %29
  %31 = and i1 %28, %29
  br i1 %30, label %36, label %32

32:                                               ; preds = %18
  %33 = load i64, i64* %25, align 8
  %34 = load i64, i64* %27, align 8
  %35 = icmp eq i64 %33, %34
  br label %36

36:                                               ; preds = %11, %2, %32, %18
  %37 = phi i1 [ %35, %32 ], [ %31, %18 ], [ false, %11 ], [ false, %2 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20JSBasedEventListener22IsJSBasedEventListenerEv(%"class.blink::JSBasedEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener21IsNativeEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink20JSBasedEventListener17GetSourceLocationERNS_11EventTargetE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15JSEventListener17IsJSEventListenerEv(%"class.blink::JSEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20JSBasedEventListener16IsJSEventHandlerEv(%"class.blink::JSBasedEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZNK5blink15JSEventListener14GetScriptStateEv(%"class.blink::JSEventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  ret %"class.blink::ScriptState"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZNK5blink15JSEventListener27GetScriptStateOrReportErrorEPKc(%"class.blink::JSEventListener"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %4, i64 0, i32 0
  %6 = tail call %"class.blink::ScriptState"* @_ZN5blink21CallbackInterfaceBase40CallbackRelevantScriptStateOrReportErrorEPKcS2_(%"class.blink::CallbackInterfaceBase"* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* %1) #5
  ret %"class.blink::ScriptState"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::DOMWrapperWorld"* @_ZNK5blink15JSEventListener8GetWorldEv(%"class.blink::JSEventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::JSEventListener", %"class.blink::JSEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8EventListener"*, %"class.blink::V8EventListener"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8EventListener", %"class.blink::V8EventListener"* %3, i64 0, i32 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 2, i32 0
  %7 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %6, align 8
  ret %"class.blink::DOMWrapperWorld"* %7
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare %"class.blink::ScriptState"* @_ZN5blink21CallbackInterfaceBase40CallbackRelevantScriptStateOrReportErrorEPKcS2_(%"class.blink::CallbackInterfaceBase"*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15V8EventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZNK5blink21CallbackInterfaceBase5TraceEPNS_7VisitorE(%"class.blink::CallbackInterfaceBase"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZNK5blink21CallbackInterfaceBase5TraceEPNS_7VisitorE(%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
