; ModuleID = '../../ui/gfx/transform_operation.cc'
source_filename = "../../ui/gfx/transform_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::TransformOperation" = type { i32, %"class.gfx::Transform", %union.anon }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%union.anon = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.anon.3, float }
%struct.anon.3 = type { float, float, float }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.gfx::BoxF" = type { %"class.gfx::Point3F", float, float, float }
%"class.gfx::Point3F" = type { float, float, float }

@__const._ZN3gfx18TransformOperation19BlendedBoundsForBoxERKNS_4BoxFEPKS0_S5_ffPS1_.to_operation = private unnamed_addr constant %"struct.gfx::TransformOperation" { i32 -1431655766, %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, %union.anon { %struct.anon.2 { %struct.anon.3 { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000 } } }, align 4
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@__const._ZN3gfxL17BoundingBoxForArcERKNS_7Point3FEPKNS_18TransformOperationES5_ffPNS_4BoxFE.rotation = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.gfx::Vector3dF", align 4
  %3 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %4) #7
  %5 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %50 [
    i32 0, label %7
    i32 1, label %14
    i32 2, label %33
    i32 3, label %40
    i32 4, label %40
    i32 5, label %40
    i32 6, label %47
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = load float, float* %12, align 4
  tail call void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"* %3, float %9, float %11, float %13) #7
  br label %50

14:                                               ; preds = %1
  %15 = bitcast %"class.gfx::Vector3dF"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %"class.gfx::Vector3dF"* %2 to i32*
  store i32 %18, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  store i32 %21, i32* %27, align 4
  %28 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 2
  %29 = bitcast float* %28 to i32*
  store i32 %24, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fpext float %31 to double
  call void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"* %3, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %2, double %32) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #7
  br label %50

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load float, float* %38, align 4
  tail call void @_ZN3gfx9Transform7Scale3dEfff(%"class.gfx::Transform"* %3, float %35, float %37, float %39) #7
  br label %50

40:                                               ; preds = %1, %1, %1
  %41 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load float, float* %41, align 4
  %43 = fpext float %42 to double
  %44 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = fpext float %45 to double
  tail call void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"* %3, double %43, double %46) #7
  br label %50

47:                                               ; preds = %1
  %48 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load float, float* %48, align 4
  tail call void @_ZN3gfx9Transform21ApplyPerspectiveDepthEf(%"class.gfx::Transform"* %3, float %49) #7
  br label %50

50:                                               ; preds = %1, %47, %40, %33, %14, %7
  ret void
}

declare void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #2

declare void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* dereferenceable(12), double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN3gfx9Transform7Scale3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #2

declare void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"*, double, double) local_unnamed_addr #2

declare void @_ZN3gfx9Transform21ApplyPerspectiveDepthEf(%"class.gfx::Transform"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx18TransformOperation18ApproximatelyEqualERKS0_f(%"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"* dereferenceable(88), float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %128

9:                                                ; preds = %3
  switch i32 %5, label %128 [
    i32 0, label %10
    i32 1, label %34
    i32 2, label %66
    i32 3, label %90
    i32 4, label %90
    i32 5, label %90
    i32 6, label %106
    i32 7, label %114
    i32 8, label %124
  ]

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = fsub float %14, %12
  %16 = tail call float @llvm.fabs.f32(float %15) #7
  %17 = fcmp ugt float %16, %2
  br i1 %17, label %128, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fsub float %22, %20
  %24 = tail call float @llvm.fabs.f32(float %23) #7
  %25 = fcmp ugt float %24, %2
  br i1 %25, label %128, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = fsub float %30, %28
  %32 = tail call float @llvm.fabs.f32(float %31) #7
  %33 = fcmp ole float %32, %2
  br label %128

34:                                               ; preds = %9
  %35 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load float, float* %37, align 4
  %39 = fsub float %38, %36
  %40 = tail call float @llvm.fabs.f32(float %39) #7
  %41 = fcmp ugt float %40, %2
  br i1 %41, label %128, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %46 = load float, float* %45, align 4
  %47 = fsub float %46, %44
  %48 = tail call float @llvm.fabs.f32(float %47) #7
  %49 = fcmp ugt float %48, %2
  br i1 %49, label %128, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %54 = load float, float* %53, align 4
  %55 = fsub float %54, %52
  %56 = tail call float @llvm.fabs.f32(float %55) #7
  %57 = fcmp ugt float %56, %2
  br i1 %57, label %128, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 1
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = fsub float %62, %60
  %64 = tail call float @llvm.fabs.f32(float %63) #7
  %65 = fcmp ole float %64, %2
  br label %128

66:                                               ; preds = %9
  %67 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load float, float* %69, align 4
  %71 = fsub float %70, %68
  %72 = tail call float @llvm.fabs.f32(float %71) #7
  %73 = fcmp ugt float %72, %2
  br i1 %73, label %128, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %78 = load float, float* %77, align 4
  %79 = fsub float %78, %76
  %80 = tail call float @llvm.fabs.f32(float %79) #7
  %81 = fcmp ugt float %80, %2
  br i1 %81, label %128, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %86 = load float, float* %85, align 4
  %87 = fsub float %86, %84
  %88 = tail call float @llvm.fabs.f32(float %87) #7
  %89 = fcmp ole float %88, %2
  br label %128

90:                                               ; preds = %9, %9, %9
  %91 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %94 = load float, float* %93, align 4
  %95 = fsub float %94, %92
  %96 = tail call float @llvm.fabs.f32(float %95) #7
  %97 = fcmp ugt float %96, %2
  br i1 %97, label %128, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %102 = load float, float* %101, align 4
  %103 = fsub float %102, %100
  %104 = tail call float @llvm.fabs.f32(float %103) #7
  %105 = fcmp ole float %104, %2
  br label %128

106:                                              ; preds = %9
  %107 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %110 = load float, float* %109, align 4
  %111 = fsub float %110, %108
  %112 = tail call float @llvm.fabs.f32(float %111) #7
  %113 = fcmp ole float %112, %2
  br label %128

114:                                              ; preds = %9
  %115 = fcmp oeq float %2, 0.000000e+00
  %116 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1
  %117 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1
  br i1 %115, label %118, label %122

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %116, i64 0, i32 0
  %120 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %117, i64 0, i32 0
  %121 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %119, %class.SkMatrix44* dereferenceable(68) %120) #7
  br label %128

122:                                              ; preds = %114
  %123 = tail call zeroext i1 @_ZNK3gfx9Transform18ApproximatelyEqualERKS0_(%"class.gfx::Transform"* %116, %"class.gfx::Transform"* dereferenceable(68) %117) #7
  br label %128

124:                                              ; preds = %9
  %125 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %126 = load i8, i8* %125, align 4
  %127 = icmp eq i8 %126, 0
  br label %128

128:                                              ; preds = %18, %10, %50, %42, %34, %74, %66, %90, %9, %98, %82, %58, %26, %3, %124, %122, %118, %106
  %129 = phi i1 [ %127, %124 ], [ %121, %118 ], [ %123, %122 ], [ %113, %106 ], [ false, %3 ], [ false, %18 ], [ false, %10 ], [ %33, %26 ], [ false, %50 ], [ false, %42 ], [ false, %34 ], [ %65, %58 ], [ false, %74 ], [ false, %66 ], [ %89, %82 ], [ false, %90 ], [ %105, %98 ], [ false, %9 ]
  ret i1 %129
}

declare zeroext i1 @_ZNK3gfx9Transform18ApproximatelyEqualERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx18TransformOperation24BlendTransformOperationsEPKS0_S2_fPS0_(%"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, float, %"struct.gfx::TransformOperation"*) local_unnamed_addr #1 align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::Transform", align 4
  %11 = icmp eq %"struct.gfx::TransformOperation"* %0, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %4, %12
  %17 = icmp eq %"struct.gfx::TransformOperation"* %1, null
  br i1 %17, label %280, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %20 = load i8, i8* %19, align 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %280, label %30

22:                                               ; preds = %12
  %23 = icmp eq %"struct.gfx::TransformOperation"* %1, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i8, i8* %25, align 4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22, %24
  %29 = phi i1 [ false, %24 ], [ true, %22 ]
  br label %30

30:                                               ; preds = %18, %24, %28
  %31 = phi i1 [ %29, %28 ], [ false, %24 ], [ false, %18 ]
  %32 = phi %"struct.gfx::TransformOperation"* [ %0, %28 ], [ %1, %24 ], [ %1, %18 ]
  %33 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 0
  store i32 %34, i32* %35, align 4
  switch i32 %34, label %279 [
    i32 0, label %36
    i32 1, label %80
    i32 2, label %140
    i32 3, label %184
    i32 4, label %184
    i32 5, label %184
    i32 6, label %218
    i32 7, label %255
  ]

36:                                               ; preds = %30
  br i1 %11, label %48, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %39 = load i8, i8* %38, align 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load float, float* %46, align 4
  br label %48

48:                                               ; preds = %37, %36, %41
  %49 = phi float [ %43, %41 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %37 ]
  %50 = phi float [ %45, %41 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %37 ]
  %51 = phi float [ %47, %41 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %37 ]
  br i1 %31, label %63, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %54 = load i8, i8* %53, align 4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %62 = load float, float* %61, align 4
  br label %63

63:                                               ; preds = %52, %48, %56
  %64 = phi float [ %58, %56 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %52 ]
  %65 = phi float [ %60, %56 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %52 ]
  %66 = phi float [ %62, %56 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %52 ]
  %67 = fsub float 1.000000e+00, %2
  %68 = fmul float %67, %49
  %69 = fmul float %64, %2
  %70 = fadd float %68, %69
  %71 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %70, float* %71, align 4
  %72 = fmul float %67, %50
  %73 = fmul float %65, %2
  %74 = fadd float %72, %73
  %75 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %74, float* %75, align 4
  %76 = fmul float %67, %51
  %77 = fmul float %66, %2
  %78 = fadd float %76, %77
  %79 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  store float %78, float* %79, align 4
  tail call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* %3)
  br label %279

80:                                               ; preds = %30
  %81 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #7
  store float 0.000000e+00, float* %5, align 4
  %82 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #7
  store float 0.000000e+00, float* %6, align 4
  %83 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #7
  store float 1.000000e+00, float* %7, align 4
  %84 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #7
  store float 0.000000e+00, float* %8, align 4
  br i1 %31, label %92, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %87 = load i8, i8* %86, align 4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 1
  %91 = load float, float* %90, align 4
  br label %92

92:                                               ; preds = %80, %85, %89
  %93 = phi float [ %91, %89 ], [ 0.000000e+00, %85 ], [ 0.000000e+00, %80 ]
  %94 = call fastcc zeroext i1 @_ZN3gfxL13ShareSameAxisEPKNS_18TransformOperationES2_PfS3_S3_S3_(%"struct.gfx::TransformOperation"* %0, %"struct.gfx::TransformOperation"* %1, float* nonnull %5, float* nonnull %6, float* nonnull %7, float* nonnull %8)
  br i1 %94, label %95, label %114

95:                                               ; preds = %92
  %96 = bitcast float* %5 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %99 = bitcast %union.anon* %98 to i32*
  store i32 %97, i32* %99, align 4
  %100 = bitcast float* %6 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %103 = bitcast float* %102 to i32*
  store i32 %101, i32* %103, align 4
  %104 = bitcast float* %7 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %107 = bitcast float* %106 to i32*
  store i32 %105, i32* %107, align 4
  %108 = load float, float* %8, align 4
  %109 = fsub float 1.000000e+00, %2
  %110 = fmul float %109, %108
  %111 = fmul float %93, %2
  %112 = fadd float %111, %110
  %113 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 1
  store float %112, float* %113, align 4
  tail call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* %3)
  br label %138

114:                                              ; preds = %92
  br i1 %31, label %124, label %115

115:                                              ; preds = %114
  %116 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %117 = load i8, i8* %116, align 4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %122 = bitcast %"class.gfx::Transform"* %121 to i8*
  %123 = bitcast %"class.gfx::Transform"* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 68, i1 false)
  br label %124

124:                                              ; preds = %114, %119, %115
  %125 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %125) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3gfxL17BoundingBoxForArcERKNS_7Point3FEPKNS_18TransformOperationES5_ffPNS_4BoxFE.rotation to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %126 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0, i32 1
  store i8 0, i8* %126, align 4
  br i1 %11, label %134, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %129 = load i8, i8* %128, align 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1
  %133 = bitcast %"class.gfx::Transform"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 %133, i64 68, i1 false)
  br label %134

134:                                              ; preds = %124, %131, %127
  %135 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %136 = fpext float %2 to double
  %137 = call zeroext i1 @_ZN3gfx9Transform5BlendERKS0_d(%"class.gfx::Transform"* %135, %"class.gfx::Transform"* nonnull dereferenceable(68) %9, double %136) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %125) #7
  br i1 %137, label %138, label %139

138:                                              ; preds = %134, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #7
  br label %279

139:                                              ; preds = %134
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #7
  br label %280

140:                                              ; preds = %30
  br i1 %11, label %152, label %141

141:                                              ; preds = %140
  %142 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %143 = load i8, i8* %142, align 4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %152, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %147 = load float, float* %146, align 4
  %148 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %149 = load float, float* %148, align 4
  %150 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %151 = load float, float* %150, align 4
  br label %152

152:                                              ; preds = %141, %140, %145
  %153 = phi float [ %147, %145 ], [ 1.000000e+00, %140 ], [ 1.000000e+00, %141 ]
  %154 = phi float [ %149, %145 ], [ 1.000000e+00, %140 ], [ 1.000000e+00, %141 ]
  %155 = phi float [ %151, %145 ], [ 1.000000e+00, %140 ], [ 1.000000e+00, %141 ]
  br i1 %31, label %167, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %158 = load i8, i8* %157, align 4
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %167, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %162 = load float, float* %161, align 4
  %163 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %166 = load float, float* %165, align 4
  br label %167

167:                                              ; preds = %156, %152, %160
  %168 = phi float [ %162, %160 ], [ 1.000000e+00, %152 ], [ 1.000000e+00, %156 ]
  %169 = phi float [ %164, %160 ], [ 1.000000e+00, %152 ], [ 1.000000e+00, %156 ]
  %170 = phi float [ %166, %160 ], [ 1.000000e+00, %152 ], [ 1.000000e+00, %156 ]
  %171 = fsub float 1.000000e+00, %2
  %172 = fmul float %171, %153
  %173 = fmul float %168, %2
  %174 = fadd float %172, %173
  %175 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %174, float* %175, align 4
  %176 = fmul float %171, %154
  %177 = fmul float %169, %2
  %178 = fadd float %176, %177
  %179 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %178, float* %179, align 4
  %180 = fmul float %171, %155
  %181 = fmul float %170, %2
  %182 = fadd float %180, %181
  %183 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  store float %182, float* %183, align 4
  tail call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* %3)
  br label %279

184:                                              ; preds = %30, %30, %30
  br i1 %11, label %194, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %187 = load i8, i8* %186, align 4
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %191 = load float, float* %190, align 4
  %192 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %193 = load float, float* %192, align 4
  br label %194

194:                                              ; preds = %185, %184, %189
  %195 = phi float [ %191, %189 ], [ 0.000000e+00, %184 ], [ 0.000000e+00, %185 ]
  %196 = phi float [ %193, %189 ], [ 0.000000e+00, %184 ], [ 0.000000e+00, %185 ]
  br i1 %31, label %206, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %199 = load i8, i8* %198, align 4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %203 = load float, float* %202, align 4
  %204 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %205 = load float, float* %204, align 4
  br label %206

206:                                              ; preds = %197, %194, %201
  %207 = phi float [ %203, %201 ], [ 0.000000e+00, %194 ], [ 0.000000e+00, %197 ]
  %208 = phi float [ %205, %201 ], [ 0.000000e+00, %194 ], [ 0.000000e+00, %197 ]
  %209 = fsub float 1.000000e+00, %2
  %210 = fmul float %209, %195
  %211 = fmul float %207, %2
  %212 = fadd float %210, %211
  %213 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %212, float* %213, align 4
  %214 = fmul float %209, %196
  %215 = fmul float %208, %2
  %216 = fadd float %214, %215
  %217 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %216, float* %217, align 4
  tail call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* %3)
  br label %279

218:                                              ; preds = %30
  br i1 %11, label %226, label %219

219:                                              ; preds = %218
  %220 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %221 = load i8, i8* %220, align 4
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %225 = load float, float* %224, align 4
  br label %226

226:                                              ; preds = %218, %219, %223
  %227 = phi float [ %225, %223 ], [ 0x47EFFFFFE0000000, %219 ], [ 0x47EFFFFFE0000000, %218 ]
  br i1 %31, label %235, label %228

228:                                              ; preds = %226
  %229 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %230 = load i8, i8* %229, align 4
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %235, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %234 = load float, float* %233, align 4
  br label %235

235:                                              ; preds = %226, %228, %232
  %236 = phi float [ %234, %232 ], [ 0x47EFFFFFE0000000, %228 ], [ 0x47EFFFFFE0000000, %226 ]
  %237 = fcmp oeq float %227, 0.000000e+00
  %238 = fcmp oeq float %236, 0.000000e+00
  %239 = or i1 %237, %238
  br i1 %239, label %280, label %240

240:                                              ; preds = %235
  %241 = insertelement <2 x float> undef, float %227, i32 0
  %242 = insertelement <2 x float> %241, float %236, i32 1
  %243 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %242
  %244 = fsub float 1.000000e+00, %2
  %245 = insertelement <2 x float> undef, float %244, i32 0
  %246 = insertelement <2 x float> %245, float %2, i32 1
  %247 = fmul <2 x float> %246, %243
  %248 = extractelement <2 x float> %247, i32 0
  %249 = extractelement <2 x float> %247, i32 1
  %250 = fadd float %248, %249
  %251 = fcmp oeq float %250, 0.000000e+00
  br i1 %251, label %280, label %252

252:                                              ; preds = %240
  %253 = fdiv float 1.000000e+00, %250
  %254 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %253, float* %254, align 4
  tail call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* %3)
  br label %279

255:                                              ; preds = %30
  br i1 %31, label %265, label %256

256:                                              ; preds = %255
  %257 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %258 = load i8, i8* %257, align 4
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %265, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1
  %262 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %263 = bitcast %"class.gfx::Transform"* %262 to i8*
  %264 = bitcast %"class.gfx::Transform"* %261 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 68, i1 false)
  br label %265

265:                                              ; preds = %255, %260, %256
  %266 = bitcast %"class.gfx::Transform"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %266) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %266, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3gfxL17BoundingBoxForArcERKNS_7Point3FEPKNS_18TransformOperationES5_ffPNS_4BoxFE.rotation to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %266, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %267 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %10, i64 0, i32 0, i32 1
  store i8 0, i8* %267, align 4
  br i1 %11, label %275, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %270 = load i8, i8* %269, align 4
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %275, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1
  %274 = bitcast %"class.gfx::Transform"* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %266, i8* align 4 %274, i64 68, i1 false)
  br label %275

275:                                              ; preds = %265, %272, %268
  %276 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %277 = fpext float %2 to double
  %278 = call zeroext i1 @_ZN3gfx9Transform5BlendERKS0_d(%"class.gfx::Transform"* %276, %"class.gfx::Transform"* nonnull dereferenceable(68) %10, double %277) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %266) #7
  br i1 %278, label %279, label %280

279:                                              ; preds = %138, %252, %275, %30, %206, %167, %63
  br label %280

280:                                              ; preds = %139, %240, %235, %16, %279, %275, %18
  %281 = phi i1 [ true, %18 ], [ true, %279 ], [ false, %275 ], [ false, %139 ], [ true, %16 ], [ false, %235 ], [ false, %240 ]
  ret i1 %281
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3gfxL13ShareSameAxisEPKNS_18TransformOperationES2_PfS3_S3_S3_(%"struct.gfx::TransformOperation"* readonly, %"struct.gfx::TransformOperation"* readonly, float* nocapture, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #4 {
  %7 = icmp eq %"struct.gfx::TransformOperation"* %0, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %46

12:                                               ; preds = %6, %8
  %13 = icmp eq %"struct.gfx::TransformOperation"* %1, null
  br i1 %13, label %121, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %121, label %18

18:                                               ; preds = %14
  br i1 %7, label %27, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %40, label %27

27:                                               ; preds = %18, %23
  %28 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0
  %29 = bitcast %struct.anon.3* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast float* %2 to i32*
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = bitcast float* %3 to i32*
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = bitcast float* %4 to i32*
  store i32 %38, i32* %39, align 4
  store float 0.000000e+00, float* %5, align 4
  br label %121

40:                                               ; preds = %23
  %41 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 1, i32 0, i32 1
  %42 = load i8, i8* %41, align 4
  br label %43

43:                                               ; preds = %19, %40
  %44 = phi i8 [ %42, %40 ], [ %21, %19 ]
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %69, label %48

46:                                               ; preds = %8
  %47 = icmp eq %"struct.gfx::TransformOperation"* %1, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %43, %46
  %49 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %50 = load i8, i8* %49, align 4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %69

52:                                               ; preds = %46, %48
  %53 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0
  %54 = bitcast %struct.anon.2* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = bitcast float* %2 to i32*
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = bitcast float* %3 to i32*
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = bitcast float* %4 to i32*
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 1
  %66 = bitcast float* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = bitcast float* %5 to i32*
  store i32 %67, i32* %68, align 4
  br label %121

69:                                               ; preds = %48, %43
  %70 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %73 = bitcast float* %72 to <2 x float>*
  %74 = load <2 x float>, <2 x float>* %73, align 4
  %75 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = insertelement <2 x float> undef, float %71, i32 0
  %78 = insertelement <2 x float> %77, float %76, i32 1
  %79 = fmul <2 x float> %78, %78
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %82 = bitcast float* %80 to <2 x float>*
  %83 = load <2 x float>, <2 x float>* %82, align 4
  %84 = shufflevector <2 x float> %74, <2 x float> %83, <2 x i32> <i32 0, i32 2>
  %85 = fmul <2 x float> %84, %84
  %86 = fadd <2 x float> %79, %85
  %87 = shufflevector <2 x float> %74, <2 x float> %83, <2 x i32> <i32 1, i32 3>
  %88 = fmul <2 x float> %87, %87
  %89 = fadd <2 x float> %86, %88
  %90 = fcmp ole <2 x float> %89, <float 0x3F1A36E2E0000000, float 0x3F1A36E2E0000000>
  %91 = extractelement <2 x i1> %90, i32 0
  %92 = extractelement <2 x i1> %90, i32 1
  %93 = or i1 %91, %92
  br i1 %93, label %121, label %94

94:                                               ; preds = %69
  %95 = fmul float %71, %76
  %96 = fmul <2 x float> %74, %83
  %97 = extractelement <2 x float> %96, i32 0
  %98 = fadd float %95, %97
  %99 = extractelement <2 x float> %96, i32 1
  %100 = fadd float %98, %99
  %101 = fmul float %100, %100
  %102 = extractelement <2 x float> %89, i32 0
  %103 = extractelement <2 x float> %89, i32 1
  %104 = fmul float %102, %103
  %105 = fdiv float %101, %104
  %106 = fsub float 1.000000e+00, %105
  %107 = tail call float @llvm.fabs.f32(float %106)
  %108 = fcmp olt float %107, 0x3F1A36E2E0000000
  br i1 %108, label %109, label %121

109:                                              ; preds = %94
  store float %76, float* %2, align 4
  %110 = bitcast float* %80 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = bitcast float* %3 to i32*
  store i32 %111, i32* %112, align 4
  %113 = bitcast float* %81 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = bitcast float* %4 to i32*
  store i32 %114, i32* %115, align 4
  %116 = fcmp ogt float %100, 0.000000e+00
  %117 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %0, i64 0, i32 2, i32 0, i32 1
  %118 = load float, float* %117, align 4
  %119 = fsub float -0.000000e+00, %118
  %120 = select i1 %116, float %118, float %119
  store float %120, float* %5, align 4
  br label %121

121:                                              ; preds = %12, %69, %109, %94, %14, %52, %27
  %122 = phi i1 [ true, %52 ], [ true, %27 ], [ false, %14 ], [ false, %69 ], [ true, %109 ], [ false, %94 ], [ false, %12 ]
  ret i1 %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN3gfx9Transform5BlendERKS0_d(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68), double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx18TransformOperation19BlendedBoundsForBoxERKNS_4BoxFEPKS0_S5_ffPS1_(%"class.gfx::BoxF"* nocapture readonly dereferenceable(24), %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, float, float, %"class.gfx::BoxF"*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.gfx::Vector3dF", align 8
  %8 = alloca %"class.gfx::Vector3dF", align 4
  %9 = alloca [6 x double], align 16
  %10 = alloca %"class.gfx::Vector3dF", align 4
  %11 = alloca %"class.gfx::Transform", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = alloca %"class.gfx::Point3F", align 4
  %14 = alloca %"class.gfx::Point3F", align 4
  %15 = alloca %"class.gfx::Vector3dF", align 4
  %16 = alloca %"class.gfx::Point3F", align 4
  %17 = alloca %"class.gfx::Vector3dF", align 8
  %18 = alloca %"class.gfx::Point3F", align 8
  %19 = alloca %"class.gfx::Vector3dF", align 8
  %20 = alloca %"class.gfx::Vector3dF", align 8
  %21 = alloca %"class.gfx::Transform", align 4
  %22 = alloca %"class.gfx::Point3F", align 4
  %23 = alloca %"struct.gfx::TransformOperation", align 4
  %24 = alloca %"struct.gfx::TransformOperation", align 4
  %25 = alloca %"class.gfx::BoxF", align 4
  %26 = alloca float, align 4
  %27 = alloca float, align 4
  %28 = alloca float, align 4
  %29 = alloca float, align 4
  %30 = alloca %"class.gfx::Point3F", align 4
  %31 = alloca %"class.gfx::BoxF", align 4
  %32 = icmp eq %"struct.gfx::TransformOperation"* %1, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1, i32 0, i32 1
  %35 = load i8, i8* %34, align 4
  %36 = icmp ne i8 %35, 0
  br label %37

37:                                               ; preds = %6, %33
  %38 = phi i1 [ false, %6 ], [ %36, %33 ]
  %39 = icmp eq %"struct.gfx::TransformOperation"* %2, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %2, i64 0, i32 1, i32 0, i32 1
  %42 = load i8, i8* %41, align 4
  %43 = icmp eq i8 %42, 0
  br label %44

44:                                               ; preds = %37, %40
  %45 = phi i1 [ true, %37 ], [ %43, %40 ]
  %46 = xor i1 %45, true
  %47 = or i1 %38, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.gfx::BoxF"* %5 to i8*
  %50 = bitcast %"class.gfx::BoxF"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 24, i1 false)
  br label %365

51:                                               ; preds = %44
  %52 = select i1 %45, %"struct.gfx::TransformOperation"* %1, %"struct.gfx::TransformOperation"* %2
  %53 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  switch i32 %54, label %365 [
    i32 8, label %55
    i32 0, label %58
    i32 3, label %58
    i32 4, label %58
    i32 5, label %58
    i32 6, label %58
    i32 2, label %58
    i32 1, label %78
  ]

55:                                               ; preds = %51
  %56 = bitcast %"class.gfx::BoxF"* %5 to i8*
  %57 = bitcast %"class.gfx::BoxF"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 24, i1 false)
  br label %365

58:                                               ; preds = %51, %51, %51, %51, %51, %51
  %59 = bitcast %"struct.gfx::TransformOperation"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %59) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZN3gfx18TransformOperation19BlendedBoundsForBoxERKNS_4BoxFEPKS0_S5_ffPS1_.to_operation to i8*), i64 88, i1 false)
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %23, i64 0, i32 0
  store i32 8, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %23, i64 0, i32 1
  %62 = bitcast %"class.gfx::Transform"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %63 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %23, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %63, align 4
  %64 = bitcast %"struct.gfx::TransformOperation"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %64) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZN3gfx18TransformOperation19BlendedBoundsForBoxERKNS_4BoxFEPKS0_S5_ffPS1_.to_operation to i8*), i64 88, i1 false)
  %65 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %24, i64 0, i32 0
  store i32 8, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %24, i64 0, i32 1
  %67 = bitcast %"class.gfx::Transform"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %68 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %24, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %68, align 4
  %69 = call zeroext i1 @_ZN3gfx18TransformOperation24BlendTransformOperationsEPKS0_S2_fPS0_(%"struct.gfx::TransformOperation"* %1, %"struct.gfx::TransformOperation"* %2, float %3, %"struct.gfx::TransformOperation"* nonnull %23)
  br i1 %69, label %70, label %76

70:                                               ; preds = %58
  %71 = call zeroext i1 @_ZN3gfx18TransformOperation24BlendTransformOperationsEPKS0_S2_fPS0_(%"struct.gfx::TransformOperation"* %1, %"struct.gfx::TransformOperation"* %2, float %4, %"struct.gfx::TransformOperation"* nonnull %24)
  br i1 %71, label %72, label %76

72:                                               ; preds = %70
  %73 = bitcast %"class.gfx::BoxF"* %5 to i8*
  %74 = bitcast %"class.gfx::BoxF"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 24, i1 false)
  call void @_ZNK3gfx9Transform12TransformBoxEPNS_4BoxFE(%"class.gfx::Transform"* %61, %"class.gfx::BoxF"* %5) #7
  %75 = bitcast %"class.gfx::BoxF"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* align 4 %74, i64 24, i1 false)
  call void @_ZNK3gfx9Transform12TransformBoxEPNS_4BoxFE(%"class.gfx::Transform"* %66, %"class.gfx::BoxF"* nonnull %25) #7
  call void @_ZN3gfx4BoxF8ExpandToERKS0_(%"class.gfx::BoxF"* %5, %"class.gfx::BoxF"* nonnull dereferenceable(24) %25) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #7
  br label %76

76:                                               ; preds = %58, %70, %72
  %77 = phi i1 [ true, %72 ], [ false, %70 ], [ false, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %64) #7
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %59) #7
  br label %365

78:                                               ; preds = %51
  %79 = bitcast float* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #7
  store float 0.000000e+00, float* %26, align 4
  %80 = bitcast float* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #7
  store float 0.000000e+00, float* %27, align 4
  %81 = bitcast float* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #7
  store float 1.000000e+00, float* %28, align 4
  %82 = bitcast float* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #7
  store float 0.000000e+00, float* %29, align 4
  %83 = call fastcc zeroext i1 @_ZN3gfxL13ShareSameAxisEPKNS_18TransformOperationES2_PfS3_S3_S3_(%"struct.gfx::TransformOperation"* %1, %"struct.gfx::TransformOperation"* %2, float* nonnull %26, float* nonnull %27, float* nonnull %28, float* nonnull %29)
  br i1 %83, label %84, label %363

84:                                               ; preds = %78
  %85 = bitcast %"class.gfx::Point3F"* %30 to i8*
  %86 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %30, i64 0, i32 0
  %87 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %30, i64 0, i32 1
  %88 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %30, i64 0, i32 2
  %89 = bitcast %"class.gfx::BoxF"* %0 to i8*
  %90 = getelementptr inbounds %"class.gfx::BoxF", %"class.gfx::BoxF"* %0, i64 0, i32 1
  %91 = getelementptr inbounds %"class.gfx::BoxF", %"class.gfx::BoxF"* %0, i64 0, i32 2
  %92 = getelementptr inbounds %"class.gfx::BoxF", %"class.gfx::BoxF"* %0, i64 0, i32 3
  %93 = bitcast %"class.gfx::BoxF"* %31 to i8*
  %94 = icmp ne %"struct.gfx::TransformOperation"* %1, null
  %95 = select i1 %94, %"struct.gfx::TransformOperation"* %1, %"struct.gfx::TransformOperation"* %2
  %96 = bitcast %"class.gfx::Vector3dF"* %8 to i8*
  %97 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %8, i64 0, i32 0
  %98 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %8, i64 0, i32 1
  %99 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %8, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 0, i32 2, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 0, i32 2, i32 0, i32 0, i32 2
  %103 = bitcast [6 x double]* %9 to i8*
  %104 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 0
  %105 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 1
  %106 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 2
  %107 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 3
  %108 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 4
  %109 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 5
  %110 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %2, i64 0, i32 2, i32 0, i32 1
  %112 = bitcast %"class.gfx::Vector3dF"* %10 to i8*
  %113 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %10, i64 0, i32 1
  %114 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %10, i64 0, i32 2
  %115 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %116 = bitcast float* %115 to i32*
  %117 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %118 = bitcast float* %117 to i32*
  %119 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %120 = bitcast float* %119 to i32*
  %121 = bitcast %"class.gfx::Vector3dF"* %10 to i32*
  %122 = bitcast float* %113 to i32*
  %123 = bitcast float* %114 to i32*
  %124 = fsub float 1.000000e+00, %3
  %125 = fsub float 1.000000e+00, %4
  %126 = bitcast %"class.gfx::Transform"* %11 to i8*
  %127 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %11, i64 0, i32 0, i32 1
  %128 = bitcast %"class.gfx::Transform"* %12 to i8*
  %129 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %12, i64 0, i32 0, i32 1
  %130 = bitcast %"class.gfx::Point3F"* %13 to i8*
  %131 = bitcast %"class.gfx::Point3F"* %14 to i8*
  %132 = bitcast %"class.gfx::Vector3dF"* %15 to i8*
  %133 = bitcast %"class.gfx::Point3F"* %16 to i8*
  %134 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %16, i64 0, i32 0
  %135 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %16, i64 0, i32 1
  %136 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %16, i64 0, i32 2
  %137 = bitcast %"class.gfx::Vector3dF"* %17 to i8*
  %138 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %17, i64 0, i32 2
  %139 = bitcast %"class.gfx::Vector3dF"* %17 to <2 x float>*
  %140 = bitcast %"class.gfx::Point3F"* %18 to i8*
  %141 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %18, i64 0, i32 2
  %142 = bitcast %"class.gfx::Vector3dF"* %19 to i8*
  %143 = bitcast %"class.gfx::Vector3dF"* %19 to <2 x float>*
  %144 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %19, i64 0, i32 2
  %145 = bitcast %"class.gfx::Point3F"* %18 to <2 x float>*
  %146 = bitcast %"class.gfx::Vector3dF"* %20 to i8*
  %147 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %20, i64 0, i32 2
  %148 = bitcast %"class.gfx::Vector3dF"* %20 to <2 x float>*
  %149 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %20, i64 0, i32 1
  %150 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %20, i64 0, i32 0
  %151 = bitcast %"class.gfx::Vector3dF"* %7 to i8*
  %152 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %7, i64 0, i32 2
  %153 = bitcast %"class.gfx::Vector3dF"* %7 to <2 x float>*
  %154 = bitcast %"class.gfx::Transform"* %21 to i8*
  %155 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %21, i64 0, i32 0, i32 1
  %156 = bitcast %"class.gfx::Point3F"* %22 to i8*
  %157 = bitcast %"class.gfx::BoxF"* %5 to i8*
  %158 = bitcast [6 x double]* %9 to <2 x double>*
  %159 = bitcast double* %106 to <2 x double>*
  %160 = bitcast [6 x double]* %9 to <2 x double>*
  %161 = bitcast double* %106 to <2 x double>*
  %162 = bitcast [6 x double]* %9 to <2 x double>*
  %163 = bitcast double* %106 to <2 x double>*
  br label %164

164:                                              ; preds = %360, %84
  %165 = phi i32 [ 0, %84 ], [ %361, %360 ]
  %166 = phi i1 [ true, %84 ], [ false, %360 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %85) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 %89, i64 12, i1 false)
  %167 = and i32 %165, 1
  %168 = icmp eq i32 %167, 0
  %169 = load float, float* %90, align 4
  %170 = select i1 %168, float 0.000000e+00, float %169
  %171 = and i32 %165, 2
  %172 = icmp eq i32 %171, 0
  %173 = load float, float* %91, align 4
  %174 = select i1 %172, float 0.000000e+00, float %173
  %175 = and i32 %165, 4
  %176 = icmp eq i32 %175, 0
  %177 = load float, float* %92, align 4
  %178 = select i1 %176, float 0.000000e+00, float %177
  %179 = load float, float* %86, align 4
  %180 = fadd float %170, %179
  store float %180, float* %86, align 4
  %181 = load float, float* %87, align 4
  %182 = fadd float %174, %181
  store float %182, float* %87, align 4
  %183 = load float, float* %88, align 4
  %184 = fadd float %178, %183
  store float %184, float* %88, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %93, i8 0, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %96) #7
  %185 = load float, float* %100, align 4
  %186 = load float, float* %101, align 4
  %187 = load float, float* %102, align 4
  store float %185, float* %97, align 4
  store float %186, float* %98, align 4
  store float %187, float* %99, align 4
  %188 = fcmp une float %185, 0.000000e+00
  %189 = fcmp une float %186, 0.000000e+00
  %190 = fcmp une float %187, 0.000000e+00
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %103) #7
  %191 = or i1 %188, %189
  %192 = or i1 %191, %190
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -1, i64 48, i1 false) #7
  br i1 %192, label %193, label %357

193:                                              ; preds = %164
  br i1 %94, label %194, label %196

194:                                              ; preds = %193
  %195 = load float, float* %110, align 4
  br label %196

196:                                              ; preds = %194, %193
  %197 = phi float [ %195, %194 ], [ 0.000000e+00, %193 ]
  br i1 %39, label %208, label %198

198:                                              ; preds = %196
  %199 = load float, float* %111, align 4
  br i1 %94, label %200, label %208

200:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %112) #7
  %201 = load i32, i32* %116, align 4
  %202 = load i32, i32* %118, align 4
  %203 = load i32, i32* %120, align 4
  store i32 %201, i32* %121, align 4
  store i32 %202, i32* %122, align 4
  store i32 %203, i32* %123, align 4
  %204 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %8, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %10) #7
  %205 = fcmp olt float %204, 0.000000e+00
  %206 = fsub float -0.000000e+00, %199
  %207 = select i1 %205, float %206, float %199
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %112) #7
  br label %208

208:                                              ; preds = %200, %198, %196
  %209 = phi float [ %207, %200 ], [ %199, %198 ], [ 0.000000e+00, %196 ]
  %210 = fmul float %124, %197
  %211 = fmul float %209, %3
  %212 = fadd float %210, %211
  %213 = bitcast float %212 to i32
  %214 = fmul float %125, %197
  %215 = fmul float %209, %4
  %216 = fadd float %214, %215
  %217 = bitcast float %216 to i32
  %218 = fcmp olt float %216, %212
  %219 = select i1 %218, i32 %217, i32 %213
  %220 = select i1 %218, i32 %213, i32 %217
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %126) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3gfxL17BoundingBoxForArcERKNS_7Point3FEPKNS_18TransformOperationES5_ffPNS_4BoxFE.rotation to i8*), i64 68, i1 false) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  store i8 0, i8* %127, align 4
  %221 = bitcast i32 %219 to float
  %222 = fpext float %221 to double
  call void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"* nonnull %11, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %8, double %222) #7
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %128) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %128, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3gfxL17BoundingBoxForArcERKNS_7Point3FEPKNS_18TransformOperationES5_ffPNS_4BoxFE.rotation to i8*), i64 68, i1 false) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %128, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  store i8 0, i8* %129, align 4
  %223 = bitcast i32 %220 to float
  %224 = fpext float %223 to double
  call void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"* nonnull %12, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %8, double %224) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %93, i8 0, i64 24, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %130) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* nonnull align 4 %85, i64 12, i1 false) #7
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %11, %"class.gfx::Point3F"* nonnull %13) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %131) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %131, i8* nonnull align 4 %85, i64 12, i1 false) #7
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %12, %"class.gfx::Point3F"* nonnull %14) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* nonnull align 4 %130, i64 12, i1 false) #7
  call void @_ZN3gfx4BoxF8ExpandToERKNS_7Point3FE(%"class.gfx::BoxF"* nonnull %31, %"class.gfx::Point3F"* nonnull dereferenceable(12) %14) #7
  br i1 %191, label %243, label %225

225:                                              ; preds = %208
  %226 = load float, float* %86, align 4
  %227 = load float, float* %87, align 4
  %228 = load float, float* %99, align 4
  %229 = call float @atan2f(float %226, float %227) #7
  %230 = fpext float %229 to double
  store double %230, double* %104, align 16
  %231 = fadd double %230, 0x3FF921FB54442D18
  store double %231, double* %105, align 8
  %232 = fadd double %231, 0x3FF921FB54442D18
  store double %232, double* %106, align 16
  %233 = fadd double %232, 0x3FF921FB54442D18
  store double %233, double* %107, align 8
  %234 = fcmp olt float %228, 0.000000e+00
  br i1 %234, label %235, label %320

235:                                              ; preds = %225
  %236 = insertelement <2 x double> undef, double %230, i32 0
  %237 = insertelement <2 x double> %236, double %231, i32 1
  %238 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %237
  store <2 x double> %238, <2 x double>* %158, align 16
  %239 = insertelement <2 x double> undef, double %232, i32 0
  %240 = insertelement <2 x double> %239, double %233, i32 1
  %241 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %240
  store <2 x double> %241, <2 x double>* %159, align 16
  %242 = extractelement <2 x double> %238, i32 0
  br label %320

243:                                              ; preds = %208
  %244 = or i1 %188, %190
  br i1 %244, label %263, label %245

245:                                              ; preds = %243
  %246 = load float, float* %88, align 4
  %247 = load float, float* %86, align 4
  %248 = load float, float* %98, align 4
  %249 = call float @atan2f(float %246, float %247) #7
  %250 = fpext float %249 to double
  store double %250, double* %104, align 16
  %251 = fadd double %250, 0x3FF921FB54442D18
  store double %251, double* %105, align 8
  %252 = fadd double %251, 0x3FF921FB54442D18
  store double %252, double* %106, align 16
  %253 = fadd double %252, 0x3FF921FB54442D18
  store double %253, double* %107, align 8
  %254 = fcmp olt float %248, 0.000000e+00
  br i1 %254, label %255, label %320

255:                                              ; preds = %245
  %256 = insertelement <2 x double> undef, double %250, i32 0
  %257 = insertelement <2 x double> %256, double %251, i32 1
  %258 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %257
  store <2 x double> %258, <2 x double>* %160, align 16
  %259 = insertelement <2 x double> undef, double %252, i32 0
  %260 = insertelement <2 x double> %259, double %253, i32 1
  %261 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %260
  store <2 x double> %261, <2 x double>* %161, align 16
  %262 = extractelement <2 x double> %258, i32 0
  br label %320

263:                                              ; preds = %243
  %264 = or i1 %189, %190
  br i1 %264, label %283, label %265

265:                                              ; preds = %263
  %266 = load float, float* %87, align 4
  %267 = load float, float* %88, align 4
  %268 = load float, float* %97, align 4
  %269 = call float @atan2f(float %266, float %267) #7
  %270 = fpext float %269 to double
  store double %270, double* %104, align 16
  %271 = fadd double %270, 0x3FF921FB54442D18
  store double %271, double* %105, align 8
  %272 = fadd double %271, 0x3FF921FB54442D18
  store double %272, double* %106, align 16
  %273 = fadd double %272, 0x3FF921FB54442D18
  store double %273, double* %107, align 8
  %274 = fcmp olt float %268, 0.000000e+00
  br i1 %274, label %275, label %320

275:                                              ; preds = %265
  %276 = insertelement <2 x double> undef, double %270, i32 0
  %277 = insertelement <2 x double> %276, double %271, i32 1
  %278 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %277
  store <2 x double> %278, <2 x double>* %162, align 16
  %279 = insertelement <2 x double> undef, double %272, i32 0
  %280 = insertelement <2 x double> %279, double %273, i32 1
  %281 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %280
  store <2 x double> %281, <2 x double>* %163, align 16
  %282 = extractelement <2 x double> %278, i32 0
  br label %320

283:                                              ; preds = %263
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %132) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %132, i8* nonnull align 4 %96, i64 12, i1 false) #7
  %284 = call float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"* nonnull %15) #7
  %285 = fdiv float 1.000000e+00, %284
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* nonnull %15, float %285, float %285, float %285) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %133) #7
  store float 0.000000e+00, float* %134, align 4
  store float 0.000000e+00, float* %135, align 4
  store float 0.000000e+00, float* %136, align 4
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %137) #7
  %286 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* nonnull dereferenceable(12) %30, %"class.gfx::Point3F"* nonnull dereferenceable(12) %16) #7
  %287 = extractvalue { <2 x float>, float } %286, 0
  %288 = extractvalue { <2 x float>, float } %286, 1
  store <2 x float> %287, <2 x float>* %139, align 8
  store float %288, float* %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %140) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %142) #7
  %289 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %17, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %15) #7
  %290 = call { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %15, float %289, float %289, float %289) #7
  %291 = extractvalue { <2 x float>, float } %290, 0
  %292 = extractvalue { <2 x float>, float } %290, 1
  store <2 x float> %291, <2 x float>* %143, align 8
  store float %292, float* %144, align 8
  %293 = call { <2 x float>, float } @_ZN3gfxplERKNS_7Point3FERKNS_9Vector3dFE(%"class.gfx::Point3F"* nonnull dereferenceable(12) %16, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %19) #7
  %294 = extractvalue { <2 x float>, float } %293, 0
  %295 = extractvalue { <2 x float>, float } %293, 1
  store <2 x float> %294, <2 x float>* %145, align 8
  store float %295, float* %141, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %142) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %146) #7
  %296 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* nonnull dereferenceable(12) %30, %"class.gfx::Point3F"* nonnull dereferenceable(12) %18) #7
  %297 = extractvalue { <2 x float>, float } %296, 0
  %298 = extractvalue { <2 x float>, float } %296, 1
  store <2 x float> %297, <2 x float>* %148, align 8
  store float %298, float* %147, align 8
  %299 = call float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"* nonnull %20) #7
  %300 = fcmp oeq float %299, 0.000000e+00
  br i1 %300, label %319, label %301

301:                                              ; preds = %283
  %302 = fdiv float 1.000000e+00, %299
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* nonnull %20, float %302, float %302, float %302) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %151) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* nonnull align 4 %132, i64 12, i1 false) #7
  call void @_ZN3gfx9Vector3dF5CrossERKS0_(%"class.gfx::Vector3dF"* nonnull %7, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %20) #7
  %303 = load <2 x float>, <2 x float>* %153, align 8
  %304 = load float, float* %152, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %151) #7
  %305 = extractelement <2 x float> %303, i32 0
  %306 = load float, float* %150, align 8
  %307 = call float @atan2f(float %305, float %306) #7
  %308 = fpext float %307 to double
  store double %308, double* %104, align 16
  %309 = fadd double %308, 0x400921FB54442D18
  store double %309, double* %105, align 8
  %310 = extractelement <2 x float> %303, i32 1
  %311 = load float, float* %149, align 4
  %312 = call float @atan2f(float %310, float %311) #7
  %313 = fpext float %312 to double
  store double %313, double* %106, align 16
  %314 = fadd double %313, 0x400921FB54442D18
  store double %314, double* %107, align 8
  %315 = load float, float* %147, align 8
  %316 = call float @atan2f(float %304, float %315) #7
  %317 = fpext float %316 to double
  store double %317, double* %108, align 16
  %318 = fadd double %317, 0x400921FB54442D18
  store double %318, double* %109, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %146) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %140) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %137) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %133) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %132) #7
  br label %320

319:                                              ; preds = %283
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %146) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %140) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %137) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %133) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %132) #7
  br label %356

320:                                              ; preds = %301, %275, %265, %255, %245, %235, %225
  %321 = phi double [ %308, %301 ], [ %230, %225 ], [ %250, %245 ], [ %270, %265 ], [ %282, %275 ], [ %262, %255 ], [ %242, %235 ]
  %322 = phi i64 [ 6, %301 ], [ 4, %225 ], [ 4, %245 ], [ 4, %265 ], [ 4, %275 ], [ 4, %255 ], [ 4, %235 ]
  %323 = fmul float %221, 0x400921FB60000000
  %324 = fdiv float %323, 1.800000e+02
  %325 = fpext float %324 to double
  %326 = fmul float %223, 0x400921FB60000000
  %327 = fdiv float %326, 1.800000e+02
  %328 = fpext float %327 to double
  br label %329

329:                                              ; preds = %353, %320
  %330 = phi double [ %321, %320 ], [ %355, %353 ]
  %331 = phi i64 [ 0, %320 ], [ %351, %353 ]
  %332 = fcmp olt double %330, %325
  br i1 %332, label %336, label %333

333:                                              ; preds = %336, %329
  %334 = phi double [ %330, %329 ], [ %338, %336 ]
  %335 = fcmp ogt double %334, %328
  br i1 %335, label %340, label %344

336:                                              ; preds = %329, %336
  %337 = phi double [ %338, %336 ], [ %330, %329 ]
  %338 = fadd double %337, 0x401921FB54442D18
  %339 = fcmp olt double %338, %325
  br i1 %339, label %336, label %333

340:                                              ; preds = %333, %340
  %341 = phi double [ %342, %340 ], [ %334, %333 ]
  %342 = fadd double %341, 0xC01921FB54442D18
  %343 = fcmp ogt double %342, %328
  br i1 %343, label %340, label %344

344:                                              ; preds = %340, %333
  %345 = phi double [ %334, %333 ], [ %342, %340 ]
  %346 = fcmp olt double %345, %325
  br i1 %346, label %350, label %347

347:                                              ; preds = %344
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %154) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %154, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3gfxL17BoundingBoxForArcERKNS_7Point3FEPKNS_18TransformOperationES5_ffPNS_4BoxFE.rotation to i8*), i64 68, i1 false) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %154, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  store i8 0, i8* %155, align 4
  %348 = fmul double %345, 1.800000e+02
  %349 = fdiv double %348, 0x400921FB54442D18
  call void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"* nonnull %21, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %8, double %349) #7
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %156) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %156, i8* nonnull align 4 %85, i64 12, i1 false) #7
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %21, %"class.gfx::Point3F"* nonnull %22) #7
  call void @_ZN3gfx4BoxF8ExpandToERKNS_7Point3FE(%"class.gfx::BoxF"* nonnull %31, %"class.gfx::Point3F"* nonnull dereferenceable(12) %22) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %156) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %154) #7
  br label %350

350:                                              ; preds = %347, %344
  %351 = add nuw nsw i64 %331, 1
  %352 = icmp eq i64 %351, %322
  br i1 %352, label %356, label %353

353:                                              ; preds = %350
  %354 = getelementptr inbounds [6 x double], [6 x double]* %9, i64 0, i64 %351
  %355 = load double, double* %354, align 8
  br label %329

356:                                              ; preds = %350, %319
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %131) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %130) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %128) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %126) #7
  br label %357

357:                                              ; preds = %164, %356
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %103) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %96) #7
  br i1 %166, label %358, label %359

358:                                              ; preds = %357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* nonnull align 4 %93, i64 24, i1 false)
  br label %360

359:                                              ; preds = %357
  call void @_ZN3gfx4BoxF5UnionERKS0_(%"class.gfx::BoxF"* %5, %"class.gfx::BoxF"* nonnull dereferenceable(24) %31) #7
  br label %360

360:                                              ; preds = %359, %358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %85) #7
  %361 = add nuw nsw i32 %165, 1
  %362 = icmp eq i32 %361, 8
  br i1 %362, label %363, label %164

363:                                              ; preds = %360, %78
  %364 = phi i1 [ false, %78 ], [ true, %360 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #7
  br label %365

365:                                              ; preds = %55, %76, %363, %51, %48
  %366 = phi i1 [ true, %48 ], [ %364, %363 ], [ %77, %76 ], [ true, %55 ], [ false, %51 ]
  ret i1 %366
}

declare void @_ZNK3gfx9Transform12TransformBoxEPNS_4BoxFE(%"class.gfx::Transform"*, %"class.gfx::BoxF"*) local_unnamed_addr #2

declare void @_ZN3gfx4BoxF8ExpandToERKS0_(%"class.gfx::BoxF"*, %"class.gfx::BoxF"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3gfx4BoxF5UnionERKS0_(%"class.gfx::BoxF"*, %"class.gfx::BoxF"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

declare zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

declare void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"*, %"class.gfx::Point3F"*) local_unnamed_addr #2

declare void @_ZN3gfx4BoxF8ExpandToERKNS_7Point3FE(%"class.gfx::BoxF"*, %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #2

declare float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"*) local_unnamed_addr #2

declare { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12), %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #2

declare { <2 x float>, float } @_ZN3gfxplERKNS_7Point3FERKNS_9Vector3dFE(%"class.gfx::Point3F"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

declare void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"*, float, float, float) local_unnamed_addr #2

declare { <2 x float>, float } @_ZN3gfx13ScaleVector3dERKNS_9Vector3dFEfff(%"class.gfx::Vector3dF"* dereferenceable(12), float, float, float) local_unnamed_addr #2

declare void @_ZN3gfx9Vector3dF5CrossERKS0_(%"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
