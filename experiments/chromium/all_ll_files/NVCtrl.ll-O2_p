; ModuleID = '../../third_party/angle/src/third_party/libXNVCtrl/NVCtrl.c'
source_filename = "../../third_party/angle/src/third_party/libXNVCtrl/NVCtrl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._XExtensionHooks = type { i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.XFontStruct*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.XFontStruct*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %union._XEvent*, %struct._xEvent*)*, i32 (%struct._XDisplay*, %union._XEvent*, %struct._xEvent*)*, i32 (%struct._XDisplay*, %struct.xError*, %struct.XExtCodes*, i32*)*, i8* (%struct._XDisplay*, i32, %struct.XExtCodes*, i8*, i32)* }
%struct._XDisplay = type { %struct._XExtData*, %struct._XFreeFuncs*, i32, i32, i32, i32, i8*, i64, i64, i64, i32, i64 (%struct._XDisplay*)*, i32, i32, i32, i32, i32, %struct.ScreenFormat*, i32, i32, %struct._XSQEvent*, %struct._XSQEvent*, i32, i64, i64, i8*, i8*, i8*, i8*, i32, %struct._XrmHashBucketRec*, i32 (%struct._XDisplay*)*, i8*, i32, i32, %struct.Screen*, i64, i64, i32, i32, i64*, %struct.XModifierKeymap*, i32, i8*, i8*, i64, i32, %struct._XExten*, [128 x i32 (%struct._XDisplay*, %union._XEvent*, %struct._xEvent*)*], [128 x i32 (%struct._XDisplay*, %union._XEvent*, %struct._xEvent*)*], i64, %struct._XLockInfo*, %struct._XInternalAsync*, i64, %struct._XLockPtrs*, void (%struct._XDisplay*, i64*, i32)*, %struct._XKeytrans*, i64, %struct._XDisplayAtoms*, i32, i32, %struct._XContextDB*, i32 (%struct._XDisplay*, %struct.XErrorEvent*, %struct.xError*)**, %struct.anon.30, %struct._XIMFilter*, %struct._XSQEvent*, i64, %struct._XExten*, %struct._XConnectionInfo*, i32, %struct._XConnWatchInfo*, i32, i8*, i32 (%struct._XDisplay*)*, i64, i32, %struct._XkbInfoRec*, %struct._XtransConnInfo*, %struct._X11XCBPrivate*, i32, [128 x i32 (%struct._XDisplay*, %struct.XGenericEventCookie*, %struct._xEvent*)*], [128 x i32 (%struct._XDisplay*, %struct.XGenericEventCookie*, %struct.XGenericEventCookie*)*], i8*, %struct._XErrorThreadInfo*, void (%struct._XDisplay*, i8*)*, i8* }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%struct._XFreeFuncs = type { void (%struct._XDisplay*)*, i32 (%struct.XModifierKeymap*)*, void (%struct._XDisplay*)*, void (%struct._XDisplay*)*, void (%struct._XDisplay*)*, void (%struct._XDisplay*)*, void (%struct._XDisplay*)*, void (%struct._XDisplay*)*, void (%struct._XDisplay*)* }
%struct.ScreenFormat = type { %struct._XExtData*, i32, i32, i32 }
%struct._XrmHashBucketRec = type opaque
%struct.Screen = type { %struct._XExtData*, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, %struct.Depth*, i32, %struct.Visual*, %struct._XGC*, i64, i64, i64, i32, i32, i32, i32, i64 }
%struct.Depth = type { i32, i32, %struct.Visual* }
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct.XModifierKeymap = type { i32, i8* }
%struct._XLockInfo = type opaque
%struct._XInternalAsync = type { %struct._XInternalAsync*, i32 (%struct._XDisplay*, %union.xReply*, i8*, i32, i8*)*, i8* }
%union.xReply = type { %struct.xGenericReply }
%struct.xGenericReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct._XLockPtrs = type { void (%struct._XDisplay*)*, void (%struct._XDisplay*)* }
%struct._XKeytrans = type opaque
%struct._XDisplayAtoms = type opaque
%struct._XContextDB = type opaque
%struct.XErrorEvent = type { i32, %struct._XDisplay*, i64, i64, i8, i8, i8 }
%struct.xError = type { i8, i8, i16, i32, i16, i8, i8, i32, i32, i32, i32, i32 }
%struct.anon.30 = type { i8*, i8*, i8* }
%struct._XIMFilter = type opaque
%struct._XSQEvent = type { %struct._XSQEvent*, %union._XEvent, i64 }
%union._XEvent = type { [24 x i64] }
%struct._XExten = type { %struct._XExten*, %struct.XExtCodes, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.XFontStruct*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.XFontStruct*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.XExtCodes*)*, i32 (%struct._XDisplay*, %struct.xError*, %struct.XExtCodes*, i32*)*, i8* (%struct._XDisplay*, i32, %struct.XExtCodes*, i8*, i32)*, i8*, void (%struct._XDisplay*, %struct.XErrorEvent*, i8*)*, void (%struct._XDisplay*, %struct.XExtCodes*, i8*, i64)*, %struct._XExten* }
%struct.XExtCodes = type { i32, i32, i32, i32 }
%struct._XConnectionInfo = type { i32, void (%struct._XDisplay*, i32, i8*)*, i8*, i8**, %struct._XConnectionInfo* }
%struct._XConnWatchInfo = type { void (%struct._XDisplay*, i8*, i32, i32, i8**)*, i8*, %struct._XConnWatchInfo* }
%struct._XkbInfoRec = type opaque
%struct._XtransConnInfo = type opaque
%struct._X11XCBPrivate = type opaque
%struct.XGenericEventCookie = type { i32, i64, i32, %struct._XDisplay*, i32, i32, i32, i8* }
%struct._xEvent = type { %union.anon.0 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8 }
%struct._XErrorThreadInfo = type opaque
%struct._XGC = type { %struct._XExtData*, i64, i32, i32, i64, %struct.XGCValues }
%struct.XGCValues = type { i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i64, i32, i8 }
%struct.XFontStruct = type { %struct._XExtData*, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.XFontProp*, %struct.XCharStruct, %struct.XCharStruct, %struct.XCharStruct*, i32, i32 }
%struct.XFontProp = type { i64, i64 }
%struct.XCharStruct = type { i16, i16, i16, i16, i16, i16 }
%struct._XExtensionInfo = type { %struct._XExtDisplayInfo*, %struct._XExtDisplayInfo*, i32 }
%struct._XExtDisplayInfo = type { %struct._XExtDisplayInfo*, %struct._XDisplay*, %struct.XExtCodes*, i8* }
%struct.xnvCtrlQueryExtensionReply = type { i8, i8, i16, i32, i16, i16, i32, i32, i32, i32, i32 }
%struct.xnvCtrlIsNvReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlQueryTargetCountReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlSetAttributeAndGetStatusReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlQueryAttributeReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlQueryAttribute64Reply = type { i8, i8, i16, i32, i32, i32, i64, i32, i32 }
%struct.xnvCtrlQueryStringAttributeReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlSetStringAttributeReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct._NVCTRLAttributeValidValues = type { i32, %union.anon.31, i32 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { i64, i64 }
%struct.xnvCtrlQueryValidAttributeValuesReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlQueryValidAttributeValues64Reply = type { i8, i8, i16, i32, i32, i32, i64, i64, i64, i32, i32 }
%struct._NVCTRLAttributePermissions = type { i32, i32 }
%struct.xnvCtrlQueryAttributePermissionsReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlQueryGvoColorConversionReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlQueryBinaryDataReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.xnvCtrlStringOperationReply = type { i8, i8, i16, i32, i32, i32, i32, i32, i32, i32 }
%struct.XNVCtrlAttributeChangedEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32, i32 }
%struct.XNVCtrlAttributeChangedEventTarget = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32, i32, i32 }
%struct.anon.39 = type { i8, i8, i16, i32, i16, i16, i32, i32, i32, i32, i32 }
%struct.XNVCtrlAttributeChangedEventTargetAvailability = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, i32 }
%struct.anon.40 = type { i8, i8, i16, i32, i16, i16, i32, i32, i32, i8, i8, i16, i32 }
%struct.XNVCtrlStringAttributeChangedEventTarget = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32, i32 }
%struct.XNVCtrlBinaryAttributeChangedEventTarget = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32, i32 }

@nvctrl_extension_hooks = internal global %struct._XExtensionHooks { i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)* null, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)* null, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)* null, i32 (%struct._XDisplay*, %struct._XGC*, %struct.XExtCodes*)* null, i32 (%struct._XDisplay*, %struct.XFontStruct*, %struct.XExtCodes*)* null, i32 (%struct._XDisplay*, %struct.XFontStruct*, %struct.XExtCodes*)* null, i32 (%struct._XDisplay*, %struct.XExtCodes*)* @close_display, i32 (%struct._XDisplay*, %union._XEvent*, %struct._xEvent*)* @wire_to_event, i32 (%struct._XDisplay*, %union._XEvent*, %struct._xEvent*)* null, i32 (%struct._XDisplay*, %struct.xError*, %struct.XExtCodes*, i32*)* null, i8* (%struct._XDisplay*, i32, %struct.XExtCodes*, i8*, i32)* null }, align 8
@_nvctrl_ext_info_data = internal global %struct._XExtensionInfo zeroinitializer, align 8
@.str = private unnamed_addr constant [11 x i8] c"NV-CONTROL\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryExtension(%struct._XDisplay*, i32*, i32*) local_unnamed_addr #0 {
  %4 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %5 = icmp eq %struct._XExtDisplayInfo* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %8 = icmp eq %struct._XExtDisplayInfo* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %3, %6
  %10 = phi %struct._XExtDisplayInfo* [ %7, %6 ], [ %4, %3 ]
  %11 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %10, i64 0, i32 2
  %12 = load %struct.XExtCodes*, %struct.XExtCodes** %11, align 8
  %13 = icmp eq %struct.XExtCodes* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %9
  %15 = icmp eq i32* %1, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %12, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %1, align 4
  br label %19

19:                                               ; preds = %14, %16
  %20 = icmp eq i32* %2, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = load %struct.XExtCodes*, %struct.XExtCodes** %11, align 8
  %23 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %22, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %2, align 4
  br label %25

25:                                               ; preds = %6, %9, %21, %19
  %26 = phi i32 [ 1, %19 ], [ 1, %21 ], [ 0, %9 ], [ 0, %6 ]
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryVersion(%struct._XDisplay*, i32*, i32*) local_unnamed_addr #0 {
  %4 = alloca %struct.xnvCtrlQueryExtensionReply, align 4
  %5 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %6 = icmp eq %struct._XExtDisplayInfo* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %struct._XExtDisplayInfo* [ %5, %3 ], [ %8, %7 ]
  %11 = getelementptr inbounds %struct.xnvCtrlQueryExtensionReply, %struct.xnvCtrlQueryExtensionReply* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %12 = getelementptr inbounds %struct.xnvCtrlQueryExtensionReply, %struct.xnvCtrlQueryExtensionReply* %4, i64 0, i32 4
  %13 = getelementptr inbounds %struct.xnvCtrlQueryExtensionReply, %struct.xnvCtrlQueryExtensionReply* %4, i64 0, i32 5
  %14 = icmp eq %struct._XExtDisplayInfo* %10, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 32, i1 false)
  br i1 %14, label %70, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %10, i64 0, i32 2
  %17 = load %struct.XExtCodes*, %struct.XExtCodes** %16, align 8
  %18 = icmp eq %struct.XExtCodes* %17, null
  br i1 %18, label %70, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %21 = load %struct._XLockPtrs*, %struct._XLockPtrs** %20, align 8
  %22 = icmp eq %struct._XLockPtrs* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %21, i64 0, i32 0
  %25 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %24, align 8
  tail call void %25(%struct._XDisplay* %0) #6
  br label %26

26:                                               ; preds = %19, %23
  %27 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 0, i64 4) #6
  %28 = load %struct.XExtCodes*, %struct.XExtCodes** %16, align 8
  %29 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %27, align 2
  %32 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 0, i8* %32, align 1
  %33 = bitcast %struct.xnvCtrlQueryExtensionReply* %4 to %union.xReply*
  %34 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %33, i32 0, i32 1) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %26
  %37 = load %struct._XLockPtrs*, %struct._XLockPtrs** %20, align 8
  %38 = icmp eq %struct._XLockPtrs* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %37, i64 0, i32 1
  %41 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %40, align 8
  call void %41(%struct._XDisplay* %0) #6
  br label %42

42:                                               ; preds = %36, %39
  %43 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %44 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %43, align 8
  %45 = icmp eq i32 (%struct._XDisplay*)* %44, null
  br i1 %45, label %70, label %46

46:                                               ; preds = %42
  %47 = call i32 %44(%struct._XDisplay* %0) #6
  br label %70

48:                                               ; preds = %26
  %49 = icmp eq i32* %1, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %48
  %51 = load i16, i16* %12, align 4
  %52 = zext i16 %51 to i32
  store i32 %52, i32* %1, align 4
  br label %53

53:                                               ; preds = %48, %50
  %54 = icmp eq i32* %2, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = load i16, i16* %13, align 2
  %57 = zext i16 %56 to i32
  store i32 %57, i32* %2, align 4
  br label %58

58:                                               ; preds = %53, %55
  %59 = load %struct._XLockPtrs*, %struct._XLockPtrs** %20, align 8
  %60 = icmp eq %struct._XLockPtrs* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %59, i64 0, i32 1
  %63 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %62, align 8
  call void %63(%struct._XDisplay* %0) #6
  br label %64

64:                                               ; preds = %58, %61
  %65 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %66 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %65, align 8
  %67 = icmp eq i32 (%struct._XDisplay*)* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = call i32 %66(%struct._XDisplay* %0) #6
  br label %70

70:                                               ; preds = %68, %64, %46, %42, %9, %15
  %71 = phi i32 [ 0, %15 ], [ 0, %9 ], [ 0, %42 ], [ 0, %46 ], [ 1, %64 ], [ 1, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  ret i32 %71
}

declare i32 @XMissingExtension(%struct._XDisplay*, i8*) local_unnamed_addr #2

declare i8* @_XGetRequest(%struct._XDisplay*, i8 zeroext, i64) local_unnamed_addr #2

declare i32 @_XReply(%struct._XDisplay*, %union.xReply*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLIsNvScreen(%struct._XDisplay*, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.xnvCtrlIsNvReply, align 4
  %4 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %5 = icmp eq %struct._XExtDisplayInfo* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %struct._XExtDisplayInfo* [ %4, %2 ], [ %7, %6 ]
  %10 = getelementptr inbounds %struct.xnvCtrlIsNvReply, %struct.xnvCtrlIsNvReply* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  %11 = getelementptr inbounds %struct.xnvCtrlIsNvReply, %struct.xnvCtrlIsNvReply* %3, i64 0, i32 4
  %12 = icmp eq %struct._XExtDisplayInfo* %9, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -86, i64 32, i1 false)
  br i1 %12, label %61, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %9, i64 0, i32 2
  %15 = load %struct.XExtCodes*, %struct.XExtCodes** %14, align 8
  %16 = icmp eq %struct.XExtCodes* %15, null
  br i1 %16, label %61, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %19 = load %struct._XLockPtrs*, %struct._XLockPtrs** %18, align 8
  %20 = icmp eq %struct._XLockPtrs* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %19, i64 0, i32 0
  %23 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %22, align 8
  tail call void %23(%struct._XDisplay* %0) #6
  br label %24

24:                                               ; preds = %17, %21
  %25 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 1, i64 8) #6
  %26 = load %struct.XExtCodes*, %struct.XExtCodes** %14, align 8
  %27 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = trunc i32 %28 to i8
  store i8 %29, i8* %25, align 4
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 1, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %25, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %1, i32* %32, align 4
  %33 = bitcast %struct.xnvCtrlIsNvReply* %3 to %union.xReply*
  %34 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %33, i32 0, i32 1) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %24
  %37 = load %struct._XLockPtrs*, %struct._XLockPtrs** %18, align 8
  %38 = icmp eq %struct._XLockPtrs* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %37, i64 0, i32 1
  %41 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %40, align 8
  call void %41(%struct._XDisplay* %0) #6
  br label %42

42:                                               ; preds = %36, %39
  %43 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %44 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %43, align 8
  %45 = icmp eq i32 (%struct._XDisplay*)* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %42
  %47 = call i32 %44(%struct._XDisplay* %0) #6
  br label %61

48:                                               ; preds = %24
  %49 = load i32, i32* %11, align 4
  %50 = load %struct._XLockPtrs*, %struct._XLockPtrs** %18, align 8
  %51 = icmp eq %struct._XLockPtrs* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %50, i64 0, i32 1
  %54 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %53, align 8
  call void %54(%struct._XDisplay* %0) #6
  br label %55

55:                                               ; preds = %48, %52
  %56 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %57 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %56, align 8
  %58 = icmp eq i32 (%struct._XDisplay*)* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = call i32 %57(%struct._XDisplay* %0) #6
  br label %61

61:                                               ; preds = %59, %55, %46, %42, %8, %13
  %62 = phi i32 [ 0, %13 ], [ 0, %8 ], [ 0, %42 ], [ 0, %46 ], [ %49, %55 ], [ %49, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryTargetCount(%struct._XDisplay*, i32, i32*) local_unnamed_addr #0 {
  %4 = alloca %struct.xnvCtrlQueryTargetCountReply, align 4
  %5 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %6 = icmp eq %struct._XExtDisplayInfo* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %struct._XExtDisplayInfo* [ %5, %3 ], [ %8, %7 ]
  %11 = getelementptr inbounds %struct.xnvCtrlQueryTargetCountReply, %struct.xnvCtrlQueryTargetCountReply* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %12 = getelementptr inbounds %struct.xnvCtrlQueryTargetCountReply, %struct.xnvCtrlQueryTargetCountReply* %4, i64 0, i32 4
  %13 = icmp eq %struct._XExtDisplayInfo* %10, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 32, i1 false)
  br i1 %13, label %65, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %10, i64 0, i32 2
  %16 = load %struct.XExtCodes*, %struct.XExtCodes** %15, align 8
  %17 = icmp eq %struct.XExtCodes* %16, null
  br i1 %17, label %65, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %20 = load %struct._XLockPtrs*, %struct._XLockPtrs** %19, align 8
  %21 = icmp eq %struct._XLockPtrs* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %20, i64 0, i32 0
  %24 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %23, align 8
  tail call void %24(%struct._XDisplay* %0) #6
  br label %25

25:                                               ; preds = %18, %22
  %26 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 24, i64 8) #6
  %27 = load %struct.XExtCodes*, %struct.XExtCodes** %15, align 8
  %28 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %26, align 4
  %31 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 24, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %26, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 %1, i32* %33, align 4
  %34 = bitcast %struct.xnvCtrlQueryTargetCountReply* %4 to %union.xReply*
  %35 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %34, i32 0, i32 1) #6
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %25
  %38 = load %struct._XLockPtrs*, %struct._XLockPtrs** %19, align 8
  %39 = icmp eq %struct._XLockPtrs* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %38, i64 0, i32 1
  %42 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %41, align 8
  call void %42(%struct._XDisplay* %0) #6
  br label %43

43:                                               ; preds = %37, %40
  %44 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %45 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %44, align 8
  %46 = icmp eq i32 (%struct._XDisplay*)* %45, null
  br i1 %46, label %65, label %47

47:                                               ; preds = %43
  %48 = call i32 %45(%struct._XDisplay* %0) #6
  br label %65

49:                                               ; preds = %25
  %50 = icmp eq i32* %2, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = load i32, i32* %12, align 4
  store i32 %52, i32* %2, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = load %struct._XLockPtrs*, %struct._XLockPtrs** %19, align 8
  %55 = icmp eq %struct._XLockPtrs* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %54, i64 0, i32 1
  %58 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %57, align 8
  call void %58(%struct._XDisplay* %0) #6
  br label %59

59:                                               ; preds = %53, %56
  %60 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %61 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %60, align 8
  %62 = icmp eq i32 (%struct._XDisplay*)* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = call i32 %61(%struct._XDisplay* %0) #6
  br label %65

65:                                               ; preds = %63, %59, %47, %43, %9, %14
  %66 = phi i32 [ 0, %14 ], [ 0, %9 ], [ 0, %43 ], [ 0, %47 ], [ 1, %59 ], [ 1, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @XNVCTRLSetTargetAttribute(%struct._XDisplay*, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %10 = icmp eq %struct._XExtDisplayInfo* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %13 = icmp eq %struct._XExtDisplayInfo* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6, %11
  %15 = phi %struct._XExtDisplayInfo* [ %12, %11 ], [ %9, %6 ]
  %16 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 2
  %17 = load %struct.XExtCodes*, %struct.XExtCodes** %16, align 8
  %18 = icmp eq %struct.XExtCodes* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14, %11
  %20 = tail call i32 @XMissingExtension(%struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #6
  br label %91

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 3
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i8
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %49

27:                                               ; preds = %21
  %28 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6
  store i32 -1431655766, i32* %7, align 4
  %29 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #6
  store i32 -1431655766, i32* %8, align 4
  %30 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %7, i32* nonnull %8) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %27
  %33 = load i32, i32* %7, align 4
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = icmp sgt i32 %33, 1
  br i1 %36, label %43, label %46

37:                                               ; preds = %32
  %38 = load i32, i32* %8, align 4
  %39 = or i32 %38, 1
  %40 = icmp eq i32 %39, 9
  %41 = select i1 %40, i64 3, i64 1
  %42 = icmp sgt i32 %38, 20
  br i1 %42, label %43, label %46

43:                                               ; preds = %37, %35
  %44 = phi i64 [ %41, %37 ], [ 1, %35 ]
  %45 = or i64 %44, 4
  br label %46

46:                                               ; preds = %43, %37, %35, %27
  %47 = phi i64 [ %45, %43 ], [ %41, %37 ], [ 0, %27 ], [ 1, %35 ]
  %48 = inttoptr i64 %47 to i8*
  store i8* %48, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6
  br label %49

49:                                               ; preds = %46, %21
  %50 = phi i64 [ %47, %46 ], [ %24, %21 ]
  %51 = and i64 %50, 2
  %52 = icmp eq i64 %51, 0
  %53 = select i1 %52, i32 %1, i32 %2
  %54 = select i1 %52, i32 %2, i32 %1
  %55 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %56 = load %struct._XLockPtrs*, %struct._XLockPtrs** %55, align 8
  %57 = icmp eq %struct._XLockPtrs* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %56, i64 0, i32 0
  %60 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %59, align 8
  call void %60(%struct._XDisplay* %0) #6
  br label %61

61:                                               ; preds = %49, %58
  %62 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 3, i64 20) #6
  %63 = load %struct.XExtCodes*, %struct.XExtCodes** %16, align 8
  %64 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %62, align 4
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  store i8 3, i8* %67, align 1
  %68 = trunc i32 %53 to i16
  %69 = getelementptr inbounds i8, i8* %62, i64 6
  %70 = bitcast i8* %69 to i16*
  store i16 %68, i16* %70, align 2
  %71 = trunc i32 %54 to i16
  %72 = getelementptr inbounds i8, i8* %62, i64 4
  %73 = bitcast i8* %72 to i16*
  store i16 %71, i16* %73, align 4
  %74 = getelementptr inbounds i8, i8* %62, i64 8
  %75 = bitcast i8* %74 to i32*
  store i32 %3, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %62, i64 12
  %77 = bitcast i8* %76 to i32*
  store i32 %4, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %62, i64 16
  %79 = bitcast i8* %78 to i32*
  store i32 %5, i32* %79, align 4
  %80 = load %struct._XLockPtrs*, %struct._XLockPtrs** %55, align 8
  %81 = icmp eq %struct._XLockPtrs* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %61
  %83 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %80, i64 0, i32 1
  %84 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %83, align 8
  call void %84(%struct._XDisplay* %0) #6
  br label %85

85:                                               ; preds = %61, %82
  %86 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %87 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %86, align 8
  %88 = icmp eq i32 (%struct._XDisplay*)* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = call i32 %87(%struct._XDisplay* %0) #6
  br label %91

91:                                               ; preds = %89, %85, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @XNVCTRLSetAttribute(%struct._XDisplay*, i32, i32, i32, i32) local_unnamed_addr #0 {
  tail call void @XNVCTRLSetTargetAttribute(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLSetTargetAttributeAndGetStatus(%struct._XDisplay*, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = alloca %struct.xnvCtrlSetAttributeAndGetStatusReply, align 4
  %8 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %9 = icmp eq %struct._XExtDisplayInfo* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi %struct._XExtDisplayInfo* [ %8, %6 ], [ %11, %10 ]
  %14 = getelementptr inbounds %struct.xnvCtrlSetAttributeAndGetStatusReply, %struct.xnvCtrlSetAttributeAndGetStatusReply* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds %struct.xnvCtrlSetAttributeAndGetStatusReply, %struct.xnvCtrlSetAttributeAndGetStatusReply* %7, i64 0, i32 4
  %16 = icmp eq %struct._XExtDisplayInfo* %13, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false)
  br i1 %16, label %74, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %13, i64 0, i32 2
  %19 = load %struct.XExtCodes*, %struct.XExtCodes** %18, align 8
  %20 = icmp eq %struct.XExtCodes* %19, null
  br i1 %20, label %74, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %23 = load %struct._XLockPtrs*, %struct._XLockPtrs** %22, align 8
  %24 = icmp eq %struct._XLockPtrs* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %23, i64 0, i32 0
  %27 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %26, align 8
  tail call void %27(%struct._XDisplay* %0) #6
  br label %28

28:                                               ; preds = %21, %25
  %29 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 19, i64 20) #6
  %30 = load %struct.XExtCodes*, %struct.XExtCodes** %18, align 8
  %31 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %30, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %29, align 4
  %34 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 19, i8* %34, align 1
  %35 = trunc i32 %1 to i16
  %36 = getelementptr inbounds i8, i8* %29, i64 6
  %37 = bitcast i8* %36 to i16*
  store i16 %35, i16* %37, align 2
  %38 = trunc i32 %2 to i16
  %39 = getelementptr inbounds i8, i8* %29, i64 4
  %40 = bitcast i8* %39 to i16*
  store i16 %38, i16* %40, align 4
  %41 = getelementptr inbounds i8, i8* %29, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %3, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %29, i64 12
  %44 = bitcast i8* %43 to i32*
  store i32 %4, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %29, i64 16
  %46 = bitcast i8* %45 to i32*
  store i32 %5, i32* %46, align 4
  %47 = bitcast %struct.xnvCtrlSetAttributeAndGetStatusReply* %7 to %union.xReply*
  %48 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %47, i32 0, i32 0) #6
  %49 = icmp eq i32 %48, 0
  %50 = load %struct._XLockPtrs*, %struct._XLockPtrs** %22, align 8
  %51 = icmp ne %struct._XLockPtrs* %50, null
  br i1 %49, label %52, label %62

52:                                               ; preds = %28
  br i1 %51, label %53, label %56

53:                                               ; preds = %52
  %54 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %50, i64 0, i32 1
  %55 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %54, align 8
  call void %55(%struct._XDisplay* %0) #6
  br label %56

56:                                               ; preds = %53, %52
  %57 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %58 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %57, align 8
  %59 = icmp eq i32 (%struct._XDisplay*)* %58, null
  br i1 %59, label %74, label %60

60:                                               ; preds = %56
  %61 = call i32 %58(%struct._XDisplay* %0) #6
  br label %74

62:                                               ; preds = %28
  br i1 %51, label %63, label %66

63:                                               ; preds = %62
  %64 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %50, i64 0, i32 1
  %65 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %64, align 8
  call void %65(%struct._XDisplay* %0) #6
  br label %66

66:                                               ; preds = %63, %62
  %67 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %68 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %67, align 8
  %69 = icmp eq i32 (%struct._XDisplay*)* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = call i32 %68(%struct._XDisplay* %0) #6
  br label %72

72:                                               ; preds = %66, %70
  %73 = load i32, i32* %15, align 4
  br label %74

74:                                               ; preds = %60, %56, %12, %17, %72
  %75 = phi i32 [ %73, %72 ], [ 0, %17 ], [ 0, %12 ], [ 0, %56 ], [ 0, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLSetAttributeAndGetStatus(%struct._XDisplay*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %6 = tail call i32 @XNVCTRLSetTargetAttributeAndGetStatus(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, i32 %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryTargetAttribute(%struct._XDisplay*, i32, i32, i32, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.xnvCtrlQueryAttributeReply, align 4
  %10 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %11 = icmp eq %struct._XExtDisplayInfo* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi %struct._XExtDisplayInfo* [ %10, %6 ], [ %13, %12 ]
  %16 = getelementptr inbounds %struct.xnvCtrlQueryAttributeReply, %struct.xnvCtrlQueryAttributeReply* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds %struct.xnvCtrlQueryAttributeReply, %struct.xnvCtrlQueryAttributeReply* %9, i64 0, i32 4
  %18 = getelementptr inbounds %struct.xnvCtrlQueryAttributeReply, %struct.xnvCtrlQueryAttributeReply* %9, i64 0, i32 5
  %19 = icmp eq %struct._XExtDisplayInfo* %15, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 32, i1 false)
  br i1 %19, label %115, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 2
  %22 = load %struct.XExtCodes*, %struct.XExtCodes** %21, align 8
  %23 = icmp eq %struct.XExtCodes* %22, null
  br i1 %23, label %115, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 3
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i8
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %52

30:                                               ; preds = %24
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #6
  store i32 -1431655766, i32* %7, align 4
  %32 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #6
  store i32 -1431655766, i32* %8, align 4
  %33 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %7, i32* nonnull %8) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = load i32, i32* %7, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %36, 1
  br i1 %39, label %46, label %49

40:                                               ; preds = %35
  %41 = load i32, i32* %8, align 4
  %42 = or i32 %41, 1
  %43 = icmp eq i32 %42, 9
  %44 = select i1 %43, i64 3, i64 1
  %45 = icmp sgt i32 %41, 20
  br i1 %45, label %46, label %49

46:                                               ; preds = %40, %38
  %47 = phi i64 [ %44, %40 ], [ 1, %38 ]
  %48 = or i64 %47, 4
  br label %49

49:                                               ; preds = %46, %40, %38, %30
  %50 = phi i64 [ %48, %46 ], [ %44, %40 ], [ 0, %30 ], [ 1, %38 ]
  %51 = inttoptr i64 %50 to i8*
  store i8* %51, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #6
  br label %52

52:                                               ; preds = %49, %24
  %53 = phi i64 [ %50, %49 ], [ %27, %24 ]
  %54 = and i64 %53, 2
  %55 = icmp eq i64 %54, 0
  %56 = select i1 %55, i32 %1, i32 %2
  %57 = select i1 %55, i32 %2, i32 %1
  %58 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %59 = load %struct._XLockPtrs*, %struct._XLockPtrs** %58, align 8
  %60 = icmp eq %struct._XLockPtrs* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %59, i64 0, i32 0
  %63 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %62, align 8
  call void %63(%struct._XDisplay* %0) #6
  br label %64

64:                                               ; preds = %52, %61
  %65 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 2, i64 16) #6
  %66 = load %struct.XExtCodes*, %struct.XExtCodes** %21, align 8
  %67 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = trunc i32 %68 to i8
  store i8 %69, i8* %65, align 4
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  store i8 2, i8* %70, align 1
  %71 = trunc i32 %56 to i16
  %72 = getelementptr inbounds i8, i8* %65, i64 6
  %73 = bitcast i8* %72 to i16*
  store i16 %71, i16* %73, align 2
  %74 = trunc i32 %57 to i16
  %75 = getelementptr inbounds i8, i8* %65, i64 4
  %76 = bitcast i8* %75 to i16*
  store i16 %74, i16* %76, align 4
  %77 = getelementptr inbounds i8, i8* %65, i64 8
  %78 = bitcast i8* %77 to i32*
  store i32 %3, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %65, i64 12
  %80 = bitcast i8* %79 to i32*
  store i32 %4, i32* %80, align 4
  %81 = bitcast %struct.xnvCtrlQueryAttributeReply* %9 to %union.xReply*
  %82 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %81, i32 0, i32 1) #6
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %64
  %85 = load %struct._XLockPtrs*, %struct._XLockPtrs** %58, align 8
  %86 = icmp eq %struct._XLockPtrs* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %85, i64 0, i32 1
  %89 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %88, align 8
  call void %89(%struct._XDisplay* %0) #6
  br label %90

90:                                               ; preds = %84, %87
  %91 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %92 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %91, align 8
  %93 = icmp eq i32 (%struct._XDisplay*)* %92, null
  br i1 %93, label %115, label %94

94:                                               ; preds = %90
  %95 = call i32 %92(%struct._XDisplay* %0) #6
  br label %115

96:                                               ; preds = %64
  %97 = load i32, i32* %17, align 4
  %98 = icmp ne i32 %97, 0
  %99 = icmp ne i32* %5, null
  %100 = and i1 %99, %98
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  %102 = load i32, i32* %18, align 4
  store i32 %102, i32* %5, align 4
  br label %103

103:                                              ; preds = %101, %96
  %104 = load %struct._XLockPtrs*, %struct._XLockPtrs** %58, align 8
  %105 = icmp eq %struct._XLockPtrs* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %104, i64 0, i32 1
  %108 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %107, align 8
  call void %108(%struct._XDisplay* %0) #6
  br label %109

109:                                              ; preds = %103, %106
  %110 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %111 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %110, align 8
  %112 = icmp eq i32 (%struct._XDisplay*)* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = call i32 %111(%struct._XDisplay* %0) #6
  br label %115

115:                                              ; preds = %113, %109, %94, %90, %14, %20
  %116 = phi i32 [ 0, %20 ], [ 0, %14 ], [ 0, %90 ], [ 0, %94 ], [ %97, %109 ], [ %97, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryAttribute(%struct._XDisplay*, i32, i32, i32, i32*) local_unnamed_addr #0 {
  %6 = tail call i32 @XNVCTRLQueryTargetAttribute(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, i32* %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryTargetAttribute64(%struct._XDisplay*, i32, i32, i32, i32, i64*) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.xnvCtrlQueryAttribute64Reply, align 8
  %10 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %11 = icmp eq %struct._XExtDisplayInfo* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi %struct._XExtDisplayInfo* [ %10, %6 ], [ %13, %12 ]
  %16 = getelementptr inbounds %struct.xnvCtrlQueryAttribute64Reply, %struct.xnvCtrlQueryAttribute64Reply* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds %struct.xnvCtrlQueryAttribute64Reply, %struct.xnvCtrlQueryAttribute64Reply* %9, i64 0, i32 4
  %18 = getelementptr inbounds %struct.xnvCtrlQueryAttribute64Reply, %struct.xnvCtrlQueryAttribute64Reply* %9, i64 0, i32 6
  %19 = icmp eq %struct._XExtDisplayInfo* %15, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  br i1 %19, label %115, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 2
  %22 = load %struct.XExtCodes*, %struct.XExtCodes** %21, align 8
  %23 = icmp eq %struct.XExtCodes* %22, null
  br i1 %23, label %115, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 3
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i8
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %52

30:                                               ; preds = %24
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #6
  store i32 -1431655766, i32* %7, align 4
  %32 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #6
  store i32 -1431655766, i32* %8, align 4
  %33 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %7, i32* nonnull %8) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = load i32, i32* %7, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %36, 1
  br i1 %39, label %46, label %49

40:                                               ; preds = %35
  %41 = load i32, i32* %8, align 4
  %42 = or i32 %41, 1
  %43 = icmp eq i32 %42, 9
  %44 = select i1 %43, i64 3, i64 1
  %45 = icmp sgt i32 %41, 20
  br i1 %45, label %46, label %49

46:                                               ; preds = %40, %38
  %47 = phi i64 [ %44, %40 ], [ 1, %38 ]
  %48 = or i64 %47, 4
  br label %49

49:                                               ; preds = %46, %40, %38, %30
  %50 = phi i64 [ %48, %46 ], [ %44, %40 ], [ 0, %30 ], [ 1, %38 ]
  %51 = inttoptr i64 %50 to i8*
  store i8* %51, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #6
  br label %52

52:                                               ; preds = %49, %24
  %53 = phi i64 [ %50, %49 ], [ %27, %24 ]
  %54 = and i64 %53, 2
  %55 = icmp eq i64 %54, 0
  %56 = select i1 %55, i32 %1, i32 %2
  %57 = select i1 %55, i32 %2, i32 %1
  %58 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %59 = load %struct._XLockPtrs*, %struct._XLockPtrs** %58, align 8
  %60 = icmp eq %struct._XLockPtrs* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %59, i64 0, i32 0
  %63 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %62, align 8
  call void %63(%struct._XDisplay* %0) #6
  br label %64

64:                                               ; preds = %52, %61
  %65 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 2, i64 16) #6
  %66 = load %struct.XExtCodes*, %struct.XExtCodes** %21, align 8
  %67 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = trunc i32 %68 to i8
  store i8 %69, i8* %65, align 4
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  store i8 27, i8* %70, align 1
  %71 = trunc i32 %56 to i16
  %72 = getelementptr inbounds i8, i8* %65, i64 6
  %73 = bitcast i8* %72 to i16*
  store i16 %71, i16* %73, align 2
  %74 = trunc i32 %57 to i16
  %75 = getelementptr inbounds i8, i8* %65, i64 4
  %76 = bitcast i8* %75 to i16*
  store i16 %74, i16* %76, align 4
  %77 = getelementptr inbounds i8, i8* %65, i64 8
  %78 = bitcast i8* %77 to i32*
  store i32 %3, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %65, i64 12
  %80 = bitcast i8* %79 to i32*
  store i32 %4, i32* %80, align 4
  %81 = bitcast %struct.xnvCtrlQueryAttribute64Reply* %9 to %union.xReply*
  %82 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %81, i32 0, i32 1) #6
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %64
  %85 = load %struct._XLockPtrs*, %struct._XLockPtrs** %58, align 8
  %86 = icmp eq %struct._XLockPtrs* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %85, i64 0, i32 1
  %89 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %88, align 8
  call void %89(%struct._XDisplay* %0) #6
  br label %90

90:                                               ; preds = %84, %87
  %91 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %92 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %91, align 8
  %93 = icmp eq i32 (%struct._XDisplay*)* %92, null
  br i1 %93, label %115, label %94

94:                                               ; preds = %90
  %95 = call i32 %92(%struct._XDisplay* %0) #6
  br label %115

96:                                               ; preds = %64
  %97 = load i32, i32* %17, align 8
  %98 = icmp ne i32 %97, 0
  %99 = icmp ne i64* %5, null
  %100 = and i1 %99, %98
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  %102 = load i64, i64* %18, align 8
  store i64 %102, i64* %5, align 8
  br label %103

103:                                              ; preds = %101, %96
  %104 = load %struct._XLockPtrs*, %struct._XLockPtrs** %58, align 8
  %105 = icmp eq %struct._XLockPtrs* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %104, i64 0, i32 1
  %108 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %107, align 8
  call void %108(%struct._XDisplay* %0) #6
  br label %109

109:                                              ; preds = %103, %106
  %110 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %111 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %110, align 8
  %112 = icmp eq i32 (%struct._XDisplay*)* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = call i32 %111(%struct._XDisplay* %0) #6
  br label %115

115:                                              ; preds = %113, %109, %94, %90, %14, %20
  %116 = phi i32 [ 0, %20 ], [ 0, %14 ], [ 0, %90 ], [ 0, %94 ], [ %97, %109 ], [ %97, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryTargetStringAttribute(%struct._XDisplay*, i32, i32, i32, i32, i8**) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.xnvCtrlQueryStringAttributeReply, align 4
  %10 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %11 = icmp eq %struct._XExtDisplayInfo* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi %struct._XExtDisplayInfo* [ %10, %6 ], [ %13, %12 ]
  %16 = getelementptr inbounds %struct.xnvCtrlQueryStringAttributeReply, %struct.xnvCtrlQueryStringAttributeReply* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = getelementptr inbounds %struct.xnvCtrlQueryStringAttributeReply, %struct.xnvCtrlQueryStringAttributeReply* %9, i64 0, i32 3
  %18 = getelementptr inbounds %struct.xnvCtrlQueryStringAttributeReply, %struct.xnvCtrlQueryStringAttributeReply* %9, i64 0, i32 4
  %19 = getelementptr inbounds %struct.xnvCtrlQueryStringAttributeReply, %struct.xnvCtrlQueryStringAttributeReply* %9, i64 0, i32 5
  %20 = icmp eq i8** %5, null
  %21 = icmp eq %struct._XExtDisplayInfo* %15, null
  %22 = or i1 %20, %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 32, i1 false)
  br i1 %22, label %140, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 2
  %25 = load %struct.XExtCodes*, %struct.XExtCodes** %24, align 8
  %26 = icmp eq %struct.XExtCodes* %25, null
  br i1 %26, label %140, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %15, i64 0, i32 3
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %55

33:                                               ; preds = %27
  %34 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  store i32 -1431655766, i32* %7, align 4
  %35 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #6
  store i32 -1431655766, i32* %8, align 4
  %36 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %7, i32* nonnull %8) #6
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %52, label %38

38:                                               ; preds = %33
  %39 = load i32, i32* %7, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = icmp sgt i32 %39, 1
  br i1 %42, label %49, label %52

43:                                               ; preds = %38
  %44 = load i32, i32* %8, align 4
  %45 = or i32 %44, 1
  %46 = icmp eq i32 %45, 9
  %47 = select i1 %46, i64 3, i64 1
  %48 = icmp sgt i32 %44, 20
  br i1 %48, label %49, label %52

49:                                               ; preds = %43, %41
  %50 = phi i64 [ %47, %43 ], [ 1, %41 ]
  %51 = or i64 %50, 4
  br label %52

52:                                               ; preds = %49, %43, %41, %33
  %53 = phi i64 [ %51, %49 ], [ %47, %43 ], [ 0, %33 ], [ 1, %41 ]
  %54 = inttoptr i64 %53 to i8*
  store i8* %54, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  br label %55

55:                                               ; preds = %52, %27
  %56 = phi i64 [ %53, %52 ], [ %30, %27 ]
  %57 = and i64 %56, 2
  %58 = icmp eq i64 %57, 0
  %59 = select i1 %58, i32 %1, i32 %2
  %60 = select i1 %58, i32 %2, i32 %1
  %61 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %62 = load %struct._XLockPtrs*, %struct._XLockPtrs** %61, align 8
  %63 = icmp eq %struct._XLockPtrs* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %62, i64 0, i32 0
  %66 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %65, align 8
  call void %66(%struct._XDisplay* %0) #6
  br label %67

67:                                               ; preds = %55, %64
  %68 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 4, i64 16) #6
  %69 = load %struct.XExtCodes*, %struct.XExtCodes** %24, align 8
  %70 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = trunc i32 %71 to i8
  store i8 %72, i8* %68, align 4
  %73 = getelementptr inbounds i8, i8* %68, i64 1
  store i8 4, i8* %73, align 1
  %74 = trunc i32 %59 to i16
  %75 = getelementptr inbounds i8, i8* %68, i64 6
  %76 = bitcast i8* %75 to i16*
  store i16 %74, i16* %76, align 2
  %77 = trunc i32 %60 to i16
  %78 = getelementptr inbounds i8, i8* %68, i64 4
  %79 = bitcast i8* %78 to i16*
  store i16 %77, i16* %79, align 4
  %80 = getelementptr inbounds i8, i8* %68, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 %3, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %68, i64 12
  %83 = bitcast i8* %82 to i32*
  store i32 %4, i32* %83, align 4
  %84 = bitcast %struct.xnvCtrlQueryStringAttributeReply* %9 to %union.xReply*
  %85 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %84, i32 0, i32 0) #6
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %67
  %88 = load %struct._XLockPtrs*, %struct._XLockPtrs** %61, align 8
  %89 = icmp eq %struct._XLockPtrs* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %88, i64 0, i32 1
  %92 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %91, align 8
  call void %92(%struct._XDisplay* %0) #6
  br label %93

93:                                               ; preds = %87, %90
  %94 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %95 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %94, align 8
  %96 = icmp eq i32 (%struct._XDisplay*)* %95, null
  br i1 %96, label %140, label %97

97:                                               ; preds = %93
  %98 = call i32 %95(%struct._XDisplay* %0) #6
  br label %140

99:                                               ; preds = %67
  %100 = load i32, i32* %17, align 4
  %101 = load i32, i32* %19, align 4
  %102 = and i32 %101, 3
  %103 = load i32, i32* %18, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %99
  %106 = sext i32 %101 to i64
  %107 = call noalias i8* @malloc(i64 %106) #6
  store i8* %107, i8** %5, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %109, label %122

109:                                              ; preds = %99, %105
  %110 = sext i32 %100 to i64
  call void @_XEatData(%struct._XDisplay* %0, i64 %110) #7
  %111 = load %struct._XLockPtrs*, %struct._XLockPtrs** %61, align 8
  %112 = icmp eq %struct._XLockPtrs* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %111, i64 0, i32 1
  %115 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %114, align 8
  call void %115(%struct._XDisplay* %0) #6
  br label %116

116:                                              ; preds = %109, %113
  %117 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %118 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %117, align 8
  %119 = icmp eq i32 (%struct._XDisplay*)* %118, null
  br i1 %119, label %140, label %120

120:                                              ; preds = %116
  %121 = call i32 %118(%struct._XDisplay* %0) #6
  br label %140

122:                                              ; preds = %105
  %123 = call i32 @_XRead(%struct._XDisplay* %0, i8* nonnull %107, i64 %106) #6
  %124 = icmp eq i32 %102, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %122
  %126 = sub nuw nsw i32 4, %102
  %127 = zext i32 %126 to i64
  call void @_XEatData(%struct._XDisplay* %0, i64 %127) #7
  br label %128

128:                                              ; preds = %122, %125
  %129 = load %struct._XLockPtrs*, %struct._XLockPtrs** %61, align 8
  %130 = icmp eq %struct._XLockPtrs* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %129, i64 0, i32 1
  %133 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %132, align 8
  call void %133(%struct._XDisplay* %0) #6
  br label %134

134:                                              ; preds = %128, %131
  %135 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %136 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %135, align 8
  %137 = icmp eq i32 (%struct._XDisplay*)* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = call i32 %136(%struct._XDisplay* %0) #6
  br label %140

140:                                              ; preds = %138, %134, %120, %116, %97, %93, %23, %14
  %141 = phi i32 [ 0, %14 ], [ 0, %23 ], [ 0, %93 ], [ 0, %97 ], [ 0, %116 ], [ 0, %120 ], [ %103, %134 ], [ %103, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %141
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: cold
declare void @_XEatData(%struct._XDisplay*, i64) local_unnamed_addr #4

declare i32 @_XRead(%struct._XDisplay*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryStringAttribute(%struct._XDisplay*, i32, i32, i32, i8**) local_unnamed_addr #0 {
  %6 = tail call i32 @XNVCTRLQueryTargetStringAttribute(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, i8** %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLSetTargetStringAttribute(%struct._XDisplay*, i32, i32, i32, i32, i8*) local_unnamed_addr #0 {
  %7 = alloca %struct.xnvCtrlSetStringAttributeReply, align 4
  %8 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %9 = icmp eq %struct._XExtDisplayInfo* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi %struct._XExtDisplayInfo* [ %8, %6 ], [ %11, %10 ]
  %14 = getelementptr inbounds %struct.xnvCtrlSetStringAttributeReply, %struct.xnvCtrlSetStringAttributeReply* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds %struct.xnvCtrlSetStringAttributeReply, %struct.xnvCtrlSetStringAttributeReply* %7, i64 0, i32 4
  %16 = icmp eq %struct._XExtDisplayInfo* %13, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false)
  br i1 %16, label %98, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %13, i64 0, i32 2
  %19 = load %struct.XExtCodes*, %struct.XExtCodes** %18, align 8
  %20 = icmp eq %struct.XExtCodes* %19, null
  br i1 %20, label %98, label %21

21:                                               ; preds = %17
  %22 = tail call i64 @strlen(i8* %5) #8
  %23 = trunc i64 %22 to i32
  %24 = add i32 %23, 1
  %25 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %26 = load %struct._XLockPtrs*, %struct._XLockPtrs** %25, align 8
  %27 = icmp eq %struct._XLockPtrs* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %26, i64 0, i32 0
  %30 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %29, align 8
  tail call void %30(%struct._XDisplay* %0) #6
  br label %31

31:                                               ; preds = %21, %28
  %32 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 9, i64 20) #6
  %33 = load %struct.XExtCodes*, %struct.XExtCodes** %18, align 8
  %34 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i8
  store i8 %36, i8* %32, align 4
  %37 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 9, i8* %37, align 1
  %38 = trunc i32 %1 to i16
  %39 = getelementptr inbounds i8, i8* %32, i64 6
  %40 = bitcast i8* %39 to i16*
  store i16 %38, i16* %40, align 2
  %41 = trunc i32 %2 to i16
  %42 = getelementptr inbounds i8, i8* %32, i64 4
  %43 = bitcast i8* %42 to i16*
  store i16 %41, i16* %43, align 4
  %44 = getelementptr inbounds i8, i8* %32, i64 8
  %45 = bitcast i8* %44 to i32*
  store i32 %3, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %32, i64 12
  %47 = bitcast i8* %46 to i32*
  store i32 %4, i32* %47, align 4
  %48 = add i32 %23, 4
  %49 = lshr i32 %48, 2
  %50 = getelementptr inbounds i8, i8* %32, i64 2
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = trunc i32 %49 to i16
  %54 = add i16 %52, %53
  store i16 %54, i16* %51, align 2
  %55 = getelementptr inbounds i8, i8* %32, i64 16
  %56 = bitcast i8* %55 to i32*
  store i32 %24, i32* %56, align 4
  %57 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 27
  %58 = load i8*, i8** %57, align 8
  %59 = sext i32 %24 to i64
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 28
  %62 = load i8*, i8** %61, align 8
  %63 = icmp ugt i8* %60, %62
  br i1 %63, label %69, label %64

64:                                               ; preds = %31
  %65 = and i32 %48, -4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %5, i64 %59, i1 false)
  %66 = load i8*, i8** %57, align 8
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  store i8* %68, i8** %57, align 8
  br label %70

69:                                               ; preds = %31
  tail call void @_XSend(%struct._XDisplay* %0, i8* %5, i64 %59) #6
  br label %70

70:                                               ; preds = %69, %64
  %71 = bitcast %struct.xnvCtrlSetStringAttributeReply* %7 to %union.xReply*
  %72 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %71, i32 0, i32 0) #6
  %73 = icmp eq i32 %72, 0
  %74 = load %struct._XLockPtrs*, %struct._XLockPtrs** %25, align 8
  %75 = icmp ne %struct._XLockPtrs* %74, null
  br i1 %73, label %76, label %86

76:                                               ; preds = %70
  br i1 %75, label %77, label %80

77:                                               ; preds = %76
  %78 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %74, i64 0, i32 1
  %79 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %78, align 8
  call void %79(%struct._XDisplay* %0) #6
  br label %80

80:                                               ; preds = %77, %76
  %81 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %82 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %81, align 8
  %83 = icmp eq i32 (%struct._XDisplay*)* %82, null
  br i1 %83, label %98, label %84

84:                                               ; preds = %80
  %85 = call i32 %82(%struct._XDisplay* %0) #6
  br label %98

86:                                               ; preds = %70
  br i1 %75, label %87, label %90

87:                                               ; preds = %86
  %88 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %74, i64 0, i32 1
  %89 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %88, align 8
  call void %89(%struct._XDisplay* %0) #6
  br label %90

90:                                               ; preds = %87, %86
  %91 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %92 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %91, align 8
  %93 = icmp eq i32 (%struct._XDisplay*)* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = call i32 %92(%struct._XDisplay* %0) #6
  br label %96

96:                                               ; preds = %90, %94
  %97 = load i32, i32* %15, align 4
  br label %98

98:                                               ; preds = %84, %80, %12, %17, %96
  %99 = phi i32 [ %97, %96 ], [ 0, %17 ], [ 0, %12 ], [ 0, %80 ], [ 0, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  ret i32 %99
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_XSend(%struct._XDisplay*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLSetStringAttribute(%struct._XDisplay*, i32, i32, i32, i8*) local_unnamed_addr #0 {
  %6 = tail call i32 @XNVCTRLSetTargetStringAttribute(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, i8* %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryValidTargetStringAttributeValues(%struct._XDisplay*, i32, i32, i32, i32, %struct._NVCTRLAttributeValidValues*) local_unnamed_addr #0 {
  %7 = alloca %struct.xnvCtrlQueryValidAttributeValuesReply, align 4
  %8 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %9 = icmp eq %struct._XExtDisplayInfo* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi %struct._XExtDisplayInfo* [ %8, %6 ], [ %11, %10 ]
  %14 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 4
  %16 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 5
  %17 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 9
  %18 = icmp eq %struct._NVCTRLAttributeValidValues* %5, null
  %19 = icmp eq %struct._XExtDisplayInfo* %13, null
  %20 = or i1 %18, %19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false)
  br i1 %20, label %84, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %13, i64 0, i32 2
  %23 = load %struct.XExtCodes*, %struct.XExtCodes** %22, align 8
  %24 = icmp eq %struct.XExtCodes* %23, null
  br i1 %24, label %84, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %27 = load %struct._XLockPtrs*, %struct._XLockPtrs** %26, align 8
  %28 = icmp eq %struct._XLockPtrs* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %27, i64 0, i32 0
  %31 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %30, align 8
  tail call void %31(%struct._XDisplay* %0) #6
  br label %32

32:                                               ; preds = %25, %29
  %33 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 5, i64 16) #6
  %34 = load %struct.XExtCodes*, %struct.XExtCodes** %22, align 8
  %35 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %33, align 4
  %38 = getelementptr inbounds i8, i8* %33, i64 1
  store i8 28, i8* %38, align 1
  %39 = trunc i32 %1 to i16
  %40 = getelementptr inbounds i8, i8* %33, i64 6
  %41 = bitcast i8* %40 to i16*
  store i16 %39, i16* %41, align 2
  %42 = trunc i32 %2 to i16
  %43 = getelementptr inbounds i8, i8* %33, i64 4
  %44 = bitcast i8* %43 to i16*
  store i16 %42, i16* %44, align 4
  %45 = getelementptr inbounds i8, i8* %33, i64 8
  %46 = bitcast i8* %45 to i32*
  store i32 %3, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %33, i64 12
  %48 = bitcast i8* %47 to i32*
  store i32 %4, i32* %48, align 4
  %49 = bitcast %struct.xnvCtrlQueryValidAttributeValuesReply* %7 to %union.xReply*
  %50 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %49, i32 0, i32 1) #6
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %32
  %53 = load %struct._XLockPtrs*, %struct._XLockPtrs** %26, align 8
  %54 = icmp eq %struct._XLockPtrs* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %53, i64 0, i32 1
  %57 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %56, align 8
  call void %57(%struct._XDisplay* %0) #6
  br label %58

58:                                               ; preds = %52, %55
  %59 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %60 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %59, align 8
  %61 = icmp eq i32 (%struct._XDisplay*)* %60, null
  br i1 %61, label %84, label %62

62:                                               ; preds = %58
  %63 = call i32 %60(%struct._XDisplay* %0) #6
  br label %84

64:                                               ; preds = %32
  %65 = load i32, i32* %15, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %64
  %68 = load i32, i32* %16, align 4
  %69 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 0
  store i32 %68, i32* %69, align 8
  %70 = load i32, i32* %17, align 4
  %71 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 2
  store i32 %70, i32* %71, align 8
  br label %72

72:                                               ; preds = %64, %67
  %73 = load %struct._XLockPtrs*, %struct._XLockPtrs** %26, align 8
  %74 = icmp eq %struct._XLockPtrs* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %73, i64 0, i32 1
  %77 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %76, align 8
  call void %77(%struct._XDisplay* %0) #6
  br label %78

78:                                               ; preds = %72, %75
  %79 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %80 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %79, align 8
  %81 = icmp eq i32 (%struct._XDisplay*)* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = call i32 %80(%struct._XDisplay* %0) #6
  br label %84

84:                                               ; preds = %82, %78, %62, %58, %21, %12
  %85 = phi i32 [ 0, %12 ], [ 0, %21 ], [ 0, %58 ], [ 0, %62 ], [ %65, %78 ], [ %65, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryValidTargetAttributeValues(%struct._XDisplay*, i32, i32, i32, i32, %struct._NVCTRLAttributeValidValues*) local_unnamed_addr #0 {
  %7 = alloca %struct.xnvCtrlQueryValidAttributeValuesReply, align 4
  %8 = alloca %struct.xnvCtrlQueryValidAttributeValues64Reply, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %14 = icmp eq %struct._XExtDisplayInfo* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %6
  %16 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %17

17:                                               ; preds = %6, %15
  %18 = phi %struct._XExtDisplayInfo* [ %13, %6 ], [ %16, %15 ]
  %19 = icmp eq %struct._NVCTRLAttributeValidValues* %5, null
  %20 = icmp eq %struct._XExtDisplayInfo* %18, null
  %21 = or i1 %19, %20
  br i1 %21, label %254, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %18, i64 0, i32 2
  %24 = load %struct.XExtCodes*, %struct.XExtCodes** %23, align 8
  %25 = icmp eq %struct.XExtCodes* %24, null
  br i1 %25, label %254, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %18, i64 0, i32 3
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i8
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = and i64 %29, 2
  %34 = icmp eq i64 %33, 0
  %35 = select i1 %34, i32 %1, i32 %2
  %36 = select i1 %34, i32 %2, i32 %1
  br label %87

37:                                               ; preds = %26
  %38 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #6
  store i32 -1431655766, i32* %11, align 4
  %39 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #6
  store i32 -1431655766, i32* %12, align 4
  %40 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %11, i32* nonnull %12) #6
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %37
  %43 = load i32, i32* %11, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = icmp sgt i32 %43, 1
  br i1 %46, label %53, label %56

47:                                               ; preds = %42
  %48 = load i32, i32* %12, align 4
  %49 = or i32 %48, 1
  %50 = icmp eq i32 %49, 9
  %51 = select i1 %50, i64 3, i64 1
  %52 = icmp sgt i32 %48, 20
  br i1 %52, label %53, label %56

53:                                               ; preds = %47, %45
  %54 = phi i64 [ %51, %47 ], [ 1, %45 ]
  %55 = or i64 %54, 4
  br label %56

56:                                               ; preds = %37, %45, %47, %53
  %57 = phi i64 [ %55, %53 ], [ %51, %47 ], [ 0, %37 ], [ 1, %45 ]
  %58 = inttoptr i64 %57 to i8*
  store i8* %58, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #6
  %59 = trunc i64 %57 to i8
  %60 = and i64 %57, 2
  %61 = icmp eq i64 %60, 0
  %62 = select i1 %61, i32 %1, i32 %2
  %63 = select i1 %61, i32 %2, i32 %1
  %64 = icmp slt i8 %59, 0
  br i1 %64, label %65, label %87

65:                                               ; preds = %56
  %66 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #6
  store i32 -1431655766, i32* %9, align 4
  %67 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #6
  store i32 -1431655766, i32* %10, align 4
  %68 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %9, i32* nonnull %10) #6
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %65
  %71 = load i32, i32* %9, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = icmp sgt i32 %71, 1
  br i1 %74, label %81, label %84

75:                                               ; preds = %70
  %76 = load i32, i32* %10, align 4
  %77 = or i32 %76, 1
  %78 = icmp eq i32 %77, 9
  %79 = select i1 %78, i64 3, i64 1
  %80 = icmp sgt i32 %76, 20
  br i1 %80, label %81, label %84

81:                                               ; preds = %75, %73
  %82 = phi i64 [ %79, %75 ], [ 1, %73 ]
  %83 = or i64 %82, 4
  br label %84

84:                                               ; preds = %81, %75, %73, %65
  %85 = phi i64 [ %83, %81 ], [ %79, %75 ], [ 0, %65 ], [ 1, %73 ]
  %86 = inttoptr i64 %85 to i8*
  store i8* %86, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #6
  br label %87

87:                                               ; preds = %32, %56, %84
  %88 = phi i32 [ %63, %84 ], [ %63, %56 ], [ %36, %32 ]
  %89 = phi i32 [ %62, %84 ], [ %62, %56 ], [ %35, %32 ]
  %90 = phi i64 [ %85, %84 ], [ %57, %56 ], [ %29, %32 ]
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %254, label %93

93:                                               ; preds = %87
  %94 = and i64 %90, 4
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %174, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValues64Reply, %struct.xnvCtrlQueryValidAttributeValues64Reply* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %97) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 48, i1 false) #6
  %98 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %99 = load %struct._XLockPtrs*, %struct._XLockPtrs** %98, align 8
  %100 = icmp eq %struct._XLockPtrs* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %99, i64 0, i32 0
  %103 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %102, align 8
  call void %103(%struct._XDisplay* %0) #6
  br label %104

104:                                              ; preds = %101, %96
  %105 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 5, i64 16) #6
  %106 = load %struct.XExtCodes*, %struct.XExtCodes** %23, align 8
  %107 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %106, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = trunc i32 %108 to i8
  store i8 %109, i8* %105, align 4
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  store i8 26, i8* %110, align 1
  %111 = trunc i32 %89 to i16
  %112 = getelementptr inbounds i8, i8* %105, i64 6
  %113 = bitcast i8* %112 to i16*
  store i16 %111, i16* %113, align 2
  %114 = trunc i32 %88 to i16
  %115 = getelementptr inbounds i8, i8* %105, i64 4
  %116 = bitcast i8* %115 to i16*
  store i16 %114, i16* %116, align 4
  %117 = getelementptr inbounds i8, i8* %105, i64 8
  %118 = bitcast i8* %117 to i32*
  store i32 %3, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %105, i64 12
  %120 = bitcast i8* %119 to i32*
  store i32 %4, i32* %120, align 4
  %121 = bitcast %struct.xnvCtrlQueryValidAttributeValues64Reply* %8 to %union.xReply*
  %122 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %121, i32 4, i32 1) #6
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %104
  %125 = load %struct._XLockPtrs*, %struct._XLockPtrs** %98, align 8
  %126 = icmp eq %struct._XLockPtrs* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %125, i64 0, i32 1
  %129 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %128, align 8
  call void %129(%struct._XDisplay* %0) #6
  br label %130

130:                                              ; preds = %127, %124
  %131 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %132 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %131, align 8
  %133 = icmp eq i32 (%struct._XDisplay*)* %132, null
  br i1 %133, label %172, label %134

134:                                              ; preds = %130
  %135 = call i32 %132(%struct._XDisplay* %0) #6
  br label %172

136:                                              ; preds = %104
  %137 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValues64Reply, %struct.xnvCtrlQueryValidAttributeValues64Reply* %8, i64 0, i32 4
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %160, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValues64Reply, %struct.xnvCtrlQueryValidAttributeValues64Reply* %8, i64 0, i32 5
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 0
  store i32 %142, i32* %143, align 8
  switch i32 %142, label %156 [
    i32 4, label %144
    i32 5, label %150
  ]

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValues64Reply, %struct.xnvCtrlQueryValidAttributeValues64Reply* %8, i64 0, i32 6
  %146 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 1, i32 0, i32 0
  %147 = bitcast i64* %145 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8
  %149 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %149, align 8
  br label %156

150:                                              ; preds = %140
  %151 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValues64Reply, %struct.xnvCtrlQueryValidAttributeValues64Reply* %8, i64 0, i32 8
  %152 = load i64, i64* %151, align 8
  %153 = trunc i64 %152 to i32
  %154 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 1
  %155 = bitcast %union.anon.31* %154 to i32*
  store i32 %153, i32* %155, align 8
  br label %156

156:                                              ; preds = %150, %144, %140
  %157 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValues64Reply, %struct.xnvCtrlQueryValidAttributeValues64Reply* %8, i64 0, i32 9
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 2
  store i32 %158, i32* %159, align 8
  br label %160

160:                                              ; preds = %156, %136
  %161 = load %struct._XLockPtrs*, %struct._XLockPtrs** %98, align 8
  %162 = icmp eq %struct._XLockPtrs* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %161, i64 0, i32 1
  %165 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %164, align 8
  call void %165(%struct._XDisplay* %0) #6
  br label %166

166:                                              ; preds = %163, %160
  %167 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %168 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %167, align 8
  %169 = icmp eq i32 (%struct._XDisplay*)* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %166
  %171 = call i32 %168(%struct._XDisplay* %0) #6
  br label %172

172:                                              ; preds = %130, %134, %166, %170
  %173 = phi i32 [ 0, %130 ], [ 0, %134 ], [ %138, %166 ], [ %138, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %97) #6
  br label %254

174:                                              ; preds = %93
  %175 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %175) #6
  %176 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 4
  %177 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 5
  %178 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 6
  %179 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 7
  %180 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 8
  %181 = getelementptr inbounds %struct.xnvCtrlQueryValidAttributeValuesReply, %struct.xnvCtrlQueryValidAttributeValuesReply* %7, i64 0, i32 9
  %182 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %175, i8 -86, i64 32, i1 false) #6
  %183 = load %struct._XLockPtrs*, %struct._XLockPtrs** %182, align 8
  %184 = icmp eq %struct._XLockPtrs* %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %174
  %186 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %183, i64 0, i32 0
  %187 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %186, align 8
  call void %187(%struct._XDisplay* %0) #6
  br label %188

188:                                              ; preds = %185, %174
  %189 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 5, i64 16) #6
  %190 = load %struct.XExtCodes*, %struct.XExtCodes** %23, align 8
  %191 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %190, i64 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = trunc i32 %192 to i8
  store i8 %193, i8* %189, align 4
  %194 = getelementptr inbounds i8, i8* %189, i64 1
  store i8 5, i8* %194, align 1
  %195 = trunc i32 %89 to i16
  %196 = getelementptr inbounds i8, i8* %189, i64 6
  %197 = bitcast i8* %196 to i16*
  store i16 %195, i16* %197, align 2
  %198 = trunc i32 %88 to i16
  %199 = getelementptr inbounds i8, i8* %189, i64 4
  %200 = bitcast i8* %199 to i16*
  store i16 %198, i16* %200, align 4
  %201 = getelementptr inbounds i8, i8* %189, i64 8
  %202 = bitcast i8* %201 to i32*
  store i32 %3, i32* %202, align 4
  %203 = getelementptr inbounds i8, i8* %189, i64 12
  %204 = bitcast i8* %203 to i32*
  store i32 %4, i32* %204, align 4
  %205 = bitcast %struct.xnvCtrlQueryValidAttributeValuesReply* %7 to %union.xReply*
  %206 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %205, i32 0, i32 1) #6
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %188
  %209 = load %struct._XLockPtrs*, %struct._XLockPtrs** %182, align 8
  %210 = icmp eq %struct._XLockPtrs* %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %209, i64 0, i32 1
  %213 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %212, align 8
  call void %213(%struct._XDisplay* %0) #6
  br label %214

214:                                              ; preds = %211, %208
  %215 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %216 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %215, align 8
  %217 = icmp eq i32 (%struct._XDisplay*)* %216, null
  br i1 %217, label %252, label %218

218:                                              ; preds = %214
  %219 = call i32 %216(%struct._XDisplay* %0) #6
  br label %252

220:                                              ; preds = %188
  %221 = load i32, i32* %176, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %240, label %223

223:                                              ; preds = %220
  %224 = load i32, i32* %177, align 4
  %225 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 0
  store i32 %224, i32* %225, align 8
  switch i32 %224, label %237 [
    i32 4, label %226
    i32 5, label %233
  ]

226:                                              ; preds = %223
  %227 = load i32, i32* %178, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 1, i32 0, i32 0
  store i64 %228, i64* %229, align 8
  %230 = load i32, i32* %179, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 1, i32 0, i32 1
  store i64 %231, i64* %232, align 8
  br label %237

233:                                              ; preds = %223
  %234 = load i32, i32* %180, align 4
  %235 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 1
  %236 = bitcast %union.anon.31* %235 to i32*
  store i32 %234, i32* %236, align 8
  br label %237

237:                                              ; preds = %233, %226, %223
  %238 = load i32, i32* %181, align 4
  %239 = getelementptr inbounds %struct._NVCTRLAttributeValidValues, %struct._NVCTRLAttributeValidValues* %5, i64 0, i32 2
  store i32 %238, i32* %239, align 8
  br label %240

240:                                              ; preds = %237, %220
  %241 = load %struct._XLockPtrs*, %struct._XLockPtrs** %182, align 8
  %242 = icmp eq %struct._XLockPtrs* %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %241, i64 0, i32 1
  %245 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %244, align 8
  call void %245(%struct._XDisplay* %0) #6
  br label %246

246:                                              ; preds = %243, %240
  %247 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %248 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %247, align 8
  %249 = icmp eq i32 (%struct._XDisplay*)* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = call i32 %248(%struct._XDisplay* %0) #6
  br label %252

252:                                              ; preds = %214, %218, %246, %250
  %253 = phi i32 [ 0, %214 ], [ 0, %218 ], [ %221, %246 ], [ %221, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %175) #6
  br label %254

254:                                              ; preds = %172, %252, %87, %22, %17
  %255 = phi i32 [ 0, %17 ], [ 0, %22 ], [ 0, %87 ], [ %173, %172 ], [ %253, %252 ]
  ret i32 %255
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryValidAttributeValues(%struct._XDisplay*, i32, i32, i32, %struct._NVCTRLAttributeValidValues*) local_unnamed_addr #0 {
  %6 = tail call i32 @XNVCTRLQueryValidTargetAttributeValues(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, %struct._NVCTRLAttributeValidValues* %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryAttributePermissions(%struct._XDisplay*, i32, %struct._NVCTRLAttributePermissions*) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @QueryAttributePermissionsInternal(%struct._XDisplay* %0, i32 %1, %struct._NVCTRLAttributePermissions* %2, i32 29)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @QueryAttributePermissionsInternal(%struct._XDisplay*, i32, %struct._NVCTRLAttributePermissions*, i32) unnamed_addr #0 {
  %5 = alloca %struct.xnvCtrlQueryAttributePermissionsReply, align 4
  %6 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %7 = icmp eq %struct._XExtDisplayInfo* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.xnvCtrlQueryAttributePermissionsReply, %struct.xnvCtrlQueryAttributePermissionsReply* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 36, i1 false)
  br label %14

10:                                               ; preds = %4
  %11 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %12 = getelementptr inbounds %struct.xnvCtrlQueryAttributePermissionsReply, %struct.xnvCtrlQueryAttributePermissionsReply* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 36, i1 false)
  %13 = icmp eq %struct._XExtDisplayInfo* %11, null
  br i1 %13, label %77, label %14

14:                                               ; preds = %8, %10
  %15 = phi i8* [ %9, %8 ], [ %12, %10 ]
  %16 = phi %struct._XExtDisplayInfo* [ %6, %8 ], [ %11, %10 ]
  %17 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %16, i64 0, i32 2
  %18 = load %struct.XExtCodes*, %struct.XExtCodes** %17, align 8
  %19 = icmp eq %struct.XExtCodes* %18, null
  br i1 %19, label %77, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %22 = load %struct._XLockPtrs*, %struct._XLockPtrs** %21, align 8
  %23 = icmp eq %struct._XLockPtrs* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %22, i64 0, i32 0
  %26 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %25, align 8
  tail call void %26(%struct._XDisplay* %0) #6
  br label %27

27:                                               ; preds = %20, %24
  %28 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 29, i64 8) #6
  %29 = load %struct.XExtCodes*, %struct.XExtCodes** %17, align 8
  %30 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %28, align 4
  %33 = trunc i32 %3 to i8
  %34 = getelementptr inbounds i8, i8* %28, i64 1
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %28, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %1, i32* %36, align 4
  %37 = bitcast %struct.xnvCtrlQueryAttributePermissionsReply* %5 to %union.xReply*
  %38 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %37, i32 0, i32 1) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %27
  %41 = load %struct._XLockPtrs*, %struct._XLockPtrs** %21, align 8
  %42 = icmp eq %struct._XLockPtrs* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %41, i64 0, i32 1
  %45 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %44, align 8
  call void %45(%struct._XDisplay* %0) #6
  br label %46

46:                                               ; preds = %40, %43
  %47 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %48 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %47, align 8
  %49 = icmp eq i32 (%struct._XDisplay*)* %48, null
  br i1 %49, label %77, label %50

50:                                               ; preds = %46
  %51 = call i32 %48(%struct._XDisplay* %0) #6
  br label %77

52:                                               ; preds = %27
  %53 = getelementptr inbounds %struct.xnvCtrlQueryAttributePermissionsReply, %struct.xnvCtrlQueryAttributePermissionsReply* %5, i64 0, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 0
  %56 = icmp ne %struct._NVCTRLAttributePermissions* %2, null
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.xnvCtrlQueryAttributePermissionsReply, %struct.xnvCtrlQueryAttributePermissionsReply* %5, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct._NVCTRLAttributePermissions, %struct._NVCTRLAttributePermissions* %2, i64 0, i32 0
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.xnvCtrlQueryAttributePermissionsReply, %struct.xnvCtrlQueryAttributePermissionsReply* %5, i64 0, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct._NVCTRLAttributePermissions, %struct._NVCTRLAttributePermissions* %2, i64 0, i32 1
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %58, %52
  %66 = load %struct._XLockPtrs*, %struct._XLockPtrs** %21, align 8
  %67 = icmp eq %struct._XLockPtrs* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %66, i64 0, i32 1
  %70 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %69, align 8
  call void %70(%struct._XDisplay* %0) #6
  br label %71

71:                                               ; preds = %65, %68
  %72 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %73 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %72, align 8
  %74 = icmp eq i32 (%struct._XDisplay*)* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = call i32 %73(%struct._XDisplay* %0) #6
  br label %77

77:                                               ; preds = %75, %71, %50, %46, %10, %14
  %78 = phi i8* [ %15, %14 ], [ %12, %10 ], [ %15, %46 ], [ %15, %50 ], [ %15, %71 ], [ %15, %75 ]
  %79 = phi i32 [ 0, %14 ], [ 0, %10 ], [ 0, %46 ], [ 0, %50 ], [ %54, %71 ], [ %54, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* %78) #6
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryStringAttributePermissions(%struct._XDisplay*, i32, %struct._NVCTRLAttributePermissions*) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @QueryAttributePermissionsInternal(%struct._XDisplay* %0, i32 %1, %struct._NVCTRLAttributePermissions* %2, i32 30)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryBinaryDataAttributePermissions(%struct._XDisplay*, i32, %struct._NVCTRLAttributePermissions*) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @QueryAttributePermissionsInternal(%struct._XDisplay* %0, i32 %1, %struct._NVCTRLAttributePermissions* %2, i32 31)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryStringOperationAttributePermissions(%struct._XDisplay*, i32, %struct._NVCTRLAttributePermissions*) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @QueryAttributePermissionsInternal(%struct._XDisplay* %0, i32 %1, %struct._NVCTRLAttributePermissions* %2, i32 32)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @XNVCTRLSetGvoColorConversion(%struct._XDisplay*, i32, [3 x float]* nocapture readonly, float* nocapture readonly, float* nocapture readonly) local_unnamed_addr #0 {
  %6 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %7 = icmp eq %struct._XExtDisplayInfo* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %10 = icmp eq %struct._XExtDisplayInfo* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %5, %8
  %12 = phi %struct._XExtDisplayInfo* [ %9, %8 ], [ %6, %5 ]
  %13 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %12, i64 0, i32 2
  %14 = load %struct.XExtCodes*, %struct.XExtCodes** %13, align 8
  %15 = icmp eq %struct.XExtCodes* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %11, %8
  %17 = tail call i32 @XMissingExtension(%struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #6
  br label %117

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %20 = load %struct._XLockPtrs*, %struct._XLockPtrs** %19, align 8
  %21 = icmp eq %struct._XLockPtrs* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %20, i64 0, i32 0
  %24 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %23, align 8
  tail call void %24(%struct._XDisplay* %0) #6
  br label %25

25:                                               ; preds = %18, %22
  %26 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 21, i64 68) #6
  %27 = load %struct.XExtCodes*, %struct.XExtCodes** %13, align 8
  %28 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %26, align 4
  %31 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 21, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %26, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 %1, i32* %33, align 4
  %34 = bitcast [3 x float]* %2 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i8, i8* %26, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds i8, i8* %26, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 2
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i8, i8* %26, i64 16
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 4
  %48 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 1
  %49 = bitcast [3 x float]* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i8, i8* %26, i64 20
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 1, i64 1
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds i8, i8* %26, i64 24
  %57 = bitcast i8* %56 to i32*
  store i32 %55, i32* %57, align 4
  %58 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 1, i64 2
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i8, i8* %26, i64 28
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  %63 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 2
  %64 = bitcast [3 x float]* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds i8, i8* %26, i64 32
  %67 = bitcast i8* %66 to i32*
  store i32 %65, i32* %67, align 4
  %68 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 2, i64 1
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds i8, i8* %26, i64 36
  %72 = bitcast i8* %71 to i32*
  store i32 %70, i32* %72, align 4
  %73 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 2, i64 2
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds i8, i8* %26, i64 40
  %77 = bitcast i8* %76 to i32*
  store i32 %75, i32* %77, align 4
  %78 = bitcast float* %3 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds i8, i8* %26, i64 44
  %81 = bitcast i8* %80 to i32*
  store i32 %79, i32* %81, align 4
  %82 = getelementptr inbounds float, float* %3, i64 1
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i8, i8* %26, i64 48
  %86 = bitcast i8* %85 to i32*
  store i32 %84, i32* %86, align 4
  %87 = getelementptr inbounds float, float* %3, i64 2
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds i8, i8* %26, i64 52
  %91 = bitcast i8* %90 to i32*
  store i32 %89, i32* %91, align 4
  %92 = bitcast float* %4 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds i8, i8* %26, i64 56
  %95 = bitcast i8* %94 to i32*
  store i32 %93, i32* %95, align 4
  %96 = getelementptr inbounds float, float* %4, i64 1
  %97 = bitcast float* %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds i8, i8* %26, i64 60
  %100 = bitcast i8* %99 to i32*
  store i32 %98, i32* %100, align 4
  %101 = getelementptr inbounds float, float* %4, i64 2
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds i8, i8* %26, i64 64
  %105 = bitcast i8* %104 to i32*
  store i32 %103, i32* %105, align 4
  %106 = load %struct._XLockPtrs*, %struct._XLockPtrs** %19, align 8
  %107 = icmp eq %struct._XLockPtrs* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %25
  %109 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %106, i64 0, i32 1
  %110 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %109, align 8
  tail call void %110(%struct._XDisplay* %0) #6
  br label %111

111:                                              ; preds = %25, %108
  %112 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %113 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %112, align 8
  %114 = icmp eq i32 (%struct._XDisplay*)* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = tail call i32 %113(%struct._XDisplay* %0) #6
  br label %117

117:                                              ; preds = %115, %111, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryGvoColorConversion(%struct._XDisplay*, i32, [3 x float]*, float*, float*) local_unnamed_addr #0 {
  %6 = alloca %struct.xnvCtrlQueryGvoColorConversionReply, align 4
  %7 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %8 = icmp eq %struct._XExtDisplayInfo* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.xnvCtrlQueryGvoColorConversionReply, %struct.xnvCtrlQueryGvoColorConversionReply* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -86, i64 32, i1 false)
  br label %15

11:                                               ; preds = %5
  %12 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %13 = getelementptr inbounds %struct.xnvCtrlQueryGvoColorConversionReply, %struct.xnvCtrlQueryGvoColorConversionReply* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #6
  %14 = icmp eq %struct._XExtDisplayInfo* %12, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false)
  br i1 %14, label %70, label %15

15:                                               ; preds = %9, %11
  %16 = phi i8* [ %10, %9 ], [ %13, %11 ]
  %17 = phi %struct._XExtDisplayInfo* [ %7, %9 ], [ %12, %11 ]
  %18 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %17, i64 0, i32 2
  %19 = load %struct.XExtCodes*, %struct.XExtCodes** %18, align 8
  %20 = icmp eq %struct.XExtCodes* %19, null
  br i1 %20, label %70, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %23 = load %struct._XLockPtrs*, %struct._XLockPtrs** %22, align 8
  %24 = icmp eq %struct._XLockPtrs* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %23, i64 0, i32 0
  %27 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %26, align 8
  tail call void %27(%struct._XDisplay* %0) #6
  br label %28

28:                                               ; preds = %21, %25
  %29 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 22, i64 8) #6
  %30 = load %struct.XExtCodes*, %struct.XExtCodes** %18, align 8
  %31 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %30, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %29, align 4
  %34 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 22, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %29, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %1, i32* %36, align 4
  %37 = bitcast %struct.xnvCtrlQueryGvoColorConversionReply* %6 to %union.xReply*
  %38 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %37, i32 0, i32 0) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %28
  %41 = load %struct._XLockPtrs*, %struct._XLockPtrs** %22, align 8
  %42 = icmp eq %struct._XLockPtrs* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %41, i64 0, i32 1
  %45 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %44, align 8
  call void %45(%struct._XDisplay* %0) #6
  br label %46

46:                                               ; preds = %40, %43
  %47 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %48 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %47, align 8
  %49 = icmp eq i32 (%struct._XDisplay*)* %48, null
  br i1 %49, label %70, label %50

50:                                               ; preds = %46
  %51 = call i32 %48(%struct._XDisplay* %0) #6
  br label %70

52:                                               ; preds = %28
  %53 = bitcast [3 x float]* %2 to i8*
  %54 = call i32 @_XRead(%struct._XDisplay* %0, i8* %53, i64 36) #6
  %55 = bitcast float* %3 to i8*
  %56 = call i32 @_XRead(%struct._XDisplay* %0, i8* %55, i64 12) #6
  %57 = bitcast float* %4 to i8*
  %58 = call i32 @_XRead(%struct._XDisplay* %0, i8* %57, i64 12) #6
  %59 = load %struct._XLockPtrs*, %struct._XLockPtrs** %22, align 8
  %60 = icmp eq %struct._XLockPtrs* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %59, i64 0, i32 1
  %63 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %62, align 8
  call void %63(%struct._XDisplay* %0) #6
  br label %64

64:                                               ; preds = %52, %61
  %65 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %66 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %65, align 8
  %67 = icmp eq i32 (%struct._XDisplay*)* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = call i32 %66(%struct._XDisplay* %0) #6
  br label %70

70:                                               ; preds = %68, %64, %50, %46, %11, %15
  %71 = phi i8* [ %16, %15 ], [ %13, %11 ], [ %16, %46 ], [ %16, %50 ], [ %16, %64 ], [ %16, %68 ]
  %72 = phi i32 [ 0, %15 ], [ 0, %11 ], [ 0, %46 ], [ 0, %50 ], [ 1, %64 ], [ 1, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #6
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCtrlSelectTargetNotify(%struct._XDisplay*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %6 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %7 = icmp eq %struct._XExtDisplayInfo* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %10 = icmp eq %struct._XExtDisplayInfo* %9, null
  br i1 %10, label %53, label %11

11:                                               ; preds = %5, %8
  %12 = phi %struct._XExtDisplayInfo* [ %9, %8 ], [ %6, %5 ]
  %13 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %12, i64 0, i32 2
  %14 = load %struct.XExtCodes*, %struct.XExtCodes** %13, align 8
  %15 = icmp eq %struct.XExtCodes* %14, null
  br i1 %15, label %53, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %18 = load %struct._XLockPtrs*, %struct._XLockPtrs** %17, align 8
  %19 = icmp eq %struct._XLockPtrs* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %18, i64 0, i32 0
  %22 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %21, align 8
  tail call void %22(%struct._XDisplay* %0) #6
  br label %23

23:                                               ; preds = %16, %20
  %24 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 23, i64 12) #6
  %25 = load %struct.XExtCodes*, %struct.XExtCodes** %13, align 8
  %26 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %24, align 2
  %29 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 23, i8* %29, align 1
  %30 = trunc i32 %1 to i16
  %31 = getelementptr inbounds i8, i8* %24, i64 4
  %32 = bitcast i8* %31 to i16*
  store i16 %30, i16* %32, align 2
  %33 = trunc i32 %2 to i16
  %34 = getelementptr inbounds i8, i8* %24, i64 6
  %35 = bitcast i8* %34 to i16*
  store i16 %33, i16* %35, align 2
  %36 = trunc i32 %3 to i16
  %37 = getelementptr inbounds i8, i8* %24, i64 8
  %38 = bitcast i8* %37 to i16*
  store i16 %36, i16* %38, align 2
  %39 = trunc i32 %4 to i16
  %40 = getelementptr inbounds i8, i8* %24, i64 10
  %41 = bitcast i8* %40 to i16*
  store i16 %39, i16* %41, align 2
  %42 = load %struct._XLockPtrs*, %struct._XLockPtrs** %17, align 8
  %43 = icmp eq %struct._XLockPtrs* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %23
  %45 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %42, i64 0, i32 1
  %46 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %45, align 8
  tail call void %46(%struct._XDisplay* %0) #6
  br label %47

47:                                               ; preds = %23, %44
  %48 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %49 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %48, align 8
  %50 = icmp eq i32 (%struct._XDisplay*)* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = tail call i32 %49(%struct._XDisplay* %0) #6
  br label %53

53:                                               ; preds = %51, %47, %8, %11
  %54 = phi i32 [ 0, %11 ], [ 0, %8 ], [ 1, %47 ], [ 1, %51 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCtrlSelectNotify(%struct._XDisplay*, i32, i32, i32) local_unnamed_addr #0 {
  %5 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %6 = icmp eq %struct._XExtDisplayInfo* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %9 = icmp eq %struct._XExtDisplayInfo* %8, null
  br i1 %9, label %48, label %10

10:                                               ; preds = %4, %7
  %11 = phi %struct._XExtDisplayInfo* [ %8, %7 ], [ %5, %4 ]
  %12 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %11, i64 0, i32 2
  %13 = load %struct.XExtCodes*, %struct.XExtCodes** %12, align 8
  %14 = icmp eq %struct.XExtCodes* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %17 = load %struct._XLockPtrs*, %struct._XLockPtrs** %16, align 8
  %18 = icmp eq %struct._XLockPtrs* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %17, i64 0, i32 0
  %21 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %20, align 8
  tail call void %21(%struct._XDisplay* %0) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = tail call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 6, i64 12) #6
  %24 = load %struct.XExtCodes*, %struct.XExtCodes** %12, align 8
  %25 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %23, align 4
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  store i8 6, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %23, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %1, i32* %30, align 4
  %31 = trunc i32 %2 to i16
  %32 = getelementptr inbounds i8, i8* %23, i64 8
  %33 = bitcast i8* %32 to i16*
  store i16 %31, i16* %33, align 4
  %34 = trunc i32 %3 to i16
  %35 = getelementptr inbounds i8, i8* %23, i64 10
  %36 = bitcast i8* %35 to i16*
  store i16 %34, i16* %36, align 2
  %37 = load %struct._XLockPtrs*, %struct._XLockPtrs** %16, align 8
  %38 = icmp eq %struct._XLockPtrs* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %22
  %40 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %37, i64 0, i32 1
  %41 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %40, align 8
  tail call void %41(%struct._XDisplay* %0) #6
  br label %42

42:                                               ; preds = %22, %39
  %43 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %44 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %43, align 8
  %45 = icmp eq i32 (%struct._XDisplay*)* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i32 %44(%struct._XDisplay* %0) #6
  br label %48

48:                                               ; preds = %46, %42, %7, %10
  %49 = phi i32 [ 0, %10 ], [ 0, %7 ], [ 1, %42 ], [ 1, %46 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryTargetBinaryData(%struct._XDisplay*, i32, i32, i32, i32, i8**, i32*) local_unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.xnvCtrlQueryBinaryDataReply, align 4
  %11 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %12 = icmp eq %struct._XExtDisplayInfo* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %15

15:                                               ; preds = %7, %13
  %16 = phi %struct._XExtDisplayInfo* [ %11, %7 ], [ %14, %13 ]
  %17 = getelementptr inbounds %struct.xnvCtrlQueryBinaryDataReply, %struct.xnvCtrlQueryBinaryDataReply* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  %18 = getelementptr inbounds %struct.xnvCtrlQueryBinaryDataReply, %struct.xnvCtrlQueryBinaryDataReply* %10, i64 0, i32 3
  %19 = getelementptr inbounds %struct.xnvCtrlQueryBinaryDataReply, %struct.xnvCtrlQueryBinaryDataReply* %10, i64 0, i32 4
  %20 = getelementptr inbounds %struct.xnvCtrlQueryBinaryDataReply, %struct.xnvCtrlQueryBinaryDataReply* %10, i64 0, i32 5
  %21 = icmp eq i8** %5, null
  %22 = icmp eq %struct._XExtDisplayInfo* %16, null
  %23 = or i1 %21, %22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  br i1 %23, label %144, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %16, i64 0, i32 2
  %26 = load %struct.XExtCodes*, %struct.XExtCodes** %25, align 8
  %27 = icmp eq %struct.XExtCodes* %26, null
  br i1 %27, label %144, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %16, i64 0, i32 3
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i8
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %56

34:                                               ; preds = %28
  %35 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #6
  store i32 -1431655766, i32* %8, align 4
  %36 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #6
  store i32 -1431655766, i32* %9, align 4
  %37 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %8, i32* nonnull %9) #6
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %34
  %40 = load i32, i32* %8, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = icmp sgt i32 %40, 1
  br i1 %43, label %50, label %53

44:                                               ; preds = %39
  %45 = load i32, i32* %9, align 4
  %46 = or i32 %45, 1
  %47 = icmp eq i32 %46, 9
  %48 = select i1 %47, i64 3, i64 1
  %49 = icmp sgt i32 %45, 20
  br i1 %49, label %50, label %53

50:                                               ; preds = %44, %42
  %51 = phi i64 [ %48, %44 ], [ 1, %42 ]
  %52 = or i64 %51, 4
  br label %53

53:                                               ; preds = %50, %44, %42, %34
  %54 = phi i64 [ %52, %50 ], [ %48, %44 ], [ 0, %34 ], [ 1, %42 ]
  %55 = inttoptr i64 %54 to i8*
  store i8* %55, i8** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #6
  br label %56

56:                                               ; preds = %53, %28
  %57 = phi i64 [ %54, %53 ], [ %31, %28 ]
  %58 = and i64 %57, 2
  %59 = icmp eq i64 %58, 0
  %60 = select i1 %59, i32 %1, i32 %2
  %61 = select i1 %59, i32 %2, i32 %1
  %62 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %63 = load %struct._XLockPtrs*, %struct._XLockPtrs** %62, align 8
  %64 = icmp eq %struct._XLockPtrs* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %63, i64 0, i32 0
  %67 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %66, align 8
  call void %67(%struct._XDisplay* %0) #6
  br label %68

68:                                               ; preds = %56, %65
  %69 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 20, i64 16) #6
  %70 = load %struct.XExtCodes*, %struct.XExtCodes** %25, align 8
  %71 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = trunc i32 %72 to i8
  store i8 %73, i8* %69, align 4
  %74 = getelementptr inbounds i8, i8* %69, i64 1
  store i8 20, i8* %74, align 1
  %75 = trunc i32 %60 to i16
  %76 = getelementptr inbounds i8, i8* %69, i64 6
  %77 = bitcast i8* %76 to i16*
  store i16 %75, i16* %77, align 2
  %78 = trunc i32 %61 to i16
  %79 = getelementptr inbounds i8, i8* %69, i64 4
  %80 = bitcast i8* %79 to i16*
  store i16 %78, i16* %80, align 4
  %81 = getelementptr inbounds i8, i8* %69, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 %3, i32* %82, align 4
  %83 = getelementptr inbounds i8, i8* %69, i64 12
  %84 = bitcast i8* %83 to i32*
  store i32 %4, i32* %84, align 4
  %85 = bitcast %struct.xnvCtrlQueryBinaryDataReply* %10 to %union.xReply*
  %86 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %85, i32 0, i32 0) #6
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %68
  %89 = load %struct._XLockPtrs*, %struct._XLockPtrs** %62, align 8
  %90 = icmp eq %struct._XLockPtrs* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %89, i64 0, i32 1
  %93 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %92, align 8
  call void %93(%struct._XDisplay* %0) #6
  br label %94

94:                                               ; preds = %88, %91
  %95 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %96 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %95, align 8
  %97 = icmp eq i32 (%struct._XDisplay*)* %96, null
  br i1 %97, label %144, label %98

98:                                               ; preds = %94
  %99 = call i32 %96(%struct._XDisplay* %0) #6
  br label %144

100:                                              ; preds = %68
  %101 = load i32, i32* %18, align 4
  %102 = load i32, i32* %20, align 4
  %103 = and i32 %102, 3
  %104 = load i32, i32* %19, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %100
  %107 = sext i32 %102 to i64
  %108 = call noalias i8* @malloc(i64 %107) #6
  store i8* %108, i8** %5, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %123

110:                                              ; preds = %100, %106
  %111 = sext i32 %101 to i64
  call void @_XEatData(%struct._XDisplay* %0, i64 %111) #7
  %112 = load %struct._XLockPtrs*, %struct._XLockPtrs** %62, align 8
  %113 = icmp eq %struct._XLockPtrs* %112, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %112, i64 0, i32 1
  %116 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %115, align 8
  call void %116(%struct._XDisplay* %0) #6
  br label %117

117:                                              ; preds = %110, %114
  %118 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %119 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %118, align 8
  %120 = icmp eq i32 (%struct._XDisplay*)* %119, null
  br i1 %120, label %144, label %121

121:                                              ; preds = %117
  %122 = call i32 %119(%struct._XDisplay* %0) #6
  br label %144

123:                                              ; preds = %106
  %124 = call i32 @_XRead(%struct._XDisplay* %0, i8* nonnull %108, i64 %107) #6
  %125 = icmp eq i32 %103, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %123
  %127 = sub nuw nsw i32 4, %103
  %128 = zext i32 %127 to i64
  call void @_XEatData(%struct._XDisplay* %0, i64 %128) #7
  br label %129

129:                                              ; preds = %123, %126
  %130 = icmp eq i32* %6, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %129
  store i32 %102, i32* %6, align 4
  br label %132

132:                                              ; preds = %129, %131
  %133 = load %struct._XLockPtrs*, %struct._XLockPtrs** %62, align 8
  %134 = icmp eq %struct._XLockPtrs* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %133, i64 0, i32 1
  %137 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %136, align 8
  call void %137(%struct._XDisplay* %0) #6
  br label %138

138:                                              ; preds = %132, %135
  %139 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %140 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %139, align 8
  %141 = icmp eq i32 (%struct._XDisplay*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = call i32 %140(%struct._XDisplay* %0) #6
  br label %144

144:                                              ; preds = %142, %138, %121, %117, %98, %94, %24, %15
  %145 = phi i32 [ 0, %15 ], [ 0, %24 ], [ 0, %94 ], [ 0, %98 ], [ 0, %117 ], [ 0, %121 ], [ %104, %138 ], [ %104, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  ret i32 %145
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLQueryBinaryData(%struct._XDisplay*, i32, i32, i32, i8**, i32*) local_unnamed_addr #0 {
  %7 = tail call i32 @XNVCTRLQueryTargetBinaryData(%struct._XDisplay* %0, i32 0, i32 %1, i32 %2, i32 %3, i8** %4, i32* %5)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @XNVCTRLStringOperation(%struct._XDisplay*, i32, i32, i32, i32, i8*, i8**) local_unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.xnvCtrlStringOperationReply, align 4
  %11 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %12 = icmp eq %struct._XExtDisplayInfo* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  br label %15

15:                                               ; preds = %7, %13
  %16 = phi %struct._XExtDisplayInfo* [ %11, %7 ], [ %14, %13 ]
  %17 = getelementptr inbounds %struct.xnvCtrlStringOperationReply, %struct.xnvCtrlStringOperationReply* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  %18 = getelementptr inbounds %struct.xnvCtrlStringOperationReply, %struct.xnvCtrlStringOperationReply* %10, i64 0, i32 3
  %19 = getelementptr inbounds %struct.xnvCtrlStringOperationReply, %struct.xnvCtrlStringOperationReply* %10, i64 0, i32 4
  %20 = getelementptr inbounds %struct.xnvCtrlStringOperationReply, %struct.xnvCtrlStringOperationReply* %10, i64 0, i32 5
  %21 = icmp eq %struct._XExtDisplayInfo* %16, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  br i1 %21, label %173, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %16, i64 0, i32 2
  %24 = load %struct.XExtCodes*, %struct.XExtCodes** %23, align 8
  %25 = icmp eq %struct.XExtCodes* %24, null
  %26 = icmp eq i8** %6, null
  %27 = or i1 %26, %25
  br i1 %27, label %173, label %28

28:                                               ; preds = %22
  store i8* null, i8** %6, align 8
  %29 = load %struct.XExtCodes*, %struct.XExtCodes** %23, align 8
  %30 = icmp eq %struct.XExtCodes* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = tail call i32 @XMissingExtension(%struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #6
  br label %173

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %16, i64 0, i32 3
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i8
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %61

39:                                               ; preds = %33
  %40 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #6
  store i32 -1431655766, i32* %8, align 4
  %41 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #6
  store i32 -1431655766, i32* %9, align 4
  %42 = call i32 @XNVCTRLQueryVersion(%struct._XDisplay* %0, i32* nonnull %8, i32* nonnull %9) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %39
  %45 = load i32, i32* %8, align 4
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = icmp sgt i32 %45, 1
  br i1 %48, label %55, label %58

49:                                               ; preds = %44
  %50 = load i32, i32* %9, align 4
  %51 = or i32 %50, 1
  %52 = icmp eq i32 %51, 9
  %53 = select i1 %52, i64 3, i64 1
  %54 = icmp sgt i32 %50, 20
  br i1 %54, label %55, label %58

55:                                               ; preds = %49, %47
  %56 = phi i64 [ %53, %49 ], [ 1, %47 ]
  %57 = or i64 %56, 4
  br label %58

58:                                               ; preds = %55, %49, %47, %39
  %59 = phi i64 [ %57, %55 ], [ %53, %49 ], [ 0, %39 ], [ 1, %47 ]
  %60 = inttoptr i64 %59 to i8*
  store i8* %60, i8** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #6
  br label %61

61:                                               ; preds = %58, %33
  %62 = phi i64 [ %59, %58 ], [ %36, %33 ]
  %63 = and i64 %62, 2
  %64 = icmp eq i64 %63, 0
  %65 = select i1 %64, i32 %1, i32 %2
  %66 = select i1 %64, i32 %2, i32 %1
  %67 = icmp ne i8* %5, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = call i64 @strlen(i8* nonnull %5) #8
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, 1
  br label %72

72:                                               ; preds = %61, %68
  %73 = phi i32 [ %71, %68 ], [ 0, %61 ]
  %74 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 54
  %75 = load %struct._XLockPtrs*, %struct._XLockPtrs** %74, align 8
  %76 = icmp eq %struct._XLockPtrs* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %75, i64 0, i32 0
  %79 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %78, align 8
  call void %79(%struct._XDisplay* %0) #6
  br label %80

80:                                               ; preds = %72, %77
  %81 = call i8* @_XGetRequest(%struct._XDisplay* %0, i8 zeroext 25, i64 20) #6
  %82 = load %struct.XExtCodes*, %struct.XExtCodes** %23, align 8
  %83 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %82, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = trunc i32 %84 to i8
  store i8 %85, i8* %81, align 4
  %86 = getelementptr inbounds i8, i8* %81, i64 1
  store i8 25, i8* %86, align 1
  %87 = trunc i32 %65 to i16
  %88 = getelementptr inbounds i8, i8* %81, i64 6
  %89 = bitcast i8* %88 to i16*
  store i16 %87, i16* %89, align 2
  %90 = trunc i32 %66 to i16
  %91 = getelementptr inbounds i8, i8* %81, i64 4
  %92 = bitcast i8* %91 to i16*
  store i16 %90, i16* %92, align 4
  %93 = getelementptr inbounds i8, i8* %81, i64 8
  %94 = bitcast i8* %93 to i32*
  store i32 %3, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %81, i64 12
  %96 = bitcast i8* %95 to i32*
  store i32 %4, i32* %96, align 4
  %97 = add nsw i32 %73, 3
  %98 = and i32 %97, -4
  %99 = lshr i32 %97, 2
  %100 = getelementptr inbounds i8, i8* %81, i64 2
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 2
  %103 = trunc i32 %99 to i16
  %104 = add i16 %102, %103
  store i16 %104, i16* %101, align 2
  %105 = getelementptr inbounds i8, i8* %81, i64 16
  %106 = bitcast i8* %105 to i32*
  store i32 %73, i32* %106, align 4
  br i1 %67, label %107, label %120

107:                                              ; preds = %80
  %108 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 27
  %109 = load i8*, i8** %108, align 8
  %110 = sext i32 %73 to i64
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  %112 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 28
  %113 = load i8*, i8** %112, align 8
  %114 = icmp ugt i8* %111, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* nonnull align 1 %5, i64 %110, i1 false)
  %116 = load i8*, i8** %108, align 8
  %117 = sext i32 %98 to i64
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  store i8* %118, i8** %108, align 8
  br label %120

119:                                              ; preds = %107
  call void @_XSend(%struct._XDisplay* %0, i8* nonnull %5, i64 %110) #6
  br label %120

120:                                              ; preds = %115, %119, %80
  %121 = bitcast %struct.xnvCtrlStringOperationReply* %10 to %union.xReply*
  %122 = call i32 @_XReply(%struct._XDisplay* %0, %union.xReply* nonnull %121, i32 0, i32 0) #6
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %120
  %125 = load %struct._XLockPtrs*, %struct._XLockPtrs** %74, align 8
  %126 = icmp eq %struct._XLockPtrs* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %125, i64 0, i32 1
  %129 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %128, align 8
  call void %129(%struct._XDisplay* %0) #6
  br label %130

130:                                              ; preds = %124, %127
  %131 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %132 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %131, align 8
  %133 = icmp eq i32 (%struct._XDisplay*)* %132, null
  br i1 %133, label %173, label %134

134:                                              ; preds = %130
  %135 = call i32 %132(%struct._XDisplay* %0) #6
  br label %173

136:                                              ; preds = %120
  %137 = load i32, i32* %18, align 4
  %138 = load i32, i32* %20, align 4
  %139 = and i32 %138, 3
  %140 = icmp eq i32 %138, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %136
  %142 = sext i32 %138 to i64
  %143 = call noalias i8* @malloc(i64 %142) #6
  store i8* %143, i8** %6, align 8
  br label %146

144:                                              ; preds = %136
  %145 = load i8*, i8** %6, align 8
  br label %146

146:                                              ; preds = %144, %141
  %147 = phi i8* [ %145, %144 ], [ %143, %141 ]
  %148 = icmp eq i8* %147, null
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = sext i32 %137 to i64
  br label %158

151:                                              ; preds = %146
  %152 = sext i32 %138 to i64
  %153 = call i32 @_XRead(%struct._XDisplay* %0, i8* nonnull %147, i64 %152) #6
  %154 = icmp eq i32 %139, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %151
  %156 = sub nuw nsw i32 4, %139
  %157 = zext i32 %156 to i64
  br label %158

158:                                              ; preds = %149, %155
  %159 = phi i64 [ %157, %155 ], [ %150, %149 ]
  call void @_XEatData(%struct._XDisplay* %0, i64 %159) #7
  br label %160

160:                                              ; preds = %158, %151
  %161 = load i32, i32* %19, align 4
  %162 = load %struct._XLockPtrs*, %struct._XLockPtrs** %74, align 8
  %163 = icmp eq %struct._XLockPtrs* %162, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct._XLockPtrs, %struct._XLockPtrs* %162, i64 0, i32 1
  %166 = load void (%struct._XDisplay*)*, void (%struct._XDisplay*)** %165, align 8
  call void %166(%struct._XDisplay* %0) #6
  br label %167

167:                                              ; preds = %160, %164
  %168 = getelementptr inbounds %struct._XDisplay, %struct._XDisplay* %0, i64 0, i32 31
  %169 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %168, align 8
  %170 = icmp eq i32 (%struct._XDisplay*)* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %167
  %172 = call i32 %169(%struct._XDisplay* %0) #6
  br label %173

173:                                              ; preds = %171, %167, %134, %130, %15, %22, %31
  %174 = phi i32 [ 0, %31 ], [ 0, %22 ], [ 0, %15 ], [ 0, %130 ], [ 0, %134 ], [ %161, %167 ], [ %161, %171 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  ret i32 %174
}

declare %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo*, %struct._XDisplay*) local_unnamed_addr #2

declare %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo*, %struct._XDisplay*, i8*, %struct._XExtensionHooks*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @close_display(%struct._XDisplay*, %struct.XExtCodes* nocapture readnone) #0 {
  %3 = tail call i32 @XextRemoveDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  ret i32 %3
}

declare i32 @XextRemoveDisplay(%struct._XExtensionInfo*, %struct._XDisplay*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @wire_to_event(%struct._XDisplay*, %union._XEvent*, %struct._xEvent*) #0 {
  %4 = tail call %struct._XExtDisplayInfo* @XextFindDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0) #6
  %5 = icmp eq %struct._XExtDisplayInfo* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call %struct._XExtDisplayInfo* @XextAddDisplay(%struct._XExtensionInfo* nonnull @_nvctrl_ext_info_data, %struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %struct._XExtensionHooks* nonnull @nvctrl_extension_hooks, i32 5, i8* nonnull inttoptr (i64 128 to i8*)) #6
  %8 = icmp eq %struct._XExtDisplayInfo* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3, %6
  %10 = phi %struct._XExtDisplayInfo* [ %7, %6 ], [ %4, %3 ]
  %11 = getelementptr inbounds %struct._XExtDisplayInfo, %struct._XExtDisplayInfo* %10, i64 0, i32 2
  %12 = load %struct.XExtCodes*, %struct.XExtCodes** %11, align 8
  %13 = icmp eq %struct.XExtCodes* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %9, %6
  %15 = tail call i32 @XMissingExtension(%struct._XDisplay* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #6
  br label %211

16:                                               ; preds = %9
  %17 = bitcast %struct._xEvent* %2 to i8*
  %18 = load i8, i8* %17, align 4
  %19 = and i8 %18, 127
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds %struct.XExtCodes, %struct.XExtCodes* %12, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sub nsw i32 %20, %22
  switch i32 %23, label %211 [
    i32 0, label %24
    i32 1, label %56
    i32 2, label %96
    i32 3, label %141
    i32 4, label %176
  ]

24:                                               ; preds = %16
  %25 = bitcast %union._XEvent* %1 to %struct.XNVCtrlAttributeChangedEvent*
  %26 = bitcast %union._XEvent* %1 to i32*
  store i32 %20, i32* %26, align 8
  %27 = bitcast %struct._xEvent* %2 to %struct.xGenericReply*
  %28 = tail call i64 @_XSetLastRequestRead(%struct._XDisplay* %0, %struct.xGenericReply* %27) #6
  %29 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 1
  store i64 %28, i64* %29, align 8
  %30 = load i8, i8* %17, align 4
  %31 = lshr i8 %30, 7
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 2
  %34 = bitcast i64* %33 to i32*
  store i32 %32, i32* %34, align 8
  %35 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 3
  %36 = bitcast i64* %35 to %struct._XDisplay**
  store %struct._XDisplay* %0, %struct._XDisplay** %36, align 8
  %37 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 4
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 5
  %44 = bitcast i64* %43 to i32*
  store i32 %42, i32* %44, align 8
  %45 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEvent, %struct.XNVCtrlAttributeChangedEvent* %25, i64 0, i32 6
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 4
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 6
  %51 = bitcast i64* %50 to i32*
  store i32 %49, i32* %51, align 8
  %52 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 5
  %53 = bitcast i16* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEvent, %struct.XNVCtrlAttributeChangedEvent* %25, i64 0, i32 8
  store i32 %54, i32* %55, align 4
  br label %211

56:                                               ; preds = %16
  %57 = bitcast %union._XEvent* %1 to %struct.XNVCtrlAttributeChangedEventTarget*
  %58 = bitcast %union._XEvent* %1 to i32*
  store i32 %20, i32* %58, align 8
  %59 = bitcast %struct._xEvent* %2 to %struct.xGenericReply*
  %60 = tail call i64 @_XSetLastRequestRead(%struct._XDisplay* %0, %struct.xGenericReply* %59) #6
  %61 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 1
  store i64 %60, i64* %61, align 8
  %62 = load i8, i8* %17, align 4
  %63 = lshr i8 %62, 7
  %64 = zext i8 %63 to i32
  %65 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 2
  %66 = bitcast i64* %65 to i32*
  store i32 %64, i32* %66, align 8
  %67 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 3
  %68 = bitcast i64* %67 to %struct._XDisplay**
  store %struct._XDisplay* %0, %struct._XDisplay** %68, align 8
  %69 = bitcast %struct._xEvent* %2 to %struct.anon.39*
  %70 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 4
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 2
  %75 = bitcast i32* %74 to i16*
  %76 = load i16, i16* %75, align 4
  %77 = zext i16 %76 to i32
  %78 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 5
  %79 = bitcast i64* %78 to i32*
  store i32 %77, i32* %79, align 8
  %80 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %69, i64 0, i32 5
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEventTarget, %struct.XNVCtrlAttributeChangedEventTarget* %57, i64 0, i32 6
  store i32 %82, i32* %83, align 4
  %84 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 6
  %87 = bitcast i64* %86 to i32*
  store i32 %85, i32* %87, align 8
  %88 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 4
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEventTarget, %struct.XNVCtrlAttributeChangedEventTarget* %57, i64 0, i32 8
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 5
  %92 = bitcast i16* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 7
  %95 = bitcast i64* %94 to i32*
  store i32 %93, i32* %95, align 8
  br label %211

96:                                               ; preds = %16
  %97 = bitcast %union._XEvent* %1 to %struct.XNVCtrlAttributeChangedEventTargetAvailability*
  %98 = bitcast %union._XEvent* %1 to i32*
  store i32 %20, i32* %98, align 8
  %99 = bitcast %struct._xEvent* %2 to %struct.xGenericReply*
  %100 = tail call i64 @_XSetLastRequestRead(%struct._XDisplay* %0, %struct.xGenericReply* %99) #6
  %101 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 1
  store i64 %100, i64* %101, align 8
  %102 = load i8, i8* %17, align 4
  %103 = lshr i8 %102, 7
  %104 = zext i8 %103 to i32
  %105 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 2
  %106 = bitcast i64* %105 to i32*
  store i32 %104, i32* %106, align 8
  %107 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 3
  %108 = bitcast i64* %107 to %struct._XDisplay**
  store %struct._XDisplay* %0, %struct._XDisplay** %108, align 8
  %109 = bitcast %struct._xEvent* %2 to %struct.anon.40*
  %110 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 4
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 2
  %115 = bitcast i32* %114 to i16*
  %116 = load i16, i16* %115, align 4
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 5
  %119 = bitcast i64* %118 to i32*
  store i32 %117, i32* %119, align 8
  %120 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %109, i64 0, i32 5
  %121 = load i16, i16* %120, align 2
  %122 = zext i16 %121 to i32
  %123 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEventTargetAvailability, %struct.XNVCtrlAttributeChangedEventTargetAvailability* %97, i64 0, i32 6
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 6
  %127 = bitcast i64* %126 to i32*
  store i32 %125, i32* %127, align 8
  %128 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 4
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEventTargetAvailability, %struct.XNVCtrlAttributeChangedEventTargetAvailability* %97, i64 0, i32 8
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 7
  %132 = bitcast i16* %131 to i8*
  %133 = load i8, i8* %132, align 4
  %134 = zext i8 %133 to i32
  %135 = getelementptr inbounds %struct.XNVCtrlAttributeChangedEventTargetAvailability, %struct.XNVCtrlAttributeChangedEventTargetAvailability* %97, i64 0, i32 10
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 5
  %137 = bitcast i16* %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 7
  %140 = bitcast i64* %139 to i32*
  store i32 %138, i32* %140, align 8
  br label %211

141:                                              ; preds = %16
  %142 = bitcast %union._XEvent* %1 to %struct.XNVCtrlStringAttributeChangedEventTarget*
  %143 = bitcast %union._XEvent* %1 to i32*
  store i32 %20, i32* %143, align 8
  %144 = bitcast %struct._xEvent* %2 to %struct.xGenericReply*
  %145 = tail call i64 @_XSetLastRequestRead(%struct._XDisplay* %0, %struct.xGenericReply* %144) #6
  %146 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 1
  store i64 %145, i64* %146, align 8
  %147 = load i8, i8* %17, align 4
  %148 = lshr i8 %147, 7
  %149 = zext i8 %148 to i32
  %150 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 2
  %151 = bitcast i64* %150 to i32*
  store i32 %149, i32* %151, align 8
  %152 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 3
  %153 = bitcast i64* %152 to %struct._XDisplay**
  store %struct._XDisplay* %0, %struct._XDisplay** %153, align 8
  %154 = bitcast %struct._xEvent* %2 to %struct.anon.39*
  %155 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 4
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 2
  %160 = bitcast i32* %159 to i16*
  %161 = load i16, i16* %160, align 4
  %162 = zext i16 %161 to i32
  %163 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 5
  %164 = bitcast i64* %163 to i32*
  store i32 %162, i32* %164, align 8
  %165 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %154, i64 0, i32 5
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  %168 = getelementptr inbounds %struct.XNVCtrlStringAttributeChangedEventTarget, %struct.XNVCtrlStringAttributeChangedEventTarget* %142, i64 0, i32 6
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 6
  %172 = bitcast i64* %171 to i32*
  store i32 %170, i32* %172, align 8
  %173 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 4
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %struct.XNVCtrlStringAttributeChangedEventTarget, %struct.XNVCtrlStringAttributeChangedEventTarget* %142, i64 0, i32 8
  store i32 %174, i32* %175, align 4
  br label %211

176:                                              ; preds = %16
  %177 = bitcast %union._XEvent* %1 to %struct.XNVCtrlBinaryAttributeChangedEventTarget*
  %178 = bitcast %union._XEvent* %1 to i32*
  store i32 %20, i32* %178, align 8
  %179 = bitcast %struct._xEvent* %2 to %struct.xGenericReply*
  %180 = tail call i64 @_XSetLastRequestRead(%struct._XDisplay* %0, %struct.xGenericReply* %179) #6
  %181 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 1
  store i64 %180, i64* %181, align 8
  %182 = load i8, i8* %17, align 4
  %183 = lshr i8 %182, 7
  %184 = zext i8 %183 to i32
  %185 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 2
  %186 = bitcast i64* %185 to i32*
  store i32 %184, i32* %186, align 8
  %187 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 3
  %188 = bitcast i64* %187 to %struct._XDisplay**
  store %struct._XDisplay* %0, %struct._XDisplay** %188, align 8
  %189 = bitcast %struct._xEvent* %2 to %struct.anon.39*
  %190 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 4
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 2
  %195 = bitcast i32* %194 to i16*
  %196 = load i16, i16* %195, align 4
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 5
  %199 = bitcast i64* %198 to i32*
  store i32 %197, i32* %199, align 8
  %200 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %189, i64 0, i32 5
  %201 = load i16, i16* %200, align 2
  %202 = zext i16 %201 to i32
  %203 = getelementptr inbounds %struct.XNVCtrlBinaryAttributeChangedEventTarget, %struct.XNVCtrlBinaryAttributeChangedEventTarget* %177, i64 0, i32 6
  store i32 %202, i32* %203, align 4
  %204 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %union._XEvent, %union._XEvent* %1, i64 0, i32 0, i64 6
  %207 = bitcast i64* %206 to i32*
  store i32 %205, i32* %207, align 8
  %208 = getelementptr inbounds %struct._xEvent, %struct._xEvent* %2, i64 0, i32 0, i32 0, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %struct.XNVCtrlBinaryAttributeChangedEventTarget, %struct.XNVCtrlBinaryAttributeChangedEventTarget* %177, i64 0, i32 8
  store i32 %209, i32* %210, align 4
  br label %211

211:                                              ; preds = %24, %56, %96, %141, %176, %16, %14
  %212 = phi i32 [ 0, %14 ], [ 0, %16 ], [ 1, %176 ], [ 1, %141 ], [ 1, %96 ], [ 1, %56 ], [ 1, %24 ]
  ret i32 %212
}

declare i64 @_XSetLastRequestRead(%struct._XDisplay*, %struct.xGenericReply*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { cold nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
