; ModuleID = '../../third_party/blink/renderer/core/animation/css_size_list_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_size_list_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.42", i32, [4 x i8], %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.219", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.158", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i64 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.138", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.152", [4 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140", %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { i64 }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { float }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.161", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.170" }
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.186" }
%"class.WTF::VectorBuffer.186" = type { %"class.WTF::VectorBufferBase.187" }
%"class.WTF::VectorBufferBase.187" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.103"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.223" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__cxx_atomic_impl.221" }
%"struct.std::__1::__cxx_atomic_impl.221" = type { %"struct.std::__1::__cxx_atomic_base_impl.222" }
%"struct.std::__1::__cxx_atomic_base_impl.222" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.328" }
%"struct.std::__1::atomic.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { i32 }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase", [20 x i8] }>
%"class.WTF::VectorBufferBase" = type { %"struct.blink::FillSize"*, i32, i32 }
%"struct.blink::FillSize" = type { i32, %"class.blink::LengthSize" }
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236" }
%"class.WTF::VectorBufferBase.236" = type { %class.scoped_refptr*, i32, i32 }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector.1474" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.3" }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5", [32 x i8] }
%"class.WTF::VectorBufferBase.5" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSSizeListInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.9, %"class.WTF::AtomicString" }
%union.anon.9 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member", %class.scoped_refptr.22, %"class.WTF::Vector.36", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%class.scoped_refptr.22 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.23", %"class.WTF::Vector.25", %"class.WTF::Vector.30", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.33 }
%union.anon.33 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { %"class.std::__1::unique_ptr.39"*, i32, i32 }
%"class.std::__1::unique_ptr.39" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230" }
%"class.WTF::VectorBufferBase.230" = type { %"class.std::__1::unique_ptr.231"*, i32, i32 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.1523" }
%"class.std::__1::__compressed_pair.1523" = type { %"struct.std::__1::__compressed_pair_elem.1524" }
%"struct.std::__1::__compressed_pair_elem.1524" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::UnderlyingSizeListChecker"* }
%"class.blink::UnderlyingSizeListChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %class.scoped_refptr.242 }
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%class.scoped_refptr.242 = type { %"class.blink::NonInterpolableList"* }
%"class.blink::NonInterpolableList" = type { %"class.blink::NonInterpolableValue.base", %"class.WTF::Vector.234" }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.821, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.275, %class.scoped_refptr.275, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.275, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.257" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.249", %"class.blink::Member.249" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::Member.249", %"class.blink::Member.249", %"class.blink::Member.253" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.428", %"class.blink::Member.430", %"class.blink::Member.251", %"class.blink::Member.432", %"class.blink::Member.432", %"class.blink::Member.456", %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.465", %"class.blink::HeapVector.467" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::Document"* }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.436" }
%"class.blink::HeapHashMap.436" = type { %"class.WTF::HashMap.439" }
%"class.WTF::HashMap.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"struct.WTF::KeyValuePair.442"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.442" = type { %"class.WTF::AtomicString", %"class.blink::Member.443" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.447", i32, %"class.blink::HeapVector.449" }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.449" = type { %"class.WTF::Vector.452" }
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"class.blink::Member.447"*, i32, i32 }
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.462" }
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::HeapHashMap.464"* }
%"class.blink::HeapHashMap.464" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.467" = type { %"class.WTF::Vector.470" }
%"class.WTF::Vector.470" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.blink::Member.473"*, i32, i32 }
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.475", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.477, %"class.WTF::Vector.496", %"class.WTF::Vector.496", %"class.blink::Member.249", %"class.blink::Member.501", %"class.blink::HeapHashSet", %"class.blink::Member.430", %"class.WTF::HashSet.509", %"class.WTF::TextPosition", %"class.blink::Member.513", %"class.blink::HeapVector.515", %"class.blink::Member.522" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.477 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.478", %"class.WTF::Vector.480" }
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"class.std::__1::unique_ptr.483"*, i32, i32 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.486", %"class.WTF::String" }
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.488" }
%"class.WTF::VectorBufferBase.488" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.503" }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.252" }
%"class.WTF::HashSet.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.477, %"class.blink::Member.473", %"class.blink::Member.501" }
%"class.blink::HeapVector.515" = type { %"class.WTF::Vector.518" }
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"class.blink::Member.501"*, i32, i32 }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.11", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.11" = type { %"class.base::RefCounted.12" }
%"class.base::RefCounted.12" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.261", %"class.blink::Member.263", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.261" = type { %"class.WTF::SingleThreadedBitField.262" }
%"class.WTF::SingleThreadedBitField.262" = type { i32 }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.267 }
%class.scoped_refptr.267 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.268", %"class.WTF::AtomicString", %"class.WTF::Vector.270" }
%"class.WTF::RefCounted.268" = type { %"class.base::RefCounted.269" }
%"class.base::RefCounted.269" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272", [32 x i8] }
%"class.WTF::VectorBufferBase.272" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1087", %"class.WTF::Vector.1087", i8, i32, %"class.blink::Member.1094", %"class.blink::Member.1096", %"class.blink::Member.1098", %"class.blink::Member.1100", %"class.blink::Member.1102", %"class.blink::Member.1104", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1112", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1118", %"class.blink::Member.1120", %"class.blink::Member.473", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1123", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.449", %"class.blink::Member.447", %"class.blink::Member.1148", %"class.blink::Member.447", %"class.blink::Member.447", %"class.blink::Member.447", %"class.blink::UserActionElementSet", %"class.blink::Member.1157", double, double, i64, i64, %"class.blink::HeapHashSet.1159", %"class.blink::HeapHashSet.1166", i16, i8, %"class.blink::Member.1173", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::TextLinkColors", %"class.blink::Member.1181", i8, [7 x i8], %"class.blink::HeapHashMap.1183", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.447", %"class.WTF::Vector.1190", %"class.blink::Member.1195", %"class.blink::Member.1197", i8, %"class.blink::Member.447", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1199", %"class.blink::HeapVector.1201", %"class.std::__1::unique_ptr.1209", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1215", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1228", %"class.WTF::Vector.1230", i8, i8, %"class.std::__1::unique_ptr.1235", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.449", %"class.blink::HeapVector.1241", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1249", i8, i32, %"class.blink::Member.1251", %"class.blink::Member.1253", %"class.blink::Member.1255", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1257", %"class.WTF::HashMap.1259", %"class.blink::Member.1264", %"class.blink::Member.1266", %"class.blink::Member.1268", %"class.blink::Member.1270", %"class.blink::Member.430", %"class.blink::Member.430", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1272", i8, i32, %"class.blink::Member.1279", %"class.blink::Member.1281", i32, %"class.blink::Member.1283", %"class.blink::Member.1285", %"class.blink::Member.1287", %"class.std::__1::unique_ptr.1289", i64, %"class.std::__1::unique_ptr.1295", i32, i32, %"class.blink::Member.1306", %"class.blink::Member.1308", %"class.blink::Member.1310", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1312", %"class.WTF::Vector.1314", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1319", %"class.blink::Member.1326", %"class.std::__1::unique_ptr.1328", %"class.blink::Member.1334", i8, i8, %"class.WTF::String", %"class.blink::Member.1336", i8, [7 x i8], %"class.blink::HeapHashMap.1338", %"class.blink::HeapObserverSet.1345", %"class.blink::Member.1353", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1355", i32, i8, i8, %"class.blink::WeakMember.1357", %"class.blink::Member.1358" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1080" }
%"class.blink::HeapHashMap.1080" = type { %"class.WTF::HashMap.1083" }
%"class.WTF::HashMap.1083" = type { %"class.WTF::HashTable.1084" }
%"class.WTF::HashTable.1084" = type <{ %"struct.WTF::KeyValuePair.1086"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1086" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1087" = type { %"class.WTF::VectorBuffer.1088" }
%"class.WTF::VectorBuffer.1088" = type { %"class.WTF::VectorBufferBase.1089" }
%"class.WTF::VectorBufferBase.1089" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1090 }
%class.scoped_refptr.1090 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1091", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1091" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.328" }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1371", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1404", i32, i8, [3 x i8], %"class.blink::HeapVector.1406", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1414", %"class.blink::Member.1416", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1425", %"class.blink::Member.1431", %"class.blink::Member.1433", i8, [7 x i8] }>
%"class.blink::Supplementable.1371" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1372" }
%"class.blink::HeapHashMap.1372" = type { %"class.WTF::HashMap.1375" }
%"class.WTF::HashMap.1375" = type { %"class.WTF::HashTable.1376" }
%"class.WTF::HashTable.1376" = type <{ %"struct.WTF::KeyValuePair.1378"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1378" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1379" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1048" }
%"class.blink::HeapHashSet.1048" = type { %"class.WTF::HashSet.1051" }
%"class.WTF::HashSet.1051" = type { %"class.WTF::HashTable.1052" }
%"class.WTF::HashTable.1052" = type <{ %"class.blink::WeakMember.1054"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1054" = type opaque
%"class.blink::Supplementable.1379" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1380" }
%"class.blink::HeapHashMap.1380" = type { %"class.WTF::HashMap.1383" }
%"class.WTF::HashMap.1383" = type { %"class.WTF::HashTable.1384" }
%"class.WTF::HashTable.1384" = type <{ %"struct.WTF::KeyValuePair.1386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1386" = type { i8*, %"class.blink::Member.1479" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1481" }
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1387, %"class.std::__1::unique_ptr.1388", %"class.std::__1::unique_ptr.1388", %"class.std::__1::unique_ptr.1394", %"class.std::__1::unique_ptr.1394", %"class.blink::Member.1096", i32, [4 x i8], %"class.WTF::HashSet.1400", i32, i32 }
%class.scoped_refptr.1387 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1388" = type { %"class.std::__1::__compressed_pair.1389" }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.1390" }
%"struct.std::__1::__compressed_pair_elem.1390" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1394" = type { %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1406" = type { %"class.WTF::Vector.1409" }
%"class.WTF::Vector.1409" = type { %"class.WTF::VectorBuffer.1410" }
%"class.WTF::VectorBuffer.1410" = type { %"class.WTF::VectorBufferBase.1411" }
%"class.WTF::VectorBufferBase.1411" = type { %"class.blink::Member.1412"*, i32, i32 }
%"class.blink::Member.1412" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1418", i32, i32 }
%"class.blink::HeapHashMap.1418" = type { %"class.WTF::HashMap.1421" }
%"class.WTF::HashMap.1421" = type { %"class.WTF::HashTable.1422" }
%"class.WTF::HashTable.1422" = type <{ %"struct.WTF::KeyValuePair.1424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1424" = type opaque
%"class.std::__1::unique_ptr.1425" = type { %"class.std::__1::__compressed_pair.1426" }
%"class.std::__1::__compressed_pair.1426" = type { %"struct.std::__1::__compressed_pair_elem.1427" }
%"struct.std::__1::__compressed_pair_elem.1427" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1106" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.blink::KURL"* }
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1123" = type { %"class.WTF::VectorBuffer.1124" }
%"class.WTF::VectorBuffer.1124" = type { %"class.WTF::VectorBufferBase.1125" }
%"class.WTF::VectorBufferBase.1125" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1126 }
%class.scoped_refptr.1126 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1127", i32, i32, %"class.blink::Persistent.1129" }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1129" = type { %"class.blink::PersistentBase.1130" }
%"class.blink::PersistentBase.1130" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1133" }
%"class.blink::HeapHashMap.1133" = type { %"class.WTF::HashMap.1136" }
%"class.WTF::HashMap.1136" = type { %"class.WTF::HashTable.1137" }
%"class.WTF::HashTable.1137" = type <{ %"struct.WTF::KeyValuePair.1139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1139" = type { %"class.blink::WeakMember.1140", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.379" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1150" }
%"class.blink::HeapHashMap.1150" = type { %"class.WTF::HashMap.1153" }
%"class.WTF::HashMap.1153" = type { %"class.WTF::HashTable.1154" }
%"class.WTF::HashTable.1154" = type <{ %"struct.WTF::KeyValuePair.1156"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1156" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1159" = type { %"class.WTF::HashSet.1162" }
%"class.WTF::HashSet.1162" = type { %"class.WTF::HashTable.1163" }
%"class.WTF::HashTable.1163" = type <{ %"class.blink::WeakMember.1165"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1165" = type opaque
%"class.blink::HeapHashSet.1166" = type { %"class.WTF::HashSet.1169" }
%"class.WTF::HashSet.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"class.blink::WeakMember.1172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1172" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1183" = type { %"class.WTF::HashMap.1186" }
%"class.WTF::HashMap.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"struct.WTF::KeyValuePair.1189"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1189" = type opaque
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1201" = type { %"class.WTF::Vector.1204" }
%"class.WTF::Vector.1204" = type { %"class.WTF::VectorBuffer.1205" }
%"class.WTF::VectorBuffer.1205" = type { %"class.WTF::VectorBufferBase.1206" }
%"class.WTF::VectorBufferBase.1206" = type { %"class.blink::Member.1207"*, i32, i32 }
%"class.blink::Member.1207" = type opaque
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1215" = type { %"class.WTF::HashSet.1218" }
%"class.WTF::HashSet.1218" = type { %"class.WTF::HashTable.1219" }
%"class.WTF::HashTable.1219" = type <{ %"class.blink::WeakMember.1221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1221" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1222", i32, [4 x i8] }>
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"struct.std::__1::pair.1225"*, i32, i32 }
%"struct.std::__1::pair.1225" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1230" = type { %"class.WTF::VectorBuffer.1231" }
%"class.WTF::VectorBuffer.1231" = type { %"class.WTF::VectorBufferBase.1232" }
%"class.WTF::VectorBufferBase.1232" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1241" = type { %"class.WTF::Vector.1244" }
%"class.WTF::Vector.1244" = type { %"class.WTF::VectorBuffer.1245" }
%"class.WTF::VectorBuffer.1245" = type { %"class.WTF::VectorBufferBase.1246" }
%"class.WTF::VectorBufferBase.1246" = type { %"class.blink::Member.1247"*, i32, i32 }
%"class.blink::Member.1247" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.430" }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1259" = type { %"class.WTF::HashTable.1260" }
%"class.WTF::HashTable.1260" = type <{ %"struct.WTF::KeyValuePair.1263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1263" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1147", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1144, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1144 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1145" }>
%"class.base::RefCountedThreadSafe.1145" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1146 }
%class.scoped_refptr.1146 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.333" }
%"struct.std::__1::atomic.333" = type { %"struct.std::__1::__atomic_base.334" }
%"struct.std::__1::__atomic_base.334" = type { %"struct.std::__1::__atomic_base.335" }
%"struct.std::__1::__atomic_base.335" = type { %"struct.std::__1::__cxx_atomic_impl.336" }
%"struct.std::__1::__cxx_atomic_impl.336" = type { %"struct.std::__1::__cxx_atomic_base_impl.337" }
%"struct.std::__1::__cxx_atomic_base_impl.337" = type { i8 }
%"class.blink::WeakMember.1147" = type { %"class.blink::MemberBase.431" }
%"class.blink::HeapHashSet.1272" = type { %"class.WTF::HashSet.1275" }
%"class.WTF::HashSet.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"class.blink::Member.1278"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1278" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1295" = type { %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", i32, [4 x i8], %"class.WTF::HashMap.1298", %"class.WTF::HashMap.1298", %"class.WTF::HashMap.1298", %"class.WTF::HashMap.1298", %"class.WTF::HashMap.1298", %"class.WTF::HashMap.1298", %"class.WTF::HashMap.1298", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1298" = type { %"class.WTF::HashTable.1299" }
%"class.WTF::HashTable.1299" = type <{ %"struct.WTF::KeyValuePair.1302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1302" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1314" = type { %"class.WTF::VectorBuffer.1315" }
%"class.WTF::VectorBuffer.1315" = type { %"class.WTF::VectorBufferBase.1316" }
%"class.WTF::VectorBufferBase.1316" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1319" = type { %"class.WTF::HashMap.1322" }
%"class.WTF::HashMap.1322" = type { %"class.WTF::HashTable.1323" }
%"class.WTF::HashTable.1323" = type <{ %"struct.WTF::KeyValuePair.1325"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1325" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1338" = type { %"class.WTF::HashMap.1341" }
%"class.WTF::HashMap.1341" = type { %"class.WTF::HashTable.1342" }
%"class.WTF::HashTable.1342" = type <{ %"struct.WTF::KeyValuePair.1344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1344" = type opaque
%"class.blink::HeapObserverSet.1345" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1346" }
%"class.blink::HeapHashSet.1346" = type { %"class.WTF::HashSet.1349" }
%"class.WTF::HashSet.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ %"class.blink::WeakMember.1352"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1352" = type opaque
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1355" = type { %"class.blink::MemberBase.1356" }
%"class.blink::MemberBase.1356" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.430", %"class.blink::HeapHashSet.1362", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1369", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1362" = type { %"class.WTF::HashSet.1365" }
%"class.WTF::HashSet.1365" = type { %"class.WTF::HashTable.1366" }
%"class.WTF::HashTable.1366" = type <{ %"class.blink::Member.1368"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1368" = type opaque
%"class.blink::HeapTaskRunnerTimer.1369" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1370", { i64, i64 } }
%"class.blink::WeakMember.1370" = type { %"class.blink::MemberBase.1356" }
%"class.blink::WeakMember.1357" = type { %"class.blink::MemberBase.250" }
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.806", %"class.std::__1::unique_ptr.808" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.352", %"class.blink::DataRef.527", %"class.blink::DataRef.531", %"class.blink::DataRef.726", %"class.blink::DataRef.789", %"class.blink::DataRef.793", %"class.blink::DataRef.797", %"class.blink::DataRef.801", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.276 }
%class.scoped_refptr.276 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.277", %"class.blink::DataRef.279", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.277" = type { %"class.base::RefCounted.278" }
%"class.base::RefCounted.278" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.279" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.281", %"class.blink::Font" }
%"class.WTF::RefCounted.281" = type { %"class.base::RefCounted.282" }
%"class.base::RefCounted.282" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.316 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.284, %class.scoped_refptr.292, %class.scoped_refptr.302, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.315 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1435", [4 x i8] }>
%"class.WTF::RefCounted.1435" = type { %"class.base::RefCounted.1436" }
%"class.base::RefCounted.1436" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.284 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.290", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.285" }
%"class.WTF::Vector.285" = type { %"class.WTF::VectorBuffer.286" }
%"class.WTF::VectorBuffer.286" = type { %"class.WTF::VectorBufferBase.287" }
%"class.WTF::VectorBufferBase.287" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.292 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.293", %"class.WTF::RefCounted.300", [4 x i8] }>
%"class.blink::FontSettings.293" = type { %"class.WTF::Vector.294" }
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { %"class.blink::FontTagValuePair.297"*, i32, i32 }
%"class.blink::FontTagValuePair.297" = type { i32, float }
%"class.WTF::RefCounted.300" = type { %"class.base::RefCounted.301" }
%"class.base::RefCounted.301" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.302 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.303", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.312, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.303" = type { %"class.base::RefCounted.304" }
%"class.base::RefCounted.304" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.307 }
%union.anon.307 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.312 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.313", [4 x i8] }>
%"class.WTF::RefCounted.313" = type { %"class.base::RefCounted.314" }
%"class.base::RefCounted.314" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.315 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.316 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.317", %"class.WTF::Vector.319", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.349", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.317" = type { %"class.base::RefCounted.318" }
%"class.base::RefCounted.318" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.321", [8 x i8] }
%"class.WTF::VectorBufferBase.321" = type { %class.scoped_refptr.322*, i32, i32 }
%class.scoped_refptr.322 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.323", [4 x i8] }>
%"class.WTF::RefCounted.323" = type { %"class.base::RefCounted.324" }
%"class.base::RefCounted.324" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.339", %class.scoped_refptr.346, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.323" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.327 }
%union.anon.327 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.338, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.328" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.328" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.333" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.338 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.342, %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.346 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.347", [4 x i8] }>
%"class.WTF::RefCounted.347" = type { %"class.base::RefCounted.348" }
%"class.base::RefCounted.348" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.349" = type { %"class.blink::PersistentBase.350" }
%"class.blink::PersistentBase.350" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.351 }
%class.scoped_refptr.351 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.352" = type { %class.scoped_refptr.353 }
%class.scoped_refptr.353 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.354", [4 x i8], %"class.blink::DataRef.356", %"class.blink::DataRef.393", %"class.WTF::Vector.397", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.401, %class.scoped_refptr.410, %"class.blink::Persistent.420", %"class.blink::Persistent.422", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.354" = type { %"class.base::RefCounted.355" }
%"class.base::RefCounted.355" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.356" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.358", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.360, %class.scoped_refptr.367, %"class.blink::Persistent.380", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.358" = type { %"class.base::RefCounted.359" }
%"class.base::RefCounted.359" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.360 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.361", %"class.WTF::Vector.362" }
%"class.base::RefCountedThreadSafe.361" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.367 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.368", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.368" = type { %"class.base::RefCounted.369" }
%"class.base::RefCounted.369" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.22 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.372" }
%"class.blink::PersistentBase.372" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.375" }
%"class.WTF::HashMap.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ %"struct.WTF::KeyValuePair.378"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.378" = type opaque
%"class.blink::Persistent.380" = type { %"class.blink::PersistentBase.381" }
%"class.blink::PersistentBase.381" = type { %"class.blink::HeapVector.382"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::HeapVector.382" = type { %"class.WTF::Vector.385" }
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.388", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.393" = type { %class.scoped_refptr.394 }
%class.scoped_refptr.394 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.395", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.395" = type { %"class.base::RefCounted.396" }
%"class.base::RefCounted.396" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.272" }
%class.scoped_refptr.401 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.402", %"class.WTF::Vector.404" }
%"class.WTF::RefCounted.402" = type { %"class.base::RefCounted.403" }
%"class.base::RefCounted.403" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"struct.std::__1::pair.407"*, i32, i32 }
%"struct.std::__1::pair.407" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.410 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.411", [4 x i8], %"class.WTF::Vector.413" }
%"class.WTF::RefCounted.411" = type { %"class.base::RefCounted.412" }
%"class.base::RefCounted.412" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.base.416", [4 x i8] }
%"class.WTF::VectorBuffer.base.416" = type <{ %"class.WTF::VectorBufferBase.415", [28 x i8] }>
%"class.WTF::VectorBufferBase.415" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.420" = type { %"class.blink::PersistentBase.421" }
%"class.blink::PersistentBase.421" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::Persistent.422" = type { %"class.blink::PersistentBase.423" }
%"class.blink::PersistentBase.423" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.426", %"class.blink::Member.525" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.527" = type { %class.scoped_refptr.528 }
%class.scoped_refptr.528 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.529", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.529" = type { %"class.base::RefCounted.530" }
%"class.base::RefCounted.530" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.531" = type { %class.scoped_refptr.532 }
%class.scoped_refptr.532 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.533", [4 x i8], %"class.blink::DataRef.535", %"class.blink::DataRef.601", %"class.blink::TransformOperations", %class.scoped_refptr.410, %"class.blink::Persistent.720", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.533" = type { %"class.base::RefCounted.534" }
%"class.base::RefCounted.534" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.535" = type { %class.scoped_refptr.536 }
%class.scoped_refptr.536 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.537", [4 x i8], %"class.blink::DataRef.539", %"class.blink::Persistent.577", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.537" = type { %"class.base::RefCounted.538" }
%"class.base::RefCounted.538" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.539" = type { %class.scoped_refptr.540 }
%class.scoped_refptr.540 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.541", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.559, %class.scoped_refptr.562, %class.scoped_refptr.565, %class.scoped_refptr.568, %class.scoped_refptr.569, %class.scoped_refptr.570, %"class.blink::Persistent.577", %"class.blink::Persistent.592", %"class.absl::optional.596", %"class.absl::optional.596", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.541" = type { %"class.base::RefCounted.542" }
%"class.base::RefCounted.542" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.543", %"class.std::__1::unique_ptr.548" }
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.551", %"class.WTF::Vector.543", i32, i32 }
%"class.WTF::Vector.551" = type { %"class.WTF::VectorBuffer.552" }
%"class.WTF::VectorBuffer.552" = type { %"class.WTF::VectorBufferBase.553" }
%"class.WTF::VectorBufferBase.553" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.559 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.560", [4 x i8] }>
%"class.WTF::RefCounted.560" = type { %"class.base::RefCounted.561" }
%"class.base::RefCounted.561" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.562 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.563", [4 x i8] }>
%"class.WTF::RefCounted.563" = type { %"class.base::RefCounted.564" }
%"class.base::RefCounted.564" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.565 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.566" }>
%"class.WTF::RefCounted.566" = type { %"class.base::RefCounted.567" }
%"class.base::RefCounted.567" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.568 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.569 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.570 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.571", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.571" = type { %"class.base::RefCounted.572" }
%"class.base::RefCounted.572" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.573" }
%"class.blink::DataRef.573" = type { %class.scoped_refptr.574 }
%class.scoped_refptr.574 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.420", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.575" }
%"class.WTF::RefCounted.575" = type { %"class.base::RefCounted.576" }
%"class.base::RefCounted.576" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.592" = type { %"class.blink::PersistentBase.593" }
%"class.blink::PersistentBase.593" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.562, %"class.blink::Member.388", i32, [4 x i8] }>
%"class.absl::optional.596" = type { %"class.absl::optional_internal::optional_data.597" }
%"class.absl::optional_internal::optional_data.597" = type { %"class.absl::optional_internal::optional_data_base.598" }
%"class.absl::optional_internal::optional_data_base.598" = type { %"class.absl::optional_internal::optional_data_dtor_base.599" }
%"class.absl::optional_internal::optional_data_dtor_base.599" = type { i8, [3 x i8], %union.anon.600 }
%union.anon.600 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.577" = type { %"class.blink::PersistentBase.578" }
%"class.blink::PersistentBase.578" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.581" }
%"class.blink::HeapVector.581" = type { %"class.WTF::Vector.584" }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %"class.blink::Member.587"*, i32, i32 }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.601" = type { %class.scoped_refptr.602 }
%class.scoped_refptr.602 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.603", %"class.blink::DataRef.605", %"class.blink::DataRef.609", %"class.blink::DataRef.618", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.697", %"class.std::__1::unique_ptr.708", %"class.WTF::Vector.25", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.603" = type { %"class.base::RefCounted.604" }
%"class.base::RefCounted.604" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.605" = type { %class.scoped_refptr.606 }
%class.scoped_refptr.606 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.607", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.607" = type { %"class.base::RefCounted.608" }
%"class.base::RefCounted.608" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.609" = type { %class.scoped_refptr.610 }
%class.scoped_refptr.610 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.611", [4 x i8], %"class.WTF::Vector.613", i8, [7 x i8] }>
%"class.WTF::RefCounted.611" = type { %"class.base::RefCounted.612" }
%"class.base::RefCounted.612" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.613" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { i32*, i32, i32 }
%"class.blink::DataRef.618" = type { %class.scoped_refptr.619 }
%class.scoped_refptr.619 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.620", [4 x i8], %"class.WTF::HashMap.622", %"class.WTF::HashMap.622", %"class.WTF::HashMap.622", %"class.WTF::HashMap.622", %"class.WTF::HashMap.622", %"class.WTF::HashMap.622", %"class.WTF::HashMap.627", %"class.WTF::HashMap.627", %"class.WTF::HashMap.627", %"class.WTF::HashMap.627", %"class.WTF::HashMap.632", %"class.WTF::Vector.543", %"class.WTF::Vector.543", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.620" = type { %"class.base::RefCounted.621" }
%"class.base::RefCounted.621" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ %"struct.WTF::KeyValuePair.626"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.626" = type { %"class.WTF::String", %"class.WTF::Vector.1513" }
%"class.WTF::Vector.1513" = type { %"class.WTF::VectorBuffer.1514" }
%"class.WTF::VectorBuffer.1514" = type { %"class.WTF::VectorBufferBase.1515" }
%"class.WTF::VectorBufferBase.1515" = type { i64*, i32, i32 }
%"class.WTF::HashMap.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"struct.WTF::KeyValuePair.631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.631" = type { i64, %"class.WTF::Vector.25" }
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.640" }
%"class.WTF::HashMap.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"struct.WTF::KeyValuePair.644"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.644" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1518", %"class.absl::optional.1518", %"class.absl::optional.1518" }
%"class.absl::optional.1518" = type { %"class.absl::optional_internal::optional_data.1519" }
%"class.absl::optional_internal::optional_data.1519" = type { %"class.absl::optional_internal::optional_data_base.1520" }
%"class.absl::optional_internal::optional_data_base.1520" = type { %"class.absl::optional_internal::optional_data_dtor_base.1521" }
%"class.absl::optional_internal::optional_data_dtor_base.1521" = type { i8, %union.anon.1522 }
%union.anon.1522 = type { i32 }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.397", %"class.WTF::Vector.663", %"class.WTF::Vector.651", %"class.WTF::Vector.668", %"class.WTF::Vector.673", %"class.WTF::Vector.678" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.651", %"class.WTF::Vector.651", %"class.WTF::Vector.656" }
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658" }
%"class.WTF::VectorBufferBase.658" = type { %class.scoped_refptr.659*, i32, i32 }
%class.scoped_refptr.659 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.660" }
%"class.base::RefCountedThreadSafe.660" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665" }
%"class.WTF::VectorBufferBase.665" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.651" = type { %"class.WTF::VectorBuffer.652" }
%"class.WTF::VectorBuffer.652" = type { %"class.WTF::VectorBufferBase.653" }
%"class.WTF::VectorBufferBase.653" = type { double*, i32, i32 }
%"class.WTF::Vector.668" = type { %"class.WTF::VectorBuffer.669" }
%"class.WTF::VectorBuffer.669" = type { %"class.WTF::VectorBufferBase.670" }
%"class.WTF::VectorBufferBase.670" = type { i32*, i32, i32 }
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { i32*, i32, i32 }
%"class.WTF::Vector.678" = type { %"class.WTF::VectorBuffer.679" }
%"class.WTF::VectorBuffer.679" = type { %"class.WTF::VectorBufferBase.680" }
%"class.WTF::VectorBufferBase.680" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.689" }
%"class.WTF::Vector.689" = type { %"class.WTF::VectorBuffer.690" }
%"class.WTF::VectorBuffer.690" = type { %"class.WTF::VectorBufferBase.691" }
%"class.WTF::VectorBufferBase.691" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.700" }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.701" }
%"class.WTF::VectorBuffer.701" = type { %"class.WTF::VectorBufferBase.702" }
%"class.WTF::VectorBufferBase.702" = type { %"class.blink::Persistent.420"*, i32, i32 }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.420", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.714" }
%"class.WTF::Vector.714" = type { %"class.WTF::VectorBuffer.715" }
%"class.WTF::VectorBuffer.715" = type { %"class.WTF::VectorBufferBase.716" }
%"class.WTF::VectorBufferBase.716" = type { %class.scoped_refptr.717*, i32, i32 }
%class.scoped_refptr.717 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.566", [4 x i8] }>
%"class.blink::Persistent.720" = type { %"class.blink::PersistentBase.721" }
%"class.blink::PersistentBase.721" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.724" }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.728", [4 x i8], %"class.blink::DataRef.730", %"class.blink::DataRef.734", %"class.blink::DataRef.751", %"class.blink::DataRef.769", %"class.blink::DataRef.781", %"class.blink::DataRef.785", %class.scoped_refptr.755, i32, [4 x i8] }>
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.730" = type { %class.scoped_refptr.731 }
%class.scoped_refptr.731 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.732", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.732" = type { %"class.base::RefCounted.733" }
%"class.base::RefCounted.733" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.734" = type { %class.scoped_refptr.735 }
%class.scoped_refptr.735 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.736", %class.scoped_refptr.738, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.736" = type { %"class.base::RefCounted.737" }
%"class.base::RefCounted.737" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.738 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.745", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.563" }>
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.751" = type { %class.scoped_refptr.752 }
%class.scoped_refptr.752 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.753", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.753" = type { %"class.base::RefCounted.754" }
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.755, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.769" = type { %class.scoped_refptr.770 }
%class.scoped_refptr.770 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.771", [4 x i8], %class.scoped_refptr.773, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.771" = type { %"class.base::RefCounted.772" }
%"class.base::RefCounted.772" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.773 = type { %"class.base::RefCountedData.774"* }
%"class.base::RefCountedData.774" = type { %"class.base::RefCountedThreadSafe.775", %"class.WTF::Vector.776" }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.781" = type { %class.scoped_refptr.782 }
%class.scoped_refptr.782 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.783", %class.scoped_refptr.755, %class.scoped_refptr.755, %class.scoped_refptr.755 }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.785" = type { %class.scoped_refptr.786 }
%class.scoped_refptr.786 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.787", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.787" = type { %"class.base::RefCounted.788" }
%"class.base::RefCounted.788" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.755 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.756", %"class.blink::Persistent.758", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.756" = type { %"class.base::RefCounted.757" }
%"class.base::RefCounted.757" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.758" = type { %"class.blink::PersistentBase.759" }
%"class.blink::PersistentBase.759" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.447", %"class.blink::HeapHashMap.762" }
%"class.blink::HeapHashMap.762" = type { %"class.WTF::HashMap.765" }
%"class.WTF::HashMap.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type opaque
%"class.blink::DataRef.789" = type { %class.scoped_refptr.790 }
%class.scoped_refptr.790 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.791", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.791" = type { %"class.base::RefCounted.792" }
%"class.base::RefCounted.792" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.793" = type { %class.scoped_refptr.794 }
%class.scoped_refptr.794 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.795", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.795" = type { %"class.base::RefCounted.796" }
%"class.base::RefCounted.796" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.797" = type { %class.scoped_refptr.798 }
%class.scoped_refptr.798 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.799", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.799" = type { %"class.base::RefCounted.800" }
%"class.base::RefCounted.800" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.801" = type { %class.scoped_refptr.802 }
%class.scoped_refptr.802 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.803", %class.scoped_refptr.805 }
%"class.WTF::RefCounted.803" = type { %"class.base::RefCounted.804" }
%"class.base::RefCounted.804" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.805 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1078", %"class.blink::StyleVariables", %class.scoped_refptr.805 }
%"class.WTF::RefCounted.1078" = type { %"class.base::RefCounted.1079" }
%"class.base::RefCounted.1079" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.806" = type { %"class.base::RefCounted.807" }
%"class.base::RefCounted.807" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.811" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.WTF::Vector.814"* }
%"class.WTF::Vector.814" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.275 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.822", %"class.WTF::Vector.977", %"class.blink::HeapHashSet.982", %"class.WTF::Vector.977", %"class.blink::HeapVector.989", %"class.blink::HeapVector.996", %"class.blink::HeapHashMap.1003", %"class.WTF::HashSet.1010", %"class.WTF::HashSet.1010", %"class.blink::HeapHashMap.1014", %"class.blink::HeapHashMap.1014", %"class.blink::HeapHashMap.1014", %"class.blink::HeapHashMap.1014" }
%"class.blink::HeapVector.822" = type { %"class.WTF::Vector.825" }
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.828", %"struct.blink::Timing", %"class.blink::Member.904", i32, %"class.blink::Member.916", %"class.WTF::Vector.678" }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.851", i8, %"class.absl::optional.832", %"class.absl::optional.899" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.830", %"struct.blink::Timing", %"class.blink::Member.837", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.832", %"class.absl::optional.846", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.841", %"class.absl::optional.841", i8, i8, i8, %"class.absl::optional.832", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.841" = type { %"class.absl::optional_internal::optional_data.842" }
%"class.absl::optional_internal::optional_data.842" = type { %"class.absl::optional_internal::optional_data_base.843" }
%"class.absl::optional_internal::optional_data_base.843" = type { %"class.absl::optional_internal::optional_data_dtor_base.844" }
%"class.absl::optional_internal::optional_data_dtor_base.844" = type { i8, %union.anon.845 }
%union.anon.845 = type { double }
%"class.absl::optional.846" = type { %"class.absl::optional_internal::optional_data.847" }
%"class.absl::optional_internal::optional_data.847" = type { %"class.absl::optional_internal::optional_data_base.848" }
%"class.absl::optional_internal::optional_data_base.848" = type { %"class.absl::optional_internal::optional_data_dtor_base.849" }
%"class.absl::optional_internal::optional_data_dtor_base.849" = type { i8, %union.anon.850 }
%union.anon.850 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.855", %"class.blink::Member.863", %"class.blink::Member.887", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.659, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.855" = type { %"class.WTF::Vector.858" }
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860" }
%"class.WTF::VectorBufferBase.860" = type { %"class.blink::Member.861"*, i32, i32 }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.841", %"class.absl::optional.1493", %class.scoped_refptr.659 }
%"class.absl::optional.1493" = type { %"class.absl::optional_internal::optional_data.1494" }
%"class.absl::optional_internal::optional_data.1494" = type { %"class.absl::optional_internal::optional_data_base.1495" }
%"class.absl::optional_internal::optional_data_base.1495" = type { %"class.absl::optional_internal::optional_data_dtor_base.1496" }
%"class.absl::optional_internal::optional_data_dtor_base.1496" = type { i8, %union.anon.1497 }
%union.anon.1497 = type { i32 }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::HeapHashMap.865"* }
%"class.blink::HeapHashMap.865" = type { %"class.WTF::HashMap.868" }
%"class.WTF::HashMap.868" = type { %"class.WTF::HashTable.869" }
%"class.WTF::HashTable.869" = type <{ %"struct.WTF::KeyValuePair.871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.871" = type { %"class.blink::PropertyHandle", %"class.blink::Member.872" }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.876" }
%"class.blink::HeapVector.876" = type { %"class.WTF::Vector.879" }
%"class.WTF::Vector.879" = type { %"class.WTF::VectorBuffer.880" }
%"class.WTF::VectorBuffer.880" = type { %"class.WTF::VectorBufferBase.881" }
%"class.WTF::VectorBufferBase.881" = type { %"class.blink::Member.882"*, i32, i32 }
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.659, i32, [4 x i8] }>
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.891" }
%"class.blink::HeapVector.891" = type { %"class.WTF::Vector.894" }
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896" }
%"class.WTF::VectorBufferBase.896" = type { %"class.blink::Member.897"*, i32, i32 }
%"class.blink::Member.897" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1486", %class.scoped_refptr.659, double, double, double, double }
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.832" = type { %"class.absl::optional_internal::optional_data.833" }
%"class.absl::optional_internal::optional_data.833" = type { %"class.absl::optional_internal::optional_data_base.834" }
%"class.absl::optional_internal::optional_data_base.834" = type { %"class.absl::optional_internal::optional_data_dtor_base.835" }
%"class.absl::optional_internal::optional_data_dtor_base.835" = type { i8, %union.anon.836 }
%union.anon.836 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.899" = type { %"class.absl::optional_internal::optional_data.900" }
%"class.absl::optional_internal::optional_data.900" = type { %"class.absl::optional_internal::optional_data_base.901" }
%"class.absl::optional_internal::optional_data_base.901" = type { %"class.absl::optional_internal::optional_data_dtor_base.902" }
%"class.absl::optional_internal::optional_data_dtor_base.902" = type { i8, %union.anon.903 }
%union.anon.903 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.832", i32, [4 x i8], %class.scoped_refptr.659, i16, [6 x i8] }>
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.908", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.908" = type { %"class.WTF::Vector.911" }
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { %"class.blink::Member.914"*, i32, i32 }
%"class.blink::Member.914" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.430", i32, [4 x i8], %"class.blink::HeapHashSet.918", %"class.blink::HeapHashSet.926", %"class.std::__1::unique_ptr.933", %"class.absl::optional.966" }
%"class.blink::HeapHashSet.918" = type { %"class.WTF::HashSet.921" }
%"class.WTF::HashSet.921" = type { %"class.WTF::HashTable.922" }
%"class.WTF::HashTable.922" = type <{ %"class.blink::Member.924"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.841", %"class.absl::optional.832", %"class.absl::optional.832", %"class.absl::optional.899", %"class.absl::optional.832", i8, [3 x i8], i32, %"class.blink::Member.1055", %"class.blink::Member.1055", %"class.blink::Member.1057", %"class.blink::Member.430", %"class.blink::Member.916", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1059", %"class.blink::Member.1059", %"class.blink::Member.1059", %"class.std::__1::unique_ptr.1061", i8, [3 x i8], i32, %"class.blink::Member.1067", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1039" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1027" }
%"class.blink::HeapVector.1027" = type { %"class.WTF::Vector.1030" }
%"class.WTF::Vector.1030" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032", [32 x i8] }
%"class.WTF::VectorBufferBase.1032" = type { %"struct.std::__1::pair.1033"*, i32, i32 }
%"struct.std::__1::pair.1033" = type { %"class.WTF::AtomicString", %"class.blink::Member.1034" }
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::HeapVector.1036"* }
%"class.blink::HeapVector.1036" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.WTF::Vector.1042"* }
%"class.WTF::Vector.1042" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1046" }
%"class.blink::WeakMember.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.841", %"class.absl::optional.841", double, i8, i32 }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1071", %"class.std::__1::unique_ptr.1072", %"class.blink::Member.924" }
%"class.blink::ThreadState::PrefinalizerRegistration.1071" = type { i8 }
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.926" = type { %"class.WTF::HashSet.929" }
%"class.WTF::HashSet.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"class.blink::WeakMember.932"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.932" = type opaque
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.936 }
%class.scoped_refptr.936 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.937", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.937" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.938" }
%"class.std::__1::__hash_table.938" = type <{ %"class.std::__1::unique_ptr.939", %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.954", %"class.std::__1::__compressed_pair.958", [4 x i8] }>
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941", %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.942"** }
%"struct.std::__1::__hash_node_base.942" = type { %"struct.std::__1::__hash_node_base.942"* }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.std::__1::__bucket_list_deallocator.944" }
%"class.std::__1::__bucket_list_deallocator.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"struct.std::__1::__hash_node_base.942" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.966" = type { %"class.absl::optional_internal::optional_data.967" }
%"class.absl::optional_internal::optional_data.967" = type { %"class.absl::optional_internal::optional_data_base.968" }
%"class.absl::optional_internal::optional_data_base.968" = type { %"class.absl::optional_internal::optional_data_dtor_base.969" }
%"class.absl::optional_internal::optional_data_dtor_base.969" = type { i8, %union.anon.970 }
%union.anon.970 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.971" }
%"class.absl::optional.971" = type { %"class.absl::optional_internal::optional_data.972" }
%"class.absl::optional_internal::optional_data.972" = type { %"class.absl::optional_internal::optional_data_base.973" }
%"class.absl::optional_internal::optional_data_base.973" = type { %"class.absl::optional_internal::optional_data_dtor_base.974" }
%"class.absl::optional_internal::optional_data_dtor_base.974" = type { i8, %union.anon.975 }
%union.anon.975 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.982" = type { %"class.WTF::HashSet.985" }
%"class.WTF::HashSet.985" = type { %"class.WTF::HashTable.986" }
%"class.WTF::HashTable.986" = type <{ %"class.blink::Member.988"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.988" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.977" = type { %"class.WTF::VectorBuffer.978" }
%"class.WTF::VectorBuffer.978" = type { %"class.WTF::VectorBufferBase.979" }
%"class.WTF::VectorBufferBase.979" = type { i32*, i32, i32 }
%"class.blink::HeapVector.989" = type { %"class.WTF::Vector.992" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.924", %"class.blink::Member.828", %"struct.blink::Timing", %"class.blink::Member.904", i32, %"class.blink::Member.916", %"class.WTF::Vector.678" }
%"class.blink::HeapVector.996" = type { %"class.WTF::Vector.999" }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { %"class.blink::Member.924"*, i32, i32 }
%"class.blink::HeapHashMap.1003" = type { %"class.WTF::HashMap.1006" }
%"class.WTF::HashMap.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"struct.WTF::KeyValuePair.1009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1009" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1509" }
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.275, %class.scoped_refptr.275, %class.scoped_refptr.275, double, %"class.blink::Member.828" }
%"class.WTF::HashSet.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1014" = type { %"class.WTF::HashMap.1017" }
%"class.WTF::HashMap.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"struct.WTF::KeyValuePair.1020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1020" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1499" }
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::HeapVector.1501"* }
%"class.blink::HeapVector.1501" = type { %"class.WTF::Vector.1504" }
%"class.WTF::Vector.1504" = type { %"class.WTF::VectorBuffer.1505" }
%"class.WTF::VectorBuffer.1505" = type { %"class.WTF::VectorBufferBase.1506", [8 x i8] }
%"class.WTF::VectorBufferBase.1506" = type { %"class.blink::Member.1486"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.1021", %"class.WTF::HashSet.1021", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.1021" = type { %"class.WTF::HashTable.1022" }
%"class.WTF::HashTable.1022" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.430", %class.scoped_refptr.275, %"class.blink::SelectorFilter", %"class.blink::Member.1463", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1439" }
%"class.blink::HeapHashMap.1439" = type { %"class.WTF::HashMap.1442" }
%"class.WTF::HashMap.1442" = type { %"class.WTF::HashTable.1443" }
%"class.WTF::HashTable.1443" = type <{ %"struct.WTF::KeyValuePair.1445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1445" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1446", %"class.std::__1::unique_ptr.1457" }
%"class.blink::HeapVector.1446" = type { %"class.WTF::Vector.1449" }
%"class.WTF::Vector.1449" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451" }
%"class.WTF::VectorBufferBase.1451" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.447", %"class.WTF::Vector.1452" }
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.979", [16 x i8] }
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.WTF::VectorBuffer" = type <{ %"class.WTF::VectorBufferBase", [20 x i8], [4 x i8] }>
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::InheritedSizeListChecker"* }
%"class.blink::InheritedSizeListChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.blink::CSSProperty"*, %"class.WTF::Vector" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.352", %"class.blink::DataRef.527", %"class.blink::DataRef.531", %"class.blink::DataRef.726", %"class.blink::DataRef.789", %"class.blink::DataRef.793", %"class.blink::DataRef.797", %"class.blink::DataRef.801", [20 x i8], [4 x i8] }>
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %class.scoped_refptr }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.base::RepeatingCallback.1471" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.1472" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.1473" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_ = comdat any

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink28CSSSizeListInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink19NonInterpolableListD2Ev = comdat any

$_ZN5blink19NonInterpolableListD0Ev = comdat any

$_ZNK5blink19NonInterpolableList7GetTypeEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink25UnderlyingSizeListCheckerD2Ev = comdat any

$_ZN5blink25UnderlyingSizeListCheckerD0Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZNK5blink25UnderlyingSizeListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25UnderlyingSizeListCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZN5blink24InheritedSizeListCheckerD2Ev = comdat any

$_ZN5blink24InheritedSizeListCheckerD0Ev = comdat any

$_ZNK5blink24InheritedSizeListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FillSizeEEEmm = comdat any

$_ZNK5blink10LengthSizeeqERKS0_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24InheritedSizeListCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFN5blink26PairwiseInterpolationValueEONS2_18InterpolationValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRN5blink15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEJEEESC_E3RunEPNS0_13BindStateBaseES5_dS8_SB_ = comdat any

$_ZN4base8internal9BindStateIPFvRN5blink15UnderlyingValueEdRKNS2_17InterpolableValueEPKNS2_20NonInterpolableValueEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink19NonInterpolableListE = comdat any

$_ZTVN5blink25UnderlyingSizeListCheckerE = comdat any

$_ZTVN5blink24InheritedSizeListCheckerE = comdat any

@_ZTVN5blink28CSSSizeListInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSSizeListInterpolationType"*)* @_ZN5blink28CSSSizeListInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSSizeListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink28CSSSizeListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSSizeListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink28CSSSizeListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSSizeListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)* @_ZNK5blink28CSSSizeListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSSizeListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.228"*)* @_ZNK5blink28CSSSizeListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSSizeListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.228"*)* @_ZNK5blink28CSSSizeListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSSizeListInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.228"*)* @_ZNK5blink28CSSSizeListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.228"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSSizeListInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink28CSSSizeListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSSizeListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink28CSSSizeListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.4 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NonInterpolableValue>]\00", align 1
@_ZTVN5blink19NonInterpolableListE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD2Ev to i8*), i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD0Ev to i8*), i8* bitcast (i8* (%"class.blink::NonInterpolableList"*)* @_ZNK5blink19NonInterpolableList7GetTypeEv to i8*)] }, comdat, align 8
@_ZN5blink19NonInterpolableList12static_type_E = external local_unnamed_addr global i8*, align 8
@_ZTVN5blink25UnderlyingSizeListCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::UnderlyingSizeListChecker"*)* @_ZN5blink25UnderlyingSizeListCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::UnderlyingSizeListChecker"*)* @_ZN5blink25UnderlyingSizeListCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::UnderlyingSizeListChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink25UnderlyingSizeListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink24InheritedSizeListCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InheritedSizeListChecker"*)* @_ZN5blink24InheritedSizeListCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::InheritedSizeListChecker"*)* @_ZN5blink24InheritedSizeListCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::InheritedSizeListChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink24InheritedSizeListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FillSizeEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FillSize]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.WTF::Vector"* dereferenceable(40), float) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::Vector.234", align 8
  %5 = alloca %"struct.blink::InterpolationValue", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = tail call noalias i8* @malloc(i64 24) #11, !noalias !2
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !noalias !2
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  br i1 %9, label %13, label %18

13:                                               ; preds = %3
  %14 = ptrtoint i8* %10 to i64
  %15 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11, !noalias !5
  store i64 %14, i64* %15, align 8, !alias.scope !5
  %16 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %17 = bitcast %class.scoped_refptr* %16 to i64*
  store i64 0, i64* %17, align 8, !alias.scope !5
  br label %214

18:                                               ; preds = %3
  %19 = bitcast i8* %12 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %10, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8, !noalias !2
  %22 = zext i32 %8 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %22) #11, !noalias !2
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11, !noalias !2
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast i8* %12 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8, !noalias !2
  %27 = lshr i64 %23, 3
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %21, align 8, !noalias !2
  %29 = shl nuw nsw i64 %22, 3
  %30 = getelementptr inbounds i8, i8* %10, i64 20
  %31 = bitcast i8* %30 to i32*
  store i32 %8, i32* %31, align 4, !noalias !2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 %29, i1 false) #11, !noalias !2
  %32 = ptrtoint i8* %10 to i64
  %33 = bitcast %"class.WTF::Vector.234"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11, !noalias !2
  %34 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %4, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %4, i64 0, i32 0, i32 0, i32 2
  %37 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %22) #11, !noalias !2
  %38 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !2
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast %"class.WTF::Vector.234"* %4 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8, !noalias !2
  %41 = lshr i64 %37, 3
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %35, align 8, !noalias !2
  store i32 %8, i32* %36, align 4, !noalias !2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 %29, i1 false) #11, !noalias !2
  %43 = bitcast %"struct.blink::InterpolationValue"* %5 to i8*
  %44 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1
  %46 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %45, i64 0, i32 0
  %47 = bitcast i8* %12 to %"class.WTF::Vector.1474"*
  %48 = bitcast %class.scoped_refptr* %45 to i64*
  %49 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %50 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1, i32 0
  br label %53

51:                                               ; preds = %119
  %52 = icmp eq i32 %121, %8
  br i1 %52, label %122, label %53

53:                                               ; preds = %51, %18
  %54 = phi i32 [ 0, %18 ], [ %121, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11, !noalias !2
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  %57 = lshr i32 %54, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #11, !noalias !2
  %58 = call dereferenceable(20) %"struct.blink::FillSize"* @_ZNK3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %57) #11, !noalias !8
  call void @_ZN5blink26SizeInterpolationFunctions19ConvertFillSizeSideERKNS_8FillSizeEfb(%"struct.blink::InterpolationValue"* nonnull sret %5, %"struct.blink::FillSize"* dereferenceable(20) %58, float %2, i1 zeroext %56) #11, !noalias !2
  %59 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %44, align 8, !noalias !2
  %60 = icmp eq %"class.blink::InterpolableValue"* %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %53
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #11, !alias.scope !2
  br label %94

62:                                               ; preds = %53
  %63 = ptrtoint %"class.blink::InterpolableValue"* %59 to i64
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %44, align 8, !noalias !2
  %64 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"* %47, i32 %54) #11, !noalias !2
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %65, align 8, !noalias !2
  %67 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  store i64 %63, i64* %67, align 8, !noalias !2
  %68 = icmp eq %"class.blink::InterpolableValue"* %66, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.blink::InterpolableValue"* %66 to void (%"class.blink::InterpolableValue"*)***
  %71 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %70, align 8, !noalias !2
  %72 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %71, i64 1
  %73 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %72, align 8, !noalias !2
  call void %73(%"class.blink::InterpolableValue"* nonnull %66) #11, !noalias !2
  br label %74

74:                                               ; preds = %69, %62
  %75 = load i64, i64* %48, align 8, !noalias !2
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %46, align 8, !noalias !2
  %76 = call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* nonnull %4, i32 %54) #11, !noalias !2
  %77 = bitcast %class.scoped_refptr* %76 to i64*
  %78 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 0, i32 0
  %79 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %78, align 8, !noalias !2
  store i64 %75, i64* %77, align 8, !noalias !2
  %80 = icmp eq %"class.blink::NonInterpolableValue"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %79, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %82, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #11, !noalias !2
  %84 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %82, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4, !noalias !2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %94

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %82, i64 -2
  %89 = bitcast %"class.base::RefCounted"* %88 to %"class.blink::NonInterpolableValue"*
  %90 = bitcast %"class.base::RefCounted"* %88 to void (%"class.blink::NonInterpolableValue"*)***
  %91 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %90, align 8, !noalias !2
  %92 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %91, i64 1
  %93 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %92, align 8, !noalias !2
  call void %93(%"class.blink::NonInterpolableValue"* nonnull %89) #11, !noalias !2
  br label %94

94:                                               ; preds = %87, %81, %74, %61
  %95 = phi i32 [ 1, %61 ], [ 0, %74 ], [ 0, %81 ], [ 0, %87 ]
  %96 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %50, align 8, !noalias !2
  %97 = icmp eq %"class.blink::NonInterpolableValue"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %96, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #11, !noalias !2
  %101 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4, !noalias !2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 -2
  %106 = bitcast %"class.base::RefCounted"* %105 to %"class.blink::NonInterpolableValue"*
  %107 = bitcast %"class.base::RefCounted"* %105 to void (%"class.blink::NonInterpolableValue"*)***
  %108 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %107, align 8, !noalias !2
  %109 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %108, i64 1
  %110 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %109, align 8, !noalias !2
  call void %110(%"class.blink::NonInterpolableValue"* nonnull %106) #11, !noalias !2
  br label %111

111:                                              ; preds = %104, %98, %94
  %112 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %44, align 8, !noalias !2
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %44, align 8, !noalias !2
  %113 = icmp eq %"class.blink::InterpolableValue"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %111
  %115 = bitcast %"class.blink::InterpolableValue"* %112 to void (%"class.blink::InterpolableValue"*)***
  %116 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %115, align 8, !noalias !2
  %117 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %116, i64 1
  %118 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %117, align 8, !noalias !2
  call void %118(%"class.blink::InterpolableValue"* nonnull %112) #11, !noalias !2
  br label %119

119:                                              ; preds = %114, %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11, !noalias !2
  %120 = icmp eq i32 %95, 0
  %121 = add nuw i32 %54, 1
  br i1 %120, label %51, label %169

122:                                              ; preds = %51
  %123 = load i32, i32* %35, align 8, !noalias !2
  %124 = call noalias i8* @malloc(i64 32) #11, !noalias !2
  %125 = getelementptr inbounds i8, i8* %124, i64 8
  %126 = bitcast i8* %125 to i32*
  store i32 1, i32* %126, align 4, !noalias !2
  %127 = bitcast i8* %124 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %127, align 8, !noalias !2
  %128 = getelementptr inbounds i8, i8* %124, i64 16
  %129 = bitcast i8* %128 to %class.scoped_refptr**
  store %class.scoped_refptr* null, %class.scoped_refptr** %129, align 8, !noalias !2
  %130 = getelementptr inbounds i8, i8* %124, i64 24
  %131 = bitcast i8* %130 to i32*
  store i32 0, i32* %131, align 8, !noalias !2
  %132 = icmp eq i32 %123, 0
  br i1 %132, label %142, label %133

133:                                              ; preds = %122
  %134 = zext i32 %123 to i64
  %135 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %134) #11, !noalias !2
  %136 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %135, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !2
  %137 = ptrtoint i8* %136 to i64
  %138 = bitcast i8* %128 to i64*
  store atomic i64 %137, i64* %138 monotonic, align 8, !noalias !2
  %139 = lshr i64 %135, 3
  %140 = trunc i64 %139 to i32
  store i32 %140, i32* %131, align 8, !noalias !2
  %141 = bitcast i8* %136 to %class.scoped_refptr*
  br label %142

142:                                              ; preds = %133, %122
  %143 = phi %class.scoped_refptr* [ null, %122 ], [ %141, %133 ]
  %144 = load i32, i32* %36, align 4, !noalias !2
  %145 = getelementptr inbounds i8, i8* %124, i64 28
  %146 = bitcast i8* %145 to i32*
  store i32 %144, i32* %146, align 4, !noalias !2
  %147 = load %class.scoped_refptr*, %class.scoped_refptr** %34, align 8, !noalias !2
  %148 = zext i32 %144 to i64
  %149 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %147, i64 %148
  %150 = icmp eq i32 %144, 0
  br i1 %150, label %164, label %151

151:                                              ; preds = %142, %160
  %152 = phi %class.scoped_refptr* [ %161, %160 ], [ %143, %142 ]
  %153 = phi %class.scoped_refptr* [ %162, %160 ], [ %147, %142 ]
  %154 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %153, i64 0, i32 0
  %155 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %154, align 8, !noalias !2
  %156 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %152, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %155, %"class.blink::NonInterpolableValue"** %156, align 8, !noalias !2
  %157 = icmp eq %"class.blink::NonInterpolableValue"* %155, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %155, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %159) #11, !noalias !2
  br label %160

160:                                              ; preds = %158, %151
  %161 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %152, i64 1
  %162 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %153, i64 1
  %163 = icmp eq %class.scoped_refptr* %162, %149
  br i1 %163, label %164, label %151

164:                                              ; preds = %160, %142
  %165 = ptrtoint i8* %124 to i64
  %166 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %32, i64* %166, align 8, !alias.scope !2
  %167 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %168 = bitcast %class.scoped_refptr* %167 to i64*
  store i64 %165, i64* %168, align 8, !alias.scope !2
  br label %169

169:                                              ; preds = %119, %164
  %170 = phi i64 [ 0, %164 ], [ %32, %119 ]
  %171 = load %class.scoped_refptr*, %class.scoped_refptr** %34, align 8, !noalias !2
  %172 = icmp eq %class.scoped_refptr* %171, null
  br i1 %172, label %206, label %173, !prof !11

173:                                              ; preds = %169
  %174 = bitcast %class.scoped_refptr* %171 to i8*
  %175 = load i32, i32* %36, align 4, !noalias !2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %204, label %177, !prof !12

177:                                              ; preds = %173
  %178 = zext i32 %175 to i64
  %179 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %171, i64 %178
  br label %180

180:                                              ; preds = %198, %177
  %181 = phi %class.scoped_refptr* [ %199, %198 ], [ %171, %177 ]
  %182 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %181, i64 0, i32 0
  %183 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %182, align 8, !noalias !2
  %184 = icmp eq %"class.blink::NonInterpolableValue"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %183, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %186, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #11, !noalias !2
  %188 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4, !noalias !2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted"* %192 to %"class.blink::NonInterpolableValue"*
  %194 = bitcast %"class.base::RefCounted"* %192 to void (%"class.blink::NonInterpolableValue"*)***
  %195 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %194, align 8, !noalias !2
  %196 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %195, i64 1
  %197 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %196, align 8, !noalias !2
  call void %197(%"class.blink::NonInterpolableValue"* nonnull %193) #11, !noalias !2
  br label %198

198:                                              ; preds = %191, %185, %180
  %199 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %181, i64 1
  %200 = icmp eq %class.scoped_refptr* %199, %179
  br i1 %200, label %201, label %180

201:                                              ; preds = %198
  store i32 0, i32* %36, align 4, !noalias !2
  %202 = bitcast %"class.WTF::Vector.234"* %4 to i8**
  %203 = load i8*, i8** %202, align 8, !noalias !2
  br label %204

204:                                              ; preds = %201, %173
  %205 = phi i8* [ %203, %201 ], [ %174, %173 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %205) #11, !noalias !2
  store %class.scoped_refptr* null, %class.scoped_refptr** %34, align 8, !noalias !2
  br label %206

206:                                              ; preds = %204, %169
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11, !noalias !2
  %207 = icmp eq i64 %170, 0
  br i1 %207, label %214, label %208

208:                                              ; preds = %206
  %209 = inttoptr i64 %170 to %"class.blink::InterpolableList"*
  %210 = inttoptr i64 %170 to void (%"class.blink::InterpolableList"*)***
  %211 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %210, align 8, !noalias !2
  %212 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %211, i64 1
  %213 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %212, align 8, !noalias !2
  call void %213(%"class.blink::InterpolableList"* nonnull %209) #11, !noalias !2
  br label %214

214:                                              ; preds = %13, %206, %208
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MaybeConvertCSSSizeListERKNS_8CSSValueE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::Vector.234", align 8
  %4 = alloca %"struct.blink::InterpolationValue", align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 52
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #11
  %10 = bitcast i8* %9 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %10, i32 1) #11
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  %16 = getelementptr inbounds i8, i8* %9, i64 20
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i8, i8* %9, i64 16
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %18, %21
  br i1 %22, label %38, label %23, !prof !12

23:                                               ; preds = %8
  %24 = bitcast i8* %15 to %"class.blink::Member"**
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %26 = zext i32 %18 to i64
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 %26
  %28 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %29 = bitcast %"class.blink::Member"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #11
  br label %35

35:                                               ; preds = %32, %23
  %36 = load i32, i32* %17, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %17, align 4
  br label %42

38:                                               ; preds = %8
  %39 = bitcast i8* %15 to %"class.WTF::Vector.3"*
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.3"* %39, %"class.blink::CSSValue"* dereferenceable(3) %1) #11
  br label %42

40:                                               ; preds = %2
  %41 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSValueList"*
  br label %42

42:                                               ; preds = %38, %35, %40
  %43 = phi %"class.blink::CSSValueList"* [ %41, %40 ], [ %10, %35 ], [ %10, %38 ]
  %44 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = shl i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = tail call noalias i8* @malloc(i64 24) #11, !noalias !13
  %49 = bitcast i8* %48 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8, !noalias !13
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  br i1 %47, label %51, label %56

51:                                               ; preds = %42
  %52 = ptrtoint i8* %48 to i64
  %53 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #11, !noalias !16
  store i64 %52, i64* %53, align 8, !alias.scope !16
  %54 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %55 = bitcast %class.scoped_refptr* %54 to i64*
  store i64 0, i64* %55, align 8, !alias.scope !16
  br label %255

56:                                               ; preds = %42
  %57 = bitcast i8* %50 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %57, align 8, !noalias !13
  %58 = getelementptr inbounds i8, i8* %48, i64 16
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 8, !noalias !13
  %60 = zext i32 %46 to i64
  %61 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %60) #11, !noalias !13
  %62 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %61, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11, !noalias !13
  %63 = ptrtoint i8* %62 to i64
  %64 = bitcast i8* %50 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8, !noalias !13
  %65 = lshr i64 %61, 3
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %59, align 8, !noalias !13
  %67 = shl nuw nsw i64 %60, 3
  %68 = getelementptr inbounds i8, i8* %48, i64 20
  %69 = bitcast i8* %68 to i32*
  store i32 %46, i32* %69, align 4, !noalias !13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 %67, i1 false) #11, !noalias !13
  %70 = ptrtoint i8* %48 to i64
  %71 = bitcast %"class.WTF::Vector.234"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #11, !noalias !13
  %72 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 2
  %75 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %60) #11, !noalias !13
  %76 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %75, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !13
  %77 = ptrtoint i8* %76 to i64
  %78 = bitcast %"class.WTF::Vector.234"* %3 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8, !noalias !13
  %79 = lshr i64 %75, 3
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %73, align 8, !noalias !13
  store i32 %46, i32* %74, align 4, !noalias !13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 %67, i1 false) #11, !noalias !13
  %81 = bitcast %"struct.blink::InterpolationValue"* %4 to i8*
  %82 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %83, i64 0, i32 0
  %85 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %43, i64 0, i32 1, i32 0
  %86 = bitcast i8* %50 to %"class.WTF::Vector.1474"*
  %87 = bitcast %class.scoped_refptr* %83 to i64*
  %88 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %89 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %4, i64 0, i32 1, i32 0
  br label %92

90:                                               ; preds = %160
  %91 = icmp eq i32 %162, %46
  br i1 %91, label %163, label %92

92:                                               ; preds = %90, %56
  %93 = phi i32 [ 0, %56 ], [ %162, %90 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #11, !noalias !13
  %94 = lshr i32 %93, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #11, !noalias !13
  %95 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %85, i32 %94) #11, !noalias !19
  %96 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %96, align 8, !noalias !19
  %98 = and i32 %93, 1
  %99 = icmp eq i32 %98, 0
  call void @_ZN5blink26SizeInterpolationFunctions23MaybeConvertCSSSizeSideERKNS_8CSSValueEb(%"struct.blink::InterpolationValue"* nonnull sret %4, %"class.blink::CSSValue"* dereferenceable(3) %97, i1 zeroext %99) #11, !noalias !13
  %100 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %82, align 8, !noalias !13
  %101 = icmp eq %"class.blink::InterpolableValue"* %100, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %92
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #11, !alias.scope !13
  br label %135

103:                                              ; preds = %92
  %104 = ptrtoint %"class.blink::InterpolableValue"* %100 to i64
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %82, align 8, !noalias !13
  %105 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"* %86, i32 %93) #11, !noalias !13
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %106, align 8, !noalias !13
  %108 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  store i64 %104, i64* %108, align 8, !noalias !13
  %109 = icmp eq %"class.blink::InterpolableValue"* %107, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %103
  %111 = bitcast %"class.blink::InterpolableValue"* %107 to void (%"class.blink::InterpolableValue"*)***
  %112 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %111, align 8, !noalias !13
  %113 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %112, i64 1
  %114 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %113, align 8, !noalias !13
  call void %114(%"class.blink::InterpolableValue"* nonnull %107) #11, !noalias !13
  br label %115

115:                                              ; preds = %110, %103
  %116 = load i64, i64* %87, align 8, !noalias !13
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %84, align 8, !noalias !13
  %117 = call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* nonnull %3, i32 %93) #11, !noalias !13
  %118 = bitcast %class.scoped_refptr* %117 to i64*
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %117, i64 0, i32 0
  %120 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %119, align 8, !noalias !13
  store i64 %116, i64* %118, align 8, !noalias !13
  %121 = icmp eq %"class.blink::NonInterpolableValue"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %120, i64 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %123, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #11, !noalias !13
  %125 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %123, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4, !noalias !13
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %135

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %123, i64 -2
  %130 = bitcast %"class.base::RefCounted"* %129 to %"class.blink::NonInterpolableValue"*
  %131 = bitcast %"class.base::RefCounted"* %129 to void (%"class.blink::NonInterpolableValue"*)***
  %132 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %131, align 8, !noalias !13
  %133 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %132, i64 1
  %134 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %133, align 8, !noalias !13
  call void %134(%"class.blink::NonInterpolableValue"* nonnull %130) #11, !noalias !13
  br label %135

135:                                              ; preds = %128, %122, %115, %102
  %136 = phi i32 [ 1, %102 ], [ 0, %115 ], [ 0, %122 ], [ 0, %128 ]
  %137 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %89, align 8, !noalias !13
  %138 = icmp eq %"class.blink::NonInterpolableValue"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %137, i64 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %141) #11, !noalias !13
  %142 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4, !noalias !13
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %152

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 -2
  %147 = bitcast %"class.base::RefCounted"* %146 to %"class.blink::NonInterpolableValue"*
  %148 = bitcast %"class.base::RefCounted"* %146 to void (%"class.blink::NonInterpolableValue"*)***
  %149 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %148, align 8, !noalias !13
  %150 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %149, i64 1
  %151 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %150, align 8, !noalias !13
  call void %151(%"class.blink::NonInterpolableValue"* nonnull %147) #11, !noalias !13
  br label %152

152:                                              ; preds = %145, %139, %135
  %153 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %82, align 8, !noalias !13
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %82, align 8, !noalias !13
  %154 = icmp eq %"class.blink::InterpolableValue"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.blink::InterpolableValue"* %153 to void (%"class.blink::InterpolableValue"*)***
  %157 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %156, align 8, !noalias !13
  %158 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %157, i64 1
  %159 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %158, align 8, !noalias !13
  call void %159(%"class.blink::InterpolableValue"* nonnull %153) #11, !noalias !13
  br label %160

160:                                              ; preds = %155, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11, !noalias !13
  %161 = icmp eq i32 %136, 0
  %162 = add nuw i32 %93, 1
  br i1 %161, label %90, label %210

163:                                              ; preds = %90
  %164 = load i32, i32* %73, align 8, !noalias !13
  %165 = call noalias i8* @malloc(i64 32) #11, !noalias !13
  %166 = getelementptr inbounds i8, i8* %165, i64 8
  %167 = bitcast i8* %166 to i32*
  store i32 1, i32* %167, align 4, !noalias !13
  %168 = bitcast i8* %165 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8, !noalias !13
  %169 = getelementptr inbounds i8, i8* %165, i64 16
  %170 = bitcast i8* %169 to %class.scoped_refptr**
  store %class.scoped_refptr* null, %class.scoped_refptr** %170, align 8, !noalias !13
  %171 = getelementptr inbounds i8, i8* %165, i64 24
  %172 = bitcast i8* %171 to i32*
  store i32 0, i32* %172, align 8, !noalias !13
  %173 = icmp eq i32 %164, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163
  %175 = zext i32 %164 to i64
  %176 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %175) #11, !noalias !13
  %177 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %176, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !13
  %178 = ptrtoint i8* %177 to i64
  %179 = bitcast i8* %169 to i64*
  store atomic i64 %178, i64* %179 monotonic, align 8, !noalias !13
  %180 = lshr i64 %176, 3
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %172, align 8, !noalias !13
  %182 = bitcast i8* %177 to %class.scoped_refptr*
  br label %183

183:                                              ; preds = %174, %163
  %184 = phi %class.scoped_refptr* [ null, %163 ], [ %182, %174 ]
  %185 = load i32, i32* %74, align 4, !noalias !13
  %186 = getelementptr inbounds i8, i8* %165, i64 28
  %187 = bitcast i8* %186 to i32*
  store i32 %185, i32* %187, align 4, !noalias !13
  %188 = load %class.scoped_refptr*, %class.scoped_refptr** %72, align 8, !noalias !13
  %189 = zext i32 %185 to i64
  %190 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %188, i64 %189
  %191 = icmp eq i32 %185, 0
  br i1 %191, label %205, label %192

192:                                              ; preds = %183, %201
  %193 = phi %class.scoped_refptr* [ %202, %201 ], [ %184, %183 ]
  %194 = phi %class.scoped_refptr* [ %203, %201 ], [ %188, %183 ]
  %195 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %194, i64 0, i32 0
  %196 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %195, align 8, !noalias !13
  %197 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %193, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %196, %"class.blink::NonInterpolableValue"** %197, align 8, !noalias !13
  %198 = icmp eq %"class.blink::NonInterpolableValue"* %196, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %196, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %200) #11, !noalias !13
  br label %201

201:                                              ; preds = %199, %192
  %202 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %193, i64 1
  %203 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %194, i64 1
  %204 = icmp eq %class.scoped_refptr* %203, %190
  br i1 %204, label %205, label %192

205:                                              ; preds = %201, %183
  %206 = ptrtoint i8* %165 to i64
  %207 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %70, i64* %207, align 8, !alias.scope !13
  %208 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %209 = bitcast %class.scoped_refptr* %208 to i64*
  store i64 %206, i64* %209, align 8, !alias.scope !13
  br label %210

210:                                              ; preds = %160, %205
  %211 = phi i64 [ 0, %205 ], [ %70, %160 ]
  %212 = load %class.scoped_refptr*, %class.scoped_refptr** %72, align 8, !noalias !13
  %213 = icmp eq %class.scoped_refptr* %212, null
  br i1 %213, label %247, label %214, !prof !11

214:                                              ; preds = %210
  %215 = bitcast %class.scoped_refptr* %212 to i8*
  %216 = load i32, i32* %74, align 4, !noalias !13
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %245, label %218, !prof !12

218:                                              ; preds = %214
  %219 = zext i32 %216 to i64
  %220 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %212, i64 %219
  br label %221

221:                                              ; preds = %239, %218
  %222 = phi %class.scoped_refptr* [ %240, %239 ], [ %212, %218 ]
  %223 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %222, i64 0, i32 0
  %224 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %223, align 8, !noalias !13
  %225 = icmp eq %"class.blink::NonInterpolableValue"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %224, i64 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %227, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %228) #11, !noalias !13
  %229 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %227, i64 0, i32 0, i32 0
  %230 = load i32, i32* %229, align 4, !noalias !13
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %239

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %227, i64 -2
  %234 = bitcast %"class.base::RefCounted"* %233 to %"class.blink::NonInterpolableValue"*
  %235 = bitcast %"class.base::RefCounted"* %233 to void (%"class.blink::NonInterpolableValue"*)***
  %236 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %235, align 8, !noalias !13
  %237 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %236, i64 1
  %238 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %237, align 8, !noalias !13
  call void %238(%"class.blink::NonInterpolableValue"* nonnull %234) #11, !noalias !13
  br label %239

239:                                              ; preds = %232, %226, %221
  %240 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %222, i64 1
  %241 = icmp eq %class.scoped_refptr* %240, %220
  br i1 %241, label %242, label %221

242:                                              ; preds = %239
  store i32 0, i32* %74, align 4, !noalias !13
  %243 = bitcast %"class.WTF::Vector.234"* %3 to i8**
  %244 = load i8*, i8** %243, align 8, !noalias !13
  br label %245

245:                                              ; preds = %242, %214
  %246 = phi i8* [ %244, %242 ], [ %215, %214 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %246) #11, !noalias !13
  store %class.scoped_refptr* null, %class.scoped_refptr** %72, align 8, !noalias !13
  br label %247

247:                                              ; preds = %245, %210
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #11, !noalias !13
  %248 = icmp eq i64 %211, 0
  br i1 %248, label %255, label %249

249:                                              ; preds = %247
  %250 = inttoptr i64 %211 to %"class.blink::InterpolableList"*
  %251 = inttoptr i64 %211 to void (%"class.blink::InterpolableList"*)***
  %252 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %251, align 8, !noalias !13
  %253 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %252, i64 1
  %254 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %253, align 8, !noalias !13
  call void %254(%"class.blink::InterpolableList"* nonnull %250) #11, !noalias !13
  br label %255

255:                                              ; preds = %51, %247, %249
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSSizeListInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.228"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.234", align 8
  %6 = alloca %"struct.blink::InterpolationValue", align 8
  %7 = alloca %"class.std::__1::unique_ptr.239", align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %9 = bitcast %"class.blink::NonInterpolableValue"** %8 to %"class.blink::NonInterpolableList"**
  %10 = load %"class.blink::NonInterpolableList"*, %"class.blink::NonInterpolableList"** %9, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.239"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = tail call noalias i8* @malloc(i64 24) #11
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %14, align 8
  %15 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink25UnderlyingSizeListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to %"class.blink::NonInterpolableList"**
  store %"class.blink::NonInterpolableList"* %10, %"class.blink::NonInterpolableList"** %17, align 8
  %18 = icmp eq %"class.blink::NonInterpolableList"* %10, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #11
  br label %21

21:                                               ; preds = %4, %19
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239"* %7, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.239"* %7 to i8**
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %3, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %38, label %29, !prof !12

29:                                               ; preds = %21
  %30 = ptrtoint i8* %12 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %31, align 8
  %33 = zext i32 %25 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %32, i64 %33
  store %"class.blink::UnderlyingSizeListChecker"* null, %"class.blink::UnderlyingSizeListChecker"** %22, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.231"* %34 to i64*
  store i64 %30, i64* %35, align 8
  %36 = load i32, i32* %24, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %24, align 4
  br label %39

38:                                               ; preds = %21
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25UnderlyingSizeListCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.228"* %3, %"class.std::__1::unique_ptr.239"* nonnull dereferenceable(8) %7) #11
  br label %39

39:                                               ; preds = %29, %38
  %40 = load %"class.blink::UnderlyingSizeListChecker"*, %"class.blink::UnderlyingSizeListChecker"** %22, align 8
  store %"class.blink::UnderlyingSizeListChecker"* null, %"class.blink::UnderlyingSizeListChecker"** %22, align 8
  %41 = icmp eq %"class.blink::UnderlyingSizeListChecker"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::UnderlyingSizeListChecker"* %40 to void (%"class.blink::UnderlyingSizeListChecker"*)***
  %44 = load void (%"class.blink::UnderlyingSizeListChecker"*)**, void (%"class.blink::UnderlyingSizeListChecker"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::UnderlyingSizeListChecker"*)*, void (%"class.blink::UnderlyingSizeListChecker"*)** %44, i64 1
  %46 = load void (%"class.blink::UnderlyingSizeListChecker"*)*, void (%"class.blink::UnderlyingSizeListChecker"*)** %45, align 8
  call void %46(%"class.blink::UnderlyingSizeListChecker"* nonnull %40) #11
  br label %47

47:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %48 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  %51 = call noalias i8* @malloc(i64 24) #11, !noalias !22
  %52 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8, !noalias !22
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  br i1 %50, label %54, label %59

54:                                               ; preds = %47
  %55 = ptrtoint i8* %51 to i64
  %56 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #11, !noalias !25
  store i64 %55, i64* %56, align 8, !alias.scope !25
  %57 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %58 = bitcast %class.scoped_refptr* %57 to i64*
  store i64 0, i64* %58, align 8, !alias.scope !25
  br label %255

59:                                               ; preds = %47
  %60 = bitcast i8* %53 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %60, align 8, !noalias !22
  %61 = getelementptr inbounds i8, i8* %51, i64 16
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 8, !noalias !22
  %63 = zext i32 %49 to i64
  %64 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %63) #11, !noalias !22
  %65 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %64, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11, !noalias !22
  %66 = ptrtoint i8* %65 to i64
  %67 = bitcast i8* %53 to i64*
  store atomic i64 %66, i64* %67 monotonic, align 8, !noalias !22
  %68 = lshr i64 %64, 3
  %69 = trunc i64 %68 to i32
  store i32 %69, i32* %62, align 8, !noalias !22
  %70 = shl nuw nsw i64 %63, 3
  %71 = getelementptr inbounds i8, i8* %51, i64 20
  %72 = bitcast i8* %71 to i32*
  store i32 %49, i32* %72, align 4, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 %70, i1 false) #11, !noalias !22
  %73 = ptrtoint i8* %51 to i64
  %74 = bitcast %"class.WTF::Vector.234"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #11, !noalias !22
  %75 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %5, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %5, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %5, i64 0, i32 0, i32 0, i32 2
  %78 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %63) #11, !noalias !22
  %79 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %78, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !22
  %80 = ptrtoint i8* %79 to i64
  %81 = bitcast %"class.WTF::Vector.234"* %5 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8, !noalias !22
  %82 = lshr i64 %78, 3
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %76, align 8, !noalias !22
  store i32 %49, i32* %77, align 4, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 %70, i1 false) #11, !noalias !22
  %84 = bitcast %"struct.blink::InterpolationValue"* %6 to i8*
  %85 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %10, i64 0, i32 1
  %89 = bitcast i8* %53 to %"class.WTF::Vector.1474"*
  %90 = bitcast %class.scoped_refptr* %86 to i64*
  %91 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %92 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1, i32 0
  br label %95

93:                                               ; preds = %160
  %94 = icmp eq i32 %162, %49
  br i1 %94, label %163, label %95

95:                                               ; preds = %93, %59
  %96 = phi i32 [ 0, %59 ], [ %162, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #11, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 16, i1 false) #11, !noalias !22
  %97 = call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* %88, i32 %96) #11, !noalias !28
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %97, i64 0, i32 0
  %99 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %98, align 8, !noalias !28
  call void @_ZN5blink26SizeInterpolationFunctions18CreateNeutralValueEPKNS_20NonInterpolableValueE(%"struct.blink::InterpolationValue"* nonnull sret %6, %"class.blink::NonInterpolableValue"* %99) #11, !noalias !22
  %100 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %85, align 8, !noalias !22
  %101 = icmp eq %"class.blink::InterpolableValue"* %100, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #11, !alias.scope !22
  br label %135

103:                                              ; preds = %95
  %104 = ptrtoint %"class.blink::InterpolableValue"* %100 to i64
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %85, align 8, !noalias !22
  %105 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"* %89, i32 %96) #11, !noalias !22
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %106, align 8, !noalias !22
  %108 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  store i64 %104, i64* %108, align 8, !noalias !22
  %109 = icmp eq %"class.blink::InterpolableValue"* %107, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %103
  %111 = bitcast %"class.blink::InterpolableValue"* %107 to void (%"class.blink::InterpolableValue"*)***
  %112 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %111, align 8, !noalias !22
  %113 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %112, i64 1
  %114 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %113, align 8, !noalias !22
  call void %114(%"class.blink::InterpolableValue"* nonnull %107) #11, !noalias !22
  br label %115

115:                                              ; preds = %110, %103
  %116 = load i64, i64* %90, align 8, !noalias !22
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %87, align 8, !noalias !22
  %117 = call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* nonnull %5, i32 %96) #11, !noalias !22
  %118 = bitcast %class.scoped_refptr* %117 to i64*
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %117, i64 0, i32 0
  %120 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %119, align 8, !noalias !22
  store i64 %116, i64* %118, align 8, !noalias !22
  %121 = icmp eq %"class.blink::NonInterpolableValue"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %120, i64 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %123, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #11, !noalias !22
  %125 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %123, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4, !noalias !22
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %135

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %123, i64 -2
  %130 = bitcast %"class.base::RefCounted"* %129 to %"class.blink::NonInterpolableValue"*
  %131 = bitcast %"class.base::RefCounted"* %129 to void (%"class.blink::NonInterpolableValue"*)***
  %132 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %131, align 8, !noalias !22
  %133 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %132, i64 1
  %134 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %133, align 8, !noalias !22
  call void %134(%"class.blink::NonInterpolableValue"* nonnull %130) #11, !noalias !22
  br label %135

135:                                              ; preds = %128, %122, %115, %102
  %136 = phi i32 [ 1, %102 ], [ 0, %115 ], [ 0, %122 ], [ 0, %128 ]
  %137 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %92, align 8, !noalias !22
  %138 = icmp eq %"class.blink::NonInterpolableValue"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %137, i64 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %141) #11, !noalias !22
  %142 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4, !noalias !22
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %152

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %140, i64 -2
  %147 = bitcast %"class.base::RefCounted"* %146 to %"class.blink::NonInterpolableValue"*
  %148 = bitcast %"class.base::RefCounted"* %146 to void (%"class.blink::NonInterpolableValue"*)***
  %149 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %148, align 8, !noalias !22
  %150 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %149, i64 1
  %151 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %150, align 8, !noalias !22
  call void %151(%"class.blink::NonInterpolableValue"* nonnull %147) #11, !noalias !22
  br label %152

152:                                              ; preds = %145, %139, %135
  %153 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %85, align 8, !noalias !22
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %85, align 8, !noalias !22
  %154 = icmp eq %"class.blink::InterpolableValue"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.blink::InterpolableValue"* %153 to void (%"class.blink::InterpolableValue"*)***
  %157 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %156, align 8, !noalias !22
  %158 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %157, i64 1
  %159 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %158, align 8, !noalias !22
  call void %159(%"class.blink::InterpolableValue"* nonnull %153) #11, !noalias !22
  br label %160

160:                                              ; preds = %155, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #11, !noalias !22
  %161 = icmp eq i32 %136, 0
  %162 = add nuw i32 %96, 1
  br i1 %161, label %93, label %210

163:                                              ; preds = %93
  %164 = load i32, i32* %76, align 8, !noalias !22
  %165 = call noalias i8* @malloc(i64 32) #11, !noalias !22
  %166 = getelementptr inbounds i8, i8* %165, i64 8
  %167 = bitcast i8* %166 to i32*
  store i32 1, i32* %167, align 4, !noalias !22
  %168 = bitcast i8* %165 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8, !noalias !22
  %169 = getelementptr inbounds i8, i8* %165, i64 16
  %170 = bitcast i8* %169 to %class.scoped_refptr**
  store %class.scoped_refptr* null, %class.scoped_refptr** %170, align 8, !noalias !22
  %171 = getelementptr inbounds i8, i8* %165, i64 24
  %172 = bitcast i8* %171 to i32*
  store i32 0, i32* %172, align 8, !noalias !22
  %173 = icmp eq i32 %164, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163
  %175 = zext i32 %164 to i64
  %176 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %175) #11, !noalias !22
  %177 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %176, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !22
  %178 = ptrtoint i8* %177 to i64
  %179 = bitcast i8* %169 to i64*
  store atomic i64 %178, i64* %179 monotonic, align 8, !noalias !22
  %180 = lshr i64 %176, 3
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %172, align 8, !noalias !22
  %182 = bitcast i8* %177 to %class.scoped_refptr*
  br label %183

183:                                              ; preds = %174, %163
  %184 = phi %class.scoped_refptr* [ null, %163 ], [ %182, %174 ]
  %185 = load i32, i32* %77, align 4, !noalias !22
  %186 = getelementptr inbounds i8, i8* %165, i64 28
  %187 = bitcast i8* %186 to i32*
  store i32 %185, i32* %187, align 4, !noalias !22
  %188 = load %class.scoped_refptr*, %class.scoped_refptr** %75, align 8, !noalias !22
  %189 = zext i32 %185 to i64
  %190 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %188, i64 %189
  %191 = icmp eq i32 %185, 0
  br i1 %191, label %205, label %192

192:                                              ; preds = %183, %201
  %193 = phi %class.scoped_refptr* [ %202, %201 ], [ %184, %183 ]
  %194 = phi %class.scoped_refptr* [ %203, %201 ], [ %188, %183 ]
  %195 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %194, i64 0, i32 0
  %196 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %195, align 8, !noalias !22
  %197 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %193, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %196, %"class.blink::NonInterpolableValue"** %197, align 8, !noalias !22
  %198 = icmp eq %"class.blink::NonInterpolableValue"* %196, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %196, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %200) #11, !noalias !22
  br label %201

201:                                              ; preds = %199, %192
  %202 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %193, i64 1
  %203 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %194, i64 1
  %204 = icmp eq %class.scoped_refptr* %203, %190
  br i1 %204, label %205, label %192

205:                                              ; preds = %201, %183
  %206 = ptrtoint i8* %165 to i64
  %207 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %73, i64* %207, align 8, !alias.scope !22
  %208 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %209 = bitcast %class.scoped_refptr* %208 to i64*
  store i64 %206, i64* %209, align 8, !alias.scope !22
  br label %210

210:                                              ; preds = %160, %205
  %211 = phi i64 [ 0, %205 ], [ %73, %160 ]
  %212 = load %class.scoped_refptr*, %class.scoped_refptr** %75, align 8, !noalias !22
  %213 = icmp eq %class.scoped_refptr* %212, null
  br i1 %213, label %247, label %214, !prof !11

214:                                              ; preds = %210
  %215 = bitcast %class.scoped_refptr* %212 to i8*
  %216 = load i32, i32* %77, align 4, !noalias !22
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %245, label %218, !prof !12

218:                                              ; preds = %214
  %219 = zext i32 %216 to i64
  %220 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %212, i64 %219
  br label %221

221:                                              ; preds = %239, %218
  %222 = phi %class.scoped_refptr* [ %240, %239 ], [ %212, %218 ]
  %223 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %222, i64 0, i32 0
  %224 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %223, align 8, !noalias !22
  %225 = icmp eq %"class.blink::NonInterpolableValue"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %224, i64 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %227, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %228) #11, !noalias !22
  %229 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %227, i64 0, i32 0, i32 0
  %230 = load i32, i32* %229, align 4, !noalias !22
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %239

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %227, i64 -2
  %234 = bitcast %"class.base::RefCounted"* %233 to %"class.blink::NonInterpolableValue"*
  %235 = bitcast %"class.base::RefCounted"* %233 to void (%"class.blink::NonInterpolableValue"*)***
  %236 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %235, align 8, !noalias !22
  %237 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %236, i64 1
  %238 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %237, align 8, !noalias !22
  call void %238(%"class.blink::NonInterpolableValue"* nonnull %234) #11, !noalias !22
  br label %239

239:                                              ; preds = %232, %226, %221
  %240 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %222, i64 1
  %241 = icmp eq %class.scoped_refptr* %240, %220
  br i1 %241, label %242, label %221

242:                                              ; preds = %239
  store i32 0, i32* %77, align 4, !noalias !22
  %243 = bitcast %"class.WTF::Vector.234"* %5 to i8**
  %244 = load i8*, i8** %243, align 8, !noalias !22
  br label %245

245:                                              ; preds = %242, %214
  %246 = phi i8* [ %244, %242 ], [ %215, %214 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %246) #11, !noalias !22
  store %class.scoped_refptr* null, %class.scoped_refptr** %75, align 8, !noalias !22
  br label %247

247:                                              ; preds = %245, %210
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #11, !noalias !22
  %248 = icmp eq i64 %211, 0
  br i1 %248, label %255, label %249

249:                                              ; preds = %247
  %250 = inttoptr i64 %211 to %"class.blink::InterpolableList"*
  %251 = inttoptr i64 %211 to void (%"class.blink::InterpolableList"*)***
  %252 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %251, align 8, !noalias !22
  %253 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %252, i64 1
  %254 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %253, align 8, !noalias !22
  call void %254(%"class.blink::InterpolableList"* nonnull %250) #11, !noalias !22
  br label %255

255:                                              ; preds = %54, %247, %249
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSSizeListInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.228"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !31
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4, !noalias !31
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %29

19:                                               ; preds = %12
  %20 = zext i32 %18 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !12

26:                                               ; preds = %19
  tail call void @llvm.trap() #11, !noalias !31
  unreachable

27:                                               ; preds = %19
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %17, align 4, !noalias !31
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi i32 [ %28, %27 ], [ %18, %12 ]
  %31 = load atomic i32, i32* %13 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = add i32 %30, -1
  store i32 %35, i32* %17, align 4
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i32 [ %35, %34 ], [ %30, %29 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %40

40:                                               ; preds = %4, %36, %39
  %41 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 1
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %42) #11
  %44 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"* %43) #11
  call void @_ZN5blink25SizeListPropertyFunctions18GetInitialSizeListERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.WTF::Vector"* nonnull sret %5, %"class.blink::CSSProperty"* dereferenceable(24) %8, %"class.blink::ComputedStyle"* dereferenceable(104) %44) #11
  call void @_ZN5blink15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* sret %0, %"class.WTF::Vector"* nonnull dereferenceable(40) %5, float 1.000000e+00)
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %47, label %70, label %49, !prof !12

49:                                               ; preds = %40
  %50 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %48, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %50, i64 %51
  br label %53

53:                                               ; preds = %66, %49
  %54 = phi %"struct.blink::FillSize"* [ %67, %66 ], [ %50, %49 ]
  %55 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %54, i64 0, i32 1, i32 1, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 8
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %54, i64 0, i32 1, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %59) #11
  br label %60

60:                                               ; preds = %58, %53
  %61 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %54, i64 0, i32 1, i32 0, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %54, i64 0, i32 1, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #11
  br label %66

66:                                               ; preds = %64, %60
  %67 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %54, i64 1
  %68 = icmp eq %"struct.blink::FillSize"* %67, %52
  br i1 %68, label %69, label %53

69:                                               ; preds = %66
  store i32 0, i32* %45, align 4
  br label %70

70:                                               ; preds = %69, %40
  %71 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %48, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 1, i64 0
  %73 = bitcast i8* %72 to %"struct.blink::FillSize"*
  %74 = icmp eq %"struct.blink::FillSize"* %71, %73
  br i1 %74, label %77, label %75, !prof !11

75:                                               ; preds = %70
  %76 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %76, %"struct.blink::FillSize"* %71) #11
  br label %77

77:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void
}

declare void @_ZN5blink25SizeListPropertyFunctions18GetInitialSizeListERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.WTF::Vector"* sret, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSSizeListInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.228"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.std::__1::unique_ptr.1465", align 8
  %7 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %9 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !34
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4, !noalias !34
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !12

27:                                               ; preds = %20
  tail call void @llvm.trap() #11, !noalias !34
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4, !noalias !34
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = add i32 %31, -1
  store i32 %36, i32* %18, align 4
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i32 [ %36, %35 ], [ %31, %30 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #11
  br label %41

41:                                               ; preds = %4, %37, %40
  %42 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 4, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  call void @_ZN5blink25SizeListPropertyFunctions11GetSizeListERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.WTF::Vector"* nonnull sret %5, %"class.blink::CSSProperty"* dereferenceable(24) %9, %"class.blink::ComputedStyle"* dereferenceable(104) %43) #11
  %44 = bitcast %"class.std::__1::unique_ptr.1465"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = bitcast %"class.blink::CSSProperty"** %8 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !37
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %77, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4, !noalias !37
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %66

56:                                               ; preds = %49
  %57 = zext i32 %55 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #11
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !12

63:                                               ; preds = %56
  call void @llvm.trap() #11, !noalias !37
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %54, align 4, !noalias !37
  br label %66

66:                                               ; preds = %64, %49
  %67 = phi i32 [ %65, %64 ], [ %55, %49 ]
  %68 = load atomic i32, i32* %50 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  %72 = add i32 %67, -1
  store i32 %72, i32* %54, align 4
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %72, %71 ], [ %67, %66 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #11
  br label %77

77:                                               ; preds = %41, %73, %76
  %78 = call noalias i8* @malloc(i64 64) #11
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %79 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %80, align 8
  %81 = bitcast i8* %78 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24InheritedSizeListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds i8, i8* %78, i64 16
  %83 = bitcast i8* %82 to i64*
  store i64 %46, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %78, i64 24
  %85 = bitcast i8* %84 to %"class.WTF::Vector"*
  call void @_ZN3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"* %85, %"class.WTF::Vector"* nonnull dereferenceable(40) %5) #11
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1465", %"class.std::__1::unique_ptr.1465"* %6, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.1465"* %6 to i8**
  store i8* %78, i8** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %3, i64 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %3, i64 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %102, label %93, !prof !12

93:                                               ; preds = %77
  %94 = ptrtoint i8* %78 to i64
  %95 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %3, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %95, align 8
  %97 = zext i32 %89 to i64
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %96, i64 %97
  store %"class.blink::InheritedSizeListChecker"* null, %"class.blink::InheritedSizeListChecker"** %86, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.231"* %98 to i64*
  store i64 %94, i64* %99, align 8
  %100 = load i32, i32* %88, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %88, align 4
  br label %103

102:                                              ; preds = %77
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24InheritedSizeListCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.228"* %3, %"class.std::__1::unique_ptr.1465"* nonnull dereferenceable(8) %6) #11
  br label %103

103:                                              ; preds = %93, %102
  %104 = load %"class.blink::InheritedSizeListChecker"*, %"class.blink::InheritedSizeListChecker"** %86, align 8
  store %"class.blink::InheritedSizeListChecker"* null, %"class.blink::InheritedSizeListChecker"** %86, align 8
  %105 = icmp eq %"class.blink::InheritedSizeListChecker"* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.blink::InheritedSizeListChecker"* %104 to void (%"class.blink::InheritedSizeListChecker"*)***
  %108 = load void (%"class.blink::InheritedSizeListChecker"*)**, void (%"class.blink::InheritedSizeListChecker"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::InheritedSizeListChecker"*)*, void (%"class.blink::InheritedSizeListChecker"*)** %108, i64 1
  %110 = load void (%"class.blink::InheritedSizeListChecker"*)*, void (%"class.blink::InheritedSizeListChecker"*)** %109, align 8
  call void %110(%"class.blink::InheritedSizeListChecker"* nonnull %104) #11
  br label %111

111:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %112 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 2, i32 0
  %113 = bitcast %"class.blink::ComputedStyle"** %112 to %"class.blink::ComputedStyleBase"**
  %114 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %116, i64 0, i32 2, i32 0, i32 0
  %118 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %118, i64 0, i32 6
  %120 = load float, float* %119, align 8
  call void @_ZN5blink15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* sret %0, %"class.WTF::Vector"* nonnull dereferenceable(40) %5, float %120)
  %121 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %123, label %146, label %125, !prof !12

125:                                              ; preds = %111
  %126 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %124, align 8
  %127 = zext i32 %122 to i64
  %128 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %126, i64 %127
  br label %129

129:                                              ; preds = %142, %125
  %130 = phi %"struct.blink::FillSize"* [ %143, %142 ], [ %126, %125 ]
  %131 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %130, i64 0, i32 1, i32 1, i32 2
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 8
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %130, i64 0, i32 1, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %135) #11
  br label %136

136:                                              ; preds = %134, %129
  %137 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %130, i64 0, i32 1, i32 0, i32 2
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 8
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %130, i64 0, i32 1, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %141) #11
  br label %142

142:                                              ; preds = %140, %136
  %143 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %130, i64 1
  %144 = icmp eq %"struct.blink::FillSize"* %143, %128
  br i1 %144, label %145, label %129

145:                                              ; preds = %142
  store i32 0, i32* %121, align 4
  br label %146

146:                                              ; preds = %145, %111
  %147 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %124, align 8
  %148 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 1, i64 0
  %149 = bitcast i8* %148 to %"struct.blink::FillSize"*
  %150 = icmp eq %"struct.blink::FillSize"* %147, %149
  br i1 %150, label %153, label %151, !prof !11

151:                                              ; preds = %146
  %152 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %152, %"struct.blink::FillSize"* %147) #11
  br label %153

153:                                              ; preds = %146, %151
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink25SizeListPropertyFunctions11GetSizeListERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.WTF::Vector"* sret, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSSizeListInterpolationType"* nocapture readnone, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"* nocapture readnone, %"class.WTF::Vector.228"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink23MaybeConvertCSSSizeListERKNS_8CSSValueE(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSValue"* dereferenceable(3) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::CSSSizeListInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = tail call i8* @_Znwm(i64 48) #12, !noalias !40
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.base::internal::BindStateBase"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFN5blink26PairwiseInterpolationValueEONS2_18InterpolationValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !40
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (void (%"struct.blink::PairwiseInterpolationValue"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZN5blink26SizeInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i64), i64* %9, align 8, !noalias !40
  %10 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %6, i8** %10, align 8, !alias.scope !40
  call void @_ZN5blink26ListInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_NS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFNS_26PairwiseInterpolationValueES2_S2_EEE(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"struct.blink::InterpolationValue"* dereferenceable(16) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %3, i32 1, %"class.base::RepeatingCallback"* nonnull %5) #11
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  ret void
}

declare void @_ZN5blink26ListInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_NS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFNS_26PairwiseInterpolationValueES2_S2_EEE(%"struct.blink::PairwiseInterpolationValue"* sret, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #2

declare void @_ZN5blink26SizeInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* sret, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSSizeListInterpolationType"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %7 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8, !noalias !47
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4, !noalias !47
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %28

18:                                               ; preds = %11
  %19 = zext i32 %17 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !12

25:                                               ; preds = %18
  tail call void @llvm.trap() #11, !noalias !47
  unreachable

26:                                               ; preds = %18
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %16, align 4, !noalias !47
  br label %28

28:                                               ; preds = %26, %11
  %29 = phi i32 [ %27, %26 ], [ %17, %11 ]
  %30 = load atomic i32, i32* %12 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = add i32 %29, -1
  store i32 %34, i32* %16, align 4
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i32 [ %34, %33 ], [ %29, %28 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %39

39:                                               ; preds = %3, %35, %38
  call void @_ZN5blink25SizeListPropertyFunctions11GetSizeListERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.WTF::Vector"* nonnull sret %4, %"class.blink::CSSProperty"* dereferenceable(24) %7, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #11
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %43, i64 0, i32 6
  %45 = load float, float* %44, align 8
  call void @_ZN5blink15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* sret %0, %"class.WTF::Vector"* nonnull dereferenceable(40) %4, float %45)
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  br i1 %48, label %71, label %50, !prof !12

50:                                               ; preds = %39
  %51 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %49, align 8
  %52 = zext i32 %47 to i64
  %53 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %51, i64 %52
  br label %54

54:                                               ; preds = %67, %50
  %55 = phi %"struct.blink::FillSize"* [ %68, %67 ], [ %51, %50 ]
  %56 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 1, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #11
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #11
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 1
  %69 = icmp eq %"struct.blink::FillSize"* %68, %53
  br i1 %69, label %70, label %54

70:                                               ; preds = %67
  store i32 0, i32* %46, align 4
  br label %71

71:                                               ; preds = %70, %39
  %72 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %49, align 8
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 1, i64 0
  %74 = bitcast i8* %73 to %"struct.blink::FillSize"*
  %75 = icmp eq %"struct.blink::FillSize"* %72, %74
  br i1 %75, label %78, label %76, !prof !11

76:                                               ; preds = %71
  %77 = bitcast %"class.WTF::Vector"* %4 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %77, %"struct.blink::FillSize"* %72) #11
  br label %78

78:                                               ; preds = %71, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSSizeListInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback.1471", align 8
  %7 = alloca %"class.base::RepeatingCallback.1472", align 8
  %8 = alloca %"class.base::RepeatingCallback.1473", align 8
  %9 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %0, i64 0, i32 0, i32 0
  %10 = tail call i8* @_Znwm(i64 48) #12, !noalias !50
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !50
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i64*
  store i64 ptrtoint (i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)* @_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_ to i64), i64* %13, align 8, !noalias !50
  %14 = bitcast %"class.base::RepeatingCallback.1471"* %6 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !50
  %15 = tail call i8* @_Znwm(i64 48) #12, !noalias !57
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !57
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i64*
  store i64 ptrtoint (i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN5blink26SizeInterpolationFunctions34NonInterpolableValuesAreCompatibleEPKNS_20NonInterpolableValueES3_ to i64), i64* %18, align 8, !noalias !57
  %19 = bitcast %"class.base::RepeatingCallback.1472"* %7 to i8**
  store i8* %15, i8** %19, align 8, !alias.scope !57
  %20 = tail call i8* @_Znwm(i64 48) #12, !noalias !64
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRN5blink15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEJEEESC_E3RunEPNS0_13BindStateBaseES5_dS8_SB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRN5blink15UnderlyingValueEdRKNS2_17InterpolableValueEPKNS2_20NonInterpolableValueEEJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !64
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to i64*
  store i64 ptrtoint (void (%"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN5blink26SizeInterpolationFunctions9CompositeERNS_15UnderlyingValueEdRKNS_17InterpolableValueEPKNS_20NonInterpolableValueE to i64), i64* %23, align 8, !noalias !64
  %24 = bitcast %"class.base::RepeatingCallback.1473"* %8 to i8**
  store i8* %20, i8** %24, align 8, !alias.scope !64
  call void @_ZN5blink26ListInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueENS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFbPKNS_17InterpolableValueESE_EEENSB_IFbPKNS_20NonInterpolableValueESJ_EEENSB_IFvRNS_15UnderlyingValueEdRSD_SJ_EEE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40) %1, double %2, %"class.blink::InterpolationType"* dereferenceable(32) %9, %"struct.blink::InterpolationValue"* dereferenceable(16) %3, i32 1, %"class.base::RepeatingCallback.1471"* nonnull %6, %"class.base::RepeatingCallback.1472"* nonnull %7, %"class.base::RepeatingCallback.1473"* nonnull %8) #11
  %25 = getelementptr inbounds %"class.base::RepeatingCallback.1473", %"class.base::RepeatingCallback.1473"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #11
  %26 = getelementptr inbounds %"class.base::RepeatingCallback.1472", %"class.base::RepeatingCallback.1472"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11
  %27 = getelementptr inbounds %"class.base::RepeatingCallback.1471", %"class.base::RepeatingCallback.1471"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  ret void
}

declare void @_ZN5blink26ListInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueENS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFbPKNS_17InterpolableValueESE_EEENSB_IFbPKNS_20NonInterpolableValueESJ_EEENSB_IFvRNS_15UnderlyingValueEdRSD_SJ_EEE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.base::RepeatingCallback.1471"*, %"class.base::RepeatingCallback.1472"*, %"class.base::RepeatingCallback.1473"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_(%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZN5blink26SizeInterpolationFunctions34NonInterpolableValuesAreCompatibleEPKNS_20NonInterpolableValueES3_(%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*) #2

declare void @_ZN5blink26SizeInterpolationFunctions9CompositeERNS_15UnderlyingValueEdRKNS_17InterpolableValueEPKNS_20NonInterpolableValueE(%"class.blink::UnderlyingValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28CSSSizeListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSSizeListInterpolationType"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"struct.blink::FillSize", align 4
  %7 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableList"*
  %8 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 1
  %11 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.WTF::Vector"* %5 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %14, align 8
  %15 = icmp ugt i32 %9, 3
  %16 = zext i32 %10 to i64
  br i1 %15, label %17, label %25

17:                                               ; preds = %4
  %18 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FillSizeEEEmm(i64 %16) #11
  %19 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FillSizeEEEPKcv, i64 0, i64 0)) #11
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = udiv i64 %18, 20
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %14, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 %10, i32* %24, align 4
  br label %28

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 %10, i32* %26, align 4
  %27 = icmp eq i32 %10, 0
  br i1 %27, label %59, label %28

28:                                               ; preds = %25, %17
  %29 = phi i8* [ %19, %17 ], [ %12, %25 ]
  %30 = bitcast i8* %29 to %"struct.blink::FillSize"*
  %31 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %30, i64 %16
  br label %32

32:                                               ; preds = %32, %28
  %33 = phi %"struct.blink::FillSize"* [ %39, %32 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %33, i64 0, i32 0
  store i32 2, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %33, i64 0, i32 1
  %36 = bitcast %"class.blink::LengthSize"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 7, i1 false) #11
  %37 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %33, i64 0, i32 1, i32 1
  %38 = bitcast %"class.blink::Length"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 7, i1 false) #11
  %39 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %33, i64 1
  %40 = icmp eq %"struct.blink::FillSize"* %39, %31
  br i1 %40, label %41, label %32

41:                                               ; preds = %32
  %42 = icmp eq i32 %10, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %41
  %44 = bitcast %"struct.blink::FillSize"* %6 to i8*
  %45 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %46 = bitcast %"class.blink::InterpolableValue"* %45 to %"class.WTF::Vector.1474"*
  %47 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 1
  %48 = bitcast %"class.blink::NonInterpolableValue"* %47 to %"class.WTF::Vector.234"*
  %49 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  %50 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %6, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %6, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %6, i64 0, i32 1, i32 0, i32 2
  %53 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %51, i64 0, i32 0
  %54 = bitcast %"class.blink::LengthSize"* %51 to i64*
  %55 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %6, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %6, i64 0, i32 1, i32 1, i32 2
  %57 = bitcast %"class.blink::Length"* %55 to i64*
  %58 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %6, i64 0, i32 1, i32 0
  br label %128

59:                                               ; preds = %179, %25, %41
  %60 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %61 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8, !noalias !71
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %93, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4, !noalias !71
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %82

72:                                               ; preds = %65
  %73 = zext i32 %71 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #11
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !12

79:                                               ; preds = %72
  call void @llvm.trap() #11, !noalias !71
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %70, align 4, !noalias !71
  br label %82

82:                                               ; preds = %80, %65
  %83 = phi i32 [ %81, %80 ], [ %71, %65 ]
  %84 = load atomic i32, i32* %66 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = add i32 %83, -1
  store i32 %88, i32* %70, align 4
  br label %89

89:                                               ; preds = %87, %82
  %90 = phi i32 [ %88, %87 ], [ %83, %82 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #11
  br label %93

93:                                               ; preds = %59, %89, %92
  %94 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 2, i32 0
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %94, align 8
  call void @_ZN5blink25SizeListPropertyFunctions11SetSizeListERKNS_11CSSPropertyERNS_13ComputedStyleERKN3WTF6VectorINS_8FillSizeELj1ENS6_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24) %61, %"class.blink::ComputedStyle"* dereferenceable(104) %95, %"class.WTF::Vector"* nonnull dereferenceable(40) %5) #11
  %96 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %98, label %121, label %100, !prof !12

100:                                              ; preds = %93
  %101 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %99, align 8
  %102 = zext i32 %97 to i64
  %103 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %101, i64 %102
  br label %104

104:                                              ; preds = %117, %100
  %105 = phi %"struct.blink::FillSize"* [ %118, %117 ], [ %101, %100 ]
  %106 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %105, i64 0, i32 1, i32 1, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 8
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %105, i64 0, i32 1, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %110) #11
  br label %111

111:                                              ; preds = %109, %104
  %112 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %105, i64 0, i32 1, i32 0, i32 2
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %113, 8
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %105, i64 0, i32 1, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %116) #11
  br label %117

117:                                              ; preds = %115, %111
  %118 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %105, i64 1
  %119 = icmp eq %"struct.blink::FillSize"* %118, %103
  br i1 %119, label %120, label %104

120:                                              ; preds = %117
  store i32 0, i32* %96, align 4
  br label %121

121:                                              ; preds = %120, %93
  %122 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %99, align 8
  %123 = bitcast i8* %12 to %"struct.blink::FillSize"*
  %124 = icmp eq %"struct.blink::FillSize"* %122, %123
  br i1 %124, label %127, label %125, !prof !11

125:                                              ; preds = %121
  %126 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %126, %"struct.blink::FillSize"* %122) #11
  br label %127

127:                                              ; preds = %121, %125
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret void

128:                                              ; preds = %179, %43
  %129 = phi i32 [ 0, %43 ], [ %180, %179 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %44) #11
  %130 = shl nuw i32 %129, 1
  %131 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"* %46, i32 %130) #11
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %132, align 8
  %134 = call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* %48, i32 %130) #11
  %135 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %134, i64 0, i32 0
  %136 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %135, align 8
  %137 = or i32 %130, 1
  %138 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"* %46, i32 %137) #11
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %139, align 8
  %141 = call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* %48, i32 %137) #11
  %142 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %141, i64 0, i32 0
  %143 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %142, align 8
  call void @_ZN5blink26SizeInterpolationFunctions14CreateFillSizeERKNS_17InterpolableValueEPKNS_20NonInterpolableValueES3_S6_RKNS_25CSSToLengthConversionDataE(%"struct.blink::FillSize"* nonnull sret %6, %"class.blink::InterpolableValue"* dereferenceable(8) %133, %"class.blink::NonInterpolableValue"* %136, %"class.blink::InterpolableValue"* dereferenceable(8) %140, %"class.blink::NonInterpolableValue"* %143, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %49) #11
  %144 = call dereferenceable(20) %"struct.blink::FillSize"* @_ZN3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %5, i32 %129) #11
  %145 = load i32, i32* %50, align 4
  %146 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %144, i64 0, i32 0
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %144, i64 0, i32 1
  %148 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %147, i64 0, i32 0
  %149 = load i8, i8* %52, align 1
  %150 = icmp eq i8 %149, 8
  br i1 %150, label %151, label %152

151:                                              ; preds = %128
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %53) #11
  br label %152

152:                                              ; preds = %151, %128
  %153 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %144, i64 0, i32 1, i32 0, i32 2
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 8
  br i1 %155, label %156, label %157

156:                                              ; preds = %152
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %148) #11
  br label %157

157:                                              ; preds = %156, %152
  %158 = bitcast %"class.blink::LengthSize"* %147 to i64*
  %159 = load i64, i64* %54, align 4
  store i64 %159, i64* %158, align 4
  %160 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %144, i64 0, i32 1, i32 1
  %161 = load i8, i8* %56, align 1
  %162 = icmp eq i8 %161, 8
  br i1 %162, label %163, label %164

163:                                              ; preds = %157
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %55) #11
  br label %164

164:                                              ; preds = %163, %157
  %165 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %144, i64 0, i32 1, i32 1, i32 2
  %166 = load i8, i8* %165, align 1
  %167 = icmp eq i8 %166, 8
  br i1 %167, label %168, label %169

168:                                              ; preds = %164
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %160) #11
  br label %169

169:                                              ; preds = %164, %168
  %170 = bitcast %"class.blink::Length"* %160 to i64*
  %171 = load i64, i64* %57, align 4
  store i64 %171, i64* %170, align 4
  %172 = load i8, i8* %56, align 1
  %173 = icmp eq i8 %172, 8
  br i1 %173, label %174, label %175

174:                                              ; preds = %169
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %55) #11
  br label %175

175:                                              ; preds = %174, %169
  %176 = load i8, i8* %52, align 1
  %177 = icmp eq i8 %176, 8
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %58) #11
  br label %179

179:                                              ; preds = %175, %178
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %44) #11
  %180 = add nuw nsw i32 %129, 1
  %181 = icmp eq i32 %180, %10
  br i1 %181, label %59, label %128
}

declare void @_ZN5blink26SizeInterpolationFunctions14CreateFillSizeERKNS_17InterpolableValueEPKNS_20NonInterpolableValueES3_S6_RKNS_25CSSToLengthConversionDataE(%"struct.blink::FillSize"* sret, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN5blink25SizeListPropertyFunctions11SetSizeListERKNS_11CSSPropertyERNS_13ComputedStyleERKN3WTF6VectorINS_8FillSizeELj1ENS6_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector"* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !12

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28CSSSizeListInterpolationTypeD0Ev(%"class.blink::CSSSizeListInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !12

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSSizeListInterpolationType", %"class.blink::CSSSizeListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSSizeListInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.228"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.228"* dereferenceable(16) %6) #11
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.228"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.228"* dereferenceable(16) %6) #11
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #11
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #11
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #11
  %45 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #11
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #11
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #11
  %70 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #11
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #11
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.228"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.228"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !12

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #11
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !12

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #11
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.3"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3"* %0, i32 %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #11
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #11
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member"*
  %33 = icmp eq %"class.blink::Member"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #11
  %39 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %40 = icmp eq %"class.blink::Member"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #11
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #11
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !12

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #11
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !74
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = icmp eq %"class.blink::Member"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member"*
  %10 = icmp eq %"class.blink::Member"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !12

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #11
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #11
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #11
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.4"* %20, %"class.blink::Member"* %6) #11
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #11
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #11
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !11

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member"*
  %58 = icmp ne %"class.blink::Member"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #11
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #11
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.3"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #11
  %87 = load %"class.blink::Member"*, %"class.blink::Member"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member"*
  %90 = icmp eq %"class.blink::Member"* %87, %89
  br i1 %90, label %93, label %91, !prof !11

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.4"* %92, %"class.blink::Member"* %87) #11
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #11
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !12

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #11
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !12

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #11
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !12

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.4"*, %"class.blink::Member"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"struct.blink::FillSize"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"struct.blink::FillSize"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1474", %"class.WTF::Vector.1474"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1474", %"class.WTF::Vector.1474"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #11
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #11
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN5blink26SizeInterpolationFunctions19ConvertFillSizeSideERKNS_8FillSizeEfb(%"struct.blink::InterpolationValue"* sret, %"struct.blink::FillSize"* dereferenceable(20), float, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(20) %"struct.blink::FillSize"* @_ZNK3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %24, i64 %25
  ret %"struct.blink::FillSize"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1474"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1474", %"class.WTF::Vector.1474"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1474", %"class.WTF::Vector.1474"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD2Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, null
  br i1 %6, label %41, label %7, !prof !11

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !12

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #11
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.234"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  store %class.scoped_refptr* null, %class.scoped_refptr** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD0Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.234", %"class.WTF::Vector.234"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, null
  br i1 %6, label %41, label %7, !prof !11

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !12

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #11
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.234"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  br label %41

41:                                               ; preds = %1, %39
  %42 = bitcast %"class.blink::NonInterpolableList"* %0 to i8*
  tail call void @free(i8* %42) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink19NonInterpolableList7GetTypeEv(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink19NonInterpolableList12static_type_E, align 8
  ret i8* %2
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink26SizeInterpolationFunctions23MaybeConvertCSSSizeSideERKNS_8CSSValueEb(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25UnderlyingSizeListCheckerD2Ev(%"class.blink::UnderlyingSizeListChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingSizeListChecker", %"class.blink::UnderlyingSizeListChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink25UnderlyingSizeListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::UnderlyingSizeListChecker", %"class.blink::UnderlyingSizeListChecker"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::NonInterpolableList"*, %"class.blink::NonInterpolableList"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableList"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #11
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #11
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25UnderlyingSizeListCheckerD0Ev(%"class.blink::UnderlyingSizeListChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnderlyingSizeListChecker", %"class.blink::UnderlyingSizeListChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink25UnderlyingSizeListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::UnderlyingSizeListChecker", %"class.blink::UnderlyingSizeListChecker"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::NonInterpolableList"*, %"class.blink::NonInterpolableList"** %3, align 8
  %5 = icmp eq %"class.blink::NonInterpolableList"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #11
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::NonInterpolableValue"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::NonInterpolableValue"*)***
  %16 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %16, i64 1
  %18 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %17, align 8
  tail call void %18(%"class.blink::NonInterpolableValue"* nonnull %14) #11
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.blink::UnderlyingSizeListChecker"* %0 to i8*
  tail call void @free(i8* %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #11
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25UnderlyingSizeListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::UnderlyingSizeListChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %5 = bitcast %"class.blink::NonInterpolableValue"** %4 to %"class.blink::NonInterpolableList"**
  %6 = load %"class.blink::NonInterpolableList"*, %"class.blink::NonInterpolableList"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::UnderlyingSizeListChecker", %"class.blink::UnderlyingSizeListChecker"* %0, i64 0, i32 1, i32 0
  %10 = load %"class.blink::NonInterpolableList"*, %"class.blink::NonInterpolableList"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %8, %12
  br i1 %13, label %14, label %32

14:                                               ; preds = %3
  %15 = icmp eq i32 %8, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %6, i64 0, i32 1
  br label %20

18:                                               ; preds = %20
  %19 = icmp eq i32 %31, %8
  br i1 %19, label %32, label %20

20:                                               ; preds = %18, %16
  %21 = phi i32 [ 0, %16 ], [ %31, %18 ]
  %22 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* %17, i32 %21) #11
  %23 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 0, i32 0
  %24 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %23, align 8
  %25 = load %"class.blink::NonInterpolableList"*, %"class.blink::NonInterpolableList"** %9, align 8
  %26 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %25, i64 0, i32 1
  %27 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.234"* %26, i32 %21) #11
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink26SizeInterpolationFunctions34NonInterpolableValuesAreCompatibleEPKNS_20NonInterpolableValueES3_(%"class.blink::NonInterpolableValue"* %24, %"class.blink::NonInterpolableValue"* %29) #11
  %31 = add nuw i32 %21, 1
  br i1 %30, label %18, label %32

32:                                               ; preds = %20, %18, %14, %3
  %33 = phi i1 [ false, %3 ], [ true, %14 ], [ false, %20 ], [ true, %18 ]
  ret i1 %33
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25UnderlyingSizeListCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.228"*, %"class.std::__1::unique_ptr.239"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %16, align 8
  br i1 %15, label %18, label %45, !prof !11

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.231"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.231"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.231"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !11

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.228"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.231"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.231"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.239"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::UnderlyingSizeListChecker"* null, %"class.blink::UnderlyingSizeListChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.231"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN5blink26SizeInterpolationFunctions18CreateNeutralValueEPKNS_20NonInterpolableValueE(%"struct.blink::InterpolationValue"* sret, %"class.blink::NonInterpolableValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %6 = bitcast %"class.WTF::Vector"* %0 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %7, align 8
  %8 = icmp ugt i32 %4, 1
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FillSizeEEEmm(i64 %10) #11
  %12 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %11, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FillSizeEEEPKcv, i64 0, i64 0)) #11
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = udiv i64 %11, 20
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %7, align 8
  br label %17

17:                                               ; preds = %2, %9
  %18 = phi i8* [ %5, %2 ], [ %12, %9 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %58, label %28

28:                                               ; preds = %17
  %29 = bitcast i8* %18 to %"struct.blink::FillSize"*
  br label %30

30:                                               ; preds = %28, %54
  %31 = phi %"struct.blink::FillSize"* [ %55, %54 ], [ %29, %28 ]
  %32 = phi %"struct.blink::FillSize"* [ %56, %54 ], [ %23, %28 ]
  %33 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %33, align 4
  %36 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %32, i64 0, i32 1
  %38 = bitcast %"class.blink::LengthSize"* %37 to i64*
  %39 = bitcast %"class.blink::LengthSize"* %36 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 4
  %41 = and i64 %40, 280375465082880
  %42 = icmp eq i64 %41, 8796093022208
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %36, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %44) #11
  br label %45

45:                                               ; preds = %43, %30
  %46 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %31, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %32, i64 0, i32 1, i32 1
  %48 = bitcast %"class.blink::Length"* %47 to i64*
  %49 = bitcast %"class.blink::Length"* %46 to i64*
  %50 = load i64, i64* %48, align 4
  store i64 %50, i64* %49, align 4
  %51 = and i64 %50, 280375465082880
  %52 = icmp eq i64 %51, 8796093022208
  br i1 %52, label %53, label %54

53:                                               ; preds = %45
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %46) #11
  br label %54

54:                                               ; preds = %53, %45
  %55 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %31, i64 1
  %56 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %32, i64 1
  %57 = icmp eq %"struct.blink::FillSize"* %56, %26
  br i1 %57, label %58, label %30

58:                                               ; preds = %54, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24InheritedSizeListCheckerD2Ev(%"class.blink::InheritedSizeListChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24InheritedSizeListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  br i1 %6, label %29, label %8, !prof !12

8:                                                ; preds = %1
  %9 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %7, align 8
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %9, i64 %10
  br label %12

12:                                               ; preds = %25, %8
  %13 = phi %"struct.blink::FillSize"* [ %26, %25 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 1, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #11
  br label %19

19:                                               ; preds = %17, %12
  %20 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #11
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 1
  %27 = icmp eq %"struct.blink::FillSize"* %26, %11
  br i1 %27, label %28, label %12

28:                                               ; preds = %25
  store i32 0, i32* %4, align 4
  br label %29

29:                                               ; preds = %28, %1
  %30 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %7, align 8
  %31 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"struct.blink::FillSize"*
  %33 = icmp eq %"struct.blink::FillSize"* %30, %32
  br i1 %33, label %36, label %34, !prof !11

34:                                               ; preds = %29
  %35 = bitcast %"class.WTF::Vector"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %35, %"struct.blink::FillSize"* %30) #11
  br label %36

36:                                               ; preds = %29, %34
  store %"struct.blink::FillSize"* null, %"struct.blink::FillSize"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24InheritedSizeListCheckerD0Ev(%"class.blink::InheritedSizeListChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24InheritedSizeListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  br i1 %6, label %29, label %8, !prof !12

8:                                                ; preds = %1
  %9 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %7, align 8
  %10 = zext i32 %5 to i64
  %11 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %9, i64 %10
  br label %12

12:                                               ; preds = %25, %8
  %13 = phi %"struct.blink::FillSize"* [ %26, %25 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 1, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #11
  br label %19

19:                                               ; preds = %17, %12
  %20 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #11
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %13, i64 1
  %27 = icmp eq %"struct.blink::FillSize"* %26, %11
  br i1 %27, label %28, label %12

28:                                               ; preds = %25
  store i32 0, i32* %4, align 4
  br label %29

29:                                               ; preds = %28, %1
  %30 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %7, align 8
  %31 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"struct.blink::FillSize"*
  %33 = icmp eq %"struct.blink::FillSize"* %30, %32
  br i1 %33, label %36, label %34, !prof !11

34:                                               ; preds = %29
  %35 = bitcast %"class.WTF::Vector"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %35, %"struct.blink::FillSize"* %30) #11
  br label %36

36:                                               ; preds = %29, %34
  %37 = bitcast %"class.blink::InheritedSizeListChecker"* %0 to i8*
  tail call void @free(i8* %37) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24InheritedSizeListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::InheritedSizeListChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 1
  %7 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  call void @_ZN5blink25SizeListPropertyFunctions11GetSizeListERKNS_11CSSPropertyERKNS_13ComputedStyleE(%"class.WTF::Vector"* nonnull sret %4, %"class.blink::CSSProperty"* dereferenceable(24) %7, %"class.blink::ComputedStyle"* dereferenceable(104) %9) #11
  %10 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %45

15:                                               ; preds = %3
  %16 = icmp eq i32 %11, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  br label %71

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::InheritedSizeListChecker", %"class.blink::InheritedSizeListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %22, align 8
  %24 = zext i32 %11 to i64
  %25 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %21, i64 %24
  br label %26

26:                                               ; preds = %38, %19
  %27 = phi %"struct.blink::FillSize"* [ %40, %38 ], [ %23, %19 ]
  %28 = phi %"struct.blink::FillSize"* [ %39, %38 ], [ %21, %19 ]
  %29 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %27, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %28, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %27, i64 0, i32 1
  %37 = call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %35, %"class.blink::LengthSize"* dereferenceable(16) %36) #11
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %28, i64 1
  %40 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %27, i64 1
  %41 = icmp eq %"struct.blink::FillSize"* %39, %25
  br i1 %41, label %42, label %26

42:                                               ; preds = %38, %34, %26
  %43 = phi i1 [ false, %26 ], [ true, %38 ], [ false, %34 ]
  %44 = load i32, i32* %12, align 4
  br label %45

45:                                               ; preds = %42, %3
  %46 = phi i32 [ %13, %3 ], [ %44, %42 ]
  %47 = phi i1 [ false, %3 ], [ %43, %42 ]
  %48 = icmp eq i32 %46, 0
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  br i1 %48, label %71, label %50, !prof !12

50:                                               ; preds = %45
  %51 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %49, align 8
  %52 = zext i32 %46 to i64
  %53 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %51, i64 %52
  br label %54

54:                                               ; preds = %67, %50
  %55 = phi %"struct.blink::FillSize"* [ %68, %67 ], [ %51, %50 ]
  %56 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 1, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #11
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 0, i32 1, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #11
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %55, i64 1
  %69 = icmp eq %"struct.blink::FillSize"* %68, %53
  br i1 %69, label %70, label %54

70:                                               ; preds = %67
  store i32 0, i32* %12, align 4
  br label %71

71:                                               ; preds = %17, %70, %45
  %72 = phi %"struct.blink::FillSize"** [ %18, %17 ], [ %49, %70 ], [ %49, %45 ]
  %73 = phi i1 [ true, %17 ], [ %47, %70 ], [ %47, %45 ]
  %74 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %72, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 1, i64 0
  %76 = bitcast i8* %75 to %"struct.blink::FillSize"*
  %77 = icmp eq %"struct.blink::FillSize"* %74, %76
  br i1 %77, label %80, label %78, !prof !11

78:                                               ; preds = %71
  %79 = bitcast %"class.WTF::Vector"* %4 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %79, %"struct.blink::FillSize"* %74) #11
  br label %80

80:                                               ; preds = %71, %78
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FillSizeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"*, %"class.blink::LengthSize"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !74
  %13 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !74
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %90

16:                                               ; preds = %10
  %17 = icmp eq i8 %6, 12
  br i1 %17, label %46, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !74
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::LengthSize"* %0 to float*
  %24 = load float, float* %23, align 4
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi float [ %24, %22 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 2, !range !74
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::LengthSize"* %1 to float*
  %36 = load float, float* %35, align 4
  br label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi float [ %36, %34 ], [ %40, %37 ]
  %43 = fcmp oeq float %30, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %3, %"class.blink::Length"* dereferenceable(8) %4) #11
  br i1 %45, label %46, label %90

46:                                               ; preds = %16, %41, %44
  %47 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %90

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 4, !range !74
  %57 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 4, !range !74
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %90

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 3
  %64 = load i8, i8* %63, align 2, !range !74
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::Length"* %47 to float*
  %68 = load float, float* %67, align 4
  br label %73

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %47, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi float [ %68, %66 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 3
  %76 = load i8, i8* %75, align 2, !range !74
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::Length"* %48 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = fcmp oeq float %74, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %47, %"class.blink::Length"* dereferenceable(8) %48) #11
  br label %90

90:                                               ; preds = %2, %10, %88, %85, %60, %54, %46, %44
  %91 = phi i1 [ false, %44 ], [ false, %54 ], [ false, %46 ], [ true, %85 ], [ true, %60 ], [ %89, %88 ], [ false, %10 ], [ false, %2 ]
  ret i1 %91
}

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24InheritedSizeListCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.228"*, %"class.std::__1::unique_ptr.1465"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.228", %"class.WTF::Vector.228"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %16, align 8
  br i1 %15, label %18, label %45, !prof !11

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.231"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.231"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.231"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !11

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.228"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.228"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.231"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.231"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1465", %"class.std::__1::unique_ptr.1465"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1465"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::InheritedSizeListChecker"* null, %"class.blink::InheritedSizeListChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.231"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.base::internal::BindStateBase"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to void (%"struct.blink::PairwiseInterpolationValue"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**
  %7 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %6, align 8, !noalias !75
  tail call void %7(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"struct.blink::InterpolationValue"* dereferenceable(16) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %3) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFN5blink26PairwiseInterpolationValueEONS2_18InterpolationValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"class.base::internal::BindStateBase"*, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**
  %6 = load i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::InterpolableValue"* %1, %"class.blink::InterpolableValue"* %2) #11
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)**
  %6 = load i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)*, i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::NonInterpolableValue"* %1, %"class.blink::NonInterpolableValue"* %2) #11
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRN5blink15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEJEEESC_E3RunEPNS0_13BindStateBaseES5_dS8_SB_(%"class.base::internal::BindStateBase"*, %"class.blink::UnderlyingValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*) #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)**
  %8 = load void (%"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)*, void (%"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)** %7, align 8
  tail call void %8(%"class.blink::UnderlyingValue"* dereferenceable(8) %1, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %3, %"class.blink::NonInterpolableValue"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRN5blink15UnderlyingValueEdRKNS2_17InterpolableValueEPKNS2_20NonInterpolableValueEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(20) %"struct.blink::FillSize"* @_ZN3WTF6VectorIN5blink8FillSizeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::FillSize"*, %"struct.blink::FillSize"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::FillSize", %"struct.blink::FillSize"* %24, i64 %25
  ret %"struct.blink::FillSize"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNS_15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS2_18PartitionAllocatorEEEfE3$_0EENS_18InterpolationValueEjT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNS_15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS2_18PartitionAllocatorEEEfE3$_0EENS_18InterpolationValueEjT_"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!8 = !{!9, !3}
!9 = distinct !{!9, !10, !"_ZZN5blink15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS0_18PartitionAllocatorEEEfENK3$_0clEj: argument 0"}
!10 = distinct !{!10, !"_ZZN5blink15ConvertSizeListERKN3WTF6VectorINS_8FillSizeELj1ENS0_18PartitionAllocatorEEEfENK3$_0clEj"}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNS_23MaybeConvertCSSSizeListERKNS_8CSSValueEE3$_1EENS_18InterpolationValueEjT_: argument 0"}
!15 = distinct !{!15, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNS_23MaybeConvertCSSSizeListERKNS_8CSSValueEE3$_1EENS_18InterpolationValueEjT_"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!18 = distinct !{!18, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!19 = !{!20, !14}
!20 = distinct !{!20, !21, !"_ZZN5blink23MaybeConvertCSSSizeListERKNS_8CSSValueEENK3$_1clEj: argument 0"}
!21 = distinct !{!21, !"_ZZN5blink23MaybeConvertCSSSizeListERKNS_8CSSValueEENK3$_1clEj"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_28CSSSizeListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEEE3$_2EES3_jT_: argument 0"}
!24 = distinct !{!24, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_28CSSSizeListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEEE3$_2EES3_jT_"}
!25 = !{!26, !23}
!26 = distinct !{!26, !27, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!28 = !{!29, !23}
!29 = distinct !{!29, !30, !"_ZZNK5blink28CSSSizeListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEEENK3$_2clEj: argument 0"}
!30 = distinct !{!30, !"_ZZNK5blink28CSSSizeListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEEENK3$_2clEj"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!40 = !{!41, !43, !45}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base13BindRepeatingIRPFN5blink26PairwiseInterpolationValueEONS1_18InterpolationValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!44 = distinct !{!44, !"_ZN4base13BindRepeatingIRPFN5blink26PairwiseInterpolationValueEONS1_18InterpolationValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!45 = distinct !{!45, !46, !"_ZN3WTF13BindRepeatingIPFN5blink26PairwiseInterpolationValueEONS1_18InterpolationValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF13BindRepeatingIPFN5blink26PairwiseInterpolationValueEONS1_18InterpolationValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!50 = !{!51, !53, !55}
!51 = distinct !{!51, !52, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink17InterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink17InterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!53 = distinct !{!53, !54, !"_ZN4base13BindRepeatingIRPFbPKN5blink17InterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!54 = distinct !{!54, !"_ZN4base13BindRepeatingIRPFbPKN5blink17InterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!55 = distinct !{!55, !56, !"_ZN3WTF13BindRepeatingIPFbPKN5blink17InterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!56 = distinct !{!56, !"_ZN3WTF13BindRepeatingIPFbPKN5blink17InterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!57 = !{!58, !60, !62}
!58 = distinct !{!58, !59, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!60 = distinct !{!60, !61, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!61 = distinct !{!61, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!62 = distinct !{!62, !63, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!63 = distinct !{!63, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!64 = !{!65, !67, !69}
!65 = distinct !{!65, !66, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFvRN5blink15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEJEEEDcOT0_DpOT1_: argument 0"}
!66 = distinct !{!66, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFvRN5blink15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEJEEEDcOT0_DpOT1_"}
!67 = distinct !{!67, !68, !"_ZN4base13BindRepeatingIRPFvRN5blink15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!68 = distinct !{!68, !"_ZN4base13BindRepeatingIRPFvRN5blink15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!69 = distinct !{!69, !70, !"_ZN3WTF13BindRepeatingIPFvRN5blink15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEJESA_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!70 = distinct !{!70, !"_ZN3WTF13BindRepeatingIPFvRN5blink15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEJESA_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!73 = distinct !{!73, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!74 = !{i8 0, i8 2}
!75 = !{!76, !78, !80}
!76 = distinct !{!76, !77, !"_ZN4base8internal13FunctorTraitsIPFN5blink26PairwiseInterpolationValueEONS2_18InterpolationValueES5_EvE6InvokeIRKS7_JS4_S4_EEES3_OT_DpOT0_: argument 0"}
!77 = distinct !{!77, !"_ZN4base8internal13FunctorTraitsIPFN5blink26PairwiseInterpolationValueEONS2_18InterpolationValueES5_EvE6InvokeIRKS7_JS4_S4_EEES3_OT_DpOT0_"}
!78 = distinct !{!78, !79, !"_ZN4base8internal12InvokeHelperILb0EN5blink26PairwiseInterpolationValueEE8MakeItSoIRKPFS3_ONS2_18InterpolationValueES7_EJS6_S6_EEES3_OT_DpOT0_: argument 0"}
!79 = distinct !{!79, !"_ZN4base8internal12InvokeHelperILb0EN5blink26PairwiseInterpolationValueEE8MakeItSoIRKPFS3_ONS2_18InterpolationValueES7_EJS6_S6_EEES3_OT_DpOT0_"}
!80 = distinct !{!80, !81, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEES7_E7RunImplIRKS8_RKNSt3__15tupleIJEEEJEEES4_OT_OT0_NSE_16integer_sequenceImJXspT1_EEEES6_S6_: argument 0"}
!81 = distinct !{!81, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN5blink26PairwiseInterpolationValueEONS3_18InterpolationValueES6_EJEEES7_E7RunImplIRKS8_RKNSt3__15tupleIJEEEJEEES4_OT_OT0_NSE_16integer_sequenceImJXspT1_EEEES6_S6_"}
