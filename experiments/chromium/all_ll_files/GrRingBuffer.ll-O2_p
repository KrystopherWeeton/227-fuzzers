; ModuleID = '../../third_party/skia/src/gpu/GrRingBuffer.cpp'
source_filename = "../../third_party/skia/src/gpu/GrRingBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrRingBuffer = type { %class.GrGpu*, %class.sk_sp.136, %"class.std::__1::vector", i64, i64, i32, i64, i64, i64 }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %class.sk_sp.67, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.110", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.4", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.3 }
%class.sk_sp.3 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.14, %class.SkTArray.23, %class.SkTArray.25, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.7"*, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.25, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.26 }
%class.sk_sp.26 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.14 = type { %class.SkTHashTable.15 }
%class.SkTHashTable.15 = type { i32, i32, %class.SkAutoTArray.16 }
%class.SkAutoTArray.16 = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.145" }
%"struct.std::__1::pair.145" = type { i32, %class.SkTArray.146* }
%class.SkTArray.146 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.23 = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.146, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.25 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.39 }
%class.SkFibBlockSizes.39 = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.67 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.80, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.98, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.71, i8* }
%class.sk_sp.71 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.80 = type { %class.SkTHashTable.81 }
%class.SkTHashTable.81 = type { i32, i32, %class.SkAutoTArray.82 }
%class.SkAutoTArray.82 = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.89, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.89 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.96 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.96 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.97, void (i8*)*, i8* }
%class.SkNVRefCnt.97 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.98 = type { %class.SkTHashTable.99 }
%class.SkTHashTable.99 = type { i32, i32, %class.SkAutoTArray.100 }
%class.SkAutoTArray.100 = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp, %class.sk_sp.113, %class.sk_sp.113 }
%class.sk_sp.113 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.135 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.135 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.sk_sp.136 = type { %class.GrGpuBuffer* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.136*, %class.sk_sp.136*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.sk_sp.136* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI5sk_spI11GrGpuBufferENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN12GrRingBuffer19getAllocationOffsetEm(%class.GrRingBuffer* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = and i64 %9, %4
  %11 = and i64 %9, %6
  %12 = icmp ne i64 %4, %6
  %13 = icmp eq i64 %11, %10
  %14 = and i1 %12, %13
  br i1 %14, label %37, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %11, %10
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = sub i64 %8, %10
  %19 = icmp ult i64 %18, %1
  br i1 %19, label %20, label %27

20:                                               ; preds = %17
  %21 = icmp ult i64 %11, %1
  br i1 %21, label %37, label %22

22:                                               ; preds = %20
  %23 = add i64 %18, %4
  br label %27

24:                                               ; preds = %15
  %25 = sub i64 %11, %10
  %26 = icmp ult i64 %25, %1
  br i1 %26, label %37, label %27

27:                                               ; preds = %24, %17, %22
  %28 = phi i64 [ %23, %22 ], [ %4, %17 ], [ %4, %24 ]
  %29 = phi i64 [ 0, %22 ], [ %10, %17 ], [ %10, %24 ]
  %30 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %1, -1
  %33 = add i64 %32, %28
  %34 = add i64 %33, %31
  %35 = sub i64 0, %31
  %36 = and i64 %34, %35
  store i64 %36, i64* %3, align 8
  br label %37

37:                                               ; preds = %24, %2, %20, %27
  %38 = phi i64 [ %29, %27 ], [ %8, %20 ], [ %8, %2 ], [ %8, %24 ]
  ret i64 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { %class.GrGpuBuffer*, i64 } @_ZN12GrRingBuffer11suballocateEm(%class.GrRingBuffer*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.sk_sp.136, align 8
  %4 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %4, i64 0, i32 0
  %6 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %5, align 8
  %7 = icmp eq %class.GrGpuBuffer* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  br label %49

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 6
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 7
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  %19 = and i64 %18, %13
  %20 = and i64 %18, %15
  %21 = icmp ne i64 %13, %15
  %22 = icmp eq i64 %20, %19
  %23 = and i1 %21, %22
  br i1 %23, label %47, label %24

24:                                               ; preds = %11
  %25 = icmp ugt i64 %20, %19
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = sub i64 %17, %19
  %28 = icmp ult i64 %27, %1
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = icmp ult i64 %20, %1
  br i1 %30, label %47, label %31

31:                                               ; preds = %29
  %32 = add i64 %27, %13
  br label %36

33:                                               ; preds = %24
  %34 = sub i64 %20, %19
  %35 = icmp ult i64 %34, %1
  br i1 %35, label %47, label %36

36:                                               ; preds = %26, %31, %33
  %37 = phi i64 [ %32, %31 ], [ %13, %26 ], [ %13, %33 ]
  %38 = phi i64 [ 0, %31 ], [ %19, %26 ], [ %19, %33 ]
  %39 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %1, -1
  %42 = add i64 %41, %37
  %43 = add i64 %42, %40
  %44 = sub i64 0, %40
  %45 = and i64 %43, %44
  store i64 %45, i64* %12, align 8
  %46 = icmp ult i64 %38, %17
  br i1 %46, label %123, label %47

47:                                               ; preds = %36, %29, %11, %33
  %48 = shl i64 %17, 1
  store i64 %48, i64* %16, align 8
  br label %49

49:                                               ; preds = %8, %47
  %50 = phi i64 [ %10, %8 ], [ %48, %47 ]
  %51 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 0
  %52 = load %class.GrGpu*, %class.GrGpu** %51, align 8
  %53 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %52, i64 0, i32 5
  %54 = load %class.GrDirectContext*, %class.GrDirectContext** %53, align 8
  %55 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %54, i64 0, i32 6, i32 0, i32 0, i32 0
  %56 = load %class.GrResourceProvider*, %class.GrResourceProvider** %55, align 8
  %57 = bitcast %class.sk_sp.136* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %58 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 3
  %59 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 8
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.136* nonnull sret %3, %class.GrResourceProvider* %56, i64 %50, i32 %60, i32 0, i8* null) #9
  %61 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %3, i64 0, i32 0
  %62 = bitcast %class.sk_sp.136* %3 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %61, align 8
  %64 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %5, align 8
  %65 = bitcast %class.sk_sp.136* %4 to i64*
  store i64 %63, i64* %65, align 8
  %66 = icmp eq %class.GrGpuBuffer* %64, null
  br i1 %66, label %86, label %67

67:                                               ; preds = %49
  %68 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %64, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %68, i64 -1
  %74 = bitcast %class.GrIORef* %73 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %74, i32 0) #9
  br label %75

75:                                               ; preds = %67, %72
  %76 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %61, align 8
  %77 = icmp eq %class.GrGpuBuffer* %76, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %76, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %79, i64 -1
  %85 = bitcast %class.GrIORef* %84 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %85, i32 0) #9
  br label %86

86:                                               ; preds = %49, %75, %78, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  %87 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 2, i32 0, i32 1
  %88 = load %class.sk_sp.136*, %class.sk_sp.136** %87, align 8
  %89 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %90 = load %class.sk_sp.136*, %class.sk_sp.136** %89, align 8
  %91 = icmp eq %class.sk_sp.136* %88, %90
  br i1 %91, label %103, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %88, i64 0, i32 0
  %94 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %5, align 8
  %95 = icmp eq %class.GrGpuBuffer* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %94, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 1 monotonic
  br label %99

99:                                               ; preds = %96, %92
  store %class.GrGpuBuffer* %94, %class.GrGpuBuffer** %93, align 8
  %100 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %88, i64 1
  %101 = ptrtoint %class.sk_sp.136* %100 to i64
  %102 = bitcast %class.sk_sp.136** %87 to i64*
  store i64 %101, i64* %102, align 8
  br label %105

103:                                              ; preds = %86
  %104 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorI5sk_spI11GrGpuBufferENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %104, %class.sk_sp.136* dereferenceable(8) %4) #9
  br label %105

105:                                              ; preds = %99, %103
  %106 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 6
  %107 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 8
  %108 = bitcast i64* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false)
  %109 = load i64, i64* %107, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %107, align 8
  %111 = load i64, i64* %58, align 8
  %112 = icmp ult i64 %111, %1
  br i1 %112, label %120, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 4
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %1, -1
  %117 = add i64 %116, %115
  %118 = sub i64 0, %115
  %119 = and i64 %117, %118
  store i64 %119, i64* %106, align 8
  br label %120

120:                                              ; preds = %105, %113
  %121 = phi i64 [ 0, %113 ], [ %111, %105 ]
  %122 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %5, align 8
  br label %123

123:                                              ; preds = %36, %120
  %124 = phi %class.GrGpuBuffer* [ %122, %120 ], [ %6, %36 ]
  %125 = phi i64 [ %121, %120 ], [ %38, %36 ]
  %126 = insertvalue { %class.GrGpuBuffer*, i64 } undef, %class.GrGpuBuffer* %124, 0
  %127 = insertvalue { %class.GrGpuBuffer*, i64 } %126, i64 %125, 1
  ret { %class.GrGpuBuffer*, i64 } %127
}

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.136* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrRingBuffer11startSubmitEP5GrGpu(%class.GrRingBuffer*, %class.GrGpu*) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.sk_sp.136, align 8
  %4 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %class.sk_sp.136** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to %class.sk_sp.136*
  br i1 %10, label %18, label %12

12:                                               ; preds = %2
  %13 = bitcast %class.sk_sp.136* %3 to i64*
  %14 = bitcast %class.GrGpu* %1 to void (%class.GrGpu*, %class.sk_sp.136*)***
  %15 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %3, i64 0, i32 0
  br label %71

16:                                               ; preds = %92
  %17 = inttoptr i64 %96 to %class.sk_sp.136*
  br label %18

18:                                               ; preds = %16, %2
  %19 = phi i64 [ %7, %2 ], [ %95, %16 ]
  %20 = phi %class.sk_sp.136* [ %11, %2 ], [ %17, %16 ]
  %21 = inttoptr i64 %19 to %class.sk_sp.136*
  %22 = icmp eq %class.sk_sp.136* %20, %21
  br i1 %22, label %39, label %23

23:                                               ; preds = %18, %37
  %24 = phi %class.sk_sp.136* [ %25, %37 ], [ %21, %18 ]
  %25 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %24, i64 -1
  %26 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %25, i64 0, i32 0
  %27 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %26, align 8
  %28 = icmp eq %class.GrGpuBuffer* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %27, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 -1
  %36 = bitcast %class.GrIORef* %35 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %36, i32 0) #9
  br label %37

37:                                               ; preds = %34, %29, %23
  %38 = icmp eq %class.sk_sp.136* %25, %20
  br i1 %38, label %39, label %23

39:                                               ; preds = %37, %18
  store %class.sk_sp.136* %20, %class.sk_sp.136** %5, align 8
  %40 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 1
  %41 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %42 = load %class.sk_sp.136*, %class.sk_sp.136** %41, align 8
  %43 = icmp eq %class.sk_sp.136* %42, %20
  br i1 %43, label %55, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %20, i64 0, i32 0
  %46 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %40, i64 0, i32 0
  %47 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %46, align 8
  %48 = icmp eq %class.GrGpuBuffer* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %47, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %49, %44
  store %class.GrGpuBuffer* %47, %class.GrGpuBuffer** %45, align 8
  %53 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %20, i64 1
  %54 = ptrtoint %class.sk_sp.136* %53 to i64
  store i64 %54, i64* %6, align 8
  br label %56

55:                                               ; preds = %39
  call void @_ZNSt3__16vectorI5sk_spI11GrGpuBufferENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %4, %class.sk_sp.136* dereferenceable(8) %40) #9
  br label %56

56:                                               ; preds = %52, %55
  %57 = call i8* @_Znwm(i64 24) #10
  %58 = bitcast i8* %57 to %class.GrRingBuffer**
  store %class.GrRingBuffer* %0, %class.GrRingBuffer** %58, align 8
  %59 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 6
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %57, i64 8
  %62 = bitcast i8* %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %0, i64 0, i32 8
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 16
  %66 = bitcast i8* %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast %class.GrGpu* %1 to void (%class.GrGpu*, void (i8*)*, i8*)***
  %68 = load void (%class.GrGpu*, void (i8*)*, i8*)**, void (%class.GrGpu*, void (i8*)*, i8*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.GrGpu*, void (i8*)*, i8*)*, void (%class.GrGpu*, void (i8*)*, i8*)** %68, i64 17
  %70 = load void (%class.GrGpu*, void (i8*)*, i8*)*, void (%class.GrGpu*, void (i8*)*, i8*)** %69, align 8
  call void %70(%class.GrGpu* %1, void (i8*)* nonnull @_ZN12GrRingBuffer12FinishSubmitEPv, i8* nonnull %57) #9
  ret void

71:                                               ; preds = %12, %92
  %72 = phi %class.sk_sp.136* [ %11, %12 ], [ %100, %92 ]
  %73 = phi i64 [ 0, %12 ], [ %94, %92 ]
  %74 = phi i32 [ 0, %12 ], [ %93, %92 ]
  %75 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %72, i64 %73
  %76 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %75, i64 0, i32 0
  %77 = bitcast %class.sk_sp.136* %75 to i64*
  %78 = load i64, i64* %77, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %76, align 8
  store i64 %78, i64* %13, align 8
  %79 = load void (%class.GrGpu*, %class.sk_sp.136*)**, void (%class.GrGpu*, %class.sk_sp.136*)*** %14, align 8
  %80 = getelementptr inbounds void (%class.GrGpu*, %class.sk_sp.136*)*, void (%class.GrGpu*, %class.sk_sp.136*)** %79, i64 20
  %81 = load void (%class.GrGpu*, %class.sk_sp.136*)*, void (%class.GrGpu*, %class.sk_sp.136*)** %80, align 8
  call void %81(%class.GrGpu* %1, %class.sk_sp.136* nonnull %3) #9
  %82 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %15, align 8
  %83 = icmp eq %class.GrGpuBuffer* %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %71
  %85 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %82, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %85, i64 -1
  %91 = bitcast %class.GrIORef* %90 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %91, i32 0) #9
  br label %92

92:                                               ; preds = %71, %84, %89
  %93 = add i32 %74, 1
  %94 = zext i32 %93 to i64
  %95 = load i64, i64* %6, align 8
  %96 = load i64, i64* %8, align 8
  %97 = sub i64 %95, %96
  %98 = ashr exact i64 %97, 3
  %99 = icmp ugt i64 %98, %94
  %100 = inttoptr i64 %96 to %class.sk_sp.136*
  br i1 %99, label %71, label %16
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrRingBuffer12FinishSubmitEPv(i8*) #2 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %class.GrRingBuffer**
  %5 = load %class.GrRingBuffer*, %class.GrRingBuffer** %4, align 8
  %6 = icmp eq %class.GrRingBuffer* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8, i8* %0, i64 16
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %5, i64 0, i32 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %0, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.GrRingBuffer, %class.GrRingBuffer* %5, i64 0, i32 7
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %7, %14, %3
  tail call void @_ZdlPv(i8* nonnull %0) #10
  br label %20

20:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI11GrGpuBufferENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.136* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.136** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.136** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %class.sk_sp.136*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.136* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.136* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %37, i64 0, i32 0
  %41 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %1, i64 0, i32 0
  %42 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %41, align 8
  %43 = icmp eq %class.GrGpuBuffer* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %42, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %34, %44
  store %class.GrGpuBuffer* %42, %class.GrGpuBuffer** %40, align 8
  %48 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %37, i64 1
  %49 = ptrtoint %class.sk_sp.136* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %class.sk_sp.136*, %class.sk_sp.136** %50, align 8
  %52 = ptrtoint %class.sk_sp.136* %51 to i64
  %53 = load %class.sk_sp.136*, %class.sk_sp.136** %3, align 8
  %54 = icmp eq %class.sk_sp.136* %53, %51
  br i1 %54, label %136, label %55

55:                                               ; preds = %47
  %56 = getelementptr %class.sk_sp.136, %class.sk_sp.136* %53, i64 -1, i32 0
  %57 = ptrtoint %class.GrGpuBuffer** %56 to i64
  %58 = sub i64 %57, %52
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %55, %63
  %64 = phi %class.sk_sp.136* [ %67, %63 ], [ %37, %55 ]
  %65 = phi %class.sk_sp.136* [ %68, %63 ], [ %53, %55 ]
  %66 = phi i64 [ %73, %63 ], [ %61, %55 ]
  %67 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %64, i64 -1
  %68 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %65, i64 -1
  %69 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %68, i64 0, i32 0
  %70 = bitcast %class.sk_sp.136* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %69, align 8
  %72 = bitcast %class.sk_sp.136* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !2

75:                                               ; preds = %63, %55
  %76 = phi %class.sk_sp.136* [ undef, %55 ], [ %67, %63 ]
  %77 = phi %class.sk_sp.136* [ %37, %55 ], [ %67, %63 ]
  %78 = phi %class.sk_sp.136* [ %53, %55 ], [ %68, %63 ]
  %79 = icmp ult i64 %58, 56
  br i1 %79, label %132, label %80

80:                                               ; preds = %75, %80
  %81 = phi %class.sk_sp.136* [ %125, %80 ], [ %77, %75 ]
  %82 = phi %class.sk_sp.136* [ %126, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -1
  %84 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -1
  %85 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %84, i64 0, i32 0
  %86 = bitcast %class.sk_sp.136* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %85, align 8
  %88 = bitcast %class.sk_sp.136* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -2
  %90 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -2
  %91 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %90, i64 0, i32 0
  %92 = bitcast %class.sk_sp.136* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %91, align 8
  %94 = bitcast %class.sk_sp.136* %89 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -3
  %96 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -3
  %97 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %96, i64 0, i32 0
  %98 = bitcast %class.sk_sp.136* %96 to i64*
  %99 = load i64, i64* %98, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %97, align 8
  %100 = bitcast %class.sk_sp.136* %95 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -4
  %102 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -4
  %103 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %102, i64 0, i32 0
  %104 = bitcast %class.sk_sp.136* %102 to i64*
  %105 = load i64, i64* %104, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %103, align 8
  %106 = bitcast %class.sk_sp.136* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -5
  %108 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -5
  %109 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %108, i64 0, i32 0
  %110 = bitcast %class.sk_sp.136* %108 to i64*
  %111 = load i64, i64* %110, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %109, align 8
  %112 = bitcast %class.sk_sp.136* %107 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -6
  %114 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -6
  %115 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %114, i64 0, i32 0
  %116 = bitcast %class.sk_sp.136* %114 to i64*
  %117 = load i64, i64* %116, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %115, align 8
  %118 = bitcast %class.sk_sp.136* %113 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -7
  %120 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -7
  %121 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %120, i64 0, i32 0
  %122 = bitcast %class.sk_sp.136* %120 to i64*
  %123 = load i64, i64* %122, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %121, align 8
  %124 = bitcast %class.sk_sp.136* %119 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %81, i64 -8
  %126 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %82, i64 -8
  %127 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %126, i64 0, i32 0
  %128 = bitcast %class.sk_sp.136* %126 to i64*
  %129 = load i64, i64* %128, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %127, align 8
  %130 = bitcast %class.sk_sp.136* %125 to i64*
  store i64 %129, i64* %130, align 8
  %131 = icmp eq %class.sk_sp.136* %126, %51
  br i1 %131, label %132, label %80

132:                                              ; preds = %80, %75
  %133 = phi %class.sk_sp.136* [ %76, %75 ], [ %125, %80 ]
  %134 = load i64, i64* %6, align 8
  %135 = load %class.sk_sp.136*, %class.sk_sp.136** %3, align 8
  br label %136

136:                                              ; preds = %47, %132
  %137 = phi %class.sk_sp.136* [ %135, %132 ], [ %51, %47 ]
  %138 = phi %class.sk_sp.136* [ %133, %132 ], [ %37, %47 ]
  %139 = phi i64 [ %134, %132 ], [ %52, %47 ]
  %140 = ptrtoint %class.sk_sp.136* %138 to i64
  store i64 %140, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %141 = inttoptr i64 %139 to %class.sk_sp.136*
  %142 = icmp eq %class.sk_sp.136* %137, %141
  br i1 %142, label %159, label %143

143:                                              ; preds = %136, %157
  %144 = phi %class.sk_sp.136* [ %145, %157 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %144, i64 -1
  %146 = getelementptr inbounds %class.sk_sp.136, %class.sk_sp.136* %145, i64 0, i32 0
  %147 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %146, align 8
  %148 = icmp eq %class.GrGpuBuffer* %147, null
  br i1 %148, label %157, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %147, i64 0, i32 0, i32 1
  %151 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw add i32* %151, i32 -1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %150, i64 -1
  %156 = bitcast %class.GrIORef* %155 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %156, i32 0) #9
  br label %157

157:                                              ; preds = %154, %149, %143
  %158 = icmp eq %class.sk_sp.136* %145, %141
  br i1 %158, label %159, label %143

159:                                              ; preds = %157, %136
  %160 = icmp eq i64 %139, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %162) #10
  br label %163

163:                                              ; preds = %159, %161
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
